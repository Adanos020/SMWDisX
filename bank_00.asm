                      ORG $008000                         ;;                   ;
                                                          ;;                   ;
I_RESET:              SEI                                 ;;8000|----/----\----; Disable interrupts 
                      STZ.W !HW_NMITIMEN                  ;;8001|----/----\----; Clear NMI and V/H Count, disable joypad ; NMI, V/H Count, and Joypad Enable
                      STZ.W !HW_HDMAEN                    ;;8004|----/----\----; Disable HDMA ; H-DMA Channel Enable
                      STZ.W !HW_MDMAEN                    ;;8007|----/----\----; Disable DMA ; Regular DMA Channel Enable
                      STZ.W !HW_APUIO0                    ;;800A|----/----\----; \ ; APU I/O Port
                      STZ.W !HW_APUIO1                    ;;800D|----/----\----;  |Clear APU I/O ports 1-4 ; APU I/O Port
                      STZ.W !HW_APUIO2                    ;;8010|----/----\----;  | ; APU I/O Port
                      STZ.W !HW_APUIO3                    ;;8013|----/----\----; / ; APU I/O Port
                      LDA.B #$80                          ;;8016|----/----\----; \ Turn off screen 
                      STA.W !HW_INIDISP                   ;;8018|----/----\----; / ; Screen Display Register
                      CLC                                 ;;801B|----/----\----; \ Turn off emulation mode 
                      XCE                                 ;;801C|----/----\----; /  
                      REP #$38                            ;;801D|----/----\----; 16 bit A,X,Y, Decimal mode off ; Index (16 bit) Accum (16 bit) 
                      LDA.W #$0000                        ;;801F|----/----\----; \ Set direct page 
                      TCD                                 ;;8022|----/----\----; /  
                      LDA.W #$01FF                        ;;8023|----/----\----; \ Set stack location 
                      TCS                                 ;;8026|----/----\----; /  
                      LDA.W #$F0A9                        ;;8027|----/----\----; \  
                      STA.L !OAMResetRoutine              ;;802A|----/----\----;  | 
                      LDX.W #$017D                        ;;802E|----/----\----;  | 
                      LDY.W #$03FD                        ;;8031|----/----\----;  | 
                    - LDA.W #$008D                        ;;8034|----/----\----;  | 
                      STA.L !OAMResetRoutine+2,X          ;;8037|----/----\----;  | 
                      TYA                                 ;;803B|----/----\----;  | 
                      STA.L !OAMResetRoutine+3,X          ;;803C|----/----\----;  |Create routine in RAM 
                      SEC                                 ;;8040|----/----\----;  | 
                      SBC.W #$0004                        ;;8041|----/----\----;  | 
                      TAY                                 ;;8044|----/----\----;  | 
                      DEX                                 ;;8045|----/----\----;  | 
                      DEX                                 ;;8046|----/----\----;  | 
                      DEX                                 ;;8047|----/----\----;  | 
                      BPL -                               ;;8048|----/----\----;  | 
                      SEP #$30                            ;;804A|----/----\----;  | ; Index (8 bit) Accum (8 bit) 
                      LDA.B #$6B                          ;;804C|----/----\----;  | 
                      STA.L !OAMResetRoutine+$182         ;;804E|----/----\----; / 
                      JSR UploadSPCEngine                 ;;8052|----/----\----; SPC700 Bank 02 + Main code upload handler 
                      STZ.W !GameMode                     ;;8055|----/----\----; Set game mode to 0 
                      STZ.W !OverworldOverride            ;;8058|----/----\----; Set secondary game mode to 0 
                      JSR ClearStack                      ;;805B|----/----\----;
                      JSR UploadSamples                   ;;805E|----/----\----;
                      JSR CODE_009250                     ;;8061|----/----\----;
                      LDA.B #$03                          ;;8064|----/----\----; \ Set OAM Size and Data Area Designation to x03 
                      STA.W !HW_OBJSEL                    ;;8066|----/----\----; /  ; OAM Size and Data Area Designation
                      INC.B !LagFlag                      ;;8069|----/----\----; Skip the following loop 
                    - LDA.B !LagFlag                      ;;806B|----/----\----;  |Loop until the interrupt routine sets $10 
                      BEQ -                               ;;806D|----/----\----; / to a non-zero value. 
                      CLI                                 ;;806F|----/----\----; Enable interrupts 
                      INC.B !TrueFrame                    ;;8070|----/----\----; Increase frame number 
                      JSR GetGameMode                     ;;8072|----/----\----; The actual game 
                      STZ.B !LagFlag                      ;;8075|----/----\----; \ Wait for interrupt 
                      BRA -                               ;;8077|----/----\----; /  
                                                          ;;                   ;
SPC700UploadLoop:     PHP                                 ;;8079|----/----\----;
                      REP #$30                            ;;807A|----/----\----; Index (16 bit) Accum (16 bit) 
                      LDY.W #$0000                        ;;807C|----/----\----;
                      LDA.W #$BBAA                        ;;807F|----/----\----;
                    - CMP.W !HW_APUIO0                    ;;8082|----/----\----; APU I/O Port
                      BNE -                               ;;8085|----/----\----;
                      SEP #$20                            ;;8087|----/----\----; Accum (8 bit) 
                      LDA.B #$CC                          ;;8089|----/----\----; Load byte to start transfer 
                      BRA CODE_0080B3                     ;;808B|----/----\----;
                                                          ;;                   ;
CODE_00808D:          LDA.B [!_0],Y                       ;;808D|----/----\----;
                      INY                                 ;;808F|----/----\----;
                      XBA                                 ;;8090|----/----\----;
                      LDA.B #$00                          ;;8091|----/----\----;
                      BRA CODE_0080A0                     ;;8093|----/----\----;
                                                          ;;                   ;
CODE_008095:          XBA                                 ;;8095|----/----\----;
                      LDA.B [!_0],Y                       ;;8096|----/----\----;
                      INY                                 ;;8098|----/----\----;
                      XBA                                 ;;8099|----/----\----;
                    - CMP.W !HW_APUIO0                    ;;809A|----/----\----; APU I/O Port
                      BNE -                               ;;809D|----/----\----;
                      INC A                               ;;809F|----/----\----;
CODE_0080A0:          REP #$20                            ;;80A0|----/----\----; Accum (16 bit) 
                      STA.W !HW_APUIO0                    ;;80A2|----/----\----; APU I/O Port
                      SEP #$20                            ;;80A5|----/----\----; Accum (8 bit) 
                      DEX                                 ;;80A7|----/----\----;
                      BNE CODE_008095                     ;;80A8|----/----\----;
                    - CMP.W !HW_APUIO0                    ;;80AA|----/----\----; APU I/O Port
                      BNE -                               ;;80AD|----/----\----;
                    - ADC.B #$03                          ;;80AF|----/----\----;
                      BEQ -                               ;;80B1|----/----\----;
CODE_0080B3:          PHA                                 ;;80B3|----/----\----;
                      REP #$20                            ;;80B4|----/----\----; Accum (16 bit) 
                      LDA.B [!_0],Y                       ;;80B6|----/----\----;
                      INY                                 ;;80B8|----/----\----;
                      INY                                 ;;80B9|----/----\----;
                      TAX                                 ;;80BA|----/----\----;
                      LDA.B [!_0],Y                       ;;80BB|----/----\----;
                      INY                                 ;;80BD|----/----\----;
                      INY                                 ;;80BE|----/----\----;
                      STA.W !HW_APUIO2                    ;;80BF|----/----\----; APU I/O Port
                      SEP #$20                            ;;80C2|----/----\----; Accum (8 bit) 
                      CPX.W #$0001                        ;;80C4|----/----\----;
                      LDA.B #$00                          ;;80C7|----/----\----;
                      ROL A                               ;;80C9|----/----\----;
                      STA.W !HW_APUIO1                    ;;80CA|----/----\----; APU I/O Port
                      ADC.B #$7F                          ;;80CD|----/----\----;
                      PLA                                 ;;80CF|----/----\----;
                      STA.W !HW_APUIO0                    ;;80D0|----/----\----; APU I/O Port
                    - CMP.W !HW_APUIO0                    ;;80D3|----/----\----; APU I/O Port
                      BNE -                               ;;80D6|----/----\----;
                      BVS CODE_00808D                     ;;80D8|----/----\----;
                      STZ.W !HW_APUIO0                    ;;80DA|----/----\----; APU I/O Port
                      STZ.W !HW_APUIO1                    ;;80DD|----/----\----; APU I/O Port
                      STZ.W !HW_APUIO2                    ;;80E0|----/----\----; APU I/O Port
                      STZ.W !HW_APUIO3                    ;;80E3|----/----\----; APU I/O Port
                      PLP                                 ;;80E6|----/----\----;
                      RTS                                 ;;80E7|----/----\----;
                                                          ;;                   ;
UploadSPCEngine:      LDA.B #$00                          ;;80E8|----/----\----; \ this address (0E:8000) is the start of the SPC engine 
                      STA.W !_0                           ;;80EA|----/----\----;  | instrument settings/sound effect data 
                      LDA.B #$80                          ;;80ED|----/----\----;  | AND the code used for all music banks. 
                      STA.W !_1                           ;;80EF|----/----\----;  | 
                      LDA.B #$0E                          ;;80F2|----/----\----;  | 
                      STA.W !_2                           ;;80F4|----/----\----; /  
UploadDataToSPC:      SEI                                 ;;80F7|----/----\----;
                      JSR SPC700UploadLoop                ;;80F8|----/----\----;
                      CLI                                 ;;80FB|----/----\----;
                      RTS                                 ;;80FC|----/----\----;
                                                          ;;                   ;
UploadSamples:        LDA.B #$00                          ;;80FD|----/----\----; \    Index (8 bit) ; Index (8 bit) 
                      STA.W !_0                           ;;80FF|----/----\----;  | 
                      LDA.B #$80                          ;;8102|----/----\----;  |Loads The Address 0F:8000 to 00-02 	(SAMPLE DATA + PTRS)
                      STA.W !_1                           ;;8104|----/----\----;  |[SPC Sample Pointers/Data ROM Address, this is] 
                      LDA.B #$0F                          ;;8107|----/----\----;  | 
                      STA.W !_2                           ;;8109|----/----\----; /  
                      BRA StrtSPCMscUpld                  ;;810C|----/----\----;
                                                          ;;                   ;
UploadMusicBank1:     LDA.B #$B1                          ;;810E|----/----\----; \ 
                      STA.W !_0                           ;;8110|----/----\----;  | 
                      LDA.B #$98                          ;;8113|----/----\----;  |Loads the Bank 1 music data (Map) to 00-02 
                      STA.W !_1                           ;;8115|----/----\----;  | ($0E:98B1) 
                      LDA.B #$0E                          ;;8118|----/----\----;  | 
                      STA.W !_2                           ;;811A|----/----\----; /  
StrtSPCMscUpld:       LDA.B #$FF                          ;;811D|----/----\----;
                      STA.W !HW_APUIO1                    ;;811F|----/----\----; APU I/O Port
                      JSR UploadDataToSPC                 ;;8122|----/----\----;
                      LDX.B #$03                          ;;8125|----/----\----;
                    - STZ.W !HW_APUIO0,X                  ;;8127|----/----\----;
                      STZ.W !SPCIO0,X                     ;;812A|----/----\----;
                      STZ.W !Empty1DFD,X                  ;;812D|----/----\----;
                      DEX                                 ;;8130|----/----\----;
                      BPL -                               ;;8131|----/----\----;
Return008133:         RTS                                 ;;8133|----/----\----;
                                                          ;;                   ;
CODE_008134:          LDA.W !BonusGameActivate            ;;8134|----/----\----;
                      BNE UploadMusicBank2                ;;8137|----/----\----;
                      LDA.W !OverworldOverride            ;;8139|----/----\----;
                      CMP.B #$E9                          ;;813C|----/----\----;
                      BEQ UploadMusicBank2                ;;813E|----/----\----;
                      ORA.W !SublevelCount                ;;8140|----/----\----;
                      ORA.W !ShowMarioStart               ;;8143|----/----\----;
                      BNE Return008133                    ;;8146|----/----\----;
UploadMusicBank2:     LDA.B #$D6                          ;;8148|----/----\----; \ 
                      STA.W !_0                           ;;814A|----/----\----;  |Loads the Bank 2 music address(Levels) 
                      LDA.B #$AE                          ;;814D|----/----\----;  | (0E:AED6) 
                      STA.W !_1                           ;;814F|----/----\----;  | 
                      LDA.B #$0E                          ;;8152|----/----\----;  | 
                      STA.W !_2                           ;;8154|----/----\----; / 
                      BRA StrtSPCMscUpld                  ;;8157|----/----\----;
                                                          ;;                   ;
UploadMusicBank3:     LDA.B #$00                          ;;8159|----/----\----; \ 
                      STA.W !_0                           ;;815B|----/----\----;  |Bank 3 music(Ending) ROM address 
                      LDA.B #$E4                          ;;815E|----/----\----;  | 
                      STA.W !_1                           ;;8160|----/----\----;  | ($03:E400) 
                      LDA.B #$03                          ;;8163|----/----\----;  | 
                      STA.W !_2                           ;;8165|----/----\----; / 
                      BRA StrtSPCMscUpld                  ;;8168|----/----\----;
                                                          ;;                   ;
                                                          ;;                   ;
I_NMI:                SEI                                 ;;816A|----/----\----; Looks like this might be the NMI routine here. That is correct. 
                      PHP                                 ;;816B|----/----\----; I thought it was, just from the address, but I wasn't too sure. 
                      REP #$30                            ;;816C|----/----\----; Index (16 bit) Accum (16 bit) 
                      PHA                                 ;;816E|----/----\----;
                      PHX                                 ;;816F|----/----\----;
                      PHY                                 ;;8170|----/----\----;
                      PHB                                 ;;8171|----/----\----;
                      PHK                                 ;;8172|----/----\----;
                      PLB                                 ;;8173|----/----\----;
                      SEP #$30                            ;;8174|----/----\----; 8 bit A,X,Y ; Index (8 bit) Accum (8 bit) 
                      LDA.W !HW_RDNMI                     ;;8176|----/----\----; Load "NMI Enable."  This has the effect of clearing the Interrupt, so that ; NMI Enable
                      LDA.W !SPCIO2                       ;;8179|----/----\----; \  
                      BNE CODE_008186                     ;;817C|----/----\----;  | 
                      LDY.W !HW_APUIO2                    ;;817E|----/----\----;  | ; APU I/O Port
                      CPY.W !LastUsedMusic                ;;8181|----/----\----;  |Update SPC700 I/O port 2 
                      BNE +                               ;;8184|----/----\----;  | 
CODE_008186:          STA.W !HW_APUIO2                    ;;8186|----/----\----;  | ; APU I/O Port
                      STA.W !LastUsedMusic                ;;8189|----/----\----;  | 
                      STZ.W !SPCIO2                       ;;818C|----/----\----;  | 
                    + LDA.W !SPCIO0                       ;;818F|----/----\----; \  
                      STA.W !HW_APUIO0                    ;;8192|----/----\----;  | ; APU I/O Port
                      LDA.W !SPCIO1                       ;;8195|----/----\----;  | 
                      STA.W !HW_APUIO1                    ;;8198|----/----\----;  |Update SPC700 I/O ports 0, 1 and 3 ; APU I/O Port
                      LDA.W !SPCIO3                       ;;819B|----/----\----;  | 
                      STA.W !HW_APUIO3                    ;;819E|----/----\----;  | ; APU I/O Port
                      STZ.W !SPCIO0                       ;;81A1|----/----\----;  | 
                      STZ.W !SPCIO1                       ;;81A4|----/----\----;  | 
                      STZ.W !SPCIO3                       ;;81A7|----/----\----; /  
                      LDA.B #$80                          ;;81AA|----/----\----; \ Screen off, brightness=0 
                      STA.W !HW_INIDISP                   ;;81AC|----/----\----; / ; Screen Display Register
                      STZ.W !HW_HDMAEN                    ;;81AF|----/----\----; Zero The HDMA reg ; H-DMA Channel Enable
                      LDA.B !Layer12Window                ;;81B2|----/----\----;
                      STA.W !HW_W12SEL                    ;;81B4|----/----\----; BG 1 and 2 Window Mask Settings
                      LDA.B !Layer34Window                ;;81B7|----/----\----;
                      STA.W !HW_W34SEL                    ;;81B9|----/----\----; BG 3 and 4 Window Mask Settings
                      LDA.B !OBJCWWindow                  ;;81BC|----/----\----;
                      STA.W !HW_WOBJSEL                   ;;81BE|----/----\----; OBJ and Color Window Settings
                      LDA.B !ColorAddition                ;;81C1|----/----\----;
                      STA.W !HW_CGSWSEL                   ;;81C3|----/----\----; Initial Settings for Color Addition
                      LDA.W !IRQNMICommand                ;;81C6|----/----\----; \  
                      BPL +                               ;;81C9|----/----\----;  |If in a "Special level", 
                      JMP CODE_0082C4                     ;;81CB|----/----\----;  |jump to $82C4 
                                                          ;;                   ;
                    + LDA.B !ColorSettings                ;;81CE|----/----\----; \ Get the CGADSUB byte... 
                      AND.B #$FB                          ;;81D0|----/----\----;  |Get the Add/Subtract Select and Enable part... 
                      STA.W !HW_CGADSUB                   ;;81D2|----/----\----; / ...and store it to the A/SSaE register... ; Add/Subtract Select and Enable
                      LDA.B #$09                          ;;81D5|----/----\----; \ 8x8 tiles, Graphics mode 1 
                      STA.W !HW_BGMODE                    ;;81D7|----/----\----; /  ; BG Mode and Tile Size Setting
                      LDA.B !LagFlag                      ;;81DA|----/----\----; \ If there isn't any lag, 
                      BEQ CODE_0081E7                     ;;81DC|----/----\----; / branch to $81E7 
                      LDA.W !IRQNMICommand                ;;81DE|----/----\----; \  
                      LSR A                               ;;81E1|----/----\----;  |If not on a special level, branch to NMINotSpecialLv 
                      BEQ NMINotSpecialLv                 ;;81E2|----/----\----; /  
                      JMP CODE_00827A                     ;;81E4|----/----\----;
                                                          ;;                   ;
CODE_0081E7:          INC.B !LagFlag                      ;;81E7|----/----\----;
                      JSR CODE_00A488                     ;;81E9|----/----\----;
                      LDA.W !IRQNMICommand                ;;81EC|----/----\----;
                      LSR A                               ;;81EF|----/----\----;
                      BNE CODE_008222                     ;;81F0|----/----\----;
                      BCS +                               ;;81F2|----/----\----;
                      JSR DrawStatusBar                   ;;81F4|----/----\----;
                    + LDA.W !CutsceneID                   ;;81F7|----/----\----; \  
                      CMP.B #$08                          ;;81FA|----/----\----;  |If the current cutscene isn't the ending, 
                      BNE CODE_008209                     ;;81FC|----/----\----; / branch to $8209 
                      LDA.W !CreditsUpdateBG              ;;81FE|----/----\----; \  
                      BEQ CODE_00821A                     ;;8201|----/----\----;  |Related to reloading the palettes when switching 
                      JSL CODE_0C9567                     ;;8203|----/----\----;  |to another background during the credits. 
                      BRA CODE_00821A                     ;;8207|----/----\----; /  
                                                          ;;                   ;
CODE_008209:          JSL CODE_0087AD                     ;;8209|----/----\----;
                      LDA.W !UploadMarioStart             ;;820D|----/----\----;
                      BEQ CODE_008217                     ;;8210|----/----\----;
                      JSR CODE_00A7C2                     ;;8212|----/----\----;
                      BRA CODE_00823D                     ;;8215|----/----\----;
                                                          ;;                   ;
CODE_008217:          JSR CODE_00A390                     ;;8217|----/----\----;
CODE_00821A:          JSR CODE_00A436                     ;;821A|----/----\----;
                      JSR MarioGFXDMA                     ;;821D|----/----\----;
                      BRA CODE_00823D                     ;;8220|----/----\----;
                                                          ;;                   ;
CODE_008222:          LDA.W !OverworldProcess             ;;8222|----/----\----;
                      CMP.B #$0A                          ;;8225|----/----\----;
                      BNE CODE_008237                     ;;8227|----/----\----;
                      LDY.W !OWSubmapSwapProcess          ;;8229|----/----\----;
                      DEY                                 ;;822C|----/----\----;
                      DEY                                 ;;822D|----/----\----;
                      CPY.B #$04                          ;;822E|----/----\----;
                      BCS CODE_008237                     ;;8230|----/----\----;
                      JSR CODE_00A529                     ;;8232|----/----\----;
                      BRA +                               ;;8235|----/----\----;
                                                          ;;                   ;
CODE_008237:          JSR CODE_00A4E3                     ;;8237|----/----\----;
                      JSR MarioGFXDMA                     ;;823A|----/----\----;
CODE_00823D:          JSR LoadScrnImage                   ;;823D|----/----\----;
                      JSR DoSomeSpriteDMA                 ;;8240|----/----\----;
                    + JSR ControllerUpdate                ;;8243|----/----\----;
NMINotSpecialLv:      LDA.B !Layer1XPos                   ;;8246|----/----\----; \  
                      STA.W !HW_BG1HOFS                   ;;8248|----/----\----;  |Set BG 1 Horizontal Scroll Offset ; BG 1 Horizontal Scroll Offset
                      LDA.B !Layer1XPos+1                 ;;824B|----/----\----;  |to X position of screen boundry  
                      STA.W !HW_BG1HOFS                   ;;824D|----/----\----; /  ; BG 1 Horizontal Scroll Offset
                      LDA.B !Layer1YPos                   ;;8250|----/----\----; \  
                      CLC                                 ;;8252|----/----\----;  | 
                      ADC.W !ScreenShakeYOffset           ;;8253|----/----\----;  |Set BG 1 Vertical Scroll Offset 
                      STA.W !HW_BG1VOFS                   ;;8256|----/----\----;  |to Y position of screen boundry + Layer 1 disposition ; BG 1 Vertical Scroll Offset
                      LDA.B !Layer1YPos+1                 ;;8259|----/----\----;  | 
                      ADC.W !ScreenShakeYOffset+1         ;;825B|----/----\----;  | 
                      STA.W !HW_BG1VOFS                   ;;825E|----/----\----; /  ; BG 1 Vertical Scroll Offset
                      LDA.B !Layer2XPos                   ;;8261|----/----\----; \  
                      STA.W !HW_BG2HOFS                   ;;8263|----/----\----;  |Set BG 2 Horizontal Scroll Offset ; BG 2 Horizontal Scroll Offset
                      LDA.B !Layer2XPos+1                 ;;8266|----/----\----;  |to X position of Layer 2 
                      STA.W !HW_BG2HOFS                   ;;8268|----/----\----; /  ; BG 2 Horizontal Scroll Offset
                      LDA.B !Layer2YPos                   ;;826B|----/----\----; \  
                      STA.W !HW_BG2VOFS                   ;;826D|----/----\----;  |Set BG 2 Vertical Scroll Offset ; BG 2 Vertical Scroll Offset
                      LDA.B !Layer2YPos+1                 ;;8270|----/----\----;  |to Y position of Layer 2 
                      STA.W !HW_BG2VOFS                   ;;8272|----/----\----; /  ; BG 2 Vertical Scroll Offset
                      LDA.W !IRQNMICommand                ;;8275|----/----\----; \ If in a normal (not special) level, branch 
                      BEQ CODE_008292                     ;;8278|----/----\----; /  
CODE_00827A:          LDA.B #$81                          ;;827A|----/----\----;
                      LDY.W !CutsceneID                   ;;827C|----/----\----; \  
                      CPY.B #$08                          ;;827F|----/----\----;  |If not playing ending movie, branch to $82A1 
                      BNE +                               ;;8281|----/----\----; /  
                      LDY.W !Brightness                   ;;8283|----/----\----; \  
                      STY.W !HW_INIDISP                   ;;8286|----/----\----; / Set brightness to $0DAE ; Screen Display Register
                      LDY.W !HDMAEnable                   ;;8289|----/----\----; \  
                      STY.W !HW_HDMAEN                    ;;828C|----/----\----; / Set HDMA channel enable to $0D9F ; H-DMA Channel Enable
                      JMP IRQNMIEnding                    ;;828F|----/----\----;
                                                          ;;                   ;
CODE_008292:          LDY.B #$24                          ;;8292|----/----\----; \  ; IRQ timer, at which scanline the IRQ will be fired.
CODE_008294:          LDA.W !HW_TIMEUP                    ;;8294|----/----\----;  |(i.e. below the status bar) ; IRQ Flag By H/V Count Timer
                      STY.W !HW_VTIME                     ;;8297|----/----\----;  | ; V-Count Timer (Upper 8 Bits)
                      STZ.W !HW_VTIME+1                   ;;829A|----/----\----; /  ; V-Count Timer MSB (Bit 0)
                      STZ.B !IRQType                      ;;829D|----/----\----;
                      LDA.B #$A1                          ;;829F|----/----\----;
                    + STA.W !HW_NMITIMEN                  ;;82A1|----/----\----; NMI, V/H Count, and Joypad Enable
                      STZ.W !HW_BG3HOFS                   ;;82A4|----/----\----; \  ; BG 3 Horizontal Scroll Offset- Write twice register
                      STZ.W !HW_BG3HOFS                   ;;82A7|----/----\----;  |Set Layer 3 horizontal and vertical ; BG 3 Horizontal Scroll Offset
                      STZ.W !HW_BG3VOFS                   ;;82AA|----/----\----;  |scroll to x00 ; BG 3 Vertical Scroll Offset ; Write twice register
                      STZ.W !HW_BG3VOFS                   ;;82AD|----/----\----; /  ; BG 3 Vertical Scroll Offset
                      LDA.W !Brightness                   ;;82B0|----/----\----; \  
                      STA.W !HW_INIDISP                   ;;82B3|----/----\----; / Set brightness to $0DAE ; Screen Display Register
                      LDA.W !HDMAEnable                   ;;82B6|----/----\----; \  
                      STA.W !HW_HDMAEN                    ;;82B9|----/----\----; / Set HDMA channel enable to $0D9F ; H-DMA Channel Enable
                      REP #$30                            ;;82BC|----/----\----; \ Pull all ; Index (16 bit) Accum (16 bit) 
                      PLB                                 ;;82BE|----/----\----;  | 
                      PLY                                 ;;82BF|----/----\----;  | 
                      PLX                                 ;;82C0|----/----\----;  | 
                      PLA                                 ;;82C1|----/----\----;  | 
                      PLP                                 ;;82C2|----/----\----; /  
I_EMPTY:              RTI                                 ;;82C3|----/----\----; And return 
                                                          ;;                   ;
CODE_0082C4:          LDA.B !LagFlag                      ;;82C4|----/----\----; \ If there is lag, ; Index (8 bit) Accum (8 bit) 
                      BNE CODE_0082F7                     ;;82C6|----/----\----; / branch to $82F7 
                      INC.B !LagFlag                      ;;82C8|----/----\----;
                      LDA.W !UploadMarioStart             ;;82CA|----/----\----; \ If Mario Start! graphics shouldn't be loaded, 
                      BEQ CODE_0082D4                     ;;82CD|----/----\----; / branch to $82D4 
                      JSR CODE_00A7C2                     ;;82CF|----/----\----;
                      BRA CODE_0082E8                     ;;82D2|----/----\----;
                                                          ;;                   ;
CODE_0082D4:          JSR CODE_00A436                     ;;82D4|----/----\----;
                      JSR MarioGFXDMA                     ;;82D7|----/----\----;
                      BIT.W !IRQNMICommand                ;;82DA|----/----\----;
                      BVC CODE_0082E8                     ;;82DD|----/----\----;
                      JSR CODE_0098A9                     ;;82DF|----/----\----;
                      LDA.W !IRQNMICommand                ;;82E2|----/----\----;
                      LSR A                               ;;82E5|----/----\----;
                      BCS +                               ;;82E6|----/----\----;
CODE_0082E8:          JSR DrawStatusBar                   ;;82E8|----/----\----;
                    + JSR CODE_00A488                     ;;82EB|----/----\----;
                      JSR LoadScrnImage                   ;;82EE|----/----\----;
                      JSR DoSomeSpriteDMA                 ;;82F1|----/----\----;
                      JSR ControllerUpdate                ;;82F4|----/----\----;
CODE_0082F7:          LDA.B #$09                          ;;82F7|----/----\----;
                      STA.W !HW_BGMODE                    ;;82F9|----/----\----; BG Mode and Tile Size Setting
                      LDA.B !Mode7CenterX                 ;;82FC|----/----\----;
                      CLC                                 ;;82FE|----/----\----;
                      ADC.B #$80                          ;;82FF|----/----\----;
                      STA.W !HW_M7X                       ;;8301|----/----\----; Mode 7 Center Position X
                      LDA.B !Mode7CenterX+1               ;;8304|----/----\----;
                      ADC.B #$00                          ;;8306|----/----\----;
                      STA.W !HW_M7X                       ;;8308|----/----\----; Mode 7 Center Position X
                      LDA.B !Mode7CenterY                 ;;830B|----/----\----;
                      CLC                                 ;;830D|----/----\----;
                      ADC.B #$80                          ;;830E|----/----\----;
                      STA.W !HW_M7Y                       ;;8310|----/----\----; Mode 7 Center Position Y
                      LDA.B !Mode7CenterY+1               ;;8313|----/----\----;
                      ADC.B #$00                          ;;8315|----/----\----;
                      STA.W !HW_M7Y                       ;;8317|----/----\----; Mode 7 Center Position Y
                      LDA.B !Mode7ParamA                  ;;831A|----/----\----;
                      STA.W !HW_M7A                       ;;831C|----/----\----; Mode 7 Matrix Parameter A
                      LDA.B !Mode7ParamA+1                ;;831F|----/----\----;
                      STA.W !HW_M7A                       ;;8321|----/----\----; Mode 7 Matrix Parameter A
                      LDA.B !Mode7ParamB                  ;;8324|----/----\----;
                      STA.W !HW_M7B                       ;;8326|----/----\----; Mode 7 Matrix Parameter B
                      LDA.B !Mode7ParamB+1                ;;8329|----/----\----;
                      STA.W !HW_M7B                       ;;832B|----/----\----; Mode 7 Matrix Parameter B
                      LDA.B !Mode7ParamC                  ;;832E|----/----\----;
                      STA.W !HW_M7C                       ;;8330|----/----\----; Mode 7 Matrix Parameter C
                      LDA.B !Mode7ParamC+1                ;;8333|----/----\----;
                      STA.W !HW_M7C                       ;;8335|----/----\----; Mode 7 Matrix Parameter C
                      LDA.B !Mode7ParamD                  ;;8338|----/----\----;
                      STA.W !HW_M7D                       ;;833A|----/----\----; Mode 7 Matrix Parameter D
                      LDA.B !Mode7ParamD+1                ;;833D|----/----\----;
                      STA.W !HW_M7D                       ;;833F|----/----\----; Mode 7 Matrix Parameter D
                      JSR SETL1SCROLL                     ;;8342|----/----\----;
                      LDA.W !IRQNMICommand                ;;8345|----/----\----;
                      LSR A                               ;;8348|----/----\----;
                      BCC +                               ;;8349|----/----\----;
                      LDA.W !Brightness                   ;;834B|----/----\----;
                      STA.W !HW_INIDISP                   ;;834E|----/----\----; Screen Display Register
                      LDA.W !HDMAEnable                   ;;8351|----/----\----;
                      STA.W !HW_HDMAEN                    ;;8354|----/----\----; H-DMA Channel Enable
                      LDA.B #$81                          ;;8357|----/----\----;
                      JMP CODE_0083F3                     ;;8359|----/----\----;
                                                          ;;                   ;
                    + LDY.B #$24                          ;;835C|----/----\----;
                      BIT.W !IRQNMICommand                ;;835E|----/----\----;
                      BVC +                               ;;8361|----/----\----;
                      LDA.W !ActiveBoss                   ;;8363|----/----\----;
                      ASL A                               ;;8366|----/----\----;
                      TAX                                 ;;8367|----/----\----;
                      LDA.W DATA_00F8E8,X                 ;;8368|----/----\----;
                      CMP.B #$2A                          ;;836B|----/----\----;
                      BNE +                               ;;836D|----/----\----;
                      LDY.B #$2D                          ;;836F|----/----\----;
                    + JMP CODE_008294                     ;;8371|----/----\----;
                                                          ;;                   ;
I_IRQ:                SEI                                 ;;8374|----/----\----; Set Interrupt flag so routine can start 
                      PHP                                 ;;8375|----/----\----; \ Save A/X/Y/P/B 
                      REP #$30                            ;;8376|----/----\----;  |P = Processor Flags, B = bank number for all $xxxx operations ; Index (16 bit) Accum (16 bit) 
                      PHA                                 ;;8378|----/----\----;  |Set B to 0$0 
                      PHX                                 ;;8379|----/----\----;  | 
                      PHY                                 ;;837A|----/----\----;  | 
                      PHB                                 ;;837B|----/----\----;  | 
                      PHK                                 ;;837C|----/----\----;  | 
                      PLB                                 ;;837D|----/----\----; /  
                      SEP #$30                            ;;837E|----/----\----; Index (8 bit) Accum (8 bit) 
                      LDA.W !HW_TIMEUP                    ;;8380|----/----\----; Read the IRQ register, 'unapply' the interrupt ; IRQ Flag By H/V Count Timer
                      BPL CODE_0083B2                     ;;8383|----/----\----; If "Timer IRQ" is clear, skip the next code block 
                      LDA.B #$81                          ;;8385|----/----\----;
                      LDY.W !IRQNMICommand                ;;8387|----/----\----;
                      BMI +                               ;;838A|----/----\----; If Bit 7 (negative flag) is set, branch to a different IRQ mode 
IRQNMIEnding:         STA.W !HW_NMITIMEN                  ;;838C|----/----\----; Enable NMI Interrupt and Automatic Joypad reading ; NMI, V/H Count, and Joypad Enable
                      LDY.B #$1F                          ;;838F|----/----\----;
                      JSR WaitForHBlank                   ;;8391|----/----\----;
                      LDA.B !Layer3XPos                   ;;8394|----/----\----; \ Adjust scroll settings for layer 3 
                      STA.W !HW_BG3HOFS                   ;;8396|----/----\----;  | ; BG 3 Horizontal Scroll Offset
                      LDA.B !Layer3XPos+1                 ;;8399|----/----\----;  | 
                      STA.W !HW_BG3HOFS                   ;;839B|----/----\----;  | ; BG 3 Horizontal Scroll Offset
                      LDA.B !Layer3YPos                   ;;839E|----/----\----;  | 
                      STA.W !HW_BG3VOFS                   ;;83A0|----/----\----;  | ; BG 3 Vertical Scroll Offset
                      LDA.B !Layer3YPos+1                 ;;83A3|----/----\----;  | 
                      STA.W !HW_BG3VOFS                   ;;83A5|----/----\----; /  ; BG 3 Vertical Scroll Offset
CODE_0083A8:          LDA.B !MainBGMode                   ;;83A8|----/----\----; \Set the layer BG sizes, L3 priority, and BG mode 
                      STA.W !HW_BGMODE                    ;;83AA|----/----\----; /(Effectively, this is the screen mode) ; BG Mode and Tile Size Setting
                      LDA.B !ColorSettings                ;;83AD|----/----\----; \Write CGADSUB 
                      STA.W !HW_CGADSUB                   ;;83AF|----/----\----; / ; Add/Subtract Select and Enable
CODE_0083B2:          REP #$30                            ;;83B2|----/----\----; \ Pull everything back ; Index (16 bit) Accum (16 bit) 
                      PLB                                 ;;83B4|----/----\----;  | 
                      PLY                                 ;;83B5|----/----\----;  | 
                      PLX                                 ;;83B6|----/----\----;  | 
                      PLA                                 ;;83B7|----/----\----;  | 
                      PLP                                 ;;83B8|----/----\----; / 
                      RTI                                 ;;83B9|----/----\----; And Return 
                                                          ;;                   ;
                    + BIT.W !IRQNMICommand                ;;83BA|----/----\----; Get bit 6 of $0D9B ; Index (8 bit) Accum (8 bit) 
                      BVC CODE_0083E3                     ;;83BD|----/----\----; If clear, skip the next code section 
                      LDY.B !IRQType                      ;;83BF|----/----\----; \Skip if $11 = 0 
                      BEQ CODE_0083D0                     ;;83C1|----/----\----; / 
                      STA.W !HW_NMITIMEN                  ;;83C3|----/----\----; #$81 -> NMI / Controller Enable reg ; NMI, V/H Count, and Joypad Enable
                      LDY.B #$14                          ;;83C6|----/----\----;
                      JSR WaitForHBlank                   ;;83C8|----/----\----;
                      JSR SETL1SCROLL                     ;;83CB|----/----\----;
                      BRA CODE_0083A8                     ;;83CE|----/----\----;
                                                          ;;                   ;
CODE_0083D0:          INC.B !IRQType                      ;;83D0|----/----\----; $11++ 
                      LDA.W !HW_TIMEUP                    ;;83D2|----/----\----; \ Set up the IRQ routine for layer 3 ; IRQ Flag By H/V Count Timer
                      LDA.B #$AE                          ;;83D5|----/----\----;  |-\  
                      SEC                                 ;;83D7|----/----\----;  |  |Vertical Counter trigger at 174 - $1888 
                      SBC.W !ScreenShakeYOffset           ;;83D8|----/----\----;  |-/ Oddly enough, $1888 seems to be 16-bit, but the 
                      STA.W !HW_VTIME                     ;;83DB|----/----\----;  |Store to Vertical Counter Timer ; V-Count Timer (Upper 8 Bits)
                      STZ.W !HW_VTIME+1                   ;;83DE|----/----\----; / Make the high byte of said timer 0 ; V-Count Timer MSB (Bit 0)
                      LDA.B #$A1                          ;;83E1|----/----\----; A = NMI enable, V count enable, joypad automatic read enable, H count disable 
CODE_0083E3:          LDY.W !EndLevelTimer                ;;83E3|----/----\----; if $1493 = 0 skip down 
                      BEQ CODE_0083F3                     ;;83E6|----/----\----;
                      LDY.W !ColorFadeTimer               ;;83E8|----/----\----; \ If $1495 is <#$40 
                      CPY.B #$40                          ;;83EB|----/----\----;  | 
                      BCC CODE_0083F3                     ;;83ED|----/----\----; / Skip down 
                      LDA.B #$81                          ;;83EF|----/----\----;
                      BRA IRQNMIEnding                    ;;83F1|----/----\----; Jump up to IRQNMIEnding 
                                                          ;;                   ;
CODE_0083F3:          STA.W !HW_NMITIMEN                  ;;83F3|----/----\----; A -> NMI/Joypad Auto-Read/HV-Count Control Register ; NMI, V/H Count, and Joypad Enable
                      JSR CODE_008439                     ;;83F6|----/----\----;
                      NOP                                 ;;83F9|----/----\----; \Not often you see NOP, I think there was a JSL here at one point maybe 
                      NOP                                 ;;83FA|----/----\----; / 
                      LDA.B #$07                          ;;83FB|----/----\----; \Write Screen register 
                      STA.W !HW_BGMODE                    ;;83FD|----/----\----; / ; BG Mode and Tile Size Setting
                      LDA.B !Mode7XPos                    ;;8400|----/----\----; \ Write L1 Horizontal scroll 
                      STA.W !HW_BG1HOFS                   ;;8402|----/----\----;  | ; BG 1 Horizontal Scroll Offset
                      LDA.B !Mode7XPos+1                  ;;8405|----/----\----;  | 
                      STA.W !HW_BG1HOFS                   ;;8407|----/----\----; /  ; BG 1 Horizontal Scroll Offset
                      LDA.B !Mode7YPos                    ;;840A|----/----\----; \ Write L1 Vertical Scroll 
                      STA.W !HW_BG1VOFS                   ;;840C|----/----\----;  | ; BG 1 Vertical Scroll Offset
                      LDA.B !Mode7YPos+1                  ;;840F|----/----\----;  | 
                      STA.W !HW_BG1VOFS                   ;;8411|----/----\----; /  ; BG 1 Vertical Scroll Offset
                      BRA CODE_0083B2                     ;;8414|----/----\----; And exit IRQ 
                                                          ;;                   ;
SETL1SCROLL:          LDA.B #$59                          ;;8416|----/----\----; \ 
                      STA.W !HW_BG1SC                     ;;8418|----/----\----; /Write L1 GFX source address ; BG 1 Address and Size
                      LDA.B #$07                          ;;841B|----/----\----; \Write L1/L2 Tilemap address 
                      STA.W !HW_BG12NBA                   ;;841D|----/----\----; / ; BG 1 & 2 Tile Data Designation
                      LDA.B !Layer1XPos                   ;;8420|----/----\----; \ Write L1 Horizontal scroll 
                      STA.W !HW_BG1HOFS                   ;;8422|----/----\----;  | ; BG 1 Horizontal Scroll Offset
                      LDA.B !Layer1XPos+1                 ;;8425|----/----\----;  | 
                      STA.W !HW_BG1HOFS                   ;;8427|----/----\----; / ; BG 1 Horizontal Scroll Offset
                      LDA.B !Layer1YPos                   ;;842A|----/----\----; \ $1C + $1888 -> L1 Vert scroll 
                      CLC                                 ;;842C|----/----\----;  |$1888 = Some sort of vertioffset 
                      ADC.W !ScreenShakeYOffset           ;;842D|----/----\----;  | 
                      STA.W !HW_BG1VOFS                   ;;8430|----/----\----; / ; BG 1 Vertical Scroll Offset
                      LDA.B !Layer1YPos+1                 ;;8433|----/----\----; \Other half of L1 vert scroll 
                      STA.W !HW_BG1VOFS                   ;;8435|----/----\----; / ; BG 1 Vertical Scroll Offset
                      RTS                                 ;;8438|----/----\----; Return 
                                                          ;;                   ;
CODE_008439:          LDY.B #$20                          ;;8439|----/----\----; <<- Could this be just to waste time? 
WaitForHBlank:        BIT.W !HW_HVBJOY                    ;;843B|----/----\----; So... LDY gets set with 20 if there is a H-Blank...? ; H/V Blank Flags and Joypad Status
                      BVS CODE_008439                     ;;843E|----/----\----; if in H-Blank, make Y #$20 and try again 
                    - BIT.W !HW_HVBJOY                    ;;8440|----/----\----; Now wait until not in H-Blank ; H/V Blank Flags and Joypad Status
                      BVC -                               ;;8443|----/----\----;
                    - DEY                                 ;;8445|----/----\----;  |Y = 0 
                      BNE -                               ;;8446|----/----\----; / ...wait a second... why didn't they just do LDY #$00? ...waste more time? 
                      RTS                                 ;;8448|----/----\----; return 
                                                          ;;                   ;
DoSomeSpriteDMA:      STZ.W !HW_DMAPARAM                  ;;8449|----/----\----; Parameters for DMA Transfer
                      REP #$20                            ;;844C|----/----\----; Accum (16 bit) 
                      STZ.W !HW_OAMADD                    ;;844E|----/----\----; OAM address ; Address for Accessing OAM
                      LDA.W #$0004                        ;;8451|----/----\----;
                      STA.W !HW_DMAREG                    ;;8454|----/----\----; Dest. address = $2104 (data write to OAM) ; B Address
                      LDA.W #$0002                        ;;8457|----/----\----;
                      STA.W !HW_DMAADDR+1                 ;;845A|----/----\----; Source address = $00:0200  ; A Address (High Byte)
                      LDA.W #$0220                        ;;845D|----/----\----;
                      STA.W !HW_DMACNT                    ;;8460|----/----\----; $0220 bytes to transfer ; Number Bytes to Transfer (Low Byte) (DMA)
                      LDY.B #$01                          ;;8463|----/----\----;
                      STY.W !HW_MDMAEN                    ;;8465|----/----\----; Start DMA ; Regular DMA Channel Enable
                      SEP #$20                            ;;8468|----/----\----; Accum (8 bit) 
                      LDA.B #$80                          ;;846A|----/----\----; \  
                      STA.W !HW_OAMADD+1                  ;;846C|----/----\----;  | 
                      LDA.B !OAMAddress                   ;;846F|----/----\----;  |Change the OAM read/write address to #$8000 + $3F 
                      STA.W !HW_OAMADD                    ;;8471|----/----\----; /  ; Address for Accessing OAM
                      RTS                                 ;;8474|----/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
DATA_008475:          db $00,$00,$08,$00,$10,$00,$18,$00  ;;8475|----/----\----;
                      db $20,$00,$28,$00,$30,$00,$38,$00  ;;847D|----/----\----;
                      db $40,$00,$48,$00,$50,$00,$58,$00  ;;8485|----/----\----;
                      db $60,$00,$68,$00,$70,$00,$78      ;;848D|----/----\----;
                                                          ;;                   ;
CODE_008494:          LDY.B #$1E                          ;;8494|----/----\----;
                    - LDX.W DATA_008475,Y                 ;;8496|----/----\----;
                      LDA.W !OAMTileSize+3,X              ;;8499|----/----\----;
                      ASL A                               ;;849C|----/----\----;
                      ASL A                               ;;849D|----/----\----;
                      ORA.W !OAMTileSize+2,X              ;;849E|----/----\----;
                      ASL A                               ;;84A1|----/----\----;
                      ASL A                               ;;84A2|----/----\----;
                      ORA.W !OAMTileSize+1,X              ;;84A3|----/----\----;
                      ASL A                               ;;84A6|----/----\----;
                      ASL A                               ;;84A7|----/----\----;
                      ORA.W !OAMTileSize,X                ;;84A8|----/----\----;
                      STA.W !OAMTileBitSize,Y             ;;84AB|----/----\----;
                      LDA.W !OAMTileSize+7,X              ;;84AE|----/----\----;
                      ASL A                               ;;84B1|----/----\----;
                      ASL A                               ;;84B2|----/----\----;
                      ORA.W !OAMTileSize+6,X              ;;84B3|----/----\----;
                      ASL A                               ;;84B6|----/----\----;
                      ASL A                               ;;84B7|----/----\----;
                      ORA.W !OAMTileSize+5,X              ;;84B8|----/----\----;
                      ASL A                               ;;84BB|----/----\----;
                      ASL A                               ;;84BC|----/----\----;
                      ORA.W !OAMTileSize+4,X              ;;84BD|----/----\----;
                      STA.W !OAMTileBitSize+1,Y           ;;84C0|----/----\----;
                      DEY                                 ;;84C3|----/----\----;
                      DEY                                 ;;84C4|----/----\----;
                      BPL -                               ;;84C5|----/----\----;
                      RTS                                 ;;84C7|----/----\----;
                                                          ;;                   ;
CODE_0084C8:          PHB                                 ;;84C8|----/----\----; Wrapper 
                      PHK                                 ;;84C9|----/----\----;
                      PLB                                 ;;84CA|----/----\----;
                      JSR LoadScrnImage                   ;;84CB|----/----\----;
                      PLB                                 ;;84CE|----/----\----;
                      RTL                                 ;;84CF|----/----\----;
                                                          ;;                   ;
                                                          ;;                   ;
ImagePointers:        dl !DynamicStripeImage              ;;84D0|----/----\----; Not used? 
                      dl DATA_05B375                      ;;84D3|----/----\----; Title screen 
                      dl DATA_04A400                      ;;84D6|----/----\----; OW border 
                      dl DATA_05B0FF                      ;;84D9|----/----\----;
                      dl DATA_05B91C                      ;;84DC|----/----\----; CONTINUE/END 
                      dl DATA_0CB800                      ;;84DF|----/----\----;
                      dl DATA_05B872                      ;;84E2|----/----\----; 1 PLAYER GAME/2 PLAYER GAME 
                      dl DATA_04819F                      ;;84E5|----/----\----; OW scroll arrows 
                      dl DATA_0481E0                      ;;84E8|----/----\----; Remove OW scroll arrows 
                      dl DATA_04F499                      ;;84EB|----/----\----;
                      dl DATA_05B8C7                      ;;84EE|----/----\----; CONTINUE AND SAVE 
                      dl DATA_0CBFF1                      ;;84F1|----/----\----;
                      dl DATA_0CBFC3                      ;;84F4|----/----\----; Cutscene 1 text: Line 7 
                      dl DATA_0CBF8E                      ;;84F7|----/----\----; Cutscene 1 text: Line 6 
                      dl DATA_0CBF59                      ;;84FA|----/----\----; Cutscene 1 text: Line 5 
                      dl DATA_0CBF24                      ;;84FD|----/----\----; Cutscene 1 text: Line 4 
                      dl DATA_0CBEEF                      ;;8500|----/----\----; Cutscene 1 text: Line 3 
                      dl DATA_0CBEBA                      ;;8503|----/----\----; Cutscene 1 text: Line 2 
                      dl DATA_0CBE85                      ;;8506|----/----\----; Cutscene 1 text: Line 1 
                      dl DATA_0CC165                      ;;8509|----/----\----; Cutscene 2 text: Line 8 
                      dl DATA_0CC130                      ;;850C|----/----\----; Cutscene 2 text: Line 7 
                      dl DATA_0CC0FB                      ;;850F|----/----\----; Cutscene 2 text: Line 6 
                      dl DATA_0CC0C6                      ;;8512|----/----\----;
                      dl DATA_0CC091                      ;;8515|----/----\----; ...etc... 
                      dl DATA_0CC05C                      ;;8518|----/----\----;
                      dl DATA_0CC027                      ;;851B|----/----\----;
                      dl DATA_0CBFF2                      ;;851E|----/----\----;
                      dl DATA_0CBFF1                      ;;8521|----/----\----;
                      dl DATA_0CC2CE                      ;;8524|----/----\----;
                      dl DATA_0CC299                      ;;8527|----/----\----;
                      dl DATA_0CC264                      ;;852A|----/----\----;
                      dl DATA_0CC22F                      ;;852D|----/----\----;
                      dl DATA_0CC1FA                      ;;8530|----/----\----;
                      dl DATA_0CC1C5                      ;;8533|----/----\----;
                      dl DATA_0CC190                      ;;8536|----/----\----;
                      dl DATA_0CC46C                      ;;8539|----/----\----;
                      dl DATA_0CC437                      ;;853C|----/----\----;
                      dl DATA_0CC402                      ;;853F|----/----\----;
                      dl DATA_0CC3CD                      ;;8542|----/----\----;
                      dl DATA_0CC398                      ;;8545|----/----\----;
                      dl DATA_0CC363                      ;;8548|----/----\----;
                      dl DATA_0CC32E                      ;;854B|----/----\----;
                      dl DATA_0CC2F9                      ;;854E|----/----\----;
                      dl DATA_0CBFF1                      ;;8551|----/----\----;
                      dl DATA_0CC5DD                      ;;8554|----/----\----;
                      dl DATA_0CC5A8                      ;;8557|----/----\----;
                      dl DATA_0CC573                      ;;855A|----/----\----;
                      dl DATA_0CC53E                      ;;855D|----/----\----;
                      dl DATA_0CC509                      ;;8560|----/----\----;
                      dl DATA_0CC4D4                      ;;8563|----/----\----;
                      dl DATA_0CC49F                      ;;8566|----/----\----;
                      dl DATA_0CC785                      ;;8569|----/----\----;
                      dl DATA_0CC750                      ;;856C|----/----\----;
                      dl DATA_0CC71B                      ;;856F|----/----\----;
                      dl DATA_0CC6E6                      ;;8572|----/----\----;
                      dl DATA_0CC6B1                      ;;8575|----/----\----;
                      dl DATA_0CC67C                      ;;8578|----/----\----;
                      dl DATA_0CC647                      ;;857B|----/----\----;
                      dl DATA_0CC612                      ;;857E|----/----\----;
                      dl DATA_0CC92D                      ;;8581|----/----\----;
                      dl DATA_0CC8F8                      ;;8584|----/----\----;
                      dl DATA_0CC8C3                      ;;8587|----/----\----;
                      dl DATA_0CC88E                      ;;858A|----/----\----;
                      dl DATA_0CC859                      ;;858D|----/----\----;
                      dl DATA_0CC824                      ;;8590|----/----\----;
                      dl DATA_0CC7EF                      ;;8593|----/----\----;
                      dl DATA_0CC7BA                      ;;8596|----/----\----;
                      dl DATA_0CBA56                      ;;8599|----/----\----; Cutscene border, cave ground 
                      dl DATA_0CBBB9                      ;;859C|----/----\----;
                      dl DATA_0CB9BF                      ;;859F|----/----\----;
                      dl DATA_0C9380                      ;;85A2|----/----\----;
                      dl DATA_0CB636                      ;;85A5|----/----\----; Ending: THE END 
                      dl DATA_0DF300                      ;;85A8|----/----\----; Ending: Enemies: Lakitu 
                      dl DATA_0DF42D                      ;;85AB|----/----\----; Ending: Enemies: Hammer Bro. 
                      dl DATA_0DF572                      ;;85AE|----/----\----; Ending: Enemies: Pokey 
                      dl DATA_0DF66B                      ;;85B1|----/----\----; Ending: Enemies: Rex 
                      dl DATA_0DF742                      ;;85B4|----/----\----; Ending: Enemies: Dino-Rhino 
                      dl DATA_0DF837                      ;;85B7|----/----\----; Ending: Enemies: Blargg 
                      dl DATA_0DF8FA                      ;;85BA|----/----\----; Ending: Enemies: Urchin 
                      dl DATA_0DF9CD                      ;;85BD|----/----\----; Ending: Enemies: Boo 
                      dl DATA_0DFA98                      ;;85C0|----/----\----; Ending: Enemies: Dry Bones 
                      dl DATA_0DFB73                      ;;85C3|----/----\----; Ending: Enemies: Grinder 
                      dl DATA_0DFC58                      ;;85C6|----/----\----; Ending: Enemies: Reznor 
                      dl DATA_0DFCD5                      ;;85C9|----/----\----; Ending: Enemies: Mechakoopa 
                      dl DATA_0DFD5C                      ;;85CC|----/----\----; Ending: Enemies: Bowser 
                      dl DATA_0CBD02                      ;;85CF|----/----\----;
                                                          ;;                   ;
LoadScrnImage:        LDY.B !StripeImage                  ;;85D2|----/----\----; 12 = Image loader 
                      LDA.W ImagePointers,Y               ;;85D4|----/----\----; \  
                      STA.B !_0                           ;;85D7|----/----\----;  | 
                      LDA.W ImagePointers+1,Y             ;;85D9|----/----\----;  |Load pointer 
                      STA.B !_1                           ;;85DC|----/----\----;  | 
                      LDA.W ImagePointers+2,Y             ;;85DE|----/----\----;  | 
                      STA.B !_2                           ;;85E1|----/----\----; /  
                      JSR CODE_00871E                     ;;85E3|----/----\----;
                      LDA.B !StripeImage                  ;;85E6|----/----\----;
                      BNE +                               ;;85E8|----/----\----;
                      STA.L !DynStripeImgSize             ;;85EA|----/----\----;
                      STA.L !DynStripeImgSize+1           ;;85EE|----/----\----;
                      DEC A                               ;;85F2|----/----\----;
                      STA.L !DynamicStripeImage           ;;85F3|----/----\----;
                    + STZ.B !StripeImage                  ;;85F7|----/----\----; Do not reload the same thing next frame 
                      RTS                                 ;;85F9|----/----\----;
                                                          ;;                   ;
CODE_0085FA:          JSR TurnOffIO                       ;;85FA|----/----\----;
                      LDA.B #$FC                          ;;85FD|----/----\----;
                      STA.B !_0                           ;;85FF|----/----\----;
                      STZ.W !HW_VMAINC                    ;;8601|----/----\----; Set "VRAM Address Increment Value" to x00 ; VRAM Address Increment Value
                      STZ.W !HW_VMADD                     ;;8604|----/----\----; Set "Address for VRAM Read/Write (Low Byte)" to x00 ; Address for VRAM Read/Write (Low Byte)
                      LDA.B #$50                          ;;8607|----/----\----; \ Set "Address for VRAM Read/Write (High Byte)" to x50 
                      STA.W !HW_VMADD+1                   ;;8609|----/----\----; /  ; Address for VRAM Read/Write (High Byte)
                      LDX.B #$06                          ;;860C|----/----\----;
                    - LDA.W DATA_008649,X                 ;;860E|----/----\----;
                      STA.W !HW_DMAPARAM+$10,X            ;;8611|----/----\----;
                      DEX                                 ;;8614|----/----\----;
                      BPL -                               ;;8615|----/----\----;
                      LDY.B #$02                          ;;8617|----/----\----; DMA something to VRAM, my guess is a tilemap... 
                      STY.W !HW_MDMAEN                    ;;8619|----/----\----; Regular DMA Channel Enable
                      LDA.B #$38                          ;;861C|----/----\----;
                      STA.B !_0                           ;;861E|----/----\----;
                      LDA.B #$80                          ;;8620|----/----\----;
                      STA.W !HW_VMAINC                    ;;8622|----/----\----; VRAM Address Increment Value
                      STZ.W !HW_VMADD                     ;;8625|----/----\----; \Change CRAM address ; Address for VRAM Read/Write (Low Byte)
                      LDA.B #$50                          ;;8628|----/----\----;  | 
                      STA.W !HW_VMADD+1                   ;;862A|----/----\----; / ; Address for VRAM Read/Write (High Byte)
                      LDX.B #$06                          ;;862D|----/----\----; And Repeat the DMA 
                    - LDA.W DATA_008649,X                 ;;862F|----/----\----;
                      STA.W !HW_DMAPARAM+$10,X            ;;8632|----/----\----;
                      DEX                                 ;;8635|----/----\----;
                      BPL -                               ;;8636|----/----\----;
                      LDA.B #$19                          ;;8638|----/----\----; \but change desination address to $2119 
                      STA.W !HW_DMAREG+$10                ;;863A|----/----\----; / ; B Address
                      STY.W !HW_MDMAEN                    ;;863D|----/----\----; Start DMA ; Regular DMA Channel Enable
                      STZ.B !OAMAddress                   ;;8640|----/----\----; $3B = 0 (not sure what $3B is) 
                      JSL !OAMResetRoutine                ;;8642|----/----\----; and JSL to a RAM routine 
                      JMP DoSomeSpriteDMA                 ;;8646|----/----\----; Jump to the next part of this routine 
                                                          ;;                   ;
                                                          ;;                   ;
DATA_008649:          db $08,$18,$00,$00,$00,$00,$10      ;;8649|----/----\----;
                                                          ;;                   ;
ControllerUpdate:     LDA.W !HW_CNTRL1                    ;;8650|----/----\----; \  ; Joypad 1Data (Low Byte)
                      AND.B #$F0                          ;;8653|----/----\----;  | 
                      STA.W !axlr0000P1Hold               ;;8655|----/----\----;  | 
                      TAY                                 ;;8658|----/----\----;  | 
                      EOR.W !axlr0000P1Mask               ;;8659|----/----\----;  | 
                      AND.W !axlr0000P1Hold               ;;865C|----/----\----;  | 
                      STA.W !axlr0000P1Frame              ;;865F|----/----\----;  | 
                      STY.W !axlr0000P1Mask               ;;8662|----/----\----;  | 
                      LDA.W !HW_CNTRL1+1                  ;;8665|----/----\----;  | ; Joypad 1Data (High Byte)
                      STA.W !byetudlrP1Hold               ;;8668|----/----\----;  | 
                      TAY                                 ;;866B|----/----\----;  | 
                      EOR.W !byetudlrP1Mask               ;;866C|----/----\----;  | 
                      AND.W !byetudlrP1Hold               ;;866F|----/----\----;  | 
                      STA.W !byetudlrP1Frame              ;;8672|----/----\----;  | 
                      STY.W !byetudlrP1Mask               ;;8675|----/----\----;  |Read controller data 
                      LDA.W !HW_CNTRL2                    ;;8678|----/----\----;  | ; Joypad 2Data (Low Byte)
                      AND.B #$F0                          ;;867B|----/----\----;  | 
                      STA.W !axlr0000P2Hold               ;;867D|----/----\----;  | 
                      TAY                                 ;;8680|----/----\----;  | 
                      EOR.W !axlr0000P2Mask               ;;8681|----/----\----;  | 
                      AND.W !axlr0000P2Hold               ;;8684|----/----\----;  | 
                      STA.W !axlr0000P2Frame              ;;8687|----/----\----;  | 
                      STY.W !axlr0000P2Mask               ;;868A|----/----\----;  | 
                      LDA.W !HW_CNTRL2+1                  ;;868D|----/----\----;  | ; Joypad 2Data (High Byte)
                      STA.W !byetudlrP2Hold               ;;8690|----/----\----;  | 
                      TAY                                 ;;8693|----/----\----;  | 
                      EOR.W !byetudlrP2Mask               ;;8694|----/----\----;  | 
                      AND.W !byetudlrP2Hold               ;;8697|----/----\----;  | 
                      STA.W !byetudlrP2Frame              ;;869A|----/----\----;  | 
                      STY.W !byetudlrP2Mask               ;;869D|----/----\----; /  
                      LDX.W !ControllersPresent           ;;86A0|----/----\----; \  
                      BPL +                               ;;86A3|----/----\----;  |If $0DA0 is positive, set X to $0DA0 
                      LDX.W !PlayerTurnLvl                ;;86A5|----/----\----;  |Otherwise, set X to current character 
                    + LDA.W !axlr0000P1Hold,X             ;;86A8|----/----\----; \  
                      AND.B #$C0                          ;;86AB|----/----\----;  | 
                      ORA.W !byetudlrP1Hold,X             ;;86AD|----/----\----;  | 
                      STA.B !byetudlrHold                 ;;86B0|----/----\----;  | 
                      LDA.W !axlr0000P1Hold,X             ;;86B2|----/----\----;  | 
                      STA.B !axlr0000Hold                 ;;86B5|----/----\----;  |Update controller data bytes 
                      LDA.W !axlr0000P1Frame,X            ;;86B7|----/----\----;  | 
                      AND.B #$40                          ;;86BA|----/----\----;  | 
                      ORA.W !byetudlrP1Frame,X            ;;86BC|----/----\----;  | 
                      STA.B !byetudlrFrame                ;;86BF|----/----\----;  | 
                      LDA.W !axlr0000P1Frame,X            ;;86C1|----/----\----;  | 
                      STA.B !axlr0000Frame                ;;86C4|----/----\----; /  
                      RTS                                 ;;86C6|----/----\----; Return 
                                                          ;;                   ;
CODE_0086C7:          REP #$30                            ;;86C7|----/----\----; Index (16 bit) Accum (16 bit) 
                      LDX.W #$0062                        ;;86C9|----/----\----;
                      LDA.W #$0202                        ;;86CC|----/----\----;
                    - STA.W !OAMTileSize,X                ;;86CF|----/----\----;
                      DEX                                 ;;86D2|----/----\----;
                      DEX                                 ;;86D3|----/----\----;
                      BPL -                               ;;86D4|----/----\----;
                      SEP #$30                            ;;86D6|----/----\----; Index (8 bit) Accum (8 bit) 
                      LDA.B #$F0                          ;;86D8|----/----\----;
                      JSL !OAMResetRoutine+$12E           ;;86DA|----/----\----;
                      RTS                                 ;;86DE|----/----\----;
                                                          ;;                   ;
ExecutePtr:           STY.B !_3                           ;;86DF|----/----\----; "Push" Y 
                      PLY                                 ;;86E1|----/----\----;
                      STY.B !_0                           ;;86E2|----/----\----;
                      REP #$30                            ;;86E4|----/----\----; 16 bit A ; Index (16 bit) Accum (16 bit) 
                      AND.W #$00FF                        ;;86E6|----/----\----; A = Game mode 
                      ASL A                               ;;86E9|----/----\----; Multiply game mode by 2 
                      TAY                                 ;;86EA|----/----\----;
                      PLA                                 ;;86EB|----/----\----;
                      STA.B !_1                           ;;86EC|----/----\----;
                      INY                                 ;;86EE|----/----\----;
                      LDA.B [!_0],Y                       ;;86EF|----/----\----;
                      STA.B !_0                           ;;86F1|----/----\----; A is 16-bit 
                      SEP #$30                            ;;86F3|----/----\----; Index (8 bit) Accum (8 bit) 
                      LDY.B !_3                           ;;86F5|----/----\----; "Pull" Y 
                      JML.W [!_0]                         ;;86F7|----/----\----; Jump to the game mode's routine, which has been loaded into $00-02 
                                                          ;;                   ;
ExecutePtrLong:       STY.B !_5                           ;;86FA|----/----\----;
                      PLY                                 ;;86FC|----/----\----;
                      STY.B !_2                           ;;86FD|----/----\----;
                      REP #$30                            ;;86FF|----/----\----; 16 bit A,X,Y ; Index (16 bit) Accum (16 bit) 
                      AND.W #$00FF                        ;;8701|----/----\----; \ A = Tileset/byte 3 (TB3) 
                      STA.B !_3                           ;;8704|----/----\----; / Store A in $03 
                      ASL A                               ;;8706|----/----\----; \ Multiply A by 2 
                      ADC.B !_3                           ;;8707|----/----\----;  |Add TB3 to A 
                      TAY                                 ;;8709|----/----\----; / Set Y to A 
                      PLA                                 ;;870A|----/----\----;
                      STA.B !_3                           ;;870B|----/----\----;
                      INY                                 ;;870D|----/----\----;
                      LDA.B [!_2],Y                       ;;870E|----/----\----;
                      STA.B !_0                           ;;8710|----/----\----;
                      INY                                 ;;8712|----/----\----;
                      LDA.B [!_2],Y                       ;;8713|----/----\----;
                      STA.B !_1                           ;;8715|----/----\----;
                      SEP #$30                            ;;8717|----/----\----; Index (8 bit) Accum (8 bit) 
                      LDY.B !_5                           ;;8719|----/----\----;
                      JML.W [!_0]                         ;;871B|----/----\----;
                                                          ;;                   ;
CODE_00871E:          REP #$10                            ;;871E|----/----\----; 16 bit X,Y ; Index (16 bit) 
                      STA.W !HW_DMAADDR+$12               ;;8720|----/----\----; A Address Bank
                      LDY.W #$0000                        ;;8723|----/----\----; Set index to 0 
CODE_008726:          LDA.B [!_0],Y                       ;;8726|----/----\----; \ Read line header byte 1 
                      BPL +                               ;;8728|----/----\----;  |If the byte & %10000000 is true, 
                      SEP #$30                            ;;872A|----/----\----;  |Set A,X,Y to 8 bit and return ; Index (8 bit) Accum (8 bit) 
                      RTS                                 ;;872C|----/----\----;  | 
                                                          ;;                   ;
                    + STA.B !_4                           ;;872D|----/----\----; Store byte in !_4  ; Index(16 bit) 
                      INY                                 ;;872F|----/----\----; Move onto the next byte 
                      LDA.B [!_0],Y                       ;;8730|----/----\----; Read line header byte 2 
                      STA.B !_3                           ;;8732|----/----\----; Store byte in $03 
                      INY                                 ;;8734|----/----\----; Move onto the next byte 
                      LDA.B [!_0],Y                       ;;8735|----/----\----; Read line header byte 3 
                      STZ.B !_7                           ;;8737|----/----\----; \  
                      ASL A                               ;;8739|----/----\----;  |Store direction bit in $07 
                      ROL.B !_7                           ;;873A|----/----\----; /  
                      LDA.B #$18                          ;;873C|----/----\----; \ Set B address (DMA) to x18 
                      STA.W !HW_DMAREG+$10                ;;873E|----/----\----; /  ; B Address
                      LDA.B [!_0],Y                       ;;8741|----/----\----; Re-read line header byte 3 
                      AND.B #$40                          ;;8743|----/----\----; \  
                      LSR A                               ;;8745|----/----\----;  | 
                      LSR A                               ;;8746|----/----\----;  |Store RLE bit << 3 in $05 
                      LSR A                               ;;8747|----/----\----;  | 
                      STA.B !_5                           ;;8748|----/----\----; /  
                      STZ.B !_6                           ;;874A|----/----\----;
                      ORA.B #$01                          ;;874C|----/----\----;
                      STA.W !HW_DMAPARAM+$10              ;;874E|----/----\----; Parameters for DMA Transfer
                      REP #$20                            ;;8751|----/----\----; 16 bit A ; Accum (16 bit) 
                      LDA.B !_3                           ;;8753|----/----\----;
                      STA.W !HW_VMADD                     ;;8755|----/----\----; Address for VRAM Read/Write (Low Byte)
                      LDA.B [!_0],Y                       ;;8758|----/----\----;
                      XBA                                 ;;875A|----/----\----;
                      AND.W #$3FFF                        ;;875B|----/----\----;
                      TAX                                 ;;875E|----/----\----;
                      INX                                 ;;875F|----/----\----;
                      INY                                 ;;8760|----/----\----;
                      INY                                 ;;8761|----/----\----;
                      TYA                                 ;;8762|----/----\----;
                      CLC                                 ;;8763|----/----\----;
                      ADC.B !_0                           ;;8764|----/----\----;
                      STA.W !HW_DMAADDR+$10               ;;8766|----/----\----; A Address (Low Byte)
                      STX.W !HW_DMACNT+$10                ;;8769|----/----\----; Number Bytes to Transfer (Low Byte) (DMA)
                      LDA.B !_5                           ;;876C|----/----\----;
                      BEQ +                               ;;876E|----/----\----;
                      SEP #$20                            ;;8770|----/----\----; 8 bit A ; Accum (8 bit) 
                      LDA.B !_7                           ;;8772|----/----\----;
                      STA.W !HW_VMAINC                    ;;8774|----/----\----; VRAM Address Increment Value
                      LDA.B #$02                          ;;8777|----/----\----;
                      STA.W !HW_MDMAEN                    ;;8779|----/----\----; Regular DMA Channel Enable
                      LDA.B #$19                          ;;877C|----/----\----;
                      STA.W !HW_DMAREG+$10                ;;877E|----/----\----; B Address
                      REP #$21                            ;;8781|----/----\----; Accum (16 bit) 
                      LDA.B !_3                           ;;8783|----/----\----;
                      STA.W !HW_VMADD                     ;;8785|----/----\----; Address for VRAM Read/Write (Low Byte)
                      TYA                                 ;;8788|----/----\----;
                      ADC.B !_0                           ;;8789|----/----\----;
                      INC A                               ;;878B|----/----\----;
                      STA.W !HW_DMAADDR+$10               ;;878C|----/----\----; A Address (Low Byte)
                      STX.W !HW_DMACNT+$10                ;;878F|----/----\----; Number Bytes to Transfer (Low Byte) (DMA)
                      LDX.W #$0002                        ;;8792|----/----\----;
                    + STX.B !_3                           ;;8795|----/----\----;
                      TYA                                 ;;8797|----/----\----;
                      CLC                                 ;;8798|----/----\----;
                      ADC.B !_3                           ;;8799|----/----\----;
                      TAY                                 ;;879B|----/----\----;
                      SEP #$20                            ;;879C|----/----\----; Accum (8 bit) 
                      LDA.B !_7                           ;;879E|----/----\----;
                      ORA.B #$80                          ;;87A0|----/----\----;
                      STA.W !HW_VMAINC                    ;;87A2|----/----\----; VRAM Address Increment Value
                      LDA.B #$02                          ;;87A5|----/----\----;
                      STA.W !HW_MDMAEN                    ;;87A7|----/----\----; Regular DMA Channel Enable
                      JMP CODE_008726                     ;;87AA|----/----\----;
                                                          ;;                   ;
CODE_0087AD:          SEP #$30                            ;;87AD|----/----\----; Index (8 bit) Accum (8 bit) 
                      LDA.W !Layer1VramAddr               ;;87AF|----/----\----; \  
                      BNE +                               ;;87B2|----/----\----;  |If Layer 1 has to be updated, 
                      JMP CODE_0088DD                     ;;87B4|----/----\----;  |jump to $88DD 
                                                          ;;                   ;
                    + LDA.B !ScreenMode                   ;;87B7|----/----\----; \  
                      AND.B #$01                          ;;87B9|----/----\----;  | 
                      BEQ +                               ;;87BB|----/----\----;  |If on a vertical level, 
                      JMP CODE_008849                     ;;87BD|----/----\----;  |jump to $8849 
                                                          ;;                   ;
                    + LDY.B #$81                          ;;87C0|----/----\----; \ Set "VRAM Address Increment Value" to x81 
                      STY.W !HW_VMAINC                    ;;87C2|----/----\----; /  ; VRAM Address Increment Value
                      LDA.W !Layer1VramAddr+1             ;;87C5|----/----\----;
                      STA.W !HW_VMADD                     ;;87C8|----/----\----; Address for VRAM Read/Write (Low Byte)
                      LDA.W !Layer1VramAddr               ;;87CB|----/----\----;
                      STA.W !HW_VMADD+1                   ;;87CE|----/----\----; Address for VRAM Read/Write (High Byte)
                      LDX.B #$06                          ;;87D1|----/----\----;
                    - LDA.W DATA_008A16,X                 ;;87D3|----/----\----;
                      STA.W !HW_DMAPARAM+$10,X            ;;87D6|----/----\----;
                      DEX                                 ;;87D9|----/----\----;
                      BPL -                               ;;87DA|----/----\----;
                      LDA.B #$02                          ;;87DC|----/----\----; \ Enable DMA channel 1 
                      STA.W !HW_MDMAEN                    ;;87DE|----/----\----; /  ; Regular DMA Channel Enable
                      STY.W !HW_VMAINC                    ;;87E1|----/----\----; VRAM Address Increment Value
                      LDA.W !Layer1VramAddr+1             ;;87E4|----/----\----;
                      STA.W !HW_VMADD                     ;;87E7|----/----\----; Address for VRAM Read/Write (Low Byte)
                      LDA.W !Layer1VramAddr               ;;87EA|----/----\----;
                      CLC                                 ;;87ED|----/----\----;
                      ADC.B #$08                          ;;87EE|----/----\----;
                      STA.W !HW_VMADD+1                   ;;87F0|----/----\----; Address for VRAM Read/Write (High Byte)
                      LDX.B #$06                          ;;87F3|----/----\----;
                    - LDA.W DATA_008A1D,X                 ;;87F5|----/----\----;
                      STA.W !HW_DMAPARAM+$10,X            ;;87F8|----/----\----;
                      DEX                                 ;;87FB|----/----\----;
                      BPL -                               ;;87FC|----/----\----;
                      LDA.B #$02                          ;;87FE|----/----\----;
                      STA.W !HW_MDMAEN                    ;;8800|----/----\----; \ Enable DMA channel 1 ; Regular DMA Channel Enable
                      STY.W !HW_VMAINC                    ;;8803|----/----\----; /  ; VRAM Address Increment Value
                      LDA.W !Layer1VramAddr+1             ;;8806|----/----\----;
                      INC A                               ;;8809|----/----\----;
                      STA.W !HW_VMADD                     ;;880A|----/----\----; Address for VRAM Read/Write (Low Byte)
                      LDA.W !Layer1VramAddr               ;;880D|----/----\----;
                      STA.W !HW_VMADD+1                   ;;8810|----/----\----; Address for VRAM Read/Write (High Byte)
                      LDX.B #$06                          ;;8813|----/----\----;
                    - LDA.W DATA_008A24,X                 ;;8815|----/----\----;
                      STA.W !HW_DMAPARAM+$10,X            ;;8818|----/----\----;
                      DEX                                 ;;881B|----/----\----;
                      BPL -                               ;;881C|----/----\----;
                      LDA.B #$02                          ;;881E|----/----\----; \ Enable DMA channel 1 
                      STA.W !HW_MDMAEN                    ;;8820|----/----\----; /  ; Regular DMA Channel Enable
                      STY.W !HW_VMAINC                    ;;8823|----/----\----; VRAM Address Increment Value
                      LDA.W !Layer1VramAddr+1             ;;8826|----/----\----;
                      INC A                               ;;8829|----/----\----;
                      STA.W !HW_VMADD                     ;;882A|----/----\----; Address for VRAM Read/Write (Low Byte)
                      LDA.W !Layer1VramAddr               ;;882D|----/----\----;
                      CLC                                 ;;8830|----/----\----;
                      ADC.B #$08                          ;;8831|----/----\----;
                      STA.W !HW_VMADD+1                   ;;8833|----/----\----; Address for VRAM Read/Write (High Byte)
                      LDX.B #$06                          ;;8836|----/----\----;
                    - LDA.W DATA_008A2B,X                 ;;8838|----/----\----;
                      STA.W !HW_DMAPARAM+$10,X            ;;883B|----/----\----;
                      DEX                                 ;;883E|----/----\----;
                      BPL -                               ;;883F|----/----\----;
                      LDA.B #$02                          ;;8841|----/----\----; \ Enable DMA channel 1 
                      STA.W !HW_MDMAEN                    ;;8843|----/----\----; /  ; Regular DMA Channel Enable
                      JMP CODE_0088DD                     ;;8846|----/----\----;
                                                          ;;                   ;
CODE_008849:          LDY.B #$80                          ;;8849|----/----\----;
                      STY.W !HW_VMAINC                    ;;884B|----/----\----; VRAM Address Increment Value
                      LDA.W !Layer1VramAddr+1             ;;884E|----/----\----;
                      STA.W !HW_VMADD                     ;;8851|----/----\----; Address for VRAM Read/Write (Low Byte)
                      LDA.W !Layer1VramAddr               ;;8854|----/----\----;
                      STA.W !HW_VMADD+1                   ;;8857|----/----\----; Address for VRAM Read/Write (High Byte)
                      LDX.B #$06                          ;;885A|----/----\----;
                    - LDA.W DATA_008A16,X                 ;;885C|----/----\----;
                      STA.W !HW_DMAPARAM+$10,X            ;;885F|----/----\----;
                      DEX                                 ;;8862|----/----\----;
                      BPL -                               ;;8863|----/----\----;
                      LDA.B #$02                          ;;8865|----/----\----;
                      STA.W !HW_MDMAEN                    ;;8867|----/----\----; Regular DMA Channel Enable
                      STY.W !HW_VMAINC                    ;;886A|----/----\----; VRAM Address Increment Value
                      LDA.W !Layer1VramAddr+1             ;;886D|----/----\----;
                      STA.W !HW_VMADD                     ;;8870|----/----\----; Address for VRAM Read/Write (Low Byte)
                      LDA.W !Layer1VramAddr               ;;8873|----/----\----;
                      CLC                                 ;;8876|----/----\----;
                      ADC.B #$04                          ;;8877|----/----\----;
                      STA.W !HW_VMADD+1                   ;;8879|----/----\----; Address for VRAM Read/Write (High Byte)
                      LDX.B #$06                          ;;887C|----/----\----;
                    - LDA.W DATA_008A1D,X                 ;;887E|----/----\----;
                      STA.W !HW_DMAPARAM+$10,X            ;;8881|----/----\----;
                      DEX                                 ;;8884|----/----\----;
                      BPL -                               ;;8885|----/----\----;
                      LDA.B #$40                          ;;8887|----/----\----;
                      STA.W !HW_DMACNT+$10                ;;8889|----/----\----; Number Bytes to Transfer (Low Byte) (DMA)
                      LDA.B #$02                          ;;888C|----/----\----;
                      STA.W !HW_MDMAEN                    ;;888E|----/----\----; Regular DMA Channel Enable
                      STY.W !HW_VMAINC                    ;;8891|----/----\----; VRAM Address Increment Value
                      LDA.W !Layer1VramAddr+1             ;;8894|----/----\----;
                      CLC                                 ;;8897|----/----\----;
                      ADC.B #$20                          ;;8898|----/----\----;
                      STA.W !HW_VMADD                     ;;889A|----/----\----; Address for VRAM Read/Write (Low Byte)
                      LDA.W !Layer1VramAddr               ;;889D|----/----\----;
                      STA.W !HW_VMADD+1                   ;;88A0|----/----\----; Address for VRAM Read/Write (High Byte)
                      LDX.B #$06                          ;;88A3|----/----\----;
                    - LDA.W DATA_008A24,X                 ;;88A5|----/----\----;
                      STA.W !HW_DMAPARAM+$10,X            ;;88A8|----/----\----;
                      DEX                                 ;;88AB|----/----\----;
                      BPL -                               ;;88AC|----/----\----;
                      LDA.B #$02                          ;;88AE|----/----\----;
                      STA.W !HW_MDMAEN                    ;;88B0|----/----\----; Regular DMA Channel Enable
                      STY.W !HW_VMAINC                    ;;88B3|----/----\----; VRAM Address Increment Value
                      LDA.W !Layer1VramAddr+1             ;;88B6|----/----\----;
                      CLC                                 ;;88B9|----/----\----;
                      ADC.B #$20                          ;;88BA|----/----\----;
                      STA.W !HW_VMADD                     ;;88BC|----/----\----; Address for VRAM Read/Write (Low Byte)
                      LDA.W !Layer1VramAddr               ;;88BF|----/----\----;
                      CLC                                 ;;88C2|----/----\----;
                      ADC.B #$04                          ;;88C3|----/----\----;
                      STA.W !HW_VMADD+1                   ;;88C5|----/----\----; Address for VRAM Read/Write (High Byte)
                      LDX.B #$06                          ;;88C8|----/----\----;
                    - LDA.W DATA_008A2B,X                 ;;88CA|----/----\----;
                      STA.W !HW_DMAPARAM+$10,X            ;;88CD|----/----\----;
                      DEX                                 ;;88D0|----/----\----;
                      BPL -                               ;;88D1|----/----\----;
                      LDA.B #$40                          ;;88D3|----/----\----;
                      STA.W !HW_DMACNT+$10                ;;88D5|----/----\----; Number Bytes to Transfer (Low Byte) (DMA)
                      LDA.B #$02                          ;;88D8|----/----\----;
                      STA.W !HW_MDMAEN                    ;;88DA|----/----\----; Regular DMA Channel Enable
CODE_0088DD:          LDA.B #$00                          ;;88DD|----/----\----;
                      STA.W !Layer1VramAddr               ;;88DF|----/----\----;
                      LDA.W !Layer2VramAddr               ;;88E2|----/----\----;
                      BNE +                               ;;88E5|----/----\----;
                      JMP CODE_008A10                     ;;88E7|----/----\----;
                                                          ;;                   ;
                    + LDA.B !ScreenMode                   ;;88EA|----/----\----;
                      AND.B #$02                          ;;88EC|----/----\----;
                      BEQ +                               ;;88EE|----/----\----;
                      JMP CODE_00897C                     ;;88F0|----/----\----;
                                                          ;;                   ;
                    + LDY.B #$81                          ;;88F3|----/----\----;
                      STY.W !HW_VMAINC                    ;;88F5|----/----\----; VRAM Address Increment Value
                      LDA.W !Layer2VramAddr+1             ;;88F8|----/----\----;
                      STA.W !HW_VMADD                     ;;88FB|----/----\----; Address for VRAM Read/Write (Low Byte)
                      LDA.W !Layer2VramAddr               ;;88FE|----/----\----;
                      STA.W !HW_VMADD+1                   ;;8901|----/----\----; Address for VRAM Read/Write (High Byte)
                      LDX.B #$06                          ;;8904|----/----\----;
                    - LDA.W DATA_008A32,X                 ;;8906|----/----\----;
                      STA.W !HW_DMAPARAM+$10,X            ;;8909|----/----\----;
                      DEX                                 ;;890C|----/----\----;
                      BPL -                               ;;890D|----/----\----;
                      LDA.B #$02                          ;;890F|----/----\----;
                      STA.W !HW_MDMAEN                    ;;8911|----/----\----; Regular DMA Channel Enable
                      STY.W !HW_VMAINC                    ;;8914|----/----\----; VRAM Address Increment Value
                      LDA.W !Layer2VramAddr+1             ;;8917|----/----\----;
                      STA.W !HW_VMADD                     ;;891A|----/----\----; Address for VRAM Read/Write (Low Byte)
                      LDA.W !Layer2VramAddr               ;;891D|----/----\----;
                      CLC                                 ;;8920|----/----\----;
                      ADC.B #$08                          ;;8921|----/----\----;
                      STA.W !HW_VMADD+1                   ;;8923|----/----\----; Address for VRAM Read/Write (High Byte)
                      LDX.B #$06                          ;;8926|----/----\----;
                    - LDA.W DATA_008A39,X                 ;;8928|----/----\----;
                      STA.W !HW_DMAPARAM+$10,X            ;;892B|----/----\----;
                      DEX                                 ;;892E|----/----\----;
                      BPL -                               ;;892F|----/----\----;
                      LDA.B #$02                          ;;8931|----/----\----;
                      STA.W !HW_MDMAEN                    ;;8933|----/----\----; Regular DMA Channel Enable
                      STY.W !HW_VMAINC                    ;;8936|----/----\----; VRAM Address Increment Value
                      LDA.W !Layer2VramAddr+1             ;;8939|----/----\----;
                      INC A                               ;;893C|----/----\----;
                      STA.W !HW_VMADD                     ;;893D|----/----\----; Address for VRAM Read/Write (Low Byte)
                      LDA.W !Layer2VramAddr               ;;8940|----/----\----;
                      STA.W !HW_VMADD+1                   ;;8943|----/----\----; Address for VRAM Read/Write (High Byte)
                      LDX.B #$06                          ;;8946|----/----\----;
                    - LDA.W DATA_008A40,X                 ;;8948|----/----\----;
                      STA.W !HW_DMAPARAM+$10,X            ;;894B|----/----\----;
                      DEX                                 ;;894E|----/----\----;
                      BPL -                               ;;894F|----/----\----;
                      LDA.B #$02                          ;;8951|----/----\----;
                      STA.W !HW_MDMAEN                    ;;8953|----/----\----; Regular DMA Channel Enable
                      STY.W !HW_VMAINC                    ;;8956|----/----\----; VRAM Address Increment Value
                      LDA.W !Layer2VramAddr+1             ;;8959|----/----\----;
                      INC A                               ;;895C|----/----\----;
                      STA.W !HW_VMADD                     ;;895D|----/----\----; Address for VRAM Read/Write (Low Byte)
                      LDA.W !Layer2VramAddr               ;;8960|----/----\----;
                      CLC                                 ;;8963|----/----\----;
                      ADC.B #$08                          ;;8964|----/----\----;
                      STA.W !HW_VMADD+1                   ;;8966|----/----\----; Address for VRAM Read/Write (High Byte)
                      LDX.B #$06                          ;;8969|----/----\----;
                    - LDA.W DATA_008A47,X                 ;;896B|----/----\----;
                      STA.W !HW_DMAPARAM+$10,X            ;;896E|----/----\----;
                      DEX                                 ;;8971|----/----\----;
                      BPL -                               ;;8972|----/----\----;
                      LDA.B #$02                          ;;8974|----/----\----;
                      STA.W !HW_MDMAEN                    ;;8976|----/----\----; Regular DMA Channel Enable
                      JMP CODE_008A10                     ;;8979|----/----\----;
                                                          ;;                   ;
CODE_00897C:          LDY.B #$80                          ;;897C|----/----\----;
                      STY.W !HW_VMAINC                    ;;897E|----/----\----; VRAM Address Increment Value
                      LDA.W !Layer2VramAddr+1             ;;8981|----/----\----;
                      STA.W !HW_VMADD                     ;;8984|----/----\----; Address for VRAM Read/Write (Low Byte)
                      LDA.W !Layer2VramAddr               ;;8987|----/----\----;
                      STA.W !HW_VMADD+1                   ;;898A|----/----\----; Address for VRAM Read/Write (High Byte)
                      LDX.B #$06                          ;;898D|----/----\----;
                    - LDA.W DATA_008A32,X                 ;;898F|----/----\----;
                      STA.W !HW_DMAPARAM+$10,X            ;;8992|----/----\----;
                      DEX                                 ;;8995|----/----\----;
                      BPL -                               ;;8996|----/----\----;
                      LDA.B #$02                          ;;8998|----/----\----;
                      STA.W !HW_MDMAEN                    ;;899A|----/----\----; Regular DMA Channel Enable
                      STY.W !HW_VMAINC                    ;;899D|----/----\----; VRAM Address Increment Value
                      LDA.W !Layer2VramAddr+1             ;;89A0|----/----\----;
                      STA.W !HW_VMADD                     ;;89A3|----/----\----; Address for VRAM Read/Write (Low Byte)
                      LDA.W !Layer2VramAddr               ;;89A6|----/----\----;
                      CLC                                 ;;89A9|----/----\----;
                      ADC.B #$04                          ;;89AA|----/----\----;
                      STA.W !HW_VMADD+1                   ;;89AC|----/----\----; Address for VRAM Read/Write (High Byte)
                      LDX.B #$06                          ;;89AF|----/----\----;
                    - LDA.W DATA_008A39,X                 ;;89B1|----/----\----;
                      STA.W !HW_DMAPARAM+$10,X            ;;89B4|----/----\----;
                      DEX                                 ;;89B7|----/----\----;
                      BPL -                               ;;89B8|----/----\----;
                      LDA.B #$40                          ;;89BA|----/----\----;
                      STA.W !HW_DMACNT+$10                ;;89BC|----/----\----; Number Bytes to Transfer (Low Byte) (DMA)
                      LDA.B #$02                          ;;89BF|----/----\----;
                      STA.W !HW_MDMAEN                    ;;89C1|----/----\----; Regular DMA Channel Enable
                      STY.W !HW_VMAINC                    ;;89C4|----/----\----; VRAM Address Increment Value
                      LDA.W !Layer2VramAddr+1             ;;89C7|----/----\----;
                      CLC                                 ;;89CA|----/----\----;
                      ADC.B #$20                          ;;89CB|----/----\----;
                      STA.W !HW_VMADD                     ;;89CD|----/----\----; Address for VRAM Read/Write (Low Byte)
                      LDA.W !Layer2VramAddr               ;;89D0|----/----\----;
                      STA.W !HW_VMADD+1                   ;;89D3|----/----\----; Address for VRAM Read/Write (High Byte)
                      LDX.B #$06                          ;;89D6|----/----\----;
                    - LDA.W DATA_008A40,X                 ;;89D8|----/----\----;
                      STA.W !HW_DMAPARAM+$10,X            ;;89DB|----/----\----;
                      DEX                                 ;;89DE|----/----\----;
                      BPL -                               ;;89DF|----/----\----;
                      LDA.B #$02                          ;;89E1|----/----\----;
                      STA.W !HW_MDMAEN                    ;;89E3|----/----\----; Regular DMA Channel Enable
                      STY.W !HW_VMAINC                    ;;89E6|----/----\----; VRAM Address Increment Value
                      LDA.W !Layer2VramAddr+1             ;;89E9|----/----\----;
                      CLC                                 ;;89EC|----/----\----;
                      ADC.B #$20                          ;;89ED|----/----\----;
                      STA.W !HW_VMADD                     ;;89EF|----/----\----; Address for VRAM Read/Write (Low Byte)
                      LDA.W !Layer2VramAddr               ;;89F2|----/----\----;
                      CLC                                 ;;89F5|----/----\----;
                      ADC.B #$04                          ;;89F6|----/----\----;
                      STA.W !HW_VMADD+1                   ;;89F8|----/----\----; Address for VRAM Read/Write (High Byte)
                      LDX.B #$06                          ;;89FB|----/----\----;
                    - LDA.W DATA_008A47,X                 ;;89FD|----/----\----;
                      STA.W !HW_DMAPARAM+$10,X            ;;8A00|----/----\----;
                      DEX                                 ;;8A03|----/----\----;
                      BPL -                               ;;8A04|----/----\----;
                      LDA.B #$40                          ;;8A06|----/----\----;
                      STA.W !HW_DMACNT+$10                ;;8A08|----/----\----; Number Bytes to Transfer (Low Byte) (DMA)
                      LDA.B #$02                          ;;8A0B|----/----\----;
                      STA.W !HW_MDMAEN                    ;;8A0D|----/----\----; Regular DMA Channel Enable
CODE_008A10:          LDA.B #$00                          ;;8A10|----/----\----;
                      STA.W !Layer2VramAddr               ;;8A12|----/----\----;
                      RTL                                 ;;8A15|----/----\----;
                                                          ;;                   ;
                                                          ;;                   ;
DATA_008A16:          db $01,$18,$E6,$1B,$00,$40,$00      ;;8A16|----/----\----;
                                                          ;;                   ;
DATA_008A1D:          db $01,$18,$26,$1C,$00,$2C,$00      ;;8A1D|----/----\----;
                                                          ;;                   ;
DATA_008A24:          db $01,$18,$66,$1C,$00,$40,$00      ;;8A24|----/----\----;
                                                          ;;                   ;
DATA_008A2B:          db $01,$18,$A6,$1C,$00,$2C,$00      ;;8A2B|----/----\----;
                                                          ;;                   ;
DATA_008A32:          db $01,$18,$E8,$1C,$00,$40,$00      ;;8A32|----/----\----;
                                                          ;;                   ;
DATA_008A39:          db $01,$18,$28,$1D,$00,$2C,$00      ;;8A39|----/----\----;
                                                          ;;                   ;
DATA_008A40:          db $01,$18,$68,$1D,$00,$40,$00      ;;8A40|----/----\----;
                                                          ;;                   ;
DATA_008A47:          db $01,$18,$A8,$1D,$00,$2C,$00      ;;8A47|----/----\----;
                                                          ;;                   ;
ClearStack:           REP #$30                            ;;8A4E|----/----\----; Index (16 bit) Accum (16 bit) 
                      LDX.W #$1FFE                        ;;8A50|----/----\----;
CODE_008A53:          STZ.B !_0,X                         ;;8A53|----/----\----;
CODE_008A55:          DEX                                 ;;8A55|----/----\----;
                      DEX                                 ;;8A56|----/----\----;
                      CPX.W #$01FF                        ;;8A57|----/----\----;
                      BPL CODE_008A61                     ;;8A5A|----/----\----;
                      CPX.W #$0100                        ;;8A5C|----/----\----;
                      BPL CODE_008A55                     ;;8A5F|----/----\----;
CODE_008A61:          CPX.W #$FFFE                        ;;8A61|----/----\----;
                      BNE CODE_008A53                     ;;8A64|----/----\----;
                      LDA.W #$0000                        ;;8A66|----/----\----;
                      STA.L !DynStripeImgSize             ;;8A69|----/----\----;
                      STZ.W !DynPaletteIndex              ;;8A6D|----/----\----;
                      SEP #$30                            ;;8A70|----/----\----; Index (8 bit) Accum (8 bit) 
                      LDA.B #$FF                          ;;8A72|----/----\----;
                      STA.L !DynamicStripeImage           ;;8A74|----/----\----;
                      RTS                                 ;;8A78|----/----\----;
                                                          ;;                   ;
SetUpScreen:          STZ.W !HW_SETINI                    ;;8A79|----/----\----; Set "Screen Initial Settings" to x00 ; Screen Initial Settings
                      STZ.W !HW_MOSAIC                    ;;8A7C|----/----\----; Turn off mosaic ; Mosaic Size and BG Enable
                      LDA.B #$23                          ;;8A7F|----/----\----;
                      STA.W !HW_BG1SC                     ;;8A81|----/----\----; BG 1 Address and Size
                      LDA.B #$33                          ;;8A84|----/----\----;
                      STA.W !HW_BG2SC                     ;;8A86|----/----\----; ; BG 2 Address and Size
                      LDA.B #$53                          ;;8A89|----/----\----;
                      STA.W !HW_BG3SC                     ;;8A8B|----/----\----; BG 3 Address and Size
                      LDA.B #$00                          ;;8A8E|----/----\----;
                      STA.W !HW_BG12NBA                   ;;8A90|----/----\----; BG 1 & 2 Tile Data Designation
                      LDA.B #$04                          ;;8A93|----/----\----;
                      STA.W !HW_BG34NBA                   ;;8A95|----/----\----; BG 3 & 4 Tile Data Designation
                      STZ.B !Layer12Window                ;;8A98|----/----\----;
                      STZ.B !Layer34Window                ;;8A9A|----/----\----;
                      STZ.B !OBJCWWindow                  ;;8A9C|----/----\----;
                      STZ.W !HW_WBGLOG                    ;;8A9E|----/----\----; BG 1, 2, 3 and 4 Window Logic Settings
                      STZ.W !HW_WOBJLOG                   ;;8AA1|----/----\----; Color and OBJ Window Logic Settings
                      STZ.W !HW_TMW                       ;;8AA4|----/----\----; Window Mask Designation for Main Screen
                      STZ.W !HW_TSW                       ;;8AA7|----/----\----; Window Mask Designation for Sub Screen
                      LDA.B #$02                          ;;8AAA|----/----\----;
                      STA.B !ColorAddition                ;;8AAC|----/----\----;
                      LDA.B #$80                          ;;8AAE|----/----\----; \ Set Mode7 "Screen Over" to %10000000, disable Mode7 flipping 
                      STA.W !HW_M7SEL                     ;;8AB0|----/----\----; /  ; Initial Setting for Mode 7
                      RTS                                 ;;8AB3|----/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
DATA_008AB4:          db $00,$00,$FE,$00,$00,$00,$FE,$00  ;;8AB4|----/----\----;
DATA_008ABC:          db $00,$00,$02,$00,$00,$00,$02,$00  ;;8ABC|----/----\----;
                      db $00,$00,$00,$01,$FF,$FF,$00,$10  ;;8AC4|----/----\----;
                      db $F0                              ;;8ACC|----/----\----;
                                                          ;;                   ;
CODE_008ACD:          LDA.B !Mode7YScale                  ;;8ACD|----/----\----;
                      STA.B !_0                           ;;8ACF|----/----\----;
                      REP #$30                            ;;8AD1|----/----\----; Index (16 bit) Accum (16 bit) 
                      JSR CODE_008AE8                     ;;8AD3|----/----\----;
                      LDA.B !Mode7XScale                  ;;8AD6|----/----\----;
                      STA.B !_0                           ;;8AD8|----/----\----;
                      REP #$30                            ;;8ADA|----/----\----; Index (16 bit) Accum (16 bit) 
                      LDA.B !Mode7ParamA                  ;;8ADC|----/----\----;
                      STA.B !Mode7ParamD                  ;;8ADE|----/----\----;
                      LDA.B !Mode7ParamB                  ;;8AE0|----/----\----;
                      EOR.W #$FFFF                        ;;8AE2|----/----\----;
                      INC A                               ;;8AE5|----/----\----;
                      STA.B !Mode7ParamC                  ;;8AE6|----/----\----;
CODE_008AE8:          LDA.B !Mode7Angle                   ;;8AE8|----/----\----;
                      ASL A                               ;;8AEA|----/----\----;
                      PHA                                 ;;8AEB|----/----\----;
                      XBA                                 ;;8AEC|----/----\----;
                      AND.W #$0003                        ;;8AED|----/----\----;
                      ASL A                               ;;8AF0|----/----\----;
                      TAY                                 ;;8AF1|----/----\----;
                      PLA                                 ;;8AF2|----/----\----;
                      AND.W #$00FE                        ;;8AF3|----/----\----;
                      EOR.W DATA_008AB4,Y                 ;;8AF6|----/----\----;
                      CLC                                 ;;8AF9|----/----\----;
                      ADC.W DATA_008ABC,Y                 ;;8AFA|----/----\----;
                      TAX                                 ;;8AFD|----/----\----;
                      JSR CODE_008B2B                     ;;8AFE|----/----\----;
                      CPY.W #$0004                        ;;8B01|----/----\----;
                      BCC +                               ;;8B04|----/----\----;
                      EOR.W #$FFFF                        ;;8B06|----/----\----;
                      INC A                               ;;8B09|----/----\----;
                    + STA.B !Mode7ParamB                  ;;8B0A|----/----\----;
                      TXA                                 ;;8B0C|----/----\----;
                      EOR.W #$00FE                        ;;8B0D|----/----\----;
                      CLC                                 ;;8B10|----/----\----;
                      ADC.W #$0002                        ;;8B11|----/----\----;
                      AND.W #$01FF                        ;;8B14|----/----\----;
                      TAX                                 ;;8B17|----/----\----;
                      JSR CODE_008B2B                     ;;8B18|----/----\----;
                      DEY                                 ;;8B1B|----/----\----;
                      DEY                                 ;;8B1C|----/----\----;
                      CPY.W #$0004                        ;;8B1D|----/----\----;
                      BCS +                               ;;8B20|----/----\----;
                      EOR.W #$FFFF                        ;;8B22|----/----\----;
                      INC A                               ;;8B25|----/----\----;
                    + STA.B !Mode7ParamA                  ;;8B26|----/----\----;
                      SEP #$30                            ;;8B28|----/----\----; Index (8 bit) Accum (8 bit) 
                      RTS                                 ;;8B2A|----/----\----;
                                                          ;;                   ;
CODE_008B2B:          SEP #$20                            ;;8B2B|----/----\----; Accum (8 bit) 
                      LDA.W DATA_008B58,X                 ;;8B2D|----/----\----;
                      BEQ +                               ;;8B30|----/----\----;
                      LDA.B !_0                           ;;8B32|----/----\----;
                    + STA.B !_1                           ;;8B34|----/----\----;
                      LDA.W DATA_008B57,X                 ;;8B36|----/----\----;
                      STA.W !HW_WRMPYA                    ;;8B39|----/----\----; Multiplicand A
                      LDA.B !_0                           ;;8B3C|----/----\----;
                      STA.W !HW_WRMPYB                    ;;8B3E|----/----\----; Multplier B
                      NOP                                 ;;8B41|----/----\----;
                      NOP                                 ;;8B42|----/----\----;
                      NOP                                 ;;8B43|----/----\----;
                      NOP                                 ;;8B44|----/----\----;
                      LDA.W !HW_RDMPY+1                   ;;8B45|----/----\----; Product/Remainder Result (High Byte)
                      CLC                                 ;;8B48|----/----\----;
                      ADC.B !_1                           ;;8B49|----/----\----;
                      XBA                                 ;;8B4B|----/----\----;
                      LDA.W !HW_RDMPY                     ;;8B4C|----/----\----; Product/Remainder Result (Low Byte)
                      REP #$20                            ;;8B4F|----/----\----; Accum (16 bit) 
                      LSR A                               ;;8B51|----/----\----;
                      LSR A                               ;;8B52|----/----\----;
                      LSR A                               ;;8B53|----/----\----;
                      LSR A                               ;;8B54|----/----\----;
                      LSR A                               ;;8B55|----/----\----;
                      RTS                                 ;;8B56|----/----\----;
                                                          ;;                   ;
                                                          ;;                   ;
DATA_008B57:          db $00                              ;;8B57|----/----\----;
                                                          ;;                   ;
DATA_008B58:          db $00,$03,$00,$06,$00,$09,$00,$0C  ;;8B58|----/----\----;
                      db $00,$0F,$00,$12,$00,$15,$00,$19  ;;8B60|----/----\----;
                      db $00,$1C,$00,$1F,$00,$22,$00,$25  ;;8B68|----/----\----;
                      db $00,$28,$00,$2B,$00,$2E,$00,$31  ;;8B70|----/----\----;
                      db $00,$35,$00,$38,$00,$3B,$00,$3E  ;;8B78|----/----\----;
                      db $00,$41,$00,$44,$00,$47,$00,$4A  ;;8B80|----/----\----;
                      db $00,$4D,$00,$50,$00,$53,$00,$56  ;;8B88|----/----\----;
                      db $00,$59,$00,$5C,$00,$5F,$00,$61  ;;8B90|----/----\----;
                      db $00,$64,$00,$67,$00,$6A,$00,$6D  ;;8B98|----/----\----;
                      db $00,$70,$00,$73,$00,$75,$00,$78  ;;8BA0|----/----\----;
                      db $00,$7B,$00,$7E,$00,$80,$00,$83  ;;8BA8|----/----\----;
                      db $00,$86,$00,$88,$00,$8B,$00,$8E  ;;8BB0|----/----\----;
                      db $00,$90,$00,$93,$00,$95,$00,$98  ;;8BB8|----/----\----;
                      db $00,$9B,$00,$9D,$00,$9F,$00,$A2  ;;8BC0|----/----\----;
                      db $00,$A4,$00,$A7,$00,$A9,$00,$AB  ;;8BC8|----/----\----;
                      db $00,$AE,$00,$B0,$00,$B2,$00,$B5  ;;8BD0|----/----\----;
                      db $00,$B7,$00,$B9,$00,$BB,$00,$BD  ;;8BD8|----/----\----;
                      db $00,$BF,$00,$C1,$00,$C3,$00,$C5  ;;8BE0|----/----\----;
                      db $00,$C7,$00,$C9,$00,$CB,$00,$CD  ;;8BE8|----/----\----;
                      db $00,$CF,$00,$D1,$00,$D3,$00,$D4  ;;8BF0|----/----\----;
                      db $00,$D6,$00,$D8,$00,$D9,$00,$DB  ;;8BF8|----/----\----;
                      db $00,$DD,$00,$DE,$00,$E0,$00,$E1  ;;8C00|----/----\----;
                      db $00,$E3,$00,$E4,$00,$E6,$00,$E7  ;;8C08|----/----\----;
                      db $00,$E8,$00,$EA,$00,$EB,$00,$EC  ;;8C10|----/----\----;
                      db $00,$ED,$00,$EE,$00,$EF,$00,$F1  ;;8C18|----/----\----;
                      db $00,$F2,$00,$F3,$00,$F4,$00,$F4  ;;8C20|----/----\----;
                      db $00,$F5,$00,$F6,$00,$F7,$00,$F8  ;;8C28|----/----\----;
                      db $00,$F9,$00,$F9,$00,$FA,$00,$FB  ;;8C30|----/----\----;
                      db $00,$FB,$00,$FC,$00,$FC,$00,$FD  ;;8C38|----/----\----;
                      db $00,$FD,$00,$FE,$00,$FE,$00,$FE  ;;8C40|----/----\----;
                      db $00,$FF,$00,$FF,$00,$FF,$00,$FF  ;;8C48|----/----\----;
                      db $00,$FF,$00,$FF,$00,$FF,$00,$00  ;;8C50|----/----\----;
                      db $01,$B7,$3C,$B7,$BC,$B8,$3C,$B9  ;;8C58|----/----\----;
                      db $3C,$BA,$3C,$BB,$3C,$BA,$3C,$BA  ;;8C60|----/----\----;
                      db $BC,$BC,$3C,$BD,$3C,$BE,$3C,$BF  ;;8C68|----/----\----;
                      db $3C,$C0,$3C,$B7,$BC,$C1,$3C,$B9  ;;8C70|----/----\----;
                      db $3C,$C2,$3C,$C2,$BC,$B7,$3C,$C0  ;;8C78|----/----\----;
                      db $FC,$3A,$38,$3B,$38,$3B,$38,$3A  ;;8C80|----/----\----;
                      db $78                              ;;8C88|----/----\----;
                                                          ;;                   ;
DATA_008C89:          db $30,$28,$31,$28,$32,$28,$33,$28  ;;8C89|----/----\----;
                      db $34,$28,$FC,$38,$FC,$3C,$FC,$3C  ;;8C91|----/----\----;
                      db $FC,$3C,$FC,$3C,$FC,$38,$FC,$38  ;;8C99|----/----\----;
                      db $4A,$38,$FC,$38,$FC,$38,$4A,$78  ;;8CA1|----/----\----;
                      db $FC,$38,$3D,$3C,$3E,$3C,$3F,$3C  ;;8CA9|----/----\----;
                      db $FC,$38,$FC,$38,$FC,$38,$2E,$3C  ;;8CB1|----/----\----;
                      db $26,$38,$FC,$38,$FC,$38,$00,$38  ;;8CB9|----/----\----;
                      db $26,$38,$FC,$38,$00,$38,$FC,$38  ;;8CC1|----/----\----;
                      db $FC,$38,$FC,$38,$64,$28,$26,$38  ;;8CC9|----/----\----;
                      db $FC,$38,$FC,$38,$FC,$38,$4A,$38  ;;8CD1|----/----\----;
                      db $FC,$38,$FC,$38,$4A,$78,$FC,$38  ;;8CD9|----/----\----;
                      db $FE,$3C,$FE,$3C,$00,$3C,$FC,$38  ;;8CE1|----/----\----;
                      db $FC,$38,$FC,$38,$FC,$38,$FC,$38  ;;8CE9|----/----\----;
                      db $FC,$38,$FC,$38,$00,$38,$3A,$B8  ;;8CF1|----/----\----;
                      db $3B,$B8,$3B,$B8,$3A,$F8          ;;8CF9|----/----\----;
                                                          ;;                   ;
GM04DoDMA:            LDA.B #$80                          ;;8CFF|----/----\----; More DMA ; Accum (8 bit) 
                      STA.W !HW_VMAINC                    ;;8D01|----/----\----; Increment when $2119 accessed ; VRAM Address Increment Value
                      LDA.B #$2E                          ;;8D04|----/----\----; \VRAM address = #$502E 
                      STA.W !HW_VMADD                     ;;8D06|----/----\----;  | ; Address for VRAM Read/Write (Low Byte)
                      LDA.B #$50                          ;;8D09|----/----\----;  | 
                      STA.W !HW_VMADD+1                   ;;8D0B|----/----\----; / ; Address for VRAM Read/Write (High Byte)
                      LDX.B #$06                          ;;8D0E|----/----\----;
                    - LDA.W DATA_008D90,X                 ;;8D10|----/----\----;
                      STA.W !HW_DMAPARAM+$10,X            ;;8D13|----/----\----; Load up the DMA regs 
                      DEX                                 ;;8D16|----/----\----; DMA Source = 8C:8118 (...) 
                      BPL -                               ;;8D17|----/----\----; Dest = $2118, Transfer: #$08 bytes 
                      LDA.B #$02                          ;;8D19|----/----\----;
                      STA.W !HW_MDMAEN                    ;;8D1B|----/----\----; Do the DMA ; Regular DMA Channel Enable
                      LDA.B #$80                          ;;8D1E|----/----\----; \ Set VRAM mode = same as above 
                      STA.W !HW_VMAINC                    ;;8D20|----/----\----;  |Address = #$5042 ; VRAM Address Increment Value
                      LDA.B #$42                          ;;8D23|----/----\----;  | 
                      STA.W !HW_VMADD                     ;;8D25|----/----\----;  | ; Address for VRAM Read/Write (Low Byte)
                      LDA.B #$50                          ;;8D28|----/----\----;  | 
                      STA.W !HW_VMADD+1                   ;;8D2A|----/----\----; /  ; Address for VRAM Read/Write (High Byte)
                      LDX.B #$06                          ;;8D2D|----/----\----; \ Set up more DMA 
                    - LDA.W DATA_008D97,X                 ;;8D2F|----/----\----;  |Dest = $2100 
                      STA.W !HW_DMAPARAM+$10,X            ;;8D32|----/----\----;  |Fixed source address = $89:1801 (Lunar Address: 7E:1801) 
                      DEX                                 ;;8D35|----/----\----;  |#$808C bytes to transfer 
                      BPL -                               ;;8D36|----/----\----; /Type = One reg write once 
                      LDA.B #$02                          ;;8D38|----/----\----;
                      STA.W !HW_MDMAEN                    ;;8D3A|----/----\----; Start DMA ; Regular DMA Channel Enable
                      LDA.B #$80                          ;;8D3D|----/----\----; \prep VRAM for another write 
                      STA.W !HW_VMAINC                    ;;8D3F|----/----\----;  | ; VRAM Address Increment Value
                      LDA.B #$63                          ;;8D42|----/----\----;  | 
                      STA.W !HW_VMADD                     ;;8D44|----/----\----;  | ; Address for VRAM Read/Write (Low Byte)
                      LDA.B #$50                          ;;8D47|----/----\----;  | 
                      STA.W !HW_VMADD+1                   ;;8D49|----/----\----; / ; Address for VRAM Read/Write (High Byte)
                      LDX.B #$06                          ;;8D4C|----/----\----; \ Load up DMA again 
                    - LDA.W DATA_008D9E,X                 ;;8D4E|----/----\----;  |Dest = $2118 
                      STA.W !HW_DMAPARAM+$10,X            ;;8D51|----/----\----;  |Source Address = $39:8CC1 
                      DEX                                 ;;8D54|----/----\----;  |Size = #$0100 bytes 
                      BPL -                               ;;8D55|----/----\----; /Type = Two reg write once 
                      LDA.B #$02                          ;;8D57|----/----\----; \Start Transfer 
                      STA.W !HW_MDMAEN                    ;;8D59|----/----\----; / ; Regular DMA Channel Enable
                      LDA.B #$80                          ;;8D5C|----/----\----; \ 
                      STA.W !HW_VMAINC                    ;;8D5E|----/----\----;  |Set up VRAM once more ; VRAM Address Increment Value
                      LDA.B #$8E                          ;;8D61|----/----\----;  | 
                      STA.W !HW_VMADD                     ;;8D63|----/----\----;  | ; Address for VRAM Read/Write (Low Byte)
                      LDA.B #$50                          ;;8D66|----/----\----;  | 
                      STA.W !HW_VMADD+1                   ;;8D68|----/----\----; / ; Address for VRAM Read/Write (High Byte)
                      LDX.B #$06                          ;;8D6B|----/----\----; \Last DMA... 
                    - LDA.W DATA_008DA5,X                 ;;8D6D|----/----\----;  |Reg = $2118 Type = Two reg write once 
                      STA.W !HW_DMAPARAM+$10,X            ;;8D70|----/----\----;  |Source Address = $08:8CF7 
                      DEX                                 ;;8D73|----/----\----;  |Size = #$9C00 bytes (o_o) 
                      BPL -                               ;;8D74|----/----\----; / 
                      LDA.B #$02                          ;;8D76|----/----\----; \Transfer 
                      STA.W !HW_MDMAEN                    ;;8D78|----/----\----; / ; Regular DMA Channel Enable
                      LDX.B #$36                          ;;8D7B|----/----\----; \Copy some data into RAM 
                      LDY.B #$6C                          ;;8D7D|----/----\----;  | 
                    - LDA.W DATA_008C89,Y                 ;;8D7F|----/----\----;  | 
                      STA.W !StatusBar,X                  ;;8D82|----/----\----;  | 59
                      DEY                                 ;;8D85|----/----\----;  | 
                      DEY                                 ;;8D86|----/----\----;  | 
                      DEX                                 ;;8D87|----/----\----;  | 
                      BPL -                               ;;8D88|----/----\----; / 
                      LDA.B #$28                          ;;8D8A|----/----\----;
                      STA.W !InGameTimerFrames            ;;8D8C|----/----\----; #$28 -> Timer frame counter 
                      RTS                                 ;;8D8F|----/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
DATA_008D90:          db $01,$18,$81,$8C,$00,$08,$00      ;;8D90|----/----\----;
                                                          ;;                   ;
DATA_008D97:          db $01,$18,$89,$8C,$00,$38,$00      ;;8D97|----/----\----;
                                                          ;;                   ;
DATA_008D9E:          db $01,$18,$C1,$8C,$00,$36,$00      ;;8D9E|----/----\----;
                                                          ;;                   ;
DATA_008DA5:          db $01,$18,$F7,$8C,$00,$08,$00      ;;8DA5|----/----\----;
                                                          ;;                   ;
DrawStatusBar:        STZ.W !HW_VMAINC                    ;;8DAC|----/----\----; Set VRAM Address Increment Value to x00 ; VRAM Address Increment Value
                      LDA.B #$42                          ;;8DAF|----/----\----; \  
                      STA.W !HW_VMADD                     ;;8DB1|----/----\----;  |Set Address for VRAM Read/Write to x5042 ; Address for VRAM Read/Write (Low Byte)
                      LDA.B #$50                          ;;8DB4|----/----\----;  | 
                      STA.W !HW_VMADD+1                   ;;8DB6|----/----\----; /  ; Address for VRAM Read/Write (High Byte)
                      LDX.B #$06                          ;;8DB9|----/----\----; \  
                    - LDA.W DMAdata_StBr1,X               ;;8DBB|----/----\----;  |Load settings from DMAdata_StBr1 into DMA channel 1 
                      STA.W !HW_DMAPARAM+$10,X            ;;8DBE|----/----\----;  | 
                      DEX                                 ;;8DC1|----/----\----;  | 
                      BPL -                               ;;8DC2|----/----\----; /  
                      LDA.B #$02                          ;;8DC4|----/----\----; \ Activate DMA channel 1 
                      STA.W !HW_MDMAEN                    ;;8DC6|----/----\----; /  ; Regular DMA Channel Enable
                      STZ.W !HW_VMAINC                    ;;8DC9|----/----\----; Set VRAM Address Increment Value to x00 ; VRAM Address Increment Value
                      LDA.B #$63                          ;;8DCC|----/----\----; \  
                      STA.W !HW_VMADD                     ;;8DCE|----/----\----;  |Set Address for VRAM Read/Write to x5063 ; Address for VRAM Read/Write (Low Byte)
                      LDA.B #$50                          ;;8DD1|----/----\----;  | 
                      STA.W !HW_VMADD+1                   ;;8DD3|----/----\----; /  ; Address for VRAM Read/Write (High Byte)
                      LDX.B #$06                          ;;8DD6|----/----\----; \  
                    - LDA.W DMAdata_StBr2,X               ;;8DD8|----/----\----;  |Load settings from DMAdata_StBr2 into DMA channel 1 
                      STA.W !HW_DMAPARAM+$10,X            ;;8DDB|----/----\----;  | 
                      DEX                                 ;;8DDE|----/----\----;  | 
                      BPL -                               ;;8DDF|----/----\----; /  
                      LDA.B #$02                          ;;8DE1|----/----\----; \ Activate DMA channel 1 
                      STA.W !HW_MDMAEN                    ;;8DE3|----/----\----; /  ; Regular DMA Channel Enable
                      RTS                                 ;;8DE6|----/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
DMAdata_StBr1:        db $00,$18,$F9,$0E,$00,$1C,$00      ;;8DE7|----/----\----;
                                                          ;;                   ;
DMAdata_StBr2:        db $00,$18,$15,$0F,$00,$1B,$00      ;;8DEE|----/----\----;
                                                          ;;                   ;
DATA_008DF5:          db $40,$41,$42,$43                  ;;8DF5|----/----\----;
                                                          ;;                   ;
DATA_008DF9:          db $44,$24,$26,$48,$0E              ;;8DF9|----/----\----;
                                                          ;;                   ;
DATA_008DFE:          db $00,$02,$04                      ;;8DFE|----/----\----;
                                                          ;;                   ;
DATA_008E01:          db $02,$08,$0A,$00,$04              ;;8E01|----/----\----;
                                                          ;;                   ;
DATA_008E06:          db $B7                              ;;8E06|----/----\----;
                                                          ;;                   ;
DATA_008E07:          db $C3,$B8,$B9,$BA,$BB,$BA,$BF,$BC  ;;8E07|----/----\----;
                      db $BD,$BE,$BF,$C0,$C3,$C1,$B9,$C2  ;;8E0F|----/----\----;
                      db $C4,$B7,$C5                      ;;8E17|----/----\----;
                                                          ;;                   ;
CODE_008E1A:          LDA.W !EndLevelTimer                ;;8E1A|----/----\----; \  
                      ORA.B !SpriteLock                   ;;8E1D|----/----\----;  |If level is ending or sprites are locked, 
                      BNE CODE_008E6F                     ;;8E1F|----/----\----; / branch to $8E6F 
                      LDA.W !IRQNMICommand                ;;8E21|----/----\----;
                      CMP.B #$C1                          ;;8E24|----/----\----;
                      BEQ CODE_008E6F                     ;;8E26|----/----\----;
                      DEC.W !InGameTimerFrames            ;;8E28|----/----\----;
                      BPL CODE_008E6F                     ;;8E2B|----/----\----;
                      LDA.B #$28                          ;;8E2D|----/----\----;
                      STA.W !InGameTimerFrames            ;;8E2F|----/----\----;
                      LDA.W !InGameTimerHundreds          ;;8E32|----/----\----; \  
                      ORA.W !InGameTimerTens              ;;8E35|----/----\----;  |If time is 0, 
                      ORA.W !InGameTimerOnes              ;;8E38|----/----\----;  |branch to $8E6F 
                      BEQ CODE_008E6F                     ;;8E3B|----/----\----; /  
                      LDX.B #$02                          ;;8E3D|----/----\----;
CODE_008E3F:          DEC.W !InGameTimerHundreds,X        ;;8E3F|----/----\----;
                      BPL CODE_008E4C                     ;;8E42|----/----\----;
                      LDA.B #$09                          ;;8E44|----/----\----;
                      STA.W !InGameTimerHundreds,X        ;;8E46|----/----\----;
                      DEX                                 ;;8E49|----/----\----;
                      BPL CODE_008E3F                     ;;8E4A|----/----\----;
CODE_008E4C:          LDA.W !InGameTimerHundreds          ;;8E4C|----/----\----; \  
                      BNE +                               ;;8E4F|----/----\----;  | 
                      LDA.W !InGameTimerTens              ;;8E51|----/----\----;  | 
                      AND.W !InGameTimerOnes              ;;8E54|----/----\----;  |If time is 99, 
                      CMP.B #$09                          ;;8E57|----/----\----;  |speed up the music 
                      BNE +                               ;;8E59|----/----\----;  | 
                      LDA.B #$FF                          ;;8E5B|----/----\----;  | 
                      STA.W !SPCIO0                       ;;8E5D|----/----\----;  | 
                    + LDA.W !InGameTimerHundreds          ;;8E60|----/----\----; \  
                      ORA.W !InGameTimerTens              ;;8E63|----/----\----;  | 
                      ORA.W !InGameTimerOnes              ;;8E66|----/----\----;  |If time is 0, 
                      BNE CODE_008E6F                     ;;8E69|----/----\----;  |JSL to $00F606 
                      JSL KillMario                       ;;8E6B|----/----\----;  | 
CODE_008E6F:          LDA.W !InGameTimerHundreds          ;;8E6F|----/----\----; \  
                      STA.W !StatusBar+$2C                ;;8E72|----/----\----;  | 
                      LDA.W !InGameTimerTens              ;;8E75|----/----\----;  |Copy time to $0F25-$0F27 
                      STA.W !StatusBar+$2D                ;;8E78|----/----\----;  | 
                      LDA.W !InGameTimerOnes              ;;8E7B|----/----\----;  | 
                      STA.W !StatusBar+$2E                ;;8E7E|----/----\----; /  
                      LDX.B #$10                          ;;8E81|----/----\----;
                      LDY.B #$00                          ;;8E83|----/----\----;
CODE_008E85:          LDA.W !InGameTimerHundreds,Y        ;;8E85|----/----\----;
                      BNE CODE_008E95                     ;;8E88|----/----\----;
                      LDA.B #$FC                          ;;8E8A|----/----\----;
                      STA.W !StatusBar+$1C,X              ;;8E8C|----/----\----;
                      INY                                 ;;8E8F|----/----\----;
                      INX                                 ;;8E90|----/----\----;
                      CPY.B #$02                          ;;8E91|----/----\----;
                      BNE CODE_008E85                     ;;8E93|----/----\----;
CODE_008E95:          LDX.B #$03                          ;;8E95|----/----\----;
CODE_008E97:          LDA.W !PlayerScore+2,X              ;;8E97|----/----\----;
                      STA.B !_0                           ;;8E9A|----/----\----;
                      STZ.B !_1                           ;;8E9C|----/----\----;
                      REP #$20                            ;;8E9E|----/----\----; 16 bit A ; Accum (16 bit) 
                      LDA.W !PlayerScore,X                ;;8EA0|----/----\----;
                      SEC                                 ;;8EA3|----/----\----;
                      SBC.W #$423F                        ;;8EA4|----/----\----;
                      LDA.B !_0                           ;;8EA7|----/----\----;
                      SBC.W #$000F                        ;;8EA9|----/----\----;
                      BCC +                               ;;8EAC|----/----\----;
                      SEP #$20                            ;;8EAE|----/----\----; 8 bit A ; Accum (8 bit) 
                      LDA.B #$0F                          ;;8EB0|----/----\----;
                      STA.W !PlayerScore+2,X              ;;8EB2|----/----\----;
                      LDA.B #$42                          ;;8EB5|----/----\----;
                      STA.W !PlayerScore+1,X              ;;8EB7|----/----\----;
                      LDA.B #$3F                          ;;8EBA|----/----\----;
                      STA.W !PlayerScore,X                ;;8EBC|----/----\----;
                    + SEP #$20                            ;;8EBF|----/----\----; 8 bit A ; Accum (8 bit) 
                      DEX                                 ;;8EC1|----/----\----;
                      DEX                                 ;;8EC2|----/----\----;
                      DEX                                 ;;8EC3|----/----\----;
                      BPL CODE_008E97                     ;;8EC4|----/----\----;
                      LDA.W !PlayerScore+2                ;;8EC6|----/----\----; \ Store high byte of Mario's score in $00 
                      STA.B !_0                           ;;8EC9|----/----\----; /  
                      STZ.B !_1                           ;;8ECB|----/----\----; Store x00 in $01 
                      LDA.W !PlayerScore+1                ;;8ECD|----/----\----; \ Store mid byte of Mario's score in $03 
                      STA.B !_3                           ;;8ED0|----/----\----; / 
                      LDA.W !PlayerScore                  ;;8ED2|----/----\----; \ Store low byte of Mario's score in $02 
                      STA.B !_2                           ;;8ED5|----/----\----; / 
                      LDX.B #$14                          ;;8ED7|----/----\----;
                      LDY.B #$00                          ;;8ED9|----/----\----;
                      JSR CODE_009012                     ;;8EDB|----/----\----;
                      LDX.B #$00                          ;;8EDE|----/----\----; \  
CODE_008EE0:          LDA.W !StatusBar+$30,X              ;;8EE0|----/----\----;  | 
                      BNE CODE_008EEF                     ;;8EE3|----/----\----;  | 
                      LDA.B #$FC                          ;;8EE5|----/----\----;  |Replace all leading zeroes in the score with spaces 
                      STA.W !StatusBar+$30,X              ;;8EE7|----/----\----;  | 
                      INX                                 ;;8EEA|----/----\----;  | 
                      CPX.B #$06                          ;;8EEB|----/----\----;  | 
                      BNE CODE_008EE0                     ;;8EED|----/----\----;  | 
CODE_008EEF:          LDA.W !PlayerTurnLvl                ;;8EEF|----/----\----; Get current player 
                      BEQ CODE_008F1D                     ;;8EF2|----/----\----; If player is Mario, branch to $8F1D 
                      LDA.W !PlayerScore+5                ;;8EF4|----/----\----; \ Store high byte of Luigi's score in $00 
                      STA.B !_0                           ;;8EF7|----/----\----; /  
                      STZ.B !_1                           ;;8EF9|----/----\----; Store x00 in $01 
                      LDA.W !PlayerScore+4                ;;8EFB|----/----\----; \ Store mid byte of Luigi's score in $03 
                      STA.B !_3                           ;;8EFE|----/----\----; /  
                      LDA.W !PlayerScore+3                ;;8F00|----/----\----; \ Store low byte of Luigi's score in $02 
                      STA.B !_2                           ;;8F03|----/----\----; /  
                      LDX.B #$14                          ;;8F05|----/----\----;
                      LDY.B #$00                          ;;8F07|----/----\----;
                      JSR CODE_009012                     ;;8F09|----/----\----;
                      LDX.B #$00                          ;;8F0C|----/----\----; \  
CODE_008F0E:          LDA.W !StatusBar+$30,X              ;;8F0E|----/----\----;  | 
                      BNE CODE_008F1D                     ;;8F11|----/----\----;  | 
                      LDA.B #$FC                          ;;8F13|----/----\----;  |Replace all leading zeroes in the score with spaces 
                      STA.W !StatusBar+$30,X              ;;8F15|----/----\----;  | 
                      INX                                 ;;8F18|----/----\----;  | 
                      CPX.B #$06                          ;;8F19|----/----\----;  | 
                      BNE CODE_008F0E                     ;;8F1B|----/----\----; /  
CODE_008F1D:          LDA.W !CoinAdder                    ;;8F1D|----/----\----; \ If Coin increase isn't x00, 
                      BEQ +                               ;;8F20|----/----\----; / branch to $8F3B 
                      DEC.W !CoinAdder                    ;;8F22|----/----\----; Decrease "Coin increase" 
                      INC.W !PlayerCoins                  ;;8F25|----/----\----; Increase coins by 1 
                      LDA.W !PlayerCoins                  ;;8F28|----/----\----; \  
                      CMP.B #$64                          ;;8F2B|----/----\----;  |If coins<100, branch to $8F3B 
                      BCC +                               ;;8F2D|----/----\----; /  
                      INC.W !GivePlayerLives              ;;8F2F|----/----\----; Increase lives by 1 
                      LDA.W !PlayerCoins                  ;;8F32|----/----\----; \  
                      SEC                                 ;;8F35|----/----\----;  |Decrease coins by 100 
                      SBC.B #$64                          ;;8F36|----/----\----;  | 
                      STA.W !PlayerCoins                  ;;8F38|----/----\----; /  
                    + LDA.W !PlayerLives                  ;;8F3B|----/----\----; \ If amount of lives is negative, 
                      BMI +                               ;;8F3E|----/----\----; / branch to $8F49 
                      CMP.B #$62                          ;;8F40|----/----\----; \ If amount of lives is less than 98, 
                      BCC +                               ;;8F42|----/----\----; / branch to $8F49 
                      LDA.B #$62                          ;;8F44|----/----\----; \ Set amount of lives to 98 
                      STA.W !PlayerLives                  ;;8F46|----/----\----; /  
                    + LDA.W !PlayerLives                  ;;8F49|----/----\----; \  
                      INC A                               ;;8F4C|----/----\----;  |Get amount of lives in decimal 
                      JSR HexToDec                        ;;8F4D|----/----\----; /  
                      TXY                                 ;;8F50|----/----\----; \  
                      BNE +                               ;;8F51|----/----\----;  |If 10s is 0, replace with space 
                      LDX.B #$FC                          ;;8F53|----/----\----;  | 
                    + STX.W !StatusBar+$1D                ;;8F55|----/----\----; \ Write lives to status bar 
                      STA.W !StatusBar+$1E                ;;8F58|----/----\----; /  
                      LDX.W !PlayerTurnLvl                ;;8F5B|----/----\----; \ Get bonus stars 
                      LDA.W !PlayerBonusStars,X           ;;8F5E|----/----\----; /  
                      CMP.B #$64                          ;;8F61|----/----\----; \ If bonus stars is less than 100, 
                      BCC +                               ;;8F63|----/----\----; / branch to $8F73 
                      LDA.B #$FF                          ;;8F65|----/----\----; \ Start bonus game when the level ends 
                      STA.W !BonusGameActivate            ;;8F67|----/----\----; /  
                      LDA.W !PlayerBonusStars,X           ;;8F6A|----/----\----; \  
                      SEC                                 ;;8F6D|----/----\----;  |Subtract bonus stars by 100 
                      SBC.B #$64                          ;;8F6E|----/----\----;  | 
                      STA.W !PlayerBonusStars,X           ;;8F70|----/----\----; /  
                    + LDA.W !PlayerCoins                  ;;8F73|----/----\----; \ Get amount of coins in decimal 
                      JSR HexToDec                        ;;8F76|----/----\----; /  
                      TXY                                 ;;8F79|----/----\----; \ 
                      BNE +                               ;;8F7A|----/----\----;  |If 10s is 0, replace with space 
                      LDX.B #$FC                          ;;8F7C|----/----\----;  | 
                    + STA.W !StatusBar+$1B                ;;8F7E|----/----\----; \ Write coins to status bar 
                      STX.W !StatusBar+$1A                ;;8F81|----/----\----; /  
                      SEP #$20                            ;;8F84|----/----\----; 8 bit A ; Accum (8 bit) 
                      LDX.W !PlayerTurnLvl                ;;8F86|----/----\----; Load Character into X 
                      STZ.B !_0                           ;;8F89|----/----\----;
                      STZ.B !_1                           ;;8F8B|----/----\----;
                      STZ.B !_3                           ;;8F8D|----/----\----;
                      LDA.W !PlayerBonusStars,X           ;;8F8F|----/----\----;
                      STA.B !_2                           ;;8F92|----/----\----;
                      LDX.B #$09                          ;;8F94|----/----\----;
                      LDY.B #$10                          ;;8F96|----/----\----;
                      JSR CODE_009051                     ;;8F98|----/----\----;
                      LDX.B #$00                          ;;8F9B|----/----\----;
CODE_008F9D:          LDA.W !StatusBar+$25,X              ;;8F9D|----/----\----;
                      BNE CODE_008FAF                     ;;8FA0|----/----\----;
                      LDA.B #$FC                          ;;8FA2|----/----\----;
                      STA.W !StatusBar+$25,X              ;;8FA4|----/----\----;
                      STA.W !StatusBar+$0A,X              ;;8FA7|----/----\----;
                      INX                                 ;;8FAA|----/----\----;
                      CPX.B #$01                          ;;8FAB|----/----\----;
                      BNE CODE_008F9D                     ;;8FAD|----/----\----;
CODE_008FAF:          LDA.W !StatusBar+$25,X              ;;8FAF|----/----\----;
                      ASL A                               ;;8FB2|----/----\----;
                      TAY                                 ;;8FB3|----/----\----;
                      LDA.W DATA_008E06,Y                 ;;8FB4|----/----\----;
                      STA.W !StatusBar+$0A,X              ;;8FB7|----/----\----;
                      LDA.W DATA_008E07,Y                 ;;8FBA|----/----\----;
                      STA.W !StatusBar+$25,X              ;;8FBD|----/----\----;
                      INX                                 ;;8FC0|----/----\----;
                      CPX.B #$02                          ;;8FC1|----/----\----;
                      BNE CODE_008FAF                     ;;8FC3|----/----\----;
                      JSR CODE_009079                     ;;8FC5|----/----\----;
                      LDA.W !PlayerTurnLvl                ;;8FC8|----/----\----;
                      BEQ CODE_008FD8                     ;;8FCB|----/----\----;
                      LDX.B #$04                          ;;8FCD|----/----\----;
                    - LDA.W DATA_008DF5,X                 ;;8FCF|----/----\----;
                      STA.W !StatusBar,X                  ;;8FD2|----/----\----;
                      DEX                                 ;;8FD5|----/----\----;
                      BPL -                               ;;8FD6|----/----\----;
CODE_008FD8:          LDA.W !DragonCoinsShown             ;;8FD8|----/----\----;
                      CMP.B #$05                          ;;8FDB|----/----\----;
                      BCC +                               ;;8FDD|----/----\----;
                      LDA.B #$00                          ;;8FDF|----/----\----;
                    + DEC A                               ;;8FE1|----/----\----;
                      STA.B !_0                           ;;8FE2|----/----\----;
                      LDX.B #$00                          ;;8FE4|----/----\----;
CODE_008FE6:          LDY.B #$FC                          ;;8FE6|----/----\----;
                      LDA.B !_0                           ;;8FE8|----/----\----;
                      BMI +                               ;;8FEA|----/----\----;
                      LDY.B #$2E                          ;;8FEC|----/----\----;
                    + TYA                                 ;;8FEE|----/----\----;
                      STA.W !StatusBar+6,X                ;;8FEF|----/----\----;
                      DEC.B !_0                           ;;8FF2|----/----\----;
                      INX                                 ;;8FF4|----/----\----;
                      CPX.B #$04                          ;;8FF5|----/----\----;
                      BNE CODE_008FE6                     ;;8FF7|----/----\----;
                      RTS                                 ;;8FF9|----/----\----;
                                                          ;;                   ;
                                                          ;;                   ;
DATA_008FFA:          db $01,$00                          ;;8FFA|----/----\----;
                                                          ;;                   ;
DATA_008FFC:          db $A0,$86,$00,$00,$10,$27,$00,$00  ;;8FFC|----/----\----;
                      db $E8,$03,$00,$00,$64,$00,$00,$00  ;;9004|----/----\----;
                      db $0A,$00,$00,$00,$01,$00          ;;900C|----/----\----;
                                                          ;;                   ;
CODE_009012:          SEP #$20                            ;;9012|----/----\----; 8 bit A ; Accum (8 bit) 
                      STZ.W !StatusBar+$1C,X              ;;9014|----/----\----;
CODE_009017:          REP #$20                            ;;9017|----/----\----; 16 bit A ; Accum (16 bit) 
                      LDA.B !_2                           ;;9019|----/----\----;
                      SEC                                 ;;901B|----/----\----;
                      SBC.W DATA_008FFC,Y                 ;;901C|----/----\----;
                      STA.B !_6                           ;;901F|----/----\----;
                      LDA.B !_0                           ;;9021|----/----\----;
                      SBC.W DATA_008FFA,Y                 ;;9023|----/----\----;
                      STA.B !_4                           ;;9026|----/----\----;
                      BCC CODE_009039                     ;;9028|----/----\----;
                      LDA.B !_6                           ;;902A|----/----\----;
                      STA.B !_2                           ;;902C|----/----\----;
                      LDA.B !_4                           ;;902E|----/----\----;
                      STA.B !_0                           ;;9030|----/----\----;
                      SEP #$20                            ;;9032|----/----\----; 8 bit A ; Accum (8 bit) 
                      INC.W !StatusBar+$1C,X              ;;9034|----/----\----;
                      BRA CODE_009017                     ;;9037|----/----\----;
                                                          ;;                   ;
CODE_009039:          INX                                 ;;9039|----/----\----;
                      INY                                 ;;903A|----/----\----;
                      INY                                 ;;903B|----/----\----;
                      INY                                 ;;903C|----/----\----;
                      INY                                 ;;903D|----/----\----;
                      CPY.B #$18                          ;;903E|----/----\----;
                      BNE CODE_009012                     ;;9040|----/----\----;
                      SEP #$20                            ;;9042|----/----\----; 8 bit A ; Accum (8 bit) 
                      RTS                                 ;;9044|----/----\----;
                                                          ;;                   ;
HexToDec:             LDX.B #$00                          ;;9045|----/----\----;  | 
CODE_009047:          CMP.B #$0A                          ;;9047|----/----\----;  | 
                      BCC Return009050                    ;;9049|----/----\----;  |Sets A to 10s of original A 
                      SBC.B #$0A                          ;;904B|----/----\----;  |Sets X to 1s of original A 
                      INX                                 ;;904D|----/----\----;  | 
                      BRA CODE_009047                     ;;904E|----/----\----;  | 
                                                          ;;                   ;
Return009050:         RTS                                 ;;9050|----/----\----; /  
                                                          ;;                   ;
CODE_009051:          SEP #$20                            ;;9051|----/----\----; Accum (8 bit) 
                      STZ.W !StatusBar+$1C,X              ;;9053|----/----\----;
CODE_009056:          REP #$20                            ;;9056|----/----\----; Accum (16 bit) 
                      LDA.B !_2                           ;;9058|----/----\----;
                      SEC                                 ;;905A|----/----\----;
                      SBC.W DATA_008FFC,Y                 ;;905B|----/----\----;
                      STA.B !_6                           ;;905E|----/----\----;
                      BCC CODE_00906D                     ;;9060|----/----\----;
                      LDA.B !_6                           ;;9062|----/----\----;
                      STA.B !_2                           ;;9064|----/----\----;
                      SEP #$20                            ;;9066|----/----\----; Accum (8 bit) 
                      INC.W !StatusBar+$1C,X              ;;9068|----/----\----;
                      BRA CODE_009056                     ;;906B|----/----\----;
                                                          ;;                   ;
CODE_00906D:          INX                                 ;;906D|----/----\----;
                      INY                                 ;;906E|----/----\----;
                      INY                                 ;;906F|----/----\----;
                      INY                                 ;;9070|----/----\----;
                      INY                                 ;;9071|----/----\----;
                      CPY.B #$18                          ;;9072|----/----\----;
                      BNE CODE_009051                     ;;9074|----/----\----;
                      SEP #$20                            ;;9076|----/----\----; Accum (8 bit) 
                      RTS                                 ;;9078|----/----\----;
                                                          ;;                   ;
CODE_009079:          LDY.B #$E0                          ;;9079|----/----\----;
                      BIT.W !IRQNMICommand                ;;907B|----/----\----;
                      BVC +                               ;;907E|----/----\----;
                      LDY.B #$00                          ;;9080|----/----\----;
                      LDA.W !IRQNMICommand                ;;9082|----/----\----;
                      CMP.B #$C1                          ;;9085|----/----\----;
                      BEQ +                               ;;9087|----/----\----;
                      LDA.B #$F0                          ;;9089|----/----\----;
                      STA.W !OAMTileYPos,Y                ;;908B|----/----\----;
                    + STY.B !_1                           ;;908E|----/----\----;
                      LDY.W !PlayerItembox                ;;9090|----/----\----;
                      BEQ Return0090D0                    ;;9093|----/----\----;
                      LDA.W DATA_008E01,Y                 ;;9095|----/----\----;
                      STA.B !_0                           ;;9098|----/----\----;
                      CPY.B #$03                          ;;909A|----/----\----;
                      BNE +                               ;;909C|----/----\----;
                      LDA.B !TrueFrame                    ;;909E|----/----\----;
                      LSR A                               ;;90A0|----/----\----;
                      AND.B #$03                          ;;90A1|----/----\----;
                      PHY                                 ;;90A3|----/----\----;
                      TAY                                 ;;90A4|----/----\----;
                      LDA.W DATA_008DFE,Y                 ;;90A5|----/----\----;
                      PLY                                 ;;90A8|----/----\----;
                      STA.B !_0                           ;;90A9|----/----\----;
                    + LDY.B !_1                           ;;90AB|----/----\----;
                      LDA.B #$78                          ;;90AD|----/----\----;
                      STA.W !OAMTileXPos,Y                ;;90AF|----/----\----;
                      LDA.B #$0F                          ;;90B2|----/----\----;
                      STA.W !OAMTileYPos,Y                ;;90B4|----/----\----;
                      LDA.B #$30                          ;;90B7|----/----\----;
                      ORA.B !_0                           ;;90B9|----/----\----;
                      STA.W !OAMTileAttr,Y                ;;90BB|----/----\----;
                      LDX.W !PlayerItembox                ;;90BE|----/----\----;
                      LDA.W DATA_008DF9,X                 ;;90C1|----/----\----;
                      STA.W !OAMTileNo,Y                  ;;90C4|----/----\----;
                      TYA                                 ;;90C7|----/----\----;
                      LSR A                               ;;90C8|----/----\----;
                      LSR A                               ;;90C9|----/----\----;
                      TAY                                 ;;90CA|----/----\----;
                      LDA.B #$02                          ;;90CB|----/----\----;
                      STA.W !OAMTileSize,Y                ;;90CD|----/----\----;
Return0090D0:         RTS                                 ;;90D0|----/----\----;
                                                          ;;                   ;
                                                          ;;                   ;
DATA_0090D1:          db $00,$FF,$4D,$4C,$03,$4D,$5D,$FF  ;;90D1|----/----\----;
                      db $03,$00,$4C,$03,$04,$15,$00,$02  ;;90D9|----/----\----;
                      db $00,$4A,$4E,$FF,$4C,$4B,$4A,$03  ;;90E1|----/----\----;
                      db $5F,$05,$04,$03,$02,$00,$FF,$01  ;;90E9|----/----\----;
                      db $4A,$5F,$05,$04,$00,$4D,$5D,$03  ;;90F1|----/----\----;
                      db $02,$01,$00,$FF,$5B,$14,$5F,$01  ;;90F9|----/----\----;
                      db $5E,$FF,$FF,$FF                  ;;9101|----/----\----;
                                                          ;;                   ;
DATA_009105:          db $10,$FF,$00,$5C,$13,$00,$5D,$FF  ;;9105|----/----\----;
                      db $03,$00,$5C,$13,$14,$15,$00,$12  ;;910D|----/----\----;
                      db $00,$03,$5E,$FF,$5C,$4B,$5A,$03  ;;9115|----/----\----;
                      db $5F,$05,$14,$13,$12,$10,$FF,$11  ;;911D|----/----\----;
                      db $03,$5F,$05,$14,$00,$00,$5D,$03  ;;9125|----/----\----;
                      db $12,$11,$10,$FF,$5B,$01,$5F,$01  ;;912D|----/----\----;
                      db $5E,$FF,$FF,$FF                  ;;9135|----/----\----;
                                                          ;;                   ;
DATA_009139:          db $34,$00,$34,$34,$34,$34,$30,$00  ;;9139|----/----\----;
                      db $34,$34,$34,$34,$74,$34,$34,$34  ;;9141|----/----\----;
                      db $34,$34,$34,$00,$34,$34,$34,$34  ;;9149|----/----\----;
                      db $34,$34,$34,$34,$34,$34,$00,$34  ;;9151|----/----\----;
                      db $34,$34,$34,$34,$34,$34,$34,$34  ;;9159|----/----\----;
                      db $34,$34,$34,$34,$34,$34,$34,$34  ;;9161|----/----\----;
                      db $34                              ;;9169|----/----\----;
                                                          ;;                   ;
DATA_00916A:          db $34,$00,$B4,$34,$34,$B4,$F0,$00  ;;916A|----/----\----;
                      db $B4,$B4,$34,$34,$74,$B4,$B4,$34  ;;9172|----/----\----;
                      db $B4,$B4,$34,$00,$34,$B4,$34,$B4  ;;917A|----/----\----;
                      db $B4,$B4,$34,$34,$34,$34,$00,$34  ;;9182|----/----\----;
                      db $B4,$B4,$B4,$34,$B4,$B4,$B4,$B4  ;;918A|----/----\----;
                      db $34,$34,$34,$34,$F4,$B4,$F4,$B4  ;;9192|----/----\----;
                      db $B4                              ;;919A|----/----\----;
                                                          ;;                   ;
CODE_00919B:          LDA.B !PlayerAnimation              ;;919B|----/----\----;
                      CMP.B #$0A                          ;;919D|----/----\----;
                      BNE CODE_0091A6                     ;;919F|----/----\----;
                      JSR CODE_00C593                     ;;91A1|----/----\----;
                      BRA +                               ;;91A4|----/----\----;
                                                          ;;                   ;
CODE_0091A6:          LDA.W !SublevelCount                ;;91A6|----/----\----;
                      BNE +                               ;;91A9|----/----\----;
                      LDA.B #$1E                          ;;91AB|----/----\----;
                      STA.W !GreenStarBlockCoins          ;;91AD|----/----\----;
                    + RTS                                 ;;91B0|----/----\----;
                                                          ;;                   ;
CODE_0091B1:          JSR CODE_00A82D                     ;;91B1|----/----\----;
                      LDX.B #$00                          ;;91B4|----/----\----;
                      LDA.B #$B0                          ;;91B6|----/----\----;
                      LDY.W !BonusGameActivate            ;;91B8|----/----\----;
                      BEQ +                               ;;91BB|----/----\----;
                      STZ.W !InGameTimerHundreds          ;;91BD|----/----\----; \  
                      STZ.W !InGameTimerTens              ;;91C0|----/----\----;  |Set timer to 000 
                      STZ.W !InGameTimerOnes              ;;91C3|----/----\----; /  
                      LDX.B #$26                          ;;91C6|----/----\----;
                      LDA.B #$A4                          ;;91C8|----/----\----;
                    + STA.B !_0                           ;;91CA|----/----\----;
                      STZ.B !_1                           ;;91CC|----/----\----;
                      LDY.B #$70                          ;;91CE|----/----\----;
CODE_0091D0:          JSR CODE_0091E9                     ;;91D0|----/----\----;
                      INX                                 ;;91D3|----/----\----;
                      CPX.B #$08                          ;;91D4|----/----\----;
                      BNE +                               ;;91D6|----/----\----;
                      LDA.W !PlayerTurnLvl                ;;91D8|----/----\----;
                      BEQ +                               ;;91DB|----/----\----;
                      LDX.B #$0E                          ;;91DD|----/----\----;
                    + TYA                                 ;;91DF|----/----\----;
                      SEC                                 ;;91E0|----/----\----;
                      SBC.B #$08                          ;;91E1|----/----\----;
                      TAY                                 ;;91E3|----/----\----;
                      BNE CODE_0091D0                     ;;91E4|----/----\----;
                      JMP CODE_008494                     ;;91E6|----/----\----;
                                                          ;;                   ;
CODE_0091E9:          LDA.W DATA_009139,X                 ;;91E9|----/----\----;
                      STA.W !OAMTileAttr+$108,Y           ;;91EC|----/----\----;
                      LDA.W DATA_00916A,X                 ;;91EF|----/----\----;
                      STA.W !OAMTileAttr+$10C,Y           ;;91F2|----/----\----;
                      LDA.B !_0                           ;;91F5|----/----\----;
                      STA.W !OAMTileXPos+$108,Y           ;;91F7|----/----\----;
                      STA.W !OAMTileXPos+$10C,Y           ;;91FA|----/----\----;
                      SEC                                 ;;91FD|----/----\----;
                      SBC.B #$08                          ;;91FE|----/----\----;
                      STA.B !_0                           ;;9200|----/----\----;
                      BCS +                               ;;9202|----/----\----;
                      DEC.B !_1                           ;;9204|----/----\----;
                    + PHY                                 ;;9206|----/----\----;
                      TYA                                 ;;9207|----/----\----;
                      LSR A                               ;;9208|----/----\----;
                      LSR A                               ;;9209|----/----\----;
                      TAY                                 ;;920A|----/----\----;
                      LDA.B !_1                           ;;920B|----/----\----;
                      AND.B #$01                          ;;920D|----/----\----;
                      STA.W !OAMTileSize+$42,Y            ;;920F|----/----\----;
                      STA.W !OAMTileSize+$43,Y            ;;9212|----/----\----;
                      PLY                                 ;;9215|----/----\----;
                      LDA.W DATA_0090D1,X                 ;;9216|----/----\----;
                      BMI +                               ;;9219|----/----\----;
                      STA.W !OAMTileNo+$108,Y             ;;921B|----/----\----;
                      LDA.W DATA_009105,X                 ;;921E|----/----\----;
                      STA.W !OAMTileNo+$10C,Y             ;;9221|----/----\----;
                      LDA.B #$68                          ;;9224|----/----\----;
                      STA.W !OAMTileYPos+$108,Y           ;;9226|----/----\----;
                      LDA.B #$70                          ;;9229|----/----\----;
                      STA.W !OAMTileYPos+$10C,Y           ;;922B|----/----\----;
                    + RTS                                 ;;922E|----/----\----;
                                                          ;;                   ;
CODE_00922F:          STZ.W !MainPalette                  ;;922F|----/----\----;
                      STZ.W !MainPalette+1                ;;9232|----/----\----;
                      STZ.W !HW_CGADD                     ;;9235|----/----\----; Set "Address for CG-RAM Write" to 0 ; Address for CG-RAM Write
                      LDX.B #$06                          ;;9238|----/----\----;
                    - LDA.W DATA_009249,X                 ;;923A|----/----\----;
                      STA.W !HW_DMAPARAM+$20,X            ;;923D|----/----\----;
                      DEX                                 ;;9240|----/----\----;
                      BPL -                               ;;9241|----/----\----;
                      LDA.B #$04                          ;;9243|----/----\----;
                      STA.W !HW_MDMAEN                    ;;9245|----/----\----; Regular DMA Channel Enable
                      RTS                                 ;;9248|----/----\----;
                                                          ;;                   ;
                                                          ;;                   ;
DATA_009249:          db $00,$22,$03,$07,$00,$00,$02      ;;9249|----/----\----;
                                                          ;;                   ;
CODE_009250:          LDX.B #$04                          ;;9250|----/----\----;
                    - LDA.W DATA_009277,X                 ;;9252|----/----\----;
                      STA.W !HW_DMAPARAM+$70,X            ;;9255|----/----\----;
                      DEX                                 ;;9258|----/----\----;
                      BPL -                               ;;9259|----/----\----;
                      LDA.B #$00                          ;;925B|----/----\----;
                      STA.W !HW_HDMABANK+$70              ;;925D|----/----\----; Data Bank (H-DMA)
CODE_009260:          STZ.W !HDMAEnable                   ;;9260|----/----\----; Disable all HDMA channels 
CODE_009263:          REP #$10                            ;;9263|----/----\----; 16 bit A ; Index (16 bit) 
                      LDX.W #$01BE                        ;;9265|----/----\----; \  
                      LDA.B #$FF                          ;;9268|----/----\----;  | 
                    - STA.W !WindowTable,X                ;;926A|----/----\----;  |Clear "HDMA table for windowing effects" 
                      STZ.W !WindowTable+1,X              ;;926D|----/----\----;  |...hang on again.  It clears one set of RAM here, but not the same 
                      DEX                                 ;;9270|----/----\----;  | 
                      DEX                                 ;;9271|----/----\----;  | 
                      BPL -                               ;;9272|----/----\----; /  
                      SEP #$10                            ;;9274|----/----\----; \ Set A to 8bit and return ; Index (8 bit) 
                      RTS                                 ;;9276|----/----\----; /  
                                                          ;;                   ;
                                                          ;;                   ;
DATA_009277:          db $41,$26,$7C,$92,$00,$F0,$A0,$04  ;;9277|----/----\----;
                      db $F0,$80,$05,$00                  ;;927F|----/----\----;
                                                          ;;                   ;
CODE_009283:          JSR CODE_009263                     ;;9283|----/----\----;
                      LDA.W !IRQNMICommand                ;;9286|----/----\----;
                      LSR A                               ;;9289|----/----\----;
                      BCS CODE_0092A0                     ;;928A|----/----\----;
                      REP #$10                            ;;928C|----/----\----; Index (16 bit) 
                      LDX.W #$01BE                        ;;928E|----/----\----;
                    - STZ.W !WindowTable,X                ;;9291|----/----\----; out? 
                      LDA.B #$FF                          ;;9294|----/----\----; *note to self: ctrl+insert, not shift+insert* 
                      STA.W !WindowTable+1,X              ;;9296|----/----\----; ...  This is, uh, strange.  It pastes $00FF into the $04A0,x table 
                      INX                                 ;;9299|----/----\----; instead of $FF00 o_O 
                      INX                                 ;;929A|----/----\----;
                      CPX.W #$01C0                        ;;929B|----/----\----;
                      BCC -                               ;;929E|----/----\----;
CODE_0092A0:          LDA.B #$80                          ;;92A0|----/----\----;  Enable channel 7 in HDMA, disable all other HDMA channels 
                      STA.W !HDMAEnable                   ;;92A2|----/----\----;  $7E:0D9F - H-DMA Channel Enable RAM Mirror 
                      SEP #$10                            ;;92A5|----/----\----; Index (8 bit) 
                      RTS                                 ;;92A7|----/----\----;
                                                          ;;                   ;
CODE_0092A8:          JSR CODE_009263                     ;;92A8|----/----\----; these are somewhat the same subroutine, but also not >_> 
                      REP #$10                            ;;92AB|----/----\----; Index (16 bit) 
                      LDX.W #$0198                        ;;92AD|----/----\----;
                      BRA -                               ;;92B0|----/----\----;
                                                          ;;                   ;
CODE_0092B2:          LDA.B #$58                          ;;92B2|----/----\----; Index (8 bit) 
                      STA.W !WindowTable                  ;;92B4|----/----\----;
                      STA.W !WindowTable+$0A              ;;92B7|----/----\----;
                      STA.W !WindowTable+$14              ;;92BA|----/----\----;
                      STZ.W !WindowTable+9                ;;92BD|----/----\----;
                      STZ.W !WindowTable+$13              ;;92C0|----/----\----;
                      STZ.W !WindowTable+$1D              ;;92C3|----/----\----;
                      LDX.B #$04                          ;;92C6|----/----\----;
                    - LDA.W DATA_009313,X                 ;;92C8|----/----\----;
                      STA.W !HW_DMAPARAM+$50,X            ;;92CB|----/----\----;
                      LDA.W DATA_009318,X                 ;;92CE|----/----\----;
                      STA.W !HW_DMAPARAM+$60,X            ;;92D1|----/----\----;
                      LDA.W DATA_00931D,X                 ;;92D4|----/----\----;
                      STA.W !HW_DMAPARAM+$70,X            ;;92D7|----/----\----;
                      DEX                                 ;;92DA|----/----\----;
                      BPL -                               ;;92DB|----/----\----;
                      LDA.B #$00                          ;;92DD|----/----\----;
                      STA.W !HW_HDMABANK+$50              ;;92DF|----/----\----; Data Bank (H-DMA)
                      STA.W !HW_HDMABANK+$60              ;;92E2|----/----\----; Data Bank (H-DMA)
                      STA.W !HW_HDMABANK+$70              ;;92E5|----/----\----; Data Bank (H-DMA)
                      LDA.B #$E0                          ;;92E8|----/----\----;
                      STA.W !HDMAEnable                   ;;92EA|----/----\----;
CODE_0092ED:          REP #$30                            ;;92ED|----/----\----; Index (16 bit) Accum (16 bit) 
                      LDY.W #$0008                        ;;92EF|----/----\----;
                      LDX.W #$0014                        ;;92F2|----/----\----;
                    - LDA.W !Layer1XPos,Y                 ;;92F5|----/----\----;
                      STA.W !WindowTable+1,X              ;;92F8|----/----\----;
                      STA.W !WindowTable+4,X              ;;92FB|----/----\----;
                      LDA.W !NextLayer1XPos,Y             ;;92FE|----/----\----;
                      STA.W !WindowTable+7,X              ;;9301|----/----\----;
                      TXA                                 ;;9304|----/----\----;
                      SEC                                 ;;9305|----/----\----;
                      SBC.W #$000A                        ;;9306|----/----\----;
                      TAX                                 ;;9309|----/----\----;
                      DEY                                 ;;930A|----/----\----;
                      DEY                                 ;;930B|----/----\----;
                      DEY                                 ;;930C|----/----\----;
                      DEY                                 ;;930D|----/----\----;
                      BPL -                               ;;930E|----/----\----;
                      SEP #$30                            ;;9310|----/----\----; Index (8 bit) Accum (8 bit) 
                      RTS                                 ;;9312|----/----\----;
                                                          ;;                   ;
                                                          ;;                   ;
DATA_009313:          db $02,$0D,$A0,$04,$00              ;;9313|----/----\----;
                                                          ;;                   ;
DATA_009318:          db $02,$0F,$AA,$04,$00              ;;9318|----/----\----;
                                                          ;;                   ;
DATA_00931D:          db $02,$11,$B4,$04,$00              ;;931D|----/----\----;
                                                          ;;                   ;
GetGameMode:          LDA.W !GameMode                     ;;9322|----/----\----; Load game mode 
                      JSL ExecutePtr                      ;;9325|----/----\----;
                                                          ;;                   ;
                      dw CODE_009391                      ;;9329|----/----\----; 00 - 
                      dw CODE_00940F                      ;;932B|----/----\----; 01 - 
                      dw CODE_009F6F                      ;;932D|----/----\----; 02 - 
                      dw CODE_0096AE                      ;;932F|----/----\----; 03 - 
                      dw CODE_009A8B                      ;;9331|----/----\----; 04 - 
                      dw CODE_009F6F                      ;;9333|----/----\----; 05 - 
                      dw CODE_00941B                      ;;9335|----/----\----; 06 - 
                      dw GAMEMODE_07                      ;;9337|----/----\----; 07 - 
                      dw CODE_009CD1                      ;;9339|----/----\----; 08 - 
                      dw CODE_009B1A                      ;;933B|----/----\----; 09 - 
                      dw CODE_009DFA                      ;;933D|----/----\----; 0A - 
                      dw CODE_009F6F                      ;;933F|----/----\----; 0B - 
                      dw CODE_00A087                      ;;9341|----/----\----; 0C - 
                      dw CODE_009F6F                      ;;9343|----/----\----; 0D - 
                      dw CODE_00A1BE                      ;;9345|----/----\----; 0E - 
                      dw TmpFade                          ;;9347|----/----\----; 0F - 
                      dw CODE_00968E                      ;;9349|----/----\----; 10 - 
                      dw CODE_0096D5                      ;;934B|----/----\----; 11 - 
                      dw GM04Load                         ;;934D|----/----\----; 12 - 
                      dw TmpFade                          ;;934F|----/----\----; 13 - 
                      dw CODE_00A1DA                      ;;9351|----/----\----; 14 - 
                      dw CODE_009F6F                      ;;9353|----/----\----; 15 - 
                      dw CODE_009750                      ;;9355|----/----\----; 16 - 
                      dw CODE_009759                      ;;9357|----/----\----; 17 - 
                      dw CODE_009F6F                      ;;9359|----/----\----; 18 - 
                      dw CODE_009468                      ;;935B|----/----\----; 19 - 
                      dw CODE_009F6F                      ;;935D|----/----\----; 1A - 
                      dw CODE_0094FD                      ;;935F|----/----\----; 1B - 
                      dw CODE_009F6F                      ;;9361|----/----\----; 1C - 
                      dw CODE_009583                      ;;9363|----/----\----; 1D - f
                      dw CODE_009F6F                      ;;9365|----/----\----; 1E - 
                      dw CODE_0095AB                      ;;9367|----/----\----; 1F - f
                      dw CODE_009F6F                      ;;9369|----/----\----; 20 - 
                      dw CODE_0095BC                      ;;936B|----/----\----; 21 - 
                      dw CODE_009F6F                      ;;936D|----/----\----; 22 - 
                      dw CODE_0095C1                      ;;936F|----/----\----; 23 - 
                      dw CODE_009F6F                      ;;9371|----/----\----; 24 - 
                      dw CODE_00962C                      ;;9373|----/----\----; 25 - 
                      dw CODE_009F6F                      ;;9375|----/----\----; 26 - 
                      dw CODE_00963D                      ;;9377|----/----\----; 27 - 
                      dw CODE_009F7C                      ;;9379|----/----\----; 28 - 
                      dw Return00968D                     ;;937B|----/----\----; 29 - 
                                                          ;;                   ;
TurnOffIO:            STZ.W !HW_NMITIMEN                  ;;937D|----/----\----; Disable NMI ,VIRQ, HIRQ, Joypads ; NMI, V/H Count, and Joypad Enable
                      STZ.W !HW_HDMAEN                    ;;9380|----/----\----; Turn off all HDMA ; H-DMA Channel Enable
                      LDA.B #$80                          ;;9383|----/----\----; \ 
                      STA.W !HW_INIDISP                   ;;9385|----/----\----; /Disable Screen ; Screen Display Register
                      RTS                                 ;;9388|----/----\----; And return 
                                                          ;;                   ;
                                                          ;;                   ;
NintendoPos:          db $60,$70,$80,$90                  ;;9389|----/----\----;
                                                          ;;                   ;
NintendoTile:         db $02,$04,$06,$08                  ;;938D|----/----\----; Nintendo Presents tilemap 
                                                          ;;                   ;
CODE_009391:          JSR CODE_0085FA                     ;;9391|----/----\----;
                      JSR SetUpScreen                     ;;9394|----/----\----;
                      JSR CODE_00A993                     ;;9397|----/----\----;
                      LDY.B #$0C                          ;;939A|----/----\----; \ Load Nintendo Presents logo 
                      LDX.B #$03                          ;;939C|----/----\----;  | 
                    - LDA.W NintendoPos,X                 ;;939E|----/----\----;  | 
                      STA.W !OAMTileXPos,Y                ;;93A1|----/----\----;  | 
                      LDA.B #$70                          ;;93A4|----/----\----;  |   <-Y position of logo 
                      STA.W !OAMTileYPos,Y                ;;93A6|----/----\----;  | 
                      LDA.W NintendoTile,X                ;;93A9|----/----\----;  | 
                      STA.W !OAMTileNo,Y                  ;;93AC|----/----\----;  | 
                      LDA.B #$30                          ;;93AF|----/----\----;  | 
                      STA.W !OAMTileAttr,Y                ;;93B1|----/----\----;  | 
                      DEY                                 ;;93B4|----/----\----;  | 
                      DEY                                 ;;93B5|----/----\----;  | 
                      DEY                                 ;;93B6|----/----\----;  | 
                      DEY                                 ;;93B7|----/----\----;  | 
                      DEX                                 ;;93B8|----/----\----;  | 
                      BPL -                               ;;93B9|----/----\----; /  
                      LDA.B #$AA                          ;;93BB|----/----\----; \ Related to making the sprites 16x16? 
                      STA.W !OAMTileBitSize               ;;93BD|----/----\----; /  
                      LDA.B #$01                          ;;93C0|----/----\----; \ Play "Bing" sound? 
                      STA.W !SPCIO3                       ;;93C2|----/----\----; /  
                      LDA.B #$40                          ;;93C5|----/----\----; \ Set timer to x40 
                      STA.W !VariousPromptTimer           ;;93C7|----/----\----; /  
CODE_0093CA:          LDA.B #$0F                          ;;93CA|----/----\----; \ Set brightness to max 
                      STA.W !Brightness                   ;;93CC|----/----\----; /  
                      LDA.B #$01                          ;;93CF|----/----\----;
                      STA.W !MosaicDirection              ;;93D1|----/----\----;
                      STZ.W !SpritePalette                ;;93D4|----/----\----; Sprite palette setting = 0 
                      JSR LoadPalette                     ;;93D7|----/----\----; Load the palette 
                      STZ.W !BackgroundColor              ;;93DA|----/----\----; \ Black background 
                      STZ.W !BackgroundColor+1            ;;93DD|----/----\----; / 
                      JSR CODE_00922F                     ;;93E0|----/----\----;
                      STZ.W !BlinkCursorPos               ;;93E3|----/----\----; Set menu pointer position to 0 
                      LDX.B #$10                          ;;93E6|----/----\----; Enable sprites, disable layers 
                      LDY.B #$04                          ;;93E8|----/----\----; Set Layer 3 to subscreen 
CODE_0093EA:          LDA.B #$01                          ;;93EA|----/----\----;
                      STA.W !IRQNMICommand                ;;93EC|----/----\----;
                      LDA.B #$20                          ;;93EF|----/----\----; CGADSUB = 20 
                      JSR ScreenSettings                  ;;93F1|----/----\----; Apply above settings 
CODE_0093F4:          INC.W !GameMode                     ;;93F4|----/----\----; Move on to Game Mode 01 
Mode04Finish:         LDA.B #$81                          ;;93F7|----/----\----; \ Enable NMI and joypad, Disable V-count and H-cout 
                      STA.W !HW_NMITIMEN                  ;;93F9|----/----\----; /  ; NMI, V/H Count, and Joypad Enable
                      RTS                                 ;;93FC|----/----\----;
                                                          ;;                   ;
ScreenSettings:       STA.W !HW_CGADSUB                   ;;93FD|----/----\----; \ Set CGADSUB settings to A ; Add/Subtract Select and Enable
                      STA.B !ColorSettings                ;;9400|----/----\----; /  
                      STX.W !HW_TM                        ;;9402|----/----\----; Set "Background and Object Enable" to X ; Background and Object Enable
                      STY.W !HW_TS                        ;;9405|----/----\----; Set "Sub Screen Designation" Y ; Sub Screen Designation
                      STZ.W !HW_TMW                       ;;9408|----/----\----; \ Set "Window Mask Designation" for main and sub screen to x00 ; Window Mask Designation for Main Screen
                      STZ.W !HW_TSW                       ;;940B|----/----\----; /  ; Window Mask Designation for Sub Screen
                      RTS                                 ;;940E|----/----\----; Return 
                                                          ;;                   ;
CODE_00940F:          DEC.W !VariousPromptTimer           ;;940F|----/----\----; Decrease timer 
                      BNE Return00941A                    ;;9412|----/----\----; \ If timer is 0: 
                      JSR CODE_00B888                     ;;9414|----/----\----;  |Jump to sub $B888 
CODE_009417:          INC.W !GameMode                     ;;9417|----/----\----;  |Move on to Game Mode 02 
Return00941A:         RTS                                 ;;941A|----/----\----; Return 
                                                          ;;                   ;
CODE_00941B:          JSR SetUp0DA0GM4                    ;;941B|----/----\----;
                      JSR CODE_009CBE                     ;;941E|----/----\----;
                      BEQ +                               ;;9421|----/----\----;
                      LDA.B #$EC                          ;;9423|----/----\----;
                      JSR CODE_009440                     ;;9425|----/----\----;
                      INC.W !GameMode                     ;;9428|----/----\----;
                      JMP CODE_009C9F                     ;;942B|----/----\----;
                                                          ;;                   ;
                    + DEC.W !VariousPromptTimer           ;;942E|----/----\----;
                      BNE Return00941A                    ;;9431|----/----\----;
                      INC.W !VariousPromptTimer           ;;9433|----/----\----;
                      LDA.W !SpotlightSize                ;;9436|----/----\----;
                      CLC                                 ;;9439|----/----\----;
                      ADC.B #$04                          ;;943A|----/----\----;
                      CMP.B #$F0                          ;;943C|----/----\----;
                      BCS CODE_009417                     ;;943E|----/----\----;
CODE_009440:          STA.W !SpotlightSize                ;;9440|----/----\----;
CODE_009443:          JSR CODE_00CA61                     ;;9443|----/----\----;
                      LDA.B #$80                          ;;9446|----/----\----; \  
                      STA.B !_0                           ;;9448|----/----\----;  |Store x80 in $00, 
                      LDA.B #$70                          ;;944A|----/----\----;  |Store x70 in $01 
                      STA.B !_1                           ;;944C|----/----\----; /  
                      JMP CODE_00CA88                     ;;944E|----/----\----;
                                                          ;;                   ;
                                                          ;;                   ;
CutsceneBgColor:      db $02,$00,$04,$01,$00,$06,$04      ;;9451|----/----\----;
                                                          ;;                   ;
CutsceneCastlePal:    db $03,$06,$05,$06,$03,$03,$06,$06  ;;9458|----/----\----; Castle palette to use for cutscenes ; Purpose of first byte is unknown 
DATA_009460:          db $03,$FF,$FF,$C9,$0F,$FF,$CC,$C9  ;;9460|----/----\----;
                                                          ;;                   ;
CODE_009468:          JSR CODE_0085FA                     ;;9468|----/----\----;
                      JSR Clear_1A_13D3                   ;;946B|----/----\----;
                      JSR SetUpScreen                     ;;946E|----/----\----;
                      LDX.W !CutsceneID                   ;;9471|----/----\----; Cutscene number 
                      LDA.B #$18                          ;;9474|----/----\----;
                      STA.W !ObjectTileset                ;;9476|----/----\----;
                      LDA.B #$14                          ;;9479|----/----\----;
                      STA.W !SpriteTileset                ;;947B|----/----\----;
                      LDA.W CutsceneBgColor-1,X           ;;947E|----/----\----;
                      STA.W !BackAreaColor                ;;9481|----/----\----;
                      LDA.W CutsceneCastlePal,X           ;;9484|----/----\----;
                      STA.W !BackgroundPalette            ;;9487|----/----\----;
                      STZ.W !SpritePalette                ;;948A|----/----\----;
                      LDA.B #$01                          ;;948D|----/----\----;
                      STA.W !ForegroundPalette            ;;948F|----/----\----;
                      CPX.B #$08                          ;;9492|----/----\----;
                      BNE CODE_0094B2                     ;;9494|----/----\----;
                      JSR CODE_00955E                     ;;9496|----/----\----;
                      LDA.B #$D2                          ;;9499|----/----\----;
                      STA.B !StripeImage                  ;;949B|----/----\----;
                      JSR LoadScrnImage                   ;;949D|----/----\----;
                      JSR UploadMusicBank3                ;;94A0|----/----\----;
                      JSL CODE_0C93DD                     ;;94A3|----/----\----;
                      JSR CODE_009260                     ;;94A7|----/----\----;
                      INC.W !ObjectTileset                ;;94AA|----/----\----;
                      INC.W !SpriteTileset                ;;94AD|----/----\----;
                      BRA +                               ;;94B0|----/----\----;
                                                          ;;                   ;
CODE_0094B2:          LDA.B #$15                          ;;94B2|----/----\----;
                      STA.W !SPCIO2                       ;;94B4|----/----\----;
                      LDA.W DATA_009460,X                 ;;94B7|----/----\----;
                      STA.B !StripeImage                  ;;94BA|----/----\----;
                      JSR LoadScrnImage                   ;;94BC|----/----\----;
                      LDA.B #$CF                          ;;94BF|----/----\----;
                      STA.B !StripeImage                  ;;94C1|----/----\----;
                      JSR LoadScrnImage                   ;;94C3|----/----\----;
                      REP #$20                            ;;94C6|----/----\----; Accum (16 bit) 
                      LDA.W #$0090                        ;;94C8|----/----\----;
                      STA.B !PlayerXPosNext               ;;94CB|----/----\----;
                      LDA.W #$0058                        ;;94CD|----/----\----;
                      STA.B !PlayerYPosNext               ;;94D0|----/----\----;
                      SEP #$20                            ;;94D2|----/----\----; Accum (8 bit) 
                      INC.W !IsCarryingItem               ;;94D4|----/----\----;
                    + JSR UploadSpriteGFX                 ;;94D7|----/----\----;
                      JSR LoadPalette                     ;;94DA|----/----\----;
                      JSR CODE_00922F                     ;;94DD|----/----\----;
                      LDX.B #$0B                          ;;94E0|----/----\----;
                    - STZ.B !Layer1XPos,X                 ;;94E2|----/----\----;
                      DEX                                 ;;94E4|----/----\----;
                      BPL -                               ;;94E5|----/----\----;
                      LDA.B #$20                          ;;94E7|----/----\----;
                      STA.B !SpriteProperties             ;;94E9|----/----\----;
                      JSR CODE_00A635                     ;;94EB|----/----\----;
                      STZ.B !PlayerDirection              ;;94EE|----/----\----;
                      STZ.B !PlayerInAir                  ;;94F0|----/----\----;
                      JSL CODE_00CEB1                     ;;94F2|----/----\----;
                      LDX.B #$17                          ;;94F6|----/----\----;
                      LDY.B #$00                          ;;94F8|----/----\----;
                      JSR CODE_009622                     ;;94FA|----/----\----;
CODE_0094FD:          JSL !OAMResetRoutine                ;;94FD|----/----\----;
                      LDA.W !CutsceneID                   ;;9501|----/----\----;
                      CMP.B #$08                          ;;9504|----/----\----;
                      BEQ CODE_009557                     ;;9506|----/----\----;
                      LDA.B !axlr0000Hold                 ;;9508|----/----\----;
                      AND.B #$00                          ;;950A|----/----\----; Change to #$30 to enter debug region below 
                      CMP.B #$30                          ;;950C|----/----\----;
                      BNE CODE_009529                     ;;950E|----/----\----;
                      LDA.B !byetudlrHold                 ;;9510|----/----\----; \ Unreachable 
                      AND.B #$08                          ;;9512|----/----\----;  | Debug: Boss defeated scene select 
                      BEQ ADDR_009523                     ;;9514|----/----\----;  | 
                      LDA.W !CutsceneID                   ;;9516|----/----\----;  | 
                      INC A                               ;;9519|----/----\----;  | 
                      CMP.B #$09                          ;;951A|----/----\----;  | 
                      BCC +                               ;;951C|----/----\----;  | 
                      LDA.B #$01                          ;;951E|----/----\----;  | 
                    + STA.W !CutsceneID                   ;;9520|----/----\----;  | 
ADDR_009523:          LDA.B #$18                          ;;9523|----/----\----;  | 
                      STA.W !GameMode                     ;;9525|----/----\----;  | 
                      RTS                                 ;;9528|----/----\----; / 
                                                          ;;                   ;
CODE_009529:          JSL CODE_0CC97E                     ;;9529|----/----\----;
                      REP #$20                            ;;952D|----/----\----; Accum (16 bit) 
                      LDA.B !Layer1XPos                   ;;952F|----/----\----;
                      PHA                                 ;;9531|----/----\----;
                      LDA.B !Layer1YPos                   ;;9532|----/----\----;
                      PHA                                 ;;9534|----/----\----;
                      LDA.B !Layer2XPos                   ;;9535|----/----\----;
                      STA.B !Layer1XPos                   ;;9537|----/----\----;
                      LDA.B !Layer2YPos                   ;;9539|----/----\----;
                      STA.B !Layer1YPos                   ;;953B|----/----\----;
                      SEP #$20                            ;;953D|----/----\----; Accum (8 bit) 
                      JSL CODE_00E2BD                     ;;953F|----/----\----;
                      REP #$20                            ;;9543|----/----\----; Accum (16 bit) 
                      PLA                                 ;;9545|----/----\----;
                      STA.B !Layer1YPos                   ;;9546|----/----\----;
                      PLA                                 ;;9548|----/----\----;
                      STA.B !Layer1XPos                   ;;9549|----/----\----;
                      SEP #$20                            ;;954B|----/----\----; Accum (8 bit) 
                      LDA.B #$0C                          ;;954D|----/----\----;
                      STA.B !PlayerAnimation              ;;954F|----/----\----;
                      JSR CODE_00C47E                     ;;9551|----/----\----;
                      JMP CODE_008494                     ;;9554|----/----\----;
                                                          ;;                   ;
CODE_009557:          JSL CODE_0C938D                     ;;9557|----/----\----;
                      JMP CODE_008494                     ;;955B|----/----\----;
                                                          ;;                   ;
CODE_00955E:          LDY.B #$2F                          ;;955E|----/----\----;
                      JSL CODE_00BA28                     ;;9560|----/----\----;
                      LDA.B #$80                          ;;9564|----/----\----;
                      STA.W !HW_VMAINC                    ;;9566|----/----\----; VRAM Address Increment Value
                      REP #$30                            ;;9569|----/----\----; Index (16 bit) Accum (16 bit) 
                      LDA.W #$4600                        ;;956B|----/----\----;
                      STA.W !HW_VMADD                     ;;956E|----/----\----; Address for VRAM Read/Write (Low Byte)
                      LDX.W #$0200                        ;;9571|----/----\----;
                    - LDA.B [!_0]                         ;;9574|----/----\----;
                      STA.W !HW_VMDATA                    ;;9576|----/----\----; Data for VRAM Write (Low Byte)
                      INC.B !_0                           ;;9579|----/----\----;
                      INC.B !_0                           ;;957B|----/----\----;
                      DEX                                 ;;957D|----/----\----;
                      BNE -                               ;;957E|----/----\----;
                      SEP #$30                            ;;9580|----/----\----; Index (8 bit) Accum (8 bit) 
                      RTS                                 ;;9582|----/----\----;
                                                          ;;                   ;
CODE_009583:          INC.W !CutsceneID                   ;;9583|----/----\----;
                      LDA.B #$28                          ;;9586|----/----\----;
                      LDY.B #$01                          ;;9588|----/----\----;
                      JSR CODE_0096CF                     ;;958A|----/----\----;
                      DEC.W !GameMode                     ;;958D|----/----\----;
                      LDA.B #$16                          ;;9590|----/----\----;
                      STA.W !SpriteTileset                ;;9592|----/----\----;
                      JSR GM04Load                        ;;9595|----/----\----;
                      DEC.W !GameMode                     ;;9598|----/----\----;
                      JSR TurnOffIO                       ;;959B|----/----\----;
                      JSR CODE_0085FA                     ;;959E|----/----\----;
                      JSR CODE_00A993                     ;;95A1|----/----\----;
                      JSL CODE_0CA3C9                     ;;95A4|----/----\----;
                      JSR CODE_00961E                     ;;95A8|----/----\----;
CODE_0095AB:          JSL !OAMResetRoutine                ;;95AB|----/----\----;
                      JSL CODE_0C939A                     ;;95AF|----/----\----;
                      INC.B !EffFrame                     ;;95B3|----/----\----;
                      JSL CODE_05BB39                     ;;95B5|----/----\----;
                      JMP CODE_008494                     ;;95B9|----/----\----;
                                                          ;;                   ;
CODE_0095BC:          JSL CODE_0C93AD                     ;;95BC|----/----\----;
                      RTS                                 ;;95C0|----/----\----;
                                                          ;;                   ;
CODE_0095C1:          JSR CODE_0085FA                     ;;95C1|----/----\----;
                      JSR Clear_1A_13D3                   ;;95C4|----/----\----;
                      JSR SetUpScreen                     ;;95C7|----/----\----;
                      JSL CODE_0CAD8C                     ;;95CA|----/----\----;
                      JSL CODE_05801E                     ;;95CE|----/----\----;
                      LDA.W !CreditsScreenNumber          ;;95D2|----/----\----;
                      CMP.B #$0A                          ;;95D5|----/----\----;
                      BNE CODE_0095E0                     ;;95D7|----/----\----;
                      LDA.B #$13                          ;;95D9|----/----\----;
                      STA.W !SpriteTileset                ;;95DB|----/----\----;
                      BRA +                               ;;95DE|----/----\----;
                                                          ;;                   ;
CODE_0095E0:          CMP.B #$0C                          ;;95E0|----/----\----;
                      BNE +                               ;;95E2|----/----\----;
                      LDA.B #$17                          ;;95E4|----/----\----;
                      STA.W !SpriteTileset                ;;95E6|----/----\----;
                    + JSR UploadSpriteGFX                 ;;95E9|----/----\----;
                      JSR LoadPalette                     ;;95EC|----/----\----;
                      JSL CODE_05809E                     ;;95EF|----/----\----;
                      JSR CODE_00A5F9                     ;;95F3|----/----\----;
                      JSL CODE_0CADF6                     ;;95F6|----/----\----;
                      LDA.W !CreditsScreenNumber          ;;95FA|----/----\----;
                      CMP.B #$0C                          ;;95FD|----/----\----;
                      BNE CODE_009612                     ;;95FF|----/----\----;
                      LDX.B #$0B                          ;;9601|----/----\----;
                    - LDA.W BowserEndPalette,X            ;;9603|----/----\----;
                      STA.W !MainPalette+$104,X           ;;9606|----/----\----;
                      LDA.W DATA_00B3CC,X                 ;;9609|----/----\----;
                      STA.W !MainPalette+$124,X           ;;960C|----/----\----;
                      DEX                                 ;;960F|----/----\----;
                      BPL -                               ;;9610|----/----\----;
CODE_009612:          JSR CODE_00922F                     ;;9612|----/----\----;
                      JSR CODE_0092B2                     ;;9615|----/----\----;
                      JSR LoadScrnImage                   ;;9618|----/----\----;
                      JSR CODE_00962C                     ;;961B|----/----\----;
CODE_00961E:          LDX.B #$15                          ;;961E|----/----\----;
                      LDY.B #$02                          ;;9620|----/----\----;
CODE_009622:          JSR KeepModeActive                  ;;9622|----/----\----;
                      LDA.B #$09                          ;;9625|----/----\----;
                      STA.B !MainBGMode                   ;;9627|----/----\----;
                      JMP CODE_0093EA                     ;;9629|----/----\----;
                                                          ;;                   ;
CODE_00962C:          STZ.W !PlayerGfxTileCount           ;;962C|----/----\----;
                      JSR CODE_0092ED                     ;;962F|----/----\----;
                      JSL !OAMResetRoutine                ;;9632|----/----\----;
                      JSL CODE_0C93A5                     ;;9636|----/----\----;
                      JMP CODE_008494                     ;;963A|----/----\----;
                                                          ;;                   ;
CODE_00963D:          JSR CODE_0085FA                     ;;963D|----/----\----;
                      JSR Clear_1A_13D3                   ;;9640|----/----\----;
                      JSR SetUpScreen                     ;;9643|----/----\----;
                      JSR CODE_00955E                     ;;9646|----/----\----;
                      LDA.B #$19                          ;;9649|----/----\----;
                      STA.W !SpriteTileset                ;;964B|----/----\----;
                      LDA.B #$03                          ;;964E|----/----\----;
                      STA.W !BackAreaColor                ;;9650|----/----\----;
                      LDA.B #$03                          ;;9653|----/----\----;
                      STA.W !BackgroundPalette            ;;9655|----/----\----;
                      JSR UploadSpriteGFX                 ;;9658|----/----\----;
                      JSR LoadPalette                     ;;965B|----/----\----;
                      LDX.B #$0B                          ;;965E|----/----\----;
                    - LDA.W TheEndPalettes,X              ;;9660|----/----\----;
                      STA.W !MainPalette+$1A4,X           ;;9663|----/----\----;
                      LDA.W DATA_00B71A,X                 ;;9666|----/----\----;
                      STA.W !MainPalette+$1C4,X           ;;9669|----/----\----;
                      LDA.W DATA_00B726,X                 ;;966C|----/----\----;
                      STA.W !MainPalette+$1E4,X           ;;966F|----/----\----;
                      DEX                                 ;;9672|----/----\----;
                      BPL -                               ;;9673|----/----\----;
                      JSR CODE_00922F                     ;;9675|----/----\----;
                      LDA.B #$D5                          ;;9678|----/----\----;
                      STA.B !StripeImage                  ;;967A|----/----\----;
                      JSR LoadScrnImage                   ;;967C|----/----\----;
                      JSL CODE_0CAADF                     ;;967F|----/----\----;
                      JSR CODE_008494                     ;;9683|----/----\----;
                      LDX.B #$14                          ;;9686|----/----\----;
                      LDY.B #$00                          ;;9688|----/----\----;
                      JMP CODE_009622                     ;;968A|----/----\----;
                                                          ;;                   ;
Return00968D:         RTS                                 ;;968D|----/----\----;
                                                          ;;                   ;
CODE_00968E:          JSR CODE_0085FA                     ;;968E|----/----\----;
                      LDA.W !BonusGameActivate            ;;9691|----/----\----;
                      BNE CODE_0096A8                     ;;9694|----/----\----;
                      LDA.W !SublevelCount                ;;9696|----/----\----;
                      ORA.W !ShowMarioStart               ;;9699|----/----\----;
                      ORA.W !OverworldOverride            ;;969C|----/----\----;
                      BNE +                               ;;969F|----/----\----;
                      LDA.W !OverworldLayer1Tile          ;;96A1|----/----\----;
                      CMP.B #$56                          ;;96A4|----/----\----;
                      BEQ +                               ;;96A6|----/----\----;
CODE_0096A8:          JSR CODE_0091B1                     ;;96A8|----/----\----;
                    + JMP CODE_0093CA                     ;;96AB|----/----\----;
                                                          ;;                   ;
CODE_0096AE:          STZ.W !HW_NMITIMEN                  ;;96AE|----/----\----; NMI, V/H Count, and Joypad Enable
                      JSR ClearStack                      ;;96B1|----/----\----;
                      LDX.B #$07                          ;;96B4|----/----\----;
                      LDA.B #$FF                          ;;96B6|----/----\----;
                    - STA.W !SpriteGFXFile,X              ;;96B8|----/----\----;
                      DEX                                 ;;96BB|----/----\----;
                      BPL -                               ;;96BC|----/----\----;
                      LDA.W !OverworldOverride            ;;96BE|----/----\----;
                      BNE +                               ;;96C1|----/----\----;
                      JSR UploadMusicBank1                ;;96C3|----/----\----;
                      LDA.B #$01                          ;;96C6|----/----\----; \ Set title screen music 
                      STA.W !SPCIO2                       ;;96C8|----/----\----; / 
                    + LDA.B #$EB                          ;;96CB|----/----\----;
                      LDY.B #$00                          ;;96CD|----/----\----;
CODE_0096CF:          STA.W !OverworldOverride            ;;96CF|----/----\----;
                      STY.W !OWPlayerSubmap               ;;96D2|----/----\----;
CODE_0096D5:          STZ.W !HW_NMITIMEN                  ;;96D5|----/----\----; NMI, V/H Count, and Joypad Enable
                      JSR NoButtons                       ;;96D8|----/----\----;
                      LDA.W !SublevelCount                ;;96DB|----/----\----;
                      BNE +                               ;;96DE|----/----\----;
                      LDA.W !ShowMarioStart               ;;96E0|----/----\----;
                      BEQ +                               ;;96E3|----/----\----;
                      JSL CODE_04DC09                     ;;96E5|----/----\----;
                    + STZ.W !Layer3ScrollType             ;;96E9|----/----\----;
                      STZ.W !OverworldProcess             ;;96EC|----/----\----;
                      LDA.B #$50                          ;;96EF|----/----\----;
                      STA.W !DrumrollTimer                ;;96F1|----/----\----;
                      JSL CODE_05D796                     ;;96F4|----/----\----;
                      LDX.B #$07                          ;;96F8|----/----\----;
                    - LDA.B !Layer1XPos,X                 ;;96FA|----/----\----;
                      STA.W !NextLayer1XPos,X             ;;96FC|----/----\----;
                      DEX                                 ;;96FF|----/----\----;
                      BPL -                               ;;9700|----/----\----;
                      JSR CODE_008134                     ;;9702|----/----\----;
                      JSR CODE_00A635                     ;;9705|----/----\----;
                      LDA.B #$20                          ;;9708|----/----\----;
                      STA.B !LastScreenHoriz              ;;970A|----/----\----;
                      JSR CODE_00A796                     ;;970C|----/----\----;
                      INC.W !ScreenScrollAtWill           ;;970F|----/----\----;
                      JSL CODE_00F6DB                     ;;9712|----/----\----;
                      JSL CODE_05801E                     ;;9716|----/----\----;
                      LDA.W !OverworldOverride            ;;971A|----/----\----;
                      BEQ CODE_009728                     ;;971D|----/----\----;
                      CMP.B #$E9                          ;;971F|----/----\----;
                      BNE CODE_009740                     ;;9721|----/----\----;
                      LDA.B #$13                          ;;9723|----/----\----;
                      STA.W !MusicBackup                  ;;9725|----/----\----;
CODE_009728:          LDA.W !MusicBackup                  ;;9728|----/----\----;
                      CMP.B #$40                          ;;972B|----/----\----;
                      BCS CODE_00973B                     ;;972D|----/----\----;
                      LDY.W !IRQNMICommand                ;;972F|----/----\----;
                      CPY.B #$C1                          ;;9732|----/----\----;
                      BNE +                               ;;9734|----/----\----;
                      LDA.B #$16                          ;;9736|----/----\----;
                    + STA.W !SPCIO2                       ;;9738|----/----\----;
CODE_00973B:          AND.B #$BF                          ;;973B|----/----\----;
                      STA.W !MusicBackup                  ;;973D|----/----\----;
CODE_009740:          STZ.W !Brightness                   ;;9740|----/----\----;
                      STZ.W !MosaicDirection              ;;9743|----/----\----;
                      INC.W !GameMode                     ;;9746|----/----\----;
                      JMP Mode04Finish                    ;;9749|----/----\----;
                                                          ;;                   ;
CODE_00974C:          JSR HexToDec                        ;;974C|----/----\----;
                      RTL                                 ;;974F|----/----\----;
                                                          ;;                   ;
CODE_009750:          JSR CODE_0085FA                     ;;9750|----/----\----;
                      JSR CODE_00A82D                     ;;9753|----/----\----;
                      JMP CODE_0093CA                     ;;9756|----/----\----;
                                                          ;;                   ;
CODE_009759:          JSL !OAMResetRoutine                ;;9759|----/----\----;
                      LDA.W !GameOverAnimation            ;;975D|----/----\----;
                      BNE CODE_00978B                     ;;9760|----/----\----;
                      DEC.W !GameOverTimer                ;;9762|----/----\----;
                      BNE CODE_00978E                     ;;9765|----/----\----;
                      LDA.W !PlayerLives                  ;;9767|----/----\----;
                      BPL CODE_009788                     ;;976A|----/----\----;
                      STZ.W !CarryYoshiThruLvls           ;;976C|----/----\----;
                      LDA.W !SavedPlayerLives             ;;976F|----/----\----;
                      ORA.W !SavedPlayerLives+1           ;;9772|----/----\----;
                      BPL CODE_009788                     ;;9775|----/----\----;
                      LDX.B #$0C                          ;;9777|----/----\----;
                    - STZ.W !AllDragonCoinsCollected,X    ;;9779|----/----\----;
                      STZ.W !_6,X                         ;;977C|----/----\----; OOF
                      STZ.W !MoonCollected,X              ;;977F|----/----\----;
                      DEX                                 ;;9782|----/----\----;
                      BPL -                               ;;9783|----/----\----;
                      INC.W !ShowContinueEnd              ;;9785|----/----\----;
CODE_009788:          JMP CODE_009E62                     ;;9788|----/----\----;
                                                          ;;                   ;
CODE_00978B:          SEC                                 ;;978B|----/----\----;
                      SBC.B #$04                          ;;978C|----/----\----;
CODE_00978E:          STA.W !GameOverAnimation            ;;978E|----/----\----;
                      CLC                                 ;;9791|----/----\----;
                      ADC.B #$A0                          ;;9792|----/----\----;
                      STA.B !_0                           ;;9794|----/----\----;
                      ROL.B !_1                           ;;9796|----/----\----;
                      LDX.W !DeathMessage                 ;;9798|----/----\----;
                      LDY.B #$48                          ;;979B|----/----\----;
CODE_00979D:          CPY.B #$28                          ;;979D|----/----\----;
                      BNE +                               ;;979F|----/----\----;
                      LDA.B #$78                          ;;97A1|----/----\----;
                      SEC                                 ;;97A3|----/----\----;
                      SBC.W !GameOverAnimation            ;;97A4|----/----\----;
                      STA.B !_0                           ;;97A7|----/----\----;
                      ROL A                               ;;97A9|----/----\----;
                      EOR.B #$01                          ;;97AA|----/----\----;
                      STA.B !_1                           ;;97AC|----/----\----;
                    + JSR CODE_0091E9                     ;;97AE|----/----\----;
                      INX                                 ;;97B1|----/----\----;
                      TYA                                 ;;97B2|----/----\----;
                      SEC                                 ;;97B3|----/----\----;
                      SBC.B #$08                          ;;97B4|----/----\----;
                      TAY                                 ;;97B6|----/----\----;
                      BNE CODE_00979D                     ;;97B7|----/----\----;
                      JMP CODE_008494                     ;;97B9|----/----\----;
                                                          ;;                   ;
CODE_0097BC:          LDA.B #$0F                          ;;97BC|----/----\----;
                      STA.W !Brightness                   ;;97BE|----/----\----; Set brightness to full (RAM mirror) 
                      STZ.W !MosaicSize                   ;;97C1|----/----\----;
                      JSR GM__Mosaic                      ;;97C4|----/----\----;
                      LDA.B #$20                          ;;97C7|----/----\----; \ 
                      STA.B !Mode7XScale                  ;;97C9|----/----\----; |Not sure what these bytes are used for yet, unless they're just more  
                      STA.B !Mode7YScale                  ;;97CB|----/----\----; /scratch (I find that unlikely) 
                      STZ.W !ScreenShakeYOffset           ;;97CD|----/----\----;
                      JSR CODE_0085FA                     ;;97D0|----/----\----;
                      LDA.B #$FF                          ;;97D3|----/----\----;
                      STA.W !ObjectTileset                ;;97D5|----/----\----;
                      JSL CODE_03D958                     ;;97D8|----/----\----;
                      BIT.W !IRQNMICommand                ;;97DC|----/----\----;
                      BVC CODE_009801                     ;;97DF|----/----\----;
                      JSR CODE_009925                     ;;97E1|----/----\----;
                      LDY.W !ActiveBoss                   ;;97E4|----/----\----;
                      CPY.B #$03                          ;;97E7|----/----\----;
                      BCC CODE_0097F1                     ;;97E9|----/----\----;
                      BNE CODE_00983B                     ;;97EB|----/----\----;
                      LDA.B #$18                          ;;97ED|----/----\----;
                      BRA +                               ;;97EF|----/----\----;
                                                          ;;                   ;
CODE_0097F1:          LDA.B #$03                          ;;97F1|----/----\----;
                      STA.W !PlayerBehindNet              ;;97F3|----/----\----;
                      LDA.B #$C8                          ;;97F6|----/----\----;
                      STA.B !OAMAddress                   ;;97F8|----/----\----;
                      LDA.B #$12                          ;;97FA|----/----\----;
                    + DEC.W !ObjectTileset                ;;97FC|----/----\----;
                      BRA +                               ;;97FF|----/----\----;
                                                          ;;                   ;
CODE_009801:          JSR CODE_00ADD9                     ;;9801|----/----\----;
                      JSR CODE_0092A8                     ;;9804|----/----\----;
                      LDX.B #$50                          ;;9807|----/----\----;
                      JSR CODE_009A3D                     ;;9809|----/----\----;
                      REP #$20                            ;;980C|----/----\----; Accum (16 bit) 
                      LDA.W #$0050                        ;;980E|----/----\----;
                      STA.B !PlayerXPosNext               ;;9811|----/----\----;
                      LDA.W #$FFD0                        ;;9813|----/----\----;
                      STA.B !PlayerYPosNext               ;;9816|----/----\----;
                      STZ.B !Layer1XPos                   ;;9818|----/----\----;
                      STZ.W !NextLayer1XPos               ;;981A|----/----\----;
                      LDA.W #$FF90                        ;;981D|----/----\----;
                      STA.B !Layer1YPos                   ;;9820|----/----\----;
                      STA.W !NextLayer1YPos               ;;9822|----/----\----;
                      LDA.W #$0080                        ;;9825|----/----\----;
                      STA.B !Mode7CenterX                 ;;9828|----/----\----;
                      LDA.W #$0050                        ;;982A|----/----\----;
                      STA.B !Mode7CenterY                 ;;982D|----/----\----;
                      LDA.W #$0080                        ;;982F|----/----\----;
                      STA.B !Mode7XPos                    ;;9832|----/----\----;
                      LDA.W #$0010                        ;;9834|----/----\----;
                      STA.B !Mode7YPos                    ;;9837|----/----\----;
                      SEP #$20                            ;;9839|----/----\----; Accum (8 bit) 
CODE_00983B:          LDA.B #$13                          ;;983B|----/----\----;
                    + STA.W !SpriteTileset                ;;983D|----/----\----;
                      JSR UploadSpriteGFX                 ;;9840|----/----\----;
                      LDA.B #$11                          ;;9843|----/----\----;
                      STA.W !HW_TMW                       ;;9845|----/----\----; Window Mask Designation for Main Screen
                      STZ.W !HW_TS                        ;;9848|----/----\----; Sub Screen Designation
                      STZ.W !HW_TSW                       ;;984B|----/----\----; Window Mask Designation for Sub Screen
                      LDA.B #$02                          ;;984E|----/----\----;
                      STA.B !Layer12Window                ;;9850|----/----\----;
                      LDA.B #$32                          ;;9852|----/----\----;
                      STA.B !OBJCWWindow                  ;;9854|----/----\----;
                      LDA.B #$20                          ;;9856|----/----\----;
                      STA.B !ColorAddition                ;;9858|----/----\----;
                      JSR GM04DoDMA                       ;;985A|----/----\----;
                      JSR CODE_008ACD                     ;;985D|----/----\----;
CODE_009860:          JSL CODE_00E2BD                     ;;9860|----/----\----;
                      JSR CODE_00A2F3                     ;;9864|----/----\----;
                      JSR CODE_00C593                     ;;9867|----/----\----;
                      STZ.B !PlayerYSpeed                 ;;986A|----/----\----; Y speed = 0 
                      JSL CODE_01808C                     ;;986C|----/----\----;
                      JSL !OAMResetRoutine                ;;9870|----/----\----;
                      RTS                                 ;;9874|----/----\----;
                                                          ;;                   ;
                                                          ;;                   ;
                      db $01,$00,$FF,$FF,$40,$00,$C0,$01  ;;9875|----/----\----;
                                                          ;;                   ;
CODE_00987D:          JSR CODE_008ACD                     ;;987D|----/----\----;
                      BIT.W !IRQNMICommand                ;;9880|----/----\----;
                      BVC +                               ;;9883|----/----\----;
                      JMP CODE_009A52                     ;;9885|----/----\----;
                                                          ;;                   ;
                    + JSL !OAMResetRoutine                ;;9888|----/----\----;
                      JSL CODE_03C0C6                     ;;988C|----/----\----;
                      RTS                                 ;;9890|----/----\----;
                                                          ;;                   ;
                                                          ;;                   ;
DATA_009891:          db $9E,$12,$1E,$12,$9E,$11,$1E,$11  ;;9891|----/----\----;
                      db $1E,$16,$9E,$15,$1E,$15,$9E,$14  ;;9899|----/----\----;
                      db $1E,$14,$9E,$13,$1E,$13,$9E,$16  ;;98A1|----/----\----;
                                                          ;;                   ;
CODE_0098A9:          LDA.W !IRQNMICommand                ;;98A9|----/----\----; \  
                      LSR A                               ;;98AC|----/----\----;  |If "Special level" is even, 
                      BCS +                               ;;98AD|----/----\----; / branch to $98E1 
                      LDA.B !EffFrame                     ;;98AF|----/----\----;
                      LSR A                               ;;98B1|----/----\----;
                      LSR A                               ;;98B2|----/----\----;
                      AND.B #$06                          ;;98B3|----/----\----;
                      TAX                                 ;;98B5|----/----\----;
                      REP #$20                            ;;98B6|----/----\----; 16 bit A ; Accum (16 bit) 
                      LDY.B #$80                          ;;98B8|----/----\----;
                      STY.W !HW_VMAINC                    ;;98BA|----/----\----; VRAM Address Increment Value
                      LDA.W #$1801                        ;;98BD|----/----\----;
                      STA.W !HW_DMAPARAM+$20              ;;98C0|----/----\----; Parameters for DMA Transfer
                      LDA.W #$7800                        ;;98C3|----/----\----;
                      STA.W !HW_VMADD                     ;;98C6|----/----\----; Address for VRAM Read/Write (Low Byte)
                      LDA.L DATA_05BA39,X                 ;;98C9|----/----\----;
                      STA.W !HW_DMAADDR+$20               ;;98CD|----/----\----; A Address (Low Byte)
                      LDY.B #$7E                          ;;98D0|----/----\----;
                      STY.W !HW_DMAADDR+$22               ;;98D2|----/----\----; A Address Bank
                      LDA.W #$0080                        ;;98D5|----/----\----;
                      STA.W !HW_DMACNT+$20                ;;98D8|----/----\----; Number Bytes to Transfer (Low Byte) (DMA)
                      LDY.B #$04                          ;;98DB|----/----\----;
                      STY.W !HW_MDMAEN                    ;;98DD|----/----\----; Regular DMA Channel Enable
                      CLC                                 ;;98E0|----/----\----;
                    + REP #$20                            ;;98E1|----/----\----; 16 bit A ; Accum (16 bit) 
                      LDA.W #$0004                        ;;98E3|----/----\----;
                      LDY.B #$06                          ;;98E6|----/----\----;
                      BCC +                               ;;98E8|----/----\----;
                      LDA.W #$0008                        ;;98EA|----/----\----;
                      LDY.B #$16                          ;;98ED|----/----\----;
                    + STA.B !_0                           ;;98EF|----/----\----;
                      LDA.W #$C680                        ;;98F1|----/----\----;
                      STA.B !_2                           ;;98F4|----/----\----;
                      STZ.W !HW_VMAINC                    ;;98F6|----/----\----; VRAM Address Increment Value
                      LDA.W #$1800                        ;;98F9|----/----\----;
                      STA.W !HW_DMAPARAM+$20              ;;98FC|----/----\----; Parameters for DMA Transfer
                      LDX.B #$7E                          ;;98FF|----/----\----;
                      STX.W !HW_DMAADDR+$22               ;;9901|----/----\----; A Address Bank
                      LDX.B #$04                          ;;9904|----/----\----;
                    - LDA.W DATA_009891,Y                 ;;9906|----/----\----;
                      STA.W !HW_VMADD                     ;;9909|----/----\----; Address for VRAM Read/Write (Low Byte)
                      LDA.B !_2                           ;;990C|----/----\----;
                      STA.W !HW_DMAADDR+$20               ;;990E|----/----\----; A Address (Low Byte)
                      CLC                                 ;;9911|----/----\----;
                      ADC.B !_0                           ;;9912|----/----\----;
                      STA.B !_2                           ;;9914|----/----\----;
                      LDA.B !_0                           ;;9916|----/----\----;
                      STA.W !HW_DMACNT+$20                ;;9918|----/----\----; Number Bytes to Transfer (Low Byte) (DMA)
                      STX.W !HW_MDMAEN                    ;;991B|----/----\----; Regular DMA Channel Enable
                      DEY                                 ;;991E|----/----\----;
                      DEY                                 ;;991F|----/----\----;
                      BPL -                               ;;9920|----/----\----;
                      SEP #$20                            ;;9922|----/----\----; 8 bit A ; Accum (8 bit) 
                      RTS                                 ;;9924|----/----\----;
                                                          ;;                   ;
CODE_009925:          STZ.B !PlayerYPosNext+1             ;;9925|----/----\----;
                      REP #$20                            ;;9927|----/----\----; Accum (16 bit) 
                      LDA.W #$0020                        ;;9929|----/----\----;
                      STA.B !PlayerXPosNext               ;;992C|----/----\----;
                      STZ.B !Layer1XPos                   ;;992E|----/----\----;
                      STZ.W !NextLayer1XPos               ;;9930|----/----\----;
                      STZ.B !Layer1YPos                   ;;9933|----/----\----;
                      STZ.W !NextLayer1YPos               ;;9935|----/----\----;
                      LDA.W #$0080                        ;;9938|----/----\----;
                      STA.B !Mode7CenterX                 ;;993B|----/----\----;
                      LDA.W #$00A0                        ;;993D|----/----\----;
                      STA.B !Mode7CenterY                 ;;9940|----/----\----;
                      SEP #$20                            ;;9942|----/----\----; Accum (8 bit) 
                      JSR CODE_00AE15                     ;;9944|----/----\----;
                      JSL CODE_01808C                     ;;9947|----/----\----;
                      LDA.W !IRQNMICommand                ;;994B|----/----\----;
                      LSR A                               ;;994E|----/----\----;
                      LDX.B #$C0                          ;;994F|----/----\----;
                      LDA.B #$A0                          ;;9951|----/----\----;
                      BCC +                               ;;9953|----/----\----;
                      STZ.W !HorizLayer1Setting           ;;9955|----/----\----;
                      JMP CODE_009A17                     ;;9958|----/----\----;
                                                          ;;                   ;
                    + REP #$30                            ;;995B|----/----\----; Index (16 bit) Accum (16 bit) 
                      LDA.W !ActiveBoss                   ;;995D|----/----\----;
                      AND.W #$00FF                        ;;9960|----/----\----;
                      ASL A                               ;;9963|----/----\----;
                      TAX                                 ;;9964|----/----\----;
                      LDY.W #$02C0                        ;;9965|----/----\----;
                      LDA.W DATA_00F8E8,X                 ;;9968|----/----\----;
                      BPL +                               ;;996B|----/----\----;
                      LDY.W #$FB80                        ;;996D|----/----\----;
                    + CMP.W #$0012                        ;;9970|----/----\----;
                      BNE +                               ;;9973|----/----\----;
                      LDY.W #$0320                        ;;9975|----/----\----;
                    + STY.B !_0                           ;;9978|----/----\----;
                      LDX.W #$0000                        ;;997A|----/----\----;
                      LDA.W #$C05A                        ;;997D|----/----\----;
CODE_009980:          STA.L !DynamicStripeImage,X         ;;9980|----/----\----;
                      XBA                                 ;;9984|----/----\----;
                      CLC                                 ;;9985|----/----\----;
                      ADC.W #$0080                        ;;9986|----/----\----;
                      XBA                                 ;;9989|----/----\----;
                      STA.L !DynamicStripeImage+$84,X     ;;998A|----/----\----;
                      XBA                                 ;;998E|----/----\----;
                      SEC                                 ;;998F|----/----\----;
                      SBC.B !_0                           ;;9990|----/----\----;
                      XBA                                 ;;9992|----/----\----;
                      STA.L !DynamicStripeImage+$108,X    ;;9993|----/----\----;
                      LDA.W #$7F00                        ;;9997|----/----\----;
                      STA.L !DynamicStripeImage+2,X       ;;999A|----/----\----;
                      STA.L !DynamicStripeImage+$86,X     ;;999E|----/----\----;
                      STA.L !DynamicStripeImage+$10A,X    ;;99A2|----/----\----;
                      LDY.W #$0010                        ;;99A6|----/----\----;
                    - LDA.W #$38A2                        ;;99A9|----/----\----;
                      STA.L !DynamicStripeImage+4,X       ;;99AC|----/----\----;
                      INC A                               ;;99B0|----/----\----;
                      STA.L !DynamicStripeImage+6,X       ;;99B1|----/----\----;
                      LDA.W #$38B2                        ;;99B5|----/----\----;
                      STA.L !DynamicStripeImage+$44,X     ;;99B8|----/----\----;
                      INC A                               ;;99BC|----/----\----;
                      STA.L !DynamicStripeImage+$46,X     ;;99BD|----/----\----;
                      LDA.W #$2C80                        ;;99C1|----/----\----;
                      STA.L !DynamicStripeImage+$88,X     ;;99C4|----/----\----;
                      INC A                               ;;99C8|----/----\----;
                      STA.L !DynamicStripeImage+$8A,X     ;;99C9|----/----\----;
                      INC A                               ;;99CD|----/----\----;
                      STA.L !DynamicStripeImage+$C8,X     ;;99CE|----/----\----;
                      INC A                               ;;99D2|----/----\----;
                      STA.L !DynamicStripeImage+$CA,X     ;;99D3|----/----\----;
                      LDA.W #$28A0                        ;;99D7|----/----\----;
                      STA.L !DynamicStripeImage+$10C,X    ;;99DA|----/----\----;
                      INC A                               ;;99DE|----/----\----;
                      STA.L !DynamicStripeImage+$10E,X    ;;99DF|----/----\----;
                      LDA.W #$28B0                        ;;99E3|----/----\----;
                      STA.L !DynamicStripeImage+$14C,X    ;;99E6|----/----\----;
                      INC A                               ;;99EA|----/----\----;
                      STA.L !DynamicStripeImage+$14E,X    ;;99EB|----/----\----;
                      INX                                 ;;99EF|----/----\----;
                      INX                                 ;;99F0|----/----\----;
                      INX                                 ;;99F1|----/----\----;
                      INX                                 ;;99F2|----/----\----;
                      DEY                                 ;;99F3|----/----\----;
                      BNE -                               ;;99F4|----/----\----;
                      TXA                                 ;;99F6|----/----\----;
                      CLC                                 ;;99F7|----/----\----;
                      ADC.W #$014C                        ;;99F8|----/----\----;
                      TAX                                 ;;99FB|----/----\----;
                      LDA.W #$C05E                        ;;99FC|----/----\----;
                      CPX.W #$0318                        ;;99FF|----/----\----;
                      BCS +                               ;;9A02|----/----\----;
                      JMP CODE_009980                     ;;9A04|----/----\----;
                                                          ;;                   ;
                    + LDA.W #$00FF                        ;;9A07|----/----\----;
                      STA.L !DynamicStripeImage,X         ;;9A0A|----/----\----;
                      SEP #$30                            ;;9A0E|----/----\----; Index (8 bit) Accum (8 bit) 
                      JSR LoadScrnImage                   ;;9A10|----/----\----;
                      LDX.B #$B0                          ;;9A13|----/----\----;
                      LDA.B #$90                          ;;9A15|----/----\----;
CODE_009A17:          STA.B !PlayerYPosNext               ;;9A17|----/----\----;
                      JSR CODE_009A1F                     ;;9A19|----/----\----;
                      JMP CODE_009283                     ;;9A1C|----/----\----;
                                                          ;;                   ;
CODE_009A1F:          LDY.B #$10                          ;;9A1F|----/----\----;
                      LDA.B #$32                          ;;9A21|----/----\----;
                    - STA.L !Map16TilesLow,X              ;;9A23|----/----\----;
                      STA.L !Map16TilesLow+$1B0,X         ;;9A27|----/----\----;
                      STA.L !Map16TilesHigh,X             ;;9A2B|----/----\----;
                      STA.L !Map16TilesHigh+$1B0,X        ;;9A2F|----/----\----;
                      INX                                 ;;9A33|----/----\----;
                      DEY                                 ;;9A34|----/----\----;
                      BNE -                               ;;9A35|----/----\----;
                      CPX.B #$C0                          ;;9A37|----/----\----;
                      BNE Return009A4D                    ;;9A39|----/----\----;
                      LDX.B #$D0                          ;;9A3B|----/----\----;
CODE_009A3D:          LDY.B #$10                          ;;9A3D|----/----\----;
                      LDA.B #$05                          ;;9A3F|----/----\----;
                    - STA.L !Map16TilesLow,X              ;;9A41|----/----\----;
                      STA.L !Map16TilesLow+$1B0,X         ;;9A45|----/----\----;
                      INX                                 ;;9A49|----/----\----;
                      DEY                                 ;;9A4A|----/----\----;
                      BNE -                               ;;9A4B|----/----\----;
Return009A4D:         RTS                                 ;;9A4D|----/----\----;
                                                          ;;                   ;
                                                          ;;                   ;
                      db $FF,$01,$18,$30                  ;;9A4E|----/----\----;
                                                          ;;                   ;
CODE_009A52:          LDA.W !IRQNMICommand                ;;9A52|----/----\----;
                      LSR A                               ;;9A55|----/----\----;
                      BCS +                               ;;9A56|----/----\----;
                      JSL CODE_00F6DB                     ;;9A58|----/----\----;
                      JSL CODE_05BC00                     ;;9A5C|----/----\----;
                      LDA.W !ActiveBoss                   ;;9A60|----/----\----;
                      CMP.B #$04                          ;;9A63|----/----\----;
                      BEQ +                               ;;9A65|----/----\----;
                      JSR CODE_0086C7                     ;;9A67|----/----\----;
                      JSL CODE_02827D                     ;;9A6A|----/----\----;
                      RTS                                 ;;9A6E|----/----\----;
                                                          ;;                   ;
                    + JSL !OAMResetRoutine                ;;9A6F|----/----\----;
                      RTS                                 ;;9A73|----/----\----;
                                                          ;;                   ;
SetUp0DA0GM4:         LDA.W !HW_JOY1                      ;;9A74|----/----\----; \Read old-style controller register for player 1 
                      LSR A                               ;;9A77|----/----\----; /LSR A, but then discard (Is this for carry flag or something?) 
                      LDA.W !HW_JOY2                      ;;9A78|----/----\----; \Load And Rotate left A (player 2 old-style controller regs) 
                      ROL A                               ;;9A7B|----/----\----; / 
                      AND.B #$03                          ;;9A7C|----/----\----; AND A with #$03 
                      BEQ CODE_009A87                     ;;9A7E|----/----\----; If A AND #$03 = 0 Then STA $0DA0 (A=0) 
                      CMP.B #$03                          ;;9A80|----/----\----;
                      BNE +                               ;;9A82|----/----\----;
                      ORA.B #$80                          ;;9A84|----/----\----;
                    + DEC A                               ;;9A86|----/----\----;
CODE_009A87:          STA.W !ControllersPresent           ;;9A87|----/----\----;
                      RTS                                 ;;9A8A|----/----\----; *yawn* 
                                                          ;;                   ;
CODE_009A8B:          JSR SetUp0DA0GM4                    ;;9A8B|----/----\----;
                      JSR GM04Load                        ;;9A8E|----/----\----;
                      STZ.W !InGameTimerHundreds          ;;9A91|----/----\----; Zero the timer 
                      JSR CODE_0085FA                     ;;9A94|----/----\----;
                      LDA.B #$03                          ;;9A97|----/----\----; \ Load title screen Layer 3 image 
                      STA.B !StripeImage                  ;;9A99|----/----\----;  | 
                      JSR LoadScrnImage                   ;;9A9B|----/----\----; /  
                      JSR CODE_00ADA6                     ;;9A9E|----/----\----;
                      JSR CODE_00922F                     ;;9AA1|----/----\----;
                      JSL CODE_04F675                     ;;9AA4|----/----\----; todo: NOTE TO SELF: Check this routine out after making Bank4.asm 
                      LDA.B #$01                          ;;9AA8|----/----\----; \ Set special level to x01 
                      STA.W !IRQNMICommand                ;;9AAA|----/----\----; /  
                      LDA.B #$33                          ;;9AAD|----/----\----;
                      STA.B !Layer12Window                ;;9AAF|----/----\----;
                      LDA.B #$00                          ;;9AB1|----/----\----;
                      STA.B !Layer34Window                ;;9AB3|----/----\----;
                      LDA.B #$23                          ;;9AB5|----/----\----;
                      STA.B !OBJCWWindow                  ;;9AB7|----/----\----;
                      LDA.B #$12                          ;;9AB9|----/----\----;
                      STA.B !ColorAddition                ;;9ABB|----/----\----;
                      JSR CODE_009443                     ;;9ABD|----/----\----;
                      LDA.B #$10                          ;;9AC0|----/----\----;
                      STA.W !VariousPromptTimer           ;;9AC2|----/----\----;
                      JMP Mode04Finish                    ;;9AC5|----/----\----;
                                                          ;;                   ;
                                                          ;;                   ;
DATA_009AC8:          db $01,$FF,$FF                      ;;9AC8|----/----\----;
                                                          ;;                   ;
CODE_009ACB:          PHY                                 ;;9ACB|----/----\----;
                      JSR SetUp0DA0GM4                    ;;9ACC|----/----\----;
                      PLY                                 ;;9ACF|----/----\----;
CODE_009AD0:          INC.W !BlinkCursorTimer             ;;9AD0|----/----\----; Blinking cursor frame counter (file select, save prompt, etc) 
                      JSR CODE_009E82                     ;;9AD3|----/----\----;
                      LDX.W !BlinkCursorPos               ;;9AD6|----/----\----;
                      LDA.B !byetudlrFrame                ;;9AD9|----/----\----;
                      AND.B #$90                          ;;9ADB|----/----\----;
                      BNE CODE_009AE3                     ;;9ADD|----/----\----;
                      LDA.B !axlr0000Frame                ;;9ADF|----/----\----;
                      BPL CODE_009AEA                     ;;9AE1|----/----\----;
CODE_009AE3:          LDA.B #$01                          ;;9AE3|----/----\----;
                      STA.W !SPCIO3                       ;;9AE5|----/----\----;
                      BRA CODE_009B11                     ;;9AE8|----/----\----;
                                                          ;;                   ;
CODE_009AEA:          PLA                                 ;;9AEA|----/----\----;
                      PLA                                 ;;9AEB|----/----\----;
                      LDA.B !byetudlrFrame                ;;9AEC|----/----\----;
                      AND.B #$20                          ;;9AEE|----/----\----;
                      LSR A                               ;;9AF0|----/----\----;
                      LSR A                               ;;9AF1|----/----\----;
                      LSR A                               ;;9AF2|----/----\----;
                      ORA.B !byetudlrFrame                ;;9AF3|----/----\----;
                      AND.B #$0C                          ;;9AF5|----/----\----;
                      BEQ Return009B16                    ;;9AF7|----/----\----;
                      LDY.B #$06                          ;;9AF9|----/----\----;
                      STY.W !SPCIO3                       ;;9AFB|----/----\----;
                      STZ.W !BlinkCursorTimer             ;;9AFE|----/----\----;
                      LSR A                               ;;9B01|----/----\----;
                      LSR A                               ;;9B02|----/----\----;
                      TAY                                 ;;9B03|----/----\----;
                      TXA                                 ;;9B04|----/----\----;
                      ADC.W DATA_009AC8-1,Y               ;;9B05|----/----\----;
                      BPL +                               ;;9B08|----/----\----;
                      LDA.B !GraphicsCompPtr              ;;9B0A|----/----\----;
                      DEC A                               ;;9B0C|----/----\----;
                    + CMP.B !GraphicsCompPtr              ;;9B0D|----/----\----;
                      BCC +                               ;;9B0F|----/----\----;
CODE_009B11:          LDA.B #$00                          ;;9B11|----/----\----;
                    + STA.W !BlinkCursorPos               ;;9B13|----/----\----;
Return009B16:         RTS                                 ;;9B16|----/----\----;
                                                          ;;                   ;
                                                          ;;                   ;
DATA_009B17:          db $04,$02,$01                      ;;9B17|----/----\----;
                                                          ;;                   ;
CODE_009B1A:          REP #$20                            ;;9B1A|----/----\----; Accum (16 bit) 
                      LDA.W #$39C9                        ;;9B1C|----/----\----;
                      LDY.B #$60                          ;;9B1F|----/----\----;
                      JSR CODE_009D30                     ;;9B21|----/----\----;
                      LDA.B !byetudlrFrame                ;;9B24|----/----\----; Accum (8 bit) 
                      ORA.B !axlr0000Frame                ;;9B26|----/----\----;
                      AND.B #$40                          ;;9B28|----/----\----;
                      BEQ +                               ;;9B2A|----/----\----;
CODE_009B2C:          DEC.W !GameMode                     ;;9B2C|----/----\----;
                      DEC.W !GameMode                     ;;9B2F|----/----\----;
                      JSR CODE_009B11                     ;;9B32|----/----\----;
                      JMP CODE_009CB0                     ;;9B35|----/----\----;
                                                          ;;                   ;
                    + LDY.B #$08                          ;;9B38|----/----\----;
                      JSR CODE_009AD0                     ;;9B3A|----/----\----;
                      CPX.B #$03                          ;;9B3D|----/----\----;
                      BNE CODE_009B6D                     ;;9B3F|----/----\----;
                      LDY.B #$02                          ;;9B41|----/----\----;
CODE_009B43:          LSR.W !SaveFileDelete               ;;9B43|----/----\----;
                      BCC CODE_009B67                     ;;9B46|----/----\----;
                      PHY                                 ;;9B48|----/----\----;
                      LDA.W DATA_009CCB,Y                 ;;9B49|----/----\----;
                      XBA                                 ;;9B4C|----/----\----;
                      LDA.W DATA_009CCE,Y                 ;;9B4D|----/----\----;
                      REP #$10                            ;;9B50|----/----\----; Index (16 bit) 
                      TAX                                 ;;9B52|----/----\----;
                      LDY.W #$008F                        ;;9B53|----/----\----;
                      LDA.B #$00                          ;;9B56|----/----\----;
                    - STA.L !SaveData,X                   ;;9B58|----/----\----;
                      STA.L !SaveDataBackup,X             ;;9B5C|----/----\----;
                      INX                                 ;;9B60|----/----\----;
                      DEY                                 ;;9B61|----/----\----;
                      BNE -                               ;;9B62|----/----\----;
                      SEP #$10                            ;;9B64|----/----\----; Index (8 bit) 
                      PLY                                 ;;9B66|----/----\----;
CODE_009B67:          DEY                                 ;;9B67|----/----\----;
                      BPL CODE_009B43                     ;;9B68|----/----\----;
                      JMP CODE_009C89                     ;;9B6A|----/----\----;
                                                          ;;                   ;
CODE_009B6D:          STX.W !BlinkCursorPos               ;;9B6D|----/----\----;
                      LDA.W DATA_009B17,X                 ;;9B70|----/----\----;
                      ORA.W !SaveFileDelete               ;;9B73|----/----\----;
                      STA.W !SaveFileDelete               ;;9B76|----/----\----;
                      STA.B !_5                           ;;9B79|----/----\----;
                      LDX.B #$00                          ;;9B7B|----/----\----;
                      JMP CODE_009D3C                     ;;9B7D|----/----\----;
                                                          ;;                   ;
CODE_009B80:          PHB                                 ;;9B80|----/----\----; Wrapper 
                      PHK                                 ;;9B81|----/----\----;
                      PLB                                 ;;9B82|----/----\----;
                      JSR CODE_009B88                     ;;9B83|----/----\----;
                      PLB                                 ;;9B86|----/----\----;
                      RTL                                 ;;9B87|----/----\----;
                                                          ;;                   ;
CODE_009B88:          DEC A                               ;;9B88|----/----\----;
                      JSL ExecutePtr                      ;;9B89|----/----\----;
                                                          ;;                   ;
                      dw CODE_009B91                      ;;9B8D|----/----\----;
                      dw CODE_009B9A                      ;;9B8F|----/----\----;
                                                          ;;                   ;
CODE_009B91:          LDY.B #$0C                          ;;9B91|----/----\----;
                      JSR CODE_009D29                     ;;9B93|----/----\----;
                      INC.W !ShowContinueEnd              ;;9B96|----/----\----;
                      RTS                                 ;;9B99|----/----\----;
                                                          ;;                   ;
CODE_009B9A:          LDY.B #$00                          ;;9B9A|----/----\----;
                      JSR CODE_009AD0                     ;;9B9C|----/----\----;
                      TXA                                 ;;9B9F|----/----\----;
                      BNE +                               ;;9BA0|----/----\----;
                      JMP CODE_009E17                     ;;9BA2|----/----\----;
                                                          ;;                   ;
                    + JMP CODE_009C89                     ;;9BA5|----/----\----;
                                                          ;;                   ;
CODE_009BA8:          PHB                                 ;;9BA8|----/----\----; Wrapper 
                      PHK                                 ;;9BA9|----/----\----;
                      PLB                                 ;;9BAA|----/----\----;
                      JSR CODE_009BB0                     ;;9BAB|----/----\----;
                      PLB                                 ;;9BAE|----/----\----;
                      RTL                                 ;;9BAF|----/----\----;
                                                          ;;                   ;
CODE_009BB0:          LDY.B #$06                          ;;9BB0|----/----\----;
                      JSR CODE_009AD0                     ;;9BB2|----/----\----;
                      TXA                                 ;;9BB5|----/----\----;
                      BNE +                               ;;9BB6|----/----\----;
                      STZ.W !SPCIO3                       ;;9BB8|----/----\----;
                      LDA.B #$05                          ;;9BBB|----/----\----;
                      STA.W !SPCIO0                       ;;9BBD|----/----\----;
                      JSL CODE_009BC9                     ;;9BC0|----/----\----;
                    + JSL CODE_009C13                     ;;9BC4|----/----\----;
                      RTS                                 ;;9BC8|----/----\----;
                                                          ;;                   ;
CODE_009BC9:          PHB                                 ;;9BC9|----/----\----;
                      PHK                                 ;;9BCA|----/----\----;
                      PLB                                 ;;9BCB|----/----\----;
                      LDX.W !SaveFile                     ;;9BCC|----/----\----;
                      LDA.W DATA_009CCB,X                 ;;9BCF|----/----\----;
                      XBA                                 ;;9BD2|----/----\----;
                      LDA.W DATA_009CCE,X                 ;;9BD3|----/----\----;
                      REP #$10                            ;;9BD6|----/----\----; Index (16 bit) 
                      TAX                                 ;;9BD8|----/----\----;
CODE_009BD9:          LDY.W #$0000                        ;;9BD9|----/----\----;
                      STY.B !GraphicsCompPtr              ;;9BDC|----/----\----;
CODE_009BDE:          LDA.W !SaveDataBuffer,Y             ;;9BDE|----/----\----;
                      STA.L !SaveData,X                   ;;9BE1|----/----\----;
                      CLC                                 ;;9BE5|----/----\----;
                      ADC.B !GraphicsCompPtr              ;;9BE6|----/----\----;
                      STA.B !GraphicsCompPtr              ;;9BE8|----/----\----;
                      BCC +                               ;;9BEA|----/----\----;
                      INC.B !GraphicsCompPtr+1            ;;9BEC|----/----\----;
                    + INX                                 ;;9BEE|----/----\----;
                      INY                                 ;;9BEF|----/----\----;
                      CPY.W #$008D                        ;;9BF0|----/----\----;
                      BCC CODE_009BDE                     ;;9BF3|----/----\----;
                      REP #$20                            ;;9BF5|----/----\----; Accum (16 bit) 
                      LDA.W #$5A5A                        ;;9BF7|----/----\----;
                      SEC                                 ;;9BFA|----/----\----;
                      SBC.B !GraphicsCompPtr              ;;9BFB|----/----\----;
                      STA.L !SaveData,X                   ;;9BFD|----/----\----;
                      CPX.W #$01AD                        ;;9C01|----/----\----;
                      BCS CODE_009C0F                     ;;9C04|----/----\----;
                      TXA                                 ;;9C06|----/----\----;
                      ADC.W #$0120                        ;;9C07|----/----\----;
                      TAX                                 ;;9C0A|----/----\----;
                      SEP #$20                            ;;9C0B|----/----\----; Accum (8 bit) 
                      BRA CODE_009BD9                     ;;9C0D|----/----\----;
                                                          ;;                   ;
CODE_009C0F:          SEP #$30                            ;;9C0F|----/----\----; Index (8 bit) Accum (8 bit) 
                      PLB                                 ;;9C11|----/----\----;
                      RTL                                 ;;9C12|----/----\----;
                                                          ;;                   ;
CODE_009C13:          INC.W !OverworldPromptProcess       ;;9C13|----/----\----;
                      INC.W !MessageBoxExpand             ;;9C16|----/----\----;
                      LDY.B #$1B                          ;;9C19|----/----\----;
                      JSR CODE_009D29                     ;;9C1B|----/----\----;
                      RTL                                 ;;9C1E|----/----\----;
                                                          ;;                   ;
                                                          ;;                   ;
                      db $41                              ;;9C1F|----/----\----;
                                                          ;;                   ;
ItrCntrlrSqnc:        db $0F,$C1,$30,$00,$10,$42,$20,$41  ;;9C20|----/----\----;
                      db $70,$81,$11,$00,$80,$82,$0C,$00  ;;9C28|----/----\----;
                      db $30,$C1,$30,$41,$60,$C1,$10,$00  ;;9C30|----/----\----;
                      db $40,$01,$30,$E1,$01,$00,$60,$41  ;;9C38|----/----\----;
                      db $4E,$80,$10,$00,$30,$41,$58,$00  ;;9C40|----/----\----;
                      db $20,$60,$01,$00,$30,$60,$01,$00  ;;9C48|----/----\----;
                      db $30,$60,$01,$00,$30,$60,$01,$00  ;;9C50|----/----\----;
                      db $30,$60,$01,$00,$30,$41,$1A,$C1  ;;9C58|----/----\----;
                      db $30,$00,$30,$FF                  ;;9C60|----/----\----;
                                                          ;;                   ;
GAMEMODE_07:          JSR SetUp0DA0GM4                    ;;9C64|----/----\----;
                      JSR CODE_009CBE                     ;;9C67|----/----\----;
                      BNE CODE_009C9F                     ;;9C6A|----/----\----;
                      JSR NoButtons                       ;;9C6C|----/----\----; Zero controller RAM mirror 
                      LDX.W !TitleInputIndex              ;;9C6F|----/----\----; (Unknown byte) -> X 
                      DEC.W !VariousPromptTimer           ;;9C72|----/----\----; Decrement $1DF5 (unknown byte) 
                      BNE +                               ;;9C75|----/----\----; if !=  0 branch forward 
                      LDA.W ItrCntrlrSqnc,X               ;;9C77|----/----\----; Load $00/9C20,$1DF4 
                      STA.W !VariousPromptTimer           ;;9C7A|----/----\----; And store to $1DF5 
                      INX                                 ;;9C7D|----/----\----;
                      INX                                 ;;9C7E|----/----\----; $1DF4+=2 
                      STX.W !TitleInputIndex              ;;9C7F|----/----\----;
                    + LDA.W ItrCntrlrSqnc-3,X             ;;9C82|----/----\----; With the +=2 above, this is effectively LDA $9C20,$1DF4 
                      CMP.B #$FF                          ;;9C85|----/----\----;
                      BNE +                               ;;9C87|----/----\----;
CODE_009C89:          LDY.B #$02                          ;;9C89|----/----\----; If = #$FF, switch to game mode #$02... 
CODE_009C8B:          STY.W !GameMode                     ;;9C8B|----/----\----;
                      RTS                                 ;;9C8E|----/----\----; ...And finish 
                                                          ;;                   ;
                    + AND.B #$DF                          ;;9C8F|----/----\----;
                      STA.B !byetudlrHold                 ;;9C91|----/----\----; Write to controller RAM byte 01 
                      CMP.W ItrCntrlrSqnc-3,X             ;;9C93|----/----\----;
                      BNE +                               ;;9C96|----/----\----;
                      AND.B #$9F                          ;;9C98|----/----\----;
                    + STA.B !byetudlrFrame                ;;9C9A|----/----\----; Write to byte 01, Just-pressed variant 
                      JMP CODE_00A1DA                     ;;9C9C|----/----\----; Jump to another section of this routine 
                                                          ;;                   ;
CODE_009C9F:          JSL !OAMResetRoutine                ;;9C9F|----/----\----; IIRC, this contains a lot of STZ instructions 
                      LDA.B #$04                          ;;9CA3|----/----\----;
                      STA.W !HW_TM                        ;;9CA5|----/----\----; Zero something related to PPU ; Background and Object Enable
                      LDA.B #$13                          ;;9CA8|----/----\----;
                      STA.W !HW_TS                        ;;9CAA|----/----\----; Sub Screen Designation
                      STZ.W !HDMAEnable                   ;;9CAD|----/----\----; Disable all HDMA 
CODE_009CB0:          LDA.B #$E9                          ;;9CB0|----/----\----;
                      STA.W !OverworldOverride            ;;9CB2|----/----\----; #$E9 -> Uknown RAM byte 
                      JSR CODE_WRITEOW                    ;;9CB5|----/----\----;
                      JSR CODE_009D38                     ;;9CB8|----/----\----; -> here 
                      JMP CODE_009417                     ;;9CBB|----/----\----; Increase the Game mode and return (at jump point) 
                                                          ;;                   ;
CODE_009CBE:          LDA.B !axlr0000Hold                 ;;9CBE|----/----\----;
                      AND.B #$C0                          ;;9CC0|----/----\----;
                      BNE +                               ;;9CC2|----/----\----;
                      LDA.B !byetudlrHold                 ;;9CC4|----/----\----;
                      AND.B #$F0                          ;;9CC6|----/----\----;
                      BNE +                               ;;9CC8|----/----\----;
                    + RTS                                 ;;9CCA|----/----\----;
                                                          ;;                   ;
                                                          ;;                   ;
DATA_009CCB:          db $00,$00,$01                      ;;9CCB|----/----\----;
                                                          ;;                   ;
DATA_009CCE:          db $00,$8F,$1E                      ;;9CCE|----/----\----;
                                                          ;;                   ;
CODE_009CD1:          REP #$20                            ;;9CD1|----/----\----; 16 bit A ; Accum (16 bit) 
                      LDA.W #$7393                        ;;9CD3|----/----\----;
                      LDY.B #$20                          ;;9CD6|----/----\----;
                      JSR CODE_009D30                     ;;9CD8|----/----\----;
                      LDY.B #$02                          ;;9CDB|----/----\----;
                      JSR CODE_009ACB                     ;;9CDD|----/----\----;
                      INC.W !GameMode                     ;;9CE0|----/----\----;
                      CPX.B #$03                          ;;9CE3|----/----\----;
                      BNE +                               ;;9CE5|----/----\----;
                      STZ.W !SaveFileDelete               ;;9CE7|----/----\----;
                      LDX.B #$00                          ;;9CEA|----/----\----;
                      JMP CODE_009D3A                     ;;9CEC|----/----\----;
                                                          ;;                   ;
                    + STX.W !SaveFile                     ;;9CEF|----/----\----; Index (16 bit) Accum (8 bit) 
                      JSR CODE_009DB5                     ;;9CF2|----/----\----;
                      BNE CODE_009D22                     ;;9CF5|----/----\----;
                      PHX                                 ;;9CF7|----/----\----;
                      STZ.W !OverworldOverride            ;;9CF8|----/----\----;
                      LDA.B #$8F                          ;;9CFB|----/----\----;
                      STA.B !_0                           ;;9CFD|----/----\----;
                    - LDA.L !SaveData,X                   ;;9CFF|----/----\----;
                      PHX                                 ;;9D03|----/----\----;
                      TYX                                 ;;9D04|----/----\----;
                      STA.L !SaveData,X                   ;;9D05|----/----\----;
                      PLX                                 ;;9D09|----/----\----;
                      INX                                 ;;9D0A|----/----\----;
                      INY                                 ;;9D0B|----/----\----;
                      DEC.B !_0                           ;;9D0C|----/----\----;
                      BNE -                               ;;9D0E|----/----\----;
                      PLX                                 ;;9D10|----/----\----;
                      LDY.W #$0000                        ;;9D11|----/----\----;
                    - LDA.L !SaveData,X                   ;;9D14|----/----\----;
                      STA.W !SaveDataBuffer,Y             ;;9D18|----/----\----;
                      INX                                 ;;9D1B|----/----\----;
                      INY                                 ;;9D1C|----/----\----;
                      CPY.W #$008D                        ;;9D1D|----/----\----;
                      BCC -                               ;;9D20|----/----\----;
CODE_009D22:          SEP #$10                            ;;9D22|----/----\----; Index (8 bit) 
                      LDY.B #$12                          ;;9D24|----/----\----; \ Draw 1 PLAYER GAME/2 PLAYER GAME text 
                      INC.W !GameMode                     ;;9D26|----/----\----;  |Increase Game Mode 
CODE_009D29:          STY.B !StripeImage                  ;;9D29|----/----\----; /  
                      LDX.B #$00                          ;;9D2B|----/----\----;
                      JMP CODE_009ED4                     ;;9D2D|----/----\----;
                                                          ;;                   ;
CODE_009D30:          STA.W !BackgroundColor              ;;9D30|----/----\----; Store A in BG color 
                      STY.B !ColorSettings                ;;9D33|----/----\----; Store Y in CGADSUB 
                      SEP #$20                            ;;9D35|----/----\----; 8 bit A ; Accum (8 bit) 
                      RTS                                 ;;9D37|----/----\----;
                                                          ;;                   ;
CODE_009D38:          LDX.B #$CB                          ;;9D38|----/----\----;
CODE_009D3A:          STZ.B !_5                           ;;9D3A|----/----\----;
CODE_009D3C:          REP #$10                            ;;9D3C|----/----\----; Index (16 bit) 
                      LDY.W #$0000                        ;;9D3E|----/----\----;
                    - LDA.L DATA_05B6FE,X                 ;;9D41|----/----\----; X =  read index 
                      PHX                                 ;;9D45|----/----\----; Y = write index 
                      TYX                                 ;;9D46|----/----\----;
                      STA.L !DynamicStripeImage,X         ;;9D47|----/----\----; Layer 3-related table 
                      PLX                                 ;;9D4B|----/----\----;
                      INX                                 ;;9D4C|----/----\----;
                      INY                                 ;;9D4D|----/----\----;
                      CPY.W #$00CC                        ;;9D4E|----/----\----; If not at end of loop, continue 
                      BNE -                               ;;9D51|----/----\----;
                      SEP #$10                            ;;9D53|----/----\----; Index (8 bit) 
                      LDA.B #$84                          ;;9D55|----/----\----;
                      STA.B !_0                           ;;9D57|----/----\----;
                      LDX.B #$02                          ;;9D59|----/----\----;
CODE_009D5B:          STX.B !_4                           ;;9D5B|----/----\----;
                      LSR.B !_5                           ;;9D5D|----/----\----;  $05 = $05 / 2 
                      BCS CODE_009DA6                     ;;9D5F|----/----\----;
                      JSR CODE_009DB5                     ;;9D61|----/----\----;
                      BNE CODE_009DA6                     ;;9D64|----/----\----;
                      LDA.L !SaveDataChecksum,X           ;;9D66|----/----\----;
                      SEP #$10                            ;;9D6A|----/----\----; Index (8 bit) 
                      CMP.B #$60                          ;;9D6C|----/----\----;
                      BCC CODE_009D76                     ;;9D6E|----/----\----;
                      LDY.B #$87                          ;;9D70|----/----\----;
                      LDA.B #$88                          ;;9D72|----/----\----;
                      BRA +                               ;;9D74|----/----\----;
                                                          ;;                   ;
CODE_009D76:          JSR HexToDec                        ;;9D76|----/----\----;
                      TXY                                 ;;9D79|----/----\----;
                    + LDX.B !_0                           ;;9D7A|----/----\----;
                      STA.L !DynamicStripeImage+4,X       ;;9D7C|----/----\----;
                      TYA                                 ;;9D80|----/----\----;
                      BNE +                               ;;9D81|----/----\----;
                      LDY.B #$FC                          ;;9D83|----/----\----;
                    + TYA                                 ;;9D85|----/----\----;
                      STA.L !DynamicStripeImage+2,X       ;;9D86|----/----\----;
                      LDA.B #$38                          ;;9D8A|----/----\----;
                      STA.L !DynamicStripeImage+3,X       ;;9D8C|----/----\----;
                      STA.L !DynamicStripeImage+5,X       ;;9D90|----/----\----;
                      REP #$20                            ;;9D94|----/----\----; Accum (16 bit) 
                      LDY.B #$03                          ;;9D96|----/----\----;
                    - LDA.W #$38FC                        ;;9D98|----/----\----;
                      STA.L !DynamicStripeImage+6,X       ;;9D9B|----/----\----;
                      INX                                 ;;9D9F|----/----\----;
                      INX                                 ;;9DA0|----/----\----;
                      DEY                                 ;;9DA1|----/----\----;
                      BNE -                               ;;9DA2|----/----\----;
                      SEP #$20                            ;;9DA4|----/----\----; Accum (8 bit) 
CODE_009DA6:          SEP #$10                            ;;9DA6|----/----\----; Index (8 bit) 
                      LDA.B !_0                           ;;9DA8|----/----\----;
                      SEC                                 ;;9DAA|----/----\----;
                      SBC.B #$24                          ;;9DAB|----/----\----;
                      STA.B !_0                           ;;9DAD|----/----\----;
                      LDX.B !_4                           ;;9DAF|----/----\----;
                      DEX                                 ;;9DB1|----/----\----;
                      BPL CODE_009D5B                     ;;9DB2|----/----\----;
                      RTS                                 ;;9DB4|----/----\----;
                                                          ;;                   ;
CODE_009DB5:          LDA.W DATA_009CCB,X                 ;;9DB5|----/----\----;
                      XBA                                 ;;9DB8|----/----\----;
                      LDA.W DATA_009CCE,X                 ;;9DB9|----/----\----;
                      REP #$30                            ;;9DBC|----/----\----; Index (16 bit) Accum (16 bit) 
                      TAX                                 ;;9DBE|----/----\----;
                      CLC                                 ;;9DBF|----/----\----;
                      ADC.W #$01AD                        ;;9DC0|----/----\----;
                      TAY                                 ;;9DC3|----/----\----;
CODE_009DC4:          PHX                                 ;;9DC4|----/----\----;
                      PHY                                 ;;9DC5|----/----\----;
                      LDA.L !SaveDataChecksum+1,X         ;;9DC6|----/----\----;
                      STA.B !GraphicsCompPtr              ;;9DCA|----/----\----;
                      SEP #$20                            ;;9DCC|----/----\----; Accum (8 bit) 
                      LDY.W #$008D                        ;;9DCE|----/----\----;
CODE_009DD1:          LDA.L !SaveData,X                   ;;9DD1|----/----\----;
                      CLC                                 ;;9DD5|----/----\----;
                      ADC.B !GraphicsCompPtr              ;;9DD6|----/----\----;
                      STA.B !GraphicsCompPtr              ;;9DD8|----/----\----;
                      BCC +                               ;;9DDA|----/----\----;
                      INC.B !GraphicsCompPtr+1            ;;9DDC|----/----\----;
                    + INX                                 ;;9DDE|----/----\----;
                      DEY                                 ;;9DDF|----/----\----;
                      BNE CODE_009DD1                     ;;9DE0|----/----\----;
                      REP #$20                            ;;9DE2|----/----\----; Accum (16 bit) 
                      PLY                                 ;;9DE4|----/----\----;
                      PLX                                 ;;9DE5|----/----\----;
                      LDA.B !GraphicsCompPtr              ;;9DE6|----/----\----;
                      CMP.W #$5A5A                        ;;9DE8|----/----\----;
                      BEQ CODE_009DF7                     ;;9DEB|----/----\----;
                      CPX.W #$01AC                        ;;9DED|----/----\----;
                      BCS CODE_009DF7                     ;;9DF0|----/----\----;
                      PHX                                 ;;9DF2|----/----\----;
                      TYX                                 ;;9DF3|----/----\----;
                      PLY                                 ;;9DF4|----/----\----;
                      BRA CODE_009DC4                     ;;9DF5|----/----\----;
                                                          ;;                   ;
CODE_009DF7:          SEP #$20                            ;;9DF7|----/----\----; Accum (8 bit) 
                      RTS                                 ;;9DF9|----/----\----;
                                                          ;;                   ;
CODE_009DFA:          LDA.B !byetudlrFrame                ;;9DFA|----/----\----; Index (8 bit) 
                      ORA.B !axlr0000Frame                ;;9DFC|----/----\----;
                      AND.B #$40                          ;;9DFE|----/----\----;
                      BEQ +                               ;;9E00|----/----\----;
                      DEC.W !GameMode                     ;;9E02|----/----\----;
                      JMP CODE_009B2C                     ;;9E05|----/----\----;
                                                          ;;                   ;
                    + LDY.B #$04                          ;;9E08|----/----\----;
                      JSR CODE_009ACB                     ;;9E0A|----/----\----;
                      STX.W !IsTwoPlayerGame              ;;9E0D|----/----\----;
                      JSR CODE_00A195                     ;;9E10|----/----\----;
                      JSL CODE_04DAAD                     ;;9E13|----/----\----;
CODE_009E17:          LDA.B #$80                          ;;9E17|----/----\----;
                      STA.W !SPCIO2                       ;;9E19|----/----\----;
                      LDA.B #$FF                          ;;9E1C|----/----\----;
                      STA.W !SavedPlayerLives+1           ;;9E1E|----/----\----;
                      LDX.W !IsTwoPlayerGame              ;;9E21|----/----\----;
                      LDA.B #$04                          ;;9E24|----/----\----;
                    - STA.W !SavedPlayerLives,X           ;;9E26|----/----\----;
                      DEX                                 ;;9E29|----/----\----;
                      BPL -                               ;;9E2A|----/----\----;
                      STA.W !PlayerLives                  ;;9E2C|----/----\----;
                      STZ.W !PlayerCoins                  ;;9E2F|----/----\----;
                      STZ.W !CarryYoshiThruLvls           ;;9E32|----/----\----;
                      STZ.B !Powerup                      ;;9E35|----/----\----;
                      STZ.W !PlayerItembox                ;;9E37|----/----\----;
                      STZ.W !ShowContinueEnd              ;;9E3A|----/----\----;
                      REP #$20                            ;;9E3D|----/----\----; Accum (16 bit) 
                      STZ.W !SavedPlayerCoins             ;;9E3F|----/----\----;
                      STZ.W !SavedPlayerPowerup           ;;9E42|----/----\----;
                      STZ.W !SavedPlayerYoshi             ;;9E45|----/----\----;
                      STZ.W !PlayerItembox                ;;9E48|----/----\----;
                      STZ.W !PlayerBonusStars             ;;9E4B|----/----\----;
                      STZ.W !PlayerScore                  ;;9E4E|----/----\----;
                      STZ.W !PlayerScore+3                ;;9E51|----/----\----;
                      SEP #$20                            ;;9E54|----/----\----; Accum (8 bit) 
                      STZ.W !PlayerScore+2                ;;9E56|----/----\----;
                      STZ.W !PlayerScore+5                ;;9E59|----/----\----;
                      STZ.W !OWLevelExitMode              ;;9E5C|----/----\----;
                      STZ.W !PlayerTurnLvl                ;;9E5F|----/----\----;
CODE_009E62:          JSR KeepModeActive                  ;;9E62|----/----\----;
                      LDY.B #$0B                          ;;9E65|----/----\----;
                      JMP CODE_009C8B                     ;;9E67|----/----\----;
                                                          ;;                   ;
                                                          ;;                   ;
DATA_009E6A:          db $02,$00,$04,$00,$02,$00,$02,$00  ;;9E6A|----/----\----;
                      db $04,$00                          ;;9E72|----/----\----;
                                                          ;;                   ;
DATA_009E74:          db $CB,$51,$E8,$51,$08,$52,$C4,$51  ;;9E74|----/----\----;
                      db $E5,$51                          ;;9E7C|----/----\----;
                                                          ;;                   ;
DATA_009E7E:          db $01,$02,$04,$08                  ;;9E7E|----/----\----;
                                                          ;;                   ;
CODE_009E82:          LDX.W !BlinkCursorPos               ;;9E82|----/----\----;
                      LDA.W DATA_009E7E,X                 ;;9E85|----/----\----;
                      TAX                                 ;;9E88|----/----\----;
                      LDA.W !BlinkCursorTimer             ;;9E89|----/----\----;
                      EOR.B #$1F                          ;;9E8C|----/----\----;
                      AND.B #$18                          ;;9E8E|----/----\----;
                      BNE +                               ;;9E90|----/----\----;
                      LDX.B #$00                          ;;9E92|----/----\----;
                    + STX.B !_0                           ;;9E94|----/----\----;
                      LDA.L !DynStripeImgSize             ;;9E96|----/----\----;
                      TAX                                 ;;9E9A|----/----\----;
                      REP #$20                            ;;9E9B|----/----\----; Accum (16 bit) 
                      LDA.W DATA_009E6A,Y                 ;;9E9D|----/----\----;
                      STA.B !GraphicsCompPtr              ;;9EA0|----/----\----;
                      STA.B !_2                           ;;9EA2|----/----\----;
                      LDA.W DATA_009E74,Y                 ;;9EA4|----/----\----;
CODE_009EA7:          XBA                                 ;;9EA7|----/----\----;
                      STA.L !DynamicStripeImage,X         ;;9EA8|----/----\----;
                      XBA                                 ;;9EAC|----/----\----;
                      CLC                                 ;;9EAD|----/----\----;
                      ADC.W #$0040                        ;;9EAE|----/----\----;
                      PHA                                 ;;9EB1|----/----\----;
                      LDA.W #$0100                        ;;9EB2|----/----\----;
                      STA.L !DynamicStripeImage+2,X       ;;9EB5|----/----\----;
                      LDA.W #$38FC                        ;;9EB9|----/----\----;
                      LSR.B !_0                           ;;9EBC|----/----\----;
                      BCC +                               ;;9EBE|----/----\----;
                      LDA.W #$3D2E                        ;;9EC0|----/----\----;
                    + STA.L !DynamicStripeImage+4,X       ;;9EC3|----/----\----;
                      PLA                                 ;;9EC7|----/----\----;
                      INX                                 ;;9EC8|----/----\----;
                      INX                                 ;;9EC9|----/----\----;
                      INX                                 ;;9ECA|----/----\----;
                      INX                                 ;;9ECB|----/----\----;
                      INX                                 ;;9ECC|----/----\----;
                      INX                                 ;;9ECD|----/----\----;
                      DEC.B !_2                           ;;9ECE|----/----\----;
                      BNE CODE_009EA7                     ;;9ED0|----/----\----;
                      SEP #$20                            ;;9ED2|----/----\----; Accum (8 bit) 
CODE_009ED4:          TXA                                 ;;9ED4|----/----\----;
                      STA.L !DynStripeImgSize             ;;9ED5|----/----\----;
                      LDA.B #$FF                          ;;9ED9|----/----\----;
                      STA.L !DynamicStripeImage,X         ;;9EDB|----/----\----;
                      RTS                                 ;;9EDF|----/----\----;
                                                          ;;                   ;
                                                          ;;                   ;
TBL_009EE0:           db $28                              ;;9EE0|----/----\----;
                                                          ;;                   ;
DATA_009EE1:          db $03,$4D,$01,$52,$01,$53,$01,$5B  ;;9EE1|----/----\----;
                      db $08,$5C,$02,$57,$04,$30,$01      ;;9EE9|----/----\----;
                                                          ;;                   ;
TBL_009EF0:           db $01,$01,$02,$00,$02,$00,$68,$00  ;;9EF0|----/----\----;
                      db $78,$00,$68,$00,$78,$00,$06,$00  ;;9EF8|----/----\----;
                      db $07,$00,$06,$00,$07,$00          ;;9F00|----/----\----;
                                                          ;;                   ;
CODE_WRITEOW:         LDX.B #$8D                          ;;9F06|----/----\----; Index (8 bit) 
                    - STZ.W !SaveDataBuffer-1,X           ;;9F08|----/----\----;
                      DEX                                 ;;9F0B|----/----\----;
                      BNE -                               ;;9F0C|----/----\----;
                      LDX.B #$0E                          ;;9F0E|----/----\----;
                    - LDY.W TBL_009EE0,X                  ;;9F10|----/----\----; \ 
                      LDA.W DATA_009EE1,X                 ;;9F13|----/----\----; |Write overworld settings to OW L1 table 
                      STA.W !SaveDataBuffer,Y             ;;9F16|----/----\----; / 
                      DEX                                 ;;9F19|----/----\----;
                      DEX                                 ;;9F1A|----/----\----;
                      BPL -                               ;;9F1B|----/----\----;
                      LDX.B #$15                          ;;9F1D|----/----\----;
                    - LDA.W TBL_009EF0,X                  ;;9F1F|----/----\----;
                      STA.W !SaveDataBufferSubmap,X       ;;9F22|----/----\----; <- This probably means that the table above ends at 1FB7 
                      DEX                                 ;;9F25|----/----\----;
                      BPL -                               ;;9F26|----/----\----;
                      RTS                                 ;;9F28|----/----\----;
                                                          ;;                   ;
KeepModeActive:       LDA.B #$01                          ;;9F29|----/----\----;
CODE_009F2B:          STA.W !KeepModeActive               ;;9F2B|----/----\----;
                      RTS                                 ;;9F2E|----/----\----;
                                                          ;;                   ;
                                                          ;;                   ;
DATA_009F2F:          db $01,$FF                          ;;9F2F|----/----\----;
                                                          ;;                   ;
DATA_009F31:          db $F0,$10                          ;;9F31|----/----\----;
                                                          ;;                   ;
DATA_009F33:          db $0F,$00,$00,$F0                  ;;9F33|----/----\----;
                                                          ;;                   ;
TmpFade:              DEC.W !KeepModeActive               ;;9F37|----/----\----; \If 0DB1 = 0 Then Exit Ssub 
                      BPL Return009F6E                    ;;9F3A|----/----\----; /Decrease it either way. 
                      JSR KeepModeActive                  ;;9F3C|----/----\----; #$01 -> $0DB1 
                      LDY.W !MosaicDirection              ;;9F3F|----/----\----;
                      LDA.W !MosaicSize                   ;;9F42|----/----\----; \  
                      CLC                                 ;;9F45|----/----\----;  |Increase $0DB0 (mosaic size) by $9F31,y 
                      ADC.W DATA_009F31,Y                 ;;9F46|----/----\----;  | 
                      STA.W !MosaicSize                   ;;9F49|----/----\----; /  
CODE_009F4C:          LDA.W !Brightness                   ;;9F4C|----/----\----; Load Brightness byte from RAM 
                      CLC                                 ;;9F4F|----/----\----; \Add $9F2F,Y 
                      ADC.W DATA_009F2F,Y                 ;;9F50|----/----\----; / 
                      STA.W !Brightness                   ;;9F53|----/----\----; Store back to brightness RAM byte 
                      CMP.W DATA_009F33,Y                 ;;9F56|----/----\----;
                      BNE +                               ;;9F59|----/----\----;
GM__Mosaic:           INC.W !GameMode                     ;;9F5B|----/----\----; Game Mode += 1 
                      LDA.W !MosaicDirection              ;;9F5E|----/----\----; \  
                      EOR.B #$01                          ;;9F61|----/----\----;  |$0DAF = $0DAF XOR 1 
                      STA.W !MosaicDirection              ;;9F63|----/----\----; /  
                    + LDA.B #$03                          ;;9F66|----/----\----; \  
                      ORA.W !MosaicSize                   ;;9F68|----/----\----;  |Set mosaic size to $0DB0, enable mosaic on Layer 1 and 2. 
                      STA.W !HW_MOSAIC                    ;;9F6B|----/----\----; /  ; Mosaic Size and BG Enable
Return009F6E:         RTS                                 ;;9F6E|----/----\----; I think we're done here 
                                                          ;;                   ;
CODE_009F6F:          DEC.W !KeepModeActive               ;;9F6F|----/----\----; Decrement something...  Seems like it might be a timing counter ; Index (8 bit) 
                      BPL Return009F6E                    ;;9F72|----/----\----; If positive, return from subroutine. 
                      JSR KeepModeActive                  ;;9F74|----/----\----; Remain in this mode 
CODE_009F77:          LDY.W !MosaicDirection              ;;9F77|----/----\----; $0DAF -> Y, 
                      BRA CODE_009F4C                     ;;9F7A|----/----\----; BRA to the fade control routine 
                                                          ;;                   ;
CODE_009F7C:          DEC.W !KeepModeActive               ;;9F7C|----/----\----;
                      BPL Return009F6E                    ;;9F7F|----/----\----;
                      LDA.B #$08                          ;;9F81|----/----\----;
                      JSR CODE_009F2B                     ;;9F83|----/----\----;
                      BRA CODE_009F77                     ;;9F86|----/----\----;
                                                          ;;                   ;
                                                          ;;                   ;
DATA_009F88:          db $01,$02,$C0,$01,$80,$81,$01,$02  ;;9F88|----/----\----;
                      db $C0,$01,$02,$81,$01,$02,$80,$01  ;;9F90|----/----\----;
                      db $02,$81,$01,$02,$81,$01,$02,$C0  ;;9F98|----/----\----;
                      db $01,$02,$C0,$01,$02,$81,$01,$02  ;;9FA0|----/----\----;
                      db $80,$01,$02,$80,$01,$02,$80,$01  ;;9FA8|----/----\----;
                      db $02,$81,$01,$02,$81,$01,$02,$80  ;;9FB0|----/----\----;
                                                          ;;                   ;
CODE_009FB8:          LDA.W !ObjectTileset                ;;9FB8|----/----\----; \  
                      ASL A                               ;;9FBB|----/----\----;  |Get (Tileset*3), store in $00 
                      CLC                                 ;;9FBC|----/----\----;  | 
                      ADC.W !ObjectTileset                ;;9FBD|----/----\----;  | 
                      STA.B !_0                           ;;9FC0|----/----\----; /  
                      LDA.W !Layer3Setting                ;;9FC2|----/----\----;
                      BEQ CODE_00A012                     ;;9FC5|----/----\----;
                      DEC A                               ;;9FC7|----/----\----;
                      CLC                                 ;;9FC8|----/----\----;
                      ADC.B !_0                           ;;9FC9|----/----\----;
                      TAX                                 ;;9FCB|----/----\----;
                      LDA.W DATA_009F88,X                 ;;9FCC|----/----\----;
                      BMI CODE_009FEA                     ;;9FCF|----/----\----;
                      STA.W !Layer3TideSetting            ;;9FD1|----/----\----;
                      LSR A                               ;;9FD4|----/----\----;
                      PHP                                 ;;9FD5|----/----\----;
                      JSR CODE_00A045                     ;;9FD6|----/----\----;
                      LDA.B #$70                          ;;9FD9|----/----\----;
                      PLP                                 ;;9FDB|----/----\----;
                      BEQ +                               ;;9FDC|----/----\----;
                      LDA.B #$40                          ;;9FDE|----/----\----;
                    + STA.B !Layer3YPos                   ;;9FE0|----/----\----;
                      STZ.B !Layer3YPos+1                 ;;9FE2|----/----\----;
                      JSL CODE_05BC72                     ;;9FE4|----/----\----;
                      BRA CODE_00A01B                     ;;9FE8|----/----\----;
                                                          ;;                   ;
CODE_009FEA:          ASL A                               ;;9FEA|----/----\----;
                      BMI CODE_00A012                     ;;9FEB|----/----\----;
                      BEQ CODE_00A007                     ;;9FED|----/----\----;
                      LDA.W !ObjectTileset                ;;9FEF|----/----\----;
                      CMP.B #$01                          ;;9FF2|----/----\----;
                      BEQ CODE_009FFA                     ;;9FF4|----/----\----;
                      CMP.B #$03                          ;;9FF6|----/----\----;
                      BNE CODE_00A01F                     ;;9FF8|----/----\----;
CODE_009FFA:          REP #$20                            ;;9FFA|----/----\----; Accum (16 bit) 
                      LDA.B !Layer1XPos                   ;;9FFC|----/----\----;
                      LSR A                               ;;9FFE|----/----\----;
                      STA.B !Layer3XPos                   ;;9FFF|----/----\----;
                      SEP #$20                            ;;A001|----/----\----; Accum (8 bit) 
                      LDA.B #$C0                          ;;A003|----/----\----;
                      BRA CODE_00A017                     ;;A005|----/----\----;
                                                          ;;                   ;
CODE_00A007:          LDX.B #$07                          ;;A007|----/----\----;
                    - LDA.W DATA_00B66C,X                 ;;A009|----/----\----;
                      STA.W !MainPalette+$18,X            ;;A00C|----/----\----;
                      DEX                                 ;;A00F|----/----\----;
                      BPL -                               ;;A010|----/----\----;
CODE_00A012:          INC.W !Layer3ScrollType             ;;A012|----/----\----;
                      LDA.B #$D0                          ;;A015|----/----\----;
CODE_00A017:          STA.B !Layer3YPos                   ;;A017|----/----\----;
                      STZ.B !Layer3YPos+1                 ;;A019|----/----\----;
CODE_00A01B:          LDA.B #$04                          ;;A01B|----/----\----;
                      TRB.B !ColorSettings                ;;A01D|----/----\----;
CODE_00A01F:          LDA.W !Layer3Setting                ;;A01F|----/----\----;
                      BEQ +                               ;;A022|----/----\----;
                      DEC A                               ;;A024|----/----\----;
                      CLC                                 ;;A025|----/----\----;
                      ADC.B !_0                           ;;A026|----/----\----;
                      STA.B !_1                           ;;A028|----/----\----;
                      ASL A                               ;;A02A|----/----\----;
                      CLC                                 ;;A02B|----/----\----;
                      ADC.B !_1                           ;;A02C|----/----\----;
                      TAX                                 ;;A02E|----/----\----;
                      LDA.L Layer3Ptr,X                   ;;A02F|----/----\----;
                      STA.B !_0                           ;;A033|----/----\----;
                      LDA.L Layer3Ptr+1,X                 ;;A035|----/----\----;
                      STA.B !_1                           ;;A039|----/----\----;
                      LDA.L Layer3Ptr+2,X                 ;;A03B|----/----\----;
                      STA.B !_2                           ;;A03F|----/----\----;
                      JSR CODE_00871E                     ;;A041|----/----\----;
                    + RTS                                 ;;A044|----/----\----;
                                                          ;;                   ;
CODE_00A045:          REP #$30                            ;;A045|----/----\----; Index (16 bit) Accum (16 bit) 
                      LDX.W #$0100                        ;;A047|----/----\----;
CODE_00A04A:          LDY.W #$0058                        ;;A04A|----/----\----;
                      LDA.W #$0000                        ;;A04D|----/----\----;
                    - STA.L !OWLayer1VramBuffer-$100,X    ;;A050|----/----\----;
                      INX                                 ;;A054|----/----\----;
                      INX                                 ;;A055|----/----\----;
                      DEY                                 ;;A056|----/----\----;
                      BNE -                               ;;A057|----/----\----;
                      TXA                                 ;;A059|----/----\----;
                      CLC                                 ;;A05A|----/----\----;
                      ADC.W #$0100                        ;;A05B|----/----\----;
                      TAX                                 ;;A05E|----/----\----;
                      CPX.W #$1B00                        ;;A05F|----/----\----;
                      BCC CODE_00A04A                     ;;A062|----/----\----;
                      SEP #$30                            ;;A064|----/----\----; Index (8 bit) Accum (8 bit) 
                      LDA.B #$80                          ;;A066|----/----\----;
                      TSB.B !ScreenMode                   ;;A068|----/----\----;
                      RTS                                 ;;A06A|----/----\----;
                                                          ;;                   ;
                                                          ;;                   ;
DATA_00A06B:          db $00,$00,$EF,$FF,$EF,$FF,$EF,$FF  ;;A06B|----/----\----;
                      db $F0,$00,$F0,$00,$F0,$00          ;;A073|----/----\----;
                                                          ;;                   ;
DATA_00A079:          db $00,$00,$D8,$FF,$80,$00,$28,$01  ;;A079|----/----\----;
                      db $D8,$FF,$80,$00,$28,$01          ;;A081|----/----\----;
                                                          ;;                   ;
CODE_00A087:          JSR TurnOffIO                       ;;A087|----/----\----;
                      LDA.W !EnteringStarWarp             ;;A08A|----/----\----;
                      BEQ +                               ;;A08D|----/----\----;
                      JSL CODE_04853B                     ;;A08F|----/----\----;
                    + JSR Clear_1A_13D3                   ;;A093|----/----\----;
                      LDA.W !OverworldOverride            ;;A096|----/----\----;
                      BEQ +                               ;;A099|----/----\----;
                      LDA.B #$B0                          ;;A09B|----/----\----;
                      STA.W !VariousPromptTimer           ;;A09D|----/----\----;
                      STZ.W !OWPlayerSubmap               ;;A0A0|----/----\----;
                      LDA.B #$F0                          ;;A0A3|----/----\----;
                      STA.W !MosaicSize                   ;;A0A5|----/----\----;
                      LDA.B #$10                          ;;A0A8|----/----\----;
                      STA.W !GameMode                     ;;A0AA|----/----\----;
                      JMP Mode04Finish                    ;;A0AD|----/----\----;
                                                          ;;                   ;
                    + JSR CODE_0085FA                     ;;A0B0|----/----\----;
                      JSR UploadMusicBank1                ;;A0B3|----/----\----;
                      JSR SetUpScreen                     ;;A0B6|----/----\----;
                      STZ.W !MusicBackup                  ;;A0B9|----/----\----;
                      LDX.W !PlayerTurnLvl                ;;A0BC|----/----\----;
                      LDA.W !PlayerLives                  ;;A0BF|----/----\----;
                      BPL +                               ;;A0C2|----/----\----;
                      INC.W !OverworldPromptProcess       ;;A0C4|----/----\----;
                    + STA.W !SavedPlayerLives,X           ;;A0C7|----/----\----;
                      LDA.B !Powerup                      ;;A0CA|----/----\----;
                      STA.W !SavedPlayerPowerup,X         ;;A0CC|----/----\----;
                      LDA.W !PlayerCoins                  ;;A0CF|----/----\----;
                      STA.W !SavedPlayerCoins,X           ;;A0D2|----/----\----;
                      LDA.W !CarryYoshiThruLvls           ;;A0D5|----/----\----;
                      BEQ +                               ;;A0D8|----/----\----;
                      LDA.W !YoshiColor                   ;;A0DA|----/----\----;
                    + STA.W !SavedPlayerYoshi,X           ;;A0DD|----/----\----;
                      LDA.W !PlayerItembox                ;;A0E0|----/----\----;
                      STA.W !SavedPlayerItembox,X         ;;A0E3|----/----\----;
                      LDA.B #$03                          ;;A0E6|----/----\----;
                      STA.B !ColorAddition                ;;A0E8|----/----\----;
                      LDA.B #$30                          ;;A0EA|----/----\----;
                      LDX.B #$15                          ;;A0EC|----/----\----;
                      LDY.W !ShowContinueEnd              ;;A0EE|----/----\----;
                      BEQ CODE_00A11B                     ;;A0F1|----/----\----;
                      JSR CODE_00A195                     ;;A0F3|----/----\----;
                      LDA.W !ExitsCompleted               ;;A0F6|----/----\----;
                      BNE +                               ;;A0F9|----/----\----;
                      JSR CODE_009C89                     ;;A0FB|----/----\----;
                      JMP CODE_0093F4                     ;;A0FE|----/----\----;
                                                          ;;                   ;
                    + JSL CODE_04DAAD                     ;;A101|----/----\----;
                      REP #$20                            ;;A105|----/----\----; Accum (16 bit) 
                      LDA.W #$318C                        ;;A107|----/----\----;
                      STA.W !BackgroundColor              ;;A10A|----/----\----;
                      SEP #$20                            ;;A10D|----/----\----; Accum (8 bit) 
                      LDA.B #$30                          ;;A10F|----/----\----;
                      STA.B !OBJCWWindow                  ;;A111|----/----\----;
                      LDA.B #$20                          ;;A113|----/----\----;
                      STA.B !ColorAddition                ;;A115|----/----\----;
                      LDA.B #$B3                          ;;A117|----/----\----;
                      LDX.B #$17                          ;;A119|----/----\----;
CODE_00A11B:          LDY.B #$02                          ;;A11B|----/----\----;
                      JSR ScreenSettings                  ;;A11D|----/----\----;
                      STX.W !HW_TMW                       ;;A120|----/----\----; Window Mask Designation for Main Screen
                      STY.W !HW_TSW                       ;;A123|----/----\----; Window Mask Designation for Sub Screen
                      JSL CODE_04DC09                     ;;A126|----/----\----;
                      LDX.W !PlayerTurnLvl                ;;A12A|----/----\----;
                      LDA.W !OWPlayerSubmap,X             ;;A12D|----/----\----;
                      ASL A                               ;;A130|----/----\----;
                      TAX                                 ;;A131|----/----\----;
                      REP #$20                            ;;A132|----/----\----; Accum (16 bit) 
                      LDA.W DATA_00A06B,X                 ;;A134|----/----\----;
                      STA.B !Layer1XPos                   ;;A137|----/----\----;
                      STA.B !Layer2XPos                   ;;A139|----/----\----;
                      LDA.W DATA_00A079,X                 ;;A13B|----/----\----;
                      STA.B !Layer1YPos                   ;;A13E|----/----\----;
                      STA.B !Layer2YPos                   ;;A140|----/----\----;
                      SEP #$20                            ;;A142|----/----\----; Accum (8 bit) 
                      JSR UploadSpriteGFX                 ;;A144|----/----\----;
                      LDY.B #$14                          ;;A147|----/----\----;
                      JSL CODE_00BA28                     ;;A149|----/----\----;
                      JSR CODE_00AD25                     ;;A14D|----/----\----;
                      JSR CODE_00922F                     ;;A150|----/----\----;
                      LDA.B #$06                          ;;A153|----/----\----; \ Load overworld border 
                      STA.B !StripeImage                  ;;A155|----/----\----;  | 
                      JSR LoadScrnImage                   ;;A157|----/----\----; /  
                      JSL CODE_05DBF2                     ;;A15A|----/----\----;
                      JSR LoadScrnImage                   ;;A15E|----/----\----;
                      JSL CODE_048D91                     ;;A161|----/----\----;
                      JSL CODE_04D6E9                     ;;A165|----/----\----;
                      LDA.B #$F0                          ;;A169|----/----\----;
                      STA.B !OAMAddress                   ;;A16B|----/----\----;
                      JSR CODE_008494                     ;;A16D|----/----\----;
                      JSR LoadScrnImage                   ;;A170|----/----\----;
                      STZ.W !OverworldProcess             ;;A173|----/----\----;
                      JSR KeepModeActive                  ;;A176|----/----\----;
                      LDA.B #$02                          ;;A179|----/----\----;
                      STA.W !IRQNMICommand                ;;A17B|----/----\----;
                      REP #$10                            ;;A17E|----/----\----; Index (16 bit) 
                      LDX.W #$01BE                        ;;A180|----/----\----;
                      LDA.B #$FF                          ;;A183|----/----\----;
                    - STZ.W !WindowTable,X                ;;A185|----/----\----;
                      STA.W !WindowTable+1,X              ;;A188|----/----\----;
                      DEX                                 ;;A18B|----/----\----;
                      DEX                                 ;;A18C|----/----\----;
                      BPL -                               ;;A18D|----/----\----;
                      JSR CODE_0092A0                     ;;A18F|----/----\----;
                      JMP CODE_0093F4                     ;;A192|----/----\----;
                                                          ;;                   ;
CODE_00A195:          REP #$10                            ;;A195|----/----\----; Index (16 bit) 
                      LDX.W #$008C                        ;;A197|----/----\----;
                    - LDA.W !SaveDataBuffer,X             ;;A19A|----/----\----;
                      STA.W !OWLevelTileSettings,X        ;;A19D|----/----\----;
                      DEX                                 ;;A1A0|----/----\----;
                      BPL -                               ;;A1A1|----/----\----;
                      SEP #$10                            ;;A1A3|----/----\----; Index (8 bit) 
                      RTS                                 ;;A1A5|----/----\----;
                                                          ;;                   ;
Clear_1A_13D3:        REP #$10                            ;;A1A6|----/----\----; 16 bit X,Y ; Index (16 bit) 
                      SEP #$20                            ;;A1A8|----/----\----; 8 bit A ; Accum (8 bit) 
                      LDX.W #$00BD                        ;;A1AA|----/----\----; \  
                    - STZ.B !Layer1XPos,X                 ;;A1AD|----/----\----;  |Clear RAM addresses $1A-$D7 
                      DEX                                 ;;A1AF|----/----\----;  | 
                      BPL -                               ;;A1B0|----/----\----; /  
                      LDX.W #$07CE                        ;;A1B2|----/----\----; \  
                    - STZ.W !PauseTimer,X                 ;;A1B5|----/----\----;  |Clear RAM addresses $13D3-$1BA1 
                      DEX                                 ;;A1B8|----/----\----;  | 
                      BPL -                               ;;A1B9|----/----\----; /  
                      SEP #$10                            ;;A1BB|----/----\----; 16 bit X,Y ; Index (8 bit) 
                      RTS                                 ;;A1BD|----/----\----; Return 
                                                          ;;                   ;
CODE_00A1BE:          JSR SetUp0DA0GM4                    ;;A1BE|----/----\----;
                      INC.B !EffFrame                     ;;A1C1|----/----\----; Increase alternate frame counter 
                      JSL !OAMResetRoutine                ;;A1C3|----/----\----;
                      JSL GameMode_0E_Prim                ;;A1C7|----/----\----; (Bank 4.asm) 
                      JMP CODE_008494                     ;;A1CB|----/----\----;
                                                          ;;                   ;
                                                          ;;                   ;
GrndShakeDispYLo:     db $FE,$00,$02,$00                  ;;A1CE|----/----\----;
                                                          ;;                   ;
GrndShakeDispYHi:     db $FF,$00,$00,$00                  ;;A1D2|----/----\----;
                                                          ;;                   ;
                      db $12,$22,$12,$02                  ;;A1D6|----/----\----;
                                                          ;;                   ;
CODE_00A1DA:          LDA.W !MessageBoxTrigger            ;;A1DA|----/----\----;
                      BEQ +                               ;;A1DD|----/----\----;
                      JSL CODE_05B10C                     ;;A1DF|----/----\----;
                      RTS                                 ;;A1E3|----/----\----;
                                                          ;;                   ;
                    + LDA.W !BonusGameActivate            ;;A1E4|----/----\----;
                      BEQ +                               ;;A1E7|----/----\----;
                      LDA.W !BonusFinishTimer             ;;A1E9|----/----\----;
                      BEQ +                               ;;A1EC|----/----\----;
                      CMP.B #$40                          ;;A1EE|----/----\----;
                      BCS +                               ;;A1F0|----/----\----;
                      JSR NoButtons                       ;;A1F2|----/----\----;
                      CMP.B #$1C                          ;;A1F5|----/----\----;
                      BCS +                               ;;A1F7|----/----\----;
                      JSR SetMarioPeaceImg                ;;A1F9|----/----\----;
                      LDA.B #$0D                          ;;A1FC|----/----\----;
                      STA.B !PlayerAnimation              ;;A1FE|----/----\----;
                    + ORA.B !PlayerAnimation              ;;A200|----/----\----;
                      ORA.W !EndLevelTimer                ;;A202|----/----\----;
                      BEQ +                               ;;A205|----/----\----;
                      LDA.B #$04                          ;;A207|----/----\----;
                      TRB.B !byetudlrHold                 ;;A209|----/----\----;
                      LDA.B #$40                          ;;A20B|----/----\----;
                      TRB.B !byetudlrFrame                ;;A20D|----/----\----;
                      TRB.B !axlr0000Frame                ;;A20F|----/----\----;
                    + LDA.W !PauseTimer                   ;;A211|----/----\----;
                      BEQ CODE_00A21B                     ;;A214|----/----\----;
                      DEC.W !PauseTimer                   ;;A216|----/----\----;
                      BRA CODE_00A242                     ;;A219|----/----\----;
                                                          ;;                   ;
CODE_00A21B:          LDA.B !byetudlrFrame                ;;A21B|----/----\----;
                      AND.B #$10                          ;;A21D|----/----\----;
                      BEQ CODE_00A242                     ;;A21F|----/----\----;
                      LDA.W !EndLevelTimer                ;;A221|----/----\----;
                      BNE CODE_00A242                     ;;A224|----/----\----;
                      LDA.B !PlayerAnimation              ;;A226|----/----\----;
                      CMP.B #$09                          ;;A228|----/----\----;
                      BCS CODE_00A242                     ;;A22A|----/----\----;
                      LDA.B #$3C                          ;;A22C|----/----\----;
                      STA.W !PauseTimer                   ;;A22E|----/----\----;
                      LDY.B #$12                          ;;A231|----/----\----;
                      LDA.W !PauseFlag                    ;;A233|----/----\----;
                      EOR.B #$01                          ;;A236|----/----\----;
                      STA.W !PauseFlag                    ;;A238|----/----\----;
                      BEQ +                               ;;A23B|----/----\----;
                      LDY.B #$11                          ;;A23D|----/----\----;
                    + STY.W !SPCIO0                       ;;A23F|----/----\----;
CODE_00A242:          LDA.W !PauseFlag                    ;;A242|----/----\----;
                      BEQ CODE_00A28A                     ;;A245|----/----\----;
                      BRA CODE_00A25B                     ;;A247|----/----\----;
                                                          ;;                   ;
                      BIT.W !byetudlrP2Frame              ;;A249|----/----\----; \ Unreachable 
                      BVS ADDR_00A259                     ;;A24C|----/----\----;  | Debug: Slow motion 
                      LDA.W !byetudlrP2Hold               ;;A24E|----/----\----;  | 
                      BPL CODE_00A25B                     ;;A251|----/----\----;  | 
                      LDA.B !TrueFrame                    ;;A253|----/----\----;  | 
                      AND.B #$0F                          ;;A255|----/----\----;  | 
                      BNE CODE_00A25B                     ;;A257|----/----\----;  | 
ADDR_00A259:          BRA CODE_00A28A                     ;;A259|----/----\----; / 
                                                          ;;                   ;
CODE_00A25B:          LDA.B !byetudlrHold                 ;;A25B|----/----\----;
                      AND.B #$20                          ;;A25D|----/----\----;
                      BEQ Return00A289                    ;;A25F|----/----\----;
                      LDY.W !TranslevelNo                 ;;A261|----/----\----;
                      LDA.W !OWLevelTileSettings,Y        ;;A264|----/----\----;
                      BPL Return00A289                    ;;A267|----/----\----;
                      LDA.W !OWLevelExitMode              ;;A269|----/----\----;
                      BEQ CODE_00A270                     ;;A26C|----/----\----;
                      BPL Return00A289                    ;;A26E|----/----\----;
CODE_00A270:          LDA.B #$80                          ;;A270|----/----\----;
                      BRA CODE_00A27E                     ;;A272|----/----\----;
                                                          ;;                   ;
                      LDA.B #$01                          ;;A274|----/----\----; \ Unreachable 
                      BIT.B !byetudlrHold                 ;;A276|----/----\----;  | Debug: Beat level with Start+Select 
                      BPL +                               ;;A278|----/----\----;  | 
                      INC A                               ;;A27A|----/----\----; / 
                    + STA.W !MidwayFlag                   ;;A27B|----/----\----;
CODE_00A27E:          STA.W !OWLevelExitMode              ;;A27E|----/----\----;
                      INC.W !CreditsScreenNumber          ;;A281|----/----\----;
                      LDA.B #$0B                          ;;A284|----/----\----;
                      STA.W !GameMode                     ;;A286|----/----\----;
Return00A289:         RTS                                 ;;A289|----/----\----;
                                                          ;;                   ;
CODE_00A28A:          LDA.W !IRQNMICommand                ;;A28A|----/----\----;
                      BPL +                               ;;A28D|----/----\----;
                      JSR CODE_00987D                     ;;A28F|----/----\----;
                      JMP CODE_00A2A9                     ;;A292|----/----\----;
                                                          ;;                   ;
                    + JSL !OAMResetRoutine                ;;A295|----/----\----;
                      JSL CODE_00F6DB                     ;;A299|----/----\----;
                      JSL CODE_05BC00                     ;;A29D|----/----\----;
                      JSL CODE_0586F1                     ;;A2A1|----/----\----;
                      JSL CODE_05BB39                     ;;A2A5|----/----\----;
CODE_00A2A9:          LDA.B !Layer1YPos                   ;;A2A9|----/----\----;
                      PHA                                 ;;A2AB|----/----\----;
                      LDA.B !Layer1YPos+1                 ;;A2AC|----/----\----;
                      PHA                                 ;;A2AE|----/----\----;
                      STZ.W !ScreenShakeYOffset           ;;A2AF|----/----\----; \ Reset amout to shift level 
                      STZ.W !ScreenShakeYOffset+1         ;;A2B2|----/----\----; / 
                      LDA.W !ScreenShakeTimer             ;;A2B5|----/----\----; \ If shake ground timer is set 
                      BEQ +                               ;;A2B8|----/----\----;  | 
                      DEC.W !ScreenShakeTimer             ;;A2BA|----/----\----;  | Decrement timer 
                      AND.B #$03                          ;;A2BD|----/----\----;  | 
                      TAY                                 ;;A2BF|----/----\----;  | 
                      LDA.W GrndShakeDispYLo,Y            ;;A2C0|----/----\----;  | 
                      STA.W !ScreenShakeYOffset           ;;A2C3|----/----\----;  | $1888-$1889 = Amount to shift level 
                      CLC                                 ;;A2C6|----/----\----;  | 
                      ADC.B !Layer1YPos                   ;;A2C7|----/----\----;  | 
                      STA.B !Layer1YPos                   ;;A2C9|----/----\----;  | Adjust screen boundry accordingly 
                      LDA.W GrndShakeDispYHi,Y            ;;A2CB|----/----\----;  | 
                      STA.W !ScreenShakeYOffset+1         ;;A2CE|----/----\----;  | 
                      ADC.B !Layer1YPos+1                 ;;A2D1|----/----\----;  | 
                      STA.B !Layer1YPos+1                 ;;A2D3|----/----\----; / 
                    + JSR CODE_008E1A                     ;;A2D5|----/----\----;
                      JSL CODE_00E2BD                     ;;A2D8|----/----\----;
                      JSR CODE_00A2F3                     ;;A2DC|----/----\----;
                      JSR CODE_00C47E                     ;;A2DF|----/----\----;
                      JSL CODE_01808C                     ;;A2E2|----/----\----;
                      JSL CODE_028AB1                     ;;A2E6|----/----\----;
                      PLA                                 ;;A2EA|----/----\----;
                      STA.B !Layer1YPos+1                 ;;A2EB|----/----\----;
                      PLA                                 ;;A2ED|----/----\----;
                      STA.B !Layer1YPos                   ;;A2EE|----/----\----;
                      JMP CODE_008494                     ;;A2F0|----/----\----;
                                                          ;;                   ;
CODE_00A2F3:          REP #$20                            ;;A2F3|----/----\----; Accum (16 bit) 
                      LDA.B !PlayerXPosNext               ;;A2F5|----/----\----;
                      STA.B !PlayerXPosNow                ;;A2F7|----/----\----;
                      LDA.B !PlayerYPosNext               ;;A2F9|----/----\----;
                      STA.B !PlayerYPosNow                ;;A2FB|----/----\----;
                      SEP #$20                            ;;A2FD|----/----\----; Accum (8 bit) 
                      RTS                                 ;;A2FF|----/----\----;
                                                          ;;                   ;
MarioGFXDMA:          REP #$20                            ;;A300|----/----\----; 16 bit A ; Accum (16 bit) 
                      LDX.B #$04                          ;;A302|----/----\----; We're using DMA channel 2 
                      LDY.W !PlayerGfxTileCount           ;;A304|----/----\----;
                      BEQ +                               ;;A307|----/----\----;
                      LDY.B #$86                          ;;A309|----/----\----; \ Set Address for CG-RAM Write to x86 
                      STY.W !HW_CGADD                     ;;A30B|----/----\----; / ; Address for CG-RAM Write
                      LDA.W #$2200                        ;;A30E|----/----\----;
                      STA.W !HW_DMAPARAM+$20              ;;A311|----/----\----; Parameters for DMA Transfer
                      LDA.W !PlayerPalletePtr             ;;A314|----/----\----; \ Get location of palette from $0D82-$0D83 
                      STA.W !HW_DMAADDR+$20               ;;A317|----/----\----; / ; A Address (Low Byte)
                      LDY.B #$00                          ;;A31A|----/----\----; \ Palette is stored in bank x00 
                      STY.W !HW_DMAADDR+$22               ;;A31C|----/----\----; / ; A Address Bank
                      LDA.W #$0014                        ;;A31F|----/----\----; \ x14 bytes will be transferred 
                      STA.W !HW_DMACNT+$20                ;;A322|----/----\----; / ; Number Bytes to Transfer (Low Byte) (DMA)
                      STX.W !HW_MDMAEN                    ;;A325|----/----\----; Transfer the colors ; Regular DMA Channel Enable
                    + LDY.B #$80                          ;;A328|----/----\----; \ Set VRAM Address Increment Value to x80 
                      STY.W !HW_VMAINC                    ;;A32A|----/----\----; / ; VRAM Address Increment Value
                      LDA.W #$1801                        ;;A32D|----/----\----;
                      STA.W !HW_DMAPARAM+$20              ;;A330|----/----\----; Parameters for DMA Transfer
                      LDA.W #$67F0                        ;;A333|----/----\----;
                      STA.W !HW_VMADD                     ;;A336|----/----\----; Address for VRAM Read/Write (Low Byte)
                      LDA.W !DynGfxTile7FPtr              ;;A339|----/----\----;
                      STA.W !HW_DMAADDR+$20               ;;A33C|----/----\----; A Address (Low Byte)
                      LDY.B #$7E                          ;;A33F|----/----\----; \ Set bank to x7E 
                      STY.W !HW_DMAADDR+$22               ;;A341|----/----\----; / ; A Address Bank
                      LDA.W #$0020                        ;;A344|----/----\----; \ x20 bytes will be transferred 
                      STA.W !HW_DMACNT+$20                ;;A347|----/----\----; / ; Number Bytes to Transfer (Low Byte) (DMA)
                      STX.W !HW_MDMAEN                    ;;A34A|----/----\----; Transfer ; Regular DMA Channel Enable
                      LDA.W #$6000                        ;;A34D|----/----\----; \ Set Address for VRAM Read/Write to x6000 
                      STA.W !HW_VMADD                     ;;A350|----/----\----; / ; Address for VRAM Read/Write (Low Byte)
                      LDX.B #$00                          ;;A353|----/----\----;
                    - LDA.W !DynGfxTilePtr,X              ;;A355|----/----\----; \ Get address of graphics to copy 
                      STA.W !HW_DMAADDR+$20               ;;A358|----/----\----; / ; A Address (Low Byte)
                      LDA.W #$0040                        ;;A35B|----/----\----; \ x40 bytes will be transferred 
                      STA.W !HW_DMACNT+$20                ;;A35E|----/----\----; / ; Number Bytes to Transfer (Low Byte) (DMA)
                      LDY.B #$04                          ;;A361|----/----\----; \ Transfer 
                      STY.W !HW_MDMAEN                    ;;A363|----/----\----; / ; Regular DMA Channel Enable
                      INX                                 ;;A366|----/----\----; \ Move to next address 
                      INX                                 ;;A367|----/----\----; /  
                      CPX.W !PlayerGfxTileCount           ;;A368|----/----\----; \ Repeat last segment while X<$0D84 
                      BCC -                               ;;A36B|----/----\----; /  
                      LDA.W #$6100                        ;;A36D|----/----\----; \ Set Address for VRAM Read/Write to x6100 
                      STA.W !HW_VMADD                     ;;A370|----/----\----; / ; Address for VRAM Read/Write (Low Byte)
                      LDX.B #$00                          ;;A373|----/----\----;
                    - LDA.W !DynGfxTilePtr+$0A,X          ;;A375|----/----\----; \ Get address of graphics to copy 
                      STA.W !HW_DMAADDR+$20               ;;A378|----/----\----; / ; A Address (Low Byte)
                      LDA.W #$0040                        ;;A37B|----/----\----; \ x40 bytes will be transferred 
                      STA.W !HW_DMACNT+$20                ;;A37E|----/----\----; / ; Number Bytes to Transfer (Low Byte) (DMA)
                      LDY.B #$04                          ;;A381|----/----\----; \ Transfer 
                      STY.W !HW_MDMAEN                    ;;A383|----/----\----; / ; Regular DMA Channel Enable
                      INX                                 ;;A386|----/----\----; \ Move to next address 
                      INX                                 ;;A387|----/----\----; /  
                      CPX.W !PlayerGfxTileCount           ;;A388|----/----\----; \ Repeat last segment while X<$0D84 
                      BCC -                               ;;A38B|----/----\----; /  
                      SEP #$20                            ;;A38D|----/----\----; 8 bit A ; Accum (8 bit) 
                      RTS                                 ;;A38F|----/----\----; Return 
                                                          ;;                   ;
CODE_00A390:          REP #$20                            ;;A390|----/----\----; Accum (16 bit) 
                      LDY.B #$80                          ;;A392|----/----\----;
                      STY.W !HW_VMAINC                    ;;A394|----/----\----; VRAM Address Increment Value
                      LDA.W #$1801                        ;;A397|----/----\----;
                      STA.W !HW_DMAPARAM+$20              ;;A39A|----/----\----; Parameters for DMA Transfer
                      LDY.B #$7E                          ;;A39D|----/----\----;
                      STY.W !HW_DMAADDR+$22               ;;A39F|----/----\----; A Address Bank
                      LDX.B #$04                          ;;A3A2|----/----\----;
                      LDA.W !Gfx33DestAddrC               ;;A3A4|----/----\----;
                      BEQ +                               ;;A3A7|----/----\----;
                      STA.W !HW_VMADD                     ;;A3A9|----/----\----; Address for VRAM Read/Write (Low Byte)
                      LDA.W !Gfx33SrcAddrC                ;;A3AC|----/----\----;
                      STA.W !HW_DMAADDR+$20               ;;A3AF|----/----\----; A Address (Low Byte)
                      LDA.W #$0080                        ;;A3B2|----/----\----;
                      STA.W !HW_DMACNT+$20                ;;A3B5|----/----\----; Number Bytes to Transfer (Low Byte) (DMA)
                      STX.W !HW_MDMAEN                    ;;A3B8|----/----\----; Regular DMA Channel Enable
                    + LDA.W !Gfx33DestAddrB               ;;A3BB|----/----\----;
                      BEQ +                               ;;A3BE|----/----\----;
                      STA.W !HW_VMADD                     ;;A3C0|----/----\----; Address for VRAM Read/Write (Low Byte)
                      LDA.W !Gfx33SrcAddrB                ;;A3C3|----/----\----;
                      STA.W !HW_DMAADDR+$20               ;;A3C6|----/----\----; A Address (Low Byte)
                      LDA.W #$0080                        ;;A3C9|----/----\----;
                      STA.W !HW_DMACNT+$20                ;;A3CC|----/----\----; Number Bytes to Transfer (Low Byte) (DMA)
                      STX.W !HW_MDMAEN                    ;;A3CF|----/----\----; Regular DMA Channel Enable
                    + LDA.W !Gfx33DestAddrA               ;;A3D2|----/----\----;
                      BEQ CODE_00A418                     ;;A3D5|----/----\----;
                      STA.W !HW_VMADD                     ;;A3D7|----/----\----; Address for VRAM Read/Write (Low Byte)
                      CMP.W #$0800                        ;;A3DA|----/----\----;
                      BEQ CODE_00A3F0                     ;;A3DD|----/----\----;
                      LDA.W !Gfx33SrcAddrA                ;;A3DF|----/----\----;
                      STA.W !HW_DMAADDR+$20               ;;A3E2|----/----\----; A Address (Low Byte)
                      LDA.W #$0080                        ;;A3E5|----/----\----;
                      STA.W !HW_DMACNT+$20                ;;A3E8|----/----\----; Number Bytes to Transfer (Low Byte) (DMA)
                      STX.W !HW_MDMAEN                    ;;A3EB|----/----\----; Regular DMA Channel Enable
                      BRA CODE_00A418                     ;;A3EE|----/----\----;
                                                          ;;                   ;
CODE_00A3F0:          LDA.W !Gfx33SrcAddrA                ;;A3F0|----/----\----;
                      STA.W !HW_DMAADDR+$20               ;;A3F3|----/----\----; A Address (Low Byte)
                      LDA.W #$0040                        ;;A3F6|----/----\----;
                      STA.W !HW_DMACNT+$20                ;;A3F9|----/----\----; Number Bytes to Transfer (Low Byte) (DMA)
                      STX.W !HW_MDMAEN                    ;;A3FC|----/----\----; Regular DMA Channel Enable
                      LDA.W #$0900                        ;;A3FF|----/----\----;
                      STA.W !HW_VMADD                     ;;A402|----/----\----; Address for VRAM Read/Write (Low Byte)
                      LDA.W !Gfx33SrcAddrA                ;;A405|----/----\----;
                      CLC                                 ;;A408|----/----\----;
                      ADC.W #$0040                        ;;A409|----/----\----;
                      STA.W !HW_DMAADDR+$20               ;;A40C|----/----\----; A Address (Low Byte)
                      LDA.W #$0040                        ;;A40F|----/----\----;
                      STA.W !HW_DMACNT+$20                ;;A412|----/----\----; Number Bytes to Transfer (Low Byte) (DMA)
                      STX.W !HW_MDMAEN                    ;;A415|----/----\----; Regular DMA Channel Enable
CODE_00A418:          SEP #$20                            ;;A418|----/----\----; Accum (8 bit) 
                      LDA.B #$64                          ;;A41A|----/----\----;
CODE_00A41C:          STZ.B !_0                           ;;A41C|----/----\----;
CODE_00A41E:          STA.W !HW_CGADD                     ;;A41E|----/----\----; Address for CG-RAM Write
                      LDA.B !EffFrame                     ;;A421|----/----\----;
                      AND.B #$1C                          ;;A423|----/----\----;
                      LSR A                               ;;A425|----/----\----;
                      ADC.B !_0                           ;;A426|----/----\----;
                      TAY                                 ;;A428|----/----\----;
                      LDA.W MorePalettes,Y                ;;A429|----/----\----;
                      STA.W !HW_CGDATA                    ;;A42C|----/----\----; Data for CG-RAM Write
                      LDA.W DATA_00B60D,Y                 ;;A42F|----/----\----;
                      STA.W !HW_CGDATA                    ;;A432|----/----\----; Data for CG-RAM Write
                      RTS                                 ;;A435|----/----\----;
                                                          ;;                   ;
CODE_00A436:          LDA.W !MarioStartFlag               ;;A436|----/----\----;
                      BEQ +                               ;;A439|----/----\----;
                      STZ.W !MarioStartFlag               ;;A43B|----/----\----;
                      REP #$20                            ;;A43E|----/----\----; 16 bit A ; Accum (16 bit) 
                      LDY.B #$80                          ;;A440|----/----\----;
                      STY.W !HW_VMAINC                    ;;A442|----/----\----; VRAM Address Increment Value
                      LDA.W #$64A0                        ;;A445|----/----\----;
                      STA.W !HW_VMADD                     ;;A448|----/----\----; Address for VRAM Read/Write (Low Byte)
                      LDA.W #$1801                        ;;A44B|----/----\----;
                      STA.W !HW_DMAPARAM+$20              ;;A44E|----/----\----; Parameters for DMA Transfer
                      LDA.W #$0BF6                        ;;A451|----/----\----;
                      STA.W !HW_DMAADDR+$20               ;;A454|----/----\----; A Address (Low Byte)
                      LDY.B #$00                          ;;A457|----/----\----;
                      STY.W !HW_DMAADDR+$22               ;;A459|----/----\----; A Address Bank
                      LDA.W #$00C0                        ;;A45C|----/----\----;
                      STA.W !HW_DMACNT+$20                ;;A45F|----/----\----; Number Bytes to Transfer (Low Byte) (DMA)
                      LDX.B #$04                          ;;A462|----/----\----;
                      STX.W !HW_MDMAEN                    ;;A464|----/----\----; Regular DMA Channel Enable
                      LDA.W #$65A0                        ;;A467|----/----\----;
                      STA.W !HW_VMADD                     ;;A46A|----/----\----; Address for VRAM Read/Write (Low Byte)
                      LDA.W #$0CB6                        ;;A46D|----/----\----;
                      STA.W !HW_DMAADDR+$20               ;;A470|----/----\----; A Address (Low Byte)
                      LDA.W #$00C0                        ;;A473|----/----\----;
                      STA.W !HW_DMACNT+$20                ;;A476|----/----\----; Number Bytes to Transfer (Low Byte) (DMA)
                      STX.W !HW_MDMAEN                    ;;A479|----/----\----; Regular DMA Channel Enable
                      SEP #$20                            ;;A47C|----/----\----; 8 bit A ; Accum (8 bit) 
                    + RTS                                 ;;A47E|----/----\----;
                                                          ;;                   ;
                                                          ;;                   ;
DATA_00A47F:          db $82                              ;;A47F|----/----\----;
                                                          ;;                   ;
DATA_00A480:          db $06                              ;;A480|----/----\----;
                                                          ;;                   ;
DATA_00A481:          db $00,$05,$09,$00,$03,$07,$00      ;;A481|----/----\----;
                                                          ;;                   ;
CODE_00A488:          LDY.W !PaletteIndexTable            ;;A488|----/----\----;
                      LDX.W DATA_00A481,Y                 ;;A48B|----/----\----;
                      STX.B !_2                           ;;A48E|----/----\----;
                      STZ.B !_1                           ;;A490|----/----\----;
                      STZ.B !_0                           ;;A492|----/----\----;
                      STZ.B !_4                           ;;A494|----/----\----;
                      LDA.W DATA_00A480,Y                 ;;A496|----/----\----;
                      XBA                                 ;;A499|----/----\----;
                      LDA.W DATA_00A47F,Y                 ;;A49A|----/----\----;
                      REP #$10                            ;;A49D|----/----\----; Index (16 bit) 
                      TAY                                 ;;A49F|----/----\----;
CODE_00A4A0:          LDA.B [!_0],Y                       ;;A4A0|----/----\----;
                      BEQ CODE_00A4CF                     ;;A4A2|----/----\----;
                      STX.W !HW_DMAADDR+$22               ;;A4A4|----/----\----; A Address Bank
                      STA.W !HW_DMACNT+$20                ;;A4A7|----/----\----; Number Bytes to Transfer (Low Byte) (DMA)
                      STA.B !_3                           ;;A4AA|----/----\----;
                      STZ.W !HW_DMACNT+$21                ;;A4AC|----/----\----; Number Bytes to Transfer (High Byte) (DMA)
                      INY                                 ;;A4AF|----/----\----;
                      LDA.B [!_0],Y                       ;;A4B0|----/----\----;
                      STA.W !HW_CGADD                     ;;A4B2|----/----\----; Address for CG-RAM Write
                      REP #$20                            ;;A4B5|----/----\----; Accum (16 bit) 
                      LDA.W #$2200                        ;;A4B7|----/----\----;
                      STA.W !HW_DMAPARAM+$20              ;;A4BA|----/----\----; Parameters for DMA Transfer
                      INY                                 ;;A4BD|----/----\----;
                      TYA                                 ;;A4BE|----/----\----;
                      STA.W !HW_DMAADDR+$20               ;;A4BF|----/----\----; A Address (Low Byte)
                      CLC                                 ;;A4C2|----/----\----;
                      ADC.B !_3                           ;;A4C3|----/----\----;
                      TAY                                 ;;A4C5|----/----\----;
                      SEP #$20                            ;;A4C6|----/----\----; Accum (8 bit) 
                      LDA.B #$04                          ;;A4C8|----/----\----;
                      STA.W !HW_MDMAEN                    ;;A4CA|----/----\----; Regular DMA Channel Enable
                      BRA CODE_00A4A0                     ;;A4CD|----/----\----;
                                                          ;;                   ;
CODE_00A4CF:          SEP #$10                            ;;A4CF|----/----\----; Index (8 bit) 
                      JSR CODE_00AE47                     ;;A4D1|----/----\----;
                      LDA.W !PaletteIndexTable            ;;A4D4|----/----\----;
                      BNE +                               ;;A4D7|----/----\----;
                      STZ.W !DynPaletteIndex              ;;A4D9|----/----\----;
                      STZ.W !DynPaletteTable              ;;A4DC|----/----\----;
                    + STZ.W !PaletteIndexTable            ;;A4DF|----/----\----;
                    - RTS                                 ;;A4E2|----/----\----;
                                                          ;;                   ;
CODE_00A4E3:          REP #$10                            ;;A4E3|----/----\----; Index (16 bit) 
                      LDA.B #$80                          ;;A4E5|----/----\----;
                      STA.W !HW_VMAINC                    ;;A4E7|----/----\----; VRAM Address Increment Value
                      LDY.W #$0750                        ;;A4EA|----/----\----;
                      STY.W !HW_VMADD                     ;;A4ED|----/----\----; Address for VRAM Read/Write (Low Byte)
                      LDY.W #$1801                        ;;A4F0|----/----\----;
                      STY.W !HW_DMAPARAM+$20              ;;A4F3|----/----\----; Parameters for DMA Transfer
                      LDY.W #$0AF6                        ;;A4F6|----/----\----;
                      STY.W !HW_DMAADDR+$20               ;;A4F9|----/----\----; A Address (Low Byte)
                      STZ.W !HW_DMAADDR+$22               ;;A4FC|----/----\----; A Address Bank
                      LDY.W #$0160                        ;;A4FF|----/----\----;
                      STY.W !HW_DMACNT+$20                ;;A502|----/----\----; Number Bytes to Transfer (Low Byte) (DMA)
                      LDA.B #$04                          ;;A505|----/----\----;
                      STA.W !HW_MDMAEN                    ;;A507|----/----\----; Regular DMA Channel Enable
                      SEP #$10                            ;;A50A|----/----\----; Index (8 bit) 
                      LDA.W !OverworldProcess             ;;A50C|----/----\----;
                      CMP.B #$0A                          ;;A50F|----/----\----;
                      BEQ -                               ;;A511|----/----\----;
                      LDA.B #$6D                          ;;A513|----/----\----;
                      JSR CODE_00A41C                     ;;A515|----/----\----;
                      LDA.B #$10                          ;;A518|----/----\----;
                      STA.B !_0                           ;;A51A|----/----\----;
                      LDA.B #$7D                          ;;A51C|----/----\----;
                      JMP CODE_00A41E                     ;;A51E|----/----\----;
                                                          ;;                   ;
                                                          ;;                   ;
DATA_00A521:          db $00,$04,$08,$0C                  ;;A521|----/----\----;
                                                          ;;                   ;
DATA_00A525:          db $00,$08,$10,$18                  ;;A525|----/----\----;
                                                          ;;                   ;
CODE_00A529:          LDA.B #$80                          ;;A529|----/----\----;
                      STA.W !HW_VMAINC                    ;;A52B|----/----\----; VRAM Address Increment Value
                      STZ.W !HW_VMADD                     ;;A52E|----/----\----; Address for VRAM Read/Write (Low Byte)
                      LDA.B #$30                          ;;A531|----/----\----;
                      CLC                                 ;;A533|----/----\----;
                      ADC.W DATA_00A521,Y                 ;;A534|----/----\----;
                      STA.W !HW_VMADD+1                   ;;A537|----/----\----; Address for VRAM Read/Write (High Byte)
                      LDX.B #$06                          ;;A53A|----/----\----;
                    - LDA.W DATA_00A586,X                 ;;A53C|----/----\----;
                      STA.W !HW_DMAPARAM+$10,X            ;;A53F|----/----\----;
                      DEX                                 ;;A542|----/----\----;
                      BPL -                               ;;A543|----/----\----;
                      LDA.W !PlayerTurnOW                 ;;A545|----/----\----;
                      LSR A                               ;;A548|----/----\----;
                      LSR A                               ;;A549|----/----\----;
                      TAX                                 ;;A54A|----/----\----;
                      LDA.W !OWPlayerSubmap,X             ;;A54B|----/----\----;
                      BEQ +                               ;;A54E|----/----\----;
                      LDA.B #$60                          ;;A550|----/----\----;
                      STA.W !HW_DMAADDR+$11               ;;A552|----/----\----; A Address (High Byte)
                    + LDA.W !HW_DMAADDR+$11               ;;A555|----/----\----; A Address (High Byte)
                      CLC                                 ;;A558|----/----\----;
                      ADC.W DATA_00A525,Y                 ;;A559|----/----\----;
                      STA.W !HW_DMAADDR+$11               ;;A55C|----/----\----; A Address (High Byte)
                      LDA.B #$02                          ;;A55F|----/----\----;
                      STA.W !HW_MDMAEN                    ;;A561|----/----\----; Regular DMA Channel Enable
                      LDA.B #$80                          ;;A564|----/----\----;
                      STA.W !HW_VMAINC                    ;;A566|----/----\----; VRAM Address Increment Value
                      STZ.W !HW_VMADD                     ;;A569|----/----\----; Address for VRAM Read/Write (Low Byte)
                      LDA.B #$20                          ;;A56C|----/----\----;
                      CLC                                 ;;A56E|----/----\----;
                      ADC.W DATA_00A521,Y                 ;;A56F|----/----\----;
                      STA.W !HW_VMADD+1                   ;;A572|----/----\----; Address for VRAM Read/Write (High Byte)
                      LDX.B #$06                          ;;A575|----/----\----;
                    - LDA.W DATA_00A58D,X                 ;;A577|----/----\----;
                      STA.W !HW_DMAPARAM+$10,X            ;;A57A|----/----\----;
                      DEX                                 ;;A57D|----/----\----;
                      BPL -                               ;;A57E|----/----\----;
                      LDA.B #$02                          ;;A580|----/----\----;
                      STA.W !HW_MDMAEN                    ;;A582|----/----\----; Regular DMA Channel Enable
                      RTS                                 ;;A585|----/----\----;
                                                          ;;                   ;
                                                          ;;                   ;
DATA_00A586:          db $01,$18,$00,$40,$7F,$00,$08      ;;A586|----/----\----;
                                                          ;;                   ;
DATA_00A58D:          db $01,$18,$00,$E4,$7E,$00,$08      ;;A58D|----/----\----;
                                                          ;;                   ;
CODE_00A594:          PHB                                 ;;A594|----/----\----; Wrapper 
                      PHK                                 ;;A595|----/----\----;
                      PLB                                 ;;A596|----/----\----;
                      JSR CODE_00AD25                     ;;A597|----/----\----;
                      PLB                                 ;;A59A|----/----\----;
                      RTL                                 ;;A59B|----/----\----;
                                                          ;;                   ;
GM04Load:             JSR CODE_0085FA                     ;;A59C|----/----\----; gah, stupid keyboard >_< 
                      JSR NoButtons                       ;;A59F|----/----\----;
                      STZ.W !UploadMarioStart             ;;A5A2|----/----\----;
                      JSR SetUpScreen                     ;;A5A5|----/----\----;
                      JSR GM04DoDMA                       ;;A5A8|----/----\----;
                      JSL CODE_05809E                     ;;A5AB|----/----\----; ->here 
                      LDA.W !IRQNMICommand                ;;A5AF|----/----\----;
                      BPL CODE_00A5B9                     ;;A5B2|----/----\----;
                      JSR CODE_0097BC                     ;;A5B4|----/----\----; Working on this routine 
                      BRA +                               ;;A5B7|----/----\----;
                                                          ;;                   ;
CODE_00A5B9:          JSR UploadSpriteGFX                 ;;A5B9|----/----\----;
                      JSR LoadPalette                     ;;A5BC|----/----\----;
                      JSL CODE_05BE8A                     ;;A5BF|----/----\----;
                      JSR CODE_009FB8                     ;;A5C3|----/----\----;
                      JSR CODE_00A5F9                     ;;A5C6|----/----\----;
                      JSR CODE_009260                     ;;A5C9|----/----\----;
                      JSR CODE_009860                     ;;A5CC|----/----\----;
                    + JSR CODE_00922F                     ;;A5CF|----/----\----;
                      JSR KeepModeActive                  ;;A5D2|----/----\----;
                      JSR CODE_008E1A                     ;;A5D5|----/----\----;
                      REP #$30                            ;;A5D8|----/----\----; Index (16 bit) Accum (16 bit) 
                      PHB                                 ;;A5DA|----/----\----;
                      LDX.W #$0703                        ;;A5DB|----/----\----;
                      LDY.W #$0905                        ;;A5DE|----/----\----;
                      LDA.W #$01EF                        ;;A5E1|----/----\----;
                      MVN !_0,$00                         ;;A5E4|----/----\----;
                      PLB                                 ;;A5E7|----/----\----;
                      LDX.W !BackgroundColor              ;;A5E8|----/----\----;
                      STX.W !CopyBGColor                  ;;A5EB|----/----\----;
                      SEP #$30                            ;;A5EE|----/----\----; Index (8 bit) Accum (8 bit) 
                      JSR CODE_00919B                     ;;A5F0|----/----\----;
                      JSR CODE_008494                     ;;A5F3|----/----\----;
                      JMP CODE_0093F4                     ;;A5F6|----/----\----;
                                                          ;;                   ;
CODE_00A5F9:          LDA.B #$E7                          ;;A5F9|----/----\----;
                      TRB.B !EffFrame                     ;;A5FB|----/----\----;
                    - JSL CODE_05BB39                     ;;A5FD|----/----\----;
                      JSR CODE_00A390                     ;;A601|----/----\----;
                      INC.B !EffFrame                     ;;A604|----/----\----;
                      LDA.B !EffFrame                     ;;A606|----/----\----;
                      AND.B #$07                          ;;A608|----/----\----;
                      BNE -                               ;;A60A|----/----\----;
                      RTS                                 ;;A60C|----/----\----;
                                                          ;;                   ;
                                                          ;;                   ;
DATA_00A60D:          db $00,$01,$01,$01                  ;;A60D|----/----\----;
                                                          ;;                   ;
DATA_00A611:          db $0D,$00,$F3,$FF,$FE,$FF,$FE,$FF  ;;A611|----/----\----;
                      db $00,$00,$00,$00                  ;;A619|----/----\----;
                                                          ;;                   ;
DATA_00A61D:          db $0A,$00,$00,$00,$1A,$1A,$0A,$0A  ;;A61D|----/----\----;
DATA_00A625:          db $00,$80,$40,$00,$01,$02,$40,$00  ;;A625|----/----\----;
                      db $40,$00,$00,$00,$00,$02,$00,$00  ;;A62D|----/----\----;
                                                          ;;                   ;
CODE_00A635:          LDA.W !BluePSwitchTimer             ;;A635|----/----\----; If blue pow... 
                      ORA.W !SilverPSwitchTimer           ;;A638|----/----\----; ...or silver pow... 
                      ORA.W !DirectCoinTimer              ;;A63B|----/----\----;
                      BNE CODE_00A64A                     ;;A63E|----/----\----;
                      LDA.W !InvinsibilityTimer           ;;A640|----/----\----; \ Branch if Mario doesn't have star 
                      BEQ CODE_00A660                     ;;A643|----/----\----; / 
                      LDA.W !MusicBackup                  ;;A645|----/----\----;
                      BPL +                               ;;A648|----/----\----;
CODE_00A64A:          LDA.W !MusicBackup                  ;;A64A|----/----\----;
                      AND.B #$7F                          ;;A64D|----/----\----;
                    + ORA.B #$40                          ;;A64F|----/----\----;
                      STA.W !MusicBackup                  ;;A651|----/----\----;
                      STZ.W !BluePSwitchTimer             ;;A654|----/----\----; Zero out POW timer 
                      STZ.W !SilverPSwitchTimer           ;;A657|----/----\----; Zero out silver POW timer 
                      STZ.W !DirectCoinTimer              ;;A65A|----/----\----;
                      STZ.W !InvinsibilityTimer           ;;A65D|----/----\----; Zero out star timer 
CODE_00A660:          LDA.W !BonusRoomBlocks              ;;A660|----/----\----;
                      ORA.W !BonusRoomBlocks+1            ;;A663|----/----\----;
                      ORA.W !BonusRoomBlocks+2            ;;A666|----/----\----;
                      ORA.W !BonusRoomBlocks+3            ;;A669|----/----\----;
                      ORA.W !BonusRoomBlocks+4            ;;A66C|----/----\----;
                      BEQ +                               ;;A66F|----/----\----;
                      STA.W !DidPlayBonusGame             ;;A671|----/----\----;
                    + LDX.B #$23                          ;;A674|----/----\----;
                    - STZ.B !Map16HighPtr+2,X             ;;A676|----/----\----;
                      DEX                                 ;;A678|----/----\----;
                      BNE -                               ;;A679|----/----\----;
                      LDX.B #$37                          ;;A67B|----/----\----;
                    - STZ.W !OverworldProcess,X           ;;A67D|----/----\----;
                      DEX                                 ;;A680|----/----\----;
                      BNE -                               ;;A681|----/----\----;
                      ASL.W !UnusedStarCounter            ;;A683|----/----\----;
                      STZ.W !KickingTimer                 ;;A686|----/----\----;
                      STZ.W !PickUpItemTimer              ;;A689|----/----\----;
                      STZ.W !ColorFadeTimer               ;;A68C|----/----\----;
                      STZ.W !YoshiInPipeSetting           ;;A68F|----/----\----;
                      LDY.B #$01                          ;;A692|----/----\----;
                      LDX.W !ObjectTileset                ;;A694|----/----\----;
                      CPX.B #$10                          ;;A697|----/----\----;
                      BCS CODE_00A6CC                     ;;A699|----/----\----;
                      LDA.W DATA_00A625,X                 ;;A69B|----/----\----;
                      LSR A                               ;;A69E|----/----\----;
                      BEQ CODE_00A6CC                     ;;A69F|----/----\----;
                      LDA.W !ShowMarioStart               ;;A6A1|----/----\----;
                      ORA.W !SublevelCount                ;;A6A4|----/----\----;
                      ORA.W !DisableNoYoshiIntro          ;;A6A7|----/----\----;
                      BNE CODE_00A6CC                     ;;A6AA|----/----\----;
                      LDA.W !SkipMidwayCastleIntro        ;;A6AC|----/----\----;
                      BEQ CODE_00A6B6                     ;;A6AF|----/----\----;
                      JSR CODE_00C90A                     ;;A6B1|----/----\----;
                      BRA CODE_00A6CC                     ;;A6B4|----/----\----;
                                                          ;;                   ;
CODE_00A6B6:          STZ.B !PlayerInAir                  ;;A6B6|----/----\----;
                      STY.B !PlayerDirection              ;;A6B8|----/----\----;
                      STY.B !PlayerPipeAction             ;;A6BA|----/----\----;
                      LDX.B #$0A                          ;;A6BC|----/----\----;
                      LDY.B #$00                          ;;A6BE|----/----\----;
                      LDA.W !CarryYoshiThruLvls           ;;A6C0|----/----\----;
                      BEQ CODE_00A6C7                     ;;A6C3|----/----\----;
                      LDY.B #$0F                          ;;A6C5|----/----\----;
CODE_00A6C7:          STX.B !PlayerAnimation              ;;A6C7|----/----\----;
                      STY.B !PipeTimer                    ;;A6C9|----/----\----;
                      RTS                                 ;;A6CB|----/----\----;
                                                          ;;                   ;
CODE_00A6CC:          LDA.B !Layer1YPos                   ;;A6CC|----/----\----;
                      CMP.B #$C0                          ;;A6CE|----/----\----;
                      BEQ +                               ;;A6D0|----/----\----;
                      INC.W !VerticalScrollEnabled        ;;A6D2|----/----\----;
                    + LDA.W !LevelEntranceType            ;;A6D5|----/----\----;
                      BEQ CODE_00A6E0                     ;;A6D8|----/----\----;
                      CMP.B #$05                          ;;A6DA|----/----\----;
                      BNE CODE_00A716                     ;;A6DC|----/----\----;
                      ROR.B !LevelIsSlippery              ;;A6DE|----/----\----;
CODE_00A6E0:          STY.B !PlayerDirection              ;;A6E0|----/----\----;
                      LDA.B #$24                          ;;A6E2|----/----\----;
                      STA.B !PlayerInAir                  ;;A6E4|----/----\----;
                      STZ.B !SpriteLock                   ;;A6E6|----/----\----;
                      LDA.W !KeyholeTimer                 ;;A6E8|----/----\----;
                      BEQ +                               ;;A6EB|----/----\----;
                      LDA.W !MusicBackup                  ;;A6ED|----/----\----;
                      ORA.B #$7F                          ;;A6F0|----/----\----;
                      STA.W !MusicBackup                  ;;A6F2|----/----\----;
                      LDA.B !PlayerXPosNext               ;;A6F5|----/----\----;
                      ORA.B #$04                          ;;A6F7|----/----\----;
                      STA.W !KeyholeXPos                  ;;A6F9|----/----\----;
                      LDA.B !PlayerYPosNext               ;;A6FC|----/----\----;
                      CLC                                 ;;A6FE|----/----\----;
                      ADC.B #$10                          ;;A6FF|----/----\----;
                      STA.W !KeyholeYPos                  ;;A701|----/----\----;
                    + LDA.W !YoshiHeavenFlag              ;;A704|----/----\----;
                      BEQ +                               ;;A707|----/----\----;
                      LDA.B #$08                          ;;A709|----/----\----; \ Animation = Rise off screen, 
                      STA.B !PlayerAnimation              ;;A70B|----/----\----; / for Yoshi Wing bonus stage 
                      LDA.B #$A0                          ;;A70D|----/----\----;
                      STA.B !PlayerYPosNext               ;;A70F|----/----\----;
                      LDA.B #$90                          ;;A711|----/----\----; \ Set upward speed, #$90 
                      STA.B !PlayerYSpeed                 ;;A713|----/----\----; / 
                    + RTS                                 ;;A715|----/----\----;
                                                          ;;                   ;
CODE_00A716:          CMP.B #$06                          ;;A716|----/----\----;
                      BCC CODE_00A740                     ;;A718|----/----\----;
                      BNE CODE_00A734                     ;;A71A|----/----\----;
                      STY.B !PlayerDirection              ;;A71C|----/----\----;
                      STY.W !PlayerCapePose               ;;A71E|----/----\----;
                      LDA.B #$FF                          ;;A721|----/----\----;
                      STA.W !YoshiInPipeSetting           ;;A723|----/----\----;
                      LDA.B #$08                          ;;A726|----/----\----;
                      TSB.B !PlayerXPosNext               ;;A728|----/----\----;
                      LDA.B #$02                          ;;A72A|----/----\----;
                      TSB.B !PlayerYPosNext               ;;A72C|----/----\----;
                      LDX.B #$07                          ;;A72E|----/----\----;
                      LDY.B #$20                          ;;A730|----/----\----;
                      BRA CODE_00A6C7                     ;;A732|----/----\----;
                                                          ;;                   ;
CODE_00A734:          STY.B !LevelIsWater                 ;;A734|----/----\----;
                      LDA.W !SkipMidwayCastleIntro        ;;A736|----/----\----;
                      ORA.W !KeyholeTimer                 ;;A739|----/----\----;
                      BNE CODE_00A6E0                     ;;A73C|----/----\----;
                      LDA.B #$04                          ;;A73E|----/----\----;
CODE_00A740:          CLC                                 ;;A740|----/----\----;
                      ADC.B #$03                          ;;A741|----/----\----;
                      STA.B !PlayerPipeAction             ;;A743|----/----\----;
                      TAY                                 ;;A745|----/----\----;
                      LSR A                               ;;A746|----/----\----;
                      DEC A                               ;;A747|----/----\----;
                      STA.W !YoshiInPipeSetting           ;;A748|----/----\----;
                      LDA.W DATA_00A60D-4,Y               ;;A74B|----/----\----;
                      STA.B !PlayerDirection              ;;A74E|----/----\----;
                      LDX.B #$05                          ;;A750|----/----\----;
                      CPY.B #$06                          ;;A752|----/----\----;
                      BCC CODE_00A768                     ;;A754|----/----\----;
                      LDA.B #$08                          ;;A756|----/----\----;
                      TSB.B !PlayerXPosNext               ;;A758|----/----\----;
                      LDX.B #$06                          ;;A75A|----/----\----;
                      CPY.B #$07                          ;;A75C|----/----\----;
                      LDY.B #$1E                          ;;A75E|----/----\----;
                      BCC +                               ;;A760|----/----\----;
                      LDY.B #$0F                          ;;A762|----/----\----;
                      LDA.B !Powerup                      ;;A764|----/----\----;
                      BEQ +                               ;;A766|----/----\----;
CODE_00A768:          LDY.B #$1C                          ;;A768|----/----\----; \ Set downward speed, #$1C 
                    + STY.B !PlayerYSpeed                 ;;A76A|----/----\----; / 
                      JSR CODE_00A6C7                     ;;A76C|----/----\----;
                      LDA.W !PlayerRidingYoshi            ;;A76F|----/----\----;
                      BEQ +                               ;;A772|----/----\----;
                      LDX.B !PlayerPipeAction             ;;A774|----/----\----;
                      LDA.B !PipeTimer                    ;;A776|----/----\----;
                      CLC                                 ;;A778|----/----\----;
                      ADC.W DATA_00A61D,X                 ;;A779|----/----\----;
                      STA.B !PipeTimer                    ;;A77C|----/----\----;
                      TXA                                 ;;A77E|----/----\----;
                      ASL A                               ;;A77F|----/----\----;
                      TAX                                 ;;A780|----/----\----;
                      REP #$20                            ;;A781|----/----\----; Accum (16 bit) 
                      LDA.B !PlayerXPosNext               ;;A783|----/----\----;
                      CLC                                 ;;A785|----/----\----;
                      ADC.W DATA_00A60D-4,X               ;;A786|----/----\----;
                      STA.B !PlayerXPosNext               ;;A789|----/----\----;
                      LDA.B !PlayerYPosNext               ;;A78B|----/----\----;
                      CLC                                 ;;A78D|----/----\----;
                      ADC.W DATA_00A611,X                 ;;A78E|----/----\----;
                      STA.B !PlayerYPosNext               ;;A791|----/----\----;
                      SEP #$20                            ;;A793|----/----\----; Accum (8 bit) 
                    + RTS                                 ;;A795|----/----\----;
                                                          ;;                   ;
CODE_00A796:          REP #$20                            ;;A796|----/----\----; Accum (16 bit) 
                      LDY.W !VertLayer2Setting            ;;A798|----/----\----;
                      BEQ CODE_00A7B9                     ;;A79B|----/----\----;
                      DEY                                 ;;A79D|----/----\----;
                      BNE CODE_00A7A7                     ;;A79E|----/----\----;
                      LDA.B !Layer2YPos                   ;;A7A0|----/----\----;
                      SEC                                 ;;A7A2|----/----\----;
                      SBC.B !Layer1YPos                   ;;A7A3|----/----\----;
                      BRA CODE_00A7B6                     ;;A7A5|----/----\----;
                                                          ;;                   ;
CODE_00A7A7:          LDA.B !Layer1YPos                   ;;A7A7|----/----\----;
                      LSR A                               ;;A7A9|----/----\----;
                      DEY                                 ;;A7AA|----/----\----;
                      BEQ +                               ;;A7AB|----/----\----;
                      LSR A                               ;;A7AD|----/----\----;
                      LSR A                               ;;A7AE|----/----\----;
                    + EOR.W #$FFFF                        ;;A7AF|----/----\----;
                      INC A                               ;;A7B2|----/----\----;
                      CLC                                 ;;A7B3|----/----\----;
                      ADC.B !Layer2YPos                   ;;A7B4|----/----\----;
CODE_00A7B6:          STA.W !BackgroundVertOffset         ;;A7B6|----/----\----;
CODE_00A7B9:          LDA.W #$0080                        ;;A7B9|----/----\----;
                      STA.W !CameraMoveTrigger            ;;A7BC|----/----\----;
                      SEP #$20                            ;;A7BF|----/----\----; Accum (8 bit) 
                      RTS                                 ;;A7C1|----/----\----;
                                                          ;;                   ;
CODE_00A7C2:          REP #$20                            ;;A7C2|----/----\----; 16 bit A ; Accum (16 bit) 
                      LDX.B #$80                          ;;A7C4|----/----\----;
                      STX.W !HW_VMAINC                    ;;A7C6|----/----\----; VRAM Address Increment Value
                      LDA.W #$6000                        ;;A7C9|----/----\----;
                      STA.W !HW_VMADD                     ;;A7CC|----/----\----; Address for VRAM Read/Write (Low Byte)
                      LDA.W #$1801                        ;;A7CF|----/----\----;
                      STA.W !HW_DMAPARAM+$20              ;;A7D2|----/----\----; Parameters for DMA Transfer
                      LDA.W #$977B                        ;;A7D5|----/----\----;
                      STA.W !HW_DMAADDR+$20               ;;A7D8|----/----\----; A Address (Low Byte)
                      LDX.B #$7F                          ;;A7DB|----/----\----;
                      STX.W !HW_DMAADDR+$22               ;;A7DD|----/----\----; A Address Bank
                      LDA.W #$00C0                        ;;A7E0|----/----\----;
                      STA.W !HW_DMACNT+$20                ;;A7E3|----/----\----; Number Bytes to Transfer (Low Byte) (DMA)
                      LDX.B #$04                          ;;A7E6|----/----\----;
                      STX.W !HW_MDMAEN                    ;;A7E8|----/----\----; Regular DMA Channel Enable
                      LDA.W #$6100                        ;;A7EB|----/----\----;
                      STA.W !HW_VMADD                     ;;A7EE|----/----\----; Address for VRAM Read/Write (Low Byte)
                      LDA.W #$983B                        ;;A7F1|----/----\----;
                      STA.W !HW_DMAADDR+$20               ;;A7F4|----/----\----; A Address (Low Byte)
                      LDA.W #$00C0                        ;;A7F7|----/----\----;
                      STA.W !HW_DMACNT+$20                ;;A7FA|----/----\----; Number Bytes to Transfer (Low Byte) (DMA)
                      STX.W !HW_MDMAEN                    ;;A7FD|----/----\----; Regular DMA Channel Enable
                      LDA.W #$64A0                        ;;A800|----/----\----;
                      STA.W !HW_VMADD                     ;;A803|----/----\----; Address for VRAM Read/Write (Low Byte)
                      LDA.W #$98FB                        ;;A806|----/----\----;
                      STA.W !HW_DMAADDR+$20               ;;A809|----/----\----; A Address (Low Byte)
                      LDA.W #$00C0                        ;;A80C|----/----\----;
                      STA.W !HW_DMACNT+$20                ;;A80F|----/----\----; Number Bytes to Transfer (Low Byte) (DMA)
                      STX.W !HW_MDMAEN                    ;;A812|----/----\----; Regular DMA Channel Enable
                      LDA.W #$65A0                        ;;A815|----/----\----;
                      STA.W !HW_VMADD                     ;;A818|----/----\----; Address for VRAM Read/Write (Low Byte)
                      LDA.W #$99BB                        ;;A81B|----/----\----;
                      STA.W !HW_DMAADDR+$20               ;;A81E|----/----\----; A Address (Low Byte)
                      LDA.W #$00C0                        ;;A821|----/----\----;
                      STA.W !HW_DMACNT+$20                ;;A824|----/----\----; Number Bytes to Transfer (Low Byte) (DMA)
                      STX.W !HW_MDMAEN                    ;;A827|----/----\----; Regular DMA Channel Enable
                      SEP #$20                            ;;A82A|----/----\----; 8 bit A ; Accum (8 bit) 
                      RTS                                 ;;A82C|----/----\----;
                                                          ;;                   ;
CODE_00A82D:          LDY.B #$0F                          ;;A82D|----/----\----;
                      JSL CODE_00BA28                     ;;A82F|----/----\----;
                      LDA.W !BonusGameActivate            ;;A833|----/----\----;
                      REP #$30                            ;;A836|----/----\----; Index (16 bit) Accum (16 bit) 
                      BEQ +                               ;;A838|----/----\----;
                      LDA.B !_0                           ;;A83A|----/----\----;
                      CLC                                 ;;A83C|----/----\----;
                      ADC.W #$0030                        ;;A83D|----/----\----;
                      STA.B !_0                           ;;A840|----/----\----;
                    + LDX.W #$0000                        ;;A842|----/----\----;
CODE_00A845:          LDY.W #$0008                        ;;A845|----/----\----;
                    - LDA.B [!_0]                         ;;A848|----/----\----;
                      STA.L !MarioStartGraphics,X         ;;A84A|----/----\----;
                      INX                                 ;;A84E|----/----\----;
                      INX                                 ;;A84F|----/----\----;
                      INC.B !_0                           ;;A850|----/----\----;
                      INC.B !_0                           ;;A852|----/----\----;
                      DEY                                 ;;A854|----/----\----;
                      BNE -                               ;;A855|----/----\----;
                      LDY.W #$0008                        ;;A857|----/----\----;
                    - LDA.B [!_0]                         ;;A85A|----/----\----;
                      AND.W #$00FF                        ;;A85C|----/----\----;
                      STA.L !MarioStartGraphics,X         ;;A85F|----/----\----;
                      INX                                 ;;A863|----/----\----;
                      INX                                 ;;A864|----/----\----;
                      INC.B !_0                           ;;A865|----/----\----;
                      DEY                                 ;;A867|----/----\----;
                      BNE -                               ;;A868|----/----\----;
                      CPX.W #$0300                        ;;A86A|----/----\----;
                      BCC CODE_00A845                     ;;A86D|----/----\----;
                      SEP #$30                            ;;A86F|----/----\----; Index (8 bit) Accum (8 bit) 
                      LDY.B #$00                          ;;A871|----/----\----;
                      JSL CODE_00BA28                     ;;A873|----/----\----;
                      REP #$30                            ;;A877|----/----\----; Index (16 bit) Accum (16 bit) 
                      LDA.W #$B3F0                        ;;A879|----/----\----;
                      STA.B !_0                           ;;A87C|----/----\----;
                      LDA.W #$7EB3                        ;;A87E|----/----\----;
                      STA.B !_1                           ;;A881|----/----\----;
                      LDX.W #$0000                        ;;A883|----/----\----;
CODE_00A886:          LDY.W #$0008                        ;;A886|----/----\----;
                    - LDA.B [!_0]                         ;;A889|----/----\----;
                      STA.W !GfxDecompSP1,X               ;;A88B|----/----\----;
                      INX                                 ;;A88E|----/----\----;
                      INX                                 ;;A88F|----/----\----;
                      INC.B !_0                           ;;A890|----/----\----;
                      INC.B !_0                           ;;A892|----/----\----;
                      DEY                                 ;;A894|----/----\----;
                      BNE -                               ;;A895|----/----\----;
                      LDY.W #$0008                        ;;A897|----/----\----;
                    - LDA.B [!_0]                         ;;A89A|----/----\----;
                      AND.W #$00FF                        ;;A89C|----/----\----;
                      STA.W !GfxDecompSP1,X               ;;A89F|----/----\----;
                      INX                                 ;;A8A2|----/----\----;
                      INX                                 ;;A8A3|----/----\----;
                      INC.B !_0                           ;;A8A4|----/----\----;
                      DEY                                 ;;A8A6|----/----\----;
                      BNE -                               ;;A8A7|----/----\----;
                      CPX.W #$00C0                        ;;A8A9|----/----\----;
                      BNE +                               ;;A8AC|----/----\----;
                      LDA.W #$B570                        ;;A8AE|----/----\----;
                      STA.B !_0                           ;;A8B1|----/----\----;
                    + CPX.W #$0180                        ;;A8B3|----/----\----;
                      BCC CODE_00A886                     ;;A8B6|----/----\----;
                      SEP #$30                            ;;A8B8|----/----\----; Index (8 bit) Accum (8 bit) 
                      LDA.B #$01                          ;;A8BA|----/----\----;
                      STA.W !UploadMarioStart             ;;A8BC|----/----\----;
                      STA.W !MarioStartFlag               ;;A8BF|----/----\----;
                      RTS                                 ;;A8C2|----/----\----;
                                                          ;;                   ;
                                                          ;;                   ;
SPRITEGFXLIST:        db $00,$01,$13,$02,$00,$01,$12,$03  ;;A8C3|----/----\----; Forest ; Castle 
                      db $00,$01,$13,$05,$00,$01,$13,$04  ;;A8CB|----/----\----; Mushroom ; Underground 
                      db $00,$01,$13,$06,$00,$01,$13,$09  ;;A8D3|----/----\----; Water ; Pokey 
                      db $00,$01,$13,$04,$00,$01,$06,$11  ;;A8DB|----/----\----; Underground 2 ; Ghost House 
                      db $00,$01,$13,$20,$00,$01,$13,$0F  ;;A8E3|----/----\----; Banzai Bill ; Yoshi's House 
                      db $00,$01,$13,$23,$00,$01,$0D,$14  ;;A8EB|----/----\----; Dino-Rhino ; Switch Palace 
                      db $00,$01,$24,$0E,$00,$01,$0A,$22  ;;A8F3|----/----\----; Mechakoopa ; Wendy/Lemmy 
                      db $00,$01,$13,$0E,$00,$01,$13,$14  ;;A8FB|----/----\----; Ninji ; Unused 
                      db $00,$00,$00,$08,$10,$0F,$1C,$1D  ;;A903|----/----\----;
                      db $00,$01,$24,$22,$00,$01,$25,$22  ;;A90B|----/----\----;
                      db $00,$22,$13,$2D,$00,$01,$0F,$22  ;;A913|----/----\----;
                      db $00,$26,$2E,$22,$21,$0B,$25,$0A  ;;A91B|----/----\----;
                      db $00,$0D,$24,$22,$2C,$30,$2D,$0E  ;;A923|----/----\----;
OBJECTGFXLIST:        db $14,$17,$19,$15,$14,$17,$1B,$18  ;;A92B|----/----\----; Normal 1 ; Castle 1 
                      db $14,$17,$1B,$16,$14,$17,$0C,$1A  ;;A933|----/----\----; Rope 1 ; Underground 1 
                      db $14,$17,$1B,$08,$14,$17,$0C,$07  ;;A93B|----/----\----; Switch Palace 1 ; Ghost House 1 
                      db $14,$17,$0C,$16,$14,$17,$1B,$15  ;;A943|----/----\----; Rope 2 ; Normal 2 
                      db $14,$17,$19,$16,$14,$17,$0D,$1A  ;;A94B|----/----\----; Rope 3 ; Underground 2 
                      db $14,$17,$1B,$08,$14,$17,$1B,$18  ;;A953|----/----\----; Switch Palace 2 ; Castle 2 
                      db $14,$17,$19,$1F,$14,$17,$0D,$07  ;;A95B|----/----\----; Cloud/Forest ; Ghost House 2 
                      db $14,$17,$19,$1A,$14,$17,$14,$14  ;;A963|----/----\----; Underground 2 
                      db $0E,$0F,$17,$17,$1C,$1D,$08,$1E  ;;A96B|----/----\----;
                      db $1C,$1D,$08,$1E,$1C,$1D,$08,$1E  ;;A973|----/----\----;
                      db $1C,$1D,$08,$1E,$1C,$1D,$08,$1E  ;;A97B|----/----\----;
                      db $1C,$1D,$08,$1E,$1C,$1D,$08,$1E  ;;A983|----/----\----;
                      db $14,$17,$19,$2C,$19,$17,$1B,$18  ;;A98B|----/----\----;
                                                          ;;                   ;
CODE_00A993:          STZ.W !HW_VMADD                     ;;A993|----/----\----; \  ; Address for VRAM Read/Write (Low Byte)
                      LDA.B #$40                          ;;A996|----/----\----;  |Set "Address for VRAM Read/Write" to x4000 
                      STA.W !HW_VMADD+1                   ;;A998|----/----\----; /  ; Address for VRAM Read/Write (High Byte)
                      LDA.B #$03                          ;;A99B|----/----\----;
                      STA.B !_F                           ;;A99D|----/----\----;
                      LDA.B #$28                          ;;A99F|----/----\----;
                      STA.B !_E                           ;;A9A1|----/----\----;
CODE_00A9A3:          LDA.B !_E                           ;;A9A3|----/----\----;
                      TAY                                 ;;A9A5|----/----\----;
                      JSL CODE_00BA28                     ;;A9A6|----/----\----;
                      REP #$30                            ;;A9AA|----/----\----; Index (16 bit) Accum (16 bit) 
                      LDX.W #$03FF                        ;;A9AC|----/----\----;
                      LDY.W #$0000                        ;;A9AF|----/----\----;
                    - LDA.B [!_0],Y                       ;;A9B2|----/----\----;
                      STA.W !HW_VMDATA                    ;;A9B4|----/----\----; Data for VRAM Write (Low Byte)
                      INY                                 ;;A9B7|----/----\----;
                      INY                                 ;;A9B8|----/----\----;
                      DEX                                 ;;A9B9|----/----\----;
                      BPL -                               ;;A9BA|----/----\----;
                      SEP #$30                            ;;A9BC|----/----\----; Index (8 bit) Accum (8 bit) 
                      INC.B !_E                           ;;A9BE|----/----\----;
                      DEC.B !_F                           ;;A9C0|----/----\----;
                      BPL CODE_00A9A3                     ;;A9C2|----/----\----;
                      STZ.W !HW_VMADD                     ;;A9C4|----/----\----; \  ; Address for VRAM Read/Write (Low Byte)
                      LDA.B #$60                          ;;A9C7|----/----\----;  |Set "Address for VRAM Read/Write" to x6000 
                      STA.W !HW_VMADD+1                   ;;A9C9|----/----\----; /  ; Address for VRAM Read/Write (High Byte)
                      LDY.B #$00                          ;;A9CC|----/----\----;
                      JSR UploadGFXFile                   ;;A9CE|----/----\----;
                      RTS                                 ;;A9D1|----/----\----;
                                                          ;;                   ;
                                                          ;;                   ;
DATA_00A9D2:          db $78,$70,$68,$60                  ;;A9D2|----/----\----;
                                                          ;;                   ;
DATA_00A9D6:          db $18,$10,$08,$00                  ;;A9D6|----/----\----;
                                                          ;;                   ;
UploadSpriteGFX:      LDA.B #$80                          ;;A9DA|----/----\----; Decompression as well? 
                      STA.W !HW_VMAINC                    ;;A9DC|----/----\----; VRAM transfer control port ; VRAM Address Increment Value
                      LDX.B #$03                          ;;A9DF|----/----\----;
                      LDA.W !SpriteTileset                ;;A9E1|----/----\----; $192B = current sprite GFX list index 
                      ASL A                               ;;A9E4|----/----\----; \ 
                      ASL A                               ;;A9E5|----/----\----;  }4A -> Y 
                      TAY                                 ;;A9E6|----/----\----; / 
                    - LDA.W SPRITEGFXLIST,Y               ;;A9E7|----/----\----;  | 
                      STA.B !_4,X                         ;;A9EA|----/----\----;  | 
                      INY                                 ;;A9EC|----/----\----;  | 
                      DEX                                 ;;A9ED|----/----\----;  | 
                      BPL -                               ;;A9EE|----/----\----; / 
                      LDA.B #$03                          ;;A9F0|----/----\----; #$03 -> A -> $0F 
                      STA.B !_F                           ;;A9F2|----/----\----;
GFXTransferLoop:      LDX.B !_F                           ;;A9F4|----/----\----; $0F -> X 
                      STZ.W !HW_VMADD                     ;;A9F6|----/----\----; #$00 -> $2116 ; Address for VRAM Read/Write (Low Byte)
                      LDA.W DATA_00A9D2,X                 ;;A9F9|----/----\----; My guess: Locations in VRAM to upload GFX to 
                      STA.W !HW_VMADD+1                   ;;A9FC|----/----\----; Set VRAM address to $??00 ; Address for VRAM Read/Write (High Byte)
                      LDY.B !_4,X                         ;;A9FF|----/----\----; Y is possibly which GFX file 
                      LDA.W !SpriteGFXFile,X              ;;AA01|----/----\----; to upload to a section in VRAM, used in 
                      CMP.B !_4,X                         ;;AA04|----/----\----; the subroutine $00:BA28 
                      BEQ +                               ;;AA06|----/----\----; don't upload when it''s not needed 
                      JSR UploadGFXFile                   ;;AA08|----/----\----; JSR to a JSL... 
                    + DEC.B !_F                           ;;AA0B|----/----\----; Decrement $0F 
                      BPL GFXTransferLoop                 ;;AA0D|----/----\----; if >= #$00, continue transfer 
                      LDX.B #$03                          ;;AA0F|----/----\----; \ 
                    - LDA.B !_4,X                         ;;AA11|----/----\----;  |Update $0101-$0104 to reflect the new sprite GFX 
                      STA.W !SpriteGFXFile,X              ;;AA13|----/----\----;  |That's loaded now. 
                      DEX                                 ;;AA16|----/----\----;  | 
                      BPL -                               ;;AA17|----/----\----; / 
                      LDA.W !ObjectTileset                ;;AA19|----/----\----; LDA Tileset 
                      CMP.B #$FE                          ;;AA1C|----/----\----;
                      BCS SetallFGBG80                    ;;AA1E|----/----\----; Branch to a routine that uploads file #$80 to every slot in FG/BG 
                      LDX.B #$03                          ;;AA20|----/----\----;
                      LDA.W !ObjectTileset                ;;AA22|----/----\----; this routine is pretty close to the above 
                      ASL A                               ;;AA25|----/----\----; one, I'm guessing this does 
                      ASL A                               ;;AA26|----/----\----; object/BG GFX. 
                      TAY                                 ;;AA27|----/----\----; 4A -> Y 
                    - LDA.W OBJECTGFXLIST,Y               ;;AA28|----/----\----; FG/BG GFX table 
                      STA.B !_4,X                         ;;AA2B|----/----\----;
                      INY                                 ;;AA2D|----/----\----;
                      DEX                                 ;;AA2E|----/----\----;
                      BPL -                               ;;AA2F|----/----\----; FG/Bg to upload -> $04 - $07 
                      LDA.B #$03                          ;;AA31|----/----\----;
                      STA.B !_F                           ;;AA33|----/----\----; #$03 -> $0F 
CODE_00AA35:          LDX.B !_F                           ;;AA35|----/----\----; $0F -> X 
                      STZ.W !HW_VMADD                     ;;AA37|----/----\----; Address for VRAM Read/Write (Low Byte)
                      LDA.W DATA_00A9D6,X                 ;;AA3A|----/----\----; Load + Store VRAM upload positions 
                      STA.W !HW_VMADD+1                   ;;AA3D|----/----\----; Address for VRAM Read/Write (High Byte)
                      LDY.B !_4,X                         ;;AA40|----/----\----;
                      LDA.W !BackgroundGFXFile,X          ;;AA42|----/----\----; Check to see if the file to be uploaded already 
                      CMP.B !_4,X                         ;;AA45|----/----\----; exists in the slot in VRAM - if so, 
                      BEQ +                               ;;AA47|----/----\----; don't bother uploading it again. 
                      JSR UploadGFXFile                   ;;AA49|----/----\----; Upload the GFX file 
                    + DEC.B !_F                           ;;AA4C|----/----\----; Next GFX file 
                      BPL CODE_00AA35                     ;;AA4E|----/----\----;
                      LDX.B #$03                          ;;AA50|----/----\----;
                    - LDA.B !_4,X                         ;;AA52|----/----\----;
                      STA.W !BackgroundGFXFile,X          ;;AA54|----/----\----;
                      DEX                                 ;;AA57|----/----\----;
                      BPL -                               ;;AA58|----/----\----;
                      RTS                                 ;;AA5A|----/----\----; Return from uploading the GFX 
                                                          ;;                   ;
SetallFGBG80:         BEQ +                               ;;AA5B|----/----\----; If zero flag set, don't update the tileset 
                      JSR CODE_00AB42                     ;;AA5D|----/----\----;
                    + LDX.B #$03                          ;;AA60|----/----\----;
                      LDA.B #$80                          ;;AA62|----/----\----; my guess is that it gets called in the same set of routines 
                    - STA.W !BackgroundGFXFile,X          ;;AA64|----/----\----;
                      DEX                                 ;;AA67|----/----\----;
                      BPL -                               ;;AA68|----/----\----;
                      RTS                                 ;;AA6A|----/----\----; Return 
                                                          ;;                   ;
UploadGFXFile:        JSL CODE_00BA28                     ;;AA6B|----/----\----;
                      CPY.B #$01                          ;;AA6F|----/----\----;
                      BNE +                               ;;AA71|----/----\----;
                      LDA.W !OWLevelTileSettings+$49      ;;AA73|----/----\----;
                      BPL +                               ;;AA76|----/----\----; handle the post-special world graphics and koopa color swap. 
                      LDY.B #$31                          ;;AA78|----/----\----;
                      JSL CODE_00BA28                     ;;AA7A|----/----\----;
                      LDY.B #$01                          ;;AA7E|----/----\----;
                    + REP #$20                            ;;AA80|----/----\----; A = 16bit ; Accum (16 bit) 
                      LDA.W #$0000                        ;;AA82|----/----\----;
                      LDX.W !ObjectTileset                ;;AA85|----/----\----; LDX Tileset 
                      CPX.B #$11                          ;;AA88|----/----\----; CPX #$11 
                      BCC CODE_00AA90                     ;;AA8A|----/----\----; If Tileset < #$11 skip to lower area 
                      CPY.B #$08                          ;;AA8C|----/----\----; if Y = #$08 skip to JSR 
                      BEQ JumpTo_____                     ;;AA8E|----/----\----;
CODE_00AA90:          CPY.B #$1E                          ;;AA90|----/----\----; If Y = #$1E then 
                      BEQ JumpTo_____                     ;;AA92|----/----\----; JMP otherwise 
                      BNE +                               ;;AA94|----/----\----; don't JMP 
JumpTo_____:          JMP FilterSomeRAM                   ;;AA96|----/----\----;
                                                          ;;                   ;
                    + STA.B !_A                           ;;AA99|----/----\----;
                      LDA.W #$FFFF                        ;;AA9B|----/----\----;
                      CPY.B #$01                          ;;AA9E|----/----\----;
                      BEQ +                               ;;AAA0|----/----\----;
                      CPY.B #$17                          ;;AAA2|----/----\----;
                      BEQ +                               ;;AAA4|----/----\----;
                      LDA.W #$0000                        ;;AAA6|----/----\----;
                    + STA.W !GfxBppConvertFlag            ;;AAA9|----/----\----;
                      LDY.B #$7F                          ;;AAAC|----/----\----;
CODE_00AAAE:          LDA.W !GfxBppConvertFlag            ;;AAAE|----/----\----;
                      BEQ CODE_00AACD                     ;;AAB1|----/----\----;
                      CPY.B #$7E                          ;;AAB3|----/----\----;
                      BCC CODE_00AABE                     ;;AAB5|----/----\----;
CODE_00AAB7:          LDA.W #$FF00                        ;;AAB7|----/----\----;
                      STA.B !_A                           ;;AABA|----/----\----;
                      BNE CODE_00AACD                     ;;AABC|----/----\----;
CODE_00AABE:          CPY.B #$6E                          ;;AABE|----/----\----;
                      BCC CODE_00AAC8                     ;;AAC0|----/----\----;
                      CPY.B #$70                          ;;AAC2|----/----\----;
                      BCS CODE_00AAC8                     ;;AAC4|----/----\----;
                      BCC CODE_00AAB7                     ;;AAC6|----/----\----;
CODE_00AAC8:          LDA.W #$0000                        ;;AAC8|----/----\----;
                      STA.B !_A                           ;;AACB|----/----\----;
CODE_00AACD:          LDX.B #$07                          ;;AACD|----/----\----;
                    - LDA.B [!_0]                         ;;AACF|----/----\----;
                      STA.W !HW_VMDATA                    ;;AAD1|----/----\----; Data for VRAM Write (Low Byte)
                      XBA                                 ;;AAD4|----/----\----;
                      ORA.B [!_0]                         ;;AAD5|----/----\----;
                      STA.W !GfxBppConvertBuffer,X        ;;AAD7|----/----\----;
                      INC.B !_0                           ;;AADA|----/----\----;
                      INC.B !_0                           ;;AADC|----/----\----;
                      DEX                                 ;;AADE|----/----\----;
                      BPL -                               ;;AADF|----/----\----;
                      LDX.B #$07                          ;;AAE1|----/----\----;
                    - LDA.B [!_0]                         ;;AAE3|----/----\----;
                      AND.W #$00FF                        ;;AAE5|----/----\----;
                      STA.B !_C                           ;;AAE8|----/----\----;
                      LDA.B [!_0]                         ;;AAEA|----/----\----;
                      XBA                                 ;;AAEC|----/----\----;
                      ORA.W !GfxBppConvertBuffer,X        ;;AAED|----/----\----;
                      AND.B !_A                           ;;AAF0|----/----\----;
                      ORA.B !_C                           ;;AAF2|----/----\----;
                      STA.W !HW_VMDATA                    ;;AAF4|----/----\----; Data for VRAM Write (Low Byte)
                      INC.B !_0                           ;;AAF7|----/----\----;
                      DEX                                 ;;AAF9|----/----\----;
                      BPL -                               ;;AAFA|----/----\----;
                      DEY                                 ;;AAFC|----/----\----;
                      BPL CODE_00AAAE                     ;;AAFD|----/----\----;
                      SEP #$20                            ;;AAFF|----/----\----; Accum (8 bit) 
                      RTS                                 ;;AB01|----/----\----; Return 
                                                          ;;                   ;
FilterSomeRAM:        LDA.W #$FF00                        ;;AB02|----/----\----; Accum (16 bit) 
                      STA.B !_A                           ;;AB05|----/----\----;
                      LDY.B #$7F                          ;;AB07|----/----\----;
Upload____ToVRAM:     CPY.B #$08                          ;;AB09|----/----\----; \Completely pointless code. 
                      BCS +                               ;;AB0B|----/----\----; /(Why not just NOPing it out, Nintendo?) 
                    + LDX.B #$07                          ;;AB0D|----/----\----;
                    - LDA.B [!_0]                         ;;AB0F|----/----\----; \ Okay, so take [$00], store 
                      STA.W !HW_VMDATA                    ;;AB11|----/----\----;  |it to VRAM, then bitwise ; Data for VRAM Write (Low Byte)
                      XBA                                 ;;AB14|----/----\----;  |OR the high and low bytes together 
                      ORA.B [!_0]                         ;;AB15|----/----\----;  |store in both bytes of A 
                      STA.W !GfxBppConvertBuffer,X        ;;AB17|----/----\----; /and store to $1BB2,x 
                      INC.B !_0                           ;;AB1A|----/----\----; \Increment $7E:0000 by 2 
                      INC.B !_0                           ;;AB1C|----/----\----; / 
                      DEX                                 ;;AB1E|----/----\----; \And continue on another 7 times (or 8 times total) 
                      BPL -                               ;;AB1F|----/----\----; / 
                      LDX.B #$07                          ;;AB21|----/----\----; hm..  It's like a FOR Y{FOR X{ } } thing ...yeah... 
                    - LDA.B [!_0]                         ;;AB23|----/----\----;
                      AND.W #$00FF                        ;;AB25|----/----\----; A normal byte becomes 2 anti-compressed bytes. 
                      STA.B !_C                           ;;AB28|----/----\----; I'm going up, to try and find out what's supposed to set $00-$02 for this routine. 
                      LDA.B [!_0]                         ;;AB2A|----/----\----; AHA, check $00/BA28.  It writes a RAM address to $00-$02, $7EAD00 
                      XBA                                 ;;AB2C|----/----\----; So...  Now to find otu what sets *That* 
                      ORA.W !GfxBppConvertBuffer,X        ;;AB2D|----/----\----; ...this place gives me headaches... Can't we work on some other code? :( 
                      AND.B !_A                           ;;AB30|----/----\----; Sure, go ahead.  anyways, this seems to upload the decompressed GFX 
                      ORA.B !_C                           ;;AB32|----/----\----; while scrambling it afterwards (o_O). 
                      STA.W !HW_VMDATA                    ;;AB34|----/----\----; Okay... WHAT THE HELL? ; Data for VRAM Write (Low Byte)
                      INC.B !_0                           ;;AB37|----/----\----; I'll have nightmares about this routine for a few years. :( 
                      DEX                                 ;;AB39|----/----\----;
                      BPL -                               ;;AB3A|----/----\----; Ouch. 
                      DEY                                 ;;AB3C|----/----\----;
                      BPL Upload____ToVRAM                ;;AB3D|----/----\----;
                      SEP #$20                            ;;AB3F|----/----\----; Accum (8 bit) 
                      RTS                                 ;;AB41|----/----\----; Return 
                                                          ;;                   ;
CODE_00AB42:          LDY.B #$27                          ;;AB42|----/----\----;
                      JSL CODE_00BA28                     ;;AB44|----/----\----;
                      REP #$10                            ;;AB48|----/----\----; Index (16 bit) 
                      LDY.W #$0000                        ;;AB4A|----/----\----;
                      LDX.W #$03FF                        ;;AB4D|----/----\----;
                    - LDA.B [!_0],Y                       ;;AB50|----/----\----;
                      STA.B !_F                           ;;AB52|----/----\----;
                      JSR CODE_00ABC4                     ;;AB54|----/----\----;
                      LDA.B !_4                           ;;AB57|----/----\----;
                      STA.W !HW_VMDATA+1                  ;;AB59|----/----\----; Data for VRAM Write (High Byte)
                      JSR CODE_00ABC4                     ;;AB5C|----/----\----;
                      LDA.B !_4                           ;;AB5F|----/----\----;
                      STA.W !HW_VMDATA+1                  ;;AB61|----/----\----; Data for VRAM Write (High Byte)
                      STZ.B !_4                           ;;AB64|----/----\----;
                      ROL.B !_F                           ;;AB66|----/----\----;
                      ROL.B !_4                           ;;AB68|----/----\----;
                      ROL.B !_F                           ;;AB6A|----/----\----;
                      ROL.B !_4                           ;;AB6C|----/----\----;
                      INY                                 ;;AB6E|----/----\----;
                      LDA.B [!_0],Y                       ;;AB6F|----/----\----;
                      STA.B !_F                           ;;AB71|----/----\----;
                      ROL.B !_F                           ;;AB73|----/----\----;
                      ROL.B !_4                           ;;AB75|----/----\----;
                      LDA.B !_4                           ;;AB77|----/----\----;
                      STA.W !HW_VMDATA+1                  ;;AB79|----/----\----; Data for VRAM Write (High Byte)
                      JSR CODE_00ABC4                     ;;AB7C|----/----\----;
                      LDA.B !_4                           ;;AB7F|----/----\----;
                      STA.W !HW_VMDATA+1                  ;;AB81|----/----\----; Data for VRAM Write (High Byte)
                      JSR CODE_00ABC4                     ;;AB84|----/----\----;
                      LDA.B !_4                           ;;AB87|----/----\----;
                      STA.W !HW_VMDATA+1                  ;;AB89|----/----\----; Data for VRAM Write (High Byte)
                      STZ.B !_4                           ;;AB8C|----/----\----;
                      ROL.B !_F                           ;;AB8E|----/----\----;
                      ROL.B !_4                           ;;AB90|----/----\----;
                      INY                                 ;;AB92|----/----\----;
                      LDA.B [!_0],Y                       ;;AB93|----/----\----;
                      STA.B !_F                           ;;AB95|----/----\----;
                      ROL.B !_F                           ;;AB97|----/----\----;
                      ROL.B !_4                           ;;AB99|----/----\----;
                      ROL.B !_F                           ;;AB9B|----/----\----;
                      ROL.B !_4                           ;;AB9D|----/----\----;
                      LDA.B !_4                           ;;AB9F|----/----\----;
                      STA.W !HW_VMDATA+1                  ;;ABA1|----/----\----; Data for VRAM Write (High Byte)
                      JSR CODE_00ABC4                     ;;ABA4|----/----\----;
                      LDA.B !_4                           ;;ABA7|----/----\----;
                      STA.W !HW_VMDATA+1                  ;;ABA9|----/----\----; Data for VRAM Write (High Byte)
                      JSR CODE_00ABC4                     ;;ABAC|----/----\----;
                      LDA.B !_4                           ;;ABAF|----/----\----;
                      STA.W !HW_VMDATA+1                  ;;ABB1|----/----\----; Data for VRAM Write (High Byte)
                      INY                                 ;;ABB4|----/----\----;
                      DEX                                 ;;ABB5|----/----\----;
                      BPL -                               ;;ABB6|----/----\----;
                      LDX.W #$2000                        ;;ABB8|----/----\----;
                    - STZ.W !HW_VMDATA+1                  ;;ABBB|----/----\----; Data for VRAM Write (High Byte)
                      DEX                                 ;;ABBE|----/----\----;
                      BNE -                               ;;ABBF|----/----\----;
                      SEP #$10                            ;;ABC1|----/----\----; Index (8 bit) 
                      RTS                                 ;;ABC3|----/----\----; Return 
                                                          ;;                   ;
CODE_00ABC4:          STZ.B !_4                           ;;ABC4|----/----\----;
                      ROL.B !_F                           ;;ABC6|----/----\----;
                      ROL.B !_4                           ;;ABC8|----/----\----;
                      ROL.B !_F                           ;;ABCA|----/----\----;
                      ROL.B !_4                           ;;ABCC|----/----\----;
                      ROL.B !_F                           ;;ABCE|----/----\----;
                      ROL.B !_4                           ;;ABD0|----/----\----;
                      RTS                                 ;;ABD2|----/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
DATA_00ABD3:          db $00,$18,$30,$48,$60,$78,$90,$A8  ;;ABD3|----/----\----;
                      db $00,$14,$28,$3C                  ;;ABDB|----/----\----;
                                                          ;;                   ;
DATA_00ABDF:          db $00,$00,$38,$00,$70,$00,$A8,$00  ;;ABDF|----/----\----;
                      db $E0,$00,$18,$01,$50,$01          ;;ABE7|----/----\----;
                                                          ;;                   ;
LoadPalette:          REP #$30                            ;;ABED|----/----\----; 16 bit A, X and Y ; Index (16 bit) Accum (16 bit) 
                      LDA.W #$7FDD                        ;;ABEF|----/----\----; \  
                      STA.B !_4                           ;;ABF2|----/----\----;  |Set color 1 in all object palettes to white 
                      LDX.W #$0002                        ;;ABF4|----/----\----;  | 
                      JSR LoadCol8Pal                     ;;ABF7|----/----\----; /  
                      LDA.W #$7FFF                        ;;ABFA|----/----\----; \  
                      STA.B !_4                           ;;ABFD|----/----\----;  |Set color 1 in all sprite palettes to white 
                      LDX.W #$0102                        ;;ABFF|----/----\----;  | 
                      JSR LoadCol8Pal                     ;;AC02|----/----\----; /  
                      LDA.W #$B170                        ;;AC05|----/----\----; \  
                      STA.B !_0                           ;;AC08|----/----\----;  | 
                      LDA.W #$0010                        ;;AC0A|----/----\----;  |Load colors 8-16 in the first two object palettes from 00/B170 
                      STA.B !_4                           ;;AC0D|----/----\----;  |(Layer 3 palettes) 
                      LDA.W #$0007                        ;;AC0F|----/----\----;  | 
                      STA.B !_6                           ;;AC12|----/----\----;  | 
                      LDA.W #$0001                        ;;AC14|----/----\----;  | 
                      STA.B !_8                           ;;AC17|----/----\----;  | 
                      JSR LoadColors                      ;;AC19|----/----\----; /  
                      LDA.W #$B250                        ;;AC1C|----/----\----; \  
                      STA.B !_0                           ;;AC1F|----/----\----;  | 
                      LDA.W #$0084                        ;;AC21|----/----\----;  |Load colors 2-7 in palettes 4-D from 00/B250 
                      STA.B !_4                           ;;AC24|----/----\----;  |(Object and sprite palettes) 
                      LDA.W #$0005                        ;;AC26|----/----\----;  | 
                      STA.B !_6                           ;;AC29|----/----\----;  | 
                      LDA.W #$0009                        ;;AC2B|----/----\----;  | 
                      STA.B !_8                           ;;AC2E|----/----\----;  | 
                      JSR LoadColors                      ;;AC30|----/----\----; /  
                      LDA.W !BackAreaColor                ;;AC33|----/----\----; \  
                      AND.W #$000F                        ;;AC36|----/----\----;  | 
                      ASL A                               ;;AC39|----/----\----;  |Load background color 
                      TAY                                 ;;AC3A|----/----\----;  | 
                      LDA.W Palettes_,Y                   ;;AC3B|----/----\----;  | 
                      STA.W !BackgroundColor              ;;AC3E|----/----\----; /  
                      LDA.W #$B190                        ;;AC41|----/----\----; \Store base address in $00, ... 
                      STA.B !_0                           ;;AC44|----/----\----; / 
                      LDA.W !ForegroundPalette            ;;AC46|----/----\----; \...get current object palette, ... 
                      AND.W #$000F                        ;;AC49|----/----\----; / 
                      TAY                                 ;;AC4C|----/----\----; \  
                      LDA.W DATA_00ABD3,Y                 ;;AC4D|----/----\----;  | 
                      AND.W #$00FF                        ;;AC50|----/----\----;  |...use it to figure out where to load from, ... 
                      CLC                                 ;;AC53|----/----\----;  | 
                      ADC.B !_0                           ;;AC54|----/----\----;  |...add it to the base address... 
                      STA.B !_0                           ;;AC56|----/----\----; / ...and store it in $00 
                      LDA.W #$0044                        ;;AC58|----/----\----; \  
                      STA.B !_4                           ;;AC5B|----/----\----;  | 
                      LDA.W #$0005                        ;;AC5D|----/----\----;  | 
                      STA.B !_6                           ;;AC60|----/----\----;  |Load colors 2-7 in object palettes 2 and 3 from the address in $00 
                      LDA.W #$0001                        ;;AC62|----/----\----;  | 
                      STA.B !_8                           ;;AC65|----/----\----;  | 
                      JSR LoadColors                      ;;AC67|----/----\----; /  
                      LDA.W #$B318                        ;;AC6A|----/----\----; \Store base address in $00, ... 
                      STA.B !_0                           ;;AC6D|----/----\----; / 
                      LDA.W !SpritePalette                ;;AC6F|----/----\----; \...get current sprite palette, ... 
                      AND.W #$000F                        ;;AC72|----/----\----; / 
                      TAY                                 ;;AC75|----/----\----; \  
                      LDA.W DATA_00ABD3,Y                 ;;AC76|----/----\----;  | 
                      AND.W #$00FF                        ;;AC79|----/----\----;  |...use it to figure out where to load from, ... 
                      CLC                                 ;;AC7C|----/----\----;  | 
                      ADC.B !_0                           ;;AC7D|----/----\----;  |...add it to the base address... 
                      STA.B !_0                           ;;AC7F|----/----\----; / ...and store it in $00 
                      LDA.W #$01C4                        ;;AC81|----/----\----; \  
                      STA.B !_4                           ;;AC84|----/----\----;  | 
                      LDA.W #$0005                        ;;AC86|----/----\----;  | 
                      STA.B !_6                           ;;AC89|----/----\----;  |Load colors 2-7 in sprite palettes 6 and 7 from the address in $00 
                      LDA.W #$0001                        ;;AC8B|----/----\----;  | 
                      STA.B !_8                           ;;AC8E|----/----\----;  | 
                      JSR LoadColors                      ;;AC90|----/----\----; /  
                      LDA.W #$B0B0                        ;;AC93|----/----\----; \Store bade address in $00, ... 
                      STA.B !_0                           ;;AC96|----/----\----; / 
                      LDA.W !BackgroundPalette            ;;AC98|----/----\----; \...get current background palette, ... 
                      AND.W #$000F                        ;;AC9B|----/----\----; / 
                      TAY                                 ;;AC9E|----/----\----; \  
                      LDA.W DATA_00ABD3,Y                 ;;AC9F|----/----\----;  | 
                      AND.W #$00FF                        ;;ACA2|----/----\----;  |...use it to figure out where to load from, ... 
                      CLC                                 ;;ACA5|----/----\----;  | 
                      ADC.B !_0                           ;;ACA6|----/----\----;  |...add it to the base address... 
                      STA.B !_0                           ;;ACA8|----/----\----; / ...and store it in $00 
                      LDA.W #$0004                        ;;ACAA|----/----\----; \  
                      STA.B !_4                           ;;ACAD|----/----\----;  | 
                      LDA.W #$0005                        ;;ACAF|----/----\----;  | 
                      STA.B !_6                           ;;ACB2|----/----\----;  |Load colors 2-7 in object palettes 0 and 1 from the address in $00 
                      LDA.W #$0001                        ;;ACB4|----/----\----;  | 
                      STA.B !_8                           ;;ACB7|----/----\----;  | 
                      JSR LoadColors                      ;;ACB9|----/----\----; /  
                      LDA.W #$B674                        ;;ACBC|----/----\----; \  
                      STA.B !_0                           ;;ACBF|----/----\----;  | 
                      LDA.W #$0052                        ;;ACC1|----/----\----;  | 
                      STA.B !_4                           ;;ACC4|----/----\----;  | 
                      LDA.W #$0006                        ;;ACC6|----/----\----;  |Load colors 9-F in object palettes 2-4 from 00/B674 
                      STA.B !_6                           ;;ACC9|----/----\----;  | 
                      LDA.W #$0002                        ;;ACCB|----/----\----;  | 
                      STA.B !_8                           ;;ACCE|----/----\----;  | 
                      JSR LoadColors                      ;;ACD0|----/----\----; /  
                      LDA.W #$B674                        ;;ACD3|----/----\----; \  
                      STA.B !_0                           ;;ACD6|----/----\----;  | 
                      LDA.W #$0132                        ;;ACD8|----/----\----;  | 
                      STA.B !_4                           ;;ACDB|----/----\----;  | 
                      LDA.W #$0006                        ;;ACDD|----/----\----;  |Load colors 9-F in sprite palettes 1-3 from 00/B674 
                      STA.B !_6                           ;;ACE0|----/----\----;  | 
                      LDA.W #$0002                        ;;ACE2|----/----\----;  | 
                      STA.B !_8                           ;;ACE5|----/----\----;  | 
                      JSR LoadColors                      ;;ACE7|----/----\----; /  
                      SEP #$30                            ;;ACEA|----/----\----; 8 bit A, X and Y ; Index (8 bit) Accum (8 bit) 
                      RTS                                 ;;ACEC|----/----\----; Return 
                                                          ;;                   ;
LoadCol8Pal:          LDY.W #$0007                        ;;ACED|----/----\----; Index (16 bit) Accum (16 bit) 
                    - LDA.B !_4                           ;;ACF0|----/----\----;
                      STA.W !MainPalette,X                ;;ACF2|----/----\----;
                      TXA                                 ;;ACF5|----/----\----;
                      CLC                                 ;;ACF6|----/----\----;
                      ADC.W #$0020                        ;;ACF7|----/----\----;
                      TAX                                 ;;ACFA|----/----\----;
                      DEY                                 ;;ACFB|----/----\----;
                      BPL -                               ;;ACFC|----/----\----;
                      RTS                                 ;;ACFE|----/----\----; Return 
                                                          ;;                   ;
LoadColors:           LDX.B !_4                           ;;ACFF|----/----\----;
                      LDY.B !_6                           ;;AD01|----/----\----;
                    - LDA.B (!_0)                         ;;AD03|----/----\----;
                      STA.W !MainPalette,X                ;;AD05|----/----\----;
                      INC.B !_0                           ;;AD08|----/----\----;
                      INC.B !_0                           ;;AD0A|----/----\----;
                      INX                                 ;;AD0C|----/----\----;
                      INX                                 ;;AD0D|----/----\----;
                      DEY                                 ;;AD0E|----/----\----;
                      BPL -                               ;;AD0F|----/----\----;
                      LDA.B !_4                           ;;AD11|----/----\----;
                      CLC                                 ;;AD13|----/----\----;
                      ADC.W #$0020                        ;;AD14|----/----\----;
                      STA.B !_4                           ;;AD17|----/----\----;
                      DEC.B !_8                           ;;AD19|----/----\----;
                      BPL LoadColors                      ;;AD1B|----/----\----;
                      RTS                                 ;;AD1D|----/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
DATA_00AD1E:          db $01,$00,$03,$04,$03,$05,$02      ;;AD1E|----/----\----;
                                                          ;;                   ;
CODE_00AD25:          REP #$30                            ;;AD25|----/----\----; Index (16 bit) Accum (16 bit) 
                      LDY.W #$B3D8                        ;;AD27|----/----\----;
                      LDA.W !OWLevelTileSettings+$48      ;;AD2A|----/----\----;
                      BPL +                               ;;AD2D|----/----\----;
                      LDY.W #$B732                        ;;AD2F|----/----\----;
                    + STY.B !_0                           ;;AD32|----/----\----;
                      LDA.W !ObjectTileset                ;;AD34|----/----\----;
                      AND.W #$000F                        ;;AD37|----/----\----;
                      DEC A                               ;;AD3A|----/----\----;
                      TAY                                 ;;AD3B|----/----\----;
                      LDA.W DATA_00AD1E,Y                 ;;AD3C|----/----\----;
                      AND.W #$00FF                        ;;AD3F|----/----\----;
                      ASL A                               ;;AD42|----/----\----;
                      TAY                                 ;;AD43|----/----\----;
                      LDA.W DATA_00ABDF,Y                 ;;AD44|----/----\----;
                      CLC                                 ;;AD47|----/----\----;
                      ADC.B !_0                           ;;AD48|----/----\----;
                      STA.B !_0                           ;;AD4A|----/----\----;
                      LDA.W #$0082                        ;;AD4C|----/----\----;
                      STA.B !_4                           ;;AD4F|----/----\----;
                      LDA.W #$0006                        ;;AD51|----/----\----;
                      STA.B !_6                           ;;AD54|----/----\----;
                      LDA.W #$0003                        ;;AD56|----/----\----;
                      STA.B !_8                           ;;AD59|----/----\----;
                      JSR LoadColors                      ;;AD5B|----/----\----;
                      LDA.W #$B528                        ;;AD5E|----/----\----;
                      STA.B !_0                           ;;AD61|----/----\----;
                      LDA.W #$0052                        ;;AD63|----/----\----;
                      STA.B !_4                           ;;AD66|----/----\----;
                      LDA.W #$0006                        ;;AD68|----/----\----;
                      STA.B !_6                           ;;AD6B|----/----\----;
                      LDA.W #$0005                        ;;AD6D|----/----\----;
                      STA.B !_8                           ;;AD70|----/----\----;
                      JSR LoadColors                      ;;AD72|----/----\----;
                      LDA.W #$B57C                        ;;AD75|----/----\----;
                      STA.B !_0                           ;;AD78|----/----\----;
                      LDA.W #$0102                        ;;AD7A|----/----\----;
                      STA.B !_4                           ;;AD7D|----/----\----;
                      LDA.W #$0006                        ;;AD7F|----/----\----;
                      STA.B !_6                           ;;AD82|----/----\----;
                      LDA.W #$0007                        ;;AD84|----/----\----;
                      STA.B !_8                           ;;AD87|----/----\----;
                      JSR LoadColors                      ;;AD89|----/----\----;
                      LDA.W #$B5EC                        ;;AD8C|----/----\----;
                      STA.B !_0                           ;;AD8F|----/----\----;
                      LDA.W #$0010                        ;;AD91|----/----\----;
                      STA.B !_4                           ;;AD94|----/----\----;
                      LDA.W #$0007                        ;;AD96|----/----\----;
                      STA.B !_6                           ;;AD99|----/----\----;
                      LDA.W #$0001                        ;;AD9B|----/----\----;
                      STA.B !_8                           ;;AD9E|----/----\----;
                      JSR LoadColors                      ;;ADA0|----/----\----;
                      SEP #$30                            ;;ADA3|----/----\----; Index (8 bit) Accum (8 bit) 
                      RTS                                 ;;ADA5|----/----\----; Return 
                                                          ;;                   ;
CODE_00ADA6:          REP #$30                            ;;ADA6|----/----\----; Index (16 bit) Accum (16 bit) 
                      LDA.W #$B63C                        ;;ADA8|----/----\----;
                      STA.B !_0                           ;;ADAB|----/----\----;
                      LDA.W #$0010                        ;;ADAD|----/----\----;
                      STA.B !_4                           ;;ADB0|----/----\----;
                      LDA.W #$0007                        ;;ADB2|----/----\----;
                      STA.B !_6                           ;;ADB5|----/----\----;
                      LDA.W #$0000                        ;;ADB7|----/----\----;
                      STA.B !_8                           ;;ADBA|----/----\----;
                      JSR LoadColors                      ;;ADBC|----/----\----;
                      LDA.W #$B62C                        ;;ADBF|----/----\----;
                      STA.B !_0                           ;;ADC2|----/----\----;
                      LDA.W #$0030                        ;;ADC4|----/----\----;
                      STA.B !_4                           ;;ADC7|----/----\----;
                      LDA.W #$0007                        ;;ADC9|----/----\----;
                      STA.B !_6                           ;;ADCC|----/----\----;
                      LDA.W #$0000                        ;;ADCE|----/----\----;
                      STA.B !_8                           ;;ADD1|----/----\----;
                      JSR LoadColors                      ;;ADD3|----/----\----;
                      SEP #$30                            ;;ADD6|----/----\----; Index (8 bit) Accum (8 bit) 
                      RTS                                 ;;ADD8|----/----\----; Return 
                                                          ;;                   ;
CODE_00ADD9:          JSR LoadPalette                     ;;ADD9|----/----\----;
                      REP #$30                            ;;ADDC|----/----\----; Index (16 bit) Accum (16 bit) 
                      LDA.W #$0017                        ;;ADDE|----/----\----;
                      STA.W !BackgroundColor              ;;ADE1|----/----\----;
                      LDA.W #$B170                        ;;ADE4|----/----\----;
                      STA.B !_0                           ;;ADE7|----/----\----;
                      LDA.W #$0010                        ;;ADE9|----/----\----;
                      STA.B !_4                           ;;ADEC|----/----\----;
                      LDA.W #$0007                        ;;ADEE|----/----\----;
                      STA.B !_6                           ;;ADF1|----/----\----;
                      LDA.W #$0001                        ;;ADF3|----/----\----;
                      STA.B !_8                           ;;ADF6|----/----\----;
                      JSR LoadColors                      ;;ADF8|----/----\----;
                      LDA.W #$B65C                        ;;ADFB|----/----\----;
                      STA.B !_0                           ;;ADFE|----/----\----;
                      LDA.W #$0000                        ;;AE00|----/----\----;
                      STA.B !_4                           ;;AE03|----/----\----;
                      LDA.W #$0007                        ;;AE05|----/----\----;
                      STA.B !_6                           ;;AE08|----/----\----;
                      LDA.W #$0000                        ;;AE0A|----/----\----;
                      STA.B !_8                           ;;AE0D|----/----\----;
                      JSR LoadColors                      ;;AE0F|----/----\----;
                      SEP #$30                            ;;AE12|----/----\----; Index (8 bit) Accum (8 bit) 
                      RTS                                 ;;AE14|----/----\----; Return 
                                                          ;;                   ;
CODE_00AE15:          LDA.B #$02                          ;;AE15|----/----\----;
                      STA.W !SpritePalette                ;;AE17|----/----\----;
                      LDA.B #$07                          ;;AE1A|----/----\----;
                      STA.W !ForegroundPalette            ;;AE1C|----/----\----;
                      JSR LoadPalette                     ;;AE1F|----/----\----;
                      REP #$30                            ;;AE22|----/----\----; Index (16 bit) Accum (16 bit) 
                      LDA.W #$0017                        ;;AE24|----/----\----;
                      STA.W !BackgroundColor              ;;AE27|----/----\----;
                      LDA.W #$B5F4                        ;;AE2A|----/----\----;
                      STA.B !_0                           ;;AE2D|----/----\----;
                      LDA.W #$0018                        ;;AE2F|----/----\----;
                      STA.B !_4                           ;;AE32|----/----\----;
                      LDA.W #$0003                        ;;AE34|----/----\----;
                      STA.B !_6                           ;;AE37|----/----\----;
                      STZ.B !_8                           ;;AE39|----/----\----;
                      JSR LoadColors                      ;;AE3B|----/----\----;
                      SEP #$30                            ;;AE3E|----/----\----; Index (8 bit) Accum (8 bit) 
                      RTS                                 ;;AE40|----/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
DATA_00AE41:          db $00,$05,$0A                      ;;AE41|----/----\----;
                                                          ;;                   ;
DATA_00AE44:          db $20,$40,$80                      ;;AE44|----/----\----;
                                                          ;;                   ;
CODE_00AE47:          LDX.B #$02                          ;;AE47|----/----\----;
CODE_00AE49:          REP #$20                            ;;AE49|----/----\----; Accum (16 bit) 
                      LDA.W !BackgroundColor              ;;AE4B|----/----\----;
                      LDY.W DATA_00AE41,X                 ;;AE4E|----/----\----;
CODE_00AE51:          DEY                                 ;;AE51|----/----\----;
                      BMI CODE_00AE57                     ;;AE52|----/----\----;
                      LSR A                               ;;AE54|----/----\----;
                      BRA CODE_00AE51                     ;;AE55|----/----\----;
                                                          ;;                   ;
CODE_00AE57:          SEP #$20                            ;;AE57|----/----\----; Accum (8 bit) 
                      AND.B #$1F                          ;;AE59|----/----\----;
                      ORA.W DATA_00AE44,X                 ;;AE5B|----/----\----;
                      STA.W !HW_COLDATA                   ;;AE5E|----/----\----; Fixed Color Data
                      DEX                                 ;;AE61|----/----\----;
                      BPL CODE_00AE49                     ;;AE62|----/----\----;
                      RTS                                 ;;AE64|----/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
DATA_00AE65:          db $1F,$00,$E0,$03,$00,$7C          ;;AE65|----/----\----;
                                                          ;;                   ;
DATA_00AE6B:          db $FF,$FF,$E0,$FF,$00,$FC          ;;AE6B|----/----\----;
                                                          ;;                   ;
DATA_00AE71:          db $01,$00,$20,$00,$00,$04          ;;AE71|----/----\----;
                                                          ;;                   ;
DATA_00AE77:          db $00,$00,$00,$00,$01,$00,$00,$00  ;;AE77|----/----\----;
                      db $00,$80,$00,$80,$20,$80,$00,$04  ;;AE7F|----/----\----;
                      db $80,$80,$80,$80,$08,$82,$40,$10  ;;AE87|----/----\----;
                      db $20,$84,$20,$84,$44,$88,$10,$22  ;;AE8F|----/----\----;
                      db $88,$88,$88,$88,$22,$91,$88,$44  ;;AE97|----/----\----;
                      db $48,$92,$48,$92,$92,$A4,$24,$49  ;;AE9F|----/----\----;
                      db $A4,$A4,$A4,$A4,$49,$A9,$94,$52  ;;AEA7|----/----\----;
                      db $AA,$AA,$94,$52,$AA,$AA,$54,$55  ;;AEAF|----/----\----;
                      db $AA,$AA,$AA,$AA,$AA,$D5,$AA,$AA  ;;AEB7|----/----\----;
                      db $AA,$D5,$AA,$D5,$B5,$D6,$6A,$AD  ;;AEBF|----/----\----;
                      db $DA,$DA,$DA,$DA,$6D,$DB,$DA,$B6  ;;AEC7|----/----\----;
                      db $B6,$ED,$B6,$ED,$DD,$EE,$76,$BB  ;;AECF|----/----\----;
                      db $EE,$EE,$EE,$EE,$BB,$F7,$EE,$DD  ;;AED7|----/----\----;
                      db $DE,$FB,$DE,$FB,$F7,$FD,$BE,$EF  ;;AEDF|----/----\----;
                      db $FE,$FE,$FE,$FE,$DF,$FF,$FE,$FB  ;;AEE7|----/----\----;
                      db $FE,$FF,$FE,$FF,$FF,$FF,$FE,$FF  ;;AEEF|----/----\----;
DATA_00AEF7:          db $00,$80,$00,$40,$00,$20,$00,$10  ;;AEF7|----/----\----;
                      db $00,$08,$00,$04,$00,$02,$00,$01  ;;AEFF|----/----\----;
                      db $80,$00,$40,$00,$20,$00,$10,$00  ;;AF07|----/----\----;
                      db $08,$00,$04,$00,$02,$00,$01,$00  ;;AF0F|----/----\----;
                                                          ;;                   ;
CODE_00AF17:          LDY.W !EndLevelTimer                ;;AF17|----/----\----;
                      LDA.B !TrueFrame                    ;;AF1A|----/----\----;
                      LSR A                               ;;AF1C|----/----\----;
                      BCC +                               ;;AF1D|----/----\----;
                      DEY                                 ;;AF1F|----/----\----;
                      BEQ +                               ;;AF20|----/----\----;
                      STY.W !EndLevelTimer                ;;AF22|----/----\----;
                    + CPY.B #$A0                          ;;AF25|----/----\----;
                      BCS CODE_00AF35                     ;;AF27|----/----\----;
                      LDA.B #$04                          ;;AF29|----/----\----;
                      TRB.B !ColorSettings                ;;AF2B|----/----\----;
                      LDA.B #$09                          ;;AF2D|----/----\----;
                      STA.B !MainBGMode                   ;;AF2F|----/----\----;
                      JSL CODE_05CBFF                     ;;AF31|----/----\----;
CODE_00AF35:          LDA.B !TrueFrame                    ;;AF35|----/----\----;
                      AND.B #$03                          ;;AF37|----/----\----;
                      BNE Return00AFA2                    ;;AF39|----/----\----;
                      LDA.W !ColorFadeTimer               ;;AF3B|----/----\----;
                      CMP.B #$40                          ;;AF3E|----/----\----;
                      BCS Return00AFA2                    ;;AF40|----/----\----;
                      JSR CODE_00AFA3                     ;;AF42|----/----\----; Index (16 bit) Accum (16 bit) 
                      LDA.W #$01FE                        ;;AF45|----/----\----;
                      STA.W !CopyPalette                  ;;AF48|----/----\----;
                      LDX.W #$00EE                        ;;AF4B|----/----\----;
CODE_00AF4E:          LDA.W #$0007                        ;;AF4E|----/----\----;
                      STA.B !_0                           ;;AF51|----/----\----;
                    - LDA.W !CopyPalette,X                ;;AF53|----/----\----;
                      STA.B !_2                           ;;AF56|----/----\----;
                      LDA.W !MainPalette,X                ;;AF58|----/----\----;
                      JSR CODE_00AFC0                     ;;AF5B|----/----\----;
                      LDA.B !_4                           ;;AF5E|----/----\----;
                      STA.W !CopyPalette,X                ;;AF60|----/----\----;
                      DEX                                 ;;AF63|----/----\----;
                      DEX                                 ;;AF64|----/----\----;
                      DEC.B !_0                           ;;AF65|----/----\----;
                      BNE -                               ;;AF67|----/----\----;
                      TXA                                 ;;AF69|----/----\----;
                      SEC                                 ;;AF6A|----/----\----;
                      SBC.W #$0012                        ;;AF6B|----/----\----;
                      TAX                                 ;;AF6E|----/----\----;
                      BPL CODE_00AF4E                     ;;AF6F|----/----\----;
                      LDX.W #$0004                        ;;AF71|----/----\----;
                    - LDA.W !CopyPalette+$1A,X            ;;AF74|----/----\----;
                      STA.B !_2                           ;;AF77|----/----\----;
                      LDA.W !MainPalette+$1A,X            ;;AF79|----/----\----;
                      JSR CODE_00AFC0                     ;;AF7C|----/----\----;
                      LDA.B !_4                           ;;AF7F|----/----\----;
                      STA.W !CopyPalette+$1A,X            ;;AF81|----/----\----;
                      DEX                                 ;;AF84|----/----\----;
                      DEX                                 ;;AF85|----/----\----;
                      BPL -                               ;;AF86|----/----\----;
                      LDA.W !BackgroundColor              ;;AF88|----/----\----;
                      STA.B !_2                           ;;AF8B|----/----\----;
                      LDA.W !CopyBGColor                  ;;AF8D|----/----\----;
                      JSR CODE_00AFC0                     ;;AF90|----/----\----;
                      LDA.B !_4                           ;;AF93|----/----\----;
                      STA.W !BackgroundColor              ;;AF95|----/----\----;
                      SEP #$30                            ;;AF98|----/----\----; Index (8 bit) Accum (8 bit) 
                      STZ.W !CopyPalette+$100             ;;AF9A|----/----\----;
                      LDA.B #$03                          ;;AF9D|----/----\----;
                      STA.W !PaletteIndexTable            ;;AF9F|----/----\----;
Return00AFA2:         RTS                                 ;;AFA2|----/----\----; Return 
                                                          ;;                   ;
CODE_00AFA3:          TAY                                 ;;AFA3|----/----\----;
                      INC A                               ;;AFA4|----/----\----;
                      INC A                               ;;AFA5|----/----\----;
                      STA.W !ColorFadeTimer               ;;AFA6|----/----\----;
                      TYA                                 ;;AFA9|----/----\----;
                      LSR A                               ;;AFAA|----/----\----;
                      LSR A                               ;;AFAB|----/----\----;
                      LSR A                               ;;AFAC|----/----\----;
                      LSR A                               ;;AFAD|----/----\----;
                      REP #$30                            ;;AFAE|----/----\----; Index (16 bit) Accum (16 bit) 
                      AND.W #$0002                        ;;AFB0|----/----\----;
                      STA.B !_C                           ;;AFB3|----/----\----;
                      TYA                                 ;;AFB5|----/----\----;
                      AND.W #$001E                        ;;AFB6|----/----\----;
                      TAY                                 ;;AFB9|----/----\----;
                      LDA.W DATA_00AEF7,Y                 ;;AFBA|----/----\----;
                      STA.B !_E                           ;;AFBD|----/----\----;
                      RTS                                 ;;AFBF|----/----\----; Return 
                                                          ;;                   ;
CODE_00AFC0:          STA.B !_A                           ;;AFC0|----/----\----;
                      AND.W #$001F                        ;;AFC2|----/----\----;
                      ASL A                               ;;AFC5|----/----\----;
                      ASL A                               ;;AFC6|----/----\----;
                      STA.B !_6                           ;;AFC7|----/----\----;
                      LDA.B !_A                           ;;AFC9|----/----\----;
                      AND.W #$03E0                        ;;AFCB|----/----\----;
                      LSR A                               ;;AFCE|----/----\----;
                      LSR A                               ;;AFCF|----/----\----;
                      LSR A                               ;;AFD0|----/----\----;
                      STA.B !_8                           ;;AFD1|----/----\----;
                      LDA.B !_B                           ;;AFD3|----/----\----;
                      AND.W #$007C                        ;;AFD5|----/----\----;
                      STA.B !_A                           ;;AFD8|----/----\----;
                      STZ.B !_4                           ;;AFDA|----/----\----;
                      LDY.W #$0004                        ;;AFDC|----/----\----;
CODE_00AFDF:          PHY                                 ;;AFDF|----/----\----;
                      LDA.W !_6,Y                         ;;AFE0|----/----\----;
                      ORA.B !_C                           ;;AFE3|----/----\----;
                      TAY                                 ;;AFE5|----/----\----;
                      LDA.W DATA_00AE77,Y                 ;;AFE6|----/----\----;
                      PLY                                 ;;AFE9|----/----\----;
                      AND.B !_E                           ;;AFEA|----/----\----;
                      BEQ +                               ;;AFEC|----/----\----;
                      LDA.W DATA_00AE6B,Y                 ;;AFEE|----/----\----;
                      BIT.W !EndLevelTimer                ;;AFF1|----/----\----;
                      BPL +                               ;;AFF4|----/----\----;
                      LDA.W DATA_00AE71,Y                 ;;AFF6|----/----\----;
                    + CLC                                 ;;AFF9|----/----\----;
                      ADC.B !_2                           ;;AFFA|----/----\----;
                      AND.W DATA_00AE65,Y                 ;;AFFC|----/----\----;
                      TSB.B !_4                           ;;AFFF|----/----\----;
                      DEY                                 ;;B001|----/----\----;
                      DEY                                 ;;B002|----/----\----;
                      BPL CODE_00AFDF                     ;;B003|----/----\----;
                      RTS                                 ;;B005|----/----\----; Return 
                                                          ;;                   ;
CODE_00B006:          PHB                                 ;;B006|----/----\----;
                      PHK                                 ;;B007|----/----\----;
                      PLB                                 ;;B008|----/----\----;
                      JSR CODE_00AFA3                     ;;B009|----/----\----;
                      LDX.W #$006E                        ;;B00C|----/----\----;
CODE_00B00F:          LDY.W #$0008                        ;;B00F|----/----\----;
                    - LDA.W !CopyPalette+2,X              ;;B012|----/----\----;
                      STA.B !_2                           ;;B015|----/----\----;
                      LDA.W !MainPalette+$80,X            ;;B017|----/----\----;
                      PHY                                 ;;B01A|----/----\----;
                      JSR CODE_00AFC0                     ;;B01B|----/----\----;
                      PLY                                 ;;B01E|----/----\----;
                      LDA.B !_4                           ;;B01F|----/----\----;
                      STA.W !CopyPalette+2,X              ;;B021|----/----\----;
                      LDA.W !MainPalette+$80,X            ;;B024|----/----\----;
                      SEC                                 ;;B027|----/----\----;
                      SBC.B !_4                           ;;B028|----/----\----;
                      STA.W !CopyPalette+$74,X            ;;B02A|----/----\----;
                      DEX                                 ;;B02D|----/----\----;
                      DEX                                 ;;B02E|----/----\----;
                      DEY                                 ;;B02F|----/----\----;
                      BNE -                               ;;B030|----/----\----;
                      TXA                                 ;;B032|----/----\----;
                      SEC                                 ;;B033|----/----\----;
                      SBC.W #$0010                        ;;B034|----/----\----;
                      TAX                                 ;;B037|----/----\----;
                      BPL CODE_00B00F                     ;;B038|----/----\----;
                      SEP #$30                            ;;B03A|----/----\----; Index (8 bit) Accum (8 bit) 
                      PLB                                 ;;B03C|----/----\----;
                      RTL                                 ;;B03D|----/----\----; Return 
                                                          ;;                   ;
CODE_00B03E:          JSR CODE_00AF35                     ;;B03E|----/----\----;
                      LDA.W !PaletteIndexTable            ;;B041|----/----\----;
                      CMP.B #$03                          ;;B044|----/----\----;
                      BNE Return00B090                    ;;B046|----/----\----;
                      LDA.B #$00                          ;;B048|----/----\----;
                      STA.B !_2                           ;;B04A|----/----\----;
                      REP #$30                            ;;B04C|----/----\----; Index (16 bit) Accum (16 bit) 
                      LDA.W !PlayerPalletePtr             ;;B04E|----/----\----;
                      STA.B !_0                           ;;B051|----/----\----;
                      LDY.W #$0014                        ;;B053|----/----\----;
                    - LDA.B [!_0],Y                       ;;B056|----/----\----;
                      STA.W !CopyPalette+$10C,Y           ;;B058|----/----\----;
                      DEY                                 ;;B05B|----/----\----;
                      DEY                                 ;;B05C|----/----\----;
                      BPL -                               ;;B05D|----/----\----;
                      LDA.W #$81EE                        ;;B05F|----/----\----;
                      STA.W !CopyPalette+$100             ;;B062|----/----\----;
                      LDX.W #$00CE                        ;;B065|----/----\----;
CODE_00B068:          LDA.W #$0007                        ;;B068|----/----\----;
                      STA.B !_0                           ;;B06B|----/----\----;
                    - LDA.W !CopyPalette+$120,X           ;;B06D|----/----\----;
                      STA.B !_2                           ;;B070|----/----\----;
                      LDA.W !MainPalette+$120,X           ;;B072|----/----\----;
                      JSR CODE_00AFC0                     ;;B075|----/----\----;
                      LDA.B !_4                           ;;B078|----/----\----;
                      STA.W !CopyPalette+$120,X           ;;B07A|----/----\----;
                      DEX                                 ;;B07D|----/----\----;
                      DEX                                 ;;B07E|----/----\----;
                      DEC.B !_0                           ;;B07F|----/----\----;
                      BNE -                               ;;B081|----/----\----;
                      TXA                                 ;;B083|----/----\----;
                      SEC                                 ;;B084|----/----\----;
                      SBC.W #$0012                        ;;B085|----/----\----;
                      TAX                                 ;;B088|----/----\----;
                      BPL CODE_00B068                     ;;B089|----/----\----;
                      SEP #$30                            ;;B08B|----/----\----; Index (8 bit) Accum (8 bit) 
                      STZ.W !Empty0AF5                    ;;B08D|----/----\----;
Return00B090:         RTS                                 ;;B090|----/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
                      db $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF  ;;B091|----/----\----;
                      db $FF,$FF,$FF,$FF,$FF,$FF,$FF      ;;B099|----/----\----;
                                                          ;;                   ;
Palettes_:            db $9F,$5B,$FB,$6F,$80,$5D,$00,$00  ;;B0A0|----/----\----;
                      db $22,$1D,$C3,$24,$93,$73,$FF,$7F  ;;B0A8|----/----\----;
                      db $49,$3A,$8B,$42,$CD,$4A,$0F,$53  ;;B0B0|----/----\----;
                      db $51,$5B,$93,$63,$FF,$7F,$00,$00  ;;B0B8|----/----\----;
                      db $20,$7F,$80,$7F,$E0,$7F,$E0,$7F  ;;B0C0|----/----\----;
                      db $42,$39,$08,$52,$CE,$6A,$12,$63  ;;B0C8|----/----\----;
                      db $55,$6B,$98,$73,$42,$39,$08,$52  ;;B0D0|----/----\----;
                      db $CE,$6A,$42,$39,$08,$52,$CE,$6A  ;;B0D8|----/----\----;
                      db $D6,$4E,$18,$57,$5A,$5F,$9C,$67  ;;B0E0|----/----\----;
                      db $DE,$6F,$FF,$77,$FF,$7F,$00,$00  ;;B0E8|----/----\----;
                      db $20,$7F,$80,$7F,$E0,$7F,$E0,$7F  ;;B0F0|----/----\----;
                      db $A3,$20,$48,$31,$AC,$3D,$CE,$39  ;;B0F8|----/----\----;
                      db $32,$3E,$B6,$4A,$A2,$20,$25,$2D  ;;B100|----/----\----;
                      db $68,$35,$8A,$35,$E4,$24,$52,$4A  ;;B108|----/----\----;
                      db $C8,$50,$CC,$59,$6D,$52,$EB,$58  ;;B110|----/----\----;
                      db $4C,$65,$D0,$5A,$80,$5D,$39,$7F  ;;B118|----/----\----;
                      db $93,$7E,$A8,$65,$48,$56,$28,$57  ;;B120|----/----\----;
                      db $62,$14,$46,$35,$A9,$45,$0D,$52  ;;B128|----/----\----;
                      db $B1,$62,$77,$7B,$00,$00,$1E,$7B  ;;B130|----/----\----;
                      db $9F,$7B,$99,$7F,$F6,$7F,$FC,$7F  ;;B138|----/----\----;
                      db $00,$00,$C5,$24,$49,$2D,$AD,$2D  ;;B140|----/----\----;
                      db $53,$22,$18,$3F,$60,$10,$81,$18  ;;B148|----/----\----;
                      db $A3,$1C,$E4,$1C,$09,$29,$4B,$25  ;;B150|----/----\----;
                      db $60,$09,$A4,$01,$E8,$01,$2C,$02  ;;B158|----/----\----;
                      db $91,$02,$F5,$02,$FF,$7F,$00,$00  ;;B160|----/----\----;
                      db $E0,$7E,$20,$7F,$80,$7F,$E0,$7F  ;;B168|----/----\----;
                      db $93,$73,$00,$00,$FB,$0C,$EB,$2F  ;;B170|----/----\----;
                      db $93,$73,$00,$00,$DD,$7F,$7F,$2D  ;;B178|----/----\----;
                      db $93,$73,$00,$00,$AB,$7A,$FF,$7F  ;;B180|----/----\----;
                      db $93,$73,$00,$00,$9B,$1E,$7F,$3B  ;;B188|----/----\----;
                      db $00,$00,$AF,$0D,$79,$2E,$E0,$25  ;;B190|----/----\----;
                      db $1C,$2B,$20,$03,$00,$00,$6B,$2D  ;;B198|----/----\----;
                      db $EF,$3D,$73,$4E,$18,$63,$9C,$73  ;;B1A0|----/----\----;
                      db $00,$00,$E9,$00,$0D,$22,$8E,$05  ;;B1A8|----/----\----;
                      db $33,$1A,$B7,$32,$00,$00,$E0,$2D  ;;B1B0|----/----\----;
                      db $E0,$52,$7F,$15,$5F,$32,$3F,$4B  ;;B1B8|----/----\----;
                      db $00,$00,$C8,$59,$CE,$72,$CB,$39  ;;B1C0|----/----\----;
                      db $30,$3E,$B3,$4A,$00,$00,$16,$00  ;;B1C8|----/----\----;
                      db $1B,$00,$5F,$01,$1F,$02,$1F,$03  ;;B1D0|----/----\----;
                      db $00,$00,$EC,$49,$4F,$52,$B2,$5A  ;;B1D8|----/----\----;
                      db $15,$67,$DB,$7F,$00,$00,$16,$00  ;;B1E0|----/----\----;
                      db $1B,$00,$5F,$01,$1F,$02,$1F,$03  ;;B1E8|----/----\----;
                      db $00,$00,$C9,$08,$4E,$19,$D3,$29  ;;B1F0|----/----\----;
                      db $78,$3E,$1D,$53,$00,$00,$C8,$14  ;;B1F8|----/----\----;
                      db $09,$1D,$6C,$29,$CF,$35,$32,$42  ;;B200|----/----\----;
                      db $EF,$55,$B5,$6E,$F7,$76,$39,$7F  ;;B208|----/----\----;
                      db $7B,$7F,$BD,$7F,$00,$00,$C9,$2C  ;;B210|----/----\----;
                      db $4E,$41,$D3,$55,$78,$6E,$1D,$7F  ;;B218|----/----\----;
                      db $00,$00,$E9,$01,$AC,$02,$2F,$03  ;;B220|----/----\----;
                      db $99,$03,$FE,$53,$00,$00,$00,$00  ;;B228|----/----\----;
                      db $00,$00,$8F,$3C,$D8,$61,$7F,$7E  ;;B230|----/----\----;
                      db $00,$00,$C5,$24,$49,$2D,$AD,$2D  ;;B238|----/----\----;
                      db $53,$22,$18,$3F,$00,$00,$16,$00  ;;B240|----/----\----;
                      db $1B,$00,$5F,$01,$1F,$02,$1F,$03  ;;B248|----/----\----;
                      db $CE,$39,$00,$00,$18,$63,$34,$7F  ;;B250|----/----\----;
                      db $95,$7F,$F8,$7F,$00,$00,$B7,$32  ;;B258|----/----\----;
                      db $FB,$67,$00,$02,$20,$03,$E0,$03  ;;B260|----/----\----;
                      db $00,$00,$71,$0D,$3F,$7C,$9B,$1E  ;;B268|----/----\----;
                      db $7F,$13,$FF,$03,$00,$00,$17,$28  ;;B270|----/----\----;
                      db $1F,$40,$29,$45,$AD,$59,$10,$66  ;;B278|----/----\----;
                      db $00,$00,$71,$0D,$9B,$1E,$7F,$3B  ;;B280|----/----\----;
                      db $FF,$7F,$FF,$7F,$00,$00,$CE,$39  ;;B288|----/----\----;
                      db $94,$52,$18,$63,$9C,$73,$5F,$2C  ;;B290|----/----\----;
                      db $00,$00,$FF,$01,$1F,$03,$FF,$03  ;;B298|----/----\----;
                      db $B7,$00,$3F,$02,$00,$00,$08,$6D  ;;B2A0|----/----\----;
                      db $AD,$6D,$31,$7E,$B7,$00,$3F,$02  ;;B2A8|----/----\----;
                      db $00,$00,$11,$00,$17,$00,$1F,$00  ;;B2B0|----/----\----;
                      db $B7,$00,$3F,$02,$00,$00,$E0,$01  ;;B2B8|----/----\----;
                      db $E0,$02,$E0,$03,$B7,$00,$3F,$02  ;;B2C0|----/----\----;
                      db $5F,$63,$1D,$58,$0A,$00,$1F,$39  ;;B2C8|----/----\----;
                      db $C4,$44,$08,$4E,$70,$67,$B6,$30  ;;B2D0|----/----\----;
                      db $DF,$35,$FF,$03,$3F,$4F,$1D,$58  ;;B2D8|----/----\----;
                      db $40,$11,$E0,$3F,$07,$3C,$AE,$7C  ;;B2E0|----/----\----;
                      db $B3,$7D,$00,$2F,$5F,$16,$FF,$03  ;;B2E8|----/----\----;
                      db $5F,$63,$1D,$58,$29,$25,$FF,$7F  ;;B2F0|----/----\----;
                      db $08,$00,$17,$00,$1F,$00,$7B,$57  ;;B2F8|----/----\----;
                      db $DF,$0D,$FF,$03,$1F,$3B,$1D,$58  ;;B300|----/----\----;
                      db $29,$25,$FF,$7F,$40,$11,$E0,$01  ;;B308|----/----\----;
                      db $E0,$02,$7B,$57,$DF,$0D,$FF,$03  ;;B310|----/----\----;
                      db $00,$00,$C5,$24,$49,$2D,$AD,$2D  ;;B318|----/----\----;
                      db $53,$22,$18,$3F,$23,$25,$C4,$35  ;;B320|----/----\----;
                      db $25,$3E,$86,$46,$E7,$4E,$1F,$40  ;;B328|----/----\----;
                      db $00,$00,$C6,$41,$54,$73,$FA,$7F  ;;B330|----/----\----;
                      db $FD,$7F,$08,$6D,$00,$00,$34,$34  ;;B338|----/----\----;
                      db $3A,$44,$9F,$65,$16,$01,$7F,$02  ;;B340|----/----\----;
                      db $00,$00,$C5,$24,$49,$2D,$AD,$2D  ;;B348|----/----\----;
                      db $53,$22,$18,$3F,$00,$00,$AE,$2D  ;;B350|----/----\----;
                      db $32,$3E,$B6,$4A,$F9,$52,$F3,$2C  ;;B358|----/----\----;
                      db $00,$00,$6B,$51,$6D,$4E,$B3,$4F  ;;B360|----/----\----;
                      db $BF,$30,$1D,$37,$32,$2E,$0D,$4A  ;;B368|----/----\----;
                      db $88,$10,$4A,$21,$6D,$29,$CF,$3D  ;;B370|----/----\----;
                      db $00,$00,$40,$29,$E0,$3D,$80,$52  ;;B378|----/----\----;
                      db $B7,$00,$3F,$02,$00,$00,$CE,$39  ;;B380|----/----\----;
                      db $94,$52,$18,$63,$B7,$00,$3F,$02  ;;B388|----/----\----;
                      db $00,$00,$70,$7E,$D3,$7E,$36,$7F  ;;B390|----/----\----;
                      db $99,$7F,$1F,$40,$00,$00,$CE,$39  ;;B398|----/----\----;
                      db $94,$52,$18,$63,$9C,$73,$5F,$2C  ;;B3A0|----/----\----;
                      db $00,$00,$DF,$4E,$DE,$5A,$BD,$66  ;;B3A8|----/----\----;
                      db $7C,$72,$1F,$40,$00,$00,$F5,$7F  ;;B3B0|----/----\----;
                      db $F7,$7F,$F9,$7F,$FC,$7F,$FF,$7F  ;;B3B8|----/----\----;
BowserEndPalette:     db $00,$00,$FB,$63,$0C,$03,$0B,$02  ;;B3C0|----/----\----;
                      db $35,$15,$5F,$1A                  ;;B3C8|----/----\----;
                                                          ;;                   ;
DATA_00B3CC:          db $00,$00,$34,$34,$3A,$44,$9F,$65  ;;B3CC|----/----\----;
                      db $16,$01,$7F,$02,$00,$00,$28,$12  ;;B3D4|----/----\----;
                      db $A8,$12,$48,$13,$7B,$32,$BF,$5B  ;;B3DC|----/----\----;
                      db $60,$7D,$00,$00,$DE,$7B,$48,$13  ;;B3E4|----/----\----;
                      db $60,$7D,$7B,$32,$BF,$37,$7F,$2D  ;;B3EC|----/----\----;
                      db $00,$00,$68,$32,$E8,$32,$48,$13  ;;B3F4|----/----\----;
                      db $FF,$5E,$7F,$6F,$60,$7D,$00,$00  ;;B3FC|----/----\----;
                      db $DE,$7B,$3B,$57,$A0,$7E,$F6,$01  ;;B404|----/----\----;
                      db $A8,$12,$48,$13,$00,$00,$28,$12  ;;B40C|----/----\----;
                      db $A8,$12,$48,$13,$7B,$32,$BF,$5B  ;;B414|----/----\----;
                      db $28,$7E,$00,$00,$DE,$7B,$48,$13  ;;B41C|----/----\----;
                      db $28,$7E,$7B,$32,$BF,$37,$FF,$03  ;;B424|----/----\----;
                      db $00,$00,$12,$32,$75,$3E,$3B,$57  ;;B42C|----/----\----;
                      db $7B,$32,$BF,$5B,$28,$7E,$00,$00  ;;B434|----/----\----;
                      db $DE,$7B,$3B,$57,$28,$7E,$7B,$32  ;;B43C|----/----\----;
                      db $C4,$38,$48,$13,$C7,$2C,$F0,$69  ;;B444|----/----\----;
                      db $B2,$66,$D5,$67,$34,$66,$DE,$53  ;;B44C|----/----\----;
                      db $FF,$7F,$C7,$2C,$60,$45,$80,$66  ;;B454|----/----\----;
                      db $F7,$7F,$1F,$03,$7F,$03,$FF,$47  ;;B45C|----/----\----;
                      db $2C,$41,$F0,$69,$B2,$66,$D5,$67  ;;B464|----/----\----;
                      db $1F,$00,$FF,$7F,$C7,$2C,$C7,$2C  ;;B46C|----/----\----;
                      db $F0,$69,$B2,$66,$D5,$67,$2C,$41  ;;B474|----/----\----;
                      db $D5,$3A,$9C,$5B,$00,$00,$EC,$49  ;;B47C|----/----\----;
                      db $2E,$56,$F1,$62,$26,$31,$BF,$5B  ;;B484|----/----\----;
                      db $00,$00,$00,$00,$DE,$7B,$95,$57  ;;B48C|----/----\----;
                      db $28,$7E,$26,$31,$BF,$37,$7F,$2D  ;;B494|----/----\----;
                      db $00,$00,$26,$31,$89,$3D,$EC,$49  ;;B49C|----/----\----;
                      db $26,$31,$BF,$5B,$28,$7E,$00,$00  ;;B4A4|----/----\----;
                      db $DE,$7B,$3B,$57,$C6,$32,$26,$31  ;;B4AC|----/----\----;
                      db $7F,$03,$7F,$03,$00,$00,$05,$1A  ;;B4B4|----/----\----;
                      db $C5,$0A,$EF,$22,$75,$1A,$59,$43  ;;B4BC|----/----\----;
                      db $60,$7D,$00,$00,$39,$77,$EF,$22  ;;B4C4|----/----\----;
                      db $60,$7D,$18,$1E,$5C,$37,$09,$7E  ;;B4CC|----/----\----;
                      db $00,$00,$60,$36,$20,$4B,$EF,$22  ;;B4D4|----/----\----;
                      db $5A,$4E,$3A,$53,$60,$7D,$00,$00  ;;B4DC|----/----\----;
                      db $7B,$32,$EF,$22,$19,$21,$F6,$01  ;;B4E4|----/----\----;
                      db $E6,$2D,$A8,$36,$C7,$2C,$F0,$69  ;;B4EC|----/----\----;
                      db $00,$00,$00,$00,$34,$66,$F9,$7F  ;;B4F4|----/----\----;
                      db $FF,$7F,$00,$00,$60,$45,$80,$66  ;;B4FC|----/----\----;
                      db $F7,$7F,$1F,$03,$7F,$03,$FF,$47  ;;B504|----/----\----;
                      db $2C,$41,$F0,$69,$B2,$66,$D5,$67  ;;B50C|----/----\----;
                      db $1F,$00,$FF,$7F,$C7,$2C,$C7,$2C  ;;B514|----/----\----;
                      db $F0,$69,$B2,$66,$D5,$67,$2C,$41  ;;B51C|----/----\----;
                      db $D5,$3A,$9C,$5B,$00,$00,$E7,$2C  ;;B524|----/----\----;
                      db $6B,$3D,$EF,$4D,$73,$5E,$F7,$6E  ;;B52C|----/----\----;
                      db $FF,$7F,$F1,$7F,$BF,$01,$00,$7E  ;;B534|----/----\----;
                      db $BF,$03,$E0,$03,$FC,$7F,$FF,$7F  ;;B53C|----/----\----;
                      db $00,$00,$4F,$19,$78,$3E,$3E,$57  ;;B544|----/----\----;
                      db $20,$7E,$E0,$7E,$E0,$7F,$00,$00  ;;B54C|----/----\----;
                      db $31,$52,$F6,$66,$9C,$7B,$85,$16  ;;B554|----/----\----;
                      db $4B,$2F,$F1,$47,$00,$00,$4F,$19  ;;B55C|----/----\----;
                      db $78,$3E,$3E,$57,$FF,$03,$DE,$7B  ;;B564|----/----\----;
                      db $1F,$7C,$00,$00,$4F,$19,$78,$3E  ;;B56C|----/----\----;
                      db $3E,$57,$7F,$2D,$4B,$2F,$F1,$47  ;;B574|----/----\----;
                      db $FF,$7F,$00,$00,$71,$0D,$7F,$03  ;;B57C|----/----\----;
                      db $FF,$4F,$3F,$4F,$E0,$7F,$FF,$7F  ;;B584|----/----\----;
                      db $00,$00,$E0,$01,$AD,$7D,$80,$03  ;;B58C|----/----\----;
                      db $B7,$00,$3F,$02,$FF,$7F,$00,$00  ;;B594|----/----\----;
                      db $16,$00,$1F,$00,$08,$6D,$DD,$2D  ;;B59C|----/----\----;
                      db $5F,$63,$FF,$7F,$00,$00,$80,$02  ;;B5A4|----/----\----;
                      db $E0,$03,$08,$6D,$1A,$26,$3B,$57  ;;B5AC|----/----\----;
                      db $FF,$7F,$00,$00,$E0,$7E,$20,$7F  ;;B5B4|----/----\----;
                      db $80,$7F,$E0,$7F,$E0,$7F,$FF,$7F  ;;B5BC|----/----\----;
                      db $00,$00,$E0,$7E,$20,$7F,$80,$7F  ;;B5C4|----/----\----;
                      db $E0,$7F,$E0,$7F,$00,$00,$1B,$00  ;;B5CC|----/----\----;
                      db $2D,$46,$F3,$5E,$85,$16,$4B,$2F  ;;B5D4|----/----\----;
                      db $F1,$47                          ;;B5DC|----/----\----;
                                                          ;;                   ;
DATA_00B5DE:          db $00,$00,$E7,$2C,$6B,$3D,$EF,$4D  ;;B5DE|----/----\----;
                      db $73,$5E,$F7,$6E,$FF,$7F,$93,$73  ;;B5E6|----/----\----;
                      db $00,$00,$FF,$03,$3B,$57,$93,$73  ;;B5EE|----/----\----;
                      db $75,$3E,$12,$32,$AF,$25,$93,$73  ;;B5F6|----/----\----;
                      db $3B,$57,$FF,$7F,$00,$00,$93,$73  ;;B5FE|----/----\----;
                      db $00,$00,$3B,$57,$6C,$7E          ;;B606|----/----\----;
                                                          ;;                   ;
MorePalettes:         db $DF                              ;;B60C|----/----\----;
                                                          ;;                   ;
DATA_00B60D:          db $02,$5F,$03,$FF,$27,$FF,$5F,$FF  ;;B60D|----/----\----;
                      db $73,$FF,$5F,$FF,$27,$5F,$03,$BF  ;;B615|----/----\----;
                      db $01,$1F,$00,$1B,$00,$18,$00,$18  ;;B61D|----/----\----;
                      db $00,$1B,$00,$1F,$00,$BF,$01,$7F  ;;B625|----/----\----;
                      db $43,$00,$00,$60,$7F,$3F,$17,$7F  ;;B62D|----/----\----;
                      db $43,$00,$00,$FF,$1C,$20,$03,$7F  ;;B635|----/----\----;
                      db $43,$00,$00,$20,$03,$60,$7F,$7F  ;;B63D|----/----\----;
                      db $43,$BF,$5B,$7B,$32,$E7,$08,$00  ;;B645|----/----\----;
                      db $7E,$20,$7E,$A0,$7E,$E0,$7E,$20  ;;B64D|----/----\----;
                      db $7F,$80,$7F,$E0,$7F,$E0,$7F,$00  ;;B655|----/----\----;
                      db $00,$E0,$1C,$E8,$3D,$F0,$5E,$F8  ;;B65D|----/----\----;
                      db $7F,$FF,$7F,$85,$16,$4B,$2F      ;;B665|----/----\----;
                                                          ;;                   ;
DATA_00B66C:          db $93,$73,$00,$00,$71,$0D,$9B,$1E  ;;B66C|----/----\----;
                      db $FF,$7F,$00,$00,$20,$03,$16,$00  ;;B674|----/----\----;
                      db $1F,$00,$7F,$01,$9F,$02,$FF,$7F  ;;B67C|----/----\----;
                      db $00,$00,$20,$03,$7D,$34,$1E,$55  ;;B684|----/----\----;
                      db $FF,$65,$1F,$7B,$FF,$7F,$00,$00  ;;B68C|----/----\----;
                      db $20,$03,$80,$03,$F1,$1F,$F9,$03  ;;B694|----/----\----;
                      db $FF,$4F                          ;;B69C|----/----\----;
                                                          ;;                   ;
DATA_00B69E:          db $FF,$7F,$C0,$18,$FB,$63,$0C,$03  ;;B69E|----/----\----;
                      db $0B,$02,$35,$15,$5F,$1A,$9B,$77  ;;B6A6|----/----\----;
                      db $60,$18,$97,$5B,$A8,$02,$A7,$01  ;;B6AE|----/----\----;
                      db $D1,$0C,$FB,$11,$37,$6F,$00,$18  ;;B6B6|----/----\----;
                      db $33,$53,$45,$02,$43,$01,$6E,$04  ;;B6BE|----/----\----;
                      db $97,$09,$D3,$66,$00,$10,$CF,$4A  ;;B6C6|----/----\----;
                      db $E1,$01,$E0,$00,$0A,$00,$33,$01  ;;B6CE|----/----\----;
                      db $6F,$5E,$00,$00,$6B,$42,$80,$01  ;;B6D6|----/----\----;
                      db $80,$00,$06,$00,$CF,$00,$0B,$56  ;;B6DE|----/----\----;
                      db $00,$00,$07,$3A,$20,$01,$20,$00  ;;B6E6|----/----\----;
                      db $02,$00,$6B,$00,$A7,$4D,$00,$00  ;;B6EE|----/----\----;
                      db $A3,$31,$C0,$00,$00,$00,$00,$00  ;;B6F6|----/----\----;
                      db $07,$00,$43,$45,$00,$00,$40,$29  ;;B6FE|----/----\----;
                      db $60,$00,$00,$00,$00,$00,$03,$00  ;;B706|----/----\----;
TheEndPalettes:       db $C4,$44,$20,$03,$DF,$4A,$00,$02  ;;B70E|----/----\----;
                      db $3B,$01,$08,$4E                  ;;B716|----/----\----;
                                                          ;;                   ;
DATA_00B71A:          db $C4,$44,$1F,$39,$DF,$4A,$74,$28  ;;B71A|----/----\----;
                      db $3F,$01,$08,$4E                  ;;B722|----/----\----;
                                                          ;;                   ;
DATA_00B726:          db $D2,$28,$1E,$55,$5F,$63,$1F,$7B  ;;B726|----/----\----;
                      db $FB,$01,$DE,$02,$00,$00,$33,$15  ;;B72E|----/----\----;
                      db $B7,$25,$3B,$36,$AF,$25,$BF,$5B  ;;B736|----/----\----;
                      db $C6,$5A,$00,$00,$DE,$7B,$3B,$36  ;;B73E|----/----\----;
                      db $C6,$5A,$AF,$25,$BF,$37,$7F,$2D  ;;B746|----/----\----;
                      db $00,$00,$33,$15,$B7,$25,$3B,$36  ;;B74E|----/----\----;
                      db $FF,$5E,$7F,$6F,$C6,$5A,$00,$00  ;;B756|----/----\----;
                      db $DE,$7B,$3B,$57,$C6,$5A,$AF,$25  ;;B75E|----/----\----;
                      db $A8,$12,$48,$13,$00,$00,$B7,$25  ;;B766|----/----\----;
                      db $3B,$36,$BF,$46,$AF,$25,$5F,$5B  ;;B76E|----/----\----;
                      db $C6,$5A,$00,$00,$DE,$7B,$BF,$46  ;;B776|----/----\----;
                      db $C6,$5A,$AF,$25,$BF,$37,$FF,$03  ;;B77E|----/----\----;
                      db $00,$00,$85,$16,$4B,$2F,$F1,$47  ;;B786|----/----\----;
                      db $AF,$25,$5F,$5B,$C6,$5A,$00,$00  ;;B78E|----/----\----;
                      db $DE,$7B,$3B,$57,$C6,$5A,$AF,$25  ;;B796|----/----\----;
                      db $C4,$38,$48,$13,$E7,$1C,$F3,$19  ;;B79E|----/----\----;
                      db $B9,$32,$7F,$4B,$10,$76,$B9,$2E  ;;B7A6|----/----\----;
                      db $FF,$7F,$E7,$1C,$60,$45,$80,$66  ;;B7AE|----/----\----;
                      db $F7,$7F,$1F,$03,$7F,$03,$FF,$47  ;;B7B6|----/----\----;
                      db $E7,$1C,$F3,$19,$B9,$32,$7F,$4B  ;;B7BE|----/----\----;
                      db $1F,$00,$FF,$7F,$E7,$1C,$E7,$1C  ;;B7C6|----/----\----;
                      db $F3,$19,$B9,$32,$7F,$4B,$C6,$58  ;;B7CE|----/----\----;
                      db $D5,$3A,$9C,$5B,$00,$00,$6D,$1D  ;;B7D6|----/----\----;
                      db $D0,$29,$33,$36,$6B,$2D,$F9,$4E  ;;B7DE|----/----\----;
                      db $00,$00,$00,$00,$DE,$7B,$33,$36  ;;B7E6|----/----\----;
                      db $82,$30,$6B,$2D,$BF,$37,$7F,$2D  ;;B7EE|----/----\----;
                      db $00,$00,$A7,$00,$2B,$15,$8E,$21  ;;B7F6|----/----\----;
                      db $6B,$2D,$F9,$4E,$82,$30,$00,$00  ;;B7FE|----/----\----;
                      db $DE,$7B,$F9,$4E,$82,$30,$6B,$2D  ;;B806|----/----\----;
                      db $82,$30,$48,$13,$00,$00,$71,$21  ;;B80E|----/----\----;
                      db $F5,$31,$79,$32,$F6,$41,$3B,$57  ;;B816|----/----\----;
                      db $60,$7D,$00,$00,$39,$77,$79,$32  ;;B81E|----/----\----;
                      db $60,$7D,$18,$1E,$5C,$37,$09,$7E  ;;B826|----/----\----;
                      db $00,$00,$60,$36,$20,$4B,$EF,$22  ;;B82E|----/----\----;
                      db $7A,$52,$3A,$53,$60,$7D,$00,$00  ;;B836|----/----\----;
                      db $8E,$21,$79,$32,$19,$21,$75,$3E  ;;B83E|----/----\----;
                      db $35,$11,$98,$1D,$C7,$2C,$F0,$69  ;;B846|----/----\----;
                      db $00,$00,$00,$00,$34,$66,$F9,$7F  ;;B84E|----/----\----;
                      db $FF,$7F,$00,$00,$60,$45,$80,$66  ;;B856|----/----\----;
                      db $F7,$7F,$1F,$03,$7F,$03,$FF,$47  ;;B85E|----/----\----;
                      db $2C,$41,$F0,$69,$B2,$66,$D5,$67  ;;B866|----/----\----;
                      db $1F,$00,$FF,$7F,$C7,$2C,$C7,$2C  ;;B86E|----/----\----;
                      db $F0,$69,$B2,$66,$D5,$67,$2C,$41  ;;B876|----/----\----;
                      db $D5,$3A,$9C,$5B,$C0,$BF,$08,$00  ;;B87E|----/----\----;
                      db $80,$08                          ;;B886|----/----\----;
                                                          ;;                   ;
CODE_00B888:          REP #$10                            ;;B888|----/----\----; Index (16 bit) 
                      LDY.W #GFX33                        ;;B88A|----/----\----; \  
                      STY.B !GraphicsCompPtr              ;;B88D|----/----\----;  |Store the address 08/BFC0 at $8A-$8C 
                      LDA.B #GFX33>>16&$7F                ;;B88F|----/----\----;  | 
                      STA.B !GraphicsCompPtr+2            ;;B891|----/----\----; /  
                      LDY.W #!MarioGraphics               ;;B893|----/----\----; \  
                      STY.B !_0                           ;;B896|----/----\----;  |Store the address 7E/2000 at $00-$02 
                      LDA.B #!MarioGraphics>>16&$7F       ;;B898|----/----\----;  | 
                      STA.B !_2                           ;;B89A|----/----\----; /  
                      JSR CODE_00B8DE                     ;;B89C|----/----\----;
                      LDA.B #!MarioGraphics>>16&$7F       ;;B89F|----/----\----; \  
                      STA.B !GraphicsUncompPtr+2          ;;B8A1|----/----\----;  | 
                      REP #$30                            ;;B8A3|----/----\----;  |Store the address 7E/ACFE at $8D-$8F ; Index (16 bit) Accum (16 bit) 
                      LDA.W #!MarioGraphics+$8CFE         ;;B8A5|----/----\----;  | 
                      STA.B !GraphicsUncompPtr            ;;B8A8|----/----\----; /  
                      LDX.W #$23FF                        ;;B8AA|----/----\----;
CODE_00B8AD:          LDY.W #$0008                        ;;B8AD|----/----\----;
                    - LDA.L !MarioGraphics,X              ;;B8B0|----/----\----;
                      AND.W #$00FF                        ;;B8B4|----/----\----;
                      STA.B [!GraphicsUncompPtr]          ;;B8B7|----/----\----;
                      DEX                                 ;;B8B9|----/----\----;
                      DEC.B !GraphicsUncompPtr            ;;B8BA|----/----\----;
                      DEC.B !GraphicsUncompPtr            ;;B8BC|----/----\----;
                      DEY                                 ;;B8BE|----/----\----;
                      BNE -                               ;;B8BF|----/----\----;
                      LDY.W #$0008                        ;;B8C1|----/----\----;
CODE_00B8C4:          DEX                                 ;;B8C4|----/----\----;
                      LDA.L !MarioGraphics,X              ;;B8C5|----/----\----;
                      STA.B [!GraphicsUncompPtr]          ;;B8C9|----/----\----;
                      DEX                                 ;;B8CB|----/----\----;
                      BMI CODE_00B8D7                     ;;B8CC|----/----\----;
                      DEC.B !GraphicsUncompPtr            ;;B8CE|----/----\----;
                      DEC.B !GraphicsUncompPtr            ;;B8D0|----/----\----;
                      DEY                                 ;;B8D2|----/----\----;
                      BNE CODE_00B8C4                     ;;B8D3|----/----\----;
                      BRA CODE_00B8AD                     ;;B8D5|----/----\----;
                                                          ;;                   ;
CODE_00B8D7:          LDA.W #$8000                        ;;B8D7|----/----\----;
                      STA.B !GraphicsCompPtr              ;;B8DA|----/----\----;
                      SEP #$20                            ;;B8DC|----/----\----; Accum (8 bit) 
CODE_00B8DE:          REP #$10                            ;;B8DE|----/----\----; Index (16 bit) 
                      LDY.W #$0000                        ;;B8E0|----/----\----; \  
CODE_00B8E3:          JSR ReadByte                        ;;B8E3|----/----\----;  | 
                      CMP.B #$FF                          ;;B8E6|----/----\----;  |If the next byte is xFF, return. 
                      BNE +                               ;;B8E8|----/----\----;  |Compressed graphics files ends with xFF IIRC 
                      SEP #$10                            ;;B8EA|----/----\----;  | ; Index (8 bit) 
                      RTS                                 ;;B8EC|----/----\----; /  
                                                          ;;                   ;
                    + STA.B !GraphicsUncompPtr+2          ;;B8ED|----/----\----;
                      AND.B #$E0                          ;;B8EF|----/----\----;
                      CMP.B #$E0                          ;;B8F1|----/----\----;
                      BEQ CODE_00B8FF                     ;;B8F3|----/----\----;
                      PHA                                 ;;B8F5|----/----\----;
                      LDA.B !GraphicsUncompPtr+2          ;;B8F6|----/----\----;
                      REP #$20                            ;;B8F8|----/----\----; Accum (16 bit) 
                      AND.W #$001F                        ;;B8FA|----/----\----;
                      BRA +                               ;;B8FD|----/----\----;
                                                          ;;                   ;
CODE_00B8FF:          LDA.B !GraphicsUncompPtr+2          ;;B8FF|----/----\----; Accum (8 bit) 
                      ASL A                               ;;B901|----/----\----;
                      ASL A                               ;;B902|----/----\----;
                      ASL A                               ;;B903|----/----\----;
                      AND.B #$E0                          ;;B904|----/----\----;
                      PHA                                 ;;B906|----/----\----;
                      LDA.B !GraphicsUncompPtr+2          ;;B907|----/----\----;
                      AND.B #$03                          ;;B909|----/----\----;
                      XBA                                 ;;B90B|----/----\----;
                      JSR ReadByte                        ;;B90C|----/----\----;
                      REP #$20                            ;;B90F|----/----\----; Accum (16 bit) 
                    + INC A                               ;;B911|----/----\----;
                      STA.B !GraphicsUncompPtr            ;;B912|----/----\----;
                      SEP #$20                            ;;B914|----/----\----; Accum (8 bit) 
                      PLA                                 ;;B916|----/----\----;
                      BEQ CODE_00B930                     ;;B917|----/----\----;
                      BMI CODE_00B966                     ;;B919|----/----\----;
                      ASL A                               ;;B91B|----/----\----;
                      BPL CODE_00B93F                     ;;B91C|----/----\----;
                      ASL A                               ;;B91E|----/----\----;
                      BPL CODE_00B94C                     ;;B91F|----/----\----;
                      JSR ReadByte                        ;;B921|----/----\----;
                      LDX.B !GraphicsUncompPtr            ;;B924|----/----\----;
                    - STA.B [!_0],Y                       ;;B926|----/----\----;
                      INC A                               ;;B928|----/----\----;
                      INY                                 ;;B929|----/----\----;
                      DEX                                 ;;B92A|----/----\----;
                      BNE -                               ;;B92B|----/----\----;
                      JMP CODE_00B8E3                     ;;B92D|----/----\----;
                                                          ;;                   ;
CODE_00B930:          JSR ReadByte                        ;;B930|----/----\----;
                      STA.B [!_0],Y                       ;;B933|----/----\----;
                      INY                                 ;;B935|----/----\----;
                      LDX.B !GraphicsUncompPtr            ;;B936|----/----\----;
                      DEX                                 ;;B938|----/----\----;
                      STX.B !GraphicsUncompPtr            ;;B939|----/----\----;
                      BNE CODE_00B930                     ;;B93B|----/----\----;
                      BRA CODE_00B8E3                     ;;B93D|----/----\----;
                                                          ;;                   ;
CODE_00B93F:          JSR ReadByte                        ;;B93F|----/----\----;
                      LDX.B !GraphicsUncompPtr            ;;B942|----/----\----;
                    - STA.B [!_0],Y                       ;;B944|----/----\----;
                      INY                                 ;;B946|----/----\----;
                      DEX                                 ;;B947|----/----\----;
                      BNE -                               ;;B948|----/----\----;
                      BRA CODE_00B8E3                     ;;B94A|----/----\----;
                                                          ;;                   ;
CODE_00B94C:          JSR ReadByte                        ;;B94C|----/----\----;
                      XBA                                 ;;B94F|----/----\----;
                      JSR ReadByte                        ;;B950|----/----\----;
                      LDX.B !GraphicsUncompPtr            ;;B953|----/----\----;
CODE_00B955:          XBA                                 ;;B955|----/----\----;
                      STA.B [!_0],Y                       ;;B956|----/----\----;
                      INY                                 ;;B958|----/----\----;
                      DEX                                 ;;B959|----/----\----;
                      BEQ CODE_00B963                     ;;B95A|----/----\----;
                      XBA                                 ;;B95C|----/----\----;
                      STA.B [!_0],Y                       ;;B95D|----/----\----;
                      INY                                 ;;B95F|----/----\----;
                      DEX                                 ;;B960|----/----\----;
                      BNE CODE_00B955                     ;;B961|----/----\----;
CODE_00B963:          JMP CODE_00B8E3                     ;;B963|----/----\----;
                                                          ;;                   ;
CODE_00B966:          JSR ReadByte                        ;;B966|----/----\----;
                      XBA                                 ;;B969|----/----\----;
                      JSR ReadByte                        ;;B96A|----/----\----;
                      TAX                                 ;;B96D|----/----\----;
                    - PHY                                 ;;B96E|----/----\----;
                      TXY                                 ;;B96F|----/----\----;
                      LDA.B [!_0],Y                       ;;B970|----/----\----;
                      TYX                                 ;;B972|----/----\----;
                      PLY                                 ;;B973|----/----\----;
                      STA.B [!_0],Y                       ;;B974|----/----\----;
                      INY                                 ;;B976|----/----\----;
                      INX                                 ;;B977|----/----\----;
                      REP #$20                            ;;B978|----/----\----; Accum (16 bit) 
                      DEC.B !GraphicsUncompPtr            ;;B97A|----/----\----;
                      SEP #$20                            ;;B97C|----/----\----; Accum (8 bit) 
                      BNE -                               ;;B97E|----/----\----;
                      JMP CODE_00B8E3                     ;;B980|----/----\----;
                                                          ;;                   ;
ReadByte:             LDA.B [!GraphicsCompPtr]            ;;B983|----/----\----; Read the byte ; Index (16 bit) 
                      LDX.B !GraphicsCompPtr              ;;B985|----/----\----; \ Go to next byte 
                      INX                                 ;;B987|----/----\----;  | 
                      BNE +                               ;;B988|----/----\----;  |   \  
                      LDX.W #$8000                        ;;B98A|----/----\----;  |    |Handle bank crossing 
                      INC.B !GraphicsCompPtr+2            ;;B98D|----/----\----;  |   /  
                    + STX.B !GraphicsCompPtr              ;;B98F|----/----\----; /  
                      RTS                                 ;;B991|----/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
GFXFilesLow:          db GFX00                            ;;B992|----/----\----;
					  db GFX01                            ;;B993|----/----\----;
					  db GFX02                            ;;B994|----/----\----;
					  db GFX03                            ;;B995|----/----\----;
					  db GFX04                            ;;B996|----/----\----;
					  db GFX05                            ;;B997|----/----\----;
					  db GFX06                            ;;B998|----/----\----;
					  db GFX07                            ;;B999|----/----\----;
					  db GFX08                            ;;B99A|----/----\----;
					  db GFX09                            ;;B99B|----/----\----;
					  db GFX0A                            ;;B99C|----/----\----;
					  db GFX0B                            ;;B99D|----/----\----;
					  db GFX0C                            ;;B99E|----/----\----;
					  db GFX0D                            ;;B99F|----/----\----;
					  db GFX0E                            ;;B9A0|----/----\----;
					  db GFX0F                            ;;B9A1|----/----\----;
					  db GFX10                            ;;B9A2|----/----\----;
					  db GFX11                            ;;B9A3|----/----\----;
					  db GFX12                            ;;B9A4|----/----\----;
					  db GFX13                            ;;B9A5|----/----\----;
					  db GFX14                            ;;B9A6|----/----\----;
					  db GFX15                            ;;B9A7|----/----\----;
					  db GFX16                            ;;B9A8|----/----\----;
					  db GFX17                            ;;B9A9|----/----\----;
					  db GFX18                            ;;B9AA|----/----\----;
					  db GFX19                            ;;B9AB|----/----\----;
					  db GFX1A                            ;;B9AC|----/----\----;
					  db GFX1B                            ;;B9AD|----/----\----;
					  db GFX1C                            ;;B9AE|----/----\----;
					  db GFX1D                            ;;B9AF|----/----\----;
					  db GFX1E                            ;;B9B0|----/----\----;
					  db GFX1F                            ;;B9B1|----/----\----;
					  db GFX20                            ;;B9B2|----/----\----;
					  db GFX21                            ;;B9B3|----/----\----;
					  db GFX22                            ;;B9B4|----/----\----;
					  db GFX23                            ;;B9B5|----/----\----;
					  db GFX24                            ;;B9B6|----/----\----;
					  db GFX25                            ;;B9B7|----/----\----;
					  db GFX26                            ;;B9B8|----/----\----;
					  db GFX27                            ;;B9B9|----/----\----;
					  db GFX28                            ;;B9BA|----/----\----;
					  db GFX29                            ;;B9BB|----/----\----;
					  db GFX2A                            ;;B9BC|----/----\----;
					  db GFX2B                            ;;B9BD|----/----\----;
					  db GFX2C                            ;;B9BE|----/----\----;
					  db GFX2D                            ;;B9BF|----/----\----;
					  db GFX2E                            ;;B9C0|----/----\----;
					  db GFX2F                            ;;B9C1|----/----\----;
					  db GFX30                            ;;B9C2|----/----\----;
					  db GFX31                            ;;B9C3|----/----\----;
                                                          ;;                   ;
GFXFilesHigh:         db GFX00>>8                         ;;B9C4|----/----\----;
					  db GFX01>>8                         ;;B9C5|----/----\----;
					  db GFX02>>8                         ;;B9C6|----/----\----;
					  db GFX03>>8                         ;;B9C7|----/----\----;
					  db GFX04>>8                         ;;B9C8|----/----\----;
					  db GFX05>>8                         ;;B9C9|----/----\----;
					  db GFX06>>8                         ;;B9CA|----/----\----;
					  db GFX07>>8                         ;;B9CB|----/----\----;
					  db GFX08>>8                         ;;B9CC|----/----\----;
					  db GFX09>>8                         ;;B9CD|----/----\----;
					  db GFX0A>>8                         ;;B9CE|----/----\----;
					  db GFX0B>>8                         ;;B9CF|----/----\----;
					  db GFX0C>>8                         ;;B9D0|----/----\----;
					  db GFX0D>>8                         ;;B9D1|----/----\----;
					  db GFX0E>>8                         ;;B9D2|----/----\----;
					  db GFX0F>>8                         ;;B9D3|----/----\----;
					  db GFX10>>8                         ;;B9D4|----/----\----;
					  db GFX11>>8                         ;;B9D5|----/----\----;
					  db GFX12>>8                         ;;B9D6|----/----\----;
					  db GFX13>>8                         ;;B9D7|----/----\----;
					  db GFX14>>8                         ;;B9D8|----/----\----;
					  db GFX15>>8                         ;;B9D9|----/----\----;
					  db GFX16>>8                         ;;B9DA|----/----\----;
					  db GFX17>>8                         ;;B9DB|----/----\----;
					  db GFX18>>8                         ;;B9DC|----/----\----;
					  db GFX19>>8                         ;;B9DD|----/----\----;
					  db GFX1A>>8                         ;;B9DE|----/----\----;
					  db GFX1B>>8                         ;;B9DF|----/----\----;
					  db GFX1C>>8                         ;;B9E0|----/----\----;
					  db GFX1D>>8                         ;;B9E1|----/----\----;
					  db GFX1E>>8                         ;;B9E2|----/----\----;
					  db GFX1F>>8                         ;;B9E3|----/----\----;
					  db GFX20>>8                         ;;B9E4|----/----\----;
					  db GFX21>>8                         ;;B9E5|----/----\----;
					  db GFX22>>8                         ;;B9E6|----/----\----;
					  db GFX23>>8                         ;;B9E7|----/----\----;
					  db GFX24>>8                         ;;B9E8|----/----\----;
					  db GFX25>>8                         ;;B9E9|----/----\----;
					  db GFX26>>8                         ;;B9EA|----/----\----;
					  db GFX27>>8                         ;;B9EB|----/----\----;
					  db GFX28>>8                         ;;B9EC|----/----\----;
					  db GFX29>>8                         ;;B9ED|----/----\----;
					  db GFX2A>>8                         ;;B9EE|----/----\----;
					  db GFX2B>>8                         ;;B9EF|----/----\----;
					  db GFX2C>>8                         ;;B9F0|----/----\----;
					  db GFX2D>>8                         ;;B9F1|----/----\----;
					  db GFX2E>>8                         ;;B9F2|----/----\----;
					  db GFX2F>>8                         ;;B9F3|----/----\----;
					  db GFX30>>8                         ;;B9F4|----/----\----;
					  db GFX31>>8                         ;;B9F5|----/----\----;
                                                          ;;                   ;
GFXFilesBank:         db GFX00>>16&$7F                    ;;B9F6|----/----\----;
					  db GFX01>>16&$7F                    ;;B9F7|----/----\----;
					  db GFX02>>16&$7F                    ;;B9F8|----/----\----;
					  db GFX03>>16&$7F                    ;;B9F9|----/----\----;
					  db GFX04>>16&$7F                    ;;B9FA|----/----\----;
					  db GFX05>>16&$7F                    ;;B9FB|----/----\----;
					  db GFX06>>16&$7F                    ;;B9FC|----/----\----;
					  db GFX07>>16&$7F                    ;;B9FD|----/----\----;
					  db GFX08>>16&$7F                    ;;B9FE|----/----\----;
					  db GFX09>>16&$7F                    ;;B9FF|----/----\----;
					  db GFX0A>>16&$7F                    ;;BA00|----/----\----;
					  db GFX0B>>16&$7F                    ;;BA01|----/----\----;
					  db GFX0C>>16&$7F                    ;;BA02|----/----\----;
					  db GFX0D>>16&$7F                    ;;BA03|----/----\----;
					  db GFX0E>>16&$7F                    ;;BA04|----/----\----;
					  db GFX0F>>16&$7F                    ;;BA05|----/----\----;
					  db GFX10>>16&$7F                    ;;BA06|----/----\----;
					  db GFX11>>16&$7F                    ;;BA07|----/----\----;
					  db GFX12>>16&$7F                    ;;BA08|----/----\----;
					  db GFX13>>16&$7F                    ;;BA09|----/----\----;
					  db GFX14>>16&$7F                    ;;BA0A|----/----\----;
					  db GFX15>>16&$7F                    ;;BA0B|----/----\----;
					  db GFX16>>16&$7F                    ;;BA0C|----/----\----;
					  db GFX17>>16&$7F                    ;;BA0D|----/----\----;
					  db GFX18>>16&$7F                    ;;BA0E|----/----\----;
					  db GFX19>>16&$7F                    ;;BA0F|----/----\----;
					  db GFX1A>>16&$7F                    ;;BA10|----/----\----;
					  db GFX1B>>16&$7F                    ;;BA11|----/----\----;
					  db GFX1C>>16&$7F                    ;;BA12|----/----\----;
					  db GFX1D>>16&$7F                    ;;BA13|----/----\----;
					  db GFX1E>>16&$7F                    ;;BA14|----/----\----;
					  db GFX1F>>16&$7F                    ;;BA15|----/----\----;
					  db GFX20>>16&$7F                    ;;BA16|----/----\----;
					  db GFX21>>16&$7F                    ;;BA17|----/----\----;
					  db GFX22>>16&$7F                    ;;BA18|----/----\----;
					  db GFX23>>16&$7F                    ;;BA19|----/----\----;
					  db GFX24>>16&$7F                    ;;BA1A|----/----\----;
					  db GFX25>>16&$7F                    ;;BA1B|----/----\----;
					  db GFX26>>16&$7F                    ;;BA1C|----/----\----;
					  db GFX27>>16&$7F                    ;;BA1D|----/----\----;
					  db GFX28>>16&$7F                    ;;BA1E|----/----\----;
					  db GFX29>>16&$7F                    ;;BA1F|----/----\----;
					  db GFX2A>>16&$7F                    ;;BA20|----/----\----;
					  db GFX2B>>16&$7F                    ;;BA21|----/----\----;
					  db GFX2C>>16&$7F                    ;;BA22|----/----\----;
					  db GFX2D>>16&$7F                    ;;BA23|----/----\----;
					  db GFX2E>>16&$7F                    ;;BA24|----/----\----;
					  db GFX2F>>16&$7F                    ;;BA25|----/----\----;
					  db GFX30>>16&$7F                    ;;BA26|----/----\----;
					  db GFX31>>16&$7F                    ;;BA27|----/----\----;
                                                          ;;                   ;
CODE_00BA28:          PHB                                 ;;BA28|----/----\----; Accum (8 bit) 
                      PHY                                 ;;BA29|----/----\----;
                      PHK                                 ;;BA2A|----/----\----;
                      PLB                                 ;;BA2B|----/----\----;
                      LDA.W GFXFilesLow,Y                 ;;BA2C|----/----\----;
                      STA.B !GraphicsCompPtr              ;;BA2F|----/----\----;
                      LDA.W GFXFilesHigh,Y                ;;BA31|----/----\----;
                      STA.B !GraphicsCompPtr+1            ;;BA34|----/----\----;
                      LDA.W GFXFilesBank,Y                ;;BA36|----/----\----;
                      STA.B !GraphicsCompPtr+2            ;;BA39|----/----\----;
                      LDA.B #$00                          ;;BA3B|----/----\----;
                      STA.B !_0                           ;;BA3D|----/----\----;
                      LDA.B #$AD                          ;;BA3F|----/----\----;
                      STA.B !_1                           ;;BA41|----/----\----;
                      LDA.B #$7E                          ;;BA43|----/----\----;
                      STA.B !_2                           ;;BA45|----/----\----;
                      JSR CODE_00B8DE                     ;;BA47|----/----\----;
                      PLY                                 ;;BA4A|----/----\----;
                      PLB                                 ;;BA4B|----/----\----;
                      RTL                                 ;;BA4C|----/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
                      db $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF  ;;BA4D|----/----\----;
                      db $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF  ;;BA55|----/----\----;
                      db $FF,$FF,$FF                      ;;BA5D|----/----\----;
                                                          ;;                   ;
DATA_00BA60:          db $00,$B0,$60,$10,$C0,$70,$20,$D0  ;;BA60|----/----\----;
                      db $80,$30,$E0,$90,$40,$F0,$A0,$50  ;;BA68|----/----\----;
DATA_00BA70:          db $00,$B0,$60,$10,$C0,$70,$20,$D0  ;;BA70|----/----\----;
                      db $80,$30,$E0,$90,$40,$F0,$A0,$50  ;;BA78|----/----\----;
DATA_00BA80:          db $00,$00,$00,$00,$00,$00,$00,$00  ;;BA80|----/----\----;
                      db $00,$00,$00,$00,$00,$00          ;;BA88|----/----\----;
                                                          ;;                   ;
DATA_00BA8E:          db $00,$00,$00,$00,$00,$00,$00,$00  ;;BA8E|----/----\----;
                      db $00,$00,$00,$00,$00,$00          ;;BA96|----/----\----;
                                                          ;;                   ;
DATA_00BA9C:          db $C8,$C9,$CB,$CD,$CE,$D0,$D2,$D3  ;;BA9C|----/----\----;
                      db $D5,$D7,$D8,$DA,$DC,$DD,$DF,$E1  ;;BAA4|----/----\----;
DATA_00BAAC:          db $E3,$E4,$E6,$E8,$E9,$EB,$ED,$EE  ;;BAAC|----/----\----;
                      db $F0,$F2,$F3,$F5,$F7,$F8,$FA,$FC  ;;BAB4|----/----\----;
DATA_00BABC:          db $C8,$CA,$CC,$CE,$D0,$D2,$D4,$D6  ;;BABC|----/----\----;
                      db $D8,$DA,$DC,$DE,$E0,$E2          ;;BAC4|----/----\----;
                                                          ;;                   ;
DATA_00BACA:          db $E4,$E6,$E8,$EA,$EC,$EE,$F0,$F2  ;;BACA|----/----\----;
                      db $F4,$F6,$F8,$FA,$FC,$FE          ;;BAD2|----/----\----;
                                                          ;;                   ;
DATA_00BAD8:          db $00,$C8,$7E,$B0,$C9,$7E,$60,$CB  ;;BAD8|----/----\----;
                      db $7E,$10,$CD,$7E,$C0,$CE,$7E,$70  ;;BAE0|----/----\----;
                      db $D0,$7E,$20,$D2,$7E,$D0,$D3,$7E  ;;BAE8|----/----\----;
                      db $80,$D5,$7E,$30,$D7,$7E,$E0,$D8  ;;BAF0|----/----\----;
                      db $7E,$90,$DA,$7E,$40,$DC,$7E,$F0  ;;BAF8|----/----\----;
                      db $DD,$7E,$A0,$DF,$7E,$50,$E1,$7E  ;;BB00|----/----\----;
DATA_00BB08:          db $00,$E3,$7E,$B0,$E4,$7E,$60,$E6  ;;BB08|----/----\----;
                      db $7E,$10,$E8,$7E,$C0,$E9,$7E,$70  ;;BB10|----/----\----;
                      db $EB,$7E,$20,$ED,$7E,$D0,$EE,$7E  ;;BB18|----/----\----;
                      db $80,$F0,$7E,$30,$F2,$7E,$E0,$F3  ;;BB20|----/----\----;
                      db $7E,$90,$F5,$7E,$40,$F7,$7E,$F0  ;;BB28|----/----\----;
                      db $F8,$7E,$A0,$FA,$7E,$50,$FC,$7E  ;;BB30|----/----\----;
DATA_00BB38:          db $00,$C8,$7E,$00,$CA,$7E,$00,$CC  ;;BB38|----/----\----;
                      db $7E,$00,$CE,$7E,$00,$D0,$7E,$00  ;;BB40|----/----\----;
                      db $D2,$7E,$00,$D4,$7E,$00,$D6,$7E  ;;BB48|----/----\----;
                      db $00,$D8,$7E,$00,$DA,$7E,$00,$DC  ;;BB50|----/----\----;
                      db $7E,$00,$DE,$7E,$00,$E0,$7E,$00  ;;BB58|----/----\----;
                      db $E2,$7E                          ;;BB60|----/----\----;
                                                          ;;                   ;
DATA_00BB62:          db $00,$E3,$7E,$B0,$E4,$7E,$60,$E6  ;;BB62|----/----\----;
                      db $7E,$10,$E8,$7E,$C0,$E9,$7E,$70  ;;BB6A|----/----\----;
                      db $EB,$7E,$20,$ED,$7E,$D0,$EE,$7E  ;;BB72|----/----\----;
                      db $80,$F0,$7E,$30,$F2,$7E,$E0,$F3  ;;BB7A|----/----\----;
                      db $7E,$90,$F5,$7E,$40,$F7,$7E,$F0  ;;BB82|----/----\----;
                      db $F8,$7E,$A0,$FA,$7E,$50,$FC,$7E  ;;BB8A|----/----\----;
DATA_00BB92:          db $00,$C8,$7E,$B0,$C9,$7E,$60,$CB  ;;BB92|----/----\----;
                      db $7E,$10,$CD,$7E,$C0,$CE,$7E,$70  ;;BB9A|----/----\----;
                      db $D0,$7E,$20,$D2,$7E,$D0,$D3,$7E  ;;BBA2|----/----\----;
                      db $80,$D5,$7E,$30,$D7,$7E,$E0,$D8  ;;BBAA|----/----\----;
                      db $7E,$90,$DA,$7E,$40,$DC,$7E,$F0  ;;BBB2|----/----\----;
                      db $DD,$7E,$A0,$DF,$7E,$50,$E1,$7E  ;;BBBA|----/----\----;
DATA_00BBC2:          db $00,$E4,$7E,$00,$E6,$7E,$00,$E8  ;;BBC2|----/----\----;
                      db $7E,$00,$EA,$7E,$00,$EC,$7E,$00  ;;BBCA|----/----\----;
                      db $EE,$7E,$00,$F0,$7E,$00,$F2,$7E  ;;BBD2|----/----\----;
                      db $00,$F4,$7E,$00,$F6,$7E,$00,$F8  ;;BBDA|----/----\----;
                      db $7E,$00,$FA,$7E,$00,$FC,$7E,$00  ;;BBE2|----/----\----;
                      db $FE,$7E                          ;;BBEA|----/----\----;
                                                          ;;                   ;
DATA_00BBEC:          db $00,$C8,$7E,$00,$CA,$7E,$00,$CC  ;;BBEC|----/----\----;
                      db $7E,$00,$CE,$7E,$00,$D0,$7E,$00  ;;BBF4|----/----\----;
                      db $D2,$7E,$00,$D4,$7E,$00,$D6,$7E  ;;BBFC|----/----\----;
                      db $00,$D8,$7E,$00,$DA,$7E,$00,$DC  ;;BC04|----/----\----;
                      db $7E,$00,$DE,$7E,$00,$E0,$7E,$00  ;;BC0C|----/----\----;
                      db $E2,$7E                          ;;BC14|----/----\----;
                                                          ;;                   ;
DATA_00BC16:          db $00,$E4,$7E,$00,$E6,$7E,$00,$E8  ;;BC16|----/----\----;
                      db $7E,$00,$EA,$7E,$00,$EC,$7E,$00  ;;BC1E|----/----\----;
                      db $EE,$7E,$00,$F0,$7E,$00,$F2,$7E  ;;BC26|----/----\----;
                      db $00,$F4,$7E,$00,$F6,$7E,$00,$F8  ;;BC2E|----/----\----;
                      db $7E,$00,$FA,$7E,$00,$FC,$7E,$00  ;;BC36|----/----\----;
                      db $FE,$7E                          ;;BC3E|----/----\----;
                                                          ;;                   ;
DATA_00BC40:          db $00,$C8,$7F,$B0,$C9,$7F,$60,$CB  ;;BC40|----/----\----;
                      db $7F,$10,$CD,$7F,$C0,$CE,$7F,$70  ;;BC48|----/----\----;
                      db $D0,$7F,$20,$D2,$7F,$D0,$D3,$7F  ;;BC50|----/----\----;
                      db $80,$D5,$7F,$30,$D7,$7F,$E0,$D8  ;;BC58|----/----\----;
                      db $7F,$90,$DA,$7F,$40,$DC,$7F,$F0  ;;BC60|----/----\----;
                      db $DD,$7F,$A0,$DF,$7F,$50,$E1,$7F  ;;BC68|----/----\----;
DATA_00BC70:          db $00,$E3,$7F,$B0,$E4,$7F,$60,$E6  ;;BC70|----/----\----;
                      db $7F,$10,$E8,$7F,$C0,$E9,$7F,$70  ;;BC78|----/----\----;
                      db $EB,$7F,$20,$ED,$7F,$D0,$EE,$7F  ;;BC80|----/----\----;
                      db $80,$F0,$7F,$30,$F2,$7F,$E0,$F3  ;;BC88|----/----\----;
                      db $7F,$90,$F5,$7F,$40,$F7,$7F,$F0  ;;BC90|----/----\----;
                      db $F8,$7F,$A0,$FA,$7F,$50,$FC,$7F  ;;BC98|----/----\----;
DATA_00BCA0:          db $00,$C8,$7F,$00,$CA,$7F,$00,$CC  ;;BCA0|----/----\----;
                      db $7F,$00,$CE,$7F,$00,$D0,$7F,$00  ;;BCA8|----/----\----;
                      db $D2,$7F,$00,$D4,$7F,$00,$D6,$7F  ;;BCB0|----/----\----;
                      db $00,$D8,$7F,$00,$DA,$7F,$00,$DC  ;;BCB8|----/----\----;
                      db $7F,$00,$DE,$7F,$00,$E0,$7F,$00  ;;BCC0|----/----\----;
                      db $E2,$7F                          ;;BCC8|----/----\----;
                                                          ;;                   ;
DATA_00BCCA:          db $00,$E3,$7F,$B0,$E4,$7F,$60,$E6  ;;BCCA|----/----\----;
                      db $7F,$10,$E8,$7F,$C0,$E9,$7F,$70  ;;BCD2|----/----\----;
                      db $EB,$7F,$20,$ED,$7F,$D0,$EE,$7F  ;;BCDA|----/----\----;
                      db $80,$F0,$7F,$30,$F2,$7F,$E0,$F3  ;;BCE2|----/----\----;
                      db $7F,$90,$F5,$7F,$40,$F7,$7F,$F0  ;;BCEA|----/----\----;
                      db $F8,$7F,$A0,$FA,$7F,$50,$FC,$7F  ;;BCF2|----/----\----;
DATA_00BCFA:          db $00,$C8,$7F,$B0,$C9,$7F,$60,$CB  ;;BCFA|----/----\----;
                      db $7F,$10,$CD,$7F,$C0,$CE,$7F,$70  ;;BD02|----/----\----;
                      db $D0,$7F,$20,$D2,$7F,$D0,$D3,$7F  ;;BD0A|----/----\----;
                      db $80,$D5,$7F,$30,$D7,$7F,$E0,$D8  ;;BD12|----/----\----;
                      db $7F,$90,$DA,$7F,$40,$DC,$7F,$F0  ;;BD1A|----/----\----;
                      db $DD,$7F,$A0,$DF,$7F,$50,$E1,$7F  ;;BD22|----/----\----;
DATA_00BD2A:          db $00,$E4,$7F,$00,$E6,$7F,$00,$E8  ;;BD2A|----/----\----;
                      db $7F,$00,$EA,$7F,$00,$EC,$7F,$00  ;;BD32|----/----\----;
                      db $EE,$7F,$00,$F0,$7F,$00,$F2,$7F  ;;BD3A|----/----\----;
                      db $00,$F4,$7F,$00,$F6,$7F,$00,$F8  ;;BD42|----/----\----;
                      db $7F,$00,$FA,$7F,$00,$FC,$7F,$00  ;;BD4A|----/----\----;
                      db $FE,$7F                          ;;BD52|----/----\----;
                                                          ;;                   ;
DATA_00BD54:          db $00,$C8,$7F,$00,$CA,$7F,$00,$CC  ;;BD54|----/----\----;
                      db $7F,$00,$CE,$7F,$00,$D0,$7F,$00  ;;BD5C|----/----\----;
                      db $D2,$7F,$00,$D4,$7F,$00,$D6,$7F  ;;BD64|----/----\----;
                      db $00,$D8,$7F,$00,$DA,$7F,$00,$DC  ;;BD6C|----/----\----;
                      db $7F,$00,$DE,$7F,$00,$E0,$7F,$00  ;;BD74|----/----\----;
                      db $E2,$7F                          ;;BD7C|----/----\----;
                                                          ;;                   ;
DATA_00BD7E:          db $00,$E4,$7F,$00,$E6,$7F,$00,$E8  ;;BD7E|----/----\----;
                      db $7F,$00,$EA,$7F,$00,$EC,$7F,$00  ;;BD86|----/----\----;
                      db $EE,$7F,$00,$F0,$7F,$00,$F2,$7F  ;;BD8E|----/----\----;
                      db $00,$F4,$7F,$00,$F6,$7F,$00,$F8  ;;BD96|----/----\----;
                      db $7F,$00,$FA,$7F,$00,$FC,$7F,$00  ;;BD9E|----/----\----;
                      db $FE,$7F                          ;;BDA6|----/----\----;
                                                          ;;                   ;
Ptrs00BDA8:           dw DATA_00BAD8                      ;;BDA8|----/----\----;
                      dw DATA_00BAD8                      ;;BDAA|----/----\----;
                      dw DATA_00BAD8                      ;;BDAC|----/----\----;
                      dw DATA_00BB38                      ;;BDAE|----/----\----;
                      dw DATA_00BB38                      ;;BDB0|----/----\----;
                      dw DATA_00BB92                      ;;BDB2|----/----\----;
                      dw DATA_00BB92                      ;;BDB4|----/----\----;
                      dw DATA_00BBEC                      ;;BDB6|----/----\----;
                      dw DATA_00BBEC                      ;;BDB8|----/----\----;
                      dw $0000                            ;;BDBA|----/----\----;
                      dw DATA_00BBEC                      ;;BDBC|----/----\----;
                      dw $0000                            ;;BDBE|----/----\----;
                      dw DATA_00BAD8                      ;;BDC0|----/----\----;
                      dw DATA_00BBEC                      ;;BDC2|----/----\----;
                      dw DATA_00BAD8                      ;;BDC4|----/----\----;
                      dw DATA_00BAD8                      ;;BDC6|----/----\----;
                      dw $0000                            ;;BDC8|----/----\----;
                      dw DATA_00BAD8                      ;;BDCA|----/----\----;
                      dw $0000                            ;;BDCC|----/----\----;
                      dw $0000                            ;;BDCE|----/----\----;
                      dw $0000                            ;;BDD0|----/----\----;
                      dw $0000                            ;;BDD2|----/----\----;
                      dw $0000                            ;;BDD4|----/----\----;
                      dw $0000                            ;;BDD6|----/----\----;
                      dw $0000                            ;;BDD8|----/----\----;
                      dw $0000                            ;;BDDA|----/----\----;
                      dw $0000                            ;;BDDC|----/----\----;
                      dw $0000                            ;;BDDE|----/----\----;
                      dw $0000                            ;;BDE0|----/----\----;
                      dw $0000                            ;;BDE2|----/----\----;
                      dw DATA_00BAD8                      ;;BDE4|----/----\----;
                      dw DATA_00BAD8                      ;;BDE6|----/----\----;
                                                          ;;                   ;
Ptrs00BDE8:           dw DATA_00BB08                      ;;BDE8|----/----\----;
                      dw DATA_00BB08                      ;;BDEA|----/----\----;
                      dw DATA_00BB08                      ;;BDEC|----/----\----;
                      dw DATA_00BB62                      ;;BDEE|----/----\----;
                      dw DATA_00BB62                      ;;BDF0|----/----\----;
                      dw DATA_00BBC2                      ;;BDF2|----/----\----;
                      dw DATA_00BBC2                      ;;BDF4|----/----\----;
                      dw DATA_00BC16                      ;;BDF6|----/----\----;
                      dw DATA_00BC16                      ;;BDF8|----/----\----;
                      dw $0000                            ;;BDFA|----/----\----;
                      dw DATA_00BC16                      ;;BDFC|----/----\----;
                      dw $0000                            ;;BDFE|----/----\----;
                      dw DATA_00BB08                      ;;BE00|----/----\----;
                      dw DATA_00BC16                      ;;BE02|----/----\----;
                      dw DATA_00BB08                      ;;BE04|----/----\----;
                      dw DATA_00BB08                      ;;BE06|----/----\----;
                      dw $0000                            ;;BE08|----/----\----;
                      dw DATA_00BB08                      ;;BE0A|----/----\----;
                      dw $0000                            ;;BE0C|----/----\----;
                      dw $0000                            ;;BE0E|----/----\----;
                      dw $0000                            ;;BE10|----/----\----;
                      dw $0000                            ;;BE12|----/----\----;
                      dw $0000                            ;;BE14|----/----\----;
                      dw $0000                            ;;BE16|----/----\----;
                      dw $0000                            ;;BE18|----/----\----;
                      dw $0000                            ;;BE1A|----/----\----;
                      dw $0000                            ;;BE1C|----/----\----;
                      dw $0000                            ;;BE1E|----/----\----;
                      dw $0000                            ;;BE20|----/----\----;
                      dw $0000                            ;;BE22|----/----\----;
                      dw DATA_00BB08                      ;;BE24|----/----\----;
                      dw DATA_00BB08                      ;;BE26|----/----\----;
                                                          ;;                   ;
Ptrs00BE28:           dw DATA_00BC40                      ;;BE28|----/----\----;
                      dw DATA_00BC40                      ;;BE2A|----/----\----;
                      dw DATA_00BC40                      ;;BE2C|----/----\----;
                      dw DATA_00BCA0                      ;;BE2E|----/----\----;
                      dw DATA_00BCA0                      ;;BE30|----/----\----;
                      dw DATA_00BCFA                      ;;BE32|----/----\----;
                      dw DATA_00BCFA                      ;;BE34|----/----\----;
                      dw DATA_00BD54                      ;;BE36|----/----\----;
                      dw DATA_00BD54                      ;;BE38|----/----\----;
                      dw $0000                            ;;BE3A|----/----\----;
                      dw DATA_00BD54                      ;;BE3C|----/----\----;
                      dw $0000                            ;;BE3E|----/----\----;
                      dw DATA_00BC40                      ;;BE40|----/----\----;
                      dw DATA_00BD54                      ;;BE42|----/----\----;
                      dw DATA_00BC40                      ;;BE44|----/----\----;
                      dw DATA_00BC40                      ;;BE46|----/----\----;
                      dw $0000                            ;;BE48|----/----\----;
                      dw DATA_00BC40                      ;;BE4A|----/----\----;
                      dw $0000                            ;;BE4C|----/----\----;
                      dw $0000                            ;;BE4E|----/----\----;
                      dw $0000                            ;;BE50|----/----\----;
                      dw $0000                            ;;BE52|----/----\----;
                      dw $0000                            ;;BE54|----/----\----;
                      dw $0000                            ;;BE56|----/----\----;
                      dw $0000                            ;;BE58|----/----\----;
                      dw $0000                            ;;BE5A|----/----\----;
                      dw $0000                            ;;BE5C|----/----\----;
                      dw $0000                            ;;BE5E|----/----\----;
                      dw $0000                            ;;BE60|----/----\----;
                      dw $0000                            ;;BE62|----/----\----;
                      dw DATA_00BC40                      ;;BE64|----/----\----;
                      dw DATA_00BC40                      ;;BE66|----/----\----;
                                                          ;;                   ;
Ptrs00BE68:           dw DATA_00BC70                      ;;BE68|----/----\----;
                      dw DATA_00BC70                      ;;BE6A|----/----\----;
                      dw DATA_00BC70                      ;;BE6C|----/----\----;
                      dw DATA_00BCCA                      ;;BE6E|----/----\----;
                      dw DATA_00BCCA                      ;;BE70|----/----\----;
                      dw DATA_00BD2A                      ;;BE72|----/----\----;
                      dw DATA_00BD2A                      ;;BE74|----/----\----;
                      dw DATA_00BD7E                      ;;BE76|----/----\----;
                      dw DATA_00BD7E                      ;;BE78|----/----\----;
                      dw $0000                            ;;BE7A|----/----\----;
                      dw DATA_00BD7E                      ;;BE7C|----/----\----;
                      dw $0000                            ;;BE7E|----/----\----;
                      dw DATA_00BC70                      ;;BE80|----/----\----;
                      dw DATA_00BD7E                      ;;BE82|----/----\----;
                      dw DATA_00BC70                      ;;BE84|----/----\----;
                      dw DATA_00BC70                      ;;BE86|----/----\----;
                      dw $0000                            ;;BE88|----/----\----;
                      dw DATA_00BC70                      ;;BE8A|----/----\----;
                      dw $0000                            ;;BE8C|----/----\----;
                      dw $0000                            ;;BE8E|----/----\----;
                      dw $0000                            ;;BE90|----/----\----;
                      dw $0000                            ;;BE92|----/----\----;
                      dw $0000                            ;;BE94|----/----\----;
                      dw $0000                            ;;BE96|----/----\----;
                      dw $0000                            ;;BE98|----/----\----;
                      dw $0000                            ;;BE9A|----/----\----;
                      dw $0000                            ;;BE9C|----/----\----;
                      dw $0000                            ;;BE9E|----/----\----;
                      dw $0000                            ;;BEA0|----/----\----;
                      dw $0000                            ;;BEA2|----/----\----;
                      dw DATA_00BC70                      ;;BEA4|----/----\----;
                      dw DATA_00BC70                      ;;BEA6|----/----\----;
                                                          ;;                   ;
LoadBlkPtrs:          dw Ptrs00BDA8                       ;;BEA8|----/----\----;
                      dw Ptrs00BDE8                       ;;BEAA|----/----\----;
LoadBlkTable2:        dw Ptrs00BE28                       ;;BEAC|----/----\----;
                      dw Ptrs00BE68                       ;;BEAE|----/----\----;
                                                          ;;                   ;
GenerateTile:         PHP                                 ;;BEB0|----/----\----;
                      REP #$30                            ;;BEB1|----/----\----; Index (16 bit) Accum (16 bit) 
                      PHX                                 ;;BEB3|----/----\----;
                      LDA.B !Map16TileGenerate            ;;BEB4|----/----\----;
                      AND.W #$00FF                        ;;BEB6|----/----\----;
                      BNE +                               ;;BEB9|----/----\----;
ADDR_00BEBB:          JMP CODE_00BFB9                     ;;BEBB|----/----\----;
                                                          ;;                   ;
                    + LDA.B !TouchBlockXPos               ;;BEBE|----/----\----;
                      STA.B !_C                           ;;BEC0|----/----\----;
                      LDA.B !TouchBlockYPos               ;;BEC2|----/----\----;
                      STA.B !_E                           ;;BEC4|----/----\----;
                      LDA.W #$0000                        ;;BEC6|----/----\----;
                      SEP #$20                            ;;BEC9|----/----\----; Accum (8 bit) 
                      LDA.B !ScreenMode                   ;;BECB|----/----\----;
                      STA.B !_9                           ;;BECD|----/----\----;
                      LDA.W !LayerProcessing              ;;BECF|----/----\----;
                      BEQ +                               ;;BED2|----/----\----;
                      LSR.B !_9                           ;;BED4|----/----\----;
                    + LDY.B !_E                           ;;BED6|----/----\----;
                      LDA.B !_9                           ;;BED8|----/----\----;
                      AND.B #$01                          ;;BEDA|----/----\----;
                      BEQ +                               ;;BEDC|----/----\----;
                      LDA.B !TouchBlockXPos+1             ;;BEDE|----/----\----;
                      STA.B !_0                           ;;BEE0|----/----\----;
                      LDA.B !TouchBlockYPos+1             ;;BEE2|----/----\----;
                      STA.B !TouchBlockXPos+1             ;;BEE4|----/----\----;
                      LDA.B !_0                           ;;BEE6|----/----\----;
                      STA.B !TouchBlockYPos+1             ;;BEE8|----/----\----;
                      LDY.B !_C                           ;;BEEA|----/----\----;
                    + CPY.W #$0200                        ;;BEEC|----/----\----;
                      BCS ADDR_00BEBB                     ;;BEEF|----/----\----;
                      LDA.W !LayerProcessing              ;;BEF1|----/----\----;
                      ASL A                               ;;BEF4|----/----\----;
                      TAX                                 ;;BEF5|----/----\----;
                      LDA.L LoadBlkPtrs,X                 ;;BEF6|----/----\----; Set low byte of pointer 
                      STA.B !Layer1DataPtr                ;;BEFA|----/----\----;
                      LDA.L LoadBlkPtrs+1,X               ;;BEFC|----/----\----; Set middle byte of pointer 
                      STA.B !Layer1DataPtr+1              ;;BF00|----/----\----;
                      STZ.B !Layer1DataPtr+2              ;;BF02|----/----\----; High byte of pointer = #$00 
                      LDA.W !LevelModeSetting             ;;BF04|----/----\----;
                      ASL A                               ;;BF07|----/----\----;
                      TAY                                 ;;BF08|----/----\----;
                      LDA.B [!Layer1DataPtr],Y            ;;BF09|----/----\----;
                      STA.B !_4                           ;;BF0B|----/----\----;
                      INY                                 ;;BF0D|----/----\----;
                      LDA.B [!Layer1DataPtr],Y            ;;BF0E|----/----\----;
                      STA.B !_5                           ;;BF10|----/----\----;
                      STZ.B !_6                           ;;BF12|----/----\----;
                      LDA.B !TouchBlockXPos+1             ;;BF14|----/----\----;
                      STA.B !_7                           ;;BF16|----/----\----;
                      ASL A                               ;;BF18|----/----\----;
                      CLC                                 ;;BF19|----/----\----;
                      ADC.B !_7                           ;;BF1A|----/----\----;
                      TAY                                 ;;BF1C|----/----\----;
                      LDA.B [!_4],Y                       ;;BF1D|----/----\----;
                      STA.B !Map16LowPtr                  ;;BF1F|----/----\----;
                      STA.B !Map16HighPtr                 ;;BF21|----/----\----;
                      INY                                 ;;BF23|----/----\----;
                      LDA.B [!_4],Y                       ;;BF24|----/----\----;
                      STA.B !Map16LowPtr+1                ;;BF26|----/----\----;
                      STA.B !Map16HighPtr+1               ;;BF28|----/----\----;
                      LDA.B #$7E                          ;;BF2A|----/----\----;
                      STA.B !Map16LowPtr+2                ;;BF2C|----/----\----;
                      INC A                               ;;BF2E|----/----\----;
                      STA.B !Map16HighPtr+2               ;;BF2F|----/----\----;
                      LDA.B !_9                           ;;BF31|----/----\----;
                      AND.B #$01                          ;;BF33|----/----\----;
                      BEQ +                               ;;BF35|----/----\----;
                      LDA.B !TouchBlockYPos+1             ;;BF37|----/----\----;
                      LSR A                               ;;BF39|----/----\----;
                      LDA.B !TouchBlockXPos+1             ;;BF3A|----/----\----;
                      AND.B #$01                          ;;BF3C|----/----\----;
                      JMP CODE_00BF46                     ;;BF3E|----/----\----;
                                                          ;;                   ;
                    + LDA.B !TouchBlockXPos+1             ;;BF41|----/----\----;
                      LSR A                               ;;BF43|----/----\----;
                      LDA.B !TouchBlockYPos+1             ;;BF44|----/----\----;
CODE_00BF46:          ROL A                               ;;BF46|----/----\----;
                      ASL A                               ;;BF47|----/----\----;
                      ASL A                               ;;BF48|----/----\----;
                      ORA.B #$20                          ;;BF49|----/----\----;
                      STA.B !_4                           ;;BF4B|----/----\----;
                      CPX.W #$0000                        ;;BF4D|----/----\----;
                      BEQ +                               ;;BF50|----/----\----;
                      CLC                                 ;;BF52|----/----\----;
                      ADC.B #$10                          ;;BF53|----/----\----;
                      STA.B !_4                           ;;BF55|----/----\----;
                    + LDA.B !TouchBlockYPos               ;;BF57|----/----\----;
                      AND.B #$F0                          ;;BF59|----/----\----;
                      CLC                                 ;;BF5B|----/----\----;
                      ASL A                               ;;BF5C|----/----\----;
                      ROL A                               ;;BF5D|----/----\----;
                      STA.B !_5                           ;;BF5E|----/----\----;
                      ROL A                               ;;BF60|----/----\----;
                      AND.B #$03                          ;;BF61|----/----\----;
                      ORA.B !_4                           ;;BF63|----/----\----;
                      STA.B !_6                           ;;BF65|----/----\----;
                      LDA.B !TouchBlockXPos               ;;BF67|----/----\----;
                      AND.B #$F0                          ;;BF69|----/----\----;
                      LSR A                               ;;BF6B|----/----\----;
                      LSR A                               ;;BF6C|----/----\----;
                      LSR A                               ;;BF6D|----/----\----;
                      STA.B !_4                           ;;BF6E|----/----\----;
                      LDA.B !_5                           ;;BF70|----/----\----;
                      AND.B #$C0                          ;;BF72|----/----\----;
                      ORA.B !_4                           ;;BF74|----/----\----;
                      STA.B !_7                           ;;BF76|----/----\----;
                      REP #$20                            ;;BF78|----/----\----; Accum (16 bit) 
                      LDA.B !_9                           ;;BF7A|----/----\----;
                      AND.W #$0001                        ;;BF7C|----/----\----;
                      BNE CODE_00BF9B                     ;;BF7F|----/----\----;
                      LDA.B !Layer1XPos                   ;;BF81|----/----\----;
                      SEC                                 ;;BF83|----/----\----;
                      SBC.W #$0080                        ;;BF84|----/----\----;
                      TAX                                 ;;BF87|----/----\----;
                      LDY.B !Layer1YPos                   ;;BF88|----/----\----;
                      LDA.W !LayerProcessing              ;;BF8A|----/----\----;
                      BEQ CODE_00BFB2                     ;;BF8D|----/----\----;
                      LDX.B !Layer2XPos                   ;;BF8F|----/----\----;
                      LDA.B !Layer2YPos                   ;;BF91|----/----\----;
                      SEC                                 ;;BF93|----/----\----;
                      SBC.W #$0080                        ;;BF94|----/----\----;
                      TAY                                 ;;BF97|----/----\----;
                      JMP CODE_00BFB2                     ;;BF98|----/----\----;
                                                          ;;                   ;
CODE_00BF9B:          LDX.B !Layer1XPos                   ;;BF9B|----/----\----;
                      LDA.B !Layer1YPos                   ;;BF9D|----/----\----;
                      SEC                                 ;;BF9F|----/----\----;
                      SBC.W #$0080                        ;;BFA0|----/----\----;
                      TAY                                 ;;BFA3|----/----\----;
                      LDA.W !LayerProcessing              ;;BFA4|----/----\----;
                      BEQ CODE_00BFB2                     ;;BFA7|----/----\----;
                      LDA.B !Layer2XPos                   ;;BFA9|----/----\----;
                      SEC                                 ;;BFAB|----/----\----;
                      SBC.W #$0080                        ;;BFAC|----/----\----;
                      TAX                                 ;;BFAF|----/----\----;
                      LDY.B !Layer2YPos                   ;;BFB0|----/----\----;
CODE_00BFB2:          STX.B !_8                           ;;BFB2|----/----\----;
                      STY.B !_A                           ;;BFB4|----/----\----;
                      JSR CODE_00BFBC                     ;;BFB6|----/----\----;
CODE_00BFB9:          PLX                                 ;;BFB9|----/----\----;
                      PLP                                 ;;BFBA|----/----\----;
                      RTL                                 ;;BFBB|----/----\----; Return 
                                                          ;;                   ;
CODE_00BFBC:          SEP #$30                            ;;BFBC|----/----\----; Index (8 bit) Accum (8 bit) 
                      LDA.B !Map16TileGenerate            ;;BFBE|----/----\----;
                      DEC A                               ;;BFC0|----/----\----;
                      PHK                                 ;;BFC1|----/----\----;
                      PER $0003                           ;;BFC2|----/----\----;
                      JML ExecutePtr                      ;;BFC5|----/----\----; $9C - Tile generated 
                                                          ;;                   ;
                                                          ;;                   ;
GeneratedTiles:       dw CODE_00C074                      ;;BFC9|----/----\----; 01 - empty space 
                      dw CODE_00C077                      ;;BFCB|----/----\----; 02 - empty space 
                      dw CODE_00C077                      ;;BFCD|----/----\----; 03 - vine 
                      dw CODE_00C077                      ;;BFCF|----/----\----; 04 - tree background, for berries 
                      dw CODE_00C077                      ;;BFD1|----/----\----; 05 - always turning block 
                      dw CODE_00C077                      ;;BFD3|----/----\----; 06 - coin 
                      dw CODE_00C077                      ;;BFD5|----/----\----; 07 - Mushroom scale base 
                      dw CODE_00C077                      ;;BFD7|----/----\----; 08 - mole hole 
                      dw CODE_00C0C4                      ;;BFD9|----/----\----; 09 - invisible solid 
                      dw CODE_00C0C4                      ;;BFDB|----/----\----; 0a - multiple coin turnblock 
                      dw CODE_00C0C4                      ;;BFDD|----/----\----; 0b - multiple coin q block 
                      dw CODE_00C0C4                      ;;BFDF|----/----\----; 0c - turn block 
                      dw CODE_00C0C4                      ;;BFE1|----/----\----; 0d - used block 
                      dw CODE_00C0C4                      ;;BFE3|----/----\----; 0e - music block 
                      dw CODE_00C0C4                      ;;BFE5|----/----\----; 0f - music 
                      dw CODE_00C0C4                      ;;BFE7|----/----\----; 10 - all way music block 
                      dw CODE_00C0C4                      ;;BFE9|----/----\----; 11 - sideways turn block 
                      dw CODE_00C0C4                      ;;BFEB|----/----\----; 12 - tranlucent 
                      dw CODE_00C0C4                      ;;BFED|----/----\----; 13 - on off 
                      dw CODE_00C0C4                      ;;BFEF|----/----\----; 14 - side of pipe, left 
                      dw CODE_00C0C4                      ;;BFF1|----/----\----; 15 - side of pipe, right 
                      dw CODE_00C0C1                      ;;BFF3|----/----\----; 16 - used 
                      dw CODE_00C0C1                      ;;BFF5|----/----\----; 17 - O block from 1up game 
                      dw CODE_00C1AC                      ;;BFF7|----/----\----; 18 - invisible block containing wings 
                      dw CODE_00C334                      ;;BFF9|----/----\----; 19 - cage 
                      dw CODE_00C334                      ;;BFFB|----/----\----; 1a - cage 
                      dw CODE_00C3D1                      ;;BFFD|----/----\----; 1b -  
                                                          ;;                   ;
DATA_00BFFF:          db $00,$00,$80,$00,$00,$01          ;;BFFF|----/----\----;
                                                          ;;                   ;
DATA_00C005:          db $80,$40,$20,$10,$08,$04,$02,$01  ;;C005|----/----\----;
                                                          ;;                   ;
CODE_00C00D:          REP #$30                            ;;C00D|----/----\----; Index (16 bit) Accum (16 bit) 
                      LDA.B !TouchBlockXPos               ;;C00F|----/----\----;
                      AND.W #$FF00                        ;;C011|----/----\----;
                      LSR A                               ;;C014|----/----\----;
                      LSR A                               ;;C015|----/----\----;
                      LSR A                               ;;C016|----/----\----;
                      LSR A                               ;;C017|----/----\----;
                      LSR A                               ;;C018|----/----\----;
                      LSR A                               ;;C019|----/----\----;
                      STA.B !_4                           ;;C01A|----/----\----;
                      LDA.B !TouchBlockXPos               ;;C01C|----/----\----;
                      AND.W #$0080                        ;;C01E|----/----\----;
                      LSR A                               ;;C021|----/----\----;
                      LSR A                               ;;C022|----/----\----;
                      LSR A                               ;;C023|----/----\----;
                      LSR A                               ;;C024|----/----\----;
                      LSR A                               ;;C025|----/----\----;
                      LSR A                               ;;C026|----/----\----;
                      LSR A                               ;;C027|----/----\----;
                      ORA.B !_4                           ;;C028|----/----\----;
                      STA.B !_4                           ;;C02A|----/----\----;
                      LDA.B !TouchBlockYPos               ;;C02C|----/----\----;
                      AND.W #$0100                        ;;C02E|----/----\----;
                      BEQ +                               ;;C031|----/----\----;
                      LDA.B !_4                           ;;C033|----/----\----;
                      ORA.W #$0002                        ;;C035|----/----\----;
                      STA.B !_4                           ;;C038|----/----\----;
                    + LDA.W !ItemMemorySetting            ;;C03A|----/----\----;
                      AND.W #$000F                        ;;C03D|----/----\----;
                      ASL A                               ;;C040|----/----\----;
                      TAX                                 ;;C041|----/----\----;
                      LDA.L DATA_00BFFF,X                 ;;C042|----/----\----;
                      CLC                                 ;;C046|----/----\----;
                      ADC.B !_4                           ;;C047|----/----\----;
                      STA.B !_4                           ;;C049|----/----\----;
                      TAY                                 ;;C04B|----/----\----;
                      LDA.B !TouchBlockXPos               ;;C04C|----/----\----;
                      AND.W #$0070                        ;;C04E|----/----\----;
                      LSR A                               ;;C051|----/----\----;
                      LSR A                               ;;C052|----/----\----;
                      LSR A                               ;;C053|----/----\----;
                      LSR A                               ;;C054|----/----\----;
                      TAX                                 ;;C055|----/----\----;
                      SEP #$20                            ;;C056|----/----\----; Accum (8 bit) 
                      LDA.W !ItemMemoryTable,Y            ;;C058|----/----\----;
                      ORA.L DATA_00C005,X                 ;;C05B|----/----\----;
                      STA.W !ItemMemoryTable,Y            ;;C05F|----/----\----;
                      RTS                                 ;;C062|----/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
                      db $7F,$BF,$DF,$EF,$F7,$FB,$FD,$FE  ;;C063|----/----\----;
TileToGeneratePg0:    db $25,$25,$25,$06,$49,$48,$2B,$A2  ;;C06B|----/----\----;
                      db $C6                              ;;C073|----/----\----;
                                                          ;;                   ;
CODE_00C074:          JSR CODE_00C00D                     ;;C074|----/----\----;
CODE_00C077:          REP #$30                            ;;C077|----/----\----; Index (16 bit) Accum (16 bit) 
                      LDA.B !TouchBlockYPos               ;;C079|----/----\----;
                      AND.W #$01F0                        ;;C07B|----/----\----;
                      STA.B !_4                           ;;C07E|----/----\----;
                      LDA.B !TouchBlockXPos               ;;C080|----/----\----;
                      LSR A                               ;;C082|----/----\----;
                      LSR A                               ;;C083|----/----\----;
                      LSR A                               ;;C084|----/----\----;
                      LSR A                               ;;C085|----/----\----;
                      AND.W #$000F                        ;;C086|----/----\----;
                      ORA.B !_4                           ;;C089|----/----\----;
                      TAY                                 ;;C08B|----/----\----;
                      LDA.B !Map16TileGenerate            ;;C08C|----/----\----; \ X = index of tile to generate 
                      AND.W #$00FF                        ;;C08E|----/----\----;  | 
                      TAX                                 ;;C091|----/----\----; / 
                      SEP #$20                            ;;C092|----/----\----; Accum (8 bit) 
                      LDA.B [!Map16HighPtr],Y             ;;C094|----/----\----; \ Reset #$01 bit 
                      AND.B #$FE                          ;;C096|----/----\----;  | 
                      STA.B [!Map16HighPtr],Y             ;;C098|----/----\----; / 
                      LDA.L TileToGeneratePg0,X           ;;C09A|----/----\----; \ Store tile 
                      STA.B [!Map16LowPtr],Y              ;;C09E|----/----\----; / 
                      REP #$20                            ;;C0A0|----/----\----; Accum (16 bit) 
                      AND.W #$00FF                        ;;C0A2|----/----\----;
                      ASL A                               ;;C0A5|----/----\----;
                      TAY                                 ;;C0A6|----/----\----;
                      JMP CODE_00C0FB                     ;;C0A7|----/----\----;
                                                          ;;                   ;
                                                          ;;                   ;
                      db $80,$40,$20,$10,$08,$04,$02,$01  ;;C0AA|----/----\----;
TileToGeneratePg1:    db $52,$1B,$23,$1E,$32,$13,$15,$16  ;;C0B2|----/----\----;
                      db $2B,$2C,$12,$68,$69,$32,$5E      ;;C0BA|----/----\----;
                                                          ;;                   ;
CODE_00C0C1:          JSR CODE_00C00D                     ;;C0C1|----/----\----;
CODE_00C0C4:          REP #$30                            ;;C0C4|----/----\----; Index (16 bit) Accum (16 bit) 
                      LDA.B !TouchBlockYPos               ;;C0C6|----/----\----;
                      AND.W #$01F0                        ;;C0C8|----/----\----;
                      STA.B !_4                           ;;C0CB|----/----\----;
                      LDA.B !TouchBlockXPos               ;;C0CD|----/----\----;
                      LSR A                               ;;C0CF|----/----\----;
                      LSR A                               ;;C0D0|----/----\----;
                      LSR A                               ;;C0D1|----/----\----;
                      LSR A                               ;;C0D2|----/----\----;
                      AND.W #$000F                        ;;C0D3|----/----\----;
                      ORA.B !_4                           ;;C0D6|----/----\----;
                      TAY                                 ;;C0D8|----/----\----;
                      LDA.B !Map16TileGenerate            ;;C0D9|----/----\----; \ X = index of tile to generate 
                      SEC                                 ;;C0DB|----/----\----;  | 
                      SBC.W #$0009                        ;;C0DC|----/----\----;  | 
                      AND.W #$00FF                        ;;C0DF|----/----\----;  | 
                      TAX                                 ;;C0E2|----/----\----; / 
                      SEP #$20                            ;;C0E3|----/----\----; Accum (8 bit) 
                      LDA.B [!Map16HighPtr],Y             ;;C0E5|----/----\----; \ Set #$01 bit 
                      ORA.B #$01                          ;;C0E7|----/----\----;  | 
                      STA.B [!Map16HighPtr],Y             ;;C0E9|----/----\----; / 
                      LDA.L TileToGeneratePg1,X           ;;C0EB|----/----\----; \ Store tile 
                      STA.B [!Map16LowPtr],Y              ;;C0EF|----/----\----; / 
                      REP #$20                            ;;C0F1|----/----\----; Accum (16 bit) 
                      AND.W #$00FF                        ;;C0F3|----/----\----;
                      ORA.W #$0100                        ;;C0F6|----/----\----;
                      ASL A                               ;;C0F9|----/----\----;
                      TAY                                 ;;C0FA|----/----\----;
CODE_00C0FB:          LDA.B !ScreenMode                   ;;C0FB|----/----\----;
                      STA.B !_0                           ;;C0FD|----/----\----;
                      LDA.W !LayerProcessing              ;;C0FF|----/----\----;
                      BEQ +                               ;;C102|----/----\----;
                      LSR.B !_0                           ;;C104|----/----\----;
                    + LDA.B !_0                           ;;C106|----/----\----;
                      AND.W #$0001                        ;;C108|----/----\----;
                      BNE CODE_00C127                     ;;C10B|----/----\----;
                      LDA.B !_8                           ;;C10D|----/----\----;
                      AND.W #$FFF0                        ;;C10F|----/----\----;
                      BMI CODE_00C11A                     ;;C112|----/----\----;
                      CMP.B !_C                           ;;C114|----/----\----;
                      BEQ CODE_00C13E                     ;;C116|----/----\----;
                      BCS CODE_00C124                     ;;C118|----/----\----;
CODE_00C11A:          CLC                                 ;;C11A|----/----\----;
                      ADC.W #$0200                        ;;C11B|----/----\----;
                      CMP.B !_C                           ;;C11E|----/----\----;
                      BEQ CODE_00C124                     ;;C120|----/----\----;
                      BCS CODE_00C13E                     ;;C122|----/----\----;
CODE_00C124:          JMP Return00C1AB                    ;;C124|----/----\----;
                                                          ;;                   ;
CODE_00C127:          LDA.B !_A                           ;;C127|----/----\----;
                      AND.W #$FFF0                        ;;C129|----/----\----;
                      BMI CODE_00C134                     ;;C12C|----/----\----;
                      CMP.B !_E                           ;;C12E|----/----\----;
                      BEQ CODE_00C13E                     ;;C130|----/----\----;
                      BCS Return00C1AB                    ;;C132|----/----\----;
CODE_00C134:          CLC                                 ;;C134|----/----\----;
                      ADC.W #$0200                        ;;C135|----/----\----;
                      CMP.B !_E                           ;;C138|----/----\----;
                      BEQ Return00C1AB                    ;;C13A|----/----\----;
                      BCC Return00C1AB                    ;;C13C|----/----\----;
CODE_00C13E:          LDA.L !DynStripeImgSize             ;;C13E|----/----\----;
                      TAX                                 ;;C142|----/----\----;
                      SEP #$20                            ;;C143|----/----\----; Accum (8 bit) 
                      LDA.B !_6                           ;;C145|----/----\----;
                      STA.L !DynamicStripeImage,X         ;;C147|----/----\----;
                      STA.L !DynamicStripeImage+8,X       ;;C14B|----/----\----;
                      LDA.B !_7                           ;;C14F|----/----\----;
                      STA.L !DynamicStripeImage+1,X       ;;C151|----/----\----;
                      CLC                                 ;;C155|----/----\----;
                      ADC.B #$20                          ;;C156|----/----\----;
                      STA.L !DynamicStripeImage+9,X       ;;C158|----/----\----;
                      LDA.B #$00                          ;;C15C|----/----\----;
                      STA.L !DynamicStripeImage+2,X       ;;C15E|----/----\----;
                      STA.L !DynamicStripeImage+$0A,X     ;;C162|----/----\----;
                      LDA.B #$03                          ;;C166|----/----\----;
                      STA.L !DynamicStripeImage+3,X       ;;C168|----/----\----;
                      STA.L !DynamicStripeImage+$0B,X     ;;C16C|----/----\----;
                      LDA.B #$FF                          ;;C170|----/----\----;
                      STA.L !DynamicStripeImage+$10,X     ;;C172|----/----\----;
                      LDA.B #$0D                          ;;C176|----/----\----;
                      STA.B !_6                           ;;C178|----/----\----;
                      REP #$20                            ;;C17A|----/----\----; Accum (16 bit) 
                      LDA.W !Map16Pointers,Y              ;;C17C|----/----\----;
                      STA.B !_4                           ;;C17F|----/----\----;
                      LDY.W #$0000                        ;;C181|----/----\----;
                      LDA.B [!_4],Y                       ;;C184|----/----\----;
                      STA.L !DynamicStripeImage+4,X       ;;C186|----/----\----;
                      INY                                 ;;C18A|----/----\----;
                      INY                                 ;;C18B|----/----\----;
                      LDA.B [!_4],Y                       ;;C18C|----/----\----;
                      STA.L !DynamicStripeImage+$0C,X     ;;C18E|----/----\----;
                      INY                                 ;;C192|----/----\----;
                      INY                                 ;;C193|----/----\----;
                      LDA.B [!_4],Y                       ;;C194|----/----\----;
                      STA.L !DynamicStripeImage+6,X       ;;C196|----/----\----;
                      INY                                 ;;C19A|----/----\----;
                      INY                                 ;;C19B|----/----\----;
                      LDA.B [!_4],Y                       ;;C19C|----/----\----;
                      STA.L !DynamicStripeImage+$0E,X     ;;C19E|----/----\----;
                      TXA                                 ;;C1A2|----/----\----;
                      CLC                                 ;;C1A3|----/----\----;
                      ADC.W #$0010                        ;;C1A4|----/----\----;
                      STA.L !DynStripeImgSize             ;;C1A7|----/----\----;
Return00C1AB:         RTS                                 ;;C1AB|----/----\----; Return 
                                                          ;;                   ;
CODE_00C1AC:          JSR CODE_00C00D                     ;;C1AC|----/----\----;
                      REP #$30                            ;;C1AF|----/----\----; Index (16 bit) Accum (16 bit) 
                      LDA.B !TouchBlockYPos               ;;C1B1|----/----\----;
                      AND.W #$01F0                        ;;C1B3|----/----\----;
                      STA.B !_4                           ;;C1B6|----/----\----;
                      LDA.B !TouchBlockXPos               ;;C1B8|----/----\----;
                      LSR A                               ;;C1BA|----/----\----;
                      LSR A                               ;;C1BB|----/----\----;
                      LSR A                               ;;C1BC|----/----\----;
                      LSR A                               ;;C1BD|----/----\----;
                      AND.W #$000F                        ;;C1BE|----/----\----;
                      ORA.B !_4                           ;;C1C1|----/----\----;
                      TAY                                 ;;C1C3|----/----\----;
                      SEP #$20                            ;;C1C4|----/----\----; Accum (8 bit) 
                      LDA.B #$25                          ;;C1C6|----/----\----;
                      STA.B [!Map16LowPtr],Y              ;;C1C8|----/----\----;
                      REP #$20                            ;;C1CA|----/----\----; Accum (16 bit) 
                      TYA                                 ;;C1CC|----/----\----;
                      CLC                                 ;;C1CD|----/----\----;
                      ADC.W #$0010                        ;;C1CE|----/----\----;
                      TAY                                 ;;C1D1|----/----\----;
                      SEP #$20                            ;;C1D2|----/----\----; Accum (8 bit) 
                      LDA.B #$25                          ;;C1D4|----/----\----;
                      STA.B [!Map16LowPtr],Y              ;;C1D6|----/----\----;
                      REP #$20                            ;;C1D8|----/----\----; Accum (16 bit) 
                      AND.W #$00FF                        ;;C1DA|----/----\----;
                      ASL A                               ;;C1DD|----/----\----;
                      TAY                                 ;;C1DE|----/----\----;
                      LDA.B !ScreenMode                   ;;C1DF|----/----\----;
                      STA.B !_0                           ;;C1E1|----/----\----;
                      LDA.W !LayerProcessing              ;;C1E3|----/----\----;
                      BEQ +                               ;;C1E6|----/----\----;
                      LSR.B !_0                           ;;C1E8|----/----\----;
                    + LDA.B !_0                           ;;C1EA|----/----\----;
                      AND.W #$0001                        ;;C1EC|----/----\----;
                      BNE CODE_00C20B                     ;;C1EF|----/----\----;
                      LDA.B !_8                           ;;C1F1|----/----\----;
                      AND.W #$FFF0                        ;;C1F3|----/----\----;
                      BMI CODE_00C1FE                     ;;C1F6|----/----\----;
                      CMP.B !_C                           ;;C1F8|----/----\----;
                      BEQ CODE_00C222                     ;;C1FA|----/----\----;
                      BCS Return00C1AB                    ;;C1FC|----/----\----;
CODE_00C1FE:          CLC                                 ;;C1FE|----/----\----;
                      ADC.W #$0200                        ;;C1FF|----/----\----;
                      CMP.B !_C                           ;;C202|----/----\----;
                      BCC Return00C1AB                    ;;C204|----/----\----;
                      BEQ Return00C1AB                    ;;C206|----/----\----;
                      JMP CODE_00C222                     ;;C208|----/----\----;
                                                          ;;                   ;
CODE_00C20B:          LDA.B !_A                           ;;C20B|----/----\----;
                      AND.W #$FFF0                        ;;C20D|----/----\----;
                      BMI CODE_00C218                     ;;C210|----/----\----;
                      CMP.B !_E                           ;;C212|----/----\----;
                      BEQ CODE_00C222                     ;;C214|----/----\----;
                      BCS Return00C1AB                    ;;C216|----/----\----;
CODE_00C218:          CLC                                 ;;C218|----/----\----;
                      ADC.W #$0200                        ;;C219|----/----\----;
                      CMP.B !_E                           ;;C21C|----/----\----;
                      BEQ Return00C1AB                    ;;C21E|----/----\----;
                      BCC Return00C1AB                    ;;C220|----/----\----;
CODE_00C222:          LDA.L !DynStripeImgSize             ;;C222|----/----\----;
                      TAX                                 ;;C226|----/----\----;
                      SEP #$20                            ;;C227|----/----\----; Accum (8 bit) 
                      LDA.B !_6                           ;;C229|----/----\----;
                      STA.L !DynamicStripeImage,X         ;;C22B|----/----\----;
                      STA.L !DynamicStripeImage+$0C,X     ;;C22F|----/----\----;
                      LDA.B !_7                           ;;C233|----/----\----;
                      STA.L !DynamicStripeImage+1,X       ;;C235|----/----\----;
                      INC A                               ;;C239|----/----\----;
                      STA.L !DynamicStripeImage+$0D,X     ;;C23A|----/----\----;
                      LDA.B #$80                          ;;C23E|----/----\----;
                      STA.L !DynamicStripeImage+2,X       ;;C240|----/----\----;
                      STA.L !DynamicStripeImage+$0E,X     ;;C244|----/----\----;
                      LDA.B #$07                          ;;C248|----/----\----;
                      STA.L !DynamicStripeImage+3,X       ;;C24A|----/----\----;
                      STA.L !DynamicStripeImage+$0F,X     ;;C24E|----/----\----;
                      LDA.B #$FF                          ;;C252|----/----\----;
                      STA.L !DynamicStripeImage+$18,X     ;;C254|----/----\----;
                      LDA.B #$0D                          ;;C258|----/----\----;
                      STA.B !_6                           ;;C25A|----/----\----;
                      REP #$20                            ;;C25C|----/----\----; Accum (16 bit) 
                      LDA.W !Map16Pointers,Y              ;;C25E|----/----\----;
                      STA.B !_4                           ;;C261|----/----\----;
                      LDY.W #$0000                        ;;C263|----/----\----;
                      LDA.B [!_4],Y                       ;;C266|----/----\----;
                      STA.L !DynamicStripeImage+4,X       ;;C268|----/----\----;
                      STA.L !DynamicStripeImage+8,X       ;;C26C|----/----\----;
                      INY                                 ;;C270|----/----\----;
                      INY                                 ;;C271|----/----\----;
                      LDA.B [!_4],Y                       ;;C272|----/----\----;
                      STA.L !DynamicStripeImage+$10,X     ;;C274|----/----\----;
                      STA.L !DynamicStripeImage+$14,X     ;;C278|----/----\----;
                      INY                                 ;;C27C|----/----\----;
                      INY                                 ;;C27D|----/----\----;
                      LDA.B [!_4],Y                       ;;C27E|----/----\----;
                      STA.L !DynamicStripeImage+6,X       ;;C280|----/----\----;
                      STA.L !DynamicStripeImage+$0A,X     ;;C284|----/----\----;
                      INY                                 ;;C288|----/----\----;
                      INY                                 ;;C289|----/----\----;
                      LDA.B [!_4],Y                       ;;C28A|----/----\----;
                      STA.L !DynamicStripeImage+$12,X     ;;C28C|----/----\----;
                      STA.L !DynamicStripeImage+$16,X     ;;C290|----/----\----;
                      TXA                                 ;;C294|----/----\----;
                      CLC                                 ;;C295|----/----\----;
                      ADC.W #$0018                        ;;C296|----/----\----;
                      STA.L !DynStripeImgSize             ;;C299|----/----\----;
                      RTS                                 ;;C29D|----/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
                      db $99,$9C,$8B,$1C,$8B,$1C,$8B,$1C  ;;C29E|----/----\----;
                      db $8B,$1C,$99,$DC,$9B,$1C,$F8,$1C  ;;C2A6|----/----\----;
                      db $F8,$1C,$F8,$1C,$F8,$1C,$9B,$5C  ;;C2AE|----/----\----;
                      db $9B,$1C,$F8,$1C,$F8,$1C,$F8,$1C  ;;C2B6|----/----\----;
                      db $F8,$1C,$9B,$5C,$9B,$1C,$F8,$1C  ;;C2BE|----/----\----;
                      db $F8,$1C,$F8,$1C,$F8,$1C,$9B,$5C  ;;C2C6|----/----\----;
                      db $9B,$1C,$F8,$1C,$F8,$1C,$F8,$1C  ;;C2CE|----/----\----;
                      db $F8,$1C,$9B,$5C,$99,$1C,$8B,$9C  ;;C2D6|----/----\----;
                      db $8B,$9C,$8B,$9C,$8B,$9C,$99,$5C  ;;C2DE|----/----\----;
                      db $BA,$9C,$AB,$1C,$AB,$1C,$AB,$1C  ;;C2E6|----/----\----;
                      db $AB,$1C,$BA,$DC,$AA,$1C,$82,$1C  ;;C2EE|----/----\----;
                      db $82,$1C,$82,$1C,$82,$1C,$AA,$5C  ;;C2F6|----/----\----;
                      db $AA,$1C,$82,$1C,$82,$1C,$82,$1C  ;;C2FE|----/----\----;
                      db $82,$1C,$AA,$5C,$AA,$1C,$82,$1C  ;;C306|----/----\----;
                      db $82,$1C,$82,$1C,$82,$1C,$AA,$5C  ;;C30E|----/----\----;
                      db $AA,$1C,$82,$1C,$82,$1C,$82,$1C  ;;C316|----/----\----;
                      db $82,$1C,$AA,$5C,$BA,$1C,$AB,$9C  ;;C31E|----/----\----;
                      db $AB,$9C,$AB,$9C,$AB,$9C,$BA,$5C  ;;C326|----/----\----;
DATA_00C32E:          db $9E,$C2                          ;;C32E|----/----\----;
                                                          ;;                   ;
DATA_00C330:          db $00,$E6,$C2,$00                  ;;C330|----/----\----;
                                                          ;;                   ;
CODE_00C334:          INC.B !_7                           ;;C334|----/----\----; Accum (8 bit) 
                      LDA.B !_7                           ;;C336|----/----\----;
                      CLC                                 ;;C338|----/----\----;
                      ADC.B #$20                          ;;C339|----/----\----;
                      STA.B !_7                           ;;C33B|----/----\----;
                      LDA.B !_6                           ;;C33D|----/----\----;
                      ADC.B #$00                          ;;C33F|----/----\----;
                      STA.B !_6                           ;;C341|----/----\----;
                      LDA.B !Map16TileGenerate            ;;C343|----/----\----;
                      SEC                                 ;;C345|----/----\----;
                      SBC.B #$19                          ;;C346|----/----\----;
                      STA.B !_0                           ;;C348|----/----\----;
                      ASL A                               ;;C34A|----/----\----;
                      CLC                                 ;;C34B|----/----\----;
                      ADC.B !_0                           ;;C34C|----/----\----;
                      TAX                                 ;;C34E|----/----\----;
                      LDA.L DATA_00C330,X                 ;;C34F|----/----\----;
                      STA.B !_4                           ;;C353|----/----\----;
                      REP #$30                            ;;C355|----/----\----; Index (16 bit) Accum (16 bit) 
                      LDA.L DATA_00C32E,X                 ;;C357|----/----\----;
                      STA.B !_2                           ;;C35B|----/----\----;
                      LDA.L !DynStripeImgSize             ;;C35D|----/----\----;
                      TAX                                 ;;C361|----/----\----;
                      LDY.W #$0005                        ;;C362|----/----\----;
                    - SEP #$20                            ;;C365|----/----\----; Accum (8 bit) 
                      LDA.B !_6                           ;;C367|----/----\----;
                      STA.L !DynamicStripeImage,X         ;;C369|----/----\----;
                      LDA.B !_7                           ;;C36D|----/----\----;
                      STA.L !DynamicStripeImage+1,X       ;;C36F|----/----\----;
                      LDA.B #$00                          ;;C373|----/----\----;
                      STA.L !DynamicStripeImage+2,X       ;;C375|----/----\----;
                      LDA.B #$0B                          ;;C379|----/----\----;
                      STA.L !DynamicStripeImage+3,X       ;;C37B|----/----\----;
                      LDA.B !_7                           ;;C37F|----/----\----;
                      CLC                                 ;;C381|----/----\----;
                      ADC.B #$20                          ;;C382|----/----\----;
                      STA.B !_7                           ;;C384|----/----\----;
                      LDA.B !_6                           ;;C386|----/----\----;
                      ADC.B #$00                          ;;C388|----/----\----;
                      STA.B !_6                           ;;C38A|----/----\----;
                      REP #$20                            ;;C38C|----/----\----; Accum (16 bit) 
                      TXA                                 ;;C38E|----/----\----;
                      CLC                                 ;;C38F|----/----\----;
                      ADC.W #$0010                        ;;C390|----/----\----;
                      TAX                                 ;;C393|----/----\----;
                      DEY                                 ;;C394|----/----\----;
                      BPL -                               ;;C395|----/----\----;
                      LDA.L !DynStripeImgSize             ;;C397|----/----\----;
                      TAX                                 ;;C39B|----/----\----;
                      LDY.W #$0000                        ;;C39C|----/----\----;
CODE_00C39F:          LDA.W #$0005                        ;;C39F|----/----\----;
                      STA.B !_0                           ;;C3A2|----/----\----;
                    - LDA.B [!_2],Y                       ;;C3A4|----/----\----;
                      STA.L !DynamicStripeImage+4,X       ;;C3A6|----/----\----;
                      INY                                 ;;C3AA|----/----\----;
                      INY                                 ;;C3AB|----/----\----;
                      INX                                 ;;C3AC|----/----\----;
                      INX                                 ;;C3AD|----/----\----;
                      DEC.B !_0                           ;;C3AE|----/----\----;
                      BPL -                               ;;C3B0|----/----\----;
                      TXA                                 ;;C3B2|----/----\----;
                      CLC                                 ;;C3B3|----/----\----;
                      ADC.W #$0004                        ;;C3B4|----/----\----;
                      TAX                                 ;;C3B7|----/----\----;
                      CPY.W #$0048                        ;;C3B8|----/----\----;
                      BNE CODE_00C39F                     ;;C3BB|----/----\----;
                      LDA.W #$00FF                        ;;C3BD|----/----\----;
                      STA.L !DynamicStripeImage,X         ;;C3C0|----/----\----;
                      LDA.L !DynStripeImgSize             ;;C3C4|----/----\----;
                      CLC                                 ;;C3C8|----/----\----;
                      ADC.W #$0060                        ;;C3C9|----/----\----;
                      STA.L !DynStripeImgSize             ;;C3CC|----/----\----;
                      RTS                                 ;;C3D0|----/----\----; Return 
                                                          ;;                   ;
CODE_00C3D1:          REP #$30                            ;;C3D1|----/----\----; Index (16 bit) Accum (16 bit) 
                      LDA.B !TouchBlockYPos               ;;C3D3|----/----\----;
                      AND.W #$01F0                        ;;C3D5|----/----\----;
                      STA.B !_4                           ;;C3D8|----/----\----;
                      LDA.B !TouchBlockXPos               ;;C3DA|----/----\----;
                      LSR A                               ;;C3DC|----/----\----;
                      LSR A                               ;;C3DD|----/----\----;
                      LSR A                               ;;C3DE|----/----\----;
                      LSR A                               ;;C3DF|----/----\----;
                      AND.W #$000F                        ;;C3E0|----/----\----;
                      ORA.B !_4                           ;;C3E3|----/----\----;
                      TAY                                 ;;C3E5|----/----\----;
                      LDA.L !DynStripeImgSize             ;;C3E6|----/----\----;
                      TAX                                 ;;C3EA|----/----\----;
                      SEP #$20                            ;;C3EB|----/----\----; Accum (8 bit) 
                      LDA.B #$25                          ;;C3ED|----/----\----;
                      STA.B [!Map16LowPtr],Y              ;;C3EF|----/----\----;
                      INY                                 ;;C3F1|----/----\----;
                      LDA.B #$25                          ;;C3F2|----/----\----;
                      STA.B [!Map16LowPtr],Y              ;;C3F4|----/----\----;
                      REP #$20                            ;;C3F6|----/----\----; Accum (16 bit) 
                      TYA                                 ;;C3F8|----/----\----;
                      CLC                                 ;;C3F9|----/----\----;
                      ADC.W #$0010                        ;;C3FA|----/----\----;
                      TAY                                 ;;C3FD|----/----\----;
                      SEP #$20                            ;;C3FE|----/----\----; Accum (8 bit) 
                      LDA.B #$25                          ;;C400|----/----\----;
                      STA.B [!Map16LowPtr],Y              ;;C402|----/----\----;
                      DEY                                 ;;C404|----/----\----;
                      LDA.B #$25                          ;;C405|----/----\----;
                      STA.B [!Map16LowPtr],Y              ;;C407|----/----\----;
                      LDY.W #$0003                        ;;C409|----/----\----;
                    - LDA.B !_6                           ;;C40C|----/----\----;
                      STA.L !DynamicStripeImage,X         ;;C40E|----/----\----;
                      LDA.B !_7                           ;;C412|----/----\----;
                      STA.L !DynamicStripeImage+1,X       ;;C414|----/----\----;
                      LDA.B #$40                          ;;C418|----/----\----;
                      STA.L !DynamicStripeImage+2,X       ;;C41A|----/----\----;
                      LDA.B #$06                          ;;C41E|----/----\----;
                      STA.L !DynamicStripeImage+3,X       ;;C420|----/----\----;
                      REP #$20                            ;;C424|----/----\----; Accum (16 bit) 
                      LDA.W #$18F8                        ;;C426|----/----\----;
                      STA.L !DynamicStripeImage+4,X       ;;C429|----/----\----;
                      TXA                                 ;;C42D|----/----\----;
                      CLC                                 ;;C42E|----/----\----;
                      ADC.W #$0006                        ;;C42F|----/----\----;
                      TAX                                 ;;C432|----/----\----;
                      SEP #$20                            ;;C433|----/----\----; Accum (8 bit) 
                      LDA.B !_7                           ;;C435|----/----\----;
                      CLC                                 ;;C437|----/----\----;
                      ADC.B #$20                          ;;C438|----/----\----;
                      STA.B !_7                           ;;C43A|----/----\----;
                      LDA.B !_6                           ;;C43C|----/----\----;
                      ADC.B #$00                          ;;C43E|----/----\----;
                      STA.B !_6                           ;;C440|----/----\----;
                      DEY                                 ;;C442|----/----\----;
                      BPL -                               ;;C443|----/----\----;
                      LDA.B #$FF                          ;;C445|----/----\----;
                      STA.L !DynamicStripeImage,X         ;;C447|----/----\----;
                      REP #$20                            ;;C44B|----/----\----; Accum (16 bit) 
                      TXA                                 ;;C44D|----/----\----;
                      STA.L !DynStripeImgSize             ;;C44E|----/----\----;
                      RTS                                 ;;C452|----/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
                      db $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF  ;;C453|----/----\----;
                      db $FF,$FF,$FF,$FF,$FF,$80,$40,$20  ;;C45B|----/----\----;
                      db $10,$08,$04,$02,$01,$80,$40,$20  ;;C463|----/----\----;
                      db $10,$08,$04,$02,$01              ;;C46B|----/----\----;
                                                          ;;                   ;
DATA_00C470:          db $90,$00,$90,$00                  ;;C470|----/----\----;
                                                          ;;                   ;
DATA_00C474:          db $04,$FC,$04,$FC                  ;;C474|----/----\----;
                                                          ;;                   ;
DATA_00C478:          db $30,$33,$33,$30,$01,$00          ;;C478|----/----\----;
                                                          ;;                   ;
CODE_00C47E:          STZ.B !PlayerHiddenTiles            ;;C47E|----/----\----; Index (8 bit) Accum (8 bit) 
                      LDA.W !UnusedStarCounter            ;;C480|----/----\----;
                      BPL +                               ;;C483|----/----\----;
                      JSL CODE_01C580                     ;;C485|----/----\----;
                      STZ.W !UnusedStarCounter            ;;C489|----/----\----;
                    + LDY.W !KeyholeTimer                 ;;C48C|----/----\----;
                      BEQ CODE_00C4BA                     ;;C48F|----/----\----;
                      STY.W !PlayerIsFrozen               ;;C491|----/----\----;
                      STY.B !SpriteLock                   ;;C494|----/----\----;
                      LDX.W !KeyholeDirection             ;;C496|----/----\----;
                      LDA.W !SpotlightSize                ;;C499|----/----\----;
                      CMP.W DATA_00C470,X                 ;;C49C|----/----\----;
                      BNE CODE_00C4BC                     ;;C49F|----/----\----;
                      DEY                                 ;;C4A1|----/----\----;
                      BNE CODE_00C4B7                     ;;C4A2|----/----\----;
                      INC.W !KeyholeDirection             ;;C4A4|----/----\----;
                      TXA                                 ;;C4A7|----/----\----;
                      LSR A                               ;;C4A8|----/----\----;
                      BCC +                               ;;C4A9|----/----\----;
                      JSR CODE_00FCEC                     ;;C4AB|----/----\----;
                      LDA.B #$02                          ;;C4AE|----/----\----;
                      LDY.B #$0B                          ;;C4B0|----/----\----;
                      JSR CODE_00C9FE                     ;;C4B2|----/----\----;
                      LDY.B #$00                          ;;C4B5|----/----\----;
CODE_00C4B7:          STY.W !KeyholeTimer                 ;;C4B7|----/----\----;
CODE_00C4BA:          BRA +                               ;;C4BA|----/----\----;
                                                          ;;                   ;
CODE_00C4BC:          CLC                                 ;;C4BC|----/----\----;
                      ADC.W DATA_00C474,X                 ;;C4BD|----/----\----;
                      STA.W !SpotlightSize                ;;C4C0|----/----\----;
                      LDA.B #$22                          ;;C4C3|----/----\----;
                      STA.B !Layer12Window                ;;C4C5|----/----\----;
                      LDA.B #$02                          ;;C4C7|----/----\----;
                      STA.B !Layer34Window                ;;C4C9|----/----\----;
                      LDA.W DATA_00C478,X                 ;;C4CB|----/----\----;
                      STA.B !OBJCWWindow                  ;;C4CE|----/----\----;
                      LDA.B #$12                          ;;C4D0|----/----\----;
                      STA.B !ColorAddition                ;;C4D2|----/----\----;
                      REP #$20                            ;;C4D4|----/----\----; Accum (16 bit) 
                      LDA.W #$CB93                        ;;C4D6|----/----\----;
                      STA.B !_4                           ;;C4D9|----/----\----;
                      STZ.B !_6                           ;;C4DB|----/----\----;
                      SEP #$20                            ;;C4DD|----/----\----; Accum (8 bit) 
                      LDA.W !KeyholeXPos                  ;;C4DF|----/----\----;
                      SEC                                 ;;C4E2|----/----\----;
                      SBC.B !Layer1XPos                   ;;C4E3|----/----\----;
                      CLC                                 ;;C4E5|----/----\----;
                      ADC.B #$04                          ;;C4E6|----/----\----;
                      STA.B !_0                           ;;C4E8|----/----\----;
                      LDA.W !KeyholeYPos                  ;;C4EA|----/----\----;
                      SEC                                 ;;C4ED|----/----\----;
                      SBC.B !Layer1YPos                   ;;C4EE|----/----\----;
                      CLC                                 ;;C4F0|----/----\----;
                      ADC.B #$10                          ;;C4F1|----/----\----;
                      STA.B !_1                           ;;C4F3|----/----\----;
                      JSR CODE_00CA88                     ;;C4F5|----/----\----;
                    + LDA.W !PlayerIsFrozen               ;;C4F8|----/----\----;
                      BEQ +                               ;;C4FB|----/----\----;
                      JMP CODE_00C58F                     ;;C4FD|----/----\----;
                                                          ;;                   ;
                    + LDA.B !SpriteLock                   ;;C500|----/----\----; \ Branch if sprites locked 
                      BNE CODE_00C569                     ;;C502|----/----\----; / 
                      INC.B !EffFrame                     ;;C504|----/----\----;
                      LDX.B #$13                          ;;C506|----/----\----;
CODE_00C508:          LDA.W !ColorFadeTimer,X             ;;C508|----/----\----;
                      BEQ +                               ;;C50B|----/----\----;
                      DEC.W !ColorFadeTimer,X             ;;C50D|----/----\----;
                    + DEX                                 ;;C510|----/----\----;
                      BNE CODE_00C508                     ;;C511|----/----\----;
                      LDA.B !EffFrame                     ;;C513|----/----\----;
                      AND.B #$03                          ;;C515|----/----\----;
                      BNE CODE_00C569                     ;;C517|----/----\----;
                      LDA.W !BonusGameActivate            ;;C519|----/----\----;
                      BEQ CODE_00C533                     ;;C51C|----/----\----;
                      LDA.W !BonusFinishTimer             ;;C51E|----/----\----;
                      CMP.B #$44                          ;;C521|----/----\----;
                      BNE +                               ;;C523|----/----\----;
                      LDY.B #$14                          ;;C525|----/----\----;
                      STY.W !SPCIO2                       ;;C527|----/----\----; / Change music 
                    + CMP.B #$01                          ;;C52A|----/----\----;
                      BNE CODE_00C533                     ;;C52C|----/----\----;
                      LDY.B #$0B                          ;;C52E|----/----\----;
                      STY.W !GameMode                     ;;C530|----/----\----;
CODE_00C533:          LDY.W !BluePSwitchTimer             ;;C533|----/----\----;
                      CPY.W !SilverPSwitchTimer           ;;C536|----/----\----;
                      BCS +                               ;;C539|----/----\----;
                      LDY.W !SilverPSwitchTimer           ;;C53B|----/----\----;
                    + LDA.W !MusicBackup                  ;;C53E|----/----\----;
                      BMI +                               ;;C541|----/----\----;
                      CPY.B #$01                          ;;C543|----/----\----;
                      BNE +                               ;;C545|----/----\----;
                      LDY.W !DirectCoinTimer              ;;C547|----/----\----;
                      BNE +                               ;;C54A|----/----\----;
                      STA.W !SPCIO2                       ;;C54C|----/----\----; / Change music 
                    + CMP.B #$FF                          ;;C54F|----/----\----;
                      BEQ +                               ;;C551|----/----\----;
                      CPY.B #$1E                          ;;C553|----/----\----;
                      BNE +                               ;;C555|----/----\----;
                      LDA.B #$24                          ;;C557|----/----\----; \ Play sound effect 
                      STA.W !SPCIO3                       ;;C559|----/----\----; / 
                    + LDX.B #$06                          ;;C55C|----/----\----;
CODE_00C55E:          LDA.W !EmptyTimer14A8,X             ;;C55E|----/----\----;
                      BEQ +                               ;;C561|----/----\----;
                      DEC.W !EmptyTimer14A8,X             ;;C563|----/----\----;
                    + DEX                                 ;;C566|----/----\----;
                      BNE CODE_00C55E                     ;;C567|----/----\----;
CODE_00C569:          JSR CODE_00C593                     ;;C569|----/----\----;
                      LDA.B !byetudlrFrame                ;;C56C|----/----\----;
                      AND.B #$20                          ;;C56E|----/----\----;
                      BEQ CODE_00C58F                     ;;C570|----/----\----;
                      LDA.B !byetudlrHold                 ;;C572|----/----\----;
                      AND.B #$08                          ;;C574|----/----\----;
                      BRA CODE_00C585                     ;;C576|----/----\----; Change to BEQ to reach debug routine below 
                                                          ;;                   ;
                      LDA.B !Powerup                      ;;C578|----/----\----; \ Unreachable 
                      INC A                               ;;C57A|----/----\----;  | Debug: Cycle through powerups 
                      CMP.B #$04                          ;;C57B|----/----\----;  | 
                      BCC +                               ;;C57D|----/----\----;  | 
                      LDA.B #$00                          ;;C57F|----/----\----;  | 
                    + STA.B !Powerup                      ;;C581|----/----\----;  | 
                      BRA CODE_00C58F                     ;;C583|----/----\----; / 
                                                          ;;                   ;
CODE_00C585:          PHB                                 ;;C585|----/----\----;
                      LDA.B #$02                          ;;C586|----/----\----;
                      PHA                                 ;;C588|----/----\----;
                      PLB                                 ;;C589|----/----\----;
                      JSL CODE_028008                     ;;C58A|----/----\----;
                      PLB                                 ;;C58E|----/----\----;
CODE_00C58F:          STZ.W !NoteBlockActive              ;;C58F|----/----\----;
Return00C592:         RTS                                 ;;C592|----/----\----; Return 
                                                          ;;                   ;
CODE_00C593:          LDA.B !PlayerAnimation              ;;C593|----/----\----;
                      JSL ExecutePtr                      ;;C595|----/----\----;
                                                          ;;                   ;
                      dw ResetAni                         ;;C599|----/----\----; 0 - Reset                        
                      dw PowerDownAni                     ;;C59B|----/----\----; 1 - Power down                   
                      dw MushroomAni                      ;;C59D|----/----\----; 2 - Mushroom power up            
                      dw CapeAni                          ;;C59F|----/----\----; 3 - Cape power up                
                      dw FlowerAni                        ;;C5A1|----/----\----; 4 - Flower power up              
                      dw DoorPipeAni                      ;;C5A3|----/----\----; 5 - Door/Horizontal pipe exit    
                      dw VertPipeAni                      ;;C5A5|----/----\----; 6 - Vertical pipe exit           
                      dw PipeCannonAni                    ;;C5A7|----/----\----; 7 - Shot out of diagonal pipe    
                      dw YoshiWingsAni                    ;;C5A9|----/----\----; 8 - Yoshi wings exit             
                      dw MarioDeathAni                    ;;C5AB|----/----\----; 9 - Mario Death                  
                      dw EnterCastleAni                   ;;C5AD|----/----\----; A - Enter Castle                 
                      dw UnknownAniB                      ;;C5AF|----/----\----; B - freeze forever               
                      dw UnknownAniC                      ;;C5B1|----/----\----; C - random movement??            
                      dw Return00C592                     ;;C5B3|----/----\----; D - freeze forever               
                                                          ;;                   ;
UnknownAniB:          STZ.W !PlayerOverworldPose          ;;C5B5|----/----\----;
                      STZ.W !PlayerSlopePose              ;;C5B8|----/----\----;
                      LDA.W !EndLevelTimer                ;;C5BB|----/----\----;
                      BEQ CODE_00C5CE                     ;;C5BE|----/----\----;
                      JSL CODE_0CAB13                     ;;C5C0|----/----\----;
                      LDA.W !GameMode                     ;;C5C4|----/----\----;
                      CMP.B #$14                          ;;C5C7|----/----\----;
                      BEQ +                               ;;C5C9|----/----\----;
                      JMP CODE_00C95B                     ;;C5CB|----/----\----;
                                                          ;;                   ;
CODE_00C5CE:          STZ.W !HDMAEnable                   ;;C5CE|----/----\----;
                    + LDA.B #$01                          ;;C5D1|----/----\----;
                      STA.W !MessageBoxExpand             ;;C5D3|----/----\----;
                      LDA.B #$07                          ;;C5D6|----/----\----;
                      STA.W !LevelLoadObject              ;;C5D8|----/----\----;
                      JSR NoButtons                       ;;C5DB|----/----\----;
                      JMP CODE_00CD24                     ;;C5DE|----/----\----;
                                                          ;;                   ;
                                                          ;;                   ;
DATA_00C5E1:          db $10,$30,$31,$32,$33,$34,$0E      ;;C5E1|----/----\----;
                                                          ;;                   ;
DATA_00C5E8:          db $26                              ;;C5E8|----/----\----;
                                                          ;;                   ;
DATA_00C5E9:          db $11,$02,$48,$00,$60,$01,$09,$80  ;;C5E9|----/----\----;
                      db $08,$00,$20,$04,$60,$00,$01,$FF  ;;C5F1|----/----\----;
                      db $01,$02,$48,$00,$60,$41,$2C,$C1  ;;C5F9|----/----\----;
                      db $04,$27,$04,$2F,$08,$25,$01,$2F  ;;C601|----/----\----;
                      db $04,$27,$04,$00,$08,$41,$1B,$C1  ;;C609|----/----\----;
                      db $04,$27,$04,$2F,$08,$25,$01,$2F  ;;C611|----/----\----;
                      db $04,$27,$04,$00,$04,$01,$08,$20  ;;C619|----/----\----;
                      db $01,$01,$10,$00,$08,$41,$12,$81  ;;C621|----/----\----;
                      db $0A,$00,$40,$82,$10,$02,$20,$00  ;;C629|----/----\----;
                      db $30,$01,$01,$00,$50,$22,$01,$FF  ;;C631|----/----\----;
                      db $01,$02,$48,$00,$60,$01,$09,$80  ;;C639|----/----\----;
                      db $08,$00,$20,$04,$60,$00,$20,$10  ;;C641|----/----\----;
                      db $20,$01,$58,$00,$2C,$31,$01,$3A  ;;C649|----/----\----;
                      db $10,$31,$01,$3A,$10,$31,$01,$3A  ;;C651|----/----\----;
                      db $20,$28,$A0,$28,$40,$29,$04,$28  ;;C659|----/----\----;
                      db $04,$29,$04,$28,$04,$29,$04,$28  ;;C661|----/----\----;
                      db $40,$22,$01,$FF,$01,$02,$48,$00  ;;C669|----/----\----;
                      db $60,$01,$09,$80,$08,$00,$20,$04  ;;C671|----/----\----;
                      db $60,$10,$20,$31,$01,$18,$60,$31  ;;C679|----/----\----;
                      db $01,$3B,$80,$31,$01,$3C,$40,$FF  ;;C681|----/----\----;
                      db $01,$02,$48,$00,$60,$02,$30,$01  ;;C689|----/----\----;
                      db $84,$00,$20,$23,$01,$01,$16,$02  ;;C691|----/----\----;
                      db $20,$20,$01,$01,$20,$02,$20,$01  ;;C699|----/----\----;
                      db $02,$00,$80,$FF,$01,$02,$48,$00  ;;C6A1|----/----\----;
                      db $60,$02,$28,$01,$83,$00,$28,$24  ;;C6A9|----/----\----;
                      db $01,$02,$01,$00,$FF,$00,$40,$20  ;;C6B1|----/----\----;
                      db $01,$00,$40,$02,$60,$00,$30,$FF  ;;C6B9|----/----\----;
                      db $01,$02,$48,$00,$60,$01,$4E,$00  ;;C6C1|----/----\----;
                      db $40,$26,$01,$00,$1E,$20,$01,$00  ;;C6C9|----/----\----;
                      db $20,$08,$10,$20,$01,$2D,$18,$00  ;;C6D1|----/----\----;
                      db $A0,$20,$01,$2E,$01,$FF          ;;C6D9|----/----\----;
                                                          ;;                   ;
DATA_00C6DF:          db $01,$00,$10,$A0,$84,$50,$BC,$D8  ;;C6DF|----/----\----;
                                                          ;;                   ;
UnknownAniC:          JSR NoButtons                       ;;C6E7|----/----\----;
                      STZ.W !PlayerOverworldPose          ;;C6EA|----/----\----;
                      JSR CODE_00DC2D                     ;;C6ED|----/----\----;
                      LDA.B !PlayerYSpeed                 ;;C6F0|----/----\----; \ Branch if Mario has upward speed 
                      BMI CODE_00C73F                     ;;C6F2|----/----\----; / 
                      LDA.B !PlayerYPosNext               ;;C6F4|----/----\----;
                      CMP.B #$58                          ;;C6F6|----/----\----;
                      BCS CODE_00C739                     ;;C6F8|----/----\----;
                      LDY.B !PlayerXPosNext               ;;C6FA|----/----\----;
                      CPY.B #$40                          ;;C6FC|----/----\----;
                      BCC CODE_00C73F                     ;;C6FE|----/----\----;
                      CPY.B #$60                          ;;C700|----/----\----;
                      BCC CODE_00C71C                     ;;C702|----/----\----;
                      LDY.B !Layer1YPos                   ;;C704|----/----\----;
                      BEQ CODE_00C73F                     ;;C706|----/----\----;
                      CLC                                 ;;C708|----/----\----;
                      ADC.B !Layer1YPos                   ;;C709|----/----\----;
                      CMP.B #$1C                          ;;C70B|----/----\----;
                      BMI CODE_00C73F                     ;;C70D|----/----\----;
                      SEC                                 ;;C70F|----/----\----;
                      SBC.B !Layer1YPos                   ;;C710|----/----\----;
                      LDX.B #$D0                          ;;C712|----/----\----;
                      LDY.B !PlayerDirection              ;;C714|----/----\----;
                      BEQ CODE_00C730                     ;;C716|----/----\----;
                      LDY.B #$00                          ;;C718|----/----\----;
                      BRA CODE_00C72E                     ;;C71A|----/----\----;
                                                          ;;                   ;
CODE_00C71C:          CMP.B #$4C                          ;;C71C|----/----\----;
                      BCC CODE_00C73F                     ;;C71E|----/----\----;
                      LDA.B #$1B                          ;;C720|----/----\----; \ Play sound effect 
                      STA.W !SPCIO3                       ;;C722|----/----\----; / 
                      INC.W !Layer1ScrollCmd              ;;C725|----/----\----;
                      LDA.B #$4C                          ;;C728|----/----\----;
                      LDY.B #$F4                          ;;C72A|----/----\----;
                      LDX.B #$C0                          ;;C72C|----/----\----;
CODE_00C72E:          STY.B !PlayerXSpeed                 ;;C72E|----/----\----;
CODE_00C730:          STX.B !PlayerYSpeed                 ;;C730|----/----\----;
                      LDX.B #$01                          ;;C732|----/----\----; \ Play sound effect 
                      STX.W !SPCIO0                       ;;C734|----/----\----; / 
                      BRA +                               ;;C737|----/----\----;
                                                          ;;                   ;
CODE_00C739:          STZ.B !PlayerInAir                  ;;C739|----/----\----;
                      LDA.B #$58                          ;;C73B|----/----\----;
                    + STA.B !PlayerYPosNext               ;;C73D|----/----\----;
CODE_00C73F:          LDX.W !CutsceneID                   ;;C73F|----/----\----;
                      LDA.B !GraphicsUncompPtr+2          ;;C742|----/----\----;
                      CLC                                 ;;C744|----/----\----;
                      ADC.W DATA_00C6DF,X                 ;;C745|----/----\----;
                      TAX                                 ;;C748|----/----\----;
                      LDA.B !PipeTimer                    ;;C749|----/----\----;
                      BNE +                               ;;C74B|----/----\----;
                      INC.B !GraphicsUncompPtr+2          ;;C74D|----/----\----;
                      INC.B !GraphicsUncompPtr+2          ;;C74F|----/----\----;
                      INX                                 ;;C751|----/----\----;
                      INX                                 ;;C752|----/----\----;
                      LDA.W DATA_00C5E9,X                 ;;C753|----/----\----;
                      STA.B !PipeTimer                    ;;C756|----/----\----;
                      LDA.W DATA_00C5E8,X                 ;;C758|----/----\----;
                      CMP.B #$2D                          ;;C75B|----/----\----;
                      BNE +                               ;;C75D|----/----\----;
                      LDA.B #$1E                          ;;C75F|----/----\----; \ Play sound effect 
                      STA.W !SPCIO0                       ;;C761|----/----\----; / 
                    + LDA.W DATA_00C5E8,X                 ;;C764|----/----\----;
                      CMP.B #$FF                          ;;C767|----/----\----;
                      BNE +                               ;;C769|----/----\----;
                      JMP Return00C7F8                    ;;C76B|----/----\----;
                                                          ;;                   ;
                    + PHA                                 ;;C76E|----/----\----;
                      AND.B #$10                          ;;C76F|----/----\----;
                      BEQ +                               ;;C771|----/----\----;
                      JSL CODE_0CD4A4                     ;;C773|----/----\----;
                    + PLA                                 ;;C777|----/----\----;
                      TAY                                 ;;C778|----/----\----;
                      AND.B #$20                          ;;C779|----/----\----;
                      BNE CODE_00C789                     ;;C77B|----/----\----;
                      STY.B !byetudlrHold                 ;;C77D|----/----\----;
                      TYA                                 ;;C77F|----/----\----;
                      AND.B #$BF                          ;;C780|----/----\----;
                      STA.B !byetudlrFrame                ;;C782|----/----\----;
                      JSR CODE_00CD39                     ;;C784|----/----\----;
                      BRA CODE_00C7F6                     ;;C787|----/----\----;
                                                          ;;                   ;
CODE_00C789:          TYA                                 ;;C789|----/----\----;
                      AND.B #$0F                          ;;C78A|----/----\----;
                      CMP.B #$07                          ;;C78C|----/----\----;
                      BCS CODE_00C7E9                     ;;C78E|----/----\----;
                      DEC A                               ;;C790|----/----\----;
                      BPL CODE_00C7A2                     ;;C791|----/----\----;
                      LDA.W !PickUpItemTimer              ;;C793|----/----\----;
                      BEQ CODE_00C79D                     ;;C796|----/----\----;
                      LDA.B #$09                          ;;C798|----/----\----; \ Play sound effect 
                      STA.W !SPCIO0                       ;;C79A|----/----\----; / 
CODE_00C79D:          INC.W !Layer1ScrollCmd              ;;C79D|----/----\----;
                      BRA CODE_00C7F6                     ;;C7A0|----/----\----;
                                                          ;;                   ;
CODE_00C7A2:          BNE CODE_00C7A9                     ;;C7A2|----/----\----;
                      INC.W !Layer2ScrollTimer            ;;C7A4|----/----\----;
                      BRA CODE_00C7F6                     ;;C7A7|----/----\----;
                                                          ;;                   ;
CODE_00C7A9:          DEC A                               ;;C7A9|----/----\----;
                      BNE CODE_00C7B6                     ;;C7AA|----/----\----;
                      LDA.B #$0E                          ;;C7AC|----/----\----; \ Play sound effect 
                      STA.W !SPCIO0                       ;;C7AE|----/----\----; / 
                      INC.W !Layer1ScrollXSpeed           ;;C7B1|----/----\----;
                      BRA CODE_00C7F6                     ;;C7B4|----/----\----;
                                                          ;;                   ;
CODE_00C7B6:          DEC A                               ;;C7B6|----/----\----;
                      BNE CODE_00C7C0                     ;;C7B7|----/----\----;
                      LDY.B #$88                          ;;C7B9|----/----\----;
                      STY.W !Layer2ScrollTimer            ;;C7BB|----/----\----;
                      BRA CODE_00C7F6                     ;;C7BE|----/----\----;
                                                          ;;                   ;
CODE_00C7C0:          DEC A                               ;;C7C0|----/----\----;
                      BNE CODE_00C7CE                     ;;C7C1|----/----\----;
                      LDA.B #$38                          ;;C7C3|----/----\----;
                      STA.W !Layer1ScrollXSpeed           ;;C7C5|----/----\----;
                      LDA.B #$07                          ;;C7C8|----/----\----;
                      TRB.B !PlayerXPosNext               ;;C7CA|----/----\----;
                      BRA CODE_00C7F6                     ;;C7CC|----/----\----;
                                                          ;;                   ;
CODE_00C7CE:          DEC A                               ;;C7CE|----/----\----;
                      BNE CODE_00C7DF                     ;;C7CF|----/----\----;
                      LDA.B #$09                          ;;C7D1|----/----\----; \ Play sound effect 
                      STA.W !SPCIO3                       ;;C7D3|----/----\----; / 
                      LDA.B #$D8                          ;;C7D6|----/----\----;
                      STA.B !PlayerXSpeed                 ;;C7D8|----/----\----;
                      INC.W !Layer1ScrollCmd              ;;C7DA|----/----\----;
                      BRA CODE_00C79D                     ;;C7DD|----/----\----;
                                                          ;;                   ;
CODE_00C7DF:          LDA.B #$20                          ;;C7DF|----/----\----;
                      STA.W !PickUpItemTimer              ;;C7E1|----/----\----;
                      INC.W !IsCarryingItem               ;;C7E4|----/----\----;
                      BRA CODE_00C7F6                     ;;C7E7|----/----\----;
                                                          ;;                   ;
CODE_00C7E9:          TAY                                 ;;C7E9|----/----\----;
                      LDA.W DATA_00C5E1-7,Y               ;;C7EA|----/----\----;
                      STA.W !PlayerPose                   ;;C7ED|----/----\----;
                      STZ.W !IsCarryingItem               ;;C7F0|----/----\----;
                      JSR CODE_00D7E4                     ;;C7F3|----/----\----;
CODE_00C7F6:          DEC.B !PipeTimer                    ;;C7F6|----/----\----;
Return00C7F8:         RTS                                 ;;C7F8|----/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
DATA_00C7F9:          db $C0,$FF,$A0,$00                  ;;C7F9|----/----\----;
                                                          ;;                   ;
YoshiWingsAni:        JSR NoButtons                       ;;C7FD|----/----\----;
                      LDA.B #$0B                          ;;C800|----/----\----;
                      STA.B !PlayerInAir                  ;;C802|----/----\----;
                      JSR CODE_00D7E4                     ;;C804|----/----\----;
                      LDA.B !PlayerYSpeed                 ;;C807|----/----\----; \ Branch if Mario has downward speed 
                      BPL CODE_00C80F                     ;;C809|----/----\----; / 
                      CMP.B #$90                          ;;C80B|----/----\----; \ Branch if Y speed < #$90 
                      BCC +                               ;;C80D|----/----\----; / 
CODE_00C80F:          SEC                                 ;;C80F|----/----\----; \ Y Speed -= #$0D 
                      SBC.B #$0D                          ;;C810|----/----\----;  | 
                      STA.B !PlayerYSpeed                 ;;C812|----/----\----; / 
                    + LDA.B #$02                          ;;C814|----/----\----;
                      LDY.B !PlayerXSpeed                 ;;C816|----/----\----;
                      BEQ CODE_00C827                     ;;C818|----/----\----;
                      BMI +                               ;;C81A|----/----\----;
                      LDA.B #$FE                          ;;C81C|----/----\----;
                    + CLC                                 ;;C81E|----/----\----;
                      ADC.B !PlayerXSpeed                 ;;C81F|----/----\----;
                      STA.B !PlayerXSpeed                 ;;C821|----/----\----;
                      BVC CODE_00C827                     ;;C823|----/----\----;
                      STZ.B !PlayerXSpeed                 ;;C825|----/----\----;
CODE_00C827:          JSR CODE_00DC2D                     ;;C827|----/----\----;
                      REP #$20                            ;;C82A|----/----\----; Accum (16 bit) 
                      LDY.W !YoshiHeavenFlag              ;;C82C|----/----\----;
                      LDA.B !PlayerYPosScrRel             ;;C82F|----/----\----;
                      CMP.W DATA_00C7F9,Y                 ;;C831|----/----\----;
                      SEP #$20                            ;;C834|----/----\----; Accum (8 bit) 
                      BPL +                               ;;C836|----/----\----;
                      STZ.B !PlayerAnimation              ;;C838|----/----\----;
                      TYA                                 ;;C83A|----/----\----;
                      BNE +                               ;;C83B|----/----\----;
                      INY                                 ;;C83D|----/----\----;
                      INY                                 ;;C83E|----/----\----;
                      STY.W !YoshiHeavenFlag              ;;C83F|----/----\----;
                      JSR CODE_00D273                     ;;C842|----/----\----;
                    + JMP CODE_00CD8F                     ;;C845|----/----\----;
                                                          ;;                   ;
DATA_00C848:          db $01,$5F,$00,$30,$08,$30,$00,$20  ;;C848|----/----\----;
                      db $40,$01,$00,$30,$01,$80,$FF,$01  ;;C850|----/----\----;
                      db $3F,$00,$30,$20,$01,$80,$06,$00  ;;C858|----/----\----;
                      db $3A,$01,$38,$00,$30,$08,$30,$00  ;;C860|----/----\----;
                      db $20,$40,$01,$00,$30,$01,$80,$FF  ;;C868|----/----\----;
                                                          ;;                   ;
EnterCastleAni:       STZ.W !SpinjumpFireball             ;;C870|----/----\----;
                      LDX.W !ObjectTileset                ;;C873|----/----\----;
                      BIT.W DATA_00A625,X                 ;;C876|----/----\----;
                      BMI CODE_00C889                     ;;C879|----/----\----;
                      BVS ADDR_00C883                     ;;C87B|----/----\----;
                      JSL CODE_02F57C                     ;;C87D|----/----\----;
                      BRA +                               ;;C881|----/----\----;
                                                          ;;                   ;
ADDR_00C883:          JSL ADDR_02F58C                     ;;C883|----/----\----;
                      BRA +                               ;;C887|----/----\----;
                                                          ;;                   ;
CODE_00C889:          JSL CODE_02F584                     ;;C889|----/----\----;
                    + LDX.B !PipeTimer                    ;;C88D|----/----\----;
                      LDA.B !byetudlrFrame                ;;C88F|----/----\----;
                      ORA.B !axlr0000Frame                ;;C891|----/----\----;
                      JSR NoButtons                       ;;C893|----/----\----;
                      BMI CODE_00C8FB                     ;;C896|----/----\----;
                      STZ.W !PlayerOverworldPose          ;;C898|----/----\----;
                      DEC.B !PlayerPipeAction             ;;C89B|----/----\----;
                      BNE +                               ;;C89D|----/----\----;
                      INX                                 ;;C89F|----/----\----;
                      INX                                 ;;C8A0|----/----\----;
                      STX.B !PipeTimer                    ;;C8A1|----/----\----;
                      LDA.W DATA_00C848-1,X               ;;C8A3|----/----\----;
                      STA.B !PlayerPipeAction             ;;C8A6|----/----\----;
                    + LDA.W DATA_00C848-2,X               ;;C8A8|----/----\----;
                      CMP.B #$FF                          ;;C8AB|----/----\----;
                      BEQ CODE_00C8FB                     ;;C8AD|----/----\----;
                      AND.B #$DF                          ;;C8AF|----/----\----;
                      STA.B !byetudlrHold                 ;;C8B1|----/----\----;
                      CMP.W DATA_00C848-2,X               ;;C8B3|----/----\----;
                      BEQ +                               ;;C8B6|----/----\----;
                      LDY.B #$80                          ;;C8B8|----/----\----;
                      STY.B !axlr0000Frame                ;;C8BA|----/----\----;
                    + ASL A                               ;;C8BC|----/----\----;
                      BPL CODE_00C8D1                     ;;C8BD|----/----\----;
                      JSR NoButtons                       ;;C8BF|----/----\----;
                      LDY.B #$B0                          ;;C8C2|----/----\----;
                      LDX.W !ObjectTileset                ;;C8C4|----/----\----;
                      BIT.W DATA_00A625,X                 ;;C8C7|----/----\----;
                      BMI +                               ;;C8CA|----/----\----;
                      LDY.B #$7F                          ;;C8CC|----/----\----;
                    + STY.W !NoYoshiIntroTimer            ;;C8CE|----/----\----;
CODE_00C8D1:          JSR CODE_00DC2D                     ;;C8D1|----/----\----;
                      LDA.B #$24                          ;;C8D4|----/----\----;
                      STA.B !PlayerInAir                  ;;C8D6|----/----\----;
                      LDA.B #$6F                          ;;C8D8|----/----\----;
                      LDY.W !PlayerRidingYoshi            ;;C8DA|----/----\----;
                      BEQ +                               ;;C8DD|----/----\----;
                      LDA.B #$5F                          ;;C8DF|----/----\----;
                    + LDX.W !ObjectTileset                ;;C8E1|----/----\----;
                      BIT.W DATA_00A625,X                 ;;C8E4|----/----\----;
                      BVC +                               ;;C8E7|----/----\----;
                      SEC                                 ;;C8E9|----/----\----;
                      SBC.B #$10                          ;;C8EA|----/----\----;
                    + CMP.B !PlayerYPosNext               ;;C8EC|----/----\----;
                      BCS +                               ;;C8EE|----/----\----;
                      INC A                               ;;C8F0|----/----\----;
                      STA.B !PlayerYPosNext               ;;C8F1|----/----\----;
                      STZ.B !PlayerInAir                  ;;C8F3|----/----\----;
                      STZ.W !SpinJumpFlag                 ;;C8F5|----/----\----;
                    + JMP CODE_00CD82                     ;;C8F8|----/----\----;
                                                          ;;                   ;
CODE_00C8FB:          INC.W !ShowMarioStart               ;;C8FB|----/----\----;
                      LDA.B #$0F                          ;;C8FE|----/----\----;
                      STA.W !GameMode                     ;;C900|----/----\----;
                      CPX.B #$11                          ;;C903|----/----\----;
                      BCC CODE_00C90A                     ;;C905|----/----\----;
                      INC.W !CarryYoshiThruLvls           ;;C907|----/----\----;
CODE_00C90A:          LDA.B #$01                          ;;C90A|----/----\----;
                      STA.W !RemoveYoshiFlag              ;;C90C|----/----\----;
                      LDA.B #$03                          ;;C90F|----/----\----; \ Play sound effect 
                      STA.W !SPCIO1                       ;;C911|----/----\----; / 
                      RTS                                 ;;C914|----/----\----; Return 
                                                          ;;                   ;
CODE_00C915:          JSR NoButtons                       ;;C915|----/----\----;
                      STZ.W !PlayerInCloud                ;;C918|----/----\----;
                      STZ.W !PlayerOverworldPose          ;;C91B|----/----\----;
                      STZ.W !PlayerSlopePose              ;;C91E|----/----\----;
                      LDA.B !ScreenMode                   ;;C921|----/----\----;
                      LSR A                               ;;C923|----/----\----;
                      BCS CODE_00C944                     ;;C924|----/----\----;
                      LDA.W !CutsceneID                   ;;C926|----/----\----;
                      ORA.W !SwitchPalaceColor            ;;C929|----/----\----;
                      BEQ CODE_00C96B                     ;;C92C|----/----\----;
                      LDA.B !PlayerInAir                  ;;C92E|----/----\----;
                      BEQ +                               ;;C930|----/----\----;
                      JSR CODE_00CCE0                     ;;C932|----/----\----;
                    + LDA.W !SwitchPalaceColor            ;;C935|----/----\----;
                      BNE CODE_00C948                     ;;C938|----/----\----;
                      JSR CODE_00B03E                     ;;C93A|----/----\----;
                      LDA.W !ColorFadeTimer               ;;C93D|----/----\----;
                      CMP.B #$40                          ;;C940|----/----\----;
                      BCC Return00C96A                    ;;C942|----/----\----;
CODE_00C944:          JSL CODE_05CBFF                     ;;C944|----/----\----;
CODE_00C948:          LDY.B #$01                          ;;C948|----/----\----;
                      STY.B !SpriteLock                   ;;C94A|----/----\----;
                      LDA.B !TrueFrame                    ;;C94C|----/----\----;
                      LSR A                               ;;C94E|----/----\----;
                      BCC Return00C96A                    ;;C94F|----/----\----;
                      DEC.W !EndLevelTimer                ;;C951|----/----\----;
                      BNE Return00C96A                    ;;C954|----/----\----;
                      LDA.W !SwitchPalaceColor            ;;C956|----/----\----;
                      BNE +                               ;;C959|----/----\----;
CODE_00C95B:          LDY.B #$0B                          ;;C95B|----/----\----;
                      LDA.B #$01                          ;;C95D|----/----\----;
                      JMP CODE_00C9FE                     ;;C95F|----/----\----;
                                                          ;;                   ;
                    + LDA.B #$A0                          ;;C962|----/----\----;
                      STA.W !VariousPromptTimer           ;;C964|----/----\----;
                      INC.W !MessageBoxTrigger            ;;C967|----/----\----;
Return00C96A:         RTS                                 ;;C96A|----/----\----; Return 
                                                          ;;                   ;
CODE_00C96B:          JSR CODE_00AF17                     ;;C96B|----/----\----;
                      LDA.W !ShowPeaceSign                ;;C96E|----/----\----;
                      BNE CODE_00C9AF                     ;;C971|----/----\----;
                      LDA.W !EndLevelTimer                ;;C973|----/----\----;
                      CMP.B #$28                          ;;C976|----/----\----;
                      BCC +                               ;;C978|----/----\----;
                      LDA.B #$01                          ;;C97A|----/----\----;
                      STA.B !PlayerDirection              ;;C97C|----/----\----;
                      STA.B !byetudlrHold                 ;;C97E|----/----\----;
                      LDA.B #$05                          ;;C980|----/----\----;
                      STA.B !PlayerXSpeed                 ;;C982|----/----\----;
                    + LDA.B !PlayerInAir                  ;;C984|----/----\----;
                      BEQ +                               ;;C986|----/----\----;
                      JSR CODE_00D76B                     ;;C988|----/----\----;
                    + LDA.B !PlayerXSpeed                 ;;C98B|----/----\----;
                      BNE +                               ;;C98D|----/----\----;
                      STZ.W !HorizLayer1Setting           ;;C98F|----/----\----;
                      JSR CODE_00CA3E                     ;;C992|----/----\----;
                      INC.W !ShowPeaceSign                ;;C995|----/----\----;
                      LDA.B #$40                          ;;C998|----/----\----;
                      STA.W !PlayerPeaceSign              ;;C99A|----/----\----;
                      ASL A                               ;;C99D|----/----\----;
                      STA.W !ColorFadeDir                 ;;C99E|----/----\----;
                      STZ.W !ColorFadeTimer               ;;C9A1|----/----\----;
                    + JMP CODE_00CD24                     ;;C9A4|----/----\----;
                                                          ;;                   ;
DATA_00C9A7:          db $25,$07,$40,$0E,$20,$1A,$34,$32  ;;C9A7|----/----\----;
                                                          ;;                   ;
CODE_00C9AF:          JSR SetMarioPeaceImg                ;;C9AF|----/----\----;
                      LDA.W !PlayerPeaceSign              ;;C9B2|----/----\----;
                      BEQ CODE_00C9C2                     ;;C9B5|----/----\----;
                      DEC.W !PlayerPeaceSign              ;;C9B7|----/----\----;
                      BNE +                               ;;C9BA|----/----\----;
                      LDA.B #$11                          ;;C9BC|----/----\----;
                      STA.W !SPCIO2                       ;;C9BE|----/----\----; / Change music 
                    + RTS                                 ;;C9C1|----/----\----; Return 
                                                          ;;                   ;
CODE_00C9C2:          JSR CODE_00CA44                     ;;C9C2|----/----\----;
                      LDA.B #$01                          ;;C9C5|----/----\----;
                      STA.B !byetudlrHold                 ;;C9C7|----/----\----;
                      JSR CODE_00CD24                     ;;C9C9|----/----\----;
                      LDA.W !SpotlightSize                ;;C9CC|----/----\----;
                      BNE Return00CA30                    ;;C9CF|----/----\----;
                      LDA.W !SecretGoalTape               ;;C9D1|----/----\----; \ Branch if Goal Tape extra bits == #$02 
                      INC A                               ;;C9D4|----/----\----;  | (never happens) 
                      CMP.B #$03                          ;;C9D5|----/----\----;  | 
                      BNE +                               ;;C9D7|----/----\----; / 
                      LDA.B #$01                          ;;C9D9|----/----\----; \ Unreachable 
                      STA.W !OWPlayerSubmap               ;;C9DB|----/----\----;  | Set submap to be Yoshi's Island 
                      LSR A                               ;;C9DE|----/----\----; / 
                    + LDY.B #$0C                          ;;C9DF|----/----\----;
                      LDX.W !BonusGameActivate            ;;C9E1|----/----\----;
                      BEQ +                               ;;C9E4|----/----\----;
                      LDX.B #$FF                          ;;C9E6|----/----\----;
                      STX.W !BonusGameActivate            ;;C9E8|----/----\----;
                      LDX.B #$F0                          ;;C9EB|----/----\----;
                      STX.W !MosaicSize                   ;;C9ED|----/----\----;
                      STZ.W !EndLevelTimer                ;;C9F0|----/----\----;
                      STZ.W !MusicBackup                  ;;C9F3|----/----\----;
                      LDY.B #$10                          ;;C9F6|----/----\----;
                    + STZ.W !Brightness                   ;;C9F8|----/----\----;
                      STZ.W !MosaicDirection              ;;C9FB|----/----\----;
CODE_00C9FE:          STA.W !OWLevelExitMode              ;;C9FE|----/----\----; Store secret/normal exit info 
                      LDA.W !CutsceneID                   ;;CA01|----/----\----;
                      BEQ CODE_00CA25                     ;;CA04|----/----\----;
                      LDX.B #$08                          ;;CA06|----/----\----;
                      LDA.W !TranslevelNo                 ;;CA08|----/----\----;
                      CMP.B #$13                          ;;CA0B|----/----\----;
                      BNE +                               ;;CA0D|----/----\----;
                      INC.W !OWLevelExitMode              ;;CA0F|----/----\----;
                    + CMP.B #$31                          ;;CA12|----/----\----;
                      BEQ CODE_00CA20                     ;;CA14|----/----\----;
CODE_00CA16:          CMP.W DATA_00C9A7-1,X               ;;CA16|----/----\----;
                      BEQ CODE_00CA20                     ;;CA19|----/----\----;
                      DEX                                 ;;CA1B|----/----\----;
                      BNE CODE_00CA16                     ;;CA1C|----/----\----;
                      BRA CODE_00CA25                     ;;CA1E|----/----\----;
                                                          ;;                   ;
CODE_00CA20:          STX.W !CutsceneID                   ;;CA20|----/----\----;
                      LDY.B #$18                          ;;CA23|----/----\----;
CODE_00CA25:          STY.W !GameMode                     ;;CA25|----/----\----;
                      INC.W !CreditsScreenNumber          ;;CA28|----/----\----;
CODE_00CA2B:          LDA.B #$01                          ;;CA2B|----/----\----;
                      STA.W !MidwayFlag                   ;;CA2D|----/----\----;
Return00CA30:         RTS                                 ;;CA30|----/----\----; Return 
                                                          ;;                   ;
SetMarioPeaceImg:     LDA.B #$26                          ;;CA31|----/----\----; \ Mario's image = Peace Sign, or 
                      LDY.W !PlayerRidingYoshi            ;;CA33|----/----\----;  | 
                      BEQ +                               ;;CA36|----/----\----;  | 
                      LDA.B #$14                          ;;CA38|----/----\----;  | Mario's image = Peace Sign on Yoshi 
                    + STA.W !PlayerPose                   ;;CA3A|----/----\----; / 
                      RTS                                 ;;CA3D|----/----\----; Return 
                                                          ;;                   ;
CODE_00CA3E:          LDA.B #$F0                          ;;CA3E|----/----\----;
                      STA.W !SpotlightSize                ;;CA40|----/----\----;
                      RTS                                 ;;CA43|----/----\----; Return 
                                                          ;;                   ;
CODE_00CA44:          LDA.W !SpotlightSize                ;;CA44|----/----\----;
                      BNE +                               ;;CA47|----/----\----;
                      RTS                                 ;;CA49|----/----\----; Return 
                                                          ;;                   ;
                    + JSR CODE_00CA61                     ;;CA4A|----/----\----;
                      LDA.B #$FC                          ;;CA4D|----/----\----;
                      JSR CODE_00CA6D                     ;;CA4F|----/----\----;
                      LDA.B #$33                          ;;CA52|----/----\----;
                      STA.B !Layer12Window                ;;CA54|----/----\----;
                      STA.B !OBJCWWindow                  ;;CA56|----/----\----;
                      LDA.B #$03                          ;;CA58|----/----\----;
                      STA.B !Layer34Window                ;;CA5A|----/----\----;
                      LDA.B #$22                          ;;CA5C|----/----\----;
                      STA.B !ColorAddition                ;;CA5E|----/----\----;
                      RTS                                 ;;CA60|----/----\----; Return 
                                                          ;;                   ;
CODE_00CA61:          REP #$20                            ;;CA61|----/----\----; 16 bit A ; Accum (16 bit) 
                      LDA.W #$CB12                        ;;CA63|----/----\----; \  
                      STA.B !_4                           ;;CA66|----/----\----;  |Load xCB12 into $04 and $06 
                      STA.B !_6                           ;;CA68|----/----\----; /  
                      SEP #$20                            ;;CA6A|----/----\----; 8 bit A ; Accum (8 bit) 
                      RTS                                 ;;CA6C|----/----\----; Return 
                                                          ;;                   ;
CODE_00CA6D:          CLC                                 ;;CA6D|----/----\----;
                      ADC.W !SpotlightSize                ;;CA6E|----/----\----;
                      STA.W !SpotlightSize                ;;CA71|----/----\----;
                      LDA.B !PlayerXPosScrRel             ;;CA74|----/----\----;
                      CLC                                 ;;CA76|----/----\----;
                      ADC.B #$08                          ;;CA77|----/----\----;
                      STA.B !_0                           ;;CA79|----/----\----;
                      LDA.B #$18                          ;;CA7B|----/----\----;
                      LDY.B !Powerup                      ;;CA7D|----/----\----;
                      BEQ +                               ;;CA7F|----/----\----;
                      LDA.B #$10                          ;;CA81|----/----\----;
                    + CLC                                 ;;CA83|----/----\----;
                      ADC.B !PlayerYPosScrRel             ;;CA84|----/----\----;
                      STA.B !_1                           ;;CA86|----/----\----;
CODE_00CA88:          REP #$30                            ;;CA88|----/----\----; 16 bit A ; Index (16 bit) Accum (16 bit) 
                      AND.W #$00FF                        ;;CA8A|----/----\----; Keep lower byte of A 
                      ASL A                               ;;CA8D|----/----\----; \  
                      DEC A                               ;;CA8E|----/----\----;  |Set Y to ((2A-1)*2) 
                      ASL A                               ;;CA8F|----/----\----;  | 
                      TAY                                 ;;CA90|----/----\----; /  
                      SEP #$20                            ;;CA91|----/----\----; 8 bit A ; Accum (8 bit) 
                      LDX.W #$0000                        ;;CA93|----/----\----;
CODE_00CA96:          LDA.B !_1                           ;;CA96|----/----\----;
                      CMP.W !SpotlightSize                ;;CA98|----/----\----;
                      BCC CODE_00CABD                     ;;CA9B|----/----\----;
                      LDA.B #$FF                          ;;CA9D|----/----\----;
                      STA.W !WindowTable,X                ;;CA9F|----/----\----;
                      STZ.W !WindowTable+1,X              ;;CAA2|----/----\----;
                      CPY.W #$01C0                        ;;CAA5|----/----\----;
                      BCS +                               ;;CAA8|----/----\----;
                      STA.W !WindowTable,Y                ;;CAAA|----/----\----;
                      INC A                               ;;CAAD|----/----\----;
                      STA.W !WindowTable+1,Y              ;;CAAE|----/----\----;
                    + INX                                 ;;CAB1|----/----\----;
                      INX                                 ;;CAB2|----/----\----;
                      DEY                                 ;;CAB3|----/----\----;
                      DEY                                 ;;CAB4|----/----\----;
                      LDA.B !_1                           ;;CAB5|----/----\----;
                      BEQ CODE_00CB0A                     ;;CAB7|----/----\----;
                      DEC.B !_1                           ;;CAB9|----/----\----;
                      BRA CODE_00CA96                     ;;CABB|----/----\----;
                                                          ;;                   ;
CODE_00CABD:          JSR CODE_00CC14                     ;;CABD|----/----\----;
                      CLC                                 ;;CAC0|----/----\----;
                      ADC.B !_0                           ;;CAC1|----/----\----;
                      BCC +                               ;;CAC3|----/----\----;
                      LDA.B #$FF                          ;;CAC5|----/----\----;
                    + STA.W !WindowTable+1,X              ;;CAC7|----/----\----;
                      LDA.B !_0                           ;;CACA|----/----\----;
                      SEC                                 ;;CACC|----/----\----;
                      SBC.B !_2                           ;;CACD|----/----\----;
                      BCS +                               ;;CACF|----/----\----;
                      LDA.B #$00                          ;;CAD1|----/----\----;
                    + STA.W !WindowTable,X                ;;CAD3|----/----\----;
                      CPY.W #$01E0                        ;;CAD6|----/----\----;
                      BCS CODE_00CAFE                     ;;CAD9|----/----\----;
                      LDA.B !_7                           ;;CADB|----/----\----;
                      BNE CODE_00CAE7                     ;;CADD|----/----\----;
                      LDA.B #$00                          ;;CADF|----/----\----;
                      STA.W !WindowTable+1,Y              ;;CAE1|----/----\----;
                      DEC A                               ;;CAE4|----/----\----;
                      BRA CODE_00CAFB                     ;;CAE5|----/----\----;
                                                          ;;                   ;
CODE_00CAE7:          LDA.B !_3                           ;;CAE7|----/----\----;
                      ADC.B !_0                           ;;CAE9|----/----\----;
                      BCC +                               ;;CAEB|----/----\----;
                      LDA.B #$FF                          ;;CAED|----/----\----;
                    + STA.W !WindowTable+1,Y              ;;CAEF|----/----\----;
                      LDA.B !_0                           ;;CAF2|----/----\----;
                      SEC                                 ;;CAF4|----/----\----;
                      SBC.B !_3                           ;;CAF5|----/----\----;
                      BCS CODE_00CAFB                     ;;CAF7|----/----\----;
                      LDA.B #$00                          ;;CAF9|----/----\----;
CODE_00CAFB:          STA.W !WindowTable,Y                ;;CAFB|----/----\----;
CODE_00CAFE:          INX                                 ;;CAFE|----/----\----;
                      INX                                 ;;CAFF|----/----\----;
                      DEY                                 ;;CB00|----/----\----;
                      DEY                                 ;;CB01|----/----\----;
                      LDA.B !_1                           ;;CB02|----/----\----;
                      BEQ CODE_00CB0A                     ;;CB04|----/----\----;
                      DEC.B !_1                           ;;CB06|----/----\----;
                      BNE CODE_00CABD                     ;;CB08|----/----\----;
CODE_00CB0A:          LDA.B #$80                          ;;CB0A|----/----\----;
                      STA.W !HDMAEnable                   ;;CB0C|----/----\----;
                      SEP #$10                            ;;CB0F|----/----\----; Index (8 bit) 
                      RTS                                 ;;CB11|----/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
                      db $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF  ;;CB12|----/----\----;
                      db $FF,$FF,$FF,$FF,$FE,$FE,$FE,$FE  ;;CB1A|----/----\----;
                      db $FD,$FD,$FD,$FD,$FC,$FC,$FC,$FB  ;;CB22|----/----\----;
                      db $FB,$FB,$FA,$FA,$F9,$F9,$F8,$F8  ;;CB2A|----/----\----;
                      db $F7,$F7,$F6,$F6,$F5,$F5,$F4,$F3  ;;CB32|----/----\----;
                      db $F3,$F2,$F1,$F1,$F0,$EF,$EE,$EE  ;;CB3A|----/----\----;
                      db $ED,$EC,$EB,$EA,$E9,$E9,$E8,$E7  ;;CB42|----/----\----;
                      db $E6,$E5,$E4,$E3,$E2,$E1,$DF,$DE  ;;CB4A|----/----\----;
                      db $DD,$DC,$DB,$DA,$D8,$D7,$D6,$D5  ;;CB52|----/----\----;
                      db $D3,$D2,$D0,$CF,$CD,$CC,$CA,$C9  ;;CB5A|----/----\----;
                      db $C7,$C6,$C4,$C2,$C1,$BF,$BD,$BB  ;;CB62|----/----\----;
                      db $B9,$B7,$B6,$B4,$B1,$AF,$AD,$AB  ;;CB6A|----/----\----;
                      db $A9,$A7,$A4,$A2,$9F,$9D,$9A,$97  ;;CB72|----/----\----;
                      db $95,$92,$8F,$8C,$89,$86,$82,$7F  ;;CB7A|----/----\----;
                      db $7B,$78,$74,$70,$6C,$67,$63,$5E  ;;CB82|----/----\----;
                      db $59,$53,$4D,$46,$3F,$37,$2D,$1F  ;;CB8A|----/----\----;
                      db $00,$54,$53,$52,$52,$51,$50,$50  ;;CB92|----/----\----;
                      db $4F,$4E,$4E,$4D,$4C,$4C,$4B,$4A  ;;CB9A|----/----\----;
                      db $4A,$4B,$48,$48,$47,$46,$46,$45  ;;CBA2|----/----\----;
                      db $44,$44,$43,$42,$42,$41,$40,$40  ;;CBAA|----/----\----;
                      db $3F,$3E,$3E,$3D,$3C,$3C,$3B,$3A  ;;CBB2|----/----\----;
                      db $3A,$39,$38,$38,$37,$36,$36,$35  ;;CBBA|----/----\----;
                      db $34,$34,$33,$32,$32,$31,$33,$35  ;;CBC2|----/----\----;
                      db $38,$3A,$3C,$3E,$3F,$41,$43,$44  ;;CBCA|----/----\----;
                      db $45,$47,$48,$49,$4A,$4B,$4C,$4D  ;;CBD2|----/----\----;
                      db $4E,$4E,$4F,$50,$50,$51,$51,$52  ;;CBDA|----/----\----;
                      db $52,$53,$53,$53,$53,$53,$53,$53  ;;CBE2|----/----\----;
                      db $53,$53,$53,$53,$53,$53,$52,$52  ;;CBEA|----/----\----;
                      db $51,$51,$50,$50,$4F,$4E,$4E,$4D  ;;CBF2|----/----\----;
                      db $4C,$4B,$4A,$49,$48,$47,$45,$44  ;;CBFA|----/----\----;
                      db $43,$41,$3F,$3E,$3C,$3A,$38,$35  ;;CC02|----/----\----;
                      db $33,$30,$2D,$2A,$26,$23,$1E,$18  ;;CC0A|----/----\----;
                      db $11,$00                          ;;CC12|----/----\----;
                                                          ;;                   ;
CODE_00CC14:          PHY                                 ;;CC14|----/----\----;
                      LDA.B !_1                           ;;CC15|----/----\----;
                      STA.W !HW_WRDIV+1                   ;;CC17|----/----\----; Dividend (High-Byte)
                      STZ.W !HW_WRDIV                     ;;CC1A|----/----\----; Dividend (Low Byte)
                      LDA.W !SpotlightSize                ;;CC1D|----/----\----;
                      STA.W !HW_WRDIV+2                   ;;CC20|----/----\----; Divisor B
                      NOP                                 ;;CC23|----/----\----;
                      NOP                                 ;;CC24|----/----\----;
                      NOP                                 ;;CC25|----/----\----;
                      NOP                                 ;;CC26|----/----\----;
                      NOP                                 ;;CC27|----/----\----;
                      NOP                                 ;;CC28|----/----\----;
                      REP #$20                            ;;CC29|----/----\----; Accum (16 bit) 
                      LDA.W !HW_RDDIV                     ;;CC2B|----/----\----; Quotient of Divide Result (Low Byte)
                      LSR A                               ;;CC2E|----/----\----;
                      TAY                                 ;;CC2F|----/----\----;
                      SEP #$20                            ;;CC30|----/----\----; Accum (8 bit) 
                      LDA.B (!_6),Y                       ;;CC32|----/----\----;
                      STA.W !HW_WRMPYA                    ;;CC34|----/----\----; Multiplicand A
                      LDA.W !SpotlightSize                ;;CC37|----/----\----;
                      STA.W !HW_WRMPYB                    ;;CC3A|----/----\----; Multplier B
                      NOP                                 ;;CC3D|----/----\----;
                      NOP                                 ;;CC3E|----/----\----;
                      NOP                                 ;;CC3F|----/----\----;
                      NOP                                 ;;CC40|----/----\----;
                      LDA.W !HW_RDMPY+1                   ;;CC41|----/----\----; Product/Remainder Result (High Byte)
                      STA.B !_3                           ;;CC44|----/----\----;
                      LDA.B (!_4),Y                       ;;CC46|----/----\----;
                      STA.W !HW_WRMPYA                    ;;CC48|----/----\----; Multiplicand A
                      LDA.W !SpotlightSize                ;;CC4B|----/----\----;
                      STA.W !HW_WRMPYB                    ;;CC4E|----/----\----; Multplier B
                      NOP                                 ;;CC51|----/----\----;
                      NOP                                 ;;CC52|----/----\----;
                      NOP                                 ;;CC53|----/----\----;
                      NOP                                 ;;CC54|----/----\----;
                      LDA.W !HW_RDMPY+1                   ;;CC55|----/----\----; Product/Remainder Result (High Byte)
                      STA.B !_2                           ;;CC58|----/----\----;
                      PLY                                 ;;CC5A|----/----\----;
                      RTS                                 ;;CC5B|----/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
DATA_00CC5C:          db $00,$00,$00,$00,$02,$00,$06,$00  ;;CC5C|----/----\----;
                      db $FE,$FF,$FA,$FF                  ;;CC64|----/----\----;
                                                          ;;                   ;
ResetAni:             LDA.B !axlr0000Hold                 ;;CC68|----/----\----;
                      AND.B #$20                          ;;CC6A|----/----\----;
                      BEQ +                               ;;CC6C|----/----\----;
                      LDA.B !axlr0000Frame                ;;CC6E|----/----\----;
                      CMP.B #$80                          ;;CC70|----/----\----;
                      BNE +                               ;;CC72|----/----\----;
                      INC.W !DebugFreeRoam                ;;CC74|----/----\----;
                      LDA.W !DebugFreeRoam                ;;CC77|----/----\----;
                      CMP.B #$03                          ;;CC7A|----/----\----;
                      BCC +                               ;;CC7C|----/----\----;
                      STZ.W !DebugFreeRoam                ;;CC7E|----/----\----;
                    + LDA.W !DebugFreeRoam                ;;CC81|----/----\----;
                      BRA CODE_00CCBB                     ;;CC84|----/----\----; Change to BEQ to enable debug code below 
                                                          ;;                   ;
                      LSR A                               ;;CC86|----/----\----; \ Unreachable 
                      BEQ ADDR_00CCB3                     ;;CC87|----/----\----;  | Debug: Free roaming mode 
                      LDA.B #$FF                          ;;CC89|----/----\----;  | 
                      STA.W !IFrameTimer                  ;;CC8B|----/----\----;  | 
                      LDA.B !byetudlrHold                 ;;CC8E|----/----\----;  | 
                      AND.B #$03                          ;;CC90|----/----\----;  | 
                      ASL A                               ;;CC92|----/----\----;  | 
                      ASL A                               ;;CC93|----/----\----;  | 
                      LDX.B #$00                          ;;CC94|----/----\----;  | 
                      JSR ADDR_00CC9F                     ;;CC96|----/----\----;  | 
                      LDA.B !byetudlrHold                 ;;CC99|----/----\----;  | 
                      AND.B #$0C                          ;;CC9B|----/----\----;  | 
                      LDX.B #$02                          ;;CC9D|----/----\----;  | 
ADDR_00CC9F:          BIT.B !byetudlrHold                 ;;CC9F|----/----\----;  | 
                      BVC +                               ;;CCA1|----/----\----;  | 
                      ORA.B #$02                          ;;CCA3|----/----\----;  | 
                    + TAY                                 ;;CCA5|----/----\----;  | 
                      REP #$20                            ;;CCA6|----/----\----;  | Accum (16 bit) ; Accum (16 bit) 
                      LDA.B !PlayerXPosNext,X             ;;CCA8|----/----\----;  | 
                      CLC                                 ;;CCAA|----/----\----;  | 
                      ADC.W DATA_00CC5C,Y                 ;;CCAB|----/----\----;  | 
                      STA.B !PlayerXPosNext,X             ;;CCAE|----/----\----;  | 
                      SEP #$20                            ;;CCB0|----/----\----;  | Accum (8 bit) ; Accum (8 bit) 
                      RTS                                 ;;CCB2|----/----\----; / Return 
                                                          ;;                   ;
ADDR_00CCB3:          LDA.B #$70                          ;;CCB3|----/----\----;
                      STA.W !PlayerPMeter                 ;;CCB5|----/----\----;
                      STA.W !TakeoffTimer                 ;;CCB8|----/----\----;
CODE_00CCBB:          LDA.W !EndLevelTimer                ;;CCBB|----/----\----;
                      BEQ +                               ;;CCBE|----/----\----;
                      JMP CODE_00C915                     ;;CCC0|----/----\----;
                                                          ;;                   ;
                    + JSR CODE_00CDDD                     ;;CCC3|----/----\----;
                      LDA.B !SpriteLock                   ;;CCC6|----/----\----; \ Branch if sprites locked 
                      BNE Return00CCDF                    ;;CCC8|----/----\----; / 
                      STZ.W !CapeInteracts                ;;CCCA|----/----\----;
                      STZ.W !PlayerOverworldPose          ;;CCCD|----/----\----;
                      LDA.W !PlayerStunnedTimer           ;;CCD0|----/----\----; \ If lock Mario timer is set... 
                      BEQ CODE_00CCE0                     ;;CCD3|----/----\----;  | 
                      DEC.W !PlayerStunnedTimer           ;;CCD5|----/----\----;  | Decrease the timer 
                      STZ.B !PlayerXSpeed                 ;;CCD8|----/----\----;  | X speed = 0 
                      LDA.B #$0F                          ;;CCDA|----/----\----;  | Mario's image = Going down tube 
                      STA.W !PlayerPose                   ;;CCDC|----/----\----; / 
Return00CCDF:         RTS                                 ;;CCDF|----/----\----; Return 
                                                          ;;                   ;
CODE_00CCE0:          LDA.W !IRQNMICommand                ;;CCE0|----/----\----;
                      BPL CODE_00CD24                     ;;CCE3|----/----\----;
                      LSR A                               ;;CCE5|----/----\----;
                      BCS CODE_00CD24                     ;;CCE6|----/----\----;
                      BIT.W !IRQNMICommand                ;;CCE8|----/----\----;
                      BVS CODE_00CD1C                     ;;CCEB|----/----\----;
                      LDA.B !PlayerInAir                  ;;CCED|----/----\----;
                      BNE CODE_00CD1C                     ;;CCEF|----/----\----;
                      REP #$20                            ;;CCF1|----/----\----; Accum (16 bit) 
                      LDA.W !KeyholeXPos                  ;;CCF3|----/----\----;
                      STA.B !PlayerXPosNext               ;;CCF6|----/----\----;
                      LDA.W !KeyholeYPos                  ;;CCF8|----/----\----;
                      STA.B !PlayerYPosNext               ;;CCFB|----/----\----;
                      SEP #$20                            ;;CCFD|----/----\----; Accum (8 bit) 
                      JSR CODE_00DC2D                     ;;CCFF|----/----\----;
                      REP #$20                            ;;CD02|----/----\----; Accum (16 bit) 
                      LDA.B !PlayerXPosNext               ;;CD04|----/----\----;
                      STA.W !KeyholeXPos                  ;;CD06|----/----\----;
                      STA.W !BrSwingXDist                 ;;CD09|----/----\----;
                      LDA.B !PlayerYPosNext               ;;CD0C|----/----\----;
                      AND.W #$FFF0                        ;;CD0E|----/----\----;
                      STA.W !KeyholeYPos                  ;;CD11|----/----\----;
                      STA.W !BrSwingYDist                 ;;CD14|----/----\----;
                      JSR CODE_00F9C9                     ;;CD17|----/----\----;
                      BRA +                               ;;CD1A|----/----\----;
                                                          ;;                   ;
CODE_00CD1C:          JSR CODE_00DC2D                     ;;CD1C|----/----\----; Accum (8 bit) 
                    + JSR CODE_00F8F2                     ;;CD1F|----/----\----;
                      BRA CODE_00CD36                     ;;CD22|----/----\----;
                                                          ;;                   ;
CODE_00CD24:          LDA.B !PlayerYSpeed                 ;;CD24|----/----\----; \ Branch if Mario has downward speed 
                      BPL +                               ;;CD26|----/----\----; / 
                      LDA.B !PlayerBlockedDir             ;;CD28|----/----\----;
                      AND.B #$08                          ;;CD2A|----/----\----;
                      BEQ +                               ;;CD2C|----/----\----;
                      STZ.B !PlayerYSpeed                 ;;CD2E|----/----\----; Y speed = 0 
                    + JSR CODE_00DC2D                     ;;CD30|----/----\----;
                      JSR CODE_00E92B                     ;;CD33|----/----\----;
CODE_00CD36:          JSR CODE_00F595                     ;;CD36|----/----\----;
CODE_00CD39:          STZ.W !PlayerTurningPose            ;;CD39|----/----\----;
                      LDY.W !PBalloonInflating            ;;CD3C|----/----\----;
                      BNE CODE_00CD95                     ;;CD3F|----/----\----;
                      LDA.W !PlayerClimbingRope           ;;CD41|----/----\----;
                      BEQ +                               ;;CD44|----/----\----;
                      LDA.B #$1F                          ;;CD46|----/----\----;
                      STA.B !GraphicsCompPtr+1            ;;CD48|----/----\----;
                    + LDA.B !PlayerIsClimbing             ;;CD4A|----/----\----;
                      BNE CODE_00CD72                     ;;CD4C|----/----\----;
                      LDA.W !IsCarryingItem               ;;CD4E|----/----\----;
                      ORA.W !PlayerRidingYoshi            ;;CD51|----/----\----;
                      BNE CODE_00CD79                     ;;CD54|----/----\----;
                      LDA.B !GraphicsCompPtr+1            ;;CD56|----/----\----;
                      AND.B #$1B                          ;;CD58|----/----\----;
                      CMP.B #$1B                          ;;CD5A|----/----\----;
                      BNE CODE_00CD79                     ;;CD5C|----/----\----;
                      LDA.B !byetudlrHold                 ;;CD5E|----/----\----;
                      AND.B #$0C                          ;;CD60|----/----\----;
                      BEQ CODE_00CD79                     ;;CD62|----/----\----;
                      LDY.B !PlayerInAir                  ;;CD64|----/----\----;
                      BNE CODE_00CD72                     ;;CD66|----/----\----;
                      AND.B #$08                          ;;CD68|----/----\----;
                      BNE CODE_00CD72                     ;;CD6A|----/----\----;
                      LDA.B !GraphicsCompPtr+1            ;;CD6C|----/----\----;
                      AND.B #$04                          ;;CD6E|----/----\----;
                      BEQ CODE_00CD79                     ;;CD70|----/----\----;
CODE_00CD72:          LDA.B !GraphicsCompPtr+1            ;;CD72|----/----\----;
                      STA.B !PlayerIsClimbing             ;;CD74|----/----\----;
                      JMP CODE_00DB17                     ;;CD76|----/----\----;
                                                          ;;                   ;
CODE_00CD79:          LDA.B !PlayerInWater                ;;CD79|----/----\----;
                      BEQ CODE_00CD82                     ;;CD7B|----/----\----;
                      JSR CODE_00D988                     ;;CD7D|----/----\----;
                      BRA CODE_00CD8F                     ;;CD80|----/----\----;
                                                          ;;                   ;
CODE_00CD82:          JSR CODE_00D5F2                     ;;CD82|----/----\----;
                      JSR CODE_00D062                     ;;CD85|----/----\----;
                      JSR CODE_00D7E4                     ;;CD88|----/----\----;
CODE_00CD8B:          JSL CODE_00CEB1                     ;;CD8B|----/----\----;
CODE_00CD8F:          LDY.W !PlayerRidingYoshi            ;;CD8F|----/----\----;
                      BNE CODE_00CDAD                     ;;CD92|----/----\----;
                      RTS                                 ;;CD94|----/----\----; Return 
                                                          ;;                   ;
CODE_00CD95:          LDA.B #$42                          ;;CD95|----/----\----;
                      LDX.B !Powerup                      ;;CD97|----/----\----;
                      BEQ +                               ;;CD99|----/----\----;
                      LDA.B #$43                          ;;CD9B|----/----\----;
                    + DEY                                 ;;CD9D|----/----\----;
                      BEQ +                               ;;CD9E|----/----\----;
                      STY.W !PBalloonInflating            ;;CDA0|----/----\----;
                      LDA.B #$0F                          ;;CDA3|----/----\----; \ Mario's image = Going down tube 
                    + STA.W !PlayerPose                   ;;CDA5|----/----\----; / 
CODE_00CDA8:          RTS                                 ;;CDA8|----/----\----;
                                                          ;;                   ;
                                                          ;;                   ;
                      db $20,$21,$27,$28                  ;;CDA9|----/----\----;
                                                          ;;                   ;
CODE_00CDAD:          LDX.W !YoshiTongueTimer             ;;CDAD|----/----\----;
                      BEQ +                               ;;CDB0|----/----\----;
                      LDY.B #$03                          ;;CDB2|----/----\----;
                      CPX.B #$0C                          ;;CDB4|----/----\----;
                      BCS +                               ;;CDB6|----/----\----;
                      LDY.B #$04                          ;;CDB8|----/----\----;
                    + LDA.W CODE_00CDA8,Y                 ;;CDBA|----/----\----;
                      DEY                                 ;;CDBD|----/----\----;
                      BNE +                               ;;CDBE|----/----\----;
                      LDY.B !PlayerIsDucking              ;;CDC0|----/----\----;
                      BEQ +                               ;;CDC2|----/----\----;
                      LDA.B #$1D                          ;;CDC4|----/----\----; \ Mario's image = Picking up object 
                    + STA.W !PlayerPose                   ;;CDC6|----/----\----; / 
                      LDA.W !YoshiHasWingsEvt             ;;CDC9|----/----\----; \ Check Yoshi wing ability address for #$01, 
                      CMP.B #$01                          ;;CDCC|----/----\----; / but this is an impossible value 
                      BNE Return00CDDC                    ;;CDCE|----/----\----; \ Unreachable/unused code 
                      BIT.B !byetudlrFrame                ;;CDD0|----/----\----;  | Lets Mario (any power) shoot fireballs while on Yoshi 
                      BVC Return00CDDC                    ;;CDD2|----/----\----;  | 
                      LDA.B #$08                          ;;CDD4|----/----\----;  | 
                      STA.W !Empty18DB                    ;;CDD6|----/----\----;  | 
                      JSR ShootFireball                   ;;CDD9|----/----\----; / 
Return00CDDC:         RTS                                 ;;CDDC|----/----\----; Return 
                                                          ;;                   ;
CODE_00CDDD:          LDA.W !HorizLayer1Setting           ;;CDDD|----/----\----;
                      BEQ Return00CDDC                    ;;CDE0|----/----\----;
                      LDY.W !CameraScrollDir              ;;CDE2|----/----\----;
                      LDA.W !CameraIsScrolling            ;;CDE5|----/----\----;
                      STA.B !SpriteLock                   ;;CDE8|----/----\----;
                      BNE CODE_00CE4C                     ;;CDEA|----/----\----;
                      LDA.W !CameraProperMove             ;;CDEC|----/----\----;
                      BEQ CODE_00CDF6                     ;;CDEF|----/----\----;
                      STZ.W !CameraScrollDir              ;;CDF1|----/----\----;
                      BRA CODE_00CE48                     ;;CDF4|----/----\----;
                                                          ;;                   ;
CODE_00CDF6:          LDA.B !axlr0000Hold                 ;;CDF6|----/----\----; \ Branch if anything besides L/R being held 
                      AND.B #$CF                          ;;CDF8|----/----\----;  | 
                      ORA.B !byetudlrHold                 ;;CDFA|----/----\----;  | 
                      BNE CODE_00CE49                     ;;CDFC|----/----\----; / 
                      LDA.B !axlr0000Hold                 ;;CDFE|----/----\----; \ Branch if L/R not being held 
                      AND.B #$30                          ;;CE00|----/----\----;  | 
                      BEQ CODE_00CE49                     ;;CE02|----/----\----;  | 
                      CMP.B #$30                          ;;CE04|----/----\----;  | 
                      BEQ CODE_00CE49                     ;;CE06|----/----\----; / 
                      LSR A                               ;;CE08|----/----\----;
                      LSR A                               ;;CE09|----/----\----;
                      LSR A                               ;;CE0A|----/----\----;
                      INC.W !CameraScrollTimer            ;;CE0B|----/----\----;
                      LDX.W !CameraScrollTimer            ;;CE0E|----/----\----;
                      CPX.B #$10                          ;;CE11|----/----\----;
                      BCC CODE_00CE4C                     ;;CE13|----/----\----;
                      TAX                                 ;;CE15|----/----\----;
                      REP #$20                            ;;CE16|----/----\----; Accum (16 bit) 
                      LDA.W !CameraMoveTrigger            ;;CE18|----/----\----;
                      CMP.W DATA_00F6CB,X                 ;;CE1B|----/----\----;
                      SEP #$20                            ;;CE1E|----/----\----; Accum (8 bit) 
                      BEQ CODE_00CE4C                     ;;CE20|----/----\----;
                      LDA.B #$01                          ;;CE22|----/----\----;
                      TRB.W !CameraMoveTrigger            ;;CE24|----/----\----;
                      INC.W !CameraIsScrolling            ;;CE27|----/----\----;
                      LDA.B #$00                          ;;CE2A|----/----\----;
                      CPX.B #$02                          ;;CE2C|----/----\----;
                      BNE +                               ;;CE2E|----/----\----;
                      LDA.B !LastScreenHoriz              ;;CE30|----/----\----;
                      DEC A                               ;;CE32|----/----\----;
                    + REP #$20                            ;;CE33|----/----\----; Accum (16 bit) 
                      XBA                                 ;;CE35|----/----\----;
                      AND.W #$FF00                        ;;CE36|----/----\----;
                      CMP.B !Layer1XPos                   ;;CE39|----/----\----;
                      SEP #$20                            ;;CE3B|----/----\----; Accum (8 bit) 
                      BEQ +                               ;;CE3D|----/----\----;
                      LDY.B #$0E                          ;;CE3F|----/----\----; \ Play sound effect 
                      STY.W !SPCIO3                       ;;CE41|----/----\----; / 
                    + TXA                                 ;;CE44|----/----\----;
                      STA.W !CameraScrollDir              ;;CE45|----/----\----;
CODE_00CE48:          TAY                                 ;;CE48|----/----\----;
CODE_00CE49:          STZ.W !CameraScrollTimer            ;;CE49|----/----\----;
CODE_00CE4C:          LDX.B #$00                          ;;CE4C|----/----\----;
                      LDA.B !PlayerDirection              ;;CE4E|----/----\----;
                      ASL A                               ;;CE50|----/----\----;
                      STA.W !CameraScrollPlayerDir        ;;CE51|----/----\----;
                      REP #$20                            ;;CE54|----/----\----; Accum (16 bit) 
                      LDA.W !CameraMoveTrigger            ;;CE56|----/----\----;
                      CMP.W DATA_00F6CB,Y                 ;;CE59|----/----\----;
                      BEQ CODE_00CE6D                     ;;CE5C|----/----\----;
                      CLC                                 ;;CE5E|----/----\----;
                      ADC.W DATA_00F6BF,Y                 ;;CE5F|----/----\----;
                      LDY.W !CameraScrollPlayerDir        ;;CE62|----/----\----;
                      CMP.W DATA_00F6B3,Y                 ;;CE65|----/----\----;
                      BNE +                               ;;CE68|----/----\----;
                      STX.W !CameraScrollDir              ;;CE6A|----/----\----;
CODE_00CE6D:          STX.W !CameraIsScrolling            ;;CE6D|----/----\----;
                    + STA.W !CameraMoveTrigger            ;;CE70|----/----\----;
                      STX.W !CameraProperMove             ;;CE73|----/----\----;
                      SEP #$20                            ;;CE76|----/----\----; Accum (8 bit) 
CODE_00CE78:          RTS                                 ;;CE78|----/----\----;
                                                          ;;                   ;
                                                          ;;                   ;
                      db $2A,$2B,$2C,$2D,$2E,$2F          ;;CE79|----/----\----;
                                                          ;;                   ;
DATA_00CE7F:          db $2C,$2C,$2C,$2B,$2B,$2C,$2C,$2B  ;;CE7F|----/----\----;
                      db $2B,$2C,$2D,$2A,$2A,$2D,$2D,$2A  ;;CE87|----/----\----;
                      db $2A,$2D,$2D,$2A,$2A,$2D,$2E,$2A  ;;CE8F|----/----\----;
                      db $2A,$2E                          ;;CE97|----/----\----;
                                                          ;;                   ;
DATA_00CE99:          db $00,$00,$25,$44,$00,$00,$0F,$45  ;;CE99|----/----\----;
DATA_00CEA1:          db $00,$00,$00,$00,$01,$01,$01,$01  ;;CEA1|----/----\----;
DATA_00CEA9:          db $02,$07,$06,$09,$02,$07,$06,$09  ;;CEA9|----/----\----;
                                                          ;;                   ;
CODE_00CEB1:          LDA.W !CapeAniTimer                 ;;CEB1|----/----\----; Related to cape animation? 
                      BNE lbl14A2Not0                     ;;CEB4|----/----\----;
                      LDX.W !PlayerCapePose               ;;CEB6|----/----\----; Cape image 
                      LDA.B !PlayerInAir                  ;;CEB9|----/----\----; If Mario isn't in air, branch to $CEDE 
                      BEQ MarioAnimAir                    ;;CEBB|----/----\----; branch to $CEDE 
                      LDY.B #$04                          ;;CEBD|----/----\----;
                      BIT.B !PlayerYSpeed                 ;;CEBF|----/----\----; \ If Mario is falling (and thus not on ground) 
                      BPL CODE_00CECD                     ;;CEC1|----/----\----; / branch down 
                      CMP.B #$0C                          ;;CEC3|----/----\----; \ If making a "run jump", 
                      BEQ CODE_00CEFD                     ;;CEC5|----/----\----; / branch to $CEFD 
                      LDA.B !PlayerInWater                ;;CEC7|----/----\----; \ If Mario is in water, 
                      BNE CODE_00CEFD                     ;;CEC9|----/----\----;  |branch to $CEFD 
                      BRA MrioNtInWtr                     ;;CECB|----/----\----; / otherwise, branch to $CEE4 
                                                          ;;                   ;
CODE_00CECD:          INX                                 ;;CECD|----/----\----; \  
                      CPX.B #$05                          ;;CECE|----/----\----;  |if X >= #$04 and != #$FF then jump down <- counting the INX 
                      BCS CODE_00CED6                     ;;CED0|----/----\----; /  
                      LDX.B #$05                          ;;CED2|----/----\----; X = #$05 
                      BRA CODE_00CF0A                     ;;CED4|----/----\----; Branch to $CF04 
                                                          ;;                   ;
CODE_00CED6:          CPX.B #$0B                          ;;CED6|----/----\----; \ If X is less than #$0B, 
                      BCC CODE_00CF0A                     ;;CED8|----/----\----; / branch to $CF0A 
                      LDX.B #$07                          ;;CEDA|----/----\----; X = #$07 
                      BRA CODE_00CF0A                     ;;CEDC|----/----\----; Mario is not in the air, branch to $CF0A 
                                                          ;;                   ;
MarioAnimAir:         LDA.B !PlayerXSpeed                 ;;CEDE|----/----\----; \ If Mario X speed isn't 0, 
                      BNE CODE_00CEF0                     ;;CEE0|----/----\----; / branch to $CEF0 
                      LDY.B #$08                          ;;CEE2|----/----\----; Otherwise Y = #$08 
MrioNtInWtr:          TXA                                 ;;CEE4|----/----\----; A = X = #13DF 
                      BEQ CODE_00CF0A                     ;;CEE5|----/----\----; If $13DF (now A) = 0 branch to $CF04 
                      DEX                                 ;;CEE7|----/----\----; \  
                      CPX.B #$03                          ;;CEE8|----/----\----;  |If X - 1 < #$03 Then Branch $CF04 
                      BCC CODE_00CF0A                     ;;CEEA|----/----\----; /  
                      LDX.B #$02                          ;;CEEC|----/----\----; X = #$02 
                      BRA CODE_00CF0A                     ;;CEEE|----/----\----; Branch to $CF04 
                                                          ;;                   ;
CODE_00CEF0:          BPL +                               ;;CEF0|----/----\----; \  
                      EOR.B #$FF                          ;;CEF2|----/----\----;  |A = abs(A) 
                      INC A                               ;;CEF4|----/----\----;  | 
                    + LSR A                               ;;CEF5|----/----\----; \  
                      LSR A                               ;;CEF6|----/----\----;  |Divide a by 8 
                      LSR A                               ;;CEF7|----/----\----; /  
                      TAY                                 ;;CEF8|----/----\----; Y = A 
                      LDA.W DATA_00DC7C,Y                 ;;CEF9|----/----\----; A = Mario animation speed? (I didn't know it was a table...) 
                      TAY                                 ;;CEFC|----/----\----; Load Y with this table 
CODE_00CEFD:          INX                                 ;;CEFD|----/----\----; \  
                      CPX.B #$03                          ;;CEFE|----/----\----;  | 
                      BCS +                               ;;CF00|----/----\----;  |If X is < #$02 and != #$FF <- counting the INX 
                      LDX.B #$05                          ;;CF02|----/----\----;  |then X = #$05 
                    + CPX.B #$07                          ;;CF04|----/----\----; \  
                      BCC CODE_00CF0A                     ;;CF06|----/----\----;  |If X is greater than or equal to #$07 then X = #$03 
                      LDX.B #$03                          ;;CF08|----/----\----;  | 
CODE_00CF0A:          STX.W !PlayerCapePose               ;;CF0A|----/----\----; And X goes right back into $13DF (cape image) after being modified 
                      TYA                                 ;;CF0D|----/----\----; Now Y goes back into A 
                      LDY.B !PlayerInWater                ;;CF0E|----/----\----; \  
                      BEQ +                               ;;CF10|----/----\----;  |If mario is in water then A = 2A 
                      ASL A                               ;;CF12|----/----\----;  | 
                    + STA.W !CapeAniTimer                 ;;CF13|----/----\----; A -> $14A2 (do we know this byte yet?) no. 
lbl14A2Not0:          LDA.W !SpinJumpFlag                 ;;CF16|----/----\----; A = Spin Jump Flag 
                      ORA.W !CapeSpinTimer                ;;CF19|----/----\----;
                      BEQ CODE_00CF4E                     ;;CF1C|----/----\----; If $140D OR $14A6 = 0 then branch to $CF4E 
                      STZ.B !PlayerIsDucking              ;;CF1E|----/----\----; 0 -> Ducking while jumping flag 
                      LDA.B !EffFrame                     ;;CF20|----/----\----; \  
                      AND.B #$06                          ;;CF22|----/----\----;  |X = Y = Alternate frame counter AND #$06 
                      TAX                                 ;;CF24|----/----\----;  | 
                      TAY                                 ;;CF25|----/----\----; /  
                      LDA.B !PlayerInAir                  ;;CF26|----/----\----; \ If on ground branch down 
                      BEQ +                               ;;CF28|----/----\----; /  
                      LDA.B !PlayerYSpeed                 ;;CF2A|----/----\----; \ If Mario moving upwards branch down 
                      BMI +                               ;;CF2C|----/----\----; /  
                      INY                                 ;;CF2E|----/----\----; Y = Y + 1 
                    + LDA.W DATA_00CEA9,Y                 ;;CF2F|----/----\----; \ After loading from this table, 
                      STA.W !PlayerCapePose               ;;CF32|----/----\----; / Store A in cape image 
                      LDA.B !Powerup                      ;;CF35|----/----\----; A = Mario's powerup status 
                      BEQ +                               ;;CF37|----/----\----; \  
                      INX                                 ;;CF39|----/----\----;  |If not small, increase X 
                    + LDA.W DATA_00CEA1,X                 ;;CF3A|----/----\----; \ Load from another table 
                      STA.B !PlayerDirection              ;;CF3D|----/----\----; / store to Mario's Direction 
                      LDY.B !Powerup                      ;;CF3F|----/----\----; \  
                      CPY.B #$02                          ;;CF41|----/----\----;  | 
                      BNE +                               ;;CF43|----/----\----;  |If Mario has cape, JSR 
                      JSR CODE_00D044                     ;;CF45|----/----\----;  |to possibly the graphics handler 
                    + LDA.W DATA_00CE99,X                 ;;CF48|----/----\----; \ Load from a table again 
                      JMP CODE_00D01A                     ;;CF4B|----/----\----; / And jump 
                                                          ;;                   ;
CODE_00CF4E:          LDA.W !PlayerSlopePose              ;;CF4E|----/----\----; \ If $13ED is #$01 - #$7F then 
                      BEQ CODE_00CF62                     ;;CF51|----/----\----;  |branch to $CF85 
                      BPL CODE_00CF85                     ;;CF53|----/----\----;  | 
                      LDA.W !SlopeType                    ;;CF55|----/----\----;
                      LSR A                               ;;CF58|----/----\----;
                      LSR A                               ;;CF59|----/----\----;
                      ORA.B !PlayerDirection              ;;CF5A|----/----\----;
                      TAY                                 ;;CF5C|----/----\----;
                      LDA.W DATA_00CE7F,Y                 ;;CF5D|----/----\----;
                      BRA CODE_00CF85                     ;;CF60|----/----\----;
                                                          ;;                   ;
CODE_00CF62:          LDA.B #$3C                          ;;CF62|----/----\----; \ Select Case $148F 
                      LDY.W !IsCarryingItem               ;;CF64|----/----\----;  |Case 0:A = #$3C 
                      BEQ +                               ;;CF67|----/----\----;  |Case Else: A = #$1D 
                      LDA.B #$1D                          ;;CF69|----/----\----;  |End Select 
                    + LDY.B !PlayerIsDucking              ;;CF6B|----/----\----; \ If Ducking while jumping 
                      BNE CODE_00CF85                     ;;CF6D|----/----\----; / Branch to $CF85 
                      LDA.W !ShootFireTimer               ;;CF6F|----/----\----; \ If (Unknown) = 0 
                      BEQ CODE_00CF7E                     ;;CF72|----/----\----; / Branch to $CF7E 
                      LDA.B #$3F                          ;;CF74|----/----\----; A = #$3F 
                      LDY.B !PlayerInAir                  ;;CF76|----/----\----; \ If Mario isn't in air,  
                      BEQ CODE_00CF85                     ;;CF78|----/----\----;  |branch to $CF85 
                      LDA.B #$16                          ;;CF7A|----/----\----;  |Otherwise, set A to #$16 and 
                      BRA CODE_00CF85                     ;;CF7C|----/----\----; / branch to $CF85 
                                                          ;;                   ;
CODE_00CF7E:          LDA.B #$0E                          ;;CF7E|----/----\----; A = #$0E 
                      LDY.W !KickingTimer                 ;;CF80|----/----\----; \ If Time to show Mario's current pose is 00, 
                      BEQ +                               ;;CF83|----/----\----;  | Don't jump to $D01A 
CODE_00CF85:          JMP CODE_00D01A                     ;;CF85|----/----\----;  | 
                                                          ;;                   ;
                    + LDA.B #$1D                          ;;CF88|----/----\----; A = #$1D 
                      LDY.W !PickUpItemTimer              ;;CF8A|----/----\----; \ If $1499 != 0 then Jump to $D01A 
                      BNE CODE_00CF85                     ;;CF8D|----/----\----; /  
                      LDA.B #$0F                          ;;CF8F|----/----\----; A = #$0F 
                      LDY.W !FaceScreenTimer              ;;CF91|----/----\----; \ If $1499 != 0 then Jump to $D01A 
                      BNE CODE_00CF85                     ;;CF94|----/----\----; /  
                      LDA.B #$00                          ;;CF96|----/----\----; A = #$00 
                      LDX.W !PlayerInCloud                ;;CF98|----/----\----; X = $18C2 (Unknown) 
                      BNE MarioAnimNoAbs1                 ;;CF9B|----/----\----; If X != 0 then branch down 
                      LDA.B !PlayerInAir                  ;;CF9D|----/----\----; \ If Mario is flying branch down 
                      BEQ CODE_00CFB7                     ;;CF9F|----/----\----; /  
                      LDY.W !RunTakeoffTimer              ;;CFA1|----/----\----; \ If $14A0 != 0 then 
                      BNE CODE_00CFBC                     ;;CFA4|----/----\----; / Skip down 
                      LDY.W !FlightPhase                  ;;CFA6|----/----\----; Spaghetticode(tm) 
                      BEQ +                               ;;CFA9|----/----\----;
                      LDA.W CODE_00CE78,Y                 ;;CFAB|----/----\----;
                    + LDY.W !IsCarryingItem               ;;CFAE|----/----\----; \ If Mario isn't holding something, 
                      BEQ CODE_00D01A                     ;;CFB1|----/----\----;  |branch to $D01A 
                      LDA.B #$09                          ;;CFB3|----/----\----;  |Otherwise, set A to #$09 and 
                      BRA CODE_00D01A                     ;;CFB5|----/----\----; / branch to $D01A 
                                                          ;;                   ;
CODE_00CFB7:          LDA.W !PlayerTurningPose            ;;CFB7|----/----\----;
                      BNE CODE_00D01A                     ;;CFBA|----/----\----;
CODE_00CFBC:          LDA.B !PlayerXSpeed                 ;;CFBC|----/----\----; \  
                      BPL MarioAnimNoAbs1                 ;;CFBE|----/----\----;  | 
                      EOR.B #$FF                          ;;CFC0|----/----\----;  |Set A to absolute value of Mario's X speed 
                      INC A                               ;;CFC2|----/----\----;  | 
MarioAnimNoAbs1:      TAX                                 ;;CFC3|----/----\----; Copy A to X 
                      BNE CODE_00CFD4                     ;;CFC4|----/----\----; If Mario isn't standing still, branch to $CFD4 
                      XBA                                 ;;CFC6|----/----\----; "Push" A 
                      LDA.B !byetudlrHold                 ;;CFC7|----/----\----; \  
                      AND.B #$08                          ;;CFC9|----/----\----;  |If player isn't pressing up, 
                      BEQ CODE_00D002                     ;;CFCB|----/----\----;  |branch to $D002 
                      LDA.B #$03                          ;;CFCD|----/----\----;  |Otherwise, store x03 in $13DE and 
                      STA.W !PlayerOverworldPose          ;;CFCF|----/----\----;  |branch to $D002 
                      BRA CODE_00D002                     ;;CFD2|----/----\----; /  
                                                          ;;                   ;
CODE_00CFD4:          LDA.B !LevelIsSlippery              ;;CFD4|----/----\----; \ If level isn't slippery, 
                      BEQ CODE_00CFE3                     ;;CFD6|----/----\----; / branch to $CFE3 
                      LDA.B !byetudlrHold                 ;;CFD8|----/----\----;
                      AND.B #$03                          ;;CFDA|----/----\----;
                      BEQ CODE_00D003                     ;;CFDC|----/----\----;
                      LDA.B #$68                          ;;CFDE|----/----\----;
                      STA.W !PlayerPoseLenTimer           ;;CFE0|----/----\----;
CODE_00CFE3:          LDA.W !PlayerWalkingPose            ;;CFE3|----/----\----; A = $13DB 
                      LDY.W !PlayerAniTimer               ;;CFE6|----/----\----; \ If Mario is hurt (flashing), 
                      BNE CODE_00D003                     ;;CFE9|----/----\----; / branch to $D003 
                      DEC A                               ;;CFEB|----/----\----; A = A - 1 
                      BPL +                               ;;CFEC|----/----\----; \If bit 7 is clear, 
                      LDY.B !Powerup                      ;;CFEE|----/----\----;  | Load amount of walking frames 
                      LDA.W NumWalkingFrames,Y            ;;CFF0|----/----\----;  | for current powerup 
                    + XBA                                 ;;CFF3|----/----\----; \ >>-This code puts together an index to a table further down-<< 
                      TXA                                 ;;CFF4|----/----\----;  |-\ Above Line: "Push" frame amount 
                      LSR A                               ;;CFF5|----/----\----;  |  |A = X / 8 
                      LSR A                               ;;CFF6|----/----\----;  |  | 
                      LSR A                               ;;CFF7|----/----\----;  |-/  
                      ORA.W !PlayerPoseLenTimer           ;;CFF8|----/----\----;  |ORA with $13E5 
                      TAY                                 ;;CFFB|----/----\----;  |And store A to Y 
                      LDA.W DATA_00DC7C,Y                 ;;CFFC|----/----\----;  | 
                      STA.W !PlayerAniTimer               ;;CFFF|----/----\----; /  
CODE_00D002:          XBA                                 ;;D002|----/----\----; \ Switch in frame amount and store it to $13DB 
CODE_00D003:          STA.W !PlayerWalkingPose            ;;D003|----/----\----; /  
                      CLC                                 ;;D006|----/----\----; \ Add walking animation type 
                      ADC.W !PlayerOverworldPose          ;;D007|----/----\----; / (Walking, running...) 
                      LDY.W !IsCarryingItem               ;;D00A|----/----\----; \  
                      BEQ CODE_00D014                     ;;D00D|----/----\----;  | 
                      CLC                                 ;;D00F|----/----\----;  |If Mario is carrying something, add #$07 
                      ADC.B #$07                          ;;D010|----/----\----;  | 
                      BRA CODE_00D01A                     ;;D012|----/----\----;  | 
                                                          ;;                   ;
CODE_00D014:          CPX.B #$2F                          ;;D014|----/----\----; \  
                      BCC CODE_00D01A                     ;;D016|----/----\----;  |If X is greater than #$2F, add #$04 
                      ADC.B #$03                          ;;D018|----/----\----; / <-Carry is always set here, adding #$01 to (#$03 + A) 
CODE_00D01A:          LDY.W !WallrunningType              ;;D01A|----/----\----; \ If Mario isn't rotated 45 degrees (triangle 
                      BEQ +                               ;;D01D|----/----\----; / block), branch to $D030 
                      TYA                                 ;;D01F|----/----\----; \ Y AND #$01 -> Mario's Direction RAM Byte 
                      AND.B #$01                          ;;D020|----/----\----;  | 
                      STA.B !PlayerDirection              ;;D022|----/----\----; /  
                      LDA.B #$10                          ;;D024|----/----\----; \  
                      CPY.B #$06                          ;;D026|----/----\----;  |If Y < 6 then 
                      BCC +                               ;;D028|----/----\----;  |    A = #13DB + $11 
                      LDA.W !PlayerWalkingPose            ;;D02A|----/----\----;  |Else 
                      CLC                                 ;;D02D|----/----\----;  |    A = #$10 
                      ADC.B #$11                          ;;D02E|----/----\----;  |End If 
                    + STA.W !PlayerPose                   ;;D030|----/----\----; Store in Current animation frame 
                      RTL                                 ;;D033|----/----\----; And Finish 
                                                          ;;                   ;
                                                          ;;                   ;
DATA_00D034:          db $0C,$00,$F4,$FF,$08,$00,$F8,$FF  ;;D034|----/----\----;
DATA_00D03C:          db $10,$00,$10,$00,$02,$00,$02,$00  ;;D03C|----/----\----;
                                                          ;;                   ;
CODE_00D044:          LDY.B #$01                          ;;D044|----/----\----;
                      STY.W !CapeInteracts                ;;D046|----/----\----;
                      ASL A                               ;;D049|----/----\----;
                      TAY                                 ;;D04A|----/----\----;
                      REP #$20                            ;;D04B|----/----\----; 16 bit A ; Accum (16 bit) 
                      LDA.B !PlayerXPosNext               ;;D04D|----/----\----; \  
                      CLC                                 ;;D04F|----/----\----;  | 
                      ADC.W DATA_00D034,Y                 ;;D050|----/----\----;  | 
                      STA.W !CapeInteractionXPos          ;;D053|----/----\----;  |Set cape<->sprite collision coordinates 
                      LDA.B !PlayerYPosNext               ;;D056|----/----\----;  | 
                      CLC                                 ;;D058|----/----\----;  | 
                      ADC.W DATA_00D03C,Y                 ;;D059|----/----\----;  | 
                      STA.W !CapeInteractionYPos          ;;D05C|----/----\----; /  
                      SEP #$20                            ;;D05F|----/----\----; 8 bit A ; Accum (8 bit) 
                      RTS                                 ;;D061|----/----\----; Return 
                                                          ;;                   ;
CODE_00D062:          LDA.B !Powerup                      ;;D062|----/----\----;
                      CMP.B #$02                          ;;D064|----/----\----;
                      BNE CODE_00D081                     ;;D066|----/----\----;
                      BIT.B !byetudlrFrame                ;;D068|----/----\----;
                      BVC Return00D0AD                    ;;D06A|----/----\----;
                      LDA.B !PlayerIsDucking              ;;D06C|----/----\----;
                      ORA.W !PlayerRidingYoshi            ;;D06E|----/----\----;
                      ORA.W !SpinJumpFlag                 ;;D071|----/----\----;
                      BNE Return00D0AD                    ;;D074|----/----\----;
                      LDA.B #$12                          ;;D076|----/----\----;
                      STA.W !CapeSpinTimer                ;;D078|----/----\----;
                      LDA.B #$04                          ;;D07B|----/----\----; \ Play sound effect 
                      STA.W !SPCIO3                       ;;D07D|----/----\----; / 
                      RTS                                 ;;D080|----/----\----; Return 
                                                          ;;                   ;
CODE_00D081:          CMP.B #$03                          ;;D081|----/----\----;
                      BNE Return00D0AD                    ;;D083|----/----\----;
                      LDA.B !PlayerIsDucking              ;;D085|----/----\----;
                      ORA.W !PlayerRidingYoshi            ;;D087|----/----\----;
                      BNE Return00D0AD                    ;;D08A|----/----\----;
                      BIT.B !byetudlrFrame                ;;D08C|----/----\----;
                      BVS CODE_00D0AA                     ;;D08E|----/----\----;
                      LDA.W !SpinJumpFlag                 ;;D090|----/----\----;
                      BEQ Return00D0AD                    ;;D093|----/----\----;
                      INC.W !SpinjumpFireball             ;;D095|----/----\----;
                      LDA.W !SpinjumpFireball             ;;D098|----/----\----;
                      AND.B #$0F                          ;;D09B|----/----\----;
                      BNE Return00D0AD                    ;;D09D|----/----\----;
                      TAY                                 ;;D09F|----/----\----;
                      LDA.W !SpinjumpFireball             ;;D0A0|----/----\----;
                      AND.B #$10                          ;;D0A3|----/----\----;
                      BEQ +                               ;;D0A5|----/----\----;
                      INY                                 ;;D0A7|----/----\----;
                    + STY.B !PlayerDirection              ;;D0A8|----/----\----;
CODE_00D0AA:          JSR ShootFireball                   ;;D0AA|----/----\----; haha, I read this as "FEAR" at first 
Return00D0AD:         RTS                                 ;;D0AD|----/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
                      db $7C,$00,$80,$00,$00,$06,$00,$01  ;;D0AE|----/----\----;
                                                          ;;                   ;
MarioDeathAni:        STZ.B !Powerup                      ;;D0B6|----/----\----; Set powerup to 0 
                      LDA.B #$3E                          ;;D0B8|----/----\----; \  
                      STA.W !PlayerPose                   ;;D0BA|----/----\----; / Set Mario image to death image 
                      LDA.B !TrueFrame                    ;;D0BD|----/----\----; \  
                      AND.B #$03                          ;;D0BF|----/----\----;  |Decrease "Death fall timer" every four frames 
                      BNE +                               ;;D0C1|----/----\----;  | 
                      DEC.W !PlayerAniTimer               ;;D0C3|----/----\----;  | 
                    + LDA.W !PlayerAniTimer               ;;D0C6|----/----\----; \ If Death fall timer isn't #$00, 
                      BNE DeathNotDone                    ;;D0C9|----/----\----; / branch to $D108 
                      LDA.B #$80                          ;;D0CB|----/----\----;
                      STA.W !OWLevelExitMode              ;;D0CD|----/----\----;
                      LDA.W !RemoveYoshiFlag              ;;D0D0|----/----\----;
                      BNE +                               ;;D0D3|----/----\----;
                      STZ.W !CarryYoshiThruLvls           ;;D0D5|----/----\----; Set reserve item to 0 
                    + DEC.W !PlayerLives                  ;;D0D8|----/----\----; Decrease amount of lifes 
                      BPL DeathNotGameOver                ;;D0DB|----/----\----; If not Game Over, branch to $D0E6 
                      LDA.B #$0A                          ;;D0DD|----/----\----;
                      STA.W !SPCIO2                       ;;D0DF|----/----\----; / Change music 
                      LDX.B #$14                          ;;D0E2|----/----\----; Set X (Death message) to x14 (Game Over) 
                      BRA DeathShowMessage                ;;D0E4|----/----\----;
                                                          ;;                   ;
DeathNotGameOver:     LDY.B #$0B                          ;;D0E6|----/----\----; Set Y (game mode) to x0B (Fade to overworld) 
                      LDA.W !InGameTimerHundreds          ;;D0E8|----/----\----; \  
                      ORA.W !InGameTimerTens              ;;D0EB|----/----\----;  |If time isn't zero, 
                      ORA.W !InGameTimerOnes              ;;D0EE|----/----\----;  |branch to $D104 
                      BNE +                               ;;D0F1|----/----\----; /  
                      LDX.B #$1D                          ;;D0F3|----/----\----; Set X (Death message) to x1D (Time Up) 
DeathShowMessage:     STX.W !DeathMessage                 ;;D0F5|----/----\----; Store X in Death message 
                      LDA.B #$C0                          ;;D0F8|----/----\----; \ Set Death message animation to xC0 
                      STA.W !GameOverAnimation            ;;D0FA|----/----\----; /(Must be divisable by 4) 
                      LDA.B #$FF                          ;;D0FD|----/----\----; \ Set Death message timer to xFF 
                      STA.W !GameOverTimer                ;;D0FF|----/----\----; / 
                      LDY.B #$15                          ;;D102|----/----\----; Set Y (game mode) to x15 (Fade to Game Over) 
                    + STY.W !GameMode                     ;;D104|----/----\----; Store Y in Game Mode 
                      RTS                                 ;;D107|----/----\----; Return 
                                                          ;;                   ;
DeathNotDone:         CMP.B #$26                          ;;D108|----/----\----; \ If Death fall timer >= x26, 
                      BCS +                               ;;D10A|----/----\----; / return 
                      STZ.B !PlayerXSpeed                 ;;D10C|----/----\----; Set Mario X speed to 0 
                      JSR CODE_00DC2D                     ;;D10E|----/----\----;
                      JSR CODE_00D92E                     ;;D111|----/----\----;
                      LDA.B !TrueFrame                    ;;D114|----/----\----; \  
                      LSR A                               ;;D116|----/----\----;  | 
                      LSR A                               ;;D117|----/----\----;  |Flip death image every four frames 
                      AND.B #$01                          ;;D118|----/----\----;  | 
                      STA.B !PlayerDirection              ;;D11A|----/----\----; /  
                    + RTS                                 ;;D11C|----/----\----;
                                                          ;;                   ;
                                                          ;;                   ;
GrowingAniImgs:       db $00,$3D,$00,$3D,$00,$3D,$46,$3D  ;;D11D|----/----\----;
                      db $46,$3D,$46,$3D                  ;;D125|----/----\----;
                                                          ;;                   ;
PowerDownAni:         LDA.W !PlayerAniTimer               ;;D129|----/----\----;
                      BEQ CODE_00D140                     ;;D12C|----/----\----;
                      LSR A                               ;;D12E|----/----\----;
                      LSR A                               ;;D12F|----/----\----;
CODE_00D130:          TAY                                 ;;D130|----/----\----;
                      LDA.W GrowingAniImgs,Y              ;;D131|----/----\----; \ Set Mario's image 
                      STA.W !PlayerPose                   ;;D134|----/----\----; / 
CODE_00D137:          LDA.W !PlayerAniTimer               ;;D137|----/----\----;
                      BEQ +                               ;;D13A|----/----\----;
                      DEC.W !PlayerAniTimer               ;;D13C|----/----\----;
                    + RTS                                 ;;D13F|----/----\----; Return 
                                                          ;;                   ;
CODE_00D140:          LDA.B #$7F                          ;;D140|----/----\----;
                      STA.W !IFrameTimer                  ;;D142|----/----\----;
                      BRA CODE_00D158                     ;;D145|----/----\----;
                                                          ;;                   ;
MushroomAni:          LDA.W !PlayerAniTimer               ;;D147|----/----\----;
                      BEQ CODE_00D156                     ;;D14A|----/----\----;
                      LSR A                               ;;D14C|----/----\----;
                      LSR A                               ;;D14D|----/----\----;
                      EOR.B #$FF                          ;;D14E|----/----\----;
                      INC A                               ;;D150|----/----\----;
                      CLC                                 ;;D151|----/----\----;
                      ADC.B #$0B                          ;;D152|----/----\----;
                      BRA CODE_00D130                     ;;D154|----/----\----;
                                                          ;;                   ;
CODE_00D156:          INC.B !Powerup                      ;;D156|----/----\----;
CODE_00D158:          LDA.B #$00                          ;;D158|----/----\----;
                      STA.B !PlayerAnimation              ;;D15A|----/----\----;
                      STZ.B !SpriteLock                   ;;D15C|----/----\----;
                    - RTS                                 ;;D15E|----/----\----; Return 
                                                          ;;                   ;
CapeAni:              LDA.B #$7F                          ;;D15F|----/----\----;
                      STA.B !PlayerHiddenTiles            ;;D161|----/----\----;
                      DEC.W !PlayerAniTimer               ;;D163|----/----\----;
                      BNE -                               ;;D166|----/----\----;
                      LDA.B !Powerup                      ;;D168|----/----\----;
                      LSR A                               ;;D16A|----/----\----;
                      BEQ CODE_00D140                     ;;D16B|----/----\----;
                      BNE CODE_00D158                     ;;D16D|----/----\----;
FlowerAni:            LDA.W !PlayerSlopePose              ;;D16F|----/----\----;
                      AND.B #$80                          ;;D172|----/----\----;
                      ORA.W !FlightPhase                  ;;D174|----/----\----;
                      BEQ +                               ;;D177|----/----\----;
                      STZ.W !FlightPhase                  ;;D179|----/----\----;
                      LDA.W !PlayerSlopePose              ;;D17C|----/----\----;
                      AND.B #$7F                          ;;D17F|----/----\----;
                      STA.W !PlayerSlopePose              ;;D181|----/----\----;
                      STZ.W !PlayerPose                   ;;D184|----/----\----;
                    + DEC.W !CyclePaletteTimer            ;;D187|----/----\----;
                      BEQ CODE_00D158                     ;;D18A|----/----\----;
                      RTS                                 ;;D18C|----/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
PipeSpeedX:           db $F8,$08                          ;;D18D|----/----\----;
                                                          ;;                   ;
PipeSpeedY:           db $00,$00,$F0                      ;;D18F|----/----\----;
                                                          ;;                   ;
DATA_00D192:          db $10                              ;;D192|----/----\----;
                                                          ;;                   ;
DATA_00D193:          db $00,$63,$1C,$00                  ;;D193|----/----\----;
                                                          ;;                   ;
DoorPipeAni:          JSR NoButtons                       ;;D197|----/----\----;
                      STZ.W !PlayerOverworldPose          ;;D19A|----/----\----;
                      JSL CODE_00CEB1                     ;;D19D|----/----\----;
                      JSL CODE_00CFBC                     ;;D1A1|----/----\----;
                      JSR CODE_00D1F4                     ;;D1A5|----/----\----;
                      LDA.W !PlayerRidingYoshi            ;;D1A8|----/----\----;
                      BEQ +                               ;;D1AB|----/----\----;
                      LDA.B #$29                          ;;D1AD|----/----\----; \ Mario's image = Entering horizontal pipe on Yoshi 
                      STA.W !PlayerPose                   ;;D1AF|----/----\----; / 
                    + REP #$20                            ;;D1B2|----/----\----; Accum (16 bit) 
                      LDA.B !PlayerYPosNext               ;;D1B4|----/----\----;
                      SEC                                 ;;D1B6|----/----\----;
                      SBC.W #$0008                        ;;D1B7|----/----\----;
                      AND.W #$FFF0                        ;;D1BA|----/----\----;
                      ORA.W #$000E                        ;;D1BD|----/----\----;
                      STA.B !PlayerYPosNext               ;;D1C0|----/----\----;
                      SEP #$20                            ;;D1C2|----/----\----; Accum (8 bit) 
                      LDA.B !PlayerPipeAction             ;;D1C4|----/----\----;
                      LSR A                               ;;D1C6|----/----\----;
                      TAY                                 ;;D1C7|----/----\----;
                      INY                                 ;;D1C8|----/----\----;
                      LDA.W DATA_00D192,Y                 ;;D1C9|----/----\----;
                      LDX.W !IsCarryingItem               ;;D1CC|----/----\----;
                      BEQ +                               ;;D1CF|----/----\----;
                      EOR.B #$1C                          ;;D1D1|----/----\----;
                      DEC.W !FaceScreenTimer              ;;D1D3|----/----\----;
                      BPL +                               ;;D1D6|----/----\----;
                      INC.W !FaceScreenTimer              ;;D1D8|----/----\----;
                    + LDX.B !PipeTimer                    ;;D1DB|----/----\----;
                      CPX.B #$1D                          ;;D1DD|----/----\----;
                      BCS CODE_00D1F0                     ;;D1DF|----/----\----;
                      CPY.B #$03                          ;;D1E1|----/----\----;
                      BCC +                               ;;D1E3|----/----\----;
                      REP #$20                            ;;D1E5|----/----\----; Accum (16 bit) 
                      INC.B !PlayerYPosNext               ;;D1E7|----/----\----;
                      INC.B !PlayerYPosNext               ;;D1E9|----/----\----;
                      SEP #$20                            ;;D1EB|----/----\----; Accum (8 bit) 
                    + LDA.W DATA_00D193,Y                 ;;D1ED|----/----\----;
CODE_00D1F0:          STA.B !PlayerHiddenTiles            ;;D1F0|----/----\----;
                      BRA CODE_00D22D                     ;;D1F2|----/----\----;
                                                          ;;                   ;
CODE_00D1F4:          LDA.W !CapeAniTimer                 ;;D1F4|----/----\----;
                      BEQ +                               ;;D1F7|----/----\----;
                      DEC.W !CapeAniTimer                 ;;D1F9|----/----\----;
                    + JMP CODE_00D137                     ;;D1FC|----/----\----;
                                                          ;;                   ;
                                                          ;;                   ;
PipeCntrBoundryX:     db $0A,$06                          ;;D1FF|----/----\----;
                                                          ;;                   ;
PipeCntringSpeed:     db $FF,$01                          ;;D201|----/----\----;
                                                          ;;                   ;
VertPipeAni:          JSR NoButtons                       ;;D203|----/----\----;
                      STZ.W !PlayerCapePose               ;;D206|----/----\----;
                      LDA.B #$0F                          ;;D209|----/----\----;
                      LDY.W !PlayerRidingYoshi            ;;D20B|----/----\----;
                      BEQ CODE_00D22A                     ;;D20E|----/----\----;
                      LDX.B #$00                          ;;D210|----/----\----;
                      LDY.B !PlayerDirection              ;;D212|----/----\----; \ 
                      LDA.B !PlayerXPosNext               ;;D214|----/----\----;  | If not relativly centered on the pipe... 
                      AND.B #$0F                          ;;D216|----/----\----;  | 
                      CMP.W PipeCntrBoundryX,Y            ;;D218|----/----\----;  | 
                      BEQ CODE_00D228                     ;;D21B|----/----\----;  | 
                      BPL +                               ;;D21D|----/----\----;  | 
                      INX                                 ;;D21F|----/----\----;  | 
                    + LDA.B !PlayerXPosNext               ;;D220|----/----\----;  | ...adjust Mario's X postion 
                      CLC                                 ;;D222|----/----\----;  | 
                      ADC.W PipeCntringSpeed,X            ;;D223|----/----\----;  | 
                      STA.B !PlayerXPosNext               ;;D226|----/----\----; / 
CODE_00D228:          LDA.B #$21                          ;;D228|----/----\----; \ Mario's image = going down pipe 
CODE_00D22A:          STA.W !PlayerPose                   ;;D22A|----/----\----; / 
CODE_00D22D:          LDA.B #$40                          ;;D22D|----/----\----; \ Set holding X/Y on controller 
                      STA.B !byetudlrHold                 ;;D22F|----/----\----; / 
                      LDA.B #$02                          ;;D231|----/----\----; \ Set behind scenery flag 
                      STA.W !PlayerBehindNet              ;;D233|----/----\----; / 
                      LDA.B !PlayerPipeAction             ;;D236|----/----\----;
                      CMP.B #$04                          ;;D238|----/----\----;
                      LDY.B !PipeTimer                    ;;D23A|----/----\----;
                      BEQ CODE_00D268                     ;;D23C|----/----\----;
                      AND.B #$03                          ;;D23E|----/----\----;
                      TAY                                 ;;D240|----/----\----;
                      DEC.B !PipeTimer                    ;;D241|----/----\----;
                      BNE +                               ;;D243|----/----\----;
                      BCS +                               ;;D245|----/----\----;
                      LDA.B #$7F                          ;;D247|----/----\----;
                      STA.B !PlayerHiddenTiles            ;;D249|----/----\----;
                      INC.W !DrawYoshiInPipe              ;;D24B|----/----\----;
                    + LDA.B !PlayerXSpeed                 ;;D24E|----/----\----; \ If Mario has no speed... 
                      ORA.B !PlayerYSpeed                 ;;D250|----/----\----;  | 
                      BNE +                               ;;D252|----/----\----;  | 
                      LDA.B #$04                          ;;D254|----/----\----;  | ...play sound effect 
                      STA.W !SPCIO0                       ;;D256|----/----\----; / 
                    + LDA.W PipeSpeedX,Y                  ;;D259|----/----\----; \ Set X speed 
                      STA.B !PlayerXSpeed                 ;;D25C|----/----\----; / 
                      LDA.W PipeSpeedY,Y                  ;;D25E|----/----\----; \ Set Y speed 
                      STA.B !PlayerYSpeed                 ;;D261|----/----\----; / 
                      STZ.B !PlayerInAir                  ;;D263|----/----\----; Mario flying = false 
                      JMP CODE_00DC2D                     ;;D265|----/----\----;
                                                          ;;                   ;
CODE_00D268:          BCC CODE_00D273                     ;;D268|----/----\----;
CODE_00D26A:          STZ.W !PlayerBehindNet              ;;D26A|----/----\----; \ In new level, reset values 
                      STZ.W !YoshiInPipeSetting           ;;D26D|----/----\----; / 
                      JMP CODE_00D158                     ;;D270|----/----\----;
                                                          ;;                   ;
CODE_00D273:          INC.W !SublevelCount                ;;D273|----/----\----;
                      LDA.B #$0F                          ;;D276|----/----\----;
                      STA.W !GameMode                     ;;D278|----/----\----;
                      RTS                                 ;;D27B|----/----\----; Return 
                                                          ;;                   ;
                      LDA.B !PlayerYPosNext               ;;D27C|----/----\----; \ Unreachable 
                      SEC                                 ;;D27E|----/----\----;  | 
                      SBC.B !PlayerYPosNow                ;;D27F|----/----\----;  | 
                      CLC                                 ;;D281|----/----\----;  | 
                      ADC.B !PipeTimer                    ;;D282|----/----\----;  | 
                      STA.B !PipeTimer                    ;;D284|----/----\----;  | 
                      RTS                                 ;;D286|----/----\----; / Return 
                                                          ;;                   ;
PipeCannonAni:        JSR NoButtons                       ;;D287|----/----\----;
                      LDA.B #$02                          ;;D28A|----/----\----;
                      STA.W !PlayerBehindNet              ;;D28C|----/----\----;
                      LDA.B #$0C                          ;;D28F|----/----\----;
                      STA.B !PlayerInAir                  ;;D291|----/----\----;
                      JSR CODE_00CD8B                     ;;D293|----/----\----;
                      DEC.B !PipeTimer                    ;;D296|----/----\----;
                      BNE +                               ;;D298|----/----\----;
                      JMP CODE_00D26A                     ;;D29A|----/----\----;
                                                          ;;                   ;
                    + LDA.B !PipeTimer                    ;;D29D|----/----\----;
                      CMP.B #$18                          ;;D29F|----/----\----;
                      BCC CODE_00D2AA                     ;;D2A1|----/----\----;
                      BNE +                               ;;D2A3|----/----\----;
                      LDA.B #$09                          ;;D2A5|----/----\----; \ Play sound effect 
                      STA.W !SPCIO3                       ;;D2A7|----/----\----; / 
CODE_00D2AA:          STZ.W !PlayerBehindNet              ;;D2AA|----/----\----;
                      STZ.W !YoshiInPipeSetting           ;;D2AD|----/----\----;
                      STZ.B !SpriteLock                   ;;D2B0|----/----\----; Set sprites not locked 
                    + LDA.B #$40                          ;;D2B2|----/----\----; \ X speed = #$40 
                      STA.B !PlayerXSpeed                 ;;D2B4|----/----\----; / 
                      LDA.B #$C0                          ;;D2B6|----/----\----; \ Y speed = #$C0 
                      STA.B !PlayerYSpeed                 ;;D2B8|----/----\----; / 
                      JMP CODE_00DC2D                     ;;D2BA|----/----\----;
                                                          ;;                   ;
                                                          ;;                   ;
DATA_00D2BD:          db $B0,$B6,$AE,$B4,$AB,$B2,$A9,$B0  ;;D2BD|----/----\----;
                      db $A6,$AE,$A4,$AB,$A1,$A9,$9F,$A6  ;;D2C5|----/----\----;
DATA_00D2CD:          db $00,$FF,$00,$01,$00,$FF,$00,$01  ;;D2CD|----/----\----;
                      db $00,$FF,$00,$01,$80,$FE,$C0,$00  ;;D2D5|----/----\----;
                      db $40,$FF,$80,$01,$00,$FE,$40,$00  ;;D2DD|----/----\----;
                      db $C0,$FF,$00,$02,$00,$FE,$40,$00  ;;D2E5|----/----\----;
                      db $00,$FE,$40,$00,$C0,$FF,$00,$02  ;;D2ED|----/----\----;
                      db $C0,$FF,$00,$02,$00,$FC,$00,$FF  ;;D2F5|----/----\----;
                      db $00,$01,$00,$04,$00,$FF,$00,$01  ;;D2FD|----/----\----;
                      db $00,$FF,$00,$01                  ;;D305|----/----\----;
                                                          ;;                   ;
DATA_00D309:          db $E0,$FF,$20,$00,$E0,$FF,$20,$00  ;;D309|----/----\----;
                      db $E0,$FF,$20,$00,$C0,$FF,$20,$00  ;;D311|----/----\----;
                      db $E0,$FF,$40,$00,$80,$FF,$20,$00  ;;D319|----/----\----;
                      db $E0,$FF,$80,$00,$80,$FF,$20,$00  ;;D321|----/----\----;
                      db $80,$FF,$20,$00,$E0,$FF,$80,$00  ;;D329|----/----\----;
                      db $E0,$FF,$80,$00,$00,$FE,$80,$FF  ;;D331|----/----\----;
                      db $80,$00,$00,$02,$00,$FF,$00,$01  ;;D339|----/----\----;
                      db $00,$FF,$00,$01                  ;;D341|----/----\----;
                                                          ;;                   ;
MarioAccel_:          db $80                              ;;D345|----/----\----;
                                                          ;;                   ;
MarioAccel2_:         db $FE,$80,$FE,$80,$01,$80,$01,$80  ;;D346|----/----\----;
                      db $FE,$80,$FE,$80,$01,$80,$01,$80  ;;D34E|----/----\----;
                      db $FE,$80,$FE,$80,$01,$80,$01,$80  ;;D356|----/----\----;
                      db $FE,$80,$FE,$40,$01,$40,$01,$C0  ;;D35E|----/----\----;
                      db $FE,$C0,$FE,$80,$01,$80,$01,$80  ;;D366|----/----\----;
                      db $FE,$80,$FE,$00,$01,$00,$01,$00  ;;D36E|----/----\----;
                      db $FF,$00,$FF,$80,$01,$80,$01,$80  ;;D376|----/----\----;
                      db $FE,$80,$FE,$00,$01,$00,$01,$80  ;;D37E|----/----\----;
                      db $FE,$80,$FE,$00,$01,$00,$01,$00  ;;D386|----/----\----;
                      db $FF,$00,$FF,$80,$01,$80,$01,$00  ;;D38E|----/----\----;
                      db $FF,$00,$FF,$80,$01,$80,$01,$00  ;;D396|----/----\----;
                      db $FC,$00,$FC,$00,$FD,$00,$FD,$00  ;;D39E|----/----\----;
                      db $03,$00,$03,$00,$04,$00,$04,$00  ;;D3A6|----/----\----;
                      db $FC,$00,$FC,$00,$06,$00,$06,$00  ;;D3AE|----/----\----;
                      db $FA,$00,$FA,$00,$04,$00,$04,$80  ;;D3B6|----/----\----;
                      db $FF,$80,$00,$00,$FF,$00,$01,$80  ;;D3BE|----/----\----;
                      db $FE,$80,$01,$80,$FE,$80,$FE,$80  ;;D3C6|----/----\----;
                      db $01,$80,$01,$80,$FE,$80,$02,$80  ;;D3CE|----/----\----;
                      db $FD,$00,$FB,$80,$02,$00,$05,$80  ;;D3D6|----/----\----;
                      db $FD,$00,$FB,$80,$02,$00,$05,$80  ;;D3DE|----/----\----;
                      db $FD,$00,$FB,$80,$02,$00,$05,$40  ;;D3E6|----/----\----;
                      db $FD,$80,$FA,$40,$02,$80,$04,$C0  ;;D3EE|----/----\----;
                      db $FD,$80,$FB,$C0,$02,$80,$05,$00  ;;D3F6|----/----\----;
                      db $FD,$00,$FA,$00,$02,$00,$04,$00  ;;D3FE|----/----\----;
                      db $FE,$00,$FC,$00,$03,$00,$06,$00  ;;D406|----/----\----;
                      db $FD,$00,$FA,$00,$02,$00,$04,$00  ;;D40E|----/----\----;
                      db $FD,$00,$FA,$00,$02,$00,$04,$00  ;;D416|----/----\----;
                      db $FE,$00,$FC,$00,$03,$00,$06,$00  ;;D41E|----/----\----;
                      db $FE,$00,$FC,$00,$03,$00,$06,$00  ;;D426|----/----\----;
                      db $FD,$00,$FA,$00,$FD,$00,$FA,$00  ;;D42E|----/----\----;
                      db $03,$00,$06,$00,$03,$00,$06      ;;D436|----/----\----;
                                                          ;;                   ;
DATA_00D43D:          db $80,$FF,$80,$FE,$80,$00,$80,$01  ;;D43D|----/----\----;
                      db $80,$FF,$80,$FE,$80,$00,$80,$01  ;;D445|----/----\----;
                      db $80,$FF,$80,$FE,$80,$00,$80,$01  ;;D44D|----/----\----;
                      db $80,$FE,$80,$FE,$80,$00,$40,$01  ;;D455|----/----\----;
                      db $80,$FF,$C0,$FE,$80,$01,$80,$01  ;;D45D|----/----\----;
                      db $80,$FE,$80,$FE,$80,$00,$00,$01  ;;D465|----/----\----;
                      db $80,$FF,$00,$FF,$80,$01,$80,$01  ;;D46D|----/----\----;
                      db $80,$FE,$80,$FE,$80,$00,$00,$01  ;;D475|----/----\----;
                      db $80,$FE,$80,$FE,$80,$00,$00,$01  ;;D47D|----/----\----;
                      db $80,$FF,$00,$FF,$80,$01,$80,$01  ;;D485|----/----\----;
                      db $80,$FF,$00,$FF,$80,$01,$80,$01  ;;D48D|----/----\----;
                      db $00,$FC,$00,$FC,$00,$FE,$00,$FD  ;;D495|----/----\----;
                      db $00,$03,$00,$03,$00,$04,$00,$04  ;;D49D|----/----\----;
                      db $00,$FC,$00,$FC,$80,$00,$80,$00  ;;D4A5|----/----\----;
                      db $80,$FF,$80,$FF,$00,$04,$00,$04  ;;D4AD|----/----\----;
                      db $80,$FF,$80,$00,$00,$FF,$00,$01  ;;D4B5|----/----\----;
                      db $80,$FE,$80,$01,$80,$FE,$80,$FE  ;;D4BD|----/----\----;
                      db $80,$01,$80,$01,$80,$FE,$80,$02  ;;D4C5|----/----\----;
                      db $C0,$FF,$80,$FD,$40,$00,$80,$02  ;;D4CD|----/----\----;
                      db $C0,$FF,$80,$FD,$40,$00,$80,$02  ;;D4D5|----/----\----;
                      db $C0,$FF,$80,$FD,$40,$00,$80,$02  ;;D4DD|----/----\----;
                      db $80,$FF,$40,$FD,$40,$00,$40,$02  ;;D4E5|----/----\----;
                      db $C0,$FF,$C0,$FD,$80,$00,$C0,$02  ;;D4ED|----/----\----;
                      db $00,$FD,$00,$FD,$40,$00,$00,$02  ;;D4F5|----/----\----;
                      db $C0,$FF,$00,$FE,$00,$03,$00,$03  ;;D4FD|----/----\----;
                      db $00,$FD,$00,$FD,$40,$00,$00,$02  ;;D505|----/----\----;
                      db $00,$FD,$00,$FD,$40,$00,$00,$02  ;;D50D|----/----\----;
                      db $C0,$FF,$00,$FE,$00,$03,$00,$03  ;;D515|----/----\----;
                      db $C0,$FF,$00,$FE,$00,$03,$00,$03  ;;D51D|----/----\----;
                      db $00,$FD,$00,$FD,$00,$FD,$00,$FD  ;;D525|----/----\----;
                      db $00,$03,$00,$03,$00,$03,$00,$03  ;;D52D|----/----\----;
DATA_00D535:          db $EC,$14,$DC,$24,$DC,$24,$D0,$30  ;;D535|----/----\----;
                      db $EC,$14,$DC,$24,$DC,$24,$D0,$30  ;;D53D|----/----\----;
                      db $EC,$14,$DC,$24,$DC,$24,$D0,$30  ;;D545|----/----\----;
                      db $E8,$12,$DC,$20,$DC,$20,$D0,$2C  ;;D54D|----/----\----;
                      db $EE,$18,$E0,$24,$E0,$24,$D4,$30  ;;D555|----/----\----;
                      db $DC,$10,$DC,$1C,$DC,$1C,$D0,$28  ;;D55D|----/----\----;
                      db $F0,$24,$E4,$24,$E4,$24,$D8,$30  ;;D565|----/----\----;
                      db $DC,$10,$DC,$1C,$DC,$1C,$D0,$28  ;;D56D|----/----\----;
                      db $DC,$10,$DC,$1C,$DC,$1C,$D0,$28  ;;D575|----/----\----;
                      db $F0,$24,$E4,$24,$E4,$24,$D8,$30  ;;D57D|----/----\----;
                      db $F0,$24,$E4,$24,$E4,$24,$D8,$30  ;;D585|----/----\----;
                      db $DC,$F0,$DC,$F8,$DC,$F8,$D0,$FC  ;;D58D|----/----\----;
                      db $10,$24,$08,$24,$08,$24,$04,$30  ;;D595|----/----\----;
                      db $D0,$08,$D0,$08,$D0,$08,$D0,$08  ;;D59D|----/----\----;
                      db $F8,$30,$F8,$30,$F8,$30,$F8,$30  ;;D5A5|----/----\----;
                      db $F8,$08,$F0,$10,$F4,$04,$E8,$08  ;;D5AD|----/----\----;
                      db $F0,$10,$E0,$20,$EC,$0C,$D8,$18  ;;D5B5|----/----\----;
                      db $D8,$28,$D4,$2C,$D0,$30,$D0,$D0  ;;D5BD|----/----\----;
                      db $30,$30,$E0,$20                  ;;D5C5|----/----\----;
                                                          ;;                   ;
DATA_00D5C9:          db $00                              ;;D5C9|----/----\----;
                                                          ;;                   ;
DATA_00D5CA:          db $00,$00,$00,$00,$00,$00,$00,$00  ;;D5CA|----/----\----;
                      db $00,$00,$F0,$00,$10,$00,$00,$00  ;;D5D2|----/----\----;
                      db $00,$00,$00,$00,$00,$00,$E0,$00  ;;D5DA|----/----\----;
                      db $20,$00,$00,$00,$00,$00,$F0,$00  ;;D5E2|----/----\----;
                      db $F8                              ;;D5EA|----/----\----;
                                                          ;;                   ;
DATA_00D5EB:          db $FF,$FF,$02                      ;;D5EB|----/----\----;
                                                          ;;                   ;
DATA_00D5EE:          db $68,$70                          ;;D5EE|----/----\----;
                                                          ;;                   ;
DATA_00D5F0:          db $1C,$0C                          ;;D5F0|----/----\----;
                                                          ;;                   ;
CODE_00D5F2:          LDA.B !PlayerInAir                  ;;D5F2|----/----\----;
                      BEQ +                               ;;D5F4|----/----\----;
                      JMP CODE_00D682                     ;;D5F6|----/----\----;
                                                          ;;                   ;
                    + STZ.B !PlayerIsDucking              ;;D5F9|----/----\----;
                      LDA.W !PlayerSlopePose              ;;D5FB|----/----\----;
                      BNE +                               ;;D5FE|----/----\----;
                      LDA.B !byetudlrHold                 ;;D600|----/----\----;
                      AND.B #$04                          ;;D602|----/----\----;
                      BEQ +                               ;;D604|----/----\----;
                      STA.B !PlayerIsDucking              ;;D606|----/----\----;
                      STZ.W !CapeInteracts                ;;D608|----/----\----;
                    + LDA.W !StandOnSolidSprite           ;;D60B|----/----\----;
                      CMP.B #$02                          ;;D60E|----/----\----;
                      BEQ CODE_00D61E                     ;;D610|----/----\----;
                      LDA.B !PlayerBlockedDir             ;;D612|----/----\----;
                      AND.B #$08                          ;;D614|----/----\----;
                      BNE CODE_00D61E                     ;;D616|----/----\----;
                      LDA.B !byetudlrFrame                ;;D618|----/----\----;
                      ORA.B !axlr0000Frame                ;;D61A|----/----\----;
                      BMI CODE_00D630                     ;;D61C|----/----\----;
CODE_00D61E:          LDA.B !PlayerIsDucking              ;;D61E|----/----\----;
                      BEQ CODE_00D682                     ;;D620|----/----\----;
                      LDA.B !PlayerXSpeed                 ;;D622|----/----\----;
                      BEQ +                               ;;D624|----/----\----;
                      LDA.B !LevelIsSlippery              ;;D626|----/----\----;
                      BNE +                               ;;D628|----/----\----;
                      JSR CODE_00FE4A                     ;;D62A|----/----\----;
                    + JMP CODE_00D764                     ;;D62D|----/----\----;
                                                          ;;                   ;
CODE_00D630:          LDA.B !PlayerXSpeed                 ;;D630|----/----\----;
                      BPL +                               ;;D632|----/----\----;
                      EOR.B #$FF                          ;;D634|----/----\----;
                      INC A                               ;;D636|----/----\----;
                    + LSR A                               ;;D637|----/----\----;
                      LSR A                               ;;D638|----/----\----;
                      AND.B #$FE                          ;;D639|----/----\----;
                      TAX                                 ;;D63B|----/----\----;
                      LDA.B !axlr0000Frame                ;;D63C|----/----\----;
                      BPL CODE_00D65E                     ;;D63E|----/----\----;
                      LDA.W !IsCarryingItem               ;;D640|----/----\----;
                      BNE CODE_00D65E                     ;;D643|----/----\----;
                      INC A                               ;;D645|----/----\----;
                      STA.W !SpinJumpFlag                 ;;D646|----/----\----;
                      LDA.B #$04                          ;;D649|----/----\----; \ Play sound effect 
                      STA.W !SPCIO3                       ;;D64B|----/----\----; / 
                      LDY.B !PlayerDirection              ;;D64E|----/----\----;
                      LDA.W DATA_00D5F0,Y                 ;;D650|----/----\----;
                      STA.W !SpinjumpFireball             ;;D653|----/----\----;
                      LDA.W !PlayerRidingYoshi            ;;D656|----/----\----;
                      BNE CODE_00D682                     ;;D659|----/----\----;
                      INX                                 ;;D65B|----/----\----;
                      BRA +                               ;;D65C|----/----\----;
                                                          ;;                   ;
CODE_00D65E:          LDA.B #$01                          ;;D65E|----/----\----; \ Play sound effect 
                      STA.W !SPCIO1                       ;;D660|----/----\----; / 
                    + LDA.W DATA_00D2BD,X                 ;;D663|----/----\----;
                      STA.B !PlayerYSpeed                 ;;D666|----/----\----;
                      LDA.B #$0B                          ;;D668|----/----\----;
                      LDY.W !PlayerPMeter                 ;;D66A|----/----\----;
                      CPY.B #$70                          ;;D66D|----/----\----;
                      BCC CODE_00D67D                     ;;D66F|----/----\----;
                      LDA.W !TakeoffTimer                 ;;D671|----/----\----;
                      BNE +                               ;;D674|----/----\----;
                      LDA.B #$50                          ;;D676|----/----\----;
                      STA.W !TakeoffTimer                 ;;D678|----/----\----;
                    + LDA.B #$0C                          ;;D67B|----/----\----;
CODE_00D67D:          STA.B !PlayerInAir                  ;;D67D|----/----\----;
                      STZ.W !PlayerSlopePose              ;;D67F|----/----\----;
CODE_00D682:          LDA.W !PlayerSlopePose              ;;D682|----/----\----;
                      BMI CODE_00D692                     ;;D685|----/----\----;
                      LDA.B !byetudlrHold                 ;;D687|----/----\----;
                      AND.B #$03                          ;;D689|----/----\----;
                      BNE CODE_00D6B1                     ;;D68B|----/----\----;
CODE_00D68D:          LDA.W !PlayerSlopePose              ;;D68D|----/----\----;
                      BEQ +                               ;;D690|----/----\----;
CODE_00D692:          JSR CODE_00FE4A                     ;;D692|----/----\----;
                      LDA.W !CurrentSlope                 ;;D695|----/----\----;
                      BEQ +                               ;;D698|----/----\----;
                      JSR CODE_00D968                     ;;D69A|----/----\----;
                      LDA.W !SlopeType                    ;;D69D|----/----\----;
                      LSR A                               ;;D6A0|----/----\----;
                      LSR A                               ;;D6A1|----/----\----;
                      TAY                                 ;;D6A2|----/----\----;
                      ADC.B #$76                          ;;D6A3|----/----\----;
                      TAX                                 ;;D6A5|----/----\----;
                      TYA                                 ;;D6A6|----/----\----;
                      LSR A                               ;;D6A7|----/----\----;
                      ADC.B #$87                          ;;D6A8|----/----\----;
                      TAY                                 ;;D6AA|----/----\----;
                      JMP CODE_00D742                     ;;D6AB|----/----\----;
                                                          ;;                   ;
                    + JMP CODE_00D764                     ;;D6AE|----/----\----;
                                                          ;;                   ;
CODE_00D6B1:          STZ.W !PlayerSlopePose              ;;D6B1|----/----\----;
                      AND.B #$01                          ;;D6B4|----/----\----;
                      LDY.W !FlightPhase                  ;;D6B6|----/----\----;
                      BEQ CODE_00D6D5                     ;;D6B9|----/----\----;
                      CMP.B !PlayerDirection              ;;D6BB|----/----\----;
                      BEQ CODE_00D6C3                     ;;D6BD|----/----\----;
                      LDY.B !byetudlrFrame                ;;D6BF|----/----\----;
                      BPL CODE_00D68D                     ;;D6C1|----/----\----;
CODE_00D6C3:          LDX.B !PlayerDirection              ;;D6C3|----/----\----;
                      LDY.W DATA_00D5EE,X                 ;;D6C5|----/----\----;
                      STY.W !SlopeType                    ;;D6C8|----/----\----;
                      STA.B !_1                           ;;D6CB|----/----\----;
                      ASL A                               ;;D6CD|----/----\----;
                      ASL A                               ;;D6CE|----/----\----;
                      ORA.W !SlopeType                    ;;D6CF|----/----\----;
                      TAX                                 ;;D6D2|----/----\----;
                      BRA CODE_00D713                     ;;D6D3|----/----\----;
                                                          ;;                   ;
CODE_00D6D5:          LDY.B !PlayerDirection              ;;D6D5|----/----\----;
                      CMP.B !PlayerDirection              ;;D6D7|----/----\----;
                      BEQ CODE_00D6EC                     ;;D6D9|----/----\----;
                      LDY.W !IsCarryingItem               ;;D6DB|----/----\----;
                      BEQ CODE_00D6EA                     ;;D6DE|----/----\----;
                      LDY.W !FaceScreenTimer              ;;D6E0|----/----\----;
                      BNE CODE_00D6EC                     ;;D6E3|----/----\----;
                      LDY.B #$08                          ;;D6E5|----/----\----;
                      STY.W !FaceScreenTimer              ;;D6E7|----/----\----;
CODE_00D6EA:          STA.B !PlayerDirection              ;;D6EA|----/----\----;
CODE_00D6EC:          STA.B !_1                           ;;D6EC|----/----\----;
                      ASL A                               ;;D6EE|----/----\----;
                      ASL A                               ;;D6EF|----/----\----;
                      ORA.W !SlopeType                    ;;D6F0|----/----\----;
                      TAX                                 ;;D6F3|----/----\----;
                      LDA.B !PlayerXSpeed                 ;;D6F4|----/----\----;
                      BEQ CODE_00D713                     ;;D6F6|----/----\----;
                      EOR.W MarioAccel2_,X                ;;D6F8|----/----\----;
                      BPL CODE_00D713                     ;;D6FB|----/----\----;
                      LDA.W !SkidTurnTimer                ;;D6FD|----/----\----;
                      BNE CODE_00D713                     ;;D700|----/----\----;
                      LDA.B !LevelIsSlippery              ;;D702|----/----\----;
                      BNE +                               ;;D704|----/----\----;
                      LDA.B #$0D                          ;;D706|----/----\----;
                      STA.W !PlayerTurningPose            ;;D708|----/----\----;
                      JSR CODE_00FE4A                     ;;D70B|----/----\----;
                    + TXA                                 ;;D70E|----/----\----;
                      CLC                                 ;;D70F|----/----\----;
                      ADC.B #$90                          ;;D710|----/----\----;
                      TAX                                 ;;D712|----/----\----;
CODE_00D713:          LDY.B #$00                          ;;D713|----/----\----;
                      BIT.B !byetudlrHold                 ;;D715|----/----\----;
                      BVC CODE_00D737                     ;;D717|----/----\----;
                      INX                                 ;;D719|----/----\----;
                      INX                                 ;;D71A|----/----\----;
                      INY                                 ;;D71B|----/----\----;
                      LDA.B !PlayerXSpeed                 ;;D71C|----/----\----;
                      BPL +                               ;;D71E|----/----\----;
                      EOR.B #$FF                          ;;D720|----/----\----;
                      INC A                               ;;D722|----/----\----;
                    + CMP.B #$23                          ;;D723|----/----\----;
                      BMI CODE_00D737                     ;;D725|----/----\----;
                      LDA.B !PlayerInAir                  ;;D727|----/----\----;
                      BNE CODE_00D732                     ;;D729|----/----\----;
                      LDA.B #$10                          ;;D72B|----/----\----;
                      STA.W !RunTakeoffTimer              ;;D72D|----/----\----;
                      BRA CODE_00D736                     ;;D730|----/----\----;
                                                          ;;                   ;
CODE_00D732:          CMP.B #$0C                          ;;D732|----/----\----;
                      BNE CODE_00D737                     ;;D734|----/----\----;
CODE_00D736:          INY                                 ;;D736|----/----\----;
CODE_00D737:          JSR CODE_00D96A                     ;;D737|----/----\----;
                      TYA                                 ;;D73A|----/----\----;
                      ASL A                               ;;D73B|----/----\----;
                      ORA.W !SlopeType                    ;;D73C|----/----\----;
                      ORA.B !_1                           ;;D73F|----/----\----;
                      TAY                                 ;;D741|----/----\----;
CODE_00D742:          LDA.B !PlayerXSpeed                 ;;D742|----/----\----;
                      SEC                                 ;;D744|----/----\----;
                      SBC.W DATA_00D535,Y                 ;;D745|----/----\----;
                      BEQ CODE_00D76B                     ;;D748|----/----\----;
                      EOR.W DATA_00D535,Y                 ;;D74A|----/----\----;
                      BPL CODE_00D76B                     ;;D74D|----/----\----;
                      REP #$20                            ;;D74F|----/----\----; Accum (16 bit) 
                      LDA.W MarioAccel_,X                 ;;D751|----/----\----;
                      LDY.B !LevelIsSlippery              ;;D754|----/----\----;
                      BEQ +                               ;;D756|----/----\----;
                      LDY.B !PlayerInAir                  ;;D758|----/----\----;
                      BNE +                               ;;D75A|----/----\----;
                      LDA.W DATA_00D43D,X                 ;;D75C|----/----\----;
                    + CLC                                 ;;D75F|----/----\----;
                      ADC.B !PlayerXPosSpx                ;;D760|----/----\----;
                      BRA CODE_00D7A0                     ;;D762|----/----\----;
                                                          ;;                   ;
CODE_00D764:          JSR CODE_00D968                     ;;D764|----/----\----;
                      LDA.B !PlayerInAir                  ;;D767|----/----\----;
                      BNE Return00D7A4                    ;;D769|----/----\----;
CODE_00D76B:          LDA.W !SlopeType                    ;;D76B|----/----\----;
                      LSR A                               ;;D76E|----/----\----;
                      TAY                                 ;;D76F|----/----\----;
                      LSR A                               ;;D770|----/----\----;
                      TAX                                 ;;D771|----/----\----;
CODE_00D772:          LDA.B !PlayerXSpeed                 ;;D772|----/----\----;
                      SEC                                 ;;D774|----/----\----;
                      SBC.W DATA_00D5CA,X                 ;;D775|----/----\----;
                      BPL +                               ;;D778|----/----\----;
                      INY                                 ;;D77A|----/----\----;
                      INY                                 ;;D77B|----/----\----;
                    + LDA.W !EndLevelTimer                ;;D77C|----/----\----;
                      ORA.B !PlayerInAir                  ;;D77F|----/----\----;
                      REP #$20                            ;;D781|----/----\----; Accum (16 bit) 
                      BNE CODE_00D78C                     ;;D783|----/----\----;
                      LDA.W DATA_00D309,Y                 ;;D785|----/----\----;
                      BIT.B !LevelIsWater                 ;;D788|----/----\----;
                      BMI +                               ;;D78A|----/----\----;
CODE_00D78C:          LDA.W DATA_00D2CD,Y                 ;;D78C|----/----\----;
                    + CLC                                 ;;D78F|----/----\----;
                      ADC.B !PlayerXPosSpx                ;;D790|----/----\----;
                      STA.B !PlayerXPosSpx                ;;D792|----/----\----;
                      SEC                                 ;;D794|----/----\----;
                      SBC.W DATA_00D5C9,X                 ;;D795|----/----\----;
                      EOR.W DATA_00D2CD,Y                 ;;D798|----/----\----;
                      BMI +                               ;;D79B|----/----\----;
                      LDA.W DATA_00D5C9,X                 ;;D79D|----/----\----;
CODE_00D7A0:          STA.B !PlayerXPosSpx                ;;D7A0|----/----\----;
                    + SEP #$20                            ;;D7A2|----/----\----; Accum (8 bit) 
Return00D7A4:         RTS                                 ;;D7A4|----/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
DATA_00D7A5:          db $06,$03,$04,$10,$F4,$01,$03,$04  ;;D7A5|----/----\----;
                      db $05,$06                          ;;D7AD|----/----\----;
                                                          ;;                   ;
DATA_00D7AF:          db $40,$40,$20,$40,$40,$40,$40,$40  ;;D7AF|----/----\----;
                      db $40,$40                          ;;D7B7|----/----\----;
                                                          ;;                   ;
DATA_00D7B9:          db $10,$C8,$E0,$02,$03,$03,$04,$03  ;;D7B9|----/----\----;
                      db $02,$00,$01,$00,$00,$00,$00      ;;D7C1|----/----\----;
                                                          ;;                   ;
DATA_00D7C8:          db $01,$10,$30,$30,$38,$38,$40      ;;D7C8|----/----\----;
                                                          ;;                   ;
CapeSpeed:            db $FF,$01,$01,$FF,$FF              ;;D7CF|----/----\----;
                                                          ;;                   ;
DATA_00D7D4:          db $01,$06,$03,$01,$00              ;;D7D4|----/----\----;
                                                          ;;                   ;
DATA_00D7D9:          db $00,$00,$00,$F8,$F8,$F8,$F4,$F0  ;;D7D9|----/----\----;
                      db $C8,$02,$01                      ;;D7E1|----/----\----;
                                                          ;;                   ;
CODE_00D7E4:          LDY.W !FlightPhase                  ;;D7E4|----/----\----;
                      BNE CODE_00D824                     ;;D7E7|----/----\----;
                      LDA.B !PlayerInAir                  ;;D7E9|----/----\----;
                      BEQ CODE_00D811                     ;;D7EB|----/----\----;
                      LDA.W !IsCarryingItem               ;;D7ED|----/----\----;
                      ORA.W !PlayerRidingYoshi            ;;D7F0|----/----\----;
                      ORA.W !SpinJumpFlag                 ;;D7F3|----/----\----;
                      BNE CODE_00D811                     ;;D7F6|----/----\----;
                      LDA.W !PlayerSlopePose              ;;D7F8|----/----\----;
                      BMI CODE_00D7FF                     ;;D7FB|----/----\----;
                      BNE CODE_00D811                     ;;D7FD|----/----\----;
CODE_00D7FF:          STZ.W !PlayerSlopePose              ;;D7FF|----/----\----;
                      LDX.B !Powerup                      ;;D802|----/----\----;
                      CPX.B #$02                          ;;D804|----/----\----;
                      BNE CODE_00D811                     ;;D806|----/----\----;
                      LDA.B !PlayerYSpeed                 ;;D808|----/----\----;
                      BMI CODE_00D811                     ;;D80A|----/----\----;
                      LDA.W !TakeoffTimer                 ;;D80C|----/----\----;
                      BNE +                               ;;D80F|----/----\----;
CODE_00D811:          JMP CODE_00D8CD                     ;;D811|----/----\----;
                                                          ;;                   ;
                    + STZ.B !PlayerIsDucking              ;;D814|----/----\----;
                      LDA.B #$0B                          ;;D816|----/----\----;
                      STA.B !PlayerInAir                  ;;D818|----/----\----;
                      STZ.W !MaxStageOfFlight             ;;D81A|----/----\----;
                      JSR CODE_00D94F                     ;;D81D|----/----\----;
                      LDX.B #$02                          ;;D820|----/----\----;
                      BRA CODE_00D85B                     ;;D822|----/----\----;
                                                          ;;                   ;
CODE_00D824:          CPY.B #$02                          ;;D824|----/----\----;
                      BCC +                               ;;D826|----/----\----;
                      JSR CODE_00D94F                     ;;D828|----/----\----;
                    + LDX.W !NextFlightPhase              ;;D82B|----/----\----;
                      CPX.B #$04                          ;;D82E|----/----\----;
                      BEQ CODE_00D856                     ;;D830|----/----\----;
                      LDX.B #$03                          ;;D832|----/----\----;
                      LDY.B !PlayerYSpeed                 ;;D834|----/----\----;
                      BMI CODE_00D856                     ;;D836|----/----\----;
                      LDA.B !byetudlrHold                 ;;D838|----/----\----;
                      AND.B #$03                          ;;D83A|----/----\----;
                      TAY                                 ;;D83C|----/----\----;
                      BNE CODE_00D849                     ;;D83D|----/----\----;
                      LDA.W !FlightPhase                  ;;D83F|----/----\----;
                      CMP.B #$04                          ;;D842|----/----\----;
                      BCS CODE_00D856                     ;;D844|----/----\----;
                      DEX                                 ;;D846|----/----\----;
                      BRA CODE_00D856                     ;;D847|----/----\----;
                                                          ;;                   ;
CODE_00D849:          LSR A                               ;;D849|----/----\----;
                      LDY.B !PlayerDirection              ;;D84A|----/----\----;
                      BEQ +                               ;;D84C|----/----\----;
                      EOR.B #$01                          ;;D84E|----/----\----;
                    + TAX                                 ;;D850|----/----\----;
                      CPX.W !NextFlightPhase              ;;D851|----/----\----;
                      BNE CODE_00D85B                     ;;D854|----/----\----;
CODE_00D856:          LDA.W !CapePumpTimer                ;;D856|----/----\----;
                      BNE CODE_00D87E                     ;;D859|----/----\----;
CODE_00D85B:          BIT.B !byetudlrHold                 ;;D85B|----/----\----;
                      BVS +                               ;;D85D|----/----\----;
                      LDX.B #$04                          ;;D85F|----/----\----;
                    + LDA.W !FlightPhase                  ;;D861|----/----\----;
                      CMP.W DATA_00D7D4,X                 ;;D864|----/----\----;
                      BEQ CODE_00D87E                     ;;D867|----/----\----;
                      CLC                                 ;;D869|----/----\----;
                      ADC.W CapeSpeed,X                   ;;D86A|----/----\----;
                      STA.W !FlightPhase                  ;;D86D|----/----\----;
                      LDA.B #$08                          ;;D870|----/----\----;
                      LDY.W !MaxStageOfFlight             ;;D872|----/----\----;
                      CPY.B #$C8                          ;;D875|----/----\----;
                      BNE +                               ;;D877|----/----\----;
                      LDA.B #$02                          ;;D879|----/----\----;
                    + STA.W !CapePumpTimer                ;;D87B|----/----\----;
CODE_00D87E:          STX.W !NextFlightPhase              ;;D87E|----/----\----;
                      LDY.W !FlightPhase                  ;;D881|----/----\----;
                      BEQ CODE_00D8CD                     ;;D884|----/----\----;
                      LDA.B !PlayerYSpeed                 ;;D886|----/----\----;
                      BPL CODE_00D892                     ;;D888|----/----\----;
                      CMP.B #$C8                          ;;D88A|----/----\----;
                      BCS +                               ;;D88C|----/----\----;
                      LDA.B #$C8                          ;;D88E|----/----\----;
                      BRA +                               ;;D890|----/----\----;
                                                          ;;                   ;
CODE_00D892:          CMP.W DATA_00D7C8,Y                 ;;D892|----/----\----;
                      BCC +                               ;;D895|----/----\----;
                      LDA.W DATA_00D7C8,Y                 ;;D897|----/----\----;
                    + PHA                                 ;;D89A|----/----\----;
                      CPY.B #$01                          ;;D89B|----/----\----;
                      BNE CODE_00D8C6                     ;;D89D|----/----\----;
                      LDX.W !MaxStageOfFlight             ;;D89F|----/----\----;
                      BEQ CODE_00D8C4                     ;;D8A2|----/----\----;
                      LDA.B !PlayerYSpeed                 ;;D8A4|----/----\----;
                      BMI CODE_00D8AF                     ;;D8A6|----/----\----;
                      LDA.B #$09                          ;;D8A8|----/----\----; \ Play sound effect 
                      STA.W !SPCIO0                       ;;D8AA|----/----\----; / 
                      BRA +                               ;;D8AD|----/----\----;
                                                          ;;                   ;
CODE_00D8AF:          CMP.W !MaxStageOfFlight             ;;D8AF|----/----\----;
                      BCS +                               ;;D8B2|----/----\----;
                      STX.B !PlayerYSpeed                 ;;D8B4|----/----\----;
                      STZ.W !MaxStageOfFlight             ;;D8B6|----/----\----;
                    + LDX.B !PlayerDirection              ;;D8B9|----/----\----;
                      LDA.B !PlayerXSpeed                 ;;D8BB|----/----\----;
                      BEQ CODE_00D8C4                     ;;D8BD|----/----\----;
                      EOR.W DATA_00D535,X                 ;;D8BF|----/----\----;
                      BPL CODE_00D8C6                     ;;D8C2|----/----\----;
CODE_00D8C4:          LDY.B #$02                          ;;D8C4|----/----\----;
CODE_00D8C6:          PLA                                 ;;D8C6|----/----\----;
                      INY                                 ;;D8C7|----/----\----;
                      INY                                 ;;D8C8|----/----\----;
                      INY                                 ;;D8C9|----/----\----;
                      JMP CODE_00D948                     ;;D8CA|----/----\----;
                                                          ;;                   ;
CODE_00D8CD:          LDA.B !PlayerInAir                  ;;D8CD|----/----\----; \ Branch if not flying 
                      BEQ CODE_00D928                     ;;D8CF|----/----\----; / 
                      LDX.B #$00                          ;;D8D1|----/----\----; X = #$00 
                      LDA.W !PlayerRidingYoshi            ;;D8D3|----/----\----; \ Branch if not on Yoshi 
                      BEQ CODE_00D8E7                     ;;D8D6|----/----\----; / 
                      LDA.W !YoshiHasWingsEvt             ;;D8D8|----/----\----; \ Branch if not winged Yoshi 
                      LSR A                               ;;D8DB|----/----\----;  | 
                      BEQ CODE_00D8E7                     ;;D8DC|----/----\----; / 
                      LDY.B #$02                          ;;D8DE|----/----\----; \ Branch if not Caped Mario 
                      CPY.B !Powerup                      ;;D8E0|----/----\----;  | 
                      BEQ +                               ;;D8E2|----/----\----; / 
                      INX                                 ;;D8E4|----/----\----; X= #$01 
                    + BRA CODE_00D8FF                     ;;D8E5|----/----\----;
                                                          ;;                   ;
CODE_00D8E7:          LDA.B !Powerup                      ;;D8E7|----/----\----; \ Branch if not Caped Mario 
                      CMP.B #$02                          ;;D8E9|----/----\----;  | 
                      BNE CODE_00D928                     ;;D8EB|----/----\----; / 
                      LDA.B !PlayerInAir                  ;;D8ED|----/----\----; \ Branch if $72 != 0C 
                      CMP.B #$0C                          ;;D8EF|----/----\----;  | 
                      BNE CODE_00D8FD                     ;;D8F1|----/----\----; / 
                      LDY.B #$01                          ;;D8F3|----/----\----;
                      CPY.W !TakeoffTimer                 ;;D8F5|----/----\----;
                      BCC CODE_00D8FF                     ;;D8F8|----/----\----;
                      INC.W !TakeoffTimer                 ;;D8FA|----/----\----;
CODE_00D8FD:          LDY.B #$00                          ;;D8FD|----/----\----;
CODE_00D8FF:          LDA.W !CapeFloatTimer               ;;D8FF|----/----\----;
                      BNE CODE_00D90D                     ;;D902|----/----\----;
                      LDA.B !byetudlrHold,X               ;;D904|----/----\----;
                      BPL CODE_00D924                     ;;D906|----/----\----;
                      LDA.B #$10                          ;;D908|----/----\----;
                      STA.W !CapeFloatTimer               ;;D90A|----/----\----;
CODE_00D90D:          LDA.B !PlayerYSpeed                 ;;D90D|----/----\----;
                      BPL CODE_00D91B                     ;;D90F|----/----\----;
                      LDX.W DATA_00D7B9,Y                 ;;D911|----/----\----;
                      BPL CODE_00D924                     ;;D914|----/----\----;
                      CMP.W DATA_00D7B9,Y                 ;;D916|----/----\----;
                      BCC CODE_00D924                     ;;D919|----/----\----;
CODE_00D91B:          LDA.W DATA_00D7B9,Y                 ;;D91B|----/----\----;
                      CMP.B !PlayerYSpeed                 ;;D91E|----/----\----;
                      BEQ CODE_00D94C                     ;;D920|----/----\----;
                      BMI CODE_00D94C                     ;;D922|----/----\----;
CODE_00D924:          CPY.B #$02                          ;;D924|----/----\----;
                      BEQ +                               ;;D926|----/----\----;
CODE_00D928:          LDY.B #$01                          ;;D928|----/----\----;
                      LDA.B !byetudlrHold                 ;;D92A|----/----\----;
                      BMI +                               ;;D92C|----/----\----;
CODE_00D92E:          LDY.B #$00                          ;;D92E|----/----\----;
                    + LDA.B !PlayerYSpeed                 ;;D930|----/----\----; \ If Mario's Y speed is negative (up), 
                      BMI CODE_00D948                     ;;D932|----/----\----; / branch to $D948 
                      CMP.W DATA_00D7AF,Y                 ;;D934|----/----\----;
                      BCC +                               ;;D937|----/----\----;
                      LDA.W DATA_00D7AF,Y                 ;;D939|----/----\----;
                    + LDX.B !PlayerInAir                  ;;D93C|----/----\----;
                      BEQ CODE_00D948                     ;;D93E|----/----\----;
                      CPX.B #$0B                          ;;D940|----/----\----;
                      BNE CODE_00D948                     ;;D942|----/----\----;
                      LDX.B #$24                          ;;D944|----/----\----;
                      STX.B !PlayerInAir                  ;;D946|----/----\----;
CODE_00D948:          CLC                                 ;;D948|----/----\----;
                      ADC.W DATA_00D7A5,Y                 ;;D949|----/----\----;
CODE_00D94C:          STA.B !PlayerYSpeed                 ;;D94C|----/----\----;
                      RTS                                 ;;D94E|----/----\----; Return 
                                                          ;;                   ;
CODE_00D94F:          STZ.W !Empty_140A                   ;;D94F|----/----\----;
                      LDA.B !PlayerYSpeed                 ;;D952|----/----\----;
                      BPL +                               ;;D954|----/----\----;
                      LDA.B #$00                          ;;D956|----/----\----;
                    + LSR A                               ;;D958|----/----\----;
                      LSR A                               ;;D959|----/----\----;
                      LSR A                               ;;D95A|----/----\----;
                      TAY                                 ;;D95B|----/----\----;
                      LDA.W DATA_00D7D9,Y                 ;;D95C|----/----\----;
                      CMP.W !MaxStageOfFlight             ;;D95F|----/----\----;
                      BPL +                               ;;D962|----/----\----;
                      STA.W !MaxStageOfFlight             ;;D964|----/----\----;
                    + RTS                                 ;;D967|----/----\----; Return 
                                                          ;;                   ;
CODE_00D968:          LDY.B #$00                          ;;D968|----/----\----;
CODE_00D96A:          LDA.W !PlayerPMeter                 ;;D96A|----/----\----;
                      CLC                                 ;;D96D|----/----\----;
                      ADC.W DATA_00D5EB,Y                 ;;D96E|----/----\----;
                      BPL +                               ;;D971|----/----\----;
                      LDA.B #$00                          ;;D973|----/----\----;
                    + CMP.B #$70                          ;;D975|----/----\----;
                      BCC +                               ;;D977|----/----\----;
                      INY                                 ;;D979|----/----\----;
                      LDA.B #$70                          ;;D97A|----/----\----;
                    + STA.W !PlayerPMeter                 ;;D97C|----/----\----;
                      RTS                                 ;;D97F|----/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
DATA_00D980:          db $16,$1A,$1A,$18                  ;;D980|----/----\----;
                                                          ;;                   ;
DATA_00D984:          db $E8,$F8,$D0,$D0                  ;;D984|----/----\----;
                                                          ;;                   ;
CODE_00D988:          STZ.W !PlayerSlopePose              ;;D988|----/----\----;
                      STZ.B !PlayerIsDucking              ;;D98B|----/----\----;
                      STZ.W !FlightPhase                  ;;D98D|----/----\----;
                      STZ.W !SpinJumpFlag                 ;;D990|----/----\----;
                      LDY.B !PlayerYSpeed                 ;;D993|----/----\----;
                      LDA.W !IsCarryingItem               ;;D995|----/----\----;
                      BEQ CODE_00D9EB                     ;;D998|----/----\----;
                      LDA.B !PlayerInAir                  ;;D99A|----/----\----;
                      BNE CODE_00D9AF                     ;;D99C|----/----\----;
                      LDA.B !byetudlrFrame                ;;D99E|----/----\----;
                      ORA.B !axlr0000Frame                ;;D9A0|----/----\----;
                      BPL CODE_00D9AF                     ;;D9A2|----/----\----;
                      LDA.B #$0B                          ;;D9A4|----/----\----;
                      STA.B !PlayerInAir                  ;;D9A6|----/----\----;
                      STZ.W !PlayerSlopePose              ;;D9A8|----/----\----;
                      LDY.B #$F0                          ;;D9AB|----/----\----;
                      BRA CODE_00D9B5                     ;;D9AD|----/----\----;
                                                          ;;                   ;
CODE_00D9AF:          LDA.B !byetudlrHold                 ;;D9AF|----/----\----;
                      AND.B #$04                          ;;D9B1|----/----\----;
                      BEQ +                               ;;D9B3|----/----\----;
CODE_00D9B5:          JSR CODE_00DAA9                     ;;D9B5|----/----\----;
                      TYA                                 ;;D9B8|----/----\----;
                      CLC                                 ;;D9B9|----/----\----;
                      ADC.B #$08                          ;;D9BA|----/----\----;
                      TAY                                 ;;D9BC|----/----\----;
                    + INY                                 ;;D9BD|----/----\----;
                      LDA.W !PlayerCanJumpWater           ;;D9BE|----/----\----;
                      BNE +                               ;;D9C1|----/----\----;
                      DEY                                 ;;D9C3|----/----\----;
                      LDA.B !EffFrame                     ;;D9C4|----/----\----;
                      AND.B #$03                          ;;D9C6|----/----\----;
                      BNE +                               ;;D9C8|----/----\----;
                      DEY                                 ;;D9CA|----/----\----;
                      DEY                                 ;;D9CB|----/----\----;
                    + TYA                                 ;;D9CC|----/----\----;
                      BMI CODE_00D9D7                     ;;D9CD|----/----\----;
                      CMP.B #$10                          ;;D9CF|----/----\----;
                      BCC +                               ;;D9D1|----/----\----;
                      LDA.B #$10                          ;;D9D3|----/----\----;
                      BRA +                               ;;D9D5|----/----\----;
                                                          ;;                   ;
CODE_00D9D7:          CMP.B #$F0                          ;;D9D7|----/----\----;
                      BCS +                               ;;D9D9|----/----\----;
                      LDA.B #$F0                          ;;D9DB|----/----\----;
                    + STA.B !PlayerYSpeed                 ;;D9DD|----/----\----;
                      LDY.B #$80                          ;;D9DF|----/----\----;
                      LDA.B !byetudlrHold                 ;;D9E1|----/----\----;
                      AND.B #$03                          ;;D9E3|----/----\----;
                      BNE CODE_00DA48                     ;;D9E5|----/----\----;
                      LDA.B !PlayerDirection              ;;D9E7|----/----\----;
                      BRA CODE_00DA46                     ;;D9E9|----/----\----;
                                                          ;;                   ;
CODE_00D9EB:          LDA.B !byetudlrFrame                ;;D9EB|----/----\----;
                      ORA.B !axlr0000Frame                ;;D9ED|----/----\----;
                      BPL CODE_00DA0B                     ;;D9EF|----/----\----;
                      LDA.W !PlayerCanJumpWater           ;;D9F1|----/----\----;
                      BNE CODE_00DA0B                     ;;D9F4|----/----\----;
                      JSR CODE_00DAA9                     ;;D9F6|----/----\----;
                      LDA.B !PlayerInAir                  ;;D9F9|----/----\----;
                      BNE +                               ;;D9FB|----/----\----;
                      LDA.B #$0B                          ;;D9FD|----/----\----;
                      STA.B !PlayerInAir                  ;;D9FF|----/----\----;
                      STZ.W !PlayerSlopePose              ;;DA01|----/----\----;
                      LDY.B #$F0                          ;;DA04|----/----\----;
                    + TYA                                 ;;DA06|----/----\----;
                      SEC                                 ;;DA07|----/----\----;
                      SBC.B #$20                          ;;DA08|----/----\----;
                      TAY                                 ;;DA0A|----/----\----;
CODE_00DA0B:          LDA.B !EffFrame                     ;;DA0B|----/----\----;
                      AND.B #$03                          ;;DA0D|----/----\----;
                      BNE +                               ;;DA0F|----/----\----;
                      INY                                 ;;DA11|----/----\----;
                      INY                                 ;;DA12|----/----\----;
                    + LDA.B !byetudlrHold                 ;;DA13|----/----\----;
                      AND.B #$0C                          ;;DA15|----/----\----;
                      LSR A                               ;;DA17|----/----\----;
                      LSR A                               ;;DA18|----/----\----;
                      TAX                                 ;;DA19|----/----\----;
                      TYA                                 ;;DA1A|----/----\----;
                      BMI CODE_00DA25                     ;;DA1B|----/----\----;
                      CMP.B #$40                          ;;DA1D|----/----\----;
                      BCC +                               ;;DA1F|----/----\----;
                      LDA.B #$40                          ;;DA21|----/----\----;
                      BRA +                               ;;DA23|----/----\----;
                                                          ;;                   ;
CODE_00DA25:          CMP.W DATA_00D984,X                 ;;DA25|----/----\----;
                      BCS +                               ;;DA28|----/----\----;
                      LDA.W DATA_00D984,X                 ;;DA2A|----/----\----;
                    + STA.B !PlayerYSpeed                 ;;DA2D|----/----\----;
                      LDA.B !PlayerInAir                  ;;DA2F|----/----\----;
                      BNE CODE_00DA40                     ;;DA31|----/----\----;
                      LDA.B !byetudlrHold                 ;;DA33|----/----\----;
                      AND.B #$04                          ;;DA35|----/----\----;
                      BEQ CODE_00DA40                     ;;DA37|----/----\----;
                      STZ.W !CapeInteracts                ;;DA39|----/----\----;
                      INC.B !PlayerIsDucking              ;;DA3C|----/----\----;
                      BRA CODE_00DA69                     ;;DA3E|----/----\----;
                                                          ;;                   ;
CODE_00DA40:          LDA.B !byetudlrHold                 ;;DA40|----/----\----;
                      AND.B #$03                          ;;DA42|----/----\----;
                      BEQ CODE_00DA69                     ;;DA44|----/----\----;
CODE_00DA46:          LDY.B #$78                          ;;DA46|----/----\----;
CODE_00DA48:          STY.B !_0                           ;;DA48|----/----\----;
                      AND.B #$01                          ;;DA4A|----/----\----;
                      STA.B !PlayerDirection              ;;DA4C|----/----\----;
                      PHA                                 ;;DA4E|----/----\----;
                      ASL A                               ;;DA4F|----/----\----;
                      ASL A                               ;;DA50|----/----\----;
                      TAX                                 ;;DA51|----/----\----;
                      PLA                                 ;;DA52|----/----\----;
                      ORA.B !_0                           ;;DA53|----/----\----;
                      LDY.W !Layer3TideSetting            ;;DA55|----/----\----;
                      BEQ +                               ;;DA58|----/----\----;
                      CLC                                 ;;DA5A|----/----\----;
                      ADC.B #$04                          ;;DA5B|----/----\----;
                    + TAY                                 ;;DA5D|----/----\----;
                      LDA.B !PlayerInAir                  ;;DA5E|----/----\----;
                      BEQ +                               ;;DA60|----/----\----;
                      INY                                 ;;DA62|----/----\----;
                      INY                                 ;;DA63|----/----\----;
                    + JSR CODE_00D742                     ;;DA64|----/----\----;
                      BRA CODE_00DA7C                     ;;DA67|----/----\----;
                                                          ;;                   ;
CODE_00DA69:          LDY.B #$00                          ;;DA69|----/----\----;
                      TYX                                 ;;DA6B|----/----\----;
                      LDA.W !Layer3TideSetting            ;;DA6C|----/----\----;
                      BEQ +                               ;;DA6F|----/----\----;
                      LDX.B #$1E                          ;;DA71|----/----\----;
                      LDA.B !PlayerInAir                  ;;DA73|----/----\----;
                      BNE +                               ;;DA75|----/----\----;
                      INX                                 ;;DA77|----/----\----;
                      INX                                 ;;DA78|----/----\----;
                    + JSR CODE_00D772                     ;;DA79|----/----\----;
CODE_00DA7C:          JSR CODE_00D062                     ;;DA7C|----/----\----;
                      JSL CODE_00CEB1                     ;;DA7F|----/----\----;
                      LDA.W !CapeSpinTimer                ;;DA83|----/----\----;
                      BNE Return00DA8C                    ;;DA86|----/----\----;
                      LDA.B !PlayerInAir                  ;;DA88|----/----\----;
                      BNE +                               ;;DA8A|----/----\----;
Return00DA8C:         RTS                                 ;;DA8C|----/----\----; Return 
                                                          ;;                   ;
                    + LDA.B #$18                          ;;DA8D|----/----\----;
                      LDY.W !ShootFireTimer               ;;DA8F|----/----\----;
                      BNE +                               ;;DA92|----/----\----;
                      LDA.W !PlayerAniTimer               ;;DA94|----/----\----;
                      LSR A                               ;;DA97|----/----\----;
                      LSR A                               ;;DA98|----/----\----;
                      AND.B #$03                          ;;DA99|----/----\----;
                      TAY                                 ;;DA9B|----/----\----;
                      LDA.W DATA_00D980,Y                 ;;DA9C|----/----\----;
                    + LDY.W !IsCarryingItem               ;;DA9F|----/----\----;
                      BEQ +                               ;;DAA2|----/----\----;
                      INC A                               ;;DAA4|----/----\----;
                    + STA.W !PlayerPose                   ;;DAA5|----/----\----;
                      RTS                                 ;;DAA8|----/----\----; Return 
                                                          ;;                   ;
CODE_00DAA9:          LDA.B #$0E                          ;;DAA9|----/----\----; \ Play sound effect 
                      STA.W !SPCIO0                       ;;DAAB|----/----\----; / 
                      LDA.W !PlayerAniTimer               ;;DAAE|----/----\----;
                      ORA.B #$10                          ;;DAB1|----/----\----;
                      STA.W !PlayerAniTimer               ;;DAB3|----/----\----;
                      RTS                                 ;;DAB6|----/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
DATA_00DAB7:          db $10,$08,$F0,$F8                  ;;DAB7|----/----\----;
                                                          ;;                   ;
DATA_00DABB:          db $B0,$F0                          ;;DABB|----/----\----;
                                                          ;;                   ;
DATA_00DABD:          db $00,$01,$00,$01,$01,$01,$01,$01  ;;DABD|----/----\----;
                      db $01,$01,$01,$01,$01,$01,$01,$01  ;;DAC5|----/----\----;
DATA_00DACD:          db $22,$15,$22,$15,$21,$1F,$20,$20  ;;DACD|----/----\----;
                      db $20,$20,$1F,$21,$1F,$21          ;;DAD5|----/----\----;
                                                          ;;                   ;
ClimbingImgs:         db $15,$22                          ;;DADB|----/----\----;
                                                          ;;                   ;
ClimbPunchingImgs:    db $1E,$23                          ;;DADD|----/----\----;
                                                          ;;                   ;
DATA_00DADF:          db $10,$0F,$0E,$0D,$0C,$0B,$0A,$09  ;;DADF|----/----\----;
                      db $08,$07,$06,$05,$05,$05,$05,$05  ;;DAE7|----/----\----;
                      db $05,$05                          ;;DAEF|----/----\----;
                                                          ;;                   ;
DATA_00DAF1:          db $20,$01,$40,$01,$2A,$01,$2A,$01  ;;DAF1|----/----\----;
                      db $30,$01,$33,$01,$32,$01,$34,$01  ;;DAF9|----/----\----;
                      db $36,$01,$38,$01,$3A,$01,$3B,$01  ;;DB01|----/----\----;
                      db $45,$01,$45,$01,$45,$01,$45,$01  ;;DB09|----/----\----;
                      db $45,$01,$45,$01,$08,$F8          ;;DB11|----/----\----;
                                                          ;;                   ;
CODE_00DB17:          STZ.B !PlayerInAir                  ;;DB17|----/----\----;
                      STZ.B !PlayerYSpeed                 ;;DB19|----/----\----;
                      STZ.W !PlayerCapePose               ;;DB1B|----/----\----;
                      STZ.W !SpinJumpFlag                 ;;DB1E|----/----\----;
                      LDY.W !NetDoorTimer                 ;;DB21|----/----\----;
                      BEQ CODE_00DB7D                     ;;DB24|----/----\----;
                      LDA.W !NetDoorPlayerXOffset         ;;DB26|----/----\----;
                      BPL +                               ;;DB29|----/----\----;
                      EOR.B #$FF                          ;;DB2B|----/----\----;
                      INC A                               ;;DB2D|----/----\----;
                    + TAX                                 ;;DB2E|----/----\----;
                      CPY.B #$1E                          ;;DB2F|----/----\----;
                      BCC CODE_00DB45                     ;;DB31|----/----\----;
                      LDA.W DATA_00DADF,X                 ;;DB33|----/----\----;
                      BIT.W !NetDoorPlayerXOffset         ;;DB36|----/----\----;
                      BPL +                               ;;DB39|----/----\----;
                      EOR.B #$FF                          ;;DB3B|----/----\----;
                      INC A                               ;;DB3D|----/----\----;
                    + STA.B !PlayerXSpeed                 ;;DB3E|----/----\----;
                      STZ.B !PlayerXPosSpx                ;;DB40|----/----\----;
                      STZ.W !PlayerXSpeedFPSpx            ;;DB42|----/----\----;
CODE_00DB45:          TXA                                 ;;DB45|----/----\----;
                      ASL A                               ;;DB46|----/----\----;
                      TAX                                 ;;DB47|----/----\----;
                      LDA.W !NetDoorPlayerXOffset         ;;DB48|----/----\----;
                      CPY.B #$08                          ;;DB4B|----/----\----;
                      BCS +                               ;;DB4D|----/----\----;
                      EOR.B #$80                          ;;DB4F|----/----\----;
                    + ASL A                               ;;DB51|----/----\----;
                      REP #$20                            ;;DB52|----/----\----; Accum (16 bit) 
                      LDA.W DATA_00DAF1,X                 ;;DB54|----/----\----;
                      BCS +                               ;;DB57|----/----\----;
                      EOR.W #$FFFF                        ;;DB59|----/----\----;
                      INC A                               ;;DB5C|----/----\----;
                    + CLC                                 ;;DB5D|----/----\----;
                      ADC.B !PlayerXPosSpx                ;;DB5E|----/----\----;
                      STA.B !PlayerXPosSpx                ;;DB60|----/----\----;
                      SEP #$20                            ;;DB62|----/----\----; Accum (8 bit) 
                      TYA                                 ;;DB64|----/----\----;
                      LSR A                               ;;DB65|----/----\----;
                      AND.B #$0E                          ;;DB66|----/----\----;
                      ORA.W !NetDoorDirIndex              ;;DB68|----/----\----;
                      TAY                                 ;;DB6B|----/----\----;
                      LDA.W DATA_00DABD,Y                 ;;DB6C|----/----\----;
                      BIT.W !NetDoorPlayerXOffset         ;;DB6F|----/----\----;
                      BMI +                               ;;DB72|----/----\----;
                      EOR.B #$01                          ;;DB74|----/----\----;
                    + STA.B !PlayerDirection              ;;DB76|----/----\----;
                      LDA.W DATA_00DACD,Y                 ;;DB78|----/----\----;
                      BRA CODE_00DB92                     ;;DB7B|----/----\----;
                                                          ;;                   ;
CODE_00DB7D:          STZ.B !PlayerXSpeed                 ;;DB7D|----/----\----;
                      STZ.B !PlayerXPosSpx                ;;DB7F|----/----\----;
                      LDX.W !PlayerBehindNet              ;;DB81|----/----\----;
                      LDA.W !PunchNetTimer                ;;DB84|----/----\----;
                      BEQ +                               ;;DB87|----/----\----;
                      TXA                                 ;;DB89|----/----\----;
                      INC A                               ;;DB8A|----/----\----;
                      INC A                               ;;DB8B|----/----\----;
                      JSR CODE_00D044                     ;;DB8C|----/----\----;
                      LDA.W ClimbPunchingImgs,X           ;;DB8F|----/----\----;
CODE_00DB92:          STA.W !PlayerPose                   ;;DB92|----/----\----;
                      RTS                                 ;;DB95|----/----\----; Return 
                                                          ;;                   ;
                    + LDY.B !PlayerInWater                ;;DB96|----/----\----; Mario is in Water flag 
                      BIT.B !byetudlrFrame                ;;DB98|----/----\----;
                      BPL CODE_00DBAC                     ;;DB9A|----/----\----;
                      LDA.B #$0B                          ;;DB9C|----/----\----;
                      STA.B !PlayerInAir                  ;;DB9E|----/----\----;
                      LDA.W DATA_00DABB,Y                 ;;DBA0|----/----\----;
                      STA.B !PlayerYSpeed                 ;;DBA3|----/----\----;
                      LDA.B #$01                          ;;DBA5|----/----\----; \ Play sound effect 
                      STA.W !SPCIO1                       ;;DBA7|----/----\----; / 
                      BRA CODE_00DC00                     ;;DBAA|----/----\----;
                                                          ;;                   ;
CODE_00DBAC:          BVC +                               ;;DBAC|----/----\----;
                      LDA.B !PlayerIsClimbing             ;;DBAE|----/----\----;
                      BPL +                               ;;DBB0|----/----\----;
                      LDA.B #$01                          ;;DBB2|----/----\----; \ Play sound effect 
                      STA.W !SPCIO0                       ;;DBB4|----/----\----; / 
                      STX.W !NetDoorDirIndex              ;;DBB7|----/----\----;
                      LDA.B !PlayerXPosNext               ;;DBBA|----/----\----; Mario X 
                      AND.B #$08                          ;;DBBC|----/----\----;
                      LSR A                               ;;DBBE|----/----\----;
                      LSR A                               ;;DBBF|----/----\----;
                      LSR A                               ;;DBC0|----/----\----;
                      EOR.B #$01                          ;;DBC1|----/----\----;
                      STA.B !PlayerDirection              ;;DBC3|----/----\----; Mario's Direction 
                      LDA.B #$08                          ;;DBC5|----/----\----;
                      STA.W !PunchNetTimer                ;;DBC7|----/----\----;
                    + LDA.W ClimbingImgs,X                ;;DBCA|----/----\----;
                      STA.W !PlayerPose                   ;;DBCD|----/----\----; Store A in Mario image 
                      LDA.B !byetudlrHold                 ;;DBD0|----/----\----;
                      AND.B #$03                          ;;DBD2|----/----\----;
                      BEQ CODE_00DBF2                     ;;DBD4|----/----\----;
                      LSR A                               ;;DBD6|----/----\----;
                      TAX                                 ;;DBD7|----/----\----;
                      LDA.B !GraphicsCompPtr+1            ;;DBD8|----/----\----;
                      AND.B #$18                          ;;DBDA|----/----\----;
                      CMP.B #$18                          ;;DBDC|----/----\----;
                      BEQ CODE_00DBE8                     ;;DBDE|----/----\----;
                      LDA.B !PlayerIsClimbing             ;;DBE0|----/----\----;
                      BPL CODE_00DC00                     ;;DBE2|----/----\----;
                      CPX.B !GraphicsCompPtr+2            ;;DBE4|----/----\----;
                      BEQ CODE_00DBF2                     ;;DBE6|----/----\----;
CODE_00DBE8:          TXA                                 ;;DBE8|----/----\----;
                      ASL A                               ;;DBE9|----/----\----;
                      ORA.B !PlayerInWater                ;;DBEA|----/----\----;
                      TAX                                 ;;DBEC|----/----\----;
                      LDA.W DATA_00DAB7,X                 ;;DBED|----/----\----;
                      STA.B !PlayerXSpeed                 ;;DBF0|----/----\----;
CODE_00DBF2:          LDA.B !byetudlrHold                 ;;DBF2|----/----\----; \ 
                      AND.B #$0C                          ;;DBF4|----/----\----;  |If up or down isn't pressed, branch to $DC16 
                      BEQ CODE_00DC16                     ;;DBF6|----/----\----; / 
                      AND.B #$08                          ;;DBF8|----/----\----; \ If up is pressed, branch to $DC03 
                      BNE CODE_00DC03                     ;;DBFA|----/----\----; / 
                      LSR.B !GraphicsCompPtr+1            ;;DBFC|----/----\----;
                      BCS CODE_00DC0B                     ;;DBFE|----/----\----;
CODE_00DC00:          STZ.B !PlayerIsClimbing             ;;DC00|----/----\----; Mario isn't climbing 
                      RTS                                 ;;DC02|----/----\----; Return 
                                                          ;;                   ;
CODE_00DC03:          INY                                 ;;DC03|----/----\----;
                      INY                                 ;;DC04|----/----\----;
                      LDA.B !GraphicsCompPtr+1            ;;DC05|----/----\----;
                      AND.B #$02                          ;;DC07|----/----\----;
                      BEQ CODE_00DC16                     ;;DC09|----/----\----;
CODE_00DC0B:          LDA.B !PlayerIsClimbing             ;;DC0B|----/----\----;
                      BMI +                               ;;DC0D|----/----\----;
                      STZ.B !PlayerXSpeed                 ;;DC0F|----/----\----;
                    + LDA.W DATA_00DAB7,Y                 ;;DC11|----/----\----;
                      STA.B !PlayerYSpeed                 ;;DC14|----/----\----;
CODE_00DC16:          ORA.B !PlayerXSpeed                 ;;DC16|----/----\----;
                      BEQ +                               ;;DC18|----/----\----;
                      LDA.W !PlayerAniTimer               ;;DC1A|----/----\----;
                      ORA.B #$08                          ;;DC1D|----/----\----;
                      STA.W !PlayerAniTimer               ;;DC1F|----/----\----;
                      AND.B #$07                          ;;DC22|----/----\----;
                      BNE +                               ;;DC24|----/----\----;
                      LDA.B !PlayerDirection              ;;DC26|----/----\----;
                      EOR.B #$01                          ;;DC28|----/----\----;
                      STA.B !PlayerDirection              ;;DC2A|----/----\----;
                    + RTS                                 ;;DC2C|----/----\----; Return 
                                                          ;;                   ;
CODE_00DC2D:          LDA.B !PlayerYSpeed                 ;;DC2D|----/----\----; \ Store Mario's Y speed in $8A 
                      STA.B !GraphicsCompPtr              ;;DC2F|----/----\----; /  
                      LDA.W !WallrunningType              ;;DC31|----/----\----;
                      BEQ CODE_00DC40                     ;;DC34|----/----\----;
                      LSR A                               ;;DC36|----/----\----;
                      LDA.B !PlayerXSpeed                 ;;DC37|----/----\----;
                      BCC +                               ;;DC39|----/----\----;
                      EOR.B #$FF                          ;;DC3B|----/----\----;
                      INC A                               ;;DC3D|----/----\----;
                    + STA.B !PlayerYSpeed                 ;;DC3E|----/----\----;
CODE_00DC40:          LDX.B #$00                          ;;DC40|----/----\----;
                      JSR CODE_00DC4F                     ;;DC42|----/----\----;
                      LDX.B #$02                          ;;DC45|----/----\----;
                      JSR CODE_00DC4F                     ;;DC47|----/----\----;
                      LDA.B !GraphicsCompPtr              ;;DC4A|----/----\----;
                      STA.B !PlayerYSpeed                 ;;DC4C|----/----\----;
                      RTS                                 ;;DC4E|----/----\----; Return 
                                                          ;;                   ;
CODE_00DC4F:          LDA.B !PlayerXSpeed,X               ;;DC4F|----/----\----;
                      ASL A                               ;;DC51|----/----\----;
                      ASL A                               ;;DC52|----/----\----;
                      ASL A                               ;;DC53|----/----\----;
                      ASL A                               ;;DC54|----/----\----;
                      CLC                                 ;;DC55|----/----\----;
                      ADC.W !PlayerXSpeedFPSpx,X          ;;DC56|----/----\----;
                      STA.W !PlayerXSpeedFPSpx,X          ;;DC59|----/----\----;
                      REP #$20                            ;;DC5C|----/----\----; Accum (16 bit) 
                      PHP                                 ;;DC5E|----/----\----;
                      LDA.B !PlayerXSpeed,X               ;;DC5F|----/----\----;
                      LSR A                               ;;DC61|----/----\----;
                      LSR A                               ;;DC62|----/----\----;
                      LSR A                               ;;DC63|----/----\----;
                      LSR A                               ;;DC64|----/----\----;
                      AND.W #$000F                        ;;DC65|----/----\----;
                      CMP.W #$0008                        ;;DC68|----/----\----;
                      BCC +                               ;;DC6B|----/----\----;
                      ORA.W #$FFF0                        ;;DC6D|----/----\----;
                    + PLP                                 ;;DC70|----/----\----;
                      ADC.B !PlayerXPosNext,X             ;;DC71|----/----\----;
                      STA.B !PlayerXPosNext,X             ;;DC73|----/----\----;
                      SEP #$20                            ;;DC75|----/----\----; Accum (8 bit) 
                      RTS                                 ;;DC77|----/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
NumWalkingFrames:     db $01,$02,$02,$02                  ;;DC78|----/----\----;
                                                          ;;                   ;
DATA_00DC7C:          db $0A,$08,$06,$04,$03,$02,$01,$01  ;;DC7C|----/----\----;
                      db $0A,$08,$06,$04,$03,$02,$01,$01  ;;DC84|----/----\----;
                      db $0A,$08,$06,$04,$03,$02,$01,$01  ;;DC8C|----/----\----;
                      db $08,$06,$04,$03,$02,$01,$01,$01  ;;DC94|----/----\----;
                      db $08,$06,$04,$03,$02,$01,$01,$01  ;;DC9C|----/----\----;
                      db $05,$04,$03,$02,$01,$01,$01,$01  ;;DCA4|----/----\----;
                      db $05,$04,$03,$02,$01,$01,$01,$01  ;;DCAC|----/----\----;
                      db $05,$04,$03,$02,$01,$01,$01,$01  ;;DCB4|----/----\----;
                      db $05,$04,$03,$02,$01,$01,$01,$01  ;;DCBC|----/----\----;
                      db $05,$04,$03,$02,$01,$01,$01,$01  ;;DCC4|----/----\----;
                      db $05,$04,$03,$02,$01,$01,$01,$01  ;;DCCC|----/----\----;
                      db $04,$03,$02,$01,$01,$01,$01,$01  ;;DCD4|----/----\----;
                      db $04,$03,$02,$01,$01,$01,$01,$01  ;;DCDC|----/----\----;
                      db $02,$02,$02,$02,$02,$02,$02,$02  ;;DCE4|----/----\----;
DATA_00DCEC:          db $00,$00,$00,$00,$00,$00,$00,$00  ;;DCEC|----/----\----;
                      db $00,$00,$00,$00,$00,$00,$00,$00  ;;DCF4|----/----\----;
                      db $02,$04,$04,$04,$0E,$08,$00,$00  ;;DCFC|----/----\----;
                      db $00,$00,$00,$00,$00,$00,$08,$08  ;;DD04|----/----\----;
                      db $08,$08,$08,$08,$00,$00,$00,$00  ;;DD0C|----/----\----;
                      db $0C,$10,$12,$14,$16,$18,$1A,$00  ;;DD14|----/----\----;
                      db $00,$00,$00,$00,$00,$00,$00,$00  ;;DD1C|----/----\----;
                      db $00,$00,$00,$00,$00,$06,$00,$00  ;;DD24|----/----\----;
                      db $00,$00,$00,$0A,$00,$00          ;;DD2C|----/----\----;
                                                          ;;                   ;
DATA_00DD32:          db $00,$08,$10,$14,$18,$1E,$24,$24  ;;DD32|----/----\----;
                      db $28,$30,$38,$3E,$44,$4A,$50,$54  ;;DD3A|----/----\----;
                      db $58,$58,$5C,$60,$64,$68,$6C,$70  ;;DD42|----/----\----;
                      db $74,$78,$7C,$80                  ;;DD4A|----/----\----;
                                                          ;;                   ;
DATA_00DD4E:          db $00,$00,$00,$00,$10,$00,$10,$00  ;;DD4E|----/----\----;
                      db $00,$00,$00,$00,$F8,$FF,$F8,$FF  ;;DD56|----/----\----;
                      db $0E,$00,$06,$00,$F2,$FF,$FA,$FF  ;;DD5E|----/----\----;
                      db $17,$00,$07,$00,$0F,$00,$EA,$FF  ;;DD66|----/----\----;
                      db $FA,$FF,$FA,$FF,$00,$00,$00,$00  ;;DD6E|----/----\----;
                      db $00,$00,$00,$00,$10,$00,$10,$00  ;;DD76|----/----\----;
                      db $00,$00,$00,$00,$F8,$FF,$F8,$FF  ;;DD7E|----/----\----;
                      db $00,$00,$F8,$FF,$08,$00,$00,$00  ;;DD86|----/----\----;
                      db $08,$00,$F8,$FF,$00,$00,$00,$00  ;;DD8E|----/----\----;
                      db $F8,$FF,$00,$00,$00,$00,$10,$00  ;;DD96|----/----\----;
                      db $02,$00,$00,$00,$FE,$FF,$00,$00  ;;DD9E|----/----\----;
                      db $00,$00,$00,$00,$FC,$FF,$05,$00  ;;DDA6|----/----\----;
                      db $04,$00,$FB,$FF,$FB,$FF,$06,$00  ;;DDAE|----/----\----;
                      db $05,$00,$FA,$FF,$F9,$FF,$09,$00  ;;DDB6|----/----\----;
                      db $07,$00,$F7,$FF,$FD,$FF,$FD,$FF  ;;DDBE|----/----\----;
                      db $03,$00,$03,$00,$FF,$FF,$07,$00  ;;DDC6|----/----\----;
                      db $01,$00,$F9,$FF,$0A,$00,$F6,$FF  ;;DDCE|----/----\----;
                      db $08,$00,$F8,$FF,$08,$00,$F8,$FF  ;;DDD6|----/----\----;
                      db $00,$00,$04,$00,$FC,$FF,$FE,$FF  ;;DDDE|----/----\----;
                      db $02,$00,$0B,$00,$F5,$FF,$14,$00  ;;DDE6|----/----\----;
                      db $EC,$FF,$0E,$00,$F3,$FF,$08,$00  ;;DDEE|----/----\----;
                      db $F8,$FF,$0C,$00,$14,$00,$FD,$FF  ;;DDF6|----/----\----;
                      db $F4,$FF,$F4,$FF,$0B,$00,$0B,$00  ;;DDFE|----/----\----;
                      db $03,$00,$13,$00,$F5,$FF,$05,$00  ;;DE06|----/----\----;
                      db $F5,$FF,$09,$00,$01,$00,$01,$00  ;;DE0E|----/----\----;
                      db $F7,$FF,$07,$00,$07,$00,$05,$00  ;;DE16|----/----\----;
                      db $0D,$00,$0D,$00,$FB,$FF,$FB,$FF  ;;DE1E|----/----\----;
                      db $FB,$FF,$FF,$FF,$0F,$00,$01,$00  ;;DE26|----/----\----;
                      db $F9,$FF,$00,$00                  ;;DE2E|----/----\----;
                                                          ;;                   ;
DATA_00DE32:          db $01,$00,$11,$00,$11,$00,$19,$00  ;;DE32|----/----\----;
                      db $01,$00,$11,$00,$11,$00,$19,$00  ;;DE3A|----/----\----;
                      db $0C,$00,$14,$00,$0C,$00,$14,$00  ;;DE42|----/----\----;
                      db $18,$00,$18,$00,$28,$00,$18,$00  ;;DE4A|----/----\----;
                      db $18,$00,$28,$00,$06,$00,$16,$00  ;;DE52|----/----\----;
                      db $01,$00,$11,$00,$09,$00,$11,$00  ;;DE5A|----/----\----;
                      db $01,$00,$11,$00,$09,$00,$11,$00  ;;DE62|----/----\----;
                      db $01,$00,$11,$00,$11,$00,$01,$00  ;;DE6A|----/----\----;
                      db $11,$00,$11,$00,$01,$00,$11,$00  ;;DE72|----/----\----;
                      db $11,$00,$01,$00,$11,$00,$11,$00  ;;DE7A|----/----\----;
                      db $01,$00,$11,$00,$01,$00,$11,$00  ;;DE82|----/----\----;
                      db $11,$00,$05,$00,$04,$00,$14,$00  ;;DE8A|----/----\----;
                      db $04,$00,$14,$00,$0C,$00,$14,$00  ;;DE92|----/----\----;
                      db $0C,$00,$14,$00,$10,$00,$10,$00  ;;DE9A|----/----\----;
                      db $10,$00,$10,$00,$10,$00,$00,$00  ;;DEA2|----/----\----;
                      db $10,$00,$00,$00,$10,$00,$00,$00  ;;DEAA|----/----\----;
                      db $10,$00,$00,$00,$0B,$00,$0B,$00  ;;DEB2|----/----\----;
                      db $11,$00,$11,$00,$FF,$FF,$FF,$FF  ;;DEBA|----/----\----;
                      db $10,$00,$10,$00,$10,$00,$10,$00  ;;DEC2|----/----\----;
                      db $10,$00,$10,$00,$10,$00,$15,$00  ;;DECA|----/----\----;
                      db $15,$00,$25,$00,$25,$00,$04,$00  ;;DED2|----/----\----;
                      db $04,$00,$04,$00,$14,$00,$14,$00  ;;DEDA|----/----\----;
                      db $04,$00,$14,$00,$14,$00,$04,$00  ;;DEE2|----/----\----;
                      db $04,$00,$14,$00,$04,$00,$04,$00  ;;DEEA|----/----\----;
                      db $14,$00,$00,$00,$08,$00,$00,$00  ;;DEF2|----/----\----;
                      db $00,$00,$08,$00,$00,$00,$00,$00  ;;DEFA|----/----\----;
                      db $10,$00,$18,$00,$00,$00,$10,$00  ;;DF02|----/----\----;
                      db $18,$00,$00,$00,$10,$00,$00,$00  ;;DF0A|----/----\----;
                      db $10,$00,$F8,$FF                  ;;DF12|----/----\----;
                                                          ;;                   ;
TilesetIndex:         db $00,$46,$83,$46                  ;;DF16|----/----\----;
                                                          ;;                   ;
TileExpansion_:       db $00,$00,$00,$00,$00,$00,$00,$00  ;;DF1A|----/----\----;
                      db $00,$00,$00,$00,$00,$00,$00,$00  ;;DF22|----/----\----;
                      db $00,$00,$00,$00,$00,$00,$00,$00  ;;DF2A|----/----\----;
                      db $00,$00,$00,$00,$00,$00,$00,$00  ;;DF32|----/----\----;
                      db $00,$00,$00,$00,$00,$00,$00,$00  ;;DF3A|----/----\----;
                      db $00,$00,$00,$00,$00,$00,$00,$00  ;;DF42|----/----\----;
                      db $00,$00,$00,$00,$00,$00,$00,$00  ;;DF4A|----/----\----;
                      db $00,$00,$00,$00,$00,$00,$00,$00  ;;DF52|----/----\----;
                      db $00,$00,$00,$28,$00,$00,$00,$00  ;;DF5A|----/----\----;
                      db $00,$00,$04,$04,$04,$00,$00,$00  ;;DF62|----/----\----;
                      db $00,$00,$08,$00,$00,$00,$00,$0C  ;;DF6A|----/----\----;
                      db $0C,$0C,$00,$00,$10,$10,$14,$14  ;;DF72|----/----\----;
                      db $18,$18,$00,$00,$1C,$00,$00,$00  ;;DF7A|----/----\----;
                      db $00,$20,$00,$00,$00,$00,$24,$00  ;;DF82|----/----\----;
                      db $00,$00,$00,$00,$00,$00,$00,$00  ;;DF8A|----/----\----;
                      db $00,$00,$00,$00,$00,$00,$00,$00  ;;DF92|----/----\----;
                      db $00,$00,$00,$00,$00,$00,$00,$04  ;;DF9A|----/----\----;
                      db $04,$04,$00,$00,$00,$00,$00,$08  ;;DFA2|----/----\----;
                      db $00,$00,$00,$00,$0C,$0C,$0C,$00  ;;DFAA|----/----\----;
                      db $00,$10,$10,$14,$14,$18,$18,$00  ;;DFB2|----/----\----;
                      db $00,$1C,$00,$00,$00,$00,$20,$00  ;;DFBA|----/----\----;
                      db $00,$00,$00,$24,$00,$00,$00,$00  ;;DFC2|----/----\----;
                      db $00,$00,$00,$00,$00,$00,$00,$00  ;;DFCA|----/----\----;
                      db $00,$00,$00,$00,$00,$00,$00,$00  ;;DFD2|----/----\----;
Mario8x8Tiles:        db $00,$02,$80,$80,$00,$02,$0C,$80  ;;DFDA|----/----\----;
                      db $00,$02,$1A,$1B,$00,$02,$0D,$80  ;;DFE2|----/----\----;
                      db $00,$02,$22,$23,$00,$02,$32,$33  ;;DFEA|----/----\----;
                      db $00,$02,$0A,$0B,$00,$02,$30,$31  ;;DFF2|----/----\----;
                      db $00,$02,$20,$21,$00,$02,$7E,$80  ;;DFFA|----/----\----;
                      db $00,$02,$02,$80,$04,$7F,$4A,$5B  ;;E002|----/----\----;
                      db $4B,$5A                          ;;E00A|----/----\----;
                                                          ;;                   ;
DATA_00E00C:          db $50,$50,$50,$09,$50,$50,$50,$50  ;;E00C|----/----\----;
                      db $50,$50,$09,$2B,$50,$2D,$50,$D5  ;;E014|----/----\----;
                      db $2E,$C4,$C4,$C4,$D6,$B6,$50,$50  ;;E01C|----/----\----;
                      db $50,$50,$50,$50,$50,$C5,$D7,$2A  ;;E024|----/----\----;
                      db $E0,$50,$D5,$29,$2C,$B6,$D6,$28  ;;E02C|----/----\----;
                      db $E0,$E0,$C5,$C5,$C5,$C5,$C5,$C5  ;;E034|----/----\----;
                      db $5C,$5C,$50,$5A,$B6,$50,$28,$28  ;;E03C|----/----\----;
                      db $C5,$D7,$28,$70,$C5,$70,$1C,$93  ;;E044|----/----\----;
                      db $C5,$C5,$0B,$85,$90,$84,$70,$70  ;;E04C|----/----\----;
                      db $70,$A0,$70,$70,$70,$70,$70,$70  ;;E054|----/----\----;
                      db $A0,$74,$70,$80,$70,$84,$17,$A4  ;;E05C|----/----\----;
                      db $A4,$A4,$B3,$B0,$70,$70,$70,$70  ;;E064|----/----\----;
                      db $70,$70,$70,$E2,$72,$0F,$61,$70  ;;E06C|----/----\----;
                      db $63,$82,$C7,$90,$B3,$D4,$A5,$C0  ;;E074|----/----\----;
                      db $08,$54,$0C,$0E,$1B,$51,$49,$4A  ;;E07C|----/----\----;
                      db $48,$4B,$4C,$5D,$5E,$5F,$E3,$90  ;;E084|----/----\----;
                      db $5F,$5F,$C5,$70,$70,$70,$A0,$70  ;;E08C|----/----\----;
                      db $70,$70,$70,$70,$70,$A0,$74,$70  ;;E094|----/----\----;
                      db $80,$70,$84,$17,$A4,$A4,$A4,$B3  ;;E09C|----/----\----;
                      db $B0,$70,$70,$70,$70,$70,$70,$70  ;;E0A4|----/----\----;
                      db $E2,$72,$0F,$61,$70,$63,$82,$C7  ;;E0AC|----/----\----;
                      db $90,$B3,$D4,$A5,$C0,$08,$64,$0C  ;;E0B4|----/----\----;
                      db $0E,$1B,$51,$49,$4A,$48,$4B,$4C  ;;E0BC|----/----\----;
                      db $5D,$5E,$5F,$E3,$90,$5F,$5F,$C5  ;;E0C4|----/----\----;
DATA_00E0CC:          db $71,$60,$60,$19,$94,$96,$96,$A2  ;;E0CC|----/----\----;
                      db $97,$97,$18,$3B,$B4,$3D,$A7,$E5  ;;E0D4|----/----\----;
                      db $2F,$D3,$C3,$C3,$F6,$D0,$B1,$81  ;;E0DC|----/----\----;
                      db $B2,$86,$B4,$87,$A6,$D1,$F7,$3A  ;;E0E4|----/----\----;
                      db $F0,$F4,$F5,$39,$3C,$C6,$E6,$38  ;;E0EC|----/----\----;
                      db $F1,$F0,$C5,$C5,$C5,$C5,$C5,$C5  ;;E0F4|----/----\----;
                      db $6C,$4D,$71,$6A,$6B,$60,$38,$F1  ;;E0FC|----/----\----;
                      db $5B,$69,$F1,$F1,$4E,$E1,$1D,$A3  ;;E104|----/----\----;
                      db $C5,$C5,$1A,$95,$10,$07,$02,$01  ;;E10C|----/----\----;
                      db $00,$02,$14,$13,$12,$30,$27,$26  ;;E114|----/----\----;
                      db $30,$03,$15,$04,$31,$07,$E7,$25  ;;E11C|----/----\----;
                      db $24,$23,$62,$36,$33,$91,$34,$92  ;;E124|----/----\----;
                      db $35,$A1,$32,$F2,$73,$1F,$C0,$C1  ;;E12C|----/----\----;
                      db $C2,$83,$D2,$10,$B7,$E4,$B5,$61  ;;E134|----/----\----;
                      db $0A,$55,$0D,$75,$77,$1E,$59,$59  ;;E13C|----/----\----;
                      db $58,$02,$02,$6D,$6E,$6F,$F3,$68  ;;E144|----/----\----;
                      db $6F,$6F,$06,$02,$01,$00,$02,$14  ;;E14C|----/----\----;
                      db $13,$12,$30,$27,$26,$30,$03,$15  ;;E154|----/----\----;
                      db $04,$31,$07,$E7,$25,$24,$23,$62  ;;E15C|----/----\----;
                      db $36,$33,$91,$34,$92,$35,$A1,$32  ;;E164|----/----\----;
                      db $F2,$73,$1F,$C0,$C1,$C2,$83,$D2  ;;E16C|----/----\----;
                      db $10,$B7,$E4,$B5,$61,$0A,$55,$0D  ;;E174|----/----\----;
                      db $75,$77,$1E,$59,$59,$58,$02,$02  ;;E17C|----/----\----;
                      db $6D,$6E,$6F,$F3,$68,$6F,$6F,$06  ;;E184|----/----\----;
MarioPalIndex:        db $00,$40                          ;;E18C|----/----\----;
                                                          ;;                   ;
DATA_00E18E:          db $00,$00,$00,$00,$00,$00,$00,$00  ;;E18E|----/----\----;
                      db $00,$00,$00,$00,$00,$0D,$00,$10  ;;E196|----/----\----;
                      db $13,$22,$25,$28,$00,$16,$00,$00  ;;E19E|----/----\----;
                      db $00,$00,$00,$00,$00,$08,$19,$1C  ;;E1A6|----/----\----;
                      db $04,$1F,$10,$10,$00,$16,$10,$06  ;;E1AE|----/----\----;
                      db $04,$08,$2B,$30,$35,$3A,$3F,$43  ;;E1B6|----/----\----;
                      db $00,$00,$00,$00,$00,$00,$00,$00  ;;E1BE|----/----\----;
                      db $16,$16,$00,$00,$08,$00,$00,$00  ;;E1C6|----/----\----;
                      db $00,$00,$00,$10,$04,$00          ;;E1CE|----/----\----;
                                                          ;;                   ;
DATA_00E1D4:          db $06                              ;;E1D4|----/----\----;
                                                          ;;                   ;
DATA_00E1D5:          db $00                              ;;E1D5|----/----\----;
                                                          ;;                   ;
DATA_00E1D6:          db $06                              ;;E1D6|----/----\----;
                                                          ;;                   ;
DATA_00E1D7:          db $00                              ;;E1D7|----/----\----;
                                                          ;;                   ;
DATA_00E1D8:          db $86,$02,$06,$03,$06,$01,$06,$CE  ;;E1D8|----/----\----;
                      db $06,$06,$40,$00,$06,$2C,$06,$06  ;;E1E0|----/----\----;
                      db $44,$0E,$86,$2C,$06,$86,$2C,$0A  ;;E1E8|----/----\----;
                      db $86,$84,$08,$06,$0A,$02,$06,$AC  ;;E1F0|----/----\----;
                      db $10,$06,$CC,$10,$06,$AE,$10,$00  ;;E1F8|----/----\----;
                      db $8C,$14,$80,$2E,$00,$CA,$16,$91  ;;E200|----/----\----;
                      db $2F,$00,$8E,$18,$81,$30,$00,$EB  ;;E208|----/----\----;
                      db $1A,$90,$31,$04,$ED,$1C,$82,$06  ;;E210|----/----\----;
                      db $92,$1E                          ;;E218|----/----\----;
                                                          ;;                   ;
DATA_00E21A:          db $84,$86,$88,$8A,$8C,$8E,$90,$90  ;;E21A|----/----\----;
                      db $92,$94,$96,$98,$9A,$9C,$9E,$A0  ;;E222|----/----\----;
                      db $A2,$A4,$A6,$A8,$AA,$B0,$B6,$BC  ;;E22A|----/----\----;
                      db $C2,$C8,$CE,$D4,$DA,$DE,$E2,$E2  ;;E232|----/----\----;
DATA_00E23A:          db $0A,$0A,$84,$0A,$88,$88,$88,$88  ;;E23A|----/----\----;
                      db $8A,$8A,$8A,$8A,$44,$44,$44,$44  ;;E242|----/----\----;
                      db $42,$42,$42,$42,$40,$40,$40,$40  ;;E24A|----/----\----;
                      db $22,$22,$22,$22,$A4,$A4,$A4,$A4  ;;E252|----/----\----;
                      db $A6,$A6,$A6,$A6,$86,$86,$86,$86  ;;E25A|----/----\----;
                      db $6E,$6E,$6E,$6E                  ;;E262|----/----\----;
                                                          ;;                   ;
DATA_00E266:          db $02,$02,$02,$0C,$00,$00,$00,$00  ;;E266|----/----\----;
                      db $00,$00,$00,$00,$00,$00,$00,$00  ;;E26E|----/----\----;
                      db $00,$00,$00,$00,$00,$00,$00,$00  ;;E276|----/----\----;
                      db $00,$00,$00,$00,$04,$12,$04,$04  ;;E27E|----/----\----;
                      db $04,$12,$04,$04,$04,$12,$04,$04  ;;E286|----/----\----;
                      db $04,$12,$04,$04                  ;;E28E|----/----\----;
                                                          ;;                   ;
DATA_00E292:          db $01,$01,$01,$01,$02,$02,$02,$02  ;;E292|----/----\----;
                      db $04,$04,$04,$04,$08,$08,$08,$08  ;;E29A|----/----\----;
DATA_00E2A2:          db $C8,$B2,$DC,$B2,$C8,$B2,$DC,$B2  ;;E2A2|----/----\----;
                      db $C8,$B2,$DC,$B2,$F0,$B2,$04,$B3  ;;E2AA|----/----\----;
DATA_00E2B2:          db $10,$D4,$10,$E8                  ;;E2B2|----/----\----;
                                                          ;;                   ;
DATA_00E2B6:          db $08,$CC,$08                      ;;E2B6|----/----\----;
                                                          ;;                   ;
DATA_00E2B9:          db $E0,$10,$10,$30                  ;;E2B9|----/----\----;
                                                          ;;                   ;
CODE_00E2BD:          PHB                                 ;;E2BD|----/----\----;
                      PHK                                 ;;E2BE|----/----\----;
                      PLB                                 ;;E2BF|----/----\----;
                      LDA.B !PlayerHiddenTiles            ;;E2C0|----/----\----;
                      CMP.B #$FF                          ;;E2C2|----/----\----;
                      BEQ +                               ;;E2C4|----/----\----;
                      JSL CODE_01EA70                     ;;E2C6|----/----\----;
                    + LDY.W !CyclePaletteTimer            ;;E2CA|----/----\----;
                      BNE CODE_00E308                     ;;E2CD|----/----\----;
                      LDY.W !InvinsibilityTimer           ;;E2CF|----/----\----; \ Branch if Mario doesn't have star 
                      BEQ CODE_00E314                     ;;E2D2|----/----\----; / 
                      LDA.B !PlayerHiddenTiles            ;;E2D4|----/----\----;
                      CMP.B #$FF                          ;;E2D6|----/----\----;
                      BEQ +                               ;;E2D8|----/----\----;
                      LDA.B !EffFrame                     ;;E2DA|----/----\----;
                      AND.B #$03                          ;;E2DC|----/----\----;
                      BNE +                               ;;E2DE|----/----\----;
                      DEC.W !InvinsibilityTimer           ;;E2E0|----/----\----; Decrease star timer 
                    + LDA.B !TrueFrame                    ;;E2E3|----/----\----;
                      CPY.B #$1E                          ;;E2E5|----/----\----;
                      BCC CODE_00E30A                     ;;E2E7|----/----\----;
                      BNE CODE_00E30C                     ;;E2E9|----/----\----;
                      LDA.W !MusicBackup                  ;;E2EB|----/----\----;
                      CMP.B #$FF                          ;;E2EE|----/----\----;
                      BEQ CODE_00E308                     ;;E2F0|----/----\----;
                      AND.B #$7F                          ;;E2F2|----/----\----;
                      STA.W !MusicBackup                  ;;E2F4|----/----\----;
                      TAX                                 ;;E2F7|----/----\----;
                      LDA.W !BluePSwitchTimer             ;;E2F8|----/----\----;
                      ORA.W !SilverPSwitchTimer           ;;E2FB|----/----\----;
                      ORA.W !DirectCoinTimer              ;;E2FE|----/----\----;
                      BEQ +                               ;;E301|----/----\----;
                      LDX.B #$0E                          ;;E303|----/----\----;
                    + STX.W !SPCIO2                       ;;E305|----/----\----; / Change music 
CODE_00E308:          LDA.B !TrueFrame                    ;;E308|----/----\----;
CODE_00E30A:          LSR A                               ;;E30A|----/----\----;
                      LSR A                               ;;E30B|----/----\----;
CODE_00E30C:          AND.B #$03                          ;;E30C|----/----\----;
                      INC A                               ;;E30E|----/----\----;
                      INC A                               ;;E30F|----/----\----;
                      INC A                               ;;E310|----/----\----;
                      INC A                               ;;E311|----/----\----;
                      BRA +                               ;;E312|----/----\----;
                                                          ;;                   ;
CODE_00E314:          LDA.B !Powerup                      ;;E314|----/----\----;
                      ASL A                               ;;E316|----/----\----;
                      ORA.W !PlayerTurnLvl                ;;E317|----/----\----;
                    + ASL A                               ;;E31A|----/----\----;
                      TAY                                 ;;E31B|----/----\----;
                      REP #$20                            ;;E31C|----/----\----; Accum (16 bit) 
                      LDA.W DATA_00E2A2,Y                 ;;E31E|----/----\----;
                      STA.W !PlayerPalletePtr             ;;E321|----/----\----;
                      SEP #$20                            ;;E324|----/----\----; Accum (8 bit) 
                      LDX.W !PlayerPose                   ;;E326|----/----\----;
                      LDA.B #$05                          ;;E329|----/----\----;
                      CMP.W !WallrunningType              ;;E32B|----/----\----;
                      BCS CODE_00E33E                     ;;E32E|----/----\----;
                      LDA.W !WallrunningType              ;;E330|----/----\----;
                      LDY.B !Powerup                      ;;E333|----/----\----;
                      BEQ CODE_00E33B                     ;;E335|----/----\----;
                      CPX.B #$13                          ;;E337|----/----\----;
                      BNE +                               ;;E339|----/----\----;
CODE_00E33B:          EOR.B #$01                          ;;E33B|----/----\----;
                    + LSR A                               ;;E33D|----/----\----;
CODE_00E33E:          REP #$20                            ;;E33E|----/----\----; Accum (16 bit) 
                      LDA.B !PlayerXPosNext               ;;E340|----/----\----;
                      SBC.B !Layer1XPos                   ;;E342|----/----\----;
                      STA.B !PlayerXPosScrRel             ;;E344|----/----\----;
                      LDA.W !ScrShakePlayerYOffset        ;;E346|----/----\----;
                      AND.W #$00FF                        ;;E349|----/----\----;
                      CLC                                 ;;E34C|----/----\----;
                      ADC.B !PlayerYPosNext               ;;E34D|----/----\----;
                      LDY.B !Powerup                      ;;E34F|----/----\----;
                      CPY.B #$01                          ;;E351|----/----\----;
                      LDY.B #$01                          ;;E353|----/----\----;
                      BCS +                               ;;E355|----/----\----;
                      DEC A                               ;;E357|----/----\----;
                      DEY                                 ;;E358|----/----\----;
                    + CPX.B #$0A                          ;;E359|----/----\----;
                      BCS +                               ;;E35B|----/----\----;
                      CPY.W !PlayerWalkingPose            ;;E35D|----/----\----;
                    + SBC.B !Layer1YPos                   ;;E360|----/----\----;
                      CPX.B #$1C                          ;;E362|----/----\----;
                      BNE +                               ;;E364|----/----\----;
                      ADC.W #$0001                        ;;E366|----/----\----;
                    + STA.B !PlayerYPosScrRel             ;;E369|----/----\----;
                      SEP #$20                            ;;E36B|----/----\----; Accum (8 bit) 
                      LDA.W !IFrameTimer                  ;;E36D|----/----\----;
                      BEQ +                               ;;E370|----/----\----;
                      LSR A                               ;;E372|----/----\----;
                      LSR A                               ;;E373|----/----\----;
                      LSR A                               ;;E374|----/----\----;
                      TAY                                 ;;E375|----/----\----;
                      LDA.W DATA_00E292,Y                 ;;E376|----/----\----;
                      AND.W !IFrameTimer                  ;;E379|----/----\----;
                      ORA.B !SpriteLock                   ;;E37C|----/----\----;
                      ORA.W !PlayerIsFrozen               ;;E37E|----/----\----;
                      BNE +                               ;;E381|----/----\----;
                      PLB                                 ;;E383|----/----\----;
                      RTL                                 ;;E384|----/----\----; Return 
                                                          ;;                   ;
                    + LDA.B #$C8                          ;;E385|----/----\----;
                      CPX.B #$43                          ;;E387|----/----\----;
                      BNE +                               ;;E389|----/----\----;
                      LDA.B #$E8                          ;;E38B|----/----\----;
                    + STA.B !_4                           ;;E38D|----/----\----;
                      CPX.B #$29                          ;;E38F|----/----\----;
                      BNE +                               ;;E391|----/----\----;
                      LDA.B !Powerup                      ;;E393|----/----\----;
                      BNE +                               ;;E395|----/----\----;
                      LDX.B #$20                          ;;E397|----/----\----;
                    + LDA.W DATA_00DCEC,X                 ;;E399|----/----\----;
                      ORA.B !PlayerDirection              ;;E39C|----/----\----;
                      TAY                                 ;;E39E|----/----\----;
                      LDA.W DATA_00DD32,Y                 ;;E39F|----/----\----;
                      STA.B !_5                           ;;E3A2|----/----\----;
                      LDY.B !Powerup                      ;;E3A4|----/----\----;
                      LDA.W !PlayerPose                   ;;E3A6|----/----\----;
                      CMP.B #$3D                          ;;E3A9|----/----\----;
                      BCS +                               ;;E3AB|----/----\----;
                      ADC.W TilesetIndex,Y                ;;E3AD|----/----\----;
                    + TAY                                 ;;E3B0|----/----\----;
                      LDA.W TileExpansion_,Y              ;;E3B1|----/----\----;
                      STA.B !_6                           ;;E3B4|----/----\----;
                      LDA.W DATA_00E00C,Y                 ;;E3B6|----/----\----;
                      STA.B !_A                           ;;E3B9|----/----\----;
                      LDA.W DATA_00E0CC,Y                 ;;E3BB|----/----\----;
                      STA.B !_B                           ;;E3BE|----/----\----;
                      LDA.B !SpriteProperties             ;;E3C0|----/----\----;
                      LDX.W !PlayerBehindNet              ;;E3C2|----/----\----;
                      BEQ +                               ;;E3C5|----/----\----;
                      LDA.W DATA_00E2B9,X                 ;;E3C7|----/----\----;
                    + LDY.W DATA_00E2B2,X                 ;;E3CA|----/----\----;
                      LDX.B !PlayerDirection              ;;E3CD|----/----\----;
                      ORA.W MarioPalIndex,X               ;;E3CF|----/----\----;
                      STA.W !OAMTileAttr+$100,Y           ;;E3D2|----/----\----;
                      STA.W !OAMTileAttr+$104,Y           ;;E3D5|----/----\----;
                      STA.W !OAMTileAttr+$10C,Y           ;;E3D8|----/----\----;
                      STA.W !OAMTileAttr+$110,Y           ;;E3DB|----/----\----;
                      STA.W !OAMTileAttr+$F8,Y            ;;E3DE|----/----\----;
                      STA.W !OAMTileAttr+$FC,Y            ;;E3E1|----/----\----;
                      LDX.B !_4                           ;;E3E4|----/----\----;
                      CPX.B #$E8                          ;;E3E6|----/----\----;
                      BNE +                               ;;E3E8|----/----\----;
                      EOR.B #$40                          ;;E3EA|----/----\----;
                    + STA.W !OAMTileAttr+$108,Y           ;;E3EC|----/----\----;
                      JSR CODE_00E45D                     ;;E3EF|----/----\----;
                      JSR CODE_00E45D                     ;;E3F2|----/----\----;
                      JSR CODE_00E45D                     ;;E3F5|----/----\----;
                      JSR CODE_00E45D                     ;;E3F8|----/----\----;
                      LDA.B !Powerup                      ;;E3FB|----/----\----;
                      CMP.B #$02                          ;;E3FD|----/----\----;
                      BNE CODE_00E458                     ;;E3FF|----/----\----;
                      PHY                                 ;;E401|----/----\----;
                      LDA.B #$2C                          ;;E402|----/----\----;
                      STA.B !_6                           ;;E404|----/----\----;
                      LDX.W !PlayerPose                   ;;E406|----/----\----;
                      LDA.W DATA_00E18E,X                 ;;E409|----/----\----;
                      TAX                                 ;;E40C|----/----\----;
                      LDA.W DATA_00E1D7,X                 ;;E40D|----/----\----;
                      STA.B !_D                           ;;E410|----/----\----;
                      LDA.W DATA_00E1D8,X                 ;;E412|----/----\----;
                      STA.B !_E                           ;;E415|----/----\----;
                      LDA.W DATA_00E1D5,X                 ;;E417|----/----\----;
                      STA.B !_C                           ;;E41A|----/----\----;
                      CMP.B #$04                          ;;E41C|----/----\----;
                      BCS CODE_00E432                     ;;E41E|----/----\----;
                      LDA.W !PlayerCapePose               ;;E420|----/----\----;
                      ASL A                               ;;E423|----/----\----;
                      ASL A                               ;;E424|----/----\----;
                      ORA.B !_C                           ;;E425|----/----\----;
                      TAY                                 ;;E427|----/----\----;
                      LDA.W DATA_00E23A,Y                 ;;E428|----/----\----;
                      STA.B !_C                           ;;E42B|----/----\----;
                      LDA.W DATA_00E266,Y                 ;;E42D|----/----\----;
                      BRA +                               ;;E430|----/----\----;
                                                          ;;                   ;
CODE_00E432:          LDA.W DATA_00E1D6,X                 ;;E432|----/----\----;
                    + ORA.B !PlayerDirection              ;;E435|----/----\----;
                      TAY                                 ;;E437|----/----\----;
                      LDA.W DATA_00E21A,Y                 ;;E438|----/----\----;
                      STA.B !_5                           ;;E43B|----/----\----;
                      PLY                                 ;;E43D|----/----\----;
                      LDA.W DATA_00E1D4,X                 ;;E43E|----/----\----;
                      TSB.B !PlayerHiddenTiles            ;;E441|----/----\----;
                      BMI +                               ;;E443|----/----\----;
                      JSR CODE_00E45D                     ;;E445|----/----\----;
                    + LDX.W !PlayerBehindNet              ;;E448|----/----\----;
                      LDY.W DATA_00E2B6,X                 ;;E44B|----/----\----;
                      JSR CODE_00E45D                     ;;E44E|----/----\----;
                      LDA.B !_E                           ;;E451|----/----\----;
                      STA.B !_6                           ;;E453|----/----\----;
                      JSR CODE_00E45D                     ;;E455|----/----\----;
CODE_00E458:          JSR CODE_00F636                     ;;E458|----/----\----;
                      PLB                                 ;;E45B|----/----\----;
                      RTL                                 ;;E45C|----/----\----; Return 
                                                          ;;                   ;
CODE_00E45D:          LSR.B !PlayerHiddenTiles            ;;E45D|----/----\----;
                      BCS +                               ;;E45F|----/----\----;
                      LDX.B !_6                           ;;E461|----/----\----;
                      LDA.W Mario8x8Tiles,X               ;;E463|----/----\----;
                      BMI +                               ;;E466|----/----\----;
                      STA.W !OAMTileNo+$100,Y             ;;E468|----/----\----;
                      LDX.B !_5                           ;;E46B|----/----\----;
                      REP #$20                            ;;E46D|----/----\----; Accum (16 bit) 
                      LDA.B !PlayerYPosScrRel             ;;E46F|----/----\----;
                      CLC                                 ;;E471|----/----\----;
                      ADC.W DATA_00DE32,X                 ;;E472|----/----\----;
                      PHA                                 ;;E475|----/----\----;
                      CLC                                 ;;E476|----/----\----;
                      ADC.W #$0010                        ;;E477|----/----\----;
                      CMP.W #$0100                        ;;E47A|----/----\----;
                      PLA                                 ;;E47D|----/----\----;
                      SEP #$20                            ;;E47E|----/----\----; Accum (8 bit) 
                      BCS +                               ;;E480|----/----\----;
                      STA.W !OAMTileYPos+$100,Y           ;;E482|----/----\----;
                      REP #$20                            ;;E485|----/----\----; Accum (16 bit) 
                      LDA.B !PlayerXPosScrRel             ;;E487|----/----\----;
                      CLC                                 ;;E489|----/----\----;
                      ADC.W DATA_00DD4E,X                 ;;E48A|----/----\----;
                      PHA                                 ;;E48D|----/----\----;
                      CLC                                 ;;E48E|----/----\----;
                      ADC.W #$0080                        ;;E48F|----/----\----;
                      CMP.W #$0200                        ;;E492|----/----\----;
                      PLA                                 ;;E495|----/----\----;
                      SEP #$20                            ;;E496|----/----\----; Accum (8 bit) 
                      BCS +                               ;;E498|----/----\----;
                      STA.W !OAMTileXPos+$100,Y           ;;E49A|----/----\----;
                      XBA                                 ;;E49D|----/----\----;
                      LSR A                               ;;E49E|----/----\----;
                    + PHP                                 ;;E49F|----/----\----;
                      TYA                                 ;;E4A0|----/----\----;
                      LSR A                               ;;E4A1|----/----\----;
                      LSR A                               ;;E4A2|----/----\----;
                      TAX                                 ;;E4A3|----/----\----;
                      ASL.B !_4                           ;;E4A4|----/----\----;
                      ROL A                               ;;E4A6|----/----\----;
                      PLP                                 ;;E4A7|----/----\----;
                      ROL A                               ;;E4A8|----/----\----;
                      AND.B #$03                          ;;E4A9|----/----\----;
                      STA.W !OAMTileSize+$40,X            ;;E4AB|----/----\----;
                      INY                                 ;;E4AE|----/----\----;
                      INY                                 ;;E4AF|----/----\----;
                      INY                                 ;;E4B0|----/----\----;
                      INY                                 ;;E4B1|----/----\----;
                      INC.B !_5                           ;;E4B2|----/----\----;
                      INC.B !_5                           ;;E4B4|----/----\----;
                      INC.B !_6                           ;;E4B6|----/----\----;
                      RTS                                 ;;E4B8|----/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
DATA_00E4B9:          db $08,$08,$08,$08,$10,$10,$10,$10  ;;E4B9|----/----\----;
                      db $18,$18,$20,$20,$28,$30,$08,$10  ;;E4C1|----/----\----;
                      db $00,$00,$28,$00,$00,$00,$00,$00  ;;E4C9|----/----\----;
                      db $38,$50,$48,$40,$58,$58,$60,$60  ;;E4D1|----/----\----;
                      db $00                              ;;E4D9|----/----\----;
                                                          ;;                   ;
DATA_00E4DA:          db $10,$10,$10,$10,$10,$10,$10,$10  ;;E4DA|----/----\----;
                      db $20,$20,$20,$20,$30,$30,$40,$30  ;;E4E2|----/----\----;
                      db $30,$30,$30,$00,$00,$00,$00,$00  ;;E4EA|----/----\----;
                      db $30,$30,$30,$30,$40,$40,$40,$40  ;;E4F2|----/----\----;
                      db $00                              ;;E4FA|----/----\----;
                                                          ;;                   ;
DATA_00E4FB:          db $00,$00,$00,$00,$00,$00,$00,$00  ;;E4FB|----/----\----;
                      db $EC,$EC,$EE,$EE,$DA,$DA,$00,$00  ;;E503|----/----\----;
                      db $00,$00,$00,$00,$00,$00,$00,$00  ;;E50B|----/----\----;
                      db $DA,$DA,$DA,$DA,$00,$00,$00,$00  ;;E513|----/----\----;
                      db $00                              ;;E51B|----/----\----;
                                                          ;;                   ;
DATA_00E51C:          db $08,$08,$08,$08,$08,$08,$08,$08  ;;E51C|----/----\----;
                      db $09,$09,$09,$09,$0B,$0B,$0B,$0B  ;;E524|----/----\----;
                      db $0B,$0B,$0B,$00,$00,$00,$00,$00  ;;E52C|----/----\----;
                      db $0B,$0B,$0B,$0B,$14,$14,$14,$14  ;;E534|----/----\----;
                      db $06                              ;;E53C|----/----\----;
                                                          ;;                   ;
DATA_00E53D:          db $FF,$FF,$FF,$FF,$01,$01,$01,$01  ;;E53D|----/----\----;
                      db $FE,$FE,$02,$02,$FD,$03,$FD,$03  ;;E545|----/----\----;
                      db $FD,$03,$FD,$00,$00,$00,$00,$00  ;;E54D|----/----\----;
                      db $08,$08,$F8,$F8,$FC,$FC,$04,$04  ;;E555|----/----\----;
                      db $00,$00,$00,$00,$00,$00,$01,$01  ;;E55D|----/----\----;
                      db $01,$01,$01,$02,$02,$02,$02,$02  ;;E565|----/----\----;
                      db $03,$03,$03,$03,$03,$04,$04,$04  ;;E56D|----/----\----;
                      db $04,$04,$05,$05,$05,$05,$05,$06  ;;E575|----/----\----;
                      db $06,$06,$06,$06,$07,$07,$07,$07  ;;E57D|----/----\----;
                      db $07,$08,$08,$08,$08,$08,$09,$09  ;;E585|----/----\----;
                      db $09,$09,$09,$0A,$0A,$0A,$0A,$0A  ;;E58D|----/----\----;
                      db $0B,$0B,$0B,$0B,$0B,$0C,$0C,$0C  ;;E595|----/----\----;
                      db $0C,$0C,$0D,$0D,$0D,$0D,$0D,$0E  ;;E59D|----/----\----;
                      db $0F,$10,$11,$03,$03,$04,$04,$09  ;;E5A5|----/----\----;
                      db $09,$0A,$0A,$0C,$0C,$0D,$0D,$12  ;;E5AD|----/----\----;
                      db $13,$14,$15,$16,$17,$1C,$1D,$1E  ;;E5B5|----/----\----;
                      db $1F,$18,$19,$1A,$1B,$08,$09,$0A  ;;E5BD|----/----\----;
                      db $0B,$0C,$0D,$00,$00,$00,$00,$00  ;;E5C5|----/----\----;
                      db $01,$01,$01,$01,$01,$02,$02,$02  ;;E5CD|----/----\----;
                      db $02,$02,$03,$03,$03,$03,$03,$04  ;;E5D5|----/----\----;
                      db $04,$04,$04,$04,$05,$05,$05,$05  ;;E5DD|----/----\----;
                      db $05,$06,$06,$06,$06,$06,$07,$07  ;;E5E5|----/----\----;
                      db $07,$07,$07,$08,$08,$08,$08,$08  ;;E5ED|----/----\----;
                      db $09,$09,$09,$09,$09,$0A,$0A,$0A  ;;E5F5|----/----\----;
                      db $0A,$0A,$0B,$0B,$0B,$0B,$0B,$0C  ;;E5FD|----/----\----;
                      db $0C,$0C,$0C,$0C,$0D,$0D,$0D,$0D  ;;E605|----/----\----;
                      db $0D,$0E,$0F,$10,$11,$03,$03,$04  ;;E60D|----/----\----;
                      db $04,$09,$09,$0A,$0A,$0C,$0C,$0D  ;;E615|----/----\----;
                      db $0D,$0C,$0D,$0D,$0C,$16,$17,$1C  ;;E61D|----/----\----;
                      db $1D,$1E,$1F,$18,$19,$1A,$1B,$08  ;;E625|----/----\----;
                      db $09,$0A,$0B,$0C,$0D              ;;E62D|----/----\----;
                                                          ;;                   ;
DATA_00E632:          db $0F,$0F,$0F,$0F,$0E,$0E,$0E,$0E  ;;E632|----/----\----;
                      db $0D,$0D,$0D,$0D,$0C,$0C,$0C,$0C  ;;E63A|----/----\----;
                      db $0B,$0B,$0B,$0B,$0A,$0A,$0A,$0A  ;;E642|----/----\----;
                      db $09,$09,$09,$09,$08,$08,$08,$08  ;;E64A|----/----\----;
                      db $07,$07,$07,$07,$06,$06,$06,$06  ;;E652|----/----\----;
                      db $05,$05,$05,$05,$04,$04,$04,$04  ;;E65A|----/----\----;
                      db $03,$03,$03,$03,$02,$02,$02,$02  ;;E662|----/----\----;
                      db $01,$01,$01,$01,$00,$00,$00,$00  ;;E66A|----/----\----;
                      db $00,$00,$00,$00,$01,$01,$01,$01  ;;E672|----/----\----;
                      db $02,$02,$02,$02,$03,$03,$03,$03  ;;E67A|----/----\----;
                      db $04,$04,$04,$04,$05,$05,$05,$05  ;;E682|----/----\----;
                      db $06,$06,$06,$06,$07,$07,$07,$07  ;;E68A|----/----\----;
                      db $08,$08,$08,$08,$09,$09,$09,$09  ;;E692|----/----\----;
                      db $0A,$0A,$0A,$0A,$0B,$0B,$0B,$0B  ;;E69A|----/----\----;
                      db $0C,$0C,$0C,$0C,$0D,$0D,$0D,$0D  ;;E6A2|----/----\----;
                      db $0E,$0E,$0E,$0E,$0F,$0F,$0F,$0F  ;;E6AA|----/----\----;
                      db $0F,$0F,$0E,$0E,$0D,$0D,$0C,$0C  ;;E6B2|----/----\----;
                      db $0B,$0B,$0A,$0A,$09,$09,$08,$08  ;;E6BA|----/----\----;
                      db $07,$07,$06,$06,$05,$05,$04,$04  ;;E6C2|----/----\----;
                      db $03,$03,$02,$02,$01,$01,$00,$00  ;;E6CA|----/----\----;
                      db $00,$00,$01,$01,$02,$02,$03,$03  ;;E6D2|----/----\----;
                      db $04,$04,$05,$05,$06,$06,$07,$07  ;;E6DA|----/----\----;
                      db $08,$08,$09,$09,$0A,$0A,$0B,$0B  ;;E6E2|----/----\----;
                      db $0C,$0C,$0D,$0D,$0E,$0E,$0F,$0F  ;;E6EA|----/----\----;
                      db $0F,$0E,$0D,$0C,$0B,$0A,$09,$08  ;;E6F2|----/----\----;
                      db $07,$06,$05,$04,$03,$02,$01,$00  ;;E6FA|----/----\----;
                      db $00,$01,$02,$03,$04,$05,$06,$07  ;;E702|----/----\----;
                      db $08,$09,$0A,$0B,$0C,$0D,$0E,$0F  ;;E70A|----/----\----;
                      db $0F,$0E,$0D,$0C,$0B,$0A,$09,$08  ;;E712|----/----\----;
                      db $07,$06,$05,$04,$03,$02,$01,$00  ;;E71A|----/----\----;
                      db $00,$01,$02,$03,$04,$05,$06,$07  ;;E722|----/----\----;
                      db $08,$09,$0A,$0B,$0C,$0D,$0E,$0F  ;;E72A|----/----\----;
                      db $08,$06,$04,$03,$02,$02,$01,$01  ;;E732|----/----\----;
                      db $00,$00,$00,$00,$00,$00,$00,$00  ;;E73A|----/----\----;
                      db $00,$00,$00,$00,$00,$00,$00,$00  ;;E742|----/----\----;
                      db $01,$01,$02,$02,$03,$04,$06,$08  ;;E74A|----/----\----;
                      db $FF,$FE,$FD,$FC,$FB,$FA,$F9,$F8  ;;E752|----/----\----;
                      db $F7,$F6,$F5,$F4,$F3,$F2,$F1,$F0  ;;E75A|----/----\----;
                      db $F0,$F1,$F2,$F3,$F4,$F5,$F6,$F7  ;;E762|----/----\----;
                      db $F8,$F9,$FA,$FB,$FC,$FD,$FE,$FF  ;;E76A|----/----\----;
                      db $FF,$FF,$FE,$FE,$FD,$FD,$FC,$FC  ;;E772|----/----\----;
                      db $FB,$FB,$FA,$FA,$F9,$F9,$F8,$F8  ;;E77A|----/----\----;
                      db $F7,$F7,$F6,$F6,$F5,$F5,$F4,$F4  ;;E782|----/----\----;
                      db $F3,$F3,$F2,$F2,$F1,$F1,$F0,$F0  ;;E78A|----/----\----;
                      db $F0,$F0,$F1,$F1,$F2,$F2,$F3,$F3  ;;E792|----/----\----;
                      db $F4,$F4,$F5,$F5,$F6,$F6,$F7,$F7  ;;E79A|----/----\----;
                      db $F8,$F8,$F9,$F9,$FA,$FA,$FB,$FB  ;;E7A2|----/----\----;
                      db $FC,$FC,$FD,$FD,$FE,$FE,$FF,$FF  ;;E7AA|----/----\----;
                      db $0F,$0E,$0D,$0C,$0B,$0A,$09,$08  ;;E7B2|----/----\----;
                      db $07,$06,$05,$04,$03,$02,$01,$00  ;;E7BA|----/----\----;
                      db $00,$01,$02,$03,$04,$05,$06,$07  ;;E7C2|----/----\----;
                      db $08,$09,$0A,$0B,$0C,$0D,$0E,$0F  ;;E7CA|----/----\----;
                      db $00,$01,$02,$03,$04,$05,$06,$07  ;;E7D2|----/----\----;
                      db $08,$09,$0A,$0B,$0C,$0D,$0E,$0F  ;;E7DA|----/----\----;
                      db $0F,$0E,$0D,$0C,$0B,$0A,$09,$08  ;;E7E2|----/----\----;
                      db $07,$06,$05,$04,$03,$02,$01,$00  ;;E7EA|----/----\----;
                      db $10,$10,$10,$10,$10,$10,$10,$10  ;;E7F2|----/----\----;
                      db $0E,$0C,$0A,$08,$06,$04,$02,$00  ;;E7FA|----/----\----;
                      db $0E,$0C,$0A,$08,$06,$04,$02,$00  ;;E802|----/----\----;
                      db $FE,$FC,$FA,$F8,$F6,$F4,$F2,$F0  ;;E80A|----/----\----;
                      db $00,$02,$04,$06,$08,$0A,$0C,$0E  ;;E812|----/----\----;
                      db $10,$10,$10,$10,$10,$10,$10,$10  ;;E81A|----/----\----;
                      db $F0,$F2,$F4,$F6,$F8,$FA,$FC,$FE  ;;E822|----/----\----;
                      db $00,$02,$04,$06,$08,$0A          ;;E82A|----/----\----;
                                                          ;;                   ;
DATA_00E830:          db $0C,$0E,$08,$00,$0E,$00,$0E,$00  ;;E830|----/----\----;
                      db $08,$00,$05,$00,$0B,$00,$08,$00  ;;E838|----/----\----;
                      db $02,$00,$02,$00,$08,$00,$0B,$00  ;;E840|----/----\----;
                      db $05,$00,$08,$00,$0E,$00,$0E,$00  ;;E848|----/----\----;
                      db $08,$00,$05,$00,$0B,$00,$08,$00  ;;E850|----/----\----;
                      db $02,$00,$02,$00,$08,$00,$0B,$00  ;;E858|----/----\----;
                      db $05,$00,$08,$00,$0E,$00,$0E,$00  ;;E860|----/----\----;
                      db $08,$00,$05,$00,$0B,$00,$08,$00  ;;E868|----/----\----;
                      db $02,$00,$02,$00,$08,$00,$0B,$00  ;;E870|----/----\----;
                      db $05,$00,$08,$00,$0E,$00,$0E,$00  ;;E878|----/----\----;
                      db $08,$00,$05,$00,$0B,$00,$08,$00  ;;E880|----/----\----;
                      db $02,$00,$02,$00,$08,$00,$0B,$00  ;;E888|----/----\----;
                      db $05,$00,$10,$00,$20,$00,$07,$00  ;;E890|----/----\----;
                      db $00,$00,$F0,$FF                  ;;E898|----/----\----;
                                                          ;;                   ;
DATA_00E89C:          db $08,$00,$18,$00,$1A,$00,$16,$00  ;;E89C|----/----\----;
DATA_00E8A4:          db $10,$00,$20,$00,$20,$00,$18,$00  ;;E8A4|----/----\----;
                      db $1A,$00,$16,$00,$10,$00,$20,$00  ;;E8AC|----/----\----;
                      db $20,$00,$12,$00,$1A,$00,$0F,$00  ;;E8B4|----/----\----;
                      db $08,$00,$20,$00,$20,$00,$12,$00  ;;E8BC|----/----\----;
                      db $1A,$00,$0F,$00,$08,$00,$20,$00  ;;E8C4|----/----\----;
                      db $20,$00,$1D,$00,$28,$00,$19,$00  ;;E8CC|----/----\----;
                      db $13,$00,$30,$00,$30,$00,$1D,$00  ;;E8D4|----/----\----;
                      db $28,$00,$19,$00,$13,$00,$30,$00  ;;E8DC|----/----\----;
                      db $30,$00,$1A,$00,$28,$00,$16,$00  ;;E8E4|----/----\----;
                      db $10,$00,$30,$00,$30,$00,$1A,$00  ;;E8EC|----/----\----;
                      db $28,$00,$16,$00,$10,$00,$30,$00  ;;E8F4|----/----\----;
                      db $30,$00,$18,$00,$18,$00,$18,$00  ;;E8FC|----/----\----;
                      db $18,$00,$18,$00,$18,$00          ;;E904|----/----\----;
                                                          ;;                   ;
DATA_00E90A:          db $01,$02,$11                      ;;E90A|----/----\----;
                                                          ;;                   ;
DATA_00E90D:          db $FF                              ;;E90D|----/----\----;
                                                          ;;                   ;
DATA_00E90E:          db $FF,$01,$00                      ;;E90E|----/----\----;
                                                          ;;                   ;
DATA_00E911:          db $02,$0D                          ;;E911|----/----\----;
                                                          ;;                   ;
DATA_00E913:          db $01,$00,$FF,$FF,$01,$00,$01,$00  ;;E913|----/----\----;
                      db $FF,$FF,$FF,$FF                  ;;E91B|----/----\----;
                                                          ;;                   ;
DATA_00E91F:          db $00,$00,$00,$00,$FF,$FF,$01,$00  ;;E91F|----/----\----;
                      db $FF,$FF,$01,$00                  ;;E927|----/----\----;
                                                          ;;                   ;
CODE_00E92B:          JSR CODE_00EAA6                     ;;E92B|----/----\----;
                      LDA.W !PlayerDisableObjInt          ;;E92E|----/----\----;
                      BEQ CODE_00E938                     ;;E931|----/----\----;
                      JSR CODE_00EE1D                     ;;E933|----/----\----;
                      BRA CODE_00E98C                     ;;E936|----/----\----;
                                                          ;;                   ;
CODE_00E938:          LDA.W !PlayerIsOnGround             ;;E938|----/----\----;
                      STA.B !GraphicsUncompPtr            ;;E93B|----/----\----;
                      STZ.W !PlayerIsOnGround             ;;E93D|----/----\----;
                      LDA.B !PlayerInAir                  ;;E940|----/----\----;
                      STA.B !GraphicsUncompPtr+2          ;;E942|----/----\----;
                      LDA.B !ScreenMode                   ;;E944|----/----\----;
                      BPL +                               ;;E946|----/----\----;
                      AND.B #$82                          ;;E948|----/----\----;
                      STA.B !GraphicsUncompPtr+1          ;;E94A|----/----\----;
                      LDA.B #$01                          ;;E94C|----/----\----;
                      STA.W !LayerProcessing              ;;E94E|----/----\----;
                      REP #$20                            ;;E951|----/----\----; Accum (16 bit) 
                      LDA.B !PlayerXPosNext               ;;E953|----/----\----;
                      CLC                                 ;;E955|----/----\----;
                      ADC.B !Layer23XRelPos               ;;E956|----/----\----;
                      STA.B !PlayerXPosNext               ;;E958|----/----\----;
                      LDA.B !PlayerYPosNext               ;;E95A|----/----\----;
                      CLC                                 ;;E95C|----/----\----;
                      ADC.B !Layer23YRelPos               ;;E95D|----/----\----;
                      STA.B !PlayerYPosNext               ;;E95F|----/----\----;
                      SEP #$20                            ;;E961|----/----\----; Accum (8 bit) 
                      JSR CODE_00EADB                     ;;E963|----/----\----;
                      REP #$20                            ;;E966|----/----\----; Accum (16 bit) 
                      LDA.B !PlayerXPosNext               ;;E968|----/----\----;
                      SEC                                 ;;E96A|----/----\----;
                      SBC.B !Layer23XRelPos               ;;E96B|----/----\----;
                      STA.B !PlayerXPosNext               ;;E96D|----/----\----;
                      LDA.B !PlayerYPosNext               ;;E96F|----/----\----;
                      SEC                                 ;;E971|----/----\----;
                      SBC.B !Layer23YRelPos               ;;E972|----/----\----;
                      STA.B !PlayerYPosNext               ;;E974|----/----\----;
                      SEP #$20                            ;;E976|----/----\----; Accum (8 bit) 
                    + ASL.W !PlayerIsOnGround             ;;E978|----/----\----;
                      LDA.B !ScreenMode                   ;;E97B|----/----\----;
                      AND.B #$41                          ;;E97D|----/----\----;
                      STA.B !GraphicsUncompPtr+1          ;;E97F|----/----\----;
                      ASL A                               ;;E981|----/----\----;
                      BMI CODE_00E98C                     ;;E982|----/----\----;
                      STZ.W !LayerProcessing              ;;E984|----/----\----;
                      ASL.B !GraphicsUncompPtr            ;;E987|----/----\----;
                      JSR CODE_00EADB                     ;;E989|----/----\----;
CODE_00E98C:          LDA.W !SideExitEnabled              ;;E98C|----/----\----;
                      BEQ CODE_00E9A1                     ;;E98F|----/----\----;
                      REP #$20                            ;;E991|----/----\----; Accum (16 bit) 
                      LDA.B !PlayerXPosScrRel             ;;E993|----/----\----;
                      CMP.W #$00FA                        ;;E995|----/----\----;
                      SEP #$20                            ;;E998|----/----\----; Accum (8 bit) 
                      BCC CODE_00E9FB                     ;;E99A|----/----\----;
                      JSL SubSideExit                     ;;E99C|----/----\----;
                      RTS                                 ;;E9A0|----/----\----; Return 
                                                          ;;                   ;
CODE_00E9A1:          LDA.B !PlayerXPosScrRel             ;;E9A1|----/----\----;
                      CMP.B #$F0                          ;;E9A3|----/----\----;
                      BCS CODE_00EA08                     ;;E9A5|----/----\----;
                      LDA.B !PlayerBlockedDir             ;;E9A7|----/----\----;
                      AND.B #$03                          ;;E9A9|----/----\----;
                      BNE CODE_00E9FB                     ;;E9AB|----/----\----;
                      REP #$20                            ;;E9AD|----/----\----; Accum (16 bit) 
                      LDY.B #$00                          ;;E9AF|----/----\----;
                      LDA.W !NextLayer1XPos               ;;E9B1|----/----\----;
                      CLC                                 ;;E9B4|----/----\----;
                      ADC.W #$00E8                        ;;E9B5|----/----\----;
                      CMP.B !PlayerXPosNext               ;;E9B8|----/----\----;
                      BEQ CODE_00E9C8                     ;;E9BA|----/----\----;
                      BMI CODE_00E9C8                     ;;E9BC|----/----\----;
                      INY                                 ;;E9BE|----/----\----;
                      LDA.B !PlayerXPosNext               ;;E9BF|----/----\----;
                      SEC                                 ;;E9C1|----/----\----;
                      SBC.W #$0008                        ;;E9C2|----/----\----;
                      CMP.W !NextLayer1XPos               ;;E9C5|----/----\----;
CODE_00E9C8:          SEP #$20                            ;;E9C8|----/----\----; Accum (8 bit) 
                      BEQ CODE_00E9FB                     ;;E9CA|----/----\----;
                      BPL CODE_00E9FB                     ;;E9CC|----/----\----;
                      LDA.W !HorizLayer1Setting           ;;E9CE|----/----\----;
                      BNE +                               ;;E9D1|----/----\----;
                      LDA.B #$80                          ;;E9D3|----/----\----;
                      TSB.B !PlayerBlockedDir             ;;E9D5|----/----\----;
                      REP #$20                            ;;E9D7|----/----\----; Accum (16 bit) 
                      LDA.W !Layer1ScrollXSpeed           ;;E9D9|----/----\----;
                      LSR A                               ;;E9DC|----/----\----;
                      LSR A                               ;;E9DD|----/----\----;
                      LSR A                               ;;E9DE|----/----\----;
                      LSR A                               ;;E9DF|----/----\----;
                      SEP #$20                            ;;E9E0|----/----\----; Accum (8 bit) 
                      STA.B !_0                           ;;E9E2|----/----\----;
                      SEC                                 ;;E9E4|----/----\----;
                      SBC.B !PlayerXSpeed                 ;;E9E5|----/----\----;
                      EOR.W DATA_00E90E,Y                 ;;E9E7|----/----\----;
                      BMI +                               ;;E9EA|----/----\----;
                      LDA.B !_0                           ;;E9EC|----/----\----;
                      STA.B !PlayerXSpeed                 ;;E9EE|----/----\----;
                      LDA.W !Layer1ScrollXPosUpd          ;;E9F0|----/----\----;
                      STA.W !PlayerXSpeedFPSpx            ;;E9F3|----/----\----;
                    + LDA.W DATA_00E90A,Y                 ;;E9F6|----/----\----;
                      TSB.B !PlayerBlockedDir             ;;E9F9|----/----\----;
CODE_00E9FB:          LDA.B !PlayerBlockedDir             ;;E9FB|----/----\----;
                      AND.B #$1C                          ;;E9FD|----/----\----;
                      CMP.B #$1C                          ;;E9FF|----/----\----;
                      BNE CODE_00EA0D                     ;;EA01|----/----\----;
                      LDA.W !StandOnSolidSprite           ;;EA03|----/----\----;
                      BNE CODE_00EA0D                     ;;EA06|----/----\----;
CODE_00EA08:          JSR CODE_00F629                     ;;EA08|----/----\----;
                      BRA CODE_00EA32                     ;;EA0B|----/----\----;
                                                          ;;                   ;
CODE_00EA0D:          LDA.B !PlayerBlockedDir             ;;EA0D|----/----\----;
                      AND.B #$03                          ;;EA0F|----/----\----;
                      BEQ +                               ;;EA11|----/----\----;
                      AND.B #$02                          ;;EA13|----/----\----;
                      TAY                                 ;;EA15|----/----\----;
                      REP #$20                            ;;EA16|----/----\----; Accum (16 bit) 
                      LDA.B !PlayerXPosNext               ;;EA18|----/----\----;
                      CLC                                 ;;EA1A|----/----\----;
                      ADC.W DATA_00E90D,Y                 ;;EA1B|----/----\----;
                      STA.B !PlayerXPosNext               ;;EA1E|----/----\----;
                      SEP #$20                            ;;EA20|----/----\----; Accum (8 bit) 
                      LDA.B !PlayerBlockedDir             ;;EA22|----/----\----;
                      BMI +                               ;;EA24|----/----\----;
                      LDA.B #$03                          ;;EA26|----/----\----;
                      STA.W !PlayerPoseLenTimer           ;;EA28|----/----\----;
                      LDA.B !PlayerXSpeed                 ;;EA2B|----/----\----;
                      EOR.W DATA_00E90D,Y                 ;;EA2D|----/----\----;
                      BPL +                               ;;EA30|----/----\----;
CODE_00EA32:          STZ.B !PlayerXSpeed                 ;;EA32|----/----\----;
                    + LDA.W !PlayerBehindNet              ;;EA34|----/----\----;
                      CMP.B #$01                          ;;EA37|----/----\----;
                      BNE +                               ;;EA39|----/----\----;
                      LDA.B !GraphicsCompPtr+1            ;;EA3B|----/----\----;
                      BNE +                               ;;EA3D|----/----\----;
                      STZ.W !PlayerBehindNet              ;;EA3F|----/----\----;
                    + STZ.W !PlayerCanJumpWater           ;;EA42|----/----\----;
                      LDA.B !LevelIsWater                 ;;EA45|----/----\----;
                      BNE CODE_00EA5E                     ;;EA47|----/----\----;
                      LSR.B !GraphicsCompPtr              ;;EA49|----/----\----;
                      BCC CODE_00EAA3                     ;;EA4B|----/----\----;
                      LDA.B !PlayerInWater                ;;EA4D|----/----\----;
                      BNE CODE_00EA65                     ;;EA4F|----/----\----;
                      LDA.B !PlayerYSpeed                 ;;EA51|----/----\----;
                      BMI CODE_00EA65                     ;;EA53|----/----\----;
                      LSR.B !GraphicsCompPtr              ;;EA55|----/----\----;
                      BCC Return00EAA5                    ;;EA57|----/----\----;
                      JSR CODE_00FDA5                     ;;EA59|----/----\----;
                      STZ.B !PlayerYSpeed                 ;;EA5C|----/----\----;
CODE_00EA5E:          LDA.B #$01                          ;;EA5E|----/----\----;
                      STA.B !PlayerInWater                ;;EA60|----/----\----;
CODE_00EA62:          JMP CODE_00FD08                     ;;EA62|----/----\----;
                                                          ;;                   ;
CODE_00EA65:          LSR.B !GraphicsCompPtr              ;;EA65|----/----\----;
                      BCS CODE_00EA5E                     ;;EA67|----/----\----;
                      LDA.B !PlayerInWater                ;;EA69|----/----\----;
                      BEQ Return00EAA5                    ;;EA6B|----/----\----;
                      LDA.B #$FC                          ;;EA6D|----/----\----;
                      CMP.B !PlayerYSpeed                 ;;EA6F|----/----\----;
                      BMI +                               ;;EA71|----/----\----;
                      STA.B !PlayerYSpeed                 ;;EA73|----/----\----;
                    + INC.W !PlayerCanJumpWater           ;;EA75|----/----\----;
                      LDA.B !byetudlrHold                 ;;EA78|----/----\----;
                      AND.B #$88                          ;;EA7A|----/----\----;
                      CMP.B #$88                          ;;EA7C|----/----\----;
                      BNE CODE_00EA62                     ;;EA7E|----/----\----;
                      LDA.B !axlr0000Hold                 ;;EA80|----/----\----;
                      BPL +                               ;;EA82|----/----\----;
                      LDA.W !IsCarryingItem               ;;EA84|----/----\----;
                      BNE +                               ;;EA87|----/----\----;
                      INC A                               ;;EA89|----/----\----;
                      STA.W !SpinJumpFlag                 ;;EA8A|----/----\----;
                      LDA.B #$04                          ;;EA8D|----/----\----; \ Play sound effect 
                      STA.W !SPCIO3                       ;;EA8F|----/----\----; / 
                    + LDA.B !PlayerBlockedDir             ;;EA92|----/----\----;
                      AND.B #$08                          ;;EA94|----/----\----;
                      BNE CODE_00EA62                     ;;EA96|----/----\----;
                      JSR CODE_00FDA5                     ;;EA98|----/----\----;
                      LDA.B #$0B                          ;;EA9B|----/----\----;
                      STA.B !PlayerInAir                  ;;EA9D|----/----\----;
                      LDA.B #$AA                          ;;EA9F|----/----\----;
                      STA.B !PlayerYSpeed                 ;;EAA1|----/----\----;
CODE_00EAA3:          STZ.B !PlayerInWater                ;;EAA3|----/----\----;
Return00EAA5:         RTS                                 ;;EAA5|----/----\----; Return 
                                                          ;;                   ;
CODE_00EAA6:          STZ.W !PlayerPoseLenTimer           ;;EAA6|----/----\----;
                      STZ.B !PlayerBlockedDir             ;;EAA9|----/----\----;
                      STZ.W !SlopeType                    ;;EAAB|----/----\----;
                      STZ.W !CurrentSlope                 ;;EAAE|----/----\----;
                      STZ.B !GraphicsCompPtr              ;;EAB1|----/----\----;
                      STZ.B !GraphicsCompPtr+1            ;;EAB3|----/----\----;
                      STZ.W !Layer2Touched                ;;EAB5|----/----\----;
                      RTS                                 ;;EAB8|----/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
DATA_00EAB9:          db $DE,$23                          ;;EAB9|----/----\----;
                                                          ;;                   ;
DATA_00EABB:          db $20,$E0                          ;;EABB|----/----\----;
                                                          ;;                   ;
DATA_00EABD:          db $08,$00,$F8,$FF                  ;;EABD|----/----\----;
                                                          ;;                   ;
DATA_00EAC1:          db $71,$72,$76,$77,$7B,$7C,$81,$86  ;;EAC1|----/----\----;
                      db $8A,$8B,$8F,$90,$94,$95,$99,$9A  ;;EAC9|----/----\----;
                      db $9E,$9F,$A3,$A4,$A8,$A9,$AD,$AE  ;;EAD1|----/----\----;
                      db $B2,$B3                          ;;EAD9|----/----\----;
                                                          ;;                   ;
CODE_00EADB:          LDA.B !PlayerYPosNext               ;;EADB|----/----\----;
                      AND.B #$0F                          ;;EADD|----/----\----;
                      STA.B !PlayerYPosInBlock            ;;EADF|----/----\----;
                      LDA.W !WallrunningType              ;;EAE1|----/----\----;
                      BNE +                               ;;EAE4|----/----\----;
                      JMP CODE_00EB77                     ;;EAE6|----/----\----;
                                                          ;;                   ;
                    + AND.B #$01                          ;;EAE9|----/----\----;
                      TAY                                 ;;EAEB|----/----\----;
                      LDA.B !PlayerXSpeed                 ;;EAEC|----/----\----;
                      SEC                                 ;;EAEE|----/----\----;
                      SBC.W DATA_00EAB9,Y                 ;;EAEF|----/----\----;
                      EOR.W DATA_00EAB9,Y                 ;;EAF2|----/----\----;
                      BMI CODE_00EB48                     ;;EAF5|----/----\----;
                      LDA.B !PlayerInAir                  ;;EAF7|----/----\----;
                      ORA.W !IsCarryingItem               ;;EAF9|----/----\----;
                      ORA.B !PlayerIsDucking              ;;EAFC|----/----\----;
                      ORA.W !PlayerRidingYoshi            ;;EAFE|----/----\----;
                      BNE CODE_00EB48                     ;;EB01|----/----\----;
                      LDA.W !WallrunningType              ;;EB03|----/----\----;
                      CMP.B #$06                          ;;EB06|----/----\----;
                      BCS CODE_00EB22                     ;;EB08|----/----\----;
                      LDX.B !PlayerYPosInBlock            ;;EB0A|----/----\----;
                      CPX.B #$08                          ;;EB0C|----/----\----;
                      BCC Return00EB76                    ;;EB0E|----/----\----;
                      CMP.B #$04                          ;;EB10|----/----\----;
                      BCS CODE_00EB73                     ;;EB12|----/----\----;
                      ORA.B #$04                          ;;EB14|----/----\----;
                      STA.W !WallrunningType              ;;EB16|----/----\----;
CODE_00EB19:          LDA.B !PlayerXPosNext               ;;EB19|----/----\----;
                      AND.B #$F0                          ;;EB1B|----/----\----;
                      ORA.B #$08                          ;;EB1D|----/----\----;
                      STA.B !PlayerXPosNext               ;;EB1F|----/----\----;
                      RTS                                 ;;EB21|----/----\----; Return 
                                                          ;;                   ;
CODE_00EB22:          LDX.B #$60                          ;;EB22|----/----\----;
                      TYA                                 ;;EB24|----/----\----;
                      BEQ +                               ;;EB25|----/----\----;
                      LDX.B #$66                          ;;EB27|----/----\----;
                    + JSR CODE_00EFE8                     ;;EB29|----/----\----;
                      LDA.B !Powerup                      ;;EB2C|----/----\----;
                      BNE CODE_00EB34                     ;;EB2E|----/----\----;
                      INX                                 ;;EB30|----/----\----;
                      INX                                 ;;EB31|----/----\----;
                      BRA +                               ;;EB32|----/----\----;
                                                          ;;                   ;
CODE_00EB34:          JSR CODE_00EFE8                     ;;EB34|----/----\----;
                    + JSR CODE_00F44D                     ;;EB37|----/----\----;
                      BNE CODE_00EB19                     ;;EB3A|----/----\----;
                      LDA.B #$02                          ;;EB3C|----/----\----;
                      TRB.W !WallrunningType              ;;EB3E|----/----\----;
                      RTS                                 ;;EB41|----/----\----; Return 
                                                          ;;                   ;
ADDR_00EB42:          LDA.W !WallrunningType              ;;EB42|----/----\----;
                      AND.B #$01                          ;;EB45|----/----\----;
                      TAY                                 ;;EB47|----/----\----;
CODE_00EB48:          LDA.W DATA_00EABB,Y                 ;;EB48|----/----\----;
                      STA.B !PlayerXSpeed                 ;;EB4B|----/----\----;
                      TYA                                 ;;EB4D|----/----\----;
                      ASL A                               ;;EB4E|----/----\----;
                      TAY                                 ;;EB4F|----/----\----;
                      REP #$20                            ;;EB50|----/----\----; Accum (16 bit) 
                      LDA.B !PlayerXPosNext               ;;EB52|----/----\----;
                      CLC                                 ;;EB54|----/----\----;
                      ADC.W DATA_00EABD,Y                 ;;EB55|----/----\----;
                      STA.B !PlayerXPosNext               ;;EB58|----/----\----;
                      LDA.W #$0008                        ;;EB5A|----/----\----;
                      LDY.B !Powerup                      ;;EB5D|----/----\----;
                      BEQ +                               ;;EB5F|----/----\----;
                      LDA.W #$0010                        ;;EB61|----/----\----;
                    + CLC                                 ;;EB64|----/----\----;
                      ADC.B !PlayerYPosNext               ;;EB65|----/----\----;
                      STA.B !PlayerYPosNext               ;;EB67|----/----\----;
                      SEP #$20                            ;;EB69|----/----\----; Accum (8 bit) 
                      LDA.B #$24                          ;;EB6B|----/----\----;
                      STA.B !PlayerInAir                  ;;EB6D|----/----\----;
                      LDA.B #$E0                          ;;EB6F|----/----\----;
                      STA.B !PlayerYSpeed                 ;;EB71|----/----\----;
CODE_00EB73:          STZ.W !WallrunningType              ;;EB73|----/----\----;
Return00EB76:         RTS                                 ;;EB76|----/----\----; Return 
                                                          ;;                   ;
CODE_00EB77:          LDX.B #$00                          ;;EB77|----/----\----;
                      LDA.B !Powerup                      ;;EB79|----/----\----;
                      BEQ +                               ;;EB7B|----/----\----;
                      LDA.B !PlayerIsDucking              ;;EB7D|----/----\----;
                      BNE +                               ;;EB7F|----/----\----;
                      LDX.B #$18                          ;;EB81|----/----\----;
                    + LDA.W !PlayerRidingYoshi            ;;EB83|----/----\----;
                      BEQ +                               ;;EB86|----/----\----;
                      TXA                                 ;;EB88|----/----\----;
                      CLC                                 ;;EB89|----/----\----;
                      ADC.B #$30                          ;;EB8A|----/----\----;
                      TAX                                 ;;EB8C|----/----\----;
                    + LDA.B !PlayerXPosNext               ;;EB8D|----/----\----;
                      AND.B #$0F                          ;;EB8F|----/----\----;
                      TAY                                 ;;EB91|----/----\----;
                      CLC                                 ;;EB92|----/----\----;
                      ADC.B #$08                          ;;EB93|----/----\----;
                      AND.B #$0F                          ;;EB95|----/----\----;
                      STA.B !PlayerXPosInBlock            ;;EB97|----/----\----;
                      STZ.B !PlayerBlockXSide             ;;EB99|----/----\----;
                      CPY.B #$08                          ;;EB9B|----/----\----;
                      BCC +                               ;;EB9D|----/----\----;
                      TXA                                 ;;EB9F|----/----\----;
                      ADC.B #$0B                          ;;EBA0|----/----\----;
                      TAX                                 ;;EBA2|----/----\----;
                      INC.B !PlayerBlockXSide             ;;EBA3|----/----\----;
                    + LDA.B !PlayerYPosInBlock            ;;EBA5|----/----\----;
                      CLC                                 ;;EBA7|----/----\----;
                      ADC.W DATA_00E8A4,X                 ;;EBA8|----/----\----;
                      AND.B #$0F                          ;;EBAB|----/----\----;
                      STA.B !PlayerBlockMoveY             ;;EBAD|----/----\----;
                      JSR CODE_00F44D                     ;;EBAF|----/----\----;
                      BEQ CODE_00EBDD                     ;;EBB2|----/----\----;
                      CPY.B #$11                          ;;EBB4|----/----\----;
                      BCC CODE_00EC24                     ;;EBB6|----/----\----;
                      CPY.B #$6E                          ;;EBB8|----/----\----;
                      BCC CODE_00EBC9                     ;;EBBA|----/----\----;
                      TYA                                 ;;EBBC|----/----\----;
                      JSL CODE_00F04D                     ;;EBBD|----/----\----;
                      BCC CODE_00EC24                     ;;EBC1|----/----\----;
                      LDA.B #$01                          ;;EBC3|----/----\----;
                      TSB.B !GraphicsCompPtr              ;;EBC5|----/----\----;
                      BRA CODE_00EC24                     ;;EBC7|----/----\----;
                                                          ;;                   ;
CODE_00EBC9:          INX                                 ;;EBC9|----/----\----;
                      INX                                 ;;EBCA|----/----\----;
                      INX                                 ;;EBCB|----/----\----;
                      INX                                 ;;EBCC|----/----\----;
                      TYA                                 ;;EBCD|----/----\----;
                      LDY.B #$00                          ;;EBCE|----/----\----;
                      CMP.B #$1E                          ;;EBD0|----/----\----;
                      BEQ +                               ;;EBD2|----/----\----;
                      CMP.B #$52                          ;;EBD4|----/----\----;
                      BEQ +                               ;;EBD6|----/----\----;
                      LDY.B #$02                          ;;EBD8|----/----\----;
                    + JMP CODE_00EC6F                     ;;EBDA|----/----\----;
                                                          ;;                   ;
CODE_00EBDD:          CPY.B #$9C                          ;;EBDD|----/----\----;
                      BNE CODE_00EBE8                     ;;EBDF|----/----\----;
                      LDA.W !ObjectTileset                ;;EBE1|----/----\----;
                      CMP.B #$01                          ;;EBE4|----/----\----;
                      BEQ CODE_00EC06                     ;;EBE6|----/----\----;
CODE_00EBE8:          CPY.B #$20                          ;;EBE8|----/----\----;
                      BEQ CODE_00EC01                     ;;EBEA|----/----\----;
                      CPY.B #$1F                          ;;EBEC|----/----\----;
                      BEQ CODE_00EBFD                     ;;EBEE|----/----\----;
                      LDA.W !BluePSwitchTimer             ;;EBF0|----/----\----;
                      BEQ CODE_00EC21                     ;;EBF3|----/----\----;
                      CPY.B #$28                          ;;EBF5|----/----\----;
                      BEQ CODE_00EC01                     ;;EBF7|----/----\----;
                      CPY.B #$27                          ;;EBF9|----/----\----;
                      BNE CODE_00EC21                     ;;EBFB|----/----\----;
CODE_00EBFD:          LDA.B !Powerup                      ;;EBFD|----/----\----;
                      BNE CODE_00EC24                     ;;EBFF|----/----\----;
CODE_00EC01:          JSR CODE_00F443                     ;;EC01|----/----\----;
                      BCS CODE_00EC24                     ;;EC04|----/----\----;
CODE_00EC06:          LDA.B !GraphicsUncompPtr+2          ;;EC06|----/----\----;
                      BNE CODE_00EC24                     ;;EC08|----/----\----;
                      LDA.B !byetudlrFrame                ;;EC0A|----/----\----;
                      AND.B #$08                          ;;EC0C|----/----\----;
                      BEQ CODE_00EC24                     ;;EC0E|----/----\----;
                      LDA.B #$0F                          ;;EC10|----/----\----; \ Play sound effect 
                      STA.W !SPCIO3                       ;;EC12|----/----\----; / 
                      JSR CODE_00D273                     ;;EC15|----/----\----;
                      LDA.B #$0D                          ;;EC18|----/----\----;
                      STA.B !PlayerAnimation              ;;EC1A|----/----\----;
                      JSR NoButtons                       ;;EC1C|----/----\----;
                      BRA CODE_00EC24                     ;;EC1F|----/----\----;
                                                          ;;                   ;
CODE_00EC21:          JSR CODE_00F28C                     ;;EC21|----/----\----;
CODE_00EC24:          JSR CODE_00F44D                     ;;EC24|----/----\----;
                      BEQ CODE_00EC35                     ;;EC27|----/----\----;
                      CPY.B #$11                          ;;EC29|----/----\----;
                      BCC CODE_00EC3A                     ;;EC2B|----/----\----;
                      CPY.B #$6E                          ;;EC2D|----/----\----;
                      BCS CODE_00EC3A                     ;;EC2F|----/----\----;
                      INX                                 ;;EC31|----/----\----;
                      INX                                 ;;EC32|----/----\----;
                      BRA CODE_00EC4E                     ;;EC33|----/----\----;
                                                          ;;                   ;
CODE_00EC35:          LDA.B #$10                          ;;EC35|----/----\----;
                      JSR CODE_00F2C9                     ;;EC37|----/----\----;
CODE_00EC3A:          JSR CODE_00F44D                     ;;EC3A|----/----\----;
                      BNE CODE_00EC46                     ;;EC3D|----/----\----;
                      LDA.B #$08                          ;;EC3F|----/----\----;
                      JSR CODE_00F2C9                     ;;EC41|----/----\----;
                      BRA CODE_00EC8A                     ;;EC44|----/----\----;
                                                          ;;                   ;
CODE_00EC46:          CPY.B #$11                          ;;EC46|----/----\----;
                      BCC CODE_00EC8A                     ;;EC48|----/----\----;
                      CPY.B #$6E                          ;;EC4A|----/----\----;
                      BCS CODE_00EC8A                     ;;EC4C|----/----\----;
CODE_00EC4E:          LDA.B !PlayerDirection              ;;EC4E|----/----\----;
                      CMP.B !PlayerBlockXSide             ;;EC50|----/----\----;
                      BEQ +                               ;;EC52|----/----\----;
                      JSR CODE_00F3C4                     ;;EC54|----/----\----;
                      PHX                                 ;;EC57|----/----\----;
                      JSR CODE_00F267                     ;;EC58|----/----\----;
                      LDY.W !Map16TileNumber              ;;EC5B|----/----\----; Current MAP16 tile number 
                      PLX                                 ;;EC5E|----/----\----;
                    + LDA.B #$03                          ;;EC5F|----/----\----;
                      STA.W !PlayerPoseLenTimer           ;;EC61|----/----\----;
                      LDY.B !PlayerBlockXSide             ;;EC64|----/----\----;
                      LDA.B !PlayerXPosNext               ;;EC66|----/----\----;
                      AND.B #$0F                          ;;EC68|----/----\----;
                      CMP.W DATA_00E911,Y                 ;;EC6A|----/----\----;
                      BEQ CODE_00EC8A                     ;;EC6D|----/----\----;
CODE_00EC6F:          LDA.W !NoteBlockActive              ;;EC6F|----/----\----;
                      BEQ CODE_00EC7B                     ;;EC72|----/----\----;
                      LDA.W !Map16TileNumber              ;;EC74|----/----\----;
                      CMP.B #$52                          ;;EC77|----/----\----;
                      BEQ CODE_00EC8A                     ;;EC79|----/----\----;
CODE_00EC7B:          LDA.W DATA_00E90A,Y                 ;;EC7B|----/----\----;
                      TSB.B !PlayerBlockedDir             ;;EC7E|----/----\----;
                      AND.B #$03                          ;;EC80|----/----\----;
                      TAY                                 ;;EC82|----/----\----;
                      LDA.W !Map16TileNumber              ;;EC83|----/----\----; Current MAP16 tile number 
                      JSL CODE_00F127                     ;;EC86|----/----\----;
CODE_00EC8A:          JSR CODE_00F44D                     ;;EC8A|----/----\----;
                      BNE CODE_00ECB1                     ;;EC8D|----/----\----;
                      LDA.B #$02                          ;;EC8F|----/----\----;
                      JSR CODE_00F2C2                     ;;EC91|----/----\----;
                      LDY.B !PlayerYSpeed                 ;;EC94|----/----\----;
                      BPL CODE_00ECA3                     ;;EC96|----/----\----;
                      LDA.W !Map16TileNumber              ;;EC98|----/----\----; Current MAP16 tile number 
                      CMP.B #$21                          ;;EC9B|----/----\----;
                      BCC CODE_00ECA3                     ;;EC9D|----/----\----;
                      CMP.B #$25                          ;;EC9F|----/----\----;
                      BCC +                               ;;ECA1|----/----\----;
CODE_00ECA3:          JMP CODE_00ED4A                     ;;ECA3|----/----\----;
                                                          ;;                   ;
                    + SEC                                 ;;ECA6|----/----\----;
                      SBC.B #$04                          ;;ECA7|----/----\----;
                      LDY.B #$00                          ;;ECA9|----/----\----;
                      JSL CODE_00F17F                     ;;ECAB|----/----\----;
                      BRA CODE_00ED0D                     ;;ECAF|----/----\----;
                                                          ;;                   ;
CODE_00ECB1:          CPY.B #$11                          ;;ECB1|----/----\----;
                      BCC CODE_00ECA3                     ;;ECB3|----/----\----;
                      CPY.B #$6E                          ;;ECB5|----/----\----;
                      BCC CODE_00ECFA                     ;;ECB7|----/----\----;
                      CPY.B #$D8                          ;;ECB9|----/----\----;
                      BCC CODE_00ECDA                     ;;ECBB|----/----\----;
                      REP #$20                            ;;ECBD|----/----\----; Accum (16 bit) 
                      LDA.B !TouchBlockYPos               ;;ECBF|----/----\----;
                      CLC                                 ;;ECC1|----/----\----;
                      ADC.W #$0010                        ;;ECC2|----/----\----;
                      STA.B !TouchBlockYPos               ;;ECC5|----/----\----;
                      JSR CODE_00F461                     ;;ECC7|----/----\----;
                      BEQ CODE_00ECF8                     ;;ECCA|----/----\----;
                      CPY.B #$6E                          ;;ECCC|----/----\----;
                      BCC CODE_00ED4A                     ;;ECCE|----/----\----;
                      CPY.B #$D8                          ;;ECD0|----/----\----;
                      BCS CODE_00ED4A                     ;;ECD2|----/----\----;
                      LDA.B !PlayerBlockMoveY             ;;ECD4|----/----\----; Accum (8 bit) 
                      SBC.B #$0F                          ;;ECD6|----/----\----;
                      STA.B !PlayerBlockMoveY             ;;ECD8|----/----\----;
CODE_00ECDA:          TYA                                 ;;ECDA|----/----\----;
                      SEC                                 ;;ECDB|----/----\----;
                      SBC.B #$6E                          ;;ECDC|----/----\----;
                      TAY                                 ;;ECDE|----/----\----;
                      REP #$20                            ;;ECDF|----/----\----; Accum (16 bit) 
                      LDA.B [!SlopesPtr],Y                ;;ECE1|----/----\----;
                      AND.W #$00FF                        ;;ECE3|----/----\----;
                      ASL A                               ;;ECE6|----/----\----;
                      ASL A                               ;;ECE7|----/----\----;
                      ASL A                               ;;ECE8|----/----\----;
                      ASL A                               ;;ECE9|----/----\----;
                      SEP #$20                            ;;ECEA|----/----\----; Accum (8 bit) 
                      ORA.B !PlayerXPosInBlock            ;;ECEC|----/----\----;
                      REP #$10                            ;;ECEE|----/----\----; Index (16 bit) 
                      TAY                                 ;;ECF0|----/----\----;
                      LDA.W DATA_00E632,Y                 ;;ECF1|----/----\----;
                      SEP #$10                            ;;ECF4|----/----\----; Index (8 bit) 
                      BMI CODE_00ED0F                     ;;ECF6|----/----\----;
CODE_00ECF8:          BRA CODE_00ED4A                     ;;ECF8|----/----\----;
                                                          ;;                   ;
CODE_00ECFA:          LDA.B #$02                          ;;ECFA|----/----\----;
                      JSR CODE_00F3E9                     ;;ECFC|----/----\----;
                      TYA                                 ;;ECFF|----/----\----;
                      LDY.B #$00                          ;;ED00|----/----\----;
                      JSL CODE_00F127                     ;;ED02|----/----\----;
                      LDA.W !Map16TileNumber              ;;ED06|----/----\----; Current MAP16 tile number 
                      CMP.B #$1E                          ;;ED09|----/----\----; \ If block is turn block, branch to $ED3B 
                      BEQ CODE_00ED3B                     ;;ED0B|----/----\----; /  
CODE_00ED0D:          LDA.B #$F0                          ;;ED0D|----/----\----;
CODE_00ED0F:          CLC                                 ;;ED0F|----/----\----;
                      ADC.B !PlayerBlockMoveY             ;;ED10|----/----\----;
                      BPL CODE_00ED4A                     ;;ED12|----/----\----;
                      CMP.B #$F9                          ;;ED14|----/----\----;
                      BCS CODE_00ED28                     ;;ED16|----/----\----;
                      LDY.B !PlayerInAir                  ;;ED18|----/----\----;
                      BNE CODE_00ED28                     ;;ED1A|----/----\----;
                      LDA.B !PlayerBlockedDir             ;;ED1C|----/----\----;
                      AND.B #$FC                          ;;ED1E|----/----\----;
                      ORA.B #$09                          ;;ED20|----/----\----;
                      STA.B !PlayerBlockedDir             ;;ED22|----/----\----;
                      STZ.B !PlayerXSpeed                 ;;ED24|----/----\----;
                      BRA CODE_00ED3B                     ;;ED26|----/----\----;
                                                          ;;                   ;
CODE_00ED28:          LDY.B !PlayerInAir                  ;;ED28|----/----\----;
                      BEQ +                               ;;ED2A|----/----\----;
                      EOR.B #$FF                          ;;ED2C|----/----\----;
                      CLC                                 ;;ED2E|----/----\----;
                      ADC.B !PlayerYPosNext               ;;ED2F|----/----\----;
                      STA.B !PlayerYPosNext               ;;ED31|----/----\----;
                      BCC +                               ;;ED33|----/----\----;
                      INC.B !PlayerYPosNext+1             ;;ED35|----/----\----;
                    + LDA.B #$08                          ;;ED37|----/----\----;
                      TSB.B !PlayerBlockedDir             ;;ED39|----/----\----;
CODE_00ED3B:          LDA.B !PlayerYSpeed                 ;;ED3B|----/----\----;
                      BPL CODE_00ED4A                     ;;ED3D|----/----\----;
                      STZ.B !PlayerYSpeed                 ;;ED3F|----/----\----;
                      LDA.W !SPCIO0                       ;;ED41|----/----\----; / Play sound effect 
                      BNE CODE_00ED4A                     ;;ED44|----/----\----;
                      INC A                               ;;ED46|----/----\----;
                      STA.W !SPCIO0                       ;;ED47|----/----\----; / Play sound effect 
CODE_00ED4A:          JSR CODE_00F44D                     ;;ED4A|----/----\----;
                      BNE +                               ;;ED4D|----/----\----;
                      JMP CODE_00EDDB                     ;;ED4F|----/----\----;
                                                          ;;                   ;
                    + CPY.B #$6E                          ;;ED52|----/----\----;
                      BCS +                               ;;ED54|----/----\----;
                      LDA.B #$03                          ;;ED56|----/----\----;
                      JSR CODE_00F3E9                     ;;ED58|----/----\----;
                      JMP CODE_00EDF7                     ;;ED5B|----/----\----;
                                                          ;;                   ;
                    + CPY.B #$D8                          ;;ED5E|----/----\----;
                      BCC CODE_00ED86                     ;;ED60|----/----\----;
                      CPY.B #$FB                          ;;ED62|----/----\----;
                      BCC +                               ;;ED64|----/----\----;
                      JMP CODE_00F629                     ;;ED66|----/----\----;
                                                          ;;                   ;
                    + REP #$20                            ;;ED69|----/----\----; Accum (16 bit) 
                      LDA.B !TouchBlockYPos               ;;ED6B|----/----\----;
                      SEC                                 ;;ED6D|----/----\----;
                      SBC.W #$0010                        ;;ED6E|----/----\----;
                      STA.B !TouchBlockYPos               ;;ED71|----/----\----;
                      JSR CODE_00F461                     ;;ED73|----/----\----;
                      BEQ CODE_00EDE9                     ;;ED76|----/----\----;
                      CPY.B #$6E                          ;;ED78|----/----\----;
                      BCC CODE_00EDE9                     ;;ED7A|----/----\----;
                      CPY.B #$D8                          ;;ED7C|----/----\----;
                      BCS CODE_00EDE9                     ;;ED7E|----/----\----;
                      LDA.B !PlayerYPosInBlock            ;;ED80|----/----\----; Accum (8 bit) 
                      ADC.B #$10                          ;;ED82|----/----\----;
                      STA.B !PlayerYPosInBlock            ;;ED84|----/----\----;
CODE_00ED86:          LDA.W !ObjectTileset                ;;ED86|----/----\----;
                      CMP.B #$03                          ;;ED89|----/----\----;
                      BEQ CODE_00ED91                     ;;ED8B|----/----\----;
                      CMP.B #$0E                          ;;ED8D|----/----\----;
                      BNE CODE_00ED95                     ;;ED8F|----/----\----;
CODE_00ED91:          CPY.B #$D2                          ;;ED91|----/----\----;
                      BCS CODE_00EDE9                     ;;ED93|----/----\----;
CODE_00ED95:          TYA                                 ;;ED95|----/----\----;
                      SEC                                 ;;ED96|----/----\----;
                      SBC.B #$6E                          ;;ED97|----/----\----;
                      TAY                                 ;;ED99|----/----\----;
                      LDA.B [!SlopesPtr],Y                ;;ED9A|----/----\----;
                      PHA                                 ;;ED9C|----/----\----;
                      REP #$20                            ;;ED9D|----/----\----; Accum (16 bit) 
                      AND.W #$00FF                        ;;ED9F|----/----\----;
                      ASL A                               ;;EDA2|----/----\----;
                      ASL A                               ;;EDA3|----/----\----;
                      ASL A                               ;;EDA4|----/----\----;
                      ASL A                               ;;EDA5|----/----\----;
                      SEP #$20                            ;;EDA6|----/----\----; Accum (8 bit) 
                      ORA.B !PlayerXPosInBlock            ;;EDA8|----/----\----;
                      PHX                                 ;;EDAA|----/----\----;
                      REP #$10                            ;;EDAB|----/----\----; Index (16 bit) 
                      TAX                                 ;;EDAD|----/----\----;
                      LDA.B !PlayerYPosInBlock            ;;EDAE|----/----\----;
                      SEC                                 ;;EDB0|----/----\----;
                      SBC.W DATA_00E632,X                 ;;EDB1|----/----\----;
                      BPL +                               ;;EDB4|----/----\----;
                      INC.W !PlayerIsOnGround             ;;EDB6|----/----\----;
                    + SEP #$10                            ;;EDB9|----/----\----; Index (8 bit) 
                      PLX                                 ;;EDBB|----/----\----;
                      PLY                                 ;;EDBC|----/----\----;
                      CMP.W DATA_00E51C,Y                 ;;EDBD|----/----\----;
                      BCS CODE_00EDE9                     ;;EDC0|----/----\----;
                      STA.B !PlayerBlockMoveY             ;;EDC2|----/----\----;
                      STZ.B !PlayerYPosInBlock            ;;EDC4|----/----\----;
                      JSR CODE_00F005                     ;;EDC6|----/----\----;
                      CPY.B #$1C                          ;;EDC9|----/----\----;
                      BCC +                               ;;EDCB|----/----\----;
                      LDA.B #$08                          ;;EDCD|----/----\----;
                      STA.W !SkidTurnTimer                ;;EDCF|----/----\----;
                      JMP CODE_00EED1                     ;;EDD2|----/----\----;
                                                          ;;                   ;
                    + JSR CODE_00EFBC                     ;;EDD5|----/----\----;
                      JMP CODE_00EE85                     ;;EDD8|----/----\----;
                                                          ;;                   ;
CODE_00EDDB:          CPY.B #$05                          ;;EDDB|----/----\----;
                      BNE CODE_00EDE4                     ;;EDDD|----/----\----;
                      JSR CODE_00F629                     ;;EDDF|----/----\----;
                      BRA CODE_00EDE9                     ;;EDE2|----/----\----;
                                                          ;;                   ;
CODE_00EDE4:          LDA.B #$04                          ;;EDE4|----/----\----;
                      JSR CODE_00F2C2                     ;;EDE6|----/----\----;
CODE_00EDE9:          JSR CODE_00F44D                     ;;EDE9|----/----\----;
                      BNE CODE_00EDF3                     ;;EDEC|----/----\----;
                      JSR CODE_00F309                     ;;EDEE|----/----\----;
                      BRA CODE_00EE1D                     ;;EDF1|----/----\----;
                                                          ;;                   ;
CODE_00EDF3:          CPY.B #$6E                          ;;EDF3|----/----\----;
                      BCS CODE_00EE1D                     ;;EDF5|----/----\----;
CODE_00EDF7:          LDA.B !PlayerYSpeed                 ;;EDF7|----/----\----;
                      BMI Return00EE39                    ;;EDF9|----/----\----;
                      LDA.W !ObjectTileset                ;;EDFB|----/----\----;
                      CMP.B #$03                          ;;EDFE|----/----\----;
                      BEQ CODE_00EE06                     ;;EE00|----/----\----;
                      CMP.B #$0E                          ;;EE02|----/----\----;
                      BNE CODE_00EE11                     ;;EE04|----/----\----;
CODE_00EE06:          LDY.W !Map16TileNumber              ;;EE06|----/----\----; $ED3B 
                      CPY.B #$59                          ;;EE09|----/----\----;
                      BCC CODE_00EE11                     ;;EE0B|----/----\----;
                      CPY.B #$5C                          ;;EE0D|----/----\----;
                      BCC CODE_00EE1D                     ;;EE0F|----/----\----;
CODE_00EE11:          LDA.B !PlayerYPosInBlock            ;;EE11|----/----\----;
                      AND.B #$0F                          ;;EE13|----/----\----;
                      STZ.B !PlayerYPosInBlock            ;;EE15|----/----\----;
                      CMP.B #$08                          ;;EE17|----/----\----;
                      STA.B !PlayerBlockMoveY             ;;EE19|----/----\----;
                      BCC CODE_00EE3A                     ;;EE1B|----/----\----;
CODE_00EE1D:          LDA.W !StandOnSolidSprite           ;;EE1D|----/----\----; \ If Mario isn't on a sprite platform, 
                      BEQ +                               ;;EE20|----/----\----; / branch to $EE2D 
                      LDA.B !PlayerYSpeed                 ;;EE22|----/----\----; \ If Mario is moving up, 
                      BMI +                               ;;EE24|----/----\----; / branch to $EE2D 
                      STZ.B !GraphicsUncompPtr+1          ;;EE26|----/----\----;
                      LDY.B #$20                          ;;EE28|----/----\----;
                      JMP CODE_00EEE1                     ;;EE2A|----/----\----;
                                                          ;;                   ;
                    + LDA.B !PlayerBlockedDir             ;;EE2D|----/----\----; \  
                      AND.B #$04                          ;;EE2F|----/----\----;  |If Mario is on an edge or in air, 
                      ORA.B !PlayerInAir                  ;;EE31|----/----\----;  |branch to $EE39 
                      BNE Return00EE39                    ;;EE33|----/----\----; /  
CODE_00EE35:          LDA.B #$24                          ;;EE35|----/----\----; \ Set "In air" to x24 (falling) 
                      STA.B !PlayerInAir                  ;;EE37|----/----\----; /  
Return00EE39:         RTS                                 ;;EE39|----/----\----; Return 
                                                          ;;                   ;
CODE_00EE3A:          LDY.W !Map16TileNumber              ;;EE3A|----/----\----; Current MAP16 tile number 
                      LDA.W !ObjectTileset                ;;EE3D|----/----\----; Tileset 
                      CMP.B #$02                          ;;EE40|----/----\----; \ If tileset is "Rope 1", 
                      BEQ CODE_00EE48                     ;;EE42|----/----\----; / branch to $EE48 
                      CMP.B #$08                          ;;EE44|----/----\----; \ If tileset isn't "Rope 3", 
                      BNE CODE_00EE57                     ;;EE46|----/----\----; / branch to $EE57 
CODE_00EE48:          TYA                                 ;;EE48|----/----\----; \  
                      SEC                                 ;;EE49|----/----\----;  |If the current tile isn't Rope 3's "Conveyor rope", 
                      SBC.B #$0C                          ;;EE4A|----/----\----;  |branch to $EE57 
                      CMP.B #$02                          ;;EE4C|----/----\----;  | 
                      BCS CODE_00EE57                     ;;EE4E|----/----\----; /  
                      ASL A                               ;;EE50|----/----\----;
                      TAX                                 ;;EE51|----/----\----;
                      JSR CODE_00EFCD                     ;;EE52|----/----\----;
                      BRA CODE_00EE83                     ;;EE55|----/----\----;
                                                          ;;                   ;
CODE_00EE57:          JSR CODE_00F267                     ;;EE57|----/----\----;
                      LDY.B #$03                          ;;EE5A|----/----\----;
                      LDA.W !Map16TileNumber              ;;EE5C|----/----\----; Current MAP16 tile number 
                      CMP.B #$1E                          ;;EE5F|----/----\----; \ If block isn't "Turn block", 
                      BNE CODE_00EE78                     ;;EE61|----/----\----; / branch to $EE78 
                      LDX.B !GraphicsUncompPtr+2          ;;EE63|----/----\----;
                      BEQ CODE_00EE83                     ;;EE65|----/----\----;
                      LDX.B !Powerup                      ;;EE67|----/----\----;
                      BEQ CODE_00EE83                     ;;EE69|----/----\----;
                      LDX.W !SpinJumpFlag                 ;;EE6B|----/----\----;
                      BEQ CODE_00EE83                     ;;EE6E|----/----\----;
                      LDA.B #$21                          ;;EE70|----/----\----;
                      JSL CODE_00F17F                     ;;EE72|----/----\----;
                      BRA CODE_00EE1D                     ;;EE76|----/----\----;
                                                          ;;                   ;
CODE_00EE78:          CMP.B #$32                          ;;EE78|----/----\----; \ If block isn't "Brown block", 
                      BNE +                               ;;EE7A|----/----\----; / branch to $EE7F 
                      STZ.W !BlockSnakeActive             ;;EE7C|----/----\----;
                    + JSL CODE_00F120                     ;;EE7F|----/----\----;
CODE_00EE83:          LDY.B #$20                          ;;EE83|----/----\----;
CODE_00EE85:          LDA.B !PlayerYSpeed                 ;;EE85|----/----\----; \ If Mario isn't moving up, 
                      BPL CODE_00EE8F                     ;;EE87|----/----\----; / branch to $EE8F 
                      LDA.B !GraphicsUncompPtr            ;;EE89|----/----\----;
                      CMP.B #$02                          ;;EE8B|----/----\----;
                      BCC Return00EE39                    ;;EE8D|----/----\----;
CODE_00EE8F:          LDX.W !SwitchPalacePressed          ;;EE8F|----/----\----;
                      BEQ CODE_00EED1                     ;;EE92|----/----\----;
                      DEX                                 ;;EE94|----/----\----;
                      TXA                                 ;;EE95|----/----\----;
                      AND.B #$03                          ;;EE96|----/----\----;
                      BEQ CODE_00EEAA                     ;;EE98|----/----\----;
                      CMP.B #$02                          ;;EE9A|----/----\----;
                      BCS CODE_00EED1                     ;;EE9C|----/----\----;
                      REP #$20                            ;;EE9E|----/----\----; Accum (16 bit) 
                      LDA.B !TouchBlockXPos               ;;EEA0|----/----\----;
                      SEC                                 ;;EEA2|----/----\----;
                      SBC.W #$0010                        ;;EEA3|----/----\----;
                      STA.B !TouchBlockXPos               ;;EEA6|----/----\----;
                      SEP #$20                            ;;EEA8|----/----\----; Accum (8 bit) 
CODE_00EEAA:          TXA                                 ;;EEAA|----/----\----;
                      LSR A                               ;;EEAB|----/----\----;
                      LSR A                               ;;EEAC|----/----\----;
                      TAX                                 ;;EEAD|----/----\----;
                      LDA.W !SwitchBlockFlags,X           ;;EEAE|----/----\----; \ If switch block is already active, 
                      BNE CODE_00EED1                     ;;EEB1|----/----\----; / branch to $EED1 
                      INC A                               ;;EEB3|----/----\----; \ Activate switch block 
                      STA.W !SwitchBlockFlags,X           ;;EEB4|----/----\----; /  
                      STA.W !SwitchPalaceColor            ;;EEB7|----/----\----;
                      PHY                                 ;;EEBA|----/----\----;
                      STX.W !BigSwitchPressTimer          ;;EEBB|----/----\----;
                      JSR FlatPalaceSwitch                ;;EEBE|----/----\----;
                      PLY                                 ;;EEC1|----/----\----;
                      LDA.B #$0C                          ;;EEC2|----/----\----;
                      STA.W !SPCIO2                       ;;EEC4|----/----\----; / Change music 
                      LDA.B #$FF                          ;;EEC7|----/----\----; \  
                      STA.W !MusicBackup                  ;;EEC9|----/----\----; / Set music to xFF 
                      LDA.B #$08                          ;;EECC|----/----\----;
                      STA.W !EndLevelTimer                ;;EECE|----/----\----;
CODE_00EED1:          INC.W !PlayerIsOnGround             ;;EED1|----/----\----;
                      LDA.B !PlayerYPosNext               ;;EED4|----/----\----;
                      SEC                                 ;;EED6|----/----\----;
                      SBC.B !PlayerBlockMoveY             ;;EED7|----/----\----;
                      STA.B !PlayerYPosNext               ;;EED9|----/----\----;
                      LDA.B !PlayerYPosNext+1             ;;EEDB|----/----\----;
                      SBC.B !PlayerYPosInBlock            ;;EEDD|----/----\----;
                      STA.B !PlayerYPosNext+1             ;;EEDF|----/----\----;
CODE_00EEE1:          LDA.W DATA_00E53D,Y                 ;;EEE1|----/----\----;
                      BNE CODE_00EEEF                     ;;EEE4|----/----\----;
                      LDX.W !PlayerSlopePose              ;;EEE6|----/----\----;
                      BEQ CODE_00EF05                     ;;EEE9|----/----\----;
                      LDX.B !PlayerXSpeed                 ;;EEEB|----/----\----;
                      BEQ CODE_00EF02                     ;;EEED|----/----\----;
CODE_00EEEF:          STA.W !CurrentSlope                 ;;EEEF|----/----\----;
                      LDA.B !byetudlrHold                 ;;EEF2|----/----\----;
                      AND.B #$04                          ;;EEF4|----/----\----;
                      BEQ CODE_00EF05                     ;;EEF6|----/----\----;
                      LDA.W !IsCarryingItem               ;;EEF8|----/----\----;
                      ORA.W !PlayerSlopePose              ;;EEFB|----/----\----;
                      BNE CODE_00EF05                     ;;EEFE|----/----\----;
                      LDX.B #$1C                          ;;EF00|----/----\----;
CODE_00EF02:          STX.W !PlayerSlopePose              ;;EF02|----/----\----;
CODE_00EF05:          LDX.W DATA_00E4B9,Y                 ;;EF05|----/----\----;
                      STX.W !SlopeType                    ;;EF08|----/----\----;
                      CPY.B #$1C                          ;;EF0B|----/----\----;
                      BCS CODE_00EF38                     ;;EF0D|----/----\----;
                      LDA.B !PlayerXSpeed                 ;;EF0F|----/----\----;
                      BEQ CODE_00EF31                     ;;EF11|----/----\----;
                      LDA.W DATA_00E53D,Y                 ;;EF13|----/----\----;
                      BEQ CODE_00EF31                     ;;EF16|----/----\----;
                      EOR.B !PlayerXSpeed                 ;;EF18|----/----\----;
                      BPL CODE_00EF31                     ;;EF1A|----/----\----;
                      STX.W !PlayerPoseLenTimer           ;;EF1C|----/----\----;
                      LDA.B !PlayerXSpeed                 ;;EF1F|----/----\----;
                      BPL +                               ;;EF21|----/----\----;
                      EOR.B #$FF                          ;;EF23|----/----\----;
                      INC A                               ;;EF25|----/----\----;
                    + CMP.B #$28                          ;;EF26|----/----\----;
                      BCC CODE_00EF2F                     ;;EF28|----/----\----;
                      LDA.W DATA_00E4FB,Y                 ;;EF2A|----/----\----;
                      BRA CODE_00EF60                     ;;EF2D|----/----\----;
                                                          ;;                   ;
CODE_00EF2F:          LDY.B #$20                          ;;EF2F|----/----\----;
CODE_00EF31:          LDA.B !PlayerYSpeed                 ;;EF31|----/----\----;
                      CMP.W DATA_00E4DA,Y                 ;;EF33|----/----\----;
                      BCC +                               ;;EF36|----/----\----;
CODE_00EF38:          LDA.W DATA_00E4DA,Y                 ;;EF38|----/----\----;
                    + LDX.B !GraphicsUncompPtr+1          ;;EF3B|----/----\----;
                      BPL CODE_00EF60                     ;;EF3D|----/----\----;
                      INC.W !Layer2Touched                ;;EF3F|----/----\----;
                      PHA                                 ;;EF42|----/----\----;
                      REP #$20                            ;;EF43|----/----\----; Accum (16 bit) 
                      LDA.W !Layer2DYPos                  ;;EF45|----/----\----;
                      AND.W #$FF00                        ;;EF48|----/----\----;
                      BPL +                               ;;EF4B|----/----\----;
                      ORA.W #$00FF                        ;;EF4D|----/----\----;
                    + XBA                                 ;;EF50|----/----\----;
                      EOR.W #$FFFF                        ;;EF51|----/----\----;
                      INC A                               ;;EF54|----/----\----;
                      CLC                                 ;;EF55|----/----\----;
                      ADC.B !PlayerXPosNext               ;;EF56|----/----\----;
                      STA.B !PlayerXPosNext               ;;EF58|----/----\----;
                      SEP #$20                            ;;EF5A|----/----\----; Accum (8 bit) 
                      PLA                                 ;;EF5C|----/----\----;
                      CLC                                 ;;EF5D|----/----\----;
                      ADC.B #$28                          ;;EF5E|----/----\----;
CODE_00EF60:          STA.B !PlayerYSpeed                 ;;EF60|----/----\----;
                      TAX                                 ;;EF62|----/----\----;
                      BPL +                               ;;EF63|----/----\----;
                      INC.W !PlayerIsOnGround             ;;EF65|----/----\----;
                    + STZ.W !StandingOnCage               ;;EF68|----/----\----;
                      STZ.B !PlayerInAir                  ;;EF6B|----/----\----;
                      STZ.B !PlayerIsClimbing             ;;EF6D|----/----\----;
                      STZ.W !BouncingOnBoard              ;;EF6F|----/----\----;
                      STZ.W !SpinJumpFlag                 ;;EF72|----/----\----;
                      LDA.B #$04                          ;;EF75|----/----\----;
                      TSB.B !PlayerBlockedDir             ;;EF77|----/----\----;
                      LDY.W !FlightPhase                  ;;EF79|----/----\----;
                      BNE CODE_00EF99                     ;;EF7C|----/----\----;
                      LDA.W !PlayerRidingYoshi            ;;EF7E|----/----\----;
                      BEQ +                               ;;EF81|----/----\----;
                      LDA.B !GraphicsUncompPtr+2          ;;EF83|----/----\----;
                      BEQ +                               ;;EF85|----/----\----;
                      LDA.W !YoshiCanStomp                ;;EF87|----/----\----; \ If Yoshi has stomp ability, 
                      BEQ +                               ;;EF8A|----/----\----;  | 
                      JSL YoshiStompRoutine               ;;EF8C|----/----\----;  | Run routine 
                      LDA.B #$25                          ;;EF90|----/----\----;  | Play sound effect 
                      STA.W !SPCIO3                       ;;EF92|----/----\----; / 
                    + STZ.W !SpriteStompCounter           ;;EF95|----/----\----;
                      RTS                                 ;;EF98|----/----\----; Return 
                                                          ;;                   ;
CODE_00EF99:          STZ.W !SpriteStompCounter           ;;EF99|----/----\----;
                      STZ.W !FlightPhase                  ;;EF9C|----/----\----;
                      CPY.B #$05                          ;;EF9F|----/----\----;
                      BCS CallGroundPound                 ;;EFA1|----/----\----;
                      LDA.B !Powerup                      ;;EFA3|----/----\----;
                      CMP.B #$02                          ;;EFA5|----/----\----;
                      BNE +                               ;;EFA7|----/----\----;
                      SEC                                 ;;EFA9|----/----\----;
                      ROR.W !PlayerSlopePose              ;;EFAA|----/----\----;
                    + RTS                                 ;;EFAD|----/----\----; Return 
                                                          ;;                   ;
CallGroundPound:      LDA.B !GraphicsUncompPtr+2          ;;EFAE|----/----\----;
                      BEQ +                               ;;EFB0|----/----\----;
                      JSL GroundPound                     ;;EFB2|----/----\----;
                      LDA.B #$09                          ;;EFB6|----/----\----; \ Play sound effect 
                      STA.W !SPCIO3                       ;;EFB8|----/----\----; / 
                    + RTS                                 ;;EFBB|----/----\----; Return 
                                                          ;;                   ;
CODE_00EFBC:          LDX.W !Map16TileNumber              ;;EFBC|----/----\----;
                      CPX.B #$CE                          ;;EFBF|----/----\----;
                      BCC +                               ;;EFC1|----/----\----;
                      CPX.B #$D2                          ;;EFC3|----/----\----;
                      BCS +                               ;;EFC5|----/----\----;
                      TXA                                 ;;EFC7|----/----\----;
                      SEC                                 ;;EFC8|----/----\----;
                      SBC.B #$CC                          ;;EFC9|----/----\----;
                      ASL A                               ;;EFCB|----/----\----;
                      TAX                                 ;;EFCC|----/----\----;
CODE_00EFCD:          LDA.B !TrueFrame                    ;;EFCD|----/----\----;
                      AND.B #$03                          ;;EFCF|----/----\----;
                      BNE +                               ;;EFD1|----/----\----;
                      REP #$20                            ;;EFD3|----/----\----; Accum (16 bit) 
                      LDA.B !PlayerXPosNext               ;;EFD5|----/----\----;
                      CLC                                 ;;EFD7|----/----\----;
                      ADC.W DATA_00E913,X                 ;;EFD8|----/----\----;
                      STA.B !PlayerXPosNext               ;;EFDB|----/----\----;
                      LDA.B !PlayerYPosNext               ;;EFDD|----/----\----;
                      CLC                                 ;;EFDF|----/----\----;
                      ADC.W DATA_00E91F,X                 ;;EFE0|----/----\----;
                      STA.B !PlayerYPosNext               ;;EFE3|----/----\----;
                      SEP #$20                            ;;EFE5|----/----\----; Accum (8 bit) 
                    + RTS                                 ;;EFE7|----/----\----; Return 
                                                          ;;                   ;
CODE_00EFE8:          JSR CODE_00F44D                     ;;EFE8|----/----\----;
                      BNE +                               ;;EFEB|----/----\----;
                      JMP CODE_00F309                     ;;EFED|----/----\----;
                                                          ;;                   ;
                    + CPY.B #$11                          ;;EFF0|----/----\----;
                      BCC +                               ;;EFF2|----/----\----;
                      CPY.B #$6E                          ;;EFF4|----/----\----;
                      BCS +                               ;;EFF6|----/----\----;
                      TYA                                 ;;EFF8|----/----\----;
                      LDY.B #$00                          ;;EFF9|----/----\----;
                      JSL CODE_00F160                     ;;EFFB|----/----\----;
                      PLA                                 ;;EFFF|----/----\----;
                      PLA                                 ;;F000|----/----\----;
                      JMP ADDR_00EB42                     ;;F001|----/----\----;
                                                          ;;                   ;
                    + RTS                                 ;;F004|----/----\----; Return 
                                                          ;;                   ;
CODE_00F005:          TYA                                 ;;F005|----/----\----;
                      SEC                                 ;;F006|----/----\----;
                      SBC.B #$0E                          ;;F007|----/----\----;
                      CMP.B #$02                          ;;F009|----/----\----;
                      BCS Return00F04C                    ;;F00B|----/----\----;
                      EOR.B #$01                          ;;F00D|----/----\----;
                      CMP.B !PlayerDirection              ;;F00F|----/----\----;
                      BNE Return00F04C                    ;;F011|----/----\----;
                      TAX                                 ;;F013|----/----\----;
                      LSR A                               ;;F014|----/----\----;
                      LDA.B !PlayerXPosInBlock            ;;F015|----/----\----;
                      BCC +                               ;;F017|----/----\----;
                      EOR.B #$0F                          ;;F019|----/----\----;
                    + CMP.B #$08                          ;;F01B|----/----\----;
                      BCS Return00F04C                    ;;F01D|----/----\----;
                      LDA.W !PlayerRidingYoshi            ;;F01F|----/----\----;
                      BEQ +                               ;;F022|----/----\----;
                      LDA.B #$08                          ;;F024|----/----\----;
                      STA.W !SPCIO3                       ;;F026|----/----\----; / Play sound effect 
                      LDA.B #$80                          ;;F029|----/----\----;
                      STA.B !PlayerYSpeed                 ;;F02B|----/----\----;
                      STA.W !BouncingOnBoard              ;;F02D|----/----\----;
                      PLA                                 ;;F030|----/----\----;
                      PLA                                 ;;F031|----/----\----;
                      JMP CODE_00EE35                     ;;F032|----/----\----;
                                                          ;;                   ;
                    + LDA.B !PlayerXSpeed                 ;;F035|----/----\----;
                      SEC                                 ;;F037|----/----\----;
                      SBC.W DATA_00EAB9,X                 ;;F038|----/----\----;
                      EOR.W DATA_00EAB9,X                 ;;F03B|----/----\----;
                      BMI Return00F04C                    ;;F03E|----/----\----;
                      LDA.W !IsCarryingItem               ;;F040|----/----\----;
                      ORA.B !PlayerIsDucking              ;;F043|----/----\----;
                      BNE Return00F04C                    ;;F045|----/----\----;
                      INX                                 ;;F047|----/----\----;
                      INX                                 ;;F048|----/----\----;
                      STX.W !WallrunningType              ;;F049|----/----\----;
Return00F04C:         RTS                                 ;;F04C|----/----\----; Return 
                                                          ;;                   ;
CODE_00F04D:          PHX                                 ;;F04D|----/----\----;
                      LDX.B #$19                          ;;F04E|----/----\----;
CODE_00F050:          CMP.L DATA_00EAC1,X                 ;;F050|----/----\----;
                      BEQ CODE_00F05A                     ;;F054|----/----\----;
                      DEX                                 ;;F056|----/----\----;
                      BPL CODE_00F050                     ;;F057|----/----\----;
                      CLC                                 ;;F059|----/----\----;
CODE_00F05A:          PLX                                 ;;F05A|----/----\----;
                      RTL                                 ;;F05B|----/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
DATA_00F05C:          db $01,$05,$01,$02,$01,$01,$00,$00  ;;F05C|----/----\----;
                      db $00,$00,$00,$00,$00,$06,$02,$02  ;;F064|----/----\----;
                      db $02,$02,$02,$02,$02,$02,$02,$02  ;;F06C|----/----\----;
                      db $02,$03,$03,$04,$02,$02,$02,$01  ;;F074|----/----\----;
                      db $01,$07,$11,$10                  ;;F07C|----/----\----;
                                                          ;;                   ;
DATA_00F080:          db $80,$00,$00,$1E,$00,$00,$05,$09  ;;F080|----/----\----;
                      db $06,$81,$0E,$0C,$14,$00,$05,$09  ;;F088|----/----\----;
                      db $06,$07,$0E,$0C,$16,$18,$1A,$1A  ;;F090|----/----\----;
                      db $00,$09,$00,$00,$FF,$0C,$0A,$00  ;;F098|----/----\----;
                      db $00,$00,$08,$02                  ;;F0A0|----/----\----;
                                                          ;;                   ;
DATA_00F0A4:          db $0C,$08,$0C,$08,$0C,$0F,$08,$08  ;;F0A4|----/----\----;
                      db $08,$08,$08,$08,$08,$08,$08,$08  ;;F0AC|----/----\----;
                      db $08,$08,$08,$08,$08,$08,$08,$08  ;;F0B4|----/----\----;
                      db $08,$03,$03,$08,$08,$08,$08,$08  ;;F0BC|----/----\----;
                      db $08,$04,$08,$08                  ;;F0C4|----/----\----;
                                                          ;;                   ;
DATA_00F0C8:          db $0E,$13,$0E,$0D,$0E,$10,$0D,$0D  ;;F0C8|----/----\----;
                      db $0D,$0D,$0A,$0D,$0D,$0C,$0D,$0D  ;;F0D0|----/----\----;
                      db $0D,$0D,$0B,$0D,$0D,$16,$0D,$0D  ;;F0D8|----/----\----;
                      db $0D,$11,$11,$12,$0D,$0D,$0D,$0E  ;;F0E0|----/----\----;
                      db $0F,$0C,$0D,$0D                  ;;F0E8|----/----\----;
                                                          ;;                   ;
DATA_00F0EC:          db $08,$01,$02,$04,$ED,$F6,$00,$7D  ;;F0EC|----/----\----;
                      db $BE,$00,$6F,$B7                  ;;F0F4|----/----\----;
                                                          ;;                   ;
DATA_00F0F8:          db $40,$50,$00,$70,$80,$00,$A0,$B0  ;;F0F8|----/----\----;
DATA_00F100:          db $05,$09,$06,$05,$09,$06,$05,$09  ;;F100|----/----\----;
                      db $06,$05,$09,$06,$05,$09,$06,$05  ;;F108|----/----\----;
                      db $07,$0A,$10,$07,$0A,$10,$07,$0A  ;;F110|----/----\----;
                      db $10,$07,$0A,$10,$07,$0A,$10,$07  ;;F118|----/----\----;
                                                          ;;                   ;
CODE_00F120:          XBA                                 ;;F120|----/----\----;
                      LDA.W !PlayerRidingYoshi            ;;F121|----/----\----;
                      BNE CODE_00F15F                     ;;F124|----/----\----;
                      XBA                                 ;;F126|----/----\----;
CODE_00F127:          CMP.B #$2F                          ;;F127|----/----\----;
                      BEQ CODE_00F154                     ;;F129|----/----\----;
                      CMP.B #$59                          ;;F12B|----/----\----;
                      BCC CODE_00F144                     ;;F12D|----/----\----;
                      CMP.B #$5C                          ;;F12F|----/----\----;
                      BCS CODE_00F140                     ;;F131|----/----\----;
                      XBA                                 ;;F133|----/----\----;
                      LDA.W !ObjectTileset                ;;F134|----/----\----;
                      CMP.B #$05                          ;;F137|----/----\----;
                      BEQ CODE_00F154                     ;;F139|----/----\----;
                      CMP.B #$0D                          ;;F13B|----/----\----;
                      BEQ CODE_00F154                     ;;F13D|----/----\----;
                      XBA                                 ;;F13F|----/----\----;
CODE_00F140:          CMP.B #$5D                          ;;F140|----/----\----;
                      BCC CODE_00F14C                     ;;F142|----/----\----;
CODE_00F144:          CMP.B #$66                          ;;F144|----/----\----;
                      BCC CODE_00F160                     ;;F146|----/----\----;
                      CMP.B #$6A                          ;;F148|----/----\----;
                      BCS CODE_00F160                     ;;F14A|----/----\----;
CODE_00F14C:          XBA                                 ;;F14C|----/----\----;
                      LDA.W !ObjectTileset                ;;F14D|----/----\----;
                      CMP.B #$01                          ;;F150|----/----\----;
                      BNE CODE_00F15F                     ;;F152|----/----\----;
CODE_00F154:          PHB                                 ;;F154|----/----\----;
                      LDA.B #$01                          ;;F155|----/----\----;
                      PHA                                 ;;F157|----/----\----;
                      PLB                                 ;;F158|----/----\----;
                      JSL HurtMario                       ;;F159|----/----\----;
                      PLB                                 ;;F15D|----/----\----;
                      RTL                                 ;;F15E|----/----\----; Return 
                                                          ;;                   ;
CODE_00F15F:          XBA                                 ;;F15F|----/----\----;
CODE_00F160:          SEC                                 ;;F160|----/----\----;
                      SBC.B #$11                          ;;F161|----/----\----;
                      CMP.B #$1D                          ;;F163|----/----\----;
                      BCC CODE_00F17F                     ;;F165|----/----\----;
                      XBA                                 ;;F167|----/----\----;
                      PHX                                 ;;F168|----/----\----;
                      LDX.W !ObjectTileset                ;;F169|----/----\----;
                      LDA.L DATA_00A625,X                 ;;F16C|----/----\----;
                      PLX                                 ;;F170|----/----\----;
                      AND.B #$03                          ;;F171|----/----\----;
                      BEQ +                               ;;F173|----/----\----;
                      RTL                                 ;;F175|----/----\----; Return 
                                                          ;;                   ;
                    + XBA                                 ;;F176|----/----\----;
                      SBC.B #$59                          ;;F177|----/----\----;
                      CMP.B #$02                          ;;F179|----/----\----;
                      BCS Return00F1F8                    ;;F17B|----/----\----;
                      ADC.B #$22                          ;;F17D|----/----\----;
CODE_00F17F:          PHX                                 ;;F17F|----/----\----;
                      PHA                                 ;;F180|----/----\----;
                      TYX                                 ;;F181|----/----\----;
                      LDA.L DATA_00F0EC,X                 ;;F182|----/----\----;
                      PLX                                 ;;F186|----/----\----;
                      AND.L DATA_00F0A4,X                 ;;F187|----/----\----;
                      BEQ CODE_00F1F6                     ;;F18B|----/----\----;
                      STY.B !_6                           ;;F18D|----/----\----;
                      LDA.L DATA_00F0C8,X                 ;;F18F|----/----\----;
                      STA.B !_7                           ;;F193|----/----\----;
                      LDA.L DATA_00F05C,X                 ;;F195|----/----\----;
                      STA.B !_4                           ;;F199|----/----\----;
                      LDA.L DATA_00F080,X                 ;;F19B|----/----\----;
                      BPL CODE_00F1BA                     ;;F19F|----/----\----;
                      CMP.B #$FF                          ;;F1A1|----/----\----;
                      BNE CODE_00F1AE                     ;;F1A3|----/----\----;
                      LDA.B #$05                          ;;F1A5|----/----\----;
                      LDY.W !GreenStarBlockCoins          ;;F1A7|----/----\----;
                      BEQ CODE_00F1D0                     ;;F1AA|----/----\----;
                      BRA CODE_00F1CE                     ;;F1AC|----/----\----;
                                                          ;;                   ;
CODE_00F1AE:          LSR A                               ;;F1AE|----/----\----;
                      LDA.B !TouchBlockXPos               ;;F1AF|----/----\----;
                      ROR A                               ;;F1B1|----/----\----;
                      LSR A                               ;;F1B2|----/----\----;
                      LSR A                               ;;F1B3|----/----\----;
                      LSR A                               ;;F1B4|----/----\----;
                      TAX                                 ;;F1B5|----/----\----;
                      LDA.L DATA_00F100,X                 ;;F1B6|----/----\----;
CODE_00F1BA:          LSR A                               ;;F1BA|----/----\----;
                      BCC CODE_00F1D0                     ;;F1BB|----/----\----;
                      CMP.B #$03                          ;;F1BD|----/----\----;
                      BEQ CODE_00F1C9                     ;;F1BF|----/----\----;
                      LDY.B !Powerup                      ;;F1C1|----/----\----;
                      BNE CODE_00F1D0                     ;;F1C3|----/----\----;
                      LDA.B #$01                          ;;F1C5|----/----\----;
                      BRA CODE_00F1D0                     ;;F1C7|----/----\----;
                                                          ;;                   ;
CODE_00F1C9:          LDY.W !InvinsibilityTimer           ;;F1C9|----/----\----; \ Branch if Mario has star 
                      BNE CODE_00F1D0                     ;;F1CC|----/----\----; / 
CODE_00F1CE:          LDA.B #$06                          ;;F1CE|----/----\----;
CODE_00F1D0:          STA.B !_5                           ;;F1D0|----/----\----;
                      CMP.B #$05                          ;;F1D2|----/----\----;
                      BNE +                               ;;F1D4|----/----\----;
                      LDA.B #$16                          ;;F1D6|----/----\----;
                      STA.B !_7                           ;;F1D8|----/----\----;
                    + TAY                                 ;;F1DA|----/----\----;
                      LDA.B #$0F                          ;;F1DB|----/----\----;
                      TRB.B !TouchBlockXPos               ;;F1DD|----/----\----;
                      TRB.B !TouchBlockYPos               ;;F1DF|----/----\----;
                      CPY.B #$06                          ;;F1E1|----/----\----;
                      BNE CODE_00F1EC                     ;;F1E3|----/----\----;
                      LDY.W !ObjectTileset                ;;F1E5|----/----\----;
                      CPY.B #$04                          ;;F1E8|----/----\----;
                      BEQ +                               ;;F1EA|----/----\----;
CODE_00F1EC:          PHB                                 ;;F1EC|----/----\----;
                      LDA.B #$02                          ;;F1ED|----/----\----;
                      PHA                                 ;;F1EF|----/----\----;
                      PLB                                 ;;F1F0|----/----\----;
                      JSL CODE_028752                     ;;F1F1|----/----\----;
                      PLB                                 ;;F1F5|----/----\----;
CODE_00F1F6:          PLX                                 ;;F1F6|----/----\----;
                      CLC                                 ;;F1F7|----/----\----;
Return00F1F8:         RTL                                 ;;F1F8|----/----\----; Return 
                                                          ;;                   ;
                    + LDA.B !TouchBlockYPos+1             ;;F1F9|----/----\----;
                      LSR A                               ;;F1FB|----/----\----;
                      LDA.B !TouchBlockYPos               ;;F1FC|----/----\----;
                      AND.B #$C0                          ;;F1FE|----/----\----;
                      ROL A                               ;;F200|----/----\----;
                      ROL A                               ;;F201|----/----\----;
                      ROL A                               ;;F202|----/----\----;
                      TAY                                 ;;F203|----/----\----;
                      LDA.B !TouchBlockXPos               ;;F204|----/----\----;
                      LSR A                               ;;F206|----/----\----;
                      LSR A                               ;;F207|----/----\----;
                      LSR A                               ;;F208|----/----\----;
                      LSR A                               ;;F209|----/----\----;
                      TAX                                 ;;F20A|----/----\----;
                      LDA.W !PBalloonInflating,Y          ;;F20B|----/----\----;
                      ORA.L DATA_00F0EC,X                 ;;F20E|----/----\----;
                      LDX.W !PBalloonInflating,Y          ;;F212|----/----\----;
                      STA.W !PBalloonInflating,Y          ;;F215|----/----\----;
                      CMP.B #$FF                          ;;F218|----/----\----;
                      BNE CODE_00F226                     ;;F21A|----/----\----;
                      LDA.B #$05                          ;;F21C|----/----\----;
                      STA.B !_5                           ;;F21E|----/----\----;
CODE_00F220:          LDA.B #$17                          ;;F220|----/----\----;
                      STA.B !_7                           ;;F222|----/----\----;
                      BRA CODE_00F1EC                     ;;F224|----/----\----;
                                                          ;;                   ;
CODE_00F226:          LDA.W !DidPlayBonusGame             ;;F226|----/----\----;
                      BNE CODE_00F236                     ;;F229|----/----\----;
                      TXA                                 ;;F22B|----/----\----;
                      BEQ +                               ;;F22C|----/----\----;
                      LDA.B #$02                          ;;F22E|----/----\----;
                    + EOR.B #$03                          ;;F230|----/----\----;
                      AND.B !TrueFrame                    ;;F232|----/----\----;
                      BNE CODE_00F220                     ;;F234|----/----\----;
CODE_00F236:          LDA.B #$2A                          ;;F236|----/----\----;
                      STA.W !SPCIO3                       ;;F238|----/----\----; / Play sound effect 
                      PHY                                 ;;F23B|----/----\----;
                      STZ.B !_5                           ;;F23C|----/----\----;
                      PHB                                 ;;F23E|----/----\----;
                      LDA.B #$02                          ;;F23F|----/----\----; \ Set data bank = $02 
                      PHA                                 ;;F241|----/----\----;  | 
                      PLB                                 ;;F242|----/----\----;
                      JSL CODE_028752                     ;;F243|----/----\----;
                      PLB                                 ;;F247|----/----\----;
                      PLY                                 ;;F248|----/----\----;
                      LDX.B #$07                          ;;F249|----/----\----;
                      LDA.W !PBalloonInflating,Y          ;;F24B|----/----\----;
CODE_00F24E:          LSR A                               ;;F24E|----/----\----;
                      BCS +                               ;;F24F|----/----\----;
                      PHA                                 ;;F251|----/----\----;
                      LDA.B #$0D                          ;;F252|----/----\----; \ Block to generate = Used block 
                      STA.B !Map16TileGenerate            ;;F254|----/----\----; / 
                      LDA.L DATA_00F0F8,X                 ;;F256|----/----\----;
                      STA.B !TouchBlockXPos               ;;F25A|----/----\----;
                      JSL GenerateTile                    ;;F25C|----/----\----;
                      PLA                                 ;;F260|----/----\----;
                    + DEX                                 ;;F261|----/----\----;
                      BPL CODE_00F24E                     ;;F262|----/----\----;
                      JMP CODE_00F1F6                     ;;F264|----/----\----;
                                                          ;;                   ;
CODE_00F267:          CPY.B #$2E                          ;;F267|----/----\----;
                      BNE Return00F28B                    ;;F269|----/----\----;
                      BIT.B !byetudlrFrame                ;;F26B|----/----\----;
                      BVC Return00F28B                    ;;F26D|----/----\----;
                      LDA.W !IsCarryingItem               ;;F26F|----/----\----;
                      ORA.W !PlayerRidingYoshi            ;;F272|----/----\----;
                      BNE Return00F28B                    ;;F275|----/----\----;
                      LDA.B #$02                          ;;F277|----/----\----;
                      PHA                                 ;;F279|----/----\----;
                      PLB                                 ;;F27A|----/----\----;
                      JSL CODE_02862F                     ;;F27B|----/----\----;
                      BMI +                               ;;F27F|----/----\----;
                      LDA.B #$02                          ;;F281|----/----\----; \ Block to generate = #$02 
                      STA.B !Map16TileGenerate            ;;F283|----/----\----; / 
                      JSL GenerateTile                    ;;F285|----/----\----;
                    + PHK                                 ;;F289|----/----\----;
                      PLB                                 ;;F28A|----/----\----;
Return00F28B:         RTS                                 ;;F28B|----/----\----; Return 
                                                          ;;                   ;
CODE_00F28C:          TYA                                 ;;F28C|----/----\----;
                      SEC                                 ;;F28D|----/----\----;
                      SBC.B #$6F                          ;;F28E|----/----\----;
                      CMP.B #$04                          ;;F290|----/----\----;
                      BCS CODE_00F2C0                     ;;F292|----/----\----;
                      CMP.W !OneUpCheckpoints             ;;F294|----/----\----;
                      BEQ CODE_00F2A8                     ;;F297|----/----\----;
                      INC A                               ;;F299|----/----\----;
                      CMP.W !OneUpCheckpoints             ;;F29A|----/----\----;
                      BEQ +                               ;;F29D|----/----\----;
                      LDA.W !OneUpCheckpoints             ;;F29F|----/----\----;
                      CMP.B #$04                          ;;F2A2|----/----\----;
                      BCS +                               ;;F2A4|----/----\----;
                      LDA.B #$FF                          ;;F2A6|----/----\----;
CODE_00F2A8:          INC A                               ;;F2A8|----/----\----;
                      STA.W !OneUpCheckpoints             ;;F2A9|----/----\----;
                      CMP.B #$04                          ;;F2AC|----/----\----;
                      BNE +                               ;;F2AE|----/----\----;
                      PHX                                 ;;F2B0|----/----\----;
                      JSL TriggerInivis1Up                ;;F2B1|----/----\----;
                      JSR CODE_00F3B2                     ;;F2B5|----/----\----;
                      ORA.W !Checkpoint1upCollected,Y     ;;F2B8|----/----\----;
                      STA.W !Checkpoint1upCollected,Y     ;;F2BB|----/----\----;
                      PLX                                 ;;F2BE|----/----\----;
                    + RTS                                 ;;F2BF|----/----\----; Return 
                                                          ;;                   ;
CODE_00F2C0:          LDA.B #$01                          ;;F2C0|----/----\----;
CODE_00F2C2:          CPY.B #$06                          ;;F2C2|----/----\----;
                      BCS CODE_00F2C9                     ;;F2C4|----/----\----;
                      TSB.B !GraphicsCompPtr              ;;F2C6|----/----\----;
                      RTS                                 ;;F2C8|----/----\----; Return 
                                                          ;;                   ;
CODE_00F2C9:          CPY.B #$38                          ;;F2C9|----/----\----;
                      BNE CODE_00F2EE                     ;;F2CB|----/----\----;
                      LDA.B #$02                          ;;F2CD|----/----\----; \ Block to generate = #$02 
                      STA.B !Map16TileGenerate            ;;F2CF|----/----\----; / 
                      JSL GenerateTile                    ;;F2D1|----/----\----;
                      JSR CODE_00FD5A                     ;;F2D5|----/----\----;
                      LDA.W !DisableMidway                ;;F2D8|----/----\----;
                      BEQ +                               ;;F2DB|----/----\----;
                      JSR CODE_00CA2B                     ;;F2DD|----/----\----;
                    + LDA.B !Powerup                      ;;F2E0|----/----\----;
                      BNE +                               ;;F2E2|----/----\----;
                      LDA.B #$01                          ;;F2E4|----/----\----;
                      STA.B !Powerup                      ;;F2E6|----/----\----;
                    + LDA.B #$05                          ;;F2E8|----/----\----;
                      STA.W !SPCIO0                       ;;F2EA|----/----\----; / Play sound effect 
                      RTS                                 ;;F2ED|----/----\----; Return 
                                                          ;;                   ;
CODE_00F2EE:          CPY.B #$06                          ;;F2EE|----/----\----;
                      BEQ CODE_00F2FC                     ;;F2F0|----/----\----;
                      CPY.B #$07                          ;;F2F2|----/----\----;
                      BCC CODE_00F309                     ;;F2F4|----/----\----;
                      CPY.B #$1D                          ;;F2F6|----/----\----;
                      BCS CODE_00F309                     ;;F2F8|----/----\----;
                      ORA.B #$80                          ;;F2FA|----/----\----;
CODE_00F2FC:          CMP.B #$01                          ;;F2FC|----/----\----;
                      BNE +                               ;;F2FE|----/----\----;
                      ORA.B #$18                          ;;F300|----/----\----;
                    + TSB.B !GraphicsCompPtr+1            ;;F302|----/----\----;
                      LDA.B !PlayerBlockXSide             ;;F304|----/----\----;
                      STA.B !GraphicsCompPtr+2            ;;F306|----/----\----;
                      RTS                                 ;;F308|----/----\----; Return 
                                                          ;;                   ;
CODE_00F309:          CPY.B #$2F                          ;;F309|----/----\----;
                      BCS CODE_00F311                     ;;F30B|----/----\----;
                      CPY.B #$2A                          ;;F30D|----/----\----;
                      BCS CODE_00F32B                     ;;F30F|----/----\----;
CODE_00F311:          CPY.B #$6E                          ;;F311|----/----\----;
                      BNE Return00F376                    ;;F313|----/----\----;
                      LDA.B #$0F                          ;;F315|----/----\----;
                      JSL CODE_00F38A                     ;;F317|----/----\----;
                      INC.W !MoonCounter                  ;;F31B|----/----\----;
                      PHX                                 ;;F31E|----/----\----;
                      JSR CODE_00F3B2                     ;;F31F|----/----\----;
                      ORA.W !MoonCollected,Y              ;;F322|----/----\----;
                      STA.W !MoonCollected,Y              ;;F325|----/----\----;
                      PLX                                 ;;F328|----/----\----;
                      BRA CODE_00F36B                     ;;F329|----/----\----;
                                                          ;;                   ;
CODE_00F32B:          BNE CODE_00F332                     ;;F32B|----/----\----;YOSHI COIN HANDLER        
                      LDA.W !BluePSwitchTimer             ;;F32D|----/----\----;
                      BEQ Return00F376                    ;;F330|----/----\----;
CODE_00F332:          CPY.B #$2D                          ;;F332|----/----\----;
                      BEQ CODE_00F33F                     ;;F334|----/----\----;
                      BCC CODE_00F367                     ;;F336|----/----\----;
                      LDA.B !TouchBlockYPos               ;;F338|----/----\----;
                      SEC                                 ;;F33A|----/----\----;
                      SBC.B #$10                          ;;F33B|----/----\----;
                      STA.B !TouchBlockYPos               ;;F33D|----/----\----;
CODE_00F33F:          JSL CODE_00F377                     ;;F33F|----/----\----;
                      INC.W !DragonCoinsShown             ;;F343|----/----\----;
                      LDA.W !DragonCoinsShown             ;;F346|----/----\----;
                      CMP.B #$05                          ;;F349|----/----\----;
                      BCC +                               ;;F34B|----/----\----;
                      PHX                                 ;;F34D|----/----\----;
                      JSR CODE_00F3B2                     ;;F34E|----/----\----;
                      ORA.W !AllDragonCoinsCollected,Y    ;;F351|----/----\----;
                      STA.W !AllDragonCoinsCollected,Y    ;;F354|----/----\----;
                      PLX                                 ;;F357|----/----\----;
                    + LDA.B #$1C                          ;;F358|----/----\----;
                      STA.W !SPCIO0                       ;;F35A|----/----\----; / Play sound effect 
                      LDA.B #$01                          ;;F35D|----/----\----;
                      JSL CODE_05B330                     ;;F35F|----/----\----;
                      LDY.B #$18                          ;;F363|----/----\----;
                      BRA +                               ;;F365|----/----\----;
                                                          ;;                   ;
CODE_00F367:          JSL CODE_05B34A                     ;;F367|----/----\----;
CODE_00F36B:          LDY.B #$01                          ;;F36B|----/----\----; \ Block to generate = #$01 
                    + STY.B !Map16TileGenerate            ;;F36D|----/----\----; / 
                      JSL GenerateTile                    ;;F36F|----/----\----;
                      JSR CODE_00FD5A                     ;;F373|----/----\----;
Return00F376:         RTS                                 ;;F376|----/----\----; Return 
                                                          ;;                   ;
CODE_00F377:          LDA.W !DragonCoinsCollected         ;;F377|----/----\----;
                      INC.W !DragonCoinsCollected         ;;F37A|----/----\----;
                      CLC                                 ;;F37D|----/----\----;
                      ADC.B #$09                          ;;F37E|----/----\----;
                      CMP.B #$0D                          ;;F380|----/----\----;
                      BCC +                               ;;F382|----/----\----;
                      LDA.B #$0D                          ;;F384|----/----\----;
                    + BRA CODE_00F38A                     ;;F386|----/----\----;
                                                          ;;                   ;
CODE_00F388:          LDA.B #$0D                          ;;F388|----/----\----;
CODE_00F38A:          PHA                                 ;;F38A|----/----\----;
                      JSL CODE_02AD34                     ;;F38B|----/----\----;
                      PLA                                 ;;F38F|----/----\----;
                      STA.W !ScoreSpriteNumber,Y          ;;F390|----/----\----;
                      LDA.B !PlayerXPosNext               ;;F393|----/----\----;
                      STA.W !ScoreSpriteXPosLow,Y         ;;F395|----/----\----;
                      LDA.B !PlayerXPosNext+1             ;;F398|----/----\----;
                      STA.W !ScoreSpriteXPosHigh,Y        ;;F39A|----/----\----;
                      LDA.B !PlayerYPosNext               ;;F39D|----/----\----;
                      STA.W !ScoreSpriteYPosLow,Y         ;;F39F|----/----\----;
                      LDA.B !PlayerYPosNext+1             ;;F3A2|----/----\----;
                      STA.W !ScoreSpriteYPosHigh,Y        ;;F3A4|----/----\----;
                      LDA.B #$30                          ;;F3A7|----/----\----;
                      STA.W !ScoreSpriteTimer,Y           ;;F3A9|----/----\----;
                      LDA.B #$00                          ;;F3AC|----/----\----;
                      STA.W !ScoreSpriteLayer,Y           ;;F3AE|----/----\----;
                      RTL                                 ;;F3B1|----/----\----; Return 
                                                          ;;                   ;
CODE_00F3B2:          LDA.W !TranslevelNo                 ;;F3B2|----/----\----;
                      LSR A                               ;;F3B5|----/----\----;
                      LSR A                               ;;F3B6|----/----\----;
                      LSR A                               ;;F3B7|----/----\----;
                      TAY                                 ;;F3B8|----/----\----;
                      LDA.W !TranslevelNo                 ;;F3B9|----/----\----;
                      AND.B #$07                          ;;F3BC|----/----\----;
                      TAX                                 ;;F3BE|----/----\----;
                      LDA.L DATA_05B35B,X                 ;;F3BF|----/----\----;
                      RTS                                 ;;F3C3|----/----\----; Return 
                                                          ;;                   ;
CODE_00F3C4:          CPY.B #$3F                          ;;F3C4|----/----\----;
                      BNE Return00F376                    ;;F3C6|----/----\----;
                      LDY.B !GraphicsUncompPtr+2          ;;F3C8|----/----\----;
                      BEQ +                               ;;F3CA|----/----\----;
                      JMP CODE_00F43F                     ;;F3CC|----/----\----;
                                                          ;;                   ;
                    + PHX                                 ;;F3CF|----/----\----;
                      TAX                                 ;;F3D0|----/----\----;
                      LDA.B !PlayerXPosNext               ;;F3D1|----/----\----;
                      TXY                                 ;;F3D3|----/----\----;
                      BEQ +                               ;;F3D4|----/----\----;
                      EOR.B #$FF                          ;;F3D6|----/----\----;
                      INC A                               ;;F3D8|----/----\----;
                    + AND.B #$0F                          ;;F3D9|----/----\----;
                      ASL A                               ;;F3DB|----/----\----;
                      CLC                                 ;;F3DC|----/----\----;
                      ADC.B #$20                          ;;F3DD|----/----\----;
                      LDY.B #$05                          ;;F3DF|----/----\----;
                      BRA CODE_00F40A                     ;;F3E1|----/----\----;
                                                          ;;                   ;
                                                          ;;                   ;
DATA_00F3E3:          db $0A,$FF                          ;;F3E3|----/----\----;
                                                          ;;                   ;
DATA_00F3E5:          db $02,$01,$08,$04                  ;;F3E5|----/----\----;
                                                          ;;                   ;
CODE_00F3E9:          XBA                                 ;;F3E9|----/----\----;
                      TYA                                 ;;F3EA|----/----\----;
                      SEC                                 ;;F3EB|----/----\----;
                      SBC.B #$37                          ;;F3EC|----/----\----;
                      CMP.B #$02                          ;;F3EE|----/----\----;
                      BCS Return00F442                    ;;F3F0|----/----\----;
                      TAY                                 ;;F3F2|----/----\----;
                      LDA.B !PlayerXPosInBlock            ;;F3F3|----/----\----;
                      SBC.W DATA_00F3E3,Y                 ;;F3F5|----/----\----;
                      CMP.B #$05                          ;;F3F8|----/----\----;
                      BCS CODE_00F43F                     ;;F3FA|----/----\----;
                      PHX                                 ;;F3FC|----/----\----;
                      XBA                                 ;;F3FD|----/----\----;
                      TAX                                 ;;F3FE|----/----\----;
                      LDA.B #$20                          ;;F3FF|----/----\----;
                      LDY.W !PlayerRidingYoshi            ;;F401|----/----\----;
                      BEQ +                               ;;F404|----/----\----;
                      LDA.B #$30                          ;;F406|----/----\----;
                    + LDY.B #$06                          ;;F408|----/----\----;
CODE_00F40A:          STA.B !PipeTimer                    ;;F40A|----/----\----;
                      LDA.B !byetudlrHold                 ;;F40C|----/----\----;
                      AND.W DATA_00F3E5,X                 ;;F40E|----/----\----;
                      BEQ CODE_00F43E                     ;;F411|----/----\----;
                      STA.B !SpriteLock                   ;;F413|----/----\----;
                      AND.B #$01                          ;;F415|----/----\----;
                      STA.B !PlayerDirection              ;;F417|----/----\----;
                      STX.B !PlayerPipeAction             ;;F419|----/----\----;
                      TXA                                 ;;F41B|----/----\----;
                      LSR A                               ;;F41C|----/----\----;
                      TAX                                 ;;F41D|----/----\----;
                      BNE +                               ;;F41E|----/----\----;
                      LDA.W !IsCarryingItem               ;;F420|----/----\----;
                      BEQ +                               ;;F423|----/----\----;
                      LDA.B !PlayerDirection              ;;F425|----/----\----;
                      EOR.B #$01                          ;;F427|----/----\----;
                      STA.B !PlayerDirection              ;;F429|----/----\----;
                      LDA.B #$08                          ;;F42B|----/----\----;
                      STA.W !FaceScreenTimer              ;;F42D|----/----\----;
                    + INX                                 ;;F430|----/----\----;
                      STX.W !YoshiInPipeSetting           ;;F431|----/----\----;
                      STY.B !PlayerAnimation              ;;F434|----/----\----;
                      JSR NoButtons                       ;;F436|----/----\----;
                      LDA.B #$04                          ;;F439|----/----\----;
                      STA.W !SPCIO0                       ;;F43B|----/----\----; / Play sound effect 
CODE_00F43E:          PLX                                 ;;F43E|----/----\----;
CODE_00F43F:          LDY.W !Map16TileNumber              ;;F43F|----/----\----;
Return00F442:         RTS                                 ;;F442|----/----\----; Return 
                                                          ;;                   ;
CODE_00F443:          LDA.B !PlayerXPosNext               ;;F443|----/----\----;
                      CLC                                 ;;F445|----/----\----;
                      ADC.B #$04                          ;;F446|----/----\----;
                      AND.B #$0F                          ;;F448|----/----\----;
                      CMP.B #$08                          ;;F44A|----/----\----;
                      RTS                                 ;;F44C|----/----\----; Return 
                                                          ;;                   ;
CODE_00F44D:          INX                                 ;;F44D|----/----\----;
                      INX                                 ;;F44E|----/----\----;
                      REP #$20                            ;;F44F|----/----\----; Accum (16 bit) 
                      LDA.B !PlayerXPosNext               ;;F451|----/----\----;
                      CLC                                 ;;F453|----/----\----;
                      ADC.W DATA_00E830,X                 ;;F454|----/----\----;
                      STA.B !TouchBlockXPos               ;;F457|----/----\----;
                      LDA.B !PlayerYPosNext               ;;F459|----/----\----;
                      CLC                                 ;;F45B|----/----\----;
                      ADC.W DATA_00E89C,X                 ;;F45C|----/----\----;
                      STA.B !TouchBlockYPos               ;;F45F|----/----\----;
CODE_00F461:          JSR CODE_00F465                     ;;F461|----/----\----;
                      RTS                                 ;;F464|----/----\----; Return 
                                                          ;;                   ;
CODE_00F465:          SEP #$20                            ;;F465|----/----\----; Accum (8 bit) 
                      STZ.W !SwitchPalacePressed          ;;F467|----/----\----;
                      PHX                                 ;;F46A|----/----\----;
                      LDA.B !GraphicsUncompPtr+1          ;;F46B|----/----\----;
                      BPL +                               ;;F46D|----/----\----;
                      JMP CODE_00F4EC                     ;;F46F|----/----\----;
                                                          ;;                   ;
                    + BNE CODE_00F4A6                     ;;F472|----/----\----;
                      REP #$20                            ;;F474|----/----\----; Accum (16 bit) 
                      LDA.B !TouchBlockYPos               ;;F476|----/----\----;
                      CMP.W #$01B0                        ;;F478|----/----\----;
                      SEP #$20                            ;;F47B|----/----\----; Accum (8 bit) 
                      BCS CODE_00F4A0                     ;;F47D|----/----\----;
                      AND.B #$F0                          ;;F47F|----/----\----;
                      STA.B !_0                           ;;F481|----/----\----;
                      LDX.B !TouchBlockXPos+1             ;;F483|----/----\----;
                      CPX.B !LevelScrLength               ;;F485|----/----\----;
                      BCS CODE_00F4A0                     ;;F487|----/----\----;
                      LDA.B !TouchBlockXPos               ;;F489|----/----\----;
                      LSR A                               ;;F48B|----/----\----;
                      LSR A                               ;;F48C|----/----\----;
                      LSR A                               ;;F48D|----/----\----;
                      LSR A                               ;;F48E|----/----\----;
                      ORA.B !_0                           ;;F48F|----/----\----;
                      CLC                                 ;;F491|----/----\----;
                      ADC.L DATA_00BA60,X                 ;;F492|----/----\----;
                      STA.B !_0                           ;;F496|----/----\----;
                      LDA.B !TouchBlockYPos+1             ;;F498|----/----\----;
                      ADC.L DATA_00BA9C,X                 ;;F49A|----/----\----;
                      BRA CODE_00F4CD                     ;;F49E|----/----\----;
                                                          ;;                   ;
CODE_00F4A0:          PLX                                 ;;F4A0|----/----\----;
                      LDY.B #$25                          ;;F4A1|----/----\----;
CODE_00F4A3:          LDA.B #$00                          ;;F4A3|----/----\----;
                      RTS                                 ;;F4A5|----/----\----; Return 
                                                          ;;                   ;
CODE_00F4A6:          LDA.B !TouchBlockXPos+1             ;;F4A6|----/----\----;
                      CMP.B #$02                          ;;F4A8|----/----\----;
                      BCS CODE_00F4E7                     ;;F4AA|----/----\----;
                      LDX.B !TouchBlockYPos+1             ;;F4AC|----/----\----;
                      CPX.B !LevelScrLength               ;;F4AE|----/----\----;
                      BCS CODE_00F4E7                     ;;F4B0|----/----\----;
                      LDA.B !TouchBlockYPos               ;;F4B2|----/----\----;
                      AND.B #$F0                          ;;F4B4|----/----\----;
                      STA.B !_0                           ;;F4B6|----/----\----;
                      LDA.B !TouchBlockXPos               ;;F4B8|----/----\----;
                      LSR A                               ;;F4BA|----/----\----;
                      LSR A                               ;;F4BB|----/----\----;
                      LSR A                               ;;F4BC|----/----\----;
                      LSR A                               ;;F4BD|----/----\----;
                      ORA.B !_0                           ;;F4BE|----/----\----;
                      CLC                                 ;;F4C0|----/----\----;
                      ADC.L DATA_00BA80,X                 ;;F4C1|----/----\----;
                      STA.B !_0                           ;;F4C5|----/----\----;
                      LDA.B !TouchBlockXPos+1             ;;F4C7|----/----\----;
                      ADC.L DATA_00BABC,X                 ;;F4C9|----/----\----;
CODE_00F4CD:          STA.B !_1                           ;;F4CD|----/----\----;
                      LDA.B #$7E                          ;;F4CF|----/----\----;
                      STA.B !_2                           ;;F4D1|----/----\----;
                      LDA.B [!_0]                         ;;F4D3|----/----\----;
                      STA.W !Map16TileNumber              ;;F4D5|----/----\----;
                      INC.B !_2                           ;;F4D8|----/----\----;
                      PLX                                 ;;F4DA|----/----\----;
                      LDA.B [!_0]                         ;;F4DB|----/----\----;
                      JSL CODE_00F545                     ;;F4DD|----/----\----;
                      LDY.W !Map16TileNumber              ;;F4E1|----/----\----;
                      CMP.B #$00                          ;;F4E4|----/----\----;
                      RTS                                 ;;F4E6|----/----\----; Return 
                                                          ;;                   ;
CODE_00F4E7:          PLX                                 ;;F4E7|----/----\----;
                      LDY.B #$25                          ;;F4E8|----/----\----;
                      BRA CODE_00F4A3                     ;;F4EA|----/----\----;
                                                          ;;                   ;
CODE_00F4EC:          ASL A                               ;;F4EC|----/----\----;
                      BNE CODE_00F51B                     ;;F4ED|----/----\----;
                      REP #$20                            ;;F4EF|----/----\----; Accum (16 bit) 
                      LDA.B !TouchBlockYPos               ;;F4F1|----/----\----;
                      CMP.W #$01B0                        ;;F4F3|----/----\----;
                      SEP #$20                            ;;F4F6|----/----\----; Accum (8 bit) 
                      BCS CODE_00F4E7                     ;;F4F8|----/----\----;
                      AND.B #$F0                          ;;F4FA|----/----\----;
                      STA.B !_0                           ;;F4FC|----/----\----;
                      LDX.B !TouchBlockXPos+1             ;;F4FE|----/----\----;
                      CPX.B #$10                          ;;F500|----/----\----;
                      BCS CODE_00F4E7                     ;;F502|----/----\----;
                      LDA.B !TouchBlockXPos               ;;F504|----/----\----;
                      LSR A                               ;;F506|----/----\----;
                      LSR A                               ;;F507|----/----\----;
                      LSR A                               ;;F508|----/----\----;
                      LSR A                               ;;F509|----/----\----;
                      ORA.B !_0                           ;;F50A|----/----\----;
                      CLC                                 ;;F50C|----/----\----;
                      ADC.L DATA_00BA70,X                 ;;F50D|----/----\----;
                      STA.B !_0                           ;;F511|----/----\----;
                      LDA.B !TouchBlockYPos+1             ;;F513|----/----\----;
                      ADC.L DATA_00BAAC,X                 ;;F515|----/----\----;
                      BRA CODE_00F4CD                     ;;F519|----/----\----;
                                                          ;;                   ;
CODE_00F51B:          LDA.B !TouchBlockXPos+1             ;;F51B|----/----\----;
                      CMP.B #$02                          ;;F51D|----/----\----;
                      BCS CODE_00F4E7                     ;;F51F|----/----\----;
                      LDX.B !TouchBlockYPos+1             ;;F521|----/----\----;
                      CPX.B #$0E                          ;;F523|----/----\----;
                      BCS CODE_00F4E7                     ;;F525|----/----\----;
                      LDA.B !TouchBlockYPos               ;;F527|----/----\----;
                      AND.B #$F0                          ;;F529|----/----\----;
                      STA.B !_0                           ;;F52B|----/----\----;
                      LDA.B !TouchBlockXPos               ;;F52D|----/----\----;
                      LSR A                               ;;F52F|----/----\----;
                      LSR A                               ;;F530|----/----\----;
                      LSR A                               ;;F531|----/----\----;
                      LSR A                               ;;F532|----/----\----;
                      ORA.B !_0                           ;;F533|----/----\----;
                      CLC                                 ;;F535|----/----\----;
                      ADC.L DATA_00BA8E,X                 ;;F536|----/----\----;
                      STA.B !_0                           ;;F53A|----/----\----;
                      LDA.B !TouchBlockXPos+1             ;;F53C|----/----\----;
                      ADC.L DATA_00BACA,X                 ;;F53E|----/----\----;
                      JMP CODE_00F4CD                     ;;F542|----/----\----;
                                                          ;;                   ;
CODE_00F545:          TAY                                 ;;F545|----/----\----;
                      BNE CODE_00F577                     ;;F546|----/----\----;
                      LDY.W !Map16TileNumber              ;;F548|----/----\----; Load MAP16 tile number 
                      CPY.B #$29                          ;;F54B|----/----\----; \ If block isn't "Invisible POW ? block", 
                      BNE PSwitchNotInvQBlk               ;;F54D|----/----\----; / branch to PSwitchNotInvQBlk 
                      LDY.W !BluePSwitchTimer             ;;F54F|----/----\----;
                      BEQ Return00F594                    ;;F552|----/----\----;
                      LDA.B #$24                          ;;F554|----/----\----;
                      STA.W !Map16TileNumber              ;;F556|----/----\----;
                      RTL                                 ;;F559|----/----\----; Return 
                                                          ;;                   ;
PSwitchNotInvQBlk:    CPY.B #$2B                          ;;F55A|----/----\----; \ If block is "Coin", 
                      BEQ PSwitchCoinBrown                ;;F55C|----/----\----; / branch to PSwitchCoinBrown 
                      TYA                                 ;;F55E|----/----\----;
                      SEC                                 ;;F55F|----/----\----;
                      SBC.B #$EC                          ;;F560|----/----\----;
                      CMP.B #$10                          ;;F562|----/----\----;
                      BCS CODE_00F592                     ;;F564|----/----\----;
                      INC A                               ;;F566|----/----\----;
                      STA.W !SwitchPalacePressed          ;;F567|----/----\----;
                      BRA CODE_00F571                     ;;F56A|----/----\----;
                                                          ;;                   ;
PSwitchCoinBrown:     LDY.W !BluePSwitchTimer             ;;F56C|----/----\----;
                      BEQ Return00F594                    ;;F56F|----/----\----;
CODE_00F571:          LDA.B #$32                          ;;F571|----/----\----;
                      STA.W !Map16TileNumber              ;;F573|----/----\----;
                      RTL                                 ;;F576|----/----\----; Return 
                                                          ;;                   ;
CODE_00F577:          LDY.W !Map16TileNumber              ;;F577|----/----\----;
                      CPY.B #$32                          ;;F57A|----/----\----;
                      BNE CODE_00F584                     ;;F57C|----/----\----;
                      LDY.W !BluePSwitchTimer             ;;F57E|----/----\----;
                      BNE CODE_00F58D                     ;;F581|----/----\----;
                      RTL                                 ;;F583|----/----\----; Return 
                                                          ;;                   ;
CODE_00F584:          CPY.B #$2F                          ;;F584|----/----\----;
                      BNE Return00F594                    ;;F586|----/----\----;
                      LDY.W !SilverPSwitchTimer           ;;F588|----/----\----;
                      BEQ Return00F594                    ;;F58B|----/----\----;
CODE_00F58D:          LDY.B #$2B                          ;;F58D|----/----\----;
                      STY.W !Map16TileNumber              ;;F58F|----/----\----;
CODE_00F592:          LDA.B #$00                          ;;F592|----/----\----;
Return00F594:         RTL                                 ;;F594|----/----\----; Return 
                                                          ;;                   ;
CODE_00F595:          REP #$20                            ;;F595|----/----\----; Accum (16 bit) 
                      LDA.W #$FF80                        ;;F597|----/----\----;
                      CLC                                 ;;F59A|----/----\----;
                      ADC.B !Layer1YPos                   ;;F59B|----/----\----;
                      CMP.B !PlayerYPosNext               ;;F59D|----/----\----;
                      BMI +                               ;;F59F|----/----\----;
                      STA.B !PlayerYPosNext               ;;F5A1|----/----\----;
                    + SEP #$20                            ;;F5A3|----/----\----; Accum (8 bit) 
                      LDA.B !PlayerYPosScrRel+1           ;;F5A5|----/----\----;
                      DEC A                               ;;F5A7|----/----\----;
                      BMI Return00F5B6                    ;;F5A8|----/----\----;
                      LDA.W !YoshiHeavenFlag              ;;F5AA|----/----\----;
                      BEQ +                               ;;F5AD|----/----\----;
                      JMP CODE_00C95B                     ;;F5AF|----/----\----;
                                                          ;;                   ;
                    + JSL CODE_00F60A                     ;;F5B2|----/----\----;
Return00F5B6:         RTS                                 ;;F5B6|----/----\----; Return 
                                                          ;;                   ;
HurtMario:            LDA.B !PlayerAnimation              ;;F5B7|----/----\----; \ Return if animation sequence activated 
                      BNE Return00F628                    ;;F5B9|----/----\----; / 
                      LDA.W !IFrameTimer                  ;;F5BB|----/----\----; \ If flashing... 
                      ORA.W !InvinsibilityTimer           ;;F5BE|----/----\----;  | ...or have star... 
                      ORA.W !EndLevelTimer                ;;F5C1|----/----\----;  | ...or level ending... 
                      BNE Return00F628                    ;;F5C4|----/----\----; / ...return 
                      STZ.W !GameCloudCoinCount           ;;F5C6|----/----\----;
                      LDA.W !WallrunningType              ;;F5C9|----/----\----;
                      BEQ +                               ;;F5CC|----/----\----;
                      PHB                                 ;;F5CE|----/----\----;
                      PHK                                 ;;F5CF|----/----\----;
                      PLB                                 ;;F5D0|----/----\----;
                      JSR ADDR_00EB42                     ;;F5D1|----/----\----;
                      PLB                                 ;;F5D4|----/----\----;
                    + LDA.B !Powerup                      ;;F5D5|----/----\----; \ If Mario is small, kill him 
                      BEQ KillMario                       ;;F5D7|----/----\----; / 
                      CMP.B #$02                          ;;F5D9|----/----\----; \ Branch if not Caped Mario 
                      BNE PowerDown                       ;;F5DB|----/----\----; / 
                      LDA.W !FlightPhase                  ;;F5DD|----/----\----; \ Branch if not soaring 
                      BEQ PowerDown                       ;;F5E0|----/----\----; / 
                      LDY.B #$0F                          ;;F5E2|----/----\----; \ Break Mario out of soaring 
                      STY.W !SPCIO0                       ;;F5E4|----/----\----;  | (Play sound effect) 
                      LDA.B #$01                          ;;F5E7|----/----\----;  | (Set spin jump flag) 
                      STA.W !SpinJumpFlag                 ;;F5E9|----/----\----;  | 
                      LDA.B #$30                          ;;F5EC|----/----\----;  | (Set flashing timer) 
                      STA.W !IFrameTimer                  ;;F5EE|----/----\----; / 
                      BRA CODE_00F622                     ;;F5F1|----/----\----;
                                                          ;;                   ;
PowerDown:            LDY.B #$04                          ;;F5F3|----/----\----; \ Play sound effect 
                      STY.W !SPCIO0                       ;;F5F5|----/----\----; / 
                      JSL CODE_028008                     ;;F5F8|----/----\----;
                      LDA.B #$01                          ;;F5FC|----/----\----; \ Set power down animation 
                      STA.B !PlayerAnimation              ;;F5FE|----/----\----; / 
                      STZ.B !Powerup                      ;;F600|----/----\----; Mario status = Small 
                      LDA.B #$2F                          ;;F602|----/----\----;
                      BRA +                               ;;F604|----/----\----;
                                                          ;;                   ;
KillMario:            LDA.B #$90                          ;;F606|----/----\----; \ Mario Y speed = #$90 
                      STA.B !PlayerYSpeed                 ;;F608|----/----\----; / 
CODE_00F60A:          LDA.B #$09                          ;;F60A|----/----\----; \ 
                      STA.W !SPCIO2                       ;;F60C|----/----\----; / Change music 
                      LDA.B #$FF                          ;;F60F|----/----\----;
                      STA.W !MusicBackup                  ;;F611|----/----\----;
                      LDA.B #$09                          ;;F614|----/----\----; \ Animation sequence = Kill Mario 
                      STA.B !PlayerAnimation              ;;F616|----/----\----; / 
                      STZ.W !SpinJumpFlag                 ;;F618|----/----\----; Spin jump flag = 0 
                      LDA.B #$30                          ;;F61B|----/----\----;
                    + STA.W !PlayerAniTimer               ;;F61D|----/----\----; Set hurt frame timer 
                      STA.B !SpriteLock                   ;;F620|----/----\----; set lock sprite timer 
CODE_00F622:          STZ.W !FlightPhase                  ;;F622|----/----\----; Cape status = 0 
                      STZ.W !Empty188A                    ;;F625|----/----\----;
Return00F628:         RTL                                 ;;F628|----/----\----; Return 
                                                          ;;                   ;
CODE_00F629:          JSL KillMario                       ;;F629|----/----\----;
NoButtons:            STZ.B !byetudlrHold                 ;;F62D|----/----\----; Zero RAM mirrors for controller Input 
                      STZ.B !byetudlrFrame                ;;F62F|----/----\----;
                      STZ.B !axlr0000Hold                 ;;F631|----/----\----;
                      STZ.B !axlr0000Frame                ;;F633|----/----\----;
                      RTS                                 ;;F635|----/----\----; Return 
                                                          ;;                   ;
CODE_00F636:          REP #$20                            ;;F636|----/----\----; Accum (16 bit) 
                      LDX.B #$00                          ;;F638|----/----\----;
                      LDA.B !_9                           ;;F63A|----/----\----;
                      ORA.W #$0800                        ;;F63C|----/----\----;
                      CMP.B !_9                           ;;F63F|----/----\----;
                      BEQ +                               ;;F641|----/----\----;
                      CLC                                 ;;F643|----/----\----;
                    + AND.W #$F700                        ;;F644|----/----\----;
                      ROR A                               ;;F647|----/----\----;
                      LSR A                               ;;F648|----/----\----;
                      ADC.W #$2000                        ;;F649|----/----\----;
                      STA.W !DynGfxTilePtr                ;;F64C|----/----\----;
                      CLC                                 ;;F64F|----/----\----;
                      ADC.W #$0200                        ;;F650|----/----\----;
                      STA.W !DynGfxTilePtr+$0A            ;;F653|----/----\----;
                      LDX.B #$00                          ;;F656|----/----\----;
                      LDA.B !_A                           ;;F658|----/----\----;
                      ORA.W #$0800                        ;;F65A|----/----\----;
                      CMP.B !_A                           ;;F65D|----/----\----;
                      BEQ +                               ;;F65F|----/----\----;
                      CLC                                 ;;F661|----/----\----;
                    + AND.W #$F700                        ;;F662|----/----\----;
                      ROR A                               ;;F665|----/----\----;
                      LSR A                               ;;F666|----/----\----;
                      ADC.W #$2000                        ;;F667|----/----\----;
                      STA.W !DynGfxTilePtr+2              ;;F66A|----/----\----;
                      CLC                                 ;;F66D|----/----\----;
                      ADC.W #$0200                        ;;F66E|----/----\----;
                      STA.W !DynGfxTilePtr+$0C            ;;F671|----/----\----;
                      LDA.B !_B                           ;;F674|----/----\----;
                      AND.W #$FF00                        ;;F676|----/----\----;
                      LSR A                               ;;F679|----/----\----;
                      LSR A                               ;;F67A|----/----\----;
                      LSR A                               ;;F67B|----/----\----;
                      ADC.W #$2000                        ;;F67C|----/----\----;
                      STA.W !DynGfxTilePtr+4              ;;F67F|----/----\----;
                      CLC                                 ;;F682|----/----\----;
                      ADC.W #$0200                        ;;F683|----/----\----;
                      STA.W !DynGfxTilePtr+$0E            ;;F686|----/----\----;
                      LDA.B !_C                           ;;F689|----/----\----;
                      AND.W #$FF00                        ;;F68B|----/----\----;
                      LSR A                               ;;F68E|----/----\----;
                      LSR A                               ;;F68F|----/----\----;
                      LSR A                               ;;F690|----/----\----;
                      ADC.W #$2000                        ;;F691|----/----\----;
                      STA.W !DynGfxTile7FPtr              ;;F694|----/----\----;
                      SEP #$20                            ;;F697|----/----\----; Accum (8 bit) 
                      LDA.B #$0A                          ;;F699|----/----\----;
                      STA.W !PlayerGfxTileCount           ;;F69B|----/----\----;
                      RTS                                 ;;F69E|----/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
DATA_00F69F:          db $64,$00,$7C,$00                  ;;F69F|----/----\----;
                                                          ;;                   ;
DATA_00F6A3:          db $00,$00,$FF,$FF                  ;;F6A3|----/----\----;
                                                          ;;                   ;
DATA_00F6A7:          db $FD,$FF,$05,$00,$FA,$FF          ;;F6A7|----/----\----;
                                                          ;;                   ;
DATA_00F6AD:          db $00,$00,$00,$00,$C0,$00          ;;F6AD|----/----\----;
                                                          ;;                   ;
DATA_00F6B3:          db $90,$00,$60,$00,$00,$00,$00,$00  ;;F6B3|----/----\----;
                      db $00,$00,$00,$00                  ;;F6BB|----/----\----;
                                                          ;;                   ;
DATA_00F6BF:          db $00,$00,$FE,$FF,$02,$00,$00,$00  ;;F6BF|----/----\----;
                      db $FE,$FF,$02,$00                  ;;F6C7|----/----\----;
                                                          ;;                   ;
DATA_00F6CB:          db $00,$00,$20,$00                  ;;F6CB|----/----\----;
                                                          ;;                   ;
DATA_00F6CF:          db $D0,$00,$00,$00,$20,$00,$D0,$00  ;;F6CF|----/----\----;
                      db $01,$00,$FF,$FF                  ;;F6D7|----/----\----;
                                                          ;;                   ;
CODE_00F6DB:          PHB                                 ;;F6DB|----/----\----;
                      PHK                                 ;;F6DC|----/----\----;
                      PLB                                 ;;F6DD|----/----\----;
                      REP #$20                            ;;F6DE|----/----\----; Accum (16 bit) 
                      LDA.W !CameraMoveTrigger            ;;F6E0|----/----\----;
                      SEC                                 ;;F6E3|----/----\----;
                      SBC.W #$000C                        ;;F6E4|----/----\----;
                      STA.W !CameraLeftBuffer             ;;F6E7|----/----\----;
                      CLC                                 ;;F6EA|----/----\----;
                      ADC.W #$0018                        ;;F6EB|----/----\----;
                      STA.W !CameraRightBuffer            ;;F6EE|----/----\----;
                      LDA.W !NextLayer1XPos               ;;F6F1|----/----\----;
                      STA.B !Layer1XPos                   ;;F6F4|----/----\----;
                      LDA.W !NextLayer1YPos               ;;F6F6|----/----\----;
                      STA.B !Layer1YPos                   ;;F6F9|----/----\----;
                      LDA.W !NextLayer2XPos               ;;F6FB|----/----\----;
                      STA.B !Layer2XPos                   ;;F6FE|----/----\----;
                      LDA.W !NextLayer2YPos               ;;F700|----/----\----;
                      STA.B !Layer2YPos                   ;;F703|----/----\----;
                      LDA.B !ScreenMode                   ;;F705|----/----\----;
                      LSR A                               ;;F707|----/----\----;
                      BCC +                               ;;F708|----/----\----;
                      JMP CODE_00F75C                     ;;F70A|----/----\----;
                                                          ;;                   ;
                    + LDA.W #$00C0                        ;;F70D|----/----\----;
                      JSR CODE_00F7F4                     ;;F710|----/----\----;
                      LDY.W !HorizLayer1Setting           ;;F713|----/----\----;
                      BEQ CODE_00F75A                     ;;F716|----/----\----;
                      LDY.B #$02                          ;;F718|----/----\----;
                      LDA.B !PlayerXPosNext               ;;F71A|----/----\----;
                      SEC                                 ;;F71C|----/----\----;
                      SBC.B !Layer1XPos                   ;;F71D|----/----\----;
                      STA.B !_0                           ;;F71F|----/----\----;
                      CMP.W !CameraMoveTrigger            ;;F721|----/----\----;
                      BPL +                               ;;F724|----/----\----;
                      LDY.B #$00                          ;;F726|----/----\----;
                    + STY.B !Layer1ScrollDir              ;;F728|----/----\----;
                      STY.B !Layer2ScrollDir              ;;F72A|----/----\----;
                      SEC                                 ;;F72C|----/----\----;
                      SBC.W !CameraLeftBuffer,Y           ;;F72D|----/----\----;
                      BEQ CODE_00F75A                     ;;F730|----/----\----;
                      STA.B !_2                           ;;F732|----/----\----;
                      EOR.W DATA_00F6A3,Y                 ;;F734|----/----\----;
                      BPL CODE_00F75A                     ;;F737|----/----\----;
                      JSR CODE_00F8AB                     ;;F739|----/----\----;
                      LDA.B !_2                           ;;F73C|----/----\----;
                      CLC                                 ;;F73E|----/----\----;
                      ADC.B !Layer1XPos                   ;;F73F|----/----\----;
                      BPL +                               ;;F741|----/----\----;
                      LDA.W #$0000                        ;;F743|----/----\----;
                    + STA.B !Layer1XPos                   ;;F746|----/----\----;
                      LDA.B !LastScreenHoriz              ;;F748|----/----\----;
                      DEC A                               ;;F74A|----/----\----;
                      XBA                                 ;;F74B|----/----\----;
                      AND.W #$FF00                        ;;F74C|----/----\----;
                      BPL +                               ;;F74F|----/----\----;
                      LDA.W #$0080                        ;;F751|----/----\----;
                    + CMP.B !Layer1XPos                   ;;F754|----/----\----;
                      BPL CODE_00F75A                     ;;F756|----/----\----;
                      STA.B !Layer1XPos                   ;;F758|----/----\----;
CODE_00F75A:          BRA CODE_00F79D                     ;;F75A|----/----\----;
                                                          ;;                   ;
CODE_00F75C:          LDA.B !LastScreenVert               ;;F75C|----/----\----;
                      DEC A                               ;;F75E|----/----\----;
                      XBA                                 ;;F75F|----/----\----;
                      AND.W #$FF00                        ;;F760|----/----\----;
                      JSR CODE_00F7F4                     ;;F763|----/----\----;
                      LDY.W !HorizLayer1Setting           ;;F766|----/----\----;
                      BEQ CODE_00F79D                     ;;F769|----/----\----;
                      LDY.B #$00                          ;;F76B|----/----\----;
                      LDA.B !PlayerXPosNext               ;;F76D|----/----\----;
                      SEC                                 ;;F76F|----/----\----;
                      SBC.B !Layer1XPos                   ;;F770|----/----\----;
                      STA.B !_0                           ;;F772|----/----\----;
                      CMP.W !CameraMoveTrigger            ;;F774|----/----\----;
                      BMI +                               ;;F777|----/----\----;
                      LDY.B #$02                          ;;F779|----/----\----;
                    + SEC                                 ;;F77B|----/----\----;
                      SBC.W !CameraLeftBuffer,Y           ;;F77C|----/----\----;
                      STA.B !_2                           ;;F77F|----/----\----;
                      EOR.W DATA_00F6A3,Y                 ;;F781|----/----\----;
                      BPL CODE_00F79D                     ;;F784|----/----\----;
                      JSR CODE_00F8AB                     ;;F786|----/----\----;
                      LDA.B !_2                           ;;F789|----/----\----;
                      CLC                                 ;;F78B|----/----\----;
                      ADC.B !Layer1XPos                   ;;F78C|----/----\----;
                      BPL +                               ;;F78E|----/----\----;
                      LDA.W #$0000                        ;;F790|----/----\----;
                    + CMP.W #$0101                        ;;F793|----/----\----;
                      BMI +                               ;;F796|----/----\----;
                      LDA.W #$0100                        ;;F798|----/----\----;
                    + STA.B !Layer1XPos                   ;;F79B|----/----\----;
CODE_00F79D:          LDY.W !HorizLayer2Setting           ;;F79D|----/----\----;
                      BEQ CODE_00F7AA                     ;;F7A0|----/----\----;
                      LDA.B !Layer1XPos                   ;;F7A2|----/----\----;
                      DEY                                 ;;F7A4|----/----\----;
                      BEQ +                               ;;F7A5|----/----\----;
                      LSR A                               ;;F7A7|----/----\----;
                    + STA.B !Layer2XPos                   ;;F7A8|----/----\----;
CODE_00F7AA:          LDY.W !VertLayer2Setting            ;;F7AA|----/----\----;
                      BEQ CODE_00F7C2                     ;;F7AD|----/----\----;
                      LDA.B !Layer1YPos                   ;;F7AF|----/----\----;
                      DEY                                 ;;F7B1|----/----\----;
                      BEQ +                               ;;F7B2|----/----\----;
                      LSR A                               ;;F7B4|----/----\----;
                      DEY                                 ;;F7B5|----/----\----;
                      BEQ +                               ;;F7B6|----/----\----;
                      LSR A                               ;;F7B8|----/----\----;
                      LSR A                               ;;F7B9|----/----\----;
                      LSR A                               ;;F7BA|----/----\----;
                      LSR A                               ;;F7BB|----/----\----;
                    + CLC                                 ;;F7BC|----/----\----;
                      ADC.W !BackgroundVertOffset         ;;F7BD|----/----\----;
                      STA.B !Layer2YPos                   ;;F7C0|----/----\----;
CODE_00F7C2:          SEP #$20                            ;;F7C2|----/----\----; Accum (8 bit) 
                      LDA.B !Layer1XPos                   ;;F7C4|----/----\----;
                      SEC                                 ;;F7C6|----/----\----;
                      SBC.W !NextLayer1XPos               ;;F7C7|----/----\----;
                      STA.W !Layer1DXPos                  ;;F7CA|----/----\----;
                      LDA.B !Layer1YPos                   ;;F7CD|----/----\----;
                      SEC                                 ;;F7CF|----/----\----;
                      SBC.W !NextLayer1YPos               ;;F7D0|----/----\----;
                      STA.W !Layer1DYPos                  ;;F7D3|----/----\----;
                      LDA.B !Layer2XPos                   ;;F7D6|----/----\----;
                      SEC                                 ;;F7D8|----/----\----;
                      SBC.W !NextLayer2XPos               ;;F7D9|----/----\----;
                      STA.W !Layer2DXPos                  ;;F7DC|----/----\----;
                      LDA.B !Layer2YPos                   ;;F7DF|----/----\----;
                      SEC                                 ;;F7E1|----/----\----;
                      SBC.W !NextLayer2YPos               ;;F7E2|----/----\----;
                      STA.W !Layer2DYPos                  ;;F7E5|----/----\----;
                      LDX.B #$07                          ;;F7E8|----/----\----;
                    - LDA.B !Layer1XPos,X                 ;;F7EA|----/----\----;
                      STA.W !NextLayer1XPos,X             ;;F7EC|----/----\----;
                      DEX                                 ;;F7EF|----/----\----;
                      BPL -                               ;;F7F0|----/----\----;
                      PLB                                 ;;F7F2|----/----\----;
                      RTL                                 ;;F7F3|----/----\----; Return 
                                                          ;;                   ;
CODE_00F7F4:          LDX.W !VertLayer1Setting            ;;F7F4|----/----\----;
                      BNE +                               ;;F7F7|----/----\----;
                      RTS                                 ;;F7F9|----/----\----; Return 
                                                          ;;                   ;
                    + STA.B !_4                           ;;F7FA|----/----\----; Accum (16 bit) 
                      LDY.B #$00                          ;;F7FC|----/----\----;
                      LDA.B !PlayerYPosNext               ;;F7FE|----/----\----;
                      SEC                                 ;;F800|----/----\----;
                      SBC.B !Layer1YPos                   ;;F801|----/----\----;
                      STA.B !_0                           ;;F803|----/----\----;
                      CMP.W #$0070                        ;;F805|----/----\----;
                      BMI +                               ;;F808|----/----\----;
                      LDY.B #$02                          ;;F80A|----/----\----;
                    + STY.B !Layer1ScrollDir              ;;F80C|----/----\----;
                      STY.B !Layer2ScrollDir              ;;F80E|----/----\----;
                      SEC                                 ;;F810|----/----\----;
                      SBC.W DATA_00F69F,Y                 ;;F811|----/----\----;
                      STA.B !_2                           ;;F814|----/----\----;
                      EOR.W DATA_00F6A3,Y                 ;;F816|----/----\----;
                      BMI +                               ;;F819|----/----\----;
                      LDY.B #$02                          ;;F81B|----/----\----;
                      STZ.B !_2                           ;;F81D|----/----\----;
                    + LDA.B !_2                           ;;F81F|----/----\----;
                      BMI CODE_00F82A                     ;;F821|----/----\----;
                      LDX.B #$00                          ;;F823|----/----\----;
                      STX.W !ScreenScrollAtWill           ;;F825|----/----\----;
                      BRA CODE_00F883                     ;;F828|----/----\----;
                                                          ;;                   ;
CODE_00F82A:          SEP #$20                            ;;F82A|----/----\----; Accum (8 bit) 
                      LDA.W !WallrunningType              ;;F82C|----/----\----;
                      CMP.B #$06                          ;;F82F|----/----\----;
                      BCS +                               ;;F831|----/----\----;
                      LDA.W !YoshiHasWingsGfx             ;;F833|----/----\----; \ If winged Yoshi... 
                      LSR A                               ;;F836|----/----\----;  | 
                      ORA.W !TakeoffTimer                 ;;F837|----/----\----;
                      ORA.B !PlayerIsClimbing             ;;F83A|----/----\----;  | ...or climbing 
                      ORA.W !PBalloonInflating            ;;F83C|----/----\----;
                      ORA.W !PlayerInCloud                ;;F83F|----/----\----;
                      ORA.W !BouncingOnBoard              ;;F842|----/----\----;
                    + TAX                                 ;;F845|----/----\----;
                      REP #$20                            ;;F846|----/----\----; Accum (16 bit) 
                      BNE CODE_00F869                     ;;F848|----/----\----;
                      LDX.W !PlayerRidingYoshi            ;;F84A|----/----\----;
                      BEQ CODE_00F856                     ;;F84D|----/----\----;
                      LDX.W !YoshiHasWingsEvt             ;;F84F|----/----\----; \ Branch if 141E >= #$02 
                      CPX.B #$02                          ;;F852|----/----\----;  | 
                      BCS CODE_00F869                     ;;F854|----/----\----; / 
CODE_00F856:          LDX.B !PlayerInWater                ;;F856|----/----\----;
                      BEQ CODE_00F85E                     ;;F858|----/----\----;
                      LDX.B !PlayerInAir                  ;;F85A|----/----\----;
                      BNE CODE_00F869                     ;;F85C|----/----\----;
CODE_00F85E:          LDX.W !VertLayer1Setting            ;;F85E|----/----\----;
                      DEX                                 ;;F861|----/----\----;
                      BEQ CODE_00F875                     ;;F862|----/----\----;
                      LDX.W !VerticalScrollEnabled        ;;F864|----/----\----;
                      BNE CODE_00F875                     ;;F867|----/----\----;
CODE_00F869:          STX.W !VerticalScrollEnabled        ;;F869|----/----\----;
                      LDX.W !VerticalScrollEnabled        ;;F86C|----/----\----;
                      BNE CODE_00F881                     ;;F86F|----/----\----;
                      LDY.B #$04                          ;;F871|----/----\----;
                      BRA CODE_00F881                     ;;F873|----/----\----;
                                                          ;;                   ;
CODE_00F875:          LDX.W !ScreenScrollAtWill           ;;F875|----/----\----;
                      BNE CODE_00F881                     ;;F878|----/----\----;
                      LDX.B !PlayerInAir                  ;;F87A|----/----\----;
                      BNE Return00F8AA                    ;;F87C|----/----\----;
                      INC.W !ScreenScrollAtWill           ;;F87E|----/----\----;
CODE_00F881:          LDA.B !_2                           ;;F881|----/----\----;
CODE_00F883:          SEC                                 ;;F883|----/----\----;
                      SBC.W DATA_00F6A7,Y                 ;;F884|----/----\----;
                      EOR.W DATA_00F6A7,Y                 ;;F887|----/----\----;
                      ASL A                               ;;F88A|----/----\----;
                      LDA.B !_2                           ;;F88B|----/----\----;
                      BCS +                               ;;F88D|----/----\----;
                      LDA.W DATA_00F6A7,Y                 ;;F88F|----/----\----;
                    + CLC                                 ;;F892|----/----\----;
                      ADC.B !Layer1YPos                   ;;F893|----/----\----;
                      CMP.W DATA_00F6AD,Y                 ;;F895|----/----\----;
                      BPL +                               ;;F898|----/----\----;
                      LDA.W DATA_00F6AD,Y                 ;;F89A|----/----\----;
                    + STA.B !Layer1YPos                   ;;F89D|----/----\----;
                      LDA.B !_4                           ;;F89F|----/----\----;
                      CMP.B !Layer1YPos                   ;;F8A1|----/----\----;
                      BPL Return00F8AA                    ;;F8A3|----/----\----;
                      STA.B !Layer1YPos                   ;;F8A5|----/----\----;
                      STZ.W !VerticalScrollEnabled        ;;F8A7|----/----\----;
Return00F8AA:         RTS                                 ;;F8AA|----/----\----; Return 
                                                          ;;                   ;
CODE_00F8AB:          LDY.W !CameraIsScrolling            ;;F8AB|----/----\----;
                      BNE Return00F8DE                    ;;F8AE|----/----\----;
                      SEP #$20                            ;;F8B0|----/----\----; Accum (8 bit) 
                      LDX.W !CameraScrollPlayerDir        ;;F8B2|----/----\----;
                      REP #$20                            ;;F8B5|----/----\----; Accum (16 bit) 
                      LDY.B #$08                          ;;F8B7|----/----\----;
                      LDA.W !CameraMoveTrigger            ;;F8B9|----/----\----;
                      CMP.W DATA_00F6B3,X                 ;;F8BC|----/----\----;
                      BPL +                               ;;F8BF|----/----\----;
                      LDY.B #$0A                          ;;F8C1|----/----\----;
                    + LDA.W DATA_00F6BF,Y                 ;;F8C3|----/----\----;
                      EOR.B !_2                           ;;F8C6|----/----\----;
                      BPL Return00F8DE                    ;;F8C8|----/----\----;
                      LDA.W DATA_00F6BF,X                 ;;F8CA|----/----\----;
                      EOR.B !_2                           ;;F8CD|----/----\----;
                      BPL Return00F8DE                    ;;F8CF|----/----\----;
                      LDA.B !_2                           ;;F8D1|----/----\----;
                      CLC                                 ;;F8D3|----/----\----;
                      ADC.W DATA_00F6CF,Y                 ;;F8D4|----/----\----;
                      BEQ Return00F8DE                    ;;F8D7|----/----\----;
                      STA.B !_2                           ;;F8D9|----/----\----;
                      STY.W !CameraProperMove             ;;F8DB|----/----\----;
Return00F8DE:         RTS                                 ;;F8DE|----/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
DATA_00F8DF:          db $0C,$0C,$08,$00,$20,$04,$0A,$0D  ;;F8DF|----/----\----;
                      db $0D                              ;;F8E7|----/----\----;
                                                          ;;                   ;
DATA_00F8E8:          db $2A,$00,$2A,$00,$12,$00,$00,$00  ;;F8E8|----/----\----;
                      db $ED,$FF                          ;;F8F0|----/----\----;
                                                          ;;                   ;
CODE_00F8F2:          JSR CODE_00EAA6                     ;;F8F2|----/----\----;
                      BIT.W !IRQNMICommand                ;;F8F5|----/----\----;
                      BVC CODE_00F94E                     ;;F8F8|----/----\----;
                      JSR CODE_00E92B                     ;;F8FA|----/----\----;
                      LDA.W !ActiveBoss                   ;;F8FD|----/----\----;
                      ASL A                               ;;F900|----/----\----;
                      TAX                                 ;;F901|----/----\----;
                      PHX                                 ;;F902|----/----\----;
                      LDY.B !PlayerYSpeed                 ;;F903|----/----\----;
                      BPL +                               ;;F905|----/----\----;
                      REP #$20                            ;;F907|----/----\----; Accum (16 bit) 
                      LDA.B !PlayerYPosNext               ;;F909|----/----\----;
                      CMP.W DATA_00F8E8,X                 ;;F90B|----/----\----;
                      BPL +                               ;;F90E|----/----\----;
                      LDA.W DATA_00F8E8,X                 ;;F910|----/----\----;
                      STA.B !PlayerYPosNext               ;;F913|----/----\----;
                      SEP #$20                            ;;F915|----/----\----; Accum (8 bit) 
                      STZ.B !PlayerYSpeed                 ;;F917|----/----\----;
                      LDA.B #$01                          ;;F919|----/----\----;
                      STA.W !SPCIO0                       ;;F91B|----/----\----; / Play sound effect 
                    + SEP #$20                            ;;F91E|----/----\----; Accum (8 bit) 
                      PLX                                 ;;F920|----/----\----;
                      LDA.W DATA_00F8E8,X                 ;;F921|----/----\----;
                      CMP.B #$2A                          ;;F924|----/----\----;
                      BNE Return00F94D                    ;;F926|----/----\----;
                      REP #$20                            ;;F928|----/----\----; Accum (16 bit) 
                      LDY.B #$00                          ;;F92A|----/----\----;
                      LDA.W !SpriteMisc160E+9             ;;F92C|----/----\----;
                      AND.W #$00FF                        ;;F92F|----/----\----;
                      INC A                               ;;F932|----/----\----;
                      CMP.B !PlayerXPosNext               ;;F933|----/----\----;
                      BEQ +                               ;;F935|----/----\----;
                      BMI +                               ;;F937|----/----\----;
                      LDA.W !SpriteMisc1534+9             ;;F939|----/----\----;
                      AND.W #$00FF                        ;;F93C|----/----\----;
                      STA.B !_0                           ;;F93F|----/----\----;
                      INY                                 ;;F941|----/----\----;
                      LDA.B !PlayerXPosNext               ;;F942|----/----\----;
                      CLC                                 ;;F944|----/----\----;
                      ADC.W #$000F                        ;;F945|----/----\----;
                      CMP.B !_0                           ;;F948|----/----\----;
                    + JMP CODE_00E9C8                     ;;F94A|----/----\----;
                                                          ;;                   ;
Return00F94D:         RTS                                 ;;F94D|----/----\----; Return 
                                                          ;;                   ;
CODE_00F94E:          LDY.B #$00                          ;;F94E|----/----\----;
                      LDA.B !PlayerYSpeed                 ;;F950|----/----\----;
                      BPL +                               ;;F952|----/----\----;
                      JMP CODE_00F997                     ;;F954|----/----\----;
                                                          ;;                   ;
                    + JSR CODE_00F9A8                     ;;F957|----/----\----;
                      BCS +                               ;;F95A|----/----\----;
                      JSR CODE_00EE1D                     ;;F95C|----/----\----;
                      JMP CODE_00F997                     ;;F95F|----/----\----;
                                                          ;;                   ;
                    + LDA.B !PlayerInAir                  ;;F962|----/----\----;
                      BEQ +                               ;;F964|----/----\----;
                      REP #$20                            ;;F966|----/----\----; Accum (16 bit) 
                      LDA.W !BrSwingPlatXPos              ;;F968|----/----\----;
                      AND.W #$00FF                        ;;F96B|----/----\----;
                      STA.W !BrSwingXDist                 ;;F96E|----/----\----;
                      STA.W !KeyholeXPos                  ;;F971|----/----\----;
                      LDA.W !BrSwingPlatYPos              ;;F974|----/----\----;
                      AND.W #$00F0                        ;;F977|----/----\----;
                      STA.W !BrSwingYDist                 ;;F97A|----/----\----;
                      STA.W !KeyholeYPos                  ;;F97D|----/----\----;
                      JSR CODE_00F9C9                     ;;F980|----/----\----;
                    + LDA.B !Mode7Angle                   ;;F983|----/----\----; Accum (8 bit) 
                      CLC                                 ;;F985|----/----\----;
                      ADC.B #$48                          ;;F986|----/----\----;
                      LSR A                               ;;F988|----/----\----;
                      LSR A                               ;;F989|----/----\----;
                      LSR A                               ;;F98A|----/----\----;
                      LSR A                               ;;F98B|----/----\----;
                      TAX                                 ;;F98C|----/----\----;
                      LDY.W DATA_00F8DF,X                 ;;F98D|----/----\----;
                      LDA.B #$80                          ;;F990|----/----\----;
                      STA.B !GraphicsUncompPtr+1          ;;F992|----/----\----;
                      JSR CODE_00EEE1                     ;;F994|----/----\----;
CODE_00F997:          REP #$20                            ;;F997|----/----\----; Accum (16 bit) 
                      LDA.B !PlayerYPosScrRel             ;;F999|----/----\----;
                      CMP.W #$00AE                        ;;F99B|----/----\----;
                      SEP #$20                            ;;F99E|----/----\----; Accum (8 bit) 
                      BMI +                               ;;F9A0|----/----\----;
                      JSR CODE_00F629                     ;;F9A2|----/----\----;
                    + JMP CODE_00E98C                     ;;F9A5|----/----\----;
                                                          ;;                   ;
CODE_00F9A8:          REP #$20                            ;;F9A8|----/----\----; Accum (16 bit) 
                      LDA.B !PlayerXPosNext               ;;F9AA|----/----\----;
                      CLC                                 ;;F9AC|----/----\----;
                      ADC.W #$0008                        ;;F9AD|----/----\----;
                      STA.W !BrSwingXDist                 ;;F9B0|----/----\----;
                      LDA.B !PlayerYPosNext               ;;F9B3|----/----\----;
                      CLC                                 ;;F9B5|----/----\----;
                      ADC.W #$0020                        ;;F9B6|----/----\----;
                      STA.W !BrSwingYDist                 ;;F9B9|----/----\----;
CODE_00F9BC:          SEP #$20                            ;;F9BC|----/----\----; Accum (8 bit) 
                      PHB                                 ;;F9BE|----/----\----;
                      LDA.B #$01                          ;;F9BF|----/----\----;
                      PHA                                 ;;F9C1|----/----\----;
                      PLB                                 ;;F9C2|----/----\----;
                      JSL CODE_01CC9D                     ;;F9C3|----/----\----;
                      PLB                                 ;;F9C7|----/----\----;
                      RTS                                 ;;F9C8|----/----\----; Return 
                                                          ;;                   ;
CODE_00F9C9:          LDA.B !Mode7Angle                   ;;F9C9|----/----\----; Accum (16 bit) 
                      PHA                                 ;;F9CB|----/----\----;
                      EOR.W #$FFFF                        ;;F9CC|----/----\----;
                      INC A                               ;;F9CF|----/----\----;
                      STA.B !Mode7Angle                   ;;F9D0|----/----\----;
                      JSR CODE_00F9BC                     ;;F9D2|----/----\----;
                      REP #$20                            ;;F9D5|----/----\----; Accum (16 bit) 
                      PLA                                 ;;F9D7|----/----\----;
                      STA.B !Mode7Angle                   ;;F9D8|----/----\----;
                      LDA.W !BrSwingPlatXPos              ;;F9DA|----/----\----;
                      AND.W #$00FF                        ;;F9DD|----/----\----;
                      SEC                                 ;;F9E0|----/----\----;
                      SBC.W #$0008                        ;;F9E1|----/----\----;
                      STA.B !PlayerXPosNext               ;;F9E4|----/----\----;
                      LDA.W !BrSwingPlatYPos              ;;F9E6|----/----\----;
                      AND.W #$00FF                        ;;F9E9|----/----\----;
                      SEC                                 ;;F9EC|----/----\----;
                      SBC.W #$0020                        ;;F9ED|----/----\----;
                      STA.B !PlayerYPosNext               ;;F9F0|----/----\----;
                      SEP #$20                            ;;F9F2|----/----\----; Accum (8 bit) 
                      RTS                                 ;;F9F4|----/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
                      db $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF  ;;F9F5|----/----\----;
                      db $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF  ;;F9FD|----/----\----;
                      db $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF  ;;FA05|----/----\----;
                      db $FF,$FF,$FF                      ;;FA0D|----/----\----;
                                                          ;;                   ;
                      LDX.B #$0B                          ;;FA10|----/----\----; \ Unreachable 
                    - STZ.W !SpriteStatus,X               ;;FA12|----/----\----;  | Clear out sprite status table 
                      DEX                                 ;;FA15|----/----\----;  | 
                      BPL -                               ;;FA16|----/----\----;  | 
                      RTL                                 ;;FA18|----/----\----; / 
                                                          ;;                   ;
CODE_00FA19:          LDY.B #$32                          ;;FA19|----/----\----;
                      STY.B !_5                           ;;FA1B|----/----\----;
                      LDY.B #$E6                          ;;FA1D|----/----\----;
                      STY.B !_6                           ;;FA1F|----/----\----;
                      LDY.B #$00                          ;;FA21|----/----\----;
                      STY.B !_7                           ;;FA23|----/----\----;
                      SEC                                 ;;FA25|----/----\----;
                      SBC.B #$6E                          ;;FA26|----/----\----;
                      TAY                                 ;;FA28|----/----\----;
                      LDA.B [!SlopesPtr],Y                ;;FA29|----/----\----;
                      STA.B !_8                           ;;FA2B|----/----\----;
                      ASL A                               ;;FA2D|----/----\----;
                      ASL A                               ;;FA2E|----/----\----;
                      ASL A                               ;;FA2F|----/----\----;
                      ASL A                               ;;FA30|----/----\----;
                      STA.B !_1                           ;;FA31|----/----\----;
                      BCC +                               ;;FA33|----/----\----;
                      INC.B !_6                           ;;FA35|----/----\----;
                    + LDA.B !_C                           ;;FA37|----/----\----;
                      AND.B #$0F                          ;;FA39|----/----\----;
                      STA.B !_0                           ;;FA3B|----/----\----;
                      LDA.B !_A                           ;;FA3D|----/----\----;
                      AND.B #$0F                          ;;FA3F|----/----\----;
                      ORA.B !_1                           ;;FA41|----/----\----;
                      TAY                                 ;;FA43|----/----\----;
                      RTL                                 ;;FA44|----/----\----; Return 
                                                          ;;                   ;
FlatPalaceSwitch:     LDA.B #$20                          ;;FA45|----/----\----; \ Set "Time to shake ground" to x20 
                      STA.W !ScreenShakeTimer             ;;FA47|----/----\----; / 
                      LDY.B #$02                          ;;FA4A|----/----\----; \  
                      LDA.B #$60                          ;;FA4C|----/----\----;  |Set sprite x02 to x60 (Flat palace switch) 
                      STA.W !SpriteNumber,Y               ;;FA4E|----/----\----; /  
                      LDA.B #$08                          ;;FA51|----/----\----; \ Set sprite's status to x08 
                      STA.W !SpriteStatus,Y               ;;FA53|----/----\----; /  
                      LDA.B !TouchBlockXPos               ;;FA56|----/----\----; \  
                      AND.B #$F0                          ;;FA58|----/----\----;  |Set sprite X (low) to $9A & 0xF0 
                      STA.W !SpriteXPosLow,Y              ;;FA5A|----/----\----; /  
                      LDA.B !TouchBlockXPos+1             ;;FA5D|----/----\----; \ Set sprite X (high) to $9B 
                      STA.W !SpriteYPosHigh,Y             ;;FA5F|----/----\----; /  
                      LDA.B !TouchBlockYPos               ;;FA62|----/----\----; \  
                      AND.B #$F0                          ;;FA64|----/----\----;  | 
                      CLC                                 ;;FA66|----/----\----;  |Set sprite Y (low) to ($98 & 0xF0) + 0x10 
                      ADC.B #$10                          ;;FA67|----/----\----;  | 
                      STA.W !SpriteYPosLow,Y              ;;FA69|----/----\----; /  
                      LDA.B !TouchBlockYPos+1             ;;FA6C|----/----\----; \  
                      ADC.B #$00                          ;;FA6E|----/----\----;  |Set sprite Y (high) to $99 + carry 
                      STA.W !SpriteXPosHigh,Y             ;;FA70|----/----\----; / (Carry carried over from previous addition) 
                      PHX                                 ;;FA73|----/----\----;
                      TYX                                 ;;FA74|----/----\----;
                      JSL InitSpriteTables                ;;FA75|----/----\----;
                      PLX                                 ;;FA79|----/----\----;
                      LDA.B #$5F                          ;;FA7A|----/----\----; \ Set sprite's "Spin Jump Death Frame Counter" to x5F 
                      STA.W !SpriteMisc1540,Y             ;;FA7C|----/----\----; /  
                      RTS                                 ;;FA7F|----/----\----; Return 
                                                          ;;                   ;
TriggerGoalTape:      STZ.W !PBalloonInflating            ;;FA80|----/----\----;
                      STZ.W !PBalloonTimer                ;;FA83|----/----\----;
                      STZ.W !SpriteRespawnTimer           ;;FA86|----/----\----; Don't respawn sprites 
                      STZ.W !CurrentGenerator             ;;FA89|----/----\----;
                      STZ.W !SilverCoinsCollected         ;;FA8C|----/----\----;
                      LDY.B #$0B                          ;;FA8F|----/----\----; Loop over sprites: 
LvlEndSprLoopStrt:    LDA.W !SpriteStatus,Y               ;;FA91|----/----\----; \ If sprite status < 8, 
                      CMP.B #$08                          ;;FA94|----/----\----;  | skip the current sprite 
                      BCC LvlEndNextSprite                ;;FA96|----/----\----; / 
                      CMP.B #$0B                          ;;FA98|----/----\----; \ If Mario carries a sprite past the goal, 
                      BNE CODE_00FAA3                     ;;FA9A|----/----\----;  | 
                      PHX                                 ;;FA9C|----/----\----;  | 
                      JSR LvlEndPowerUp                   ;;FA9D|----/----\----;  | he gets a powerup 
                      PLX                                 ;;FAA0|----/----\----;  | 
                      BRA LvlEndNextSprite                ;;FAA1|----/----\----; / 
                                                          ;;                   ;
CODE_00FAA3:          LDA.W !SpriteNumber,Y               ;;FAA3|----/----\----; \ Branch if goal tape 
                      CMP.B #$7B                          ;;FAA6|----/----\----;  | 
                      BEQ CODE_00FAB2                     ;;FAA8|----/----\----; / 
                      LDA.W !SpriteOffscreenX,Y           ;;FAAA|----/----\----; \ If sprite on screen... 
                      ORA.W !SpriteOffscreenVert,Y        ;;FAAD|----/----\----;  | 
                      BNE CODE_00FAC5                     ;;FAB0|----/----\----;  | 
CODE_00FAB2:          LDA.W !SpriteTweakerE,Y             ;;FAB2|----/----\----;  | ...and "don't turn into coin" not set, 
                      AND.B #$20                          ;;FAB5|----/----\----;  | 
                      BNE CODE_00FAC5                     ;;FAB7|----/----\----;  | 
                      LDA.B #$10                          ;;FAB9|----/----\----;  | Set coin animation timer = #$10 
                      STA.W !SpriteMisc1540,Y             ;;FABB|----/----\----;  | 
                      LDA.B #$06                          ;;FABE|----/----\----;  | Sprite status = Level end, turn to coins 
                      STA.W !SpriteStatus,Y               ;;FAC0|----/----\----;  | 
                      BRA LvlEndNextSprite                ;;FAC3|----/----\----; / 
                                                          ;;                   ;
CODE_00FAC5:          LDA.W !SpriteTweakerF,Y             ;;FAC5|----/----\----; \ If "don't erase" not set, 
                      AND.B #$02                          ;;FAC8|----/----\----;  | 
                      BNE LvlEndNextSprite                ;;FACA|----/----\----;  | 
                      LDA.B #$00                          ;;FACC|----/----\----;  | Erase sprite 
                      STA.W !SpriteStatus,Y               ;;FACE|----/----\----; / 
LvlEndNextSprite:     DEY                                 ;;FAD1|----/----\----; \ Goto next sprite 
                      BPL LvlEndSprLoopStrt               ;;FAD2|----/----\----; / 
                      LDY.B #$07                          ;;FAD4|----/----\----; \ 
                      LDA.B #$00                          ;;FAD6|----/----\----;  | Clear out all extended sprites 
                    - STA.W !ExtSpriteNumber,Y            ;;FAD8|----/----\----;  | 
                      DEY                                 ;;FADB|----/----\----;  | 
                      BPL -                               ;;FADC|----/----\----; / 
                      RTL                                 ;;FADE|----/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
DATA_00FADF:          db $74,$74,$77,$75,$76,$E0,$F0,$74  ;;FADF|----/----\----;
                      db $74,$77,$75,$76,$E0,$F1,$F0,$F0  ;;FAE7|----/----\----;
                      db $F0,$F0,$F1,$E0,$F2,$E0,$E0,$E0  ;;FAEF|----/----\----;
                      db $E0,$F1,$E0,$E4                  ;;FAF7|----/----\----;
                                                          ;;                   ;
DATA_00FAFB:          db $FF,$74,$75,$76,$77              ;;FAFB|----/----\----;
                                                          ;;                   ;
LvlEndPowerUp:        LDX.B !Powerup                      ;;FB00|----/----\----; X = Mario's power up status 
                      LDA.W !InvinsibilityTimer           ;;FB02|----/----\----; \ If Mario has star, X = #$04.  However this never happens as $1490 is cleared earlier 
                      BEQ +                               ;;FB05|----/----\----;  | Otherwise Mario could get a star from carrying a sprite past the goal. 
                      LDX.B #$04                          ;;FB07|----/----\----; / Unreachable instruction 
                    + LDA.W !PlayerRidingYoshi            ;;FB09|----/----\----; \ If Mario on Yoshi, X = #$05 
                      BEQ +                               ;;FB0C|----/----\----;  | 
                      LDX.B #$05                          ;;FB0E|----/----\----; / 
                    + LDA.W !SpriteNumber,Y               ;;FB10|----/----\----; \ If Spring Board, X += #$07 
                      CMP.B #$2F                          ;;FB13|----/----\----;  | 
                      BEQ CODE_00FB2D                     ;;FB15|----/----\----; / 
                      CMP.B #$3E                          ;;FB17|----/----\----; \ If P Switch, X += #$07 
                      BEQ CODE_00FB2D                     ;;FB19|----/----\----; / 
                      CMP.B #$80                          ;;FB1B|----/----\----; \ If Key, X += #$0E 
                      BEQ ADDR_00FB28                     ;;FB1D|----/----\----; / 
                      CMP.B #$2D                          ;;FB1F|----/----\----; \ If Baby Yoshi, X += #$15 
                      BNE +                               ;;FB21|----/----\----; / 
                      TXA                                 ;;FB23|----/----\----;
                      CLC                                 ;;FB24|----/----\----;
                      ADC.B #$07                          ;;FB25|----/----\----;
                      TAX                                 ;;FB27|----/----\----;
ADDR_00FB28:          TXA                                 ;;FB28|----/----\----;
                      CLC                                 ;;FB29|----/----\----;
                      ADC.B #$07                          ;;FB2A|----/----\----;
                      TAX                                 ;;FB2C|----/----\----;
CODE_00FB2D:          TXA                                 ;;FB2D|----/----\----;
                      CLC                                 ;;FB2E|----/----\----;
                      ADC.B #$07                          ;;FB2F|----/----\----;
                      TAX                                 ;;FB31|----/----\----;
                    + LDA.L DATA_00FADF,X                 ;;FB32|----/----\----;
                      LDX.W !PlayerItembox                ;;FB36|----/----\----;
                      CMP.L DATA_00FAFB,X                 ;;FB39|----/----\----;
                      BNE +                               ;;FB3D|----/----\----;
                      LDA.B #$78                          ;;FB3F|----/----\----;
                    + STZ.B !_F                           ;;FB41|----/----\----;
                      CMP.B #$E0                          ;;FB43|----/----\----;
                      BCC +                               ;;FB45|----/----\----;
                      PHA                                 ;;FB47|----/----\----;
                      AND.B #$0F                          ;;FB48|----/----\----;
                      STA.B !_F                           ;;FB4A|----/----\----;
                      PLA                                 ;;FB4C|----/----\----;
                      CMP.B #$F0                          ;;FB4D|----/----\----;
                      LDA.B #$78                          ;;FB4F|----/----\----;
                      BCS +                               ;;FB51|----/----\----;
                      LDA.B #$78                          ;;FB53|----/----\----;
                    + STA.W !SpriteNumber,Y               ;;FB55|----/----\----;
                      CMP.B #$76                          ;;FB58|----/----\----;
                      BNE +                               ;;FB5A|----/----\----;
                      INC.W !UnusedStarCounter            ;;FB5C|----/----\----;
                    + TYX                                 ;;FB5F|----/----\----;
                      JSL InitSpriteTables                ;;FB60|----/----\----;
                      LDA.B !_F                           ;;FB64|----/----\----;
                      STA.W !SpriteMisc1594,Y             ;;FB66|----/----\----;
                      LDA.B #$0C                          ;;FB69|----/----\----; \ Sprite status = Goal tape power up 
                      STA.W !SpriteStatus,Y               ;;FB6B|----/----\----; / 
                      LDA.B #$D0                          ;;FB6E|----/----\----;
                      STA.W !SpriteYSpeed,Y               ;;FB70|----/----\----;
                      LDA.B #$05                          ;;FB73|----/----\----;
                      STA.W !SpriteXSpeed,Y               ;;FB75|----/----\----;
                      LDA.B #$20                          ;;FB78|----/----\----;
                      STA.W !SpriteMisc154C,Y             ;;FB7A|----/----\----;
                      LDA.B #$0C                          ;;FB7D|----/----\----;
                      STA.W !SPCIO0                       ;;FB7F|----/----\----; / Play sound effect 
                      LDX.B #$03                          ;;FB82|----/----\----;
CODE_00FB84:          LDA.W !SmokeSpriteNumber,X          ;;FB84|----/----\----;
                      BEQ CODE_00FB8D                     ;;FB87|----/----\----;
                      DEX                                 ;;FB89|----/----\----;
                      BPL CODE_00FB84                     ;;FB8A|----/----\----;
                      RTS                                 ;;FB8C|----/----\----; Return 
                                                          ;;                   ;
CODE_00FB8D:          LDA.B #$01                          ;;FB8D|----/----\----;
                      STA.W !SmokeSpriteNumber,X          ;;FB8F|----/----\----;
                      LDA.W !SpriteYPosLow,Y              ;;FB92|----/----\----;
                      STA.W !SmokeSpriteYPos,X            ;;FB95|----/----\----;
                      LDA.W !SpriteXPosLow,Y              ;;FB98|----/----\----;
                      STA.W !SmokeSpriteXPos,X            ;;FB9B|----/----\----;
                      LDA.B #$1B                          ;;FB9E|----/----\----;
                      STA.W !SmokeSpriteTimer,X           ;;FBA0|----/----\----;
                      RTS                                 ;;FBA3|----/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
LvlEndSmokeTiles:     db $66,$64,$62,$60,$E8,$EA,$EC,$EA  ;;FBA4|----/----\----;
                                                          ;;                   ;
LvlEndSprCoins:       PHB                                 ;;FBAC|----/----\----;
                      PHK                                 ;;FBAD|----/----\----;
                      PLB                                 ;;FBAE|----/----\----;
                      JSR LvlEndSprCoinsRt                ;;FBAF|----/----\----;
                      PLB                                 ;;FBB2|----/----\----;
                      RTL                                 ;;FBB3|----/----\----; Return 
                                                          ;;                   ;
LvlEndSprCoinsRt:     LDY.B #$00                          ;;FBB4|----/----\----;
                      LDA.W !Layer1DXPos                  ;;FBB6|----/----\----;
                      BPL +                               ;;FBB9|----/----\----;
                      DEY                                 ;;FBBB|----/----\----;
                    + CLC                                 ;;FBBC|----/----\----;
                      ADC.B !SpriteXPosLow,X              ;;FBBD|----/----\----;
                      STA.B !SpriteXPosLow,X              ;;FBBF|----/----\----;
                      TYA                                 ;;FBC1|----/----\----;
                      ADC.W !SpriteYPosHigh,X             ;;FBC2|----/----\----;
                      STA.W !SpriteYPosHigh,X             ;;FBC5|----/----\----;
                      LDA.W !SpriteMisc1540,X             ;;FBC8|----/----\----;
                      BEQ CODE_00FBF0                     ;;FBCB|----/----\----;
                      CMP.B #$01                          ;;FBCD|----/----\----;
                      BNE +                               ;;FBCF|----/----\----;
                      LDA.B #$D0                          ;;FBD1|----/----\----;
                      STA.B !SpriteYSpeed,X               ;;FBD3|----/----\----;
                    + PHX                                 ;;FBD5|----/----\----;
                      LDA.B #$04                          ;;FBD6|----/----\----; \ Use Palette A 
                      STA.W !SpriteOBJAttribute,X         ;;FBD8|----/----\----; / 
                      JSL GenericSprGfxRt2                ;;FBDB|----/----\----;
                      LDA.W !SpriteMisc1540,X             ;;FBDF|----/----\----;
                      LSR A                               ;;FBE2|----/----\----;
                      LSR A                               ;;FBE3|----/----\----;
                      LDY.W !SpriteOAMIndex,X             ;;FBE4|----/----\----; Y = Index into sprite OAM 
                      TAX                                 ;;FBE7|----/----\----;
                      LDA.W LvlEndSmokeTiles,X            ;;FBE8|----/----\----;
                      STA.W !OAMTileNo+$100,Y             ;;FBEB|----/----\----;
                      PLX                                 ;;FBEE|----/----\----;
                      RTS                                 ;;FBEF|----/----\----; Return 
                                                          ;;                   ;
CODE_00FBF0:          INC.W !SpriteMisc1570,X             ;;FBF0|----/----\----;
                      JSL UpdateYPosNoGvtyW               ;;FBF3|----/----\----;
                      INC.B !SpriteYSpeed,X               ;;FBF7|----/----\----;
                      INC.B !SpriteYSpeed,X               ;;FBF9|----/----\----;
                      LDA.B !SpriteYSpeed,X               ;;FBFB|----/----\----;
                      CMP.B #$20                          ;;FBFD|----/----\----;
                      BMI CODE_00FC1E                     ;;FBFF|----/----\----;
                      JSL CODE_05B34A                     ;;FC01|----/----\----;
                      LDA.W !SilverCoinsCollected         ;;FC05|----/----\----;
                      CMP.B #$0D                          ;;FC08|----/----\----;
                      BCC +                               ;;FC0A|----/----\----;
                      LDA.B #$0D                          ;;FC0C|----/----\----;
                    + JSL GivePoints                      ;;FC0E|----/----\----;
                      LDA.W !SilverCoinsCollected         ;;FC12|----/----\----;
                      CLC                                 ;;FC15|----/----\----;
                      ADC.B #$02                          ;;FC16|----/----\----;
                      STA.W !SilverCoinsCollected         ;;FC18|----/----\----;
                      STZ.W !SpriteStatus,X               ;;FC1B|----/----\----;
CODE_00FC1E:          JSL CoinSprGfx                      ;;FC1E|----/----\----;
                      RTS                                 ;;FC22|----/----\----; Return 
                                                          ;;                   ;
                      LDY.B #$0B                          ;;FC23|----/----\----; \ Unreachable instructions 
ADDR_00FC25:          LDA.W !SpriteStatus,Y               ;;FC25|----/----\----; / Status = Carried 
                      CMP.B #$08                          ;;FC28|----/----\----;
                      BNE ADDR_00FC73                     ;;FC2A|----/----\----;
                      LDA.W !SpriteNumber,Y               ;;FC2C|----/----\----;
                      CMP.B #$35                          ;;FC2F|----/----\----;
                      BNE ADDR_00FC73                     ;;FC31|----/----\----;
                      LDA.B #$01                          ;;FC33|----/----\----;
                      STA.W !CarryYoshiThruLvls           ;;FC35|----/----\----;
                      STZ.W !YoshiHasWingsEvt             ;;FC38|----/----\----; No Yoshi wings 
                      LDA.W !SpriteOBJAttribute,Y         ;;FC3B|----/----\----;
                      AND.B #$F1                          ;;FC3E|----/----\----;
                      ORA.B #$0A                          ;;FC40|----/----\----;
                      STA.W !SpriteOBJAttribute,Y         ;;FC42|----/----\----;
                      LDA.W !PlayerRidingYoshi            ;;FC45|----/----\----;
                      BNE +                               ;;FC48|----/----\----;
                      LDA.B !Layer1XPos                   ;;FC4A|----/----\----;
                      SEC                                 ;;FC4C|----/----\----;
                      SBC.B #$10                          ;;FC4D|----/----\----;
                      STA.W !SpriteXPosLow,Y              ;;FC4F|----/----\----;
                      LDA.B !Layer1XPos+1                 ;;FC52|----/----\----;
                      SBC.B #$00                          ;;FC54|----/----\----;
                      STA.W !SpriteYPosHigh,Y             ;;FC56|----/----\----;
                      LDA.B !PlayerYPosNext               ;;FC59|----/----\----;
                      STA.W !SpriteYPosLow,Y              ;;FC5B|----/----\----;
                      LDA.B !PlayerYPosNext+1             ;;FC5E|----/----\----;
                      STA.W !SpriteXPosHigh,Y             ;;FC60|----/----\----;
                      LDA.B #$03                          ;;FC63|----/----\----;
                      STA.W !SpriteTableC2,Y              ;;FC65|----/----\----;
                      LDA.B #$00                          ;;FC68|----/----\----;
                      STA.W !SpriteMisc157C,Y             ;;FC6A|----/----\----;
                      LDA.B #$10                          ;;FC6D|----/----\----;
                      STA.W !SpriteXSpeed,Y               ;;FC6F|----/----\----;
                    + RTL                                 ;;FC72|----/----\----; Return 
                                                          ;;                   ;
ADDR_00FC73:          DEY                                 ;;FC73|----/----\----;
                      BPL ADDR_00FC25                     ;;FC74|----/----\----;
                      STZ.W !CarryYoshiThruLvls           ;;FC76|----/----\----;
                      RTL                                 ;;FC79|----/----\----; Return 
                                                          ;;                   ;
CODE_00FC7A:          LDA.B #$02                          ;;FC7A|----/----\----;
                      STA.W !SPCIO1                       ;;FC7C|----/----\----; / Play sound effect 
                      LDX.B #$00                          ;;FC7F|----/----\----;
                      LDA.W !DisableBonusSprite           ;;FC81|----/----\----;
                      BNE +                               ;;FC84|----/----\----;
                      LDX.B #$05                          ;;FC86|----/----\----;
                      LDA.W !SpriteMemorySetting          ;;FC88|----/----\----;
                      CMP.B #$0A                          ;;FC8B|----/----\----;
                      BEQ +                               ;;FC8D|----/----\----;
                      JSL FindFreeSprSlot                 ;;FC8F|----/----\----; \ X = First free sprite slot, #$03 if none free 
                      TYX                                 ;;FC93|----/----\----;  | 
                      BPL +                               ;;FC94|----/----\----;  | 
                      LDX.B #$03                          ;;FC96|----/----\----; / 
                    + LDA.B #$08                          ;;FC98|----/----\----; \ Status = Normal 
                      STA.W !SpriteStatus,X               ;;FC9A|----/----\----; / 
                      LDA.B #$35                          ;;FC9D|----/----\----; \ Sprite = Yoshi 
                      STA.B !SpriteNumber,X               ;;FC9F|----/----\----; / 
                      LDA.B !PlayerXPosNext               ;;FCA1|----/----\----; \ Yoshi X position = Mario X position 
                      STA.B !SpriteXPosLow,X              ;;FCA3|----/----\----;  | 
                      LDA.B !PlayerXPosNext+1             ;;FCA5|----/----\----;  | 
                      STA.W !SpriteYPosHigh,X             ;;FCA7|----/----\----; / 
                      LDA.B !PlayerYPosNext               ;;FCAA|----/----\----; \ Yoshi's Y position = Mario Y position - #$10 
                      SEC                                 ;;FCAC|----/----\----;  | Mario Y position = Mario Y position - #$10 
                      SBC.B #$10                          ;;FCAD|----/----\----;  | 
                      STA.B !PlayerYPosNext               ;;FCAF|----/----\----;  | 
                      STA.B !SpriteYPosLow,X              ;;FCB1|----/----\----;  | 
                      LDA.B !PlayerYPosNext+1             ;;FCB3|----/----\----;  | 
                      SBC.B #$00                          ;;FCB5|----/----\----;  | 
                      STA.B !PlayerYPosNext+1             ;;FCB7|----/----\----;  | 
                      STA.W !SpriteXPosHigh,X             ;;FCB9|----/----\----; / 
                      JSL InitSpriteTables                ;;FCBC|----/----\----; Reset sprite tables 
                      LDA.B #$04                          ;;FCC0|----/----\----;
                      STA.W !SpriteMisc1FE2,X             ;;FCC2|----/----\----;
                      LDA.W !YoshiColor                   ;;FCC5|----/----\----; \ Set Yoshi palette 
                      STA.W !SpriteOBJAttribute,X         ;;FCC8|----/----\----; / 
                      LDA.W !YoshiHeavenFlag              ;;FCCB|----/----\----;
                      BEQ +                               ;;FCCE|----/----\----;
                      LDA.B #$06                          ;;FCD0|----/----\----;
                      STA.W !SpriteOBJAttribute,X         ;;FCD2|----/----\----;
                    + INC.W !PlayerRidingYoshi            ;;FCD5|----/----\----;
                      INC.B !SpriteTableC2,X              ;;FCD8|----/----\----;
                      LDA.B !PlayerDirection              ;;FCDA|----/----\----;
                      EOR.B #$01                          ;;FCDC|----/----\----;
                      STA.W !SpriteMisc157C,X             ;;FCDE|----/----\----;
                      DEC.W !SpriteMisc160E,X             ;;FCE1|----/----\----;
                      INX                                 ;;FCE4|----/----\----;
                      STX.W !CurrentYoshiSlot             ;;FCE5|----/----\----;
                      STX.W !YoshiIsLoose                 ;;FCE8|----/----\----;
                      RTL                                 ;;FCEB|----/----\----; Return 
                                                          ;;                   ;
CODE_00FCEC:          LDX.B #$0B                          ;;FCEC|----/----\----;
                    - STZ.W !SpriteStatus,X               ;;FCEE|----/----\----;
                      DEX                                 ;;FCF1|----/----\----;
                      BPL -                               ;;FCF2|----/----\----;
                      RTS                                 ;;FCF4|----/----\----; Return 
                                                          ;;                   ;
CODE_00FCF5:          LDA.B #$A0                          ;;FCF5|----/----\----;
                      STA.B !SpriteXPosLow,X              ;;FCF7|----/----\----;
                      LDA.B #$00                          ;;FCF9|----/----\----;
                      STA.W !SpriteYPosHigh,X             ;;FCFB|----/----\----;
                      LDA.B #$00                          ;;FCFE|----/----\----;
                      STA.B !SpriteYPosLow,X              ;;FD00|----/----\----;
                      LDA.B #$00                          ;;FD02|----/----\----;
                      STA.W !SpriteXPosHigh,X             ;;FD04|----/----\----;
                      RTL                                 ;;FD07|----/----\----; Return 
                                                          ;;                   ;
CODE_00FD08:          LDY.B #$3F                          ;;FD08|----/----\----;
                      LDA.B !byetudlrHold                 ;;FD0A|----/----\----;
                      AND.B #$83                          ;;FD0C|----/----\----;
                      BNE +                               ;;FD0E|----/----\----;
                      LDY.B #$7F                          ;;FD10|----/----\----;
                    + TYA                                 ;;FD12|----/----\----;
                      AND.B !EffFrame                     ;;FD13|----/----\----;
                      ORA.B !SpriteLock                   ;;FD15|----/----\----;
                      BNE Return00FD23                    ;;FD17|----/----\----;
                      LDX.B #$07                          ;;FD19|----/----\----; \ Find a free extended sprite slot 
CODE_00FD1B:          LDA.W !ExtSpriteNumber,X            ;;FD1B|----/----\----;  | 
                      BEQ CODE_00FD26                     ;;FD1E|----/----\----;  | 
                      DEX                                 ;;FD20|----/----\----;  | 
                      BPL CODE_00FD1B                     ;;FD21|----/----\----;  | 
Return00FD23:         RTS                                 ;;FD23|----/----\----; / Return if no free slots 
                                                          ;;                   ;
                                                          ;;                   ;
DATA_00FD24:          db $02,$0A                          ;;FD24|----/----\----;
                                                          ;;                   ;
CODE_00FD26:          LDA.B #$12                          ;;FD26|----/----\----; \ Extended sprite = Water buble 
                      STA.W !ExtSpriteNumber,X            ;;FD28|----/----\----; / 
                      LDY.B !PlayerDirection              ;;FD2B|----/----\----;
                      LDA.B !PlayerXPosNext               ;;FD2D|----/----\----;
                      CLC                                 ;;FD2F|----/----\----;
                      ADC.W DATA_00FD24,Y                 ;;FD30|----/----\----;
                      STA.W !ExtSpriteXPosLow,X           ;;FD33|----/----\----;
                      LDA.B !PlayerXPosNext+1             ;;FD36|----/----\----;
                      ADC.B #$00                          ;;FD38|----/----\----;
                      STA.W !ExtSpriteXPosHigh,X          ;;FD3A|----/----\----;
                      LDA.B !Powerup                      ;;FD3D|----/----\----;
                      BEQ CODE_00FD47                     ;;FD3F|----/----\----;
                      LDA.B #$04                          ;;FD41|----/----\----;
                      LDY.B !PlayerIsDucking              ;;FD43|----/----\----;
                      BEQ +                               ;;FD45|----/----\----;
CODE_00FD47:          LDA.B #$0C                          ;;FD47|----/----\----;
                    + CLC                                 ;;FD49|----/----\----;
                      ADC.B !PlayerYPosNext               ;;FD4A|----/----\----;
                      STA.W !ExtSpriteYPosLow,X           ;;FD4C|----/----\----;
                      LDA.B !PlayerYPosNext+1             ;;FD4F|----/----\----;
                      ADC.B #$00                          ;;FD51|----/----\----;
                      STA.W !ExtSpriteYPosHigh,X          ;;FD53|----/----\----;
                      STZ.W !ExtSpriteMisc176F,X          ;;FD56|----/----\----;
                      RTS                                 ;;FD59|----/----\----; Return 
                                                          ;;                   ;
CODE_00FD5A:          LDA.B !PlayerXPosScrRel+1           ;;FD5A|----/----\----;
                      ORA.B !PlayerYPosScrRel+1           ;;FD5C|----/----\----;
                      BNE Return00FD6A                    ;;FD5E|----/----\----;
                      LDY.B #$03                          ;;FD60|----/----\----;
CODE_00FD62:          LDA.W !SmokeSpriteNumber,Y          ;;FD62|----/----\----;
                      BEQ CODE_00FD6B                     ;;FD65|----/----\----;
                      DEY                                 ;;FD67|----/----\----;
                      BPL CODE_00FD62                     ;;FD68|----/----\----;
Return00FD6A:         RTS                                 ;;FD6A|----/----\----; Return 
                                                          ;;                   ;
CODE_00FD6B:          LDA.B #$05                          ;;FD6B|----/----\----;
                      STA.W !SmokeSpriteNumber,Y          ;;FD6D|----/----\----;
                      LDA.B !TouchBlockXPos               ;;FD70|----/----\----;
                      AND.B #$F0                          ;;FD72|----/----\----;
                      STA.W !SmokeSpriteXPos,Y            ;;FD74|----/----\----;
                      LDA.B !TouchBlockYPos               ;;FD77|----/----\----;
                      AND.B #$F0                          ;;FD79|----/----\----;
                      STA.W !SmokeSpriteYPos,Y            ;;FD7B|----/----\----;
                      LDA.W !LayerProcessing              ;;FD7E|----/----\----;
                      BEQ +                               ;;FD81|----/----\----;
                      LDA.B !TouchBlockXPos               ;;FD83|----/----\----;
                      SEC                                 ;;FD85|----/----\----;
                      SBC.B !Layer23XRelPos               ;;FD86|----/----\----;
                      AND.B #$F0                          ;;FD88|----/----\----;
                      STA.W !SmokeSpriteXPos,Y            ;;FD8A|----/----\----;
                      LDA.B !TouchBlockYPos               ;;FD8D|----/----\----;
                      SEC                                 ;;FD8F|----/----\----;
                      SBC.B !Layer23YRelPos               ;;FD90|----/----\----;
                      AND.B #$F0                          ;;FD92|----/----\----;
                      STA.W !SmokeSpriteYPos,Y            ;;FD94|----/----\----;
                    + LDA.B #$10                          ;;FD97|----/----\----;
                      STA.W !SmokeSpriteTimer,Y           ;;FD99|----/----\----;
                      RTS                                 ;;FD9C|----/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
DATA_00FD9D:          db $08,$FC,$10,$04                  ;;FD9D|----/----\----;
                                                          ;;                   ;
DATA_00FDA1:          db $00,$FF,$00,$00                  ;;FDA1|----/----\----;
                                                          ;;                   ;
CODE_00FDA5:          LDA.B !PlayerInAir                  ;;FDA5|----/----\----;
                      BEQ CODE_00FDB3                     ;;FDA7|----/----\----;
                      LDY.B #$0B                          ;;FDA9|----/----\----;
CODE_00FDAB:          LDA.W !MinExtSpriteNumber,Y         ;;FDAB|----/----\----;
                      BEQ CODE_00FDB4                     ;;FDAE|----/----\----;
                      DEY                                 ;;FDB0|----/----\----;
                      BPL CODE_00FDAB                     ;;FDB1|----/----\----;
CODE_00FDB3:          INY                                 ;;FDB3|----/----\----;
CODE_00FDB4:          PHX                                 ;;FDB4|----/----\----;
                      LDX.B #$00                          ;;FDB5|----/----\----;
                      LDA.B !Powerup                      ;;FDB7|----/----\----;
                      BEQ +                               ;;FDB9|----/----\----;
                      INX                                 ;;FDBB|----/----\----;
                    + LDA.W !PlayerRidingYoshi            ;;FDBC|----/----\----;
                      BEQ +                               ;;FDBF|----/----\----;
                      INX                                 ;;FDC1|----/----\----;
                      INX                                 ;;FDC2|----/----\----;
                    + LDA.B !PlayerYPosNext               ;;FDC3|----/----\----;
                      CLC                                 ;;FDC5|----/----\----;
                      ADC.W DATA_00FD9D,X                 ;;FDC6|----/----\----;
                      PHP                                 ;;FDC9|----/----\----;
                      AND.B #$F0                          ;;FDCA|----/----\----;
                      CLC                                 ;;FDCC|----/----\----;
                      ADC.B #$03                          ;;FDCD|----/----\----;
                      STA.W !MinExtSpriteYPosLow,Y        ;;FDCF|----/----\----;
                      LDA.B !PlayerYPosNext+1             ;;FDD2|----/----\----;
                      ADC.B #$00                          ;;FDD4|----/----\----;
                      PLP                                 ;;FDD6|----/----\----;
                      ADC.W DATA_00FDA1,X                 ;;FDD7|----/----\----;
                      STA.W !MinExtSpriteYPosHigh,Y       ;;FDDA|----/----\----;
                      PLX                                 ;;FDDD|----/----\----;
                      LDA.B !PlayerXPosNext               ;;FDDE|----/----\----;
                      STA.W !MinExtSpriteXPosLow,Y        ;;FDE0|----/----\----;
                      LDA.B !PlayerXPosNext+1             ;;FDE3|----/----\----;
                      STA.W !MinExtSpriteXPosHigh,Y       ;;FDE5|----/----\----;
                      LDA.B #$07                          ;;FDE8|----/----\----;
                      STA.W !MinExtSpriteNumber,Y         ;;FDEA|----/----\----;
                      LDA.B #$00                          ;;FDED|----/----\----;
                      STA.W !MinExtSpriteXPosSpx,Y        ;;FDEF|----/----\----;
                      LDA.B !PlayerYSpeed                 ;;FDF2|----/----\----;
                      BMI Return00FE0D                    ;;FDF4|----/----\----;
                      STZ.B !PlayerYSpeed                 ;;FDF6|----/----\----;
                      LDY.B !PlayerInAir                  ;;FDF8|----/----\----;
                      BEQ +                               ;;FDFA|----/----\----;
                      STZ.B !PlayerXSpeed                 ;;FDFC|----/----\----;
                    + LDY.B #$03                          ;;FDFE|----/----\----;
                      LDA.B !Powerup                      ;;FE00|----/----\----;
                      BNE CODE_00FE05                     ;;FE02|----/----\----;
                      DEY                                 ;;FE04|----/----\----;
CODE_00FE05:          LDA.W !ExtSpriteNumber,Y            ;;FE05|----/----\----;
                      BEQ CODE_00FE16                     ;;FE08|----/----\----;
CODE_00FE0A:          DEY                                 ;;FE0A|----/----\----;
                      BPL CODE_00FE05                     ;;FE0B|----/----\----;
Return00FE0D:         RTS                                 ;;FE0D|----/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
DATA_00FE0E:          db $10,$16,$13,$1C                  ;;FE0E|----/----\----;
                                                          ;;                   ;
DATA_00FE12:          db $00,$04,$0A,$07                  ;;FE12|----/----\----;
                                                          ;;                   ;
CODE_00FE16:          LDA.B #$12                          ;;FE16|----/----\----; \ Extended sprite = Water bubble 
                      STA.W !ExtSpriteNumber,Y            ;;FE18|----/----\----; / 
                      TYA                                 ;;FE1B|----/----\----;
                      ASL A                               ;;FE1C|----/----\----;
                      ASL A                               ;;FE1D|----/----\----;
                      ASL A                               ;;FE1E|----/----\----;
                      ADC.B #$F7                          ;;FE1F|----/----\----;
                      STA.W !ExtSpriteMisc1765,Y          ;;FE21|----/----\----;
                      LDA.B !PlayerYPosNext               ;;FE24|----/----\----;
                      ADC.W DATA_00FE0E,Y                 ;;FE26|----/----\----;
                      STA.W !ExtSpriteYPosLow,Y           ;;FE29|----/----\----;
                      LDA.B !PlayerYPosNext+1             ;;FE2C|----/----\----;
                      ADC.B #$00                          ;;FE2E|----/----\----;
                      STA.W !ExtSpriteYPosHigh,Y          ;;FE30|----/----\----;
                      LDA.B !PlayerXPosNext               ;;FE33|----/----\----;
                      ADC.W DATA_00FE12,Y                 ;;FE35|----/----\----;
                      STA.W !ExtSpriteXPosLow,Y           ;;FE38|----/----\----;
                      LDA.B !PlayerXPosNext+1             ;;FE3B|----/----\----;
                      ADC.B #$00                          ;;FE3D|----/----\----;
                      STA.W !ExtSpriteXPosHigh,Y          ;;FE3F|----/----\----;
                      LDA.B #$00                          ;;FE42|----/----\----;
                      STA.W !ExtSpriteMisc176F,Y          ;;FE44|----/----\----;
                      JMP CODE_00FE0A                     ;;FE47|----/----\----;
                                                          ;;                   ;
CODE_00FE4A:          LDA.B !TrueFrame                    ;;FE4A|----/----\----;
                      AND.B #$03                          ;;FE4C|----/----\----;
                      ORA.B !PlayerInAir                  ;;FE4E|----/----\----;
                      ORA.B !PlayerXPosScrRel+1           ;;FE50|----/----\----;
                      ORA.B !PlayerYPosScrRel+1           ;;FE52|----/----\----;
                      ORA.B !SpriteLock                   ;;FE54|----/----\----;
                      BNE Return00FE71                    ;;FE56|----/----\----;
                      LDA.B !byetudlrHold                 ;;FE58|----/----\----;
                      AND.B #$04                          ;;FE5A|----/----\----;
                      BEQ CODE_00FE67                     ;;FE5C|----/----\----;
                      LDA.B !PlayerXSpeed                 ;;FE5E|----/----\----;
                      CLC                                 ;;FE60|----/----\----;
                      ADC.B #$08                          ;;FE61|----/----\----;
                      CMP.B #$10                          ;;FE63|----/----\----;
                      BCC Return00FE71                    ;;FE65|----/----\----;
CODE_00FE67:          LDY.B #$03                          ;;FE67|----/----\----;
CODE_00FE69:          LDA.W !SmokeSpriteNumber,Y          ;;FE69|----/----\----;
                      BEQ CODE_00FE72                     ;;FE6C|----/----\----;
                      DEY                                 ;;FE6E|----/----\----;
                      BNE CODE_00FE69                     ;;FE6F|----/----\----;
Return00FE71:         RTS                                 ;;FE71|----/----\----; Return 
                                                          ;;                   ;
CODE_00FE72:          LDA.B #$03                          ;;FE72|----/----\----;
                      STA.W !SmokeSpriteNumber,Y          ;;FE74|----/----\----;
                      LDA.B !PlayerXPosNext               ;;FE77|----/----\----;
                      ADC.B #$04                          ;;FE79|----/----\----;
                      STA.W !SmokeSpriteXPos,Y            ;;FE7B|----/----\----;
                      LDA.B !PlayerYPosNext               ;;FE7E|----/----\----;
                      ADC.B #$1A                          ;;FE80|----/----\----;
                      PHX                                 ;;FE82|----/----\----;
                      LDX.W !PlayerRidingYoshi            ;;FE83|----/----\----;
                      BEQ +                               ;;FE86|----/----\----;
                      ADC.B #$10                          ;;FE88|----/----\----;
                    + STA.W !SmokeSpriteYPos,Y            ;;FE8A|----/----\----;
                      PLX                                 ;;FE8D|----/----\----;
                      LDA.B #$13                          ;;FE8E|----/----\----;
                      STA.W !SmokeSpriteTimer,Y           ;;FE90|----/----\----;
                      RTS                                 ;;FE93|----/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
DATA_00FE94:          db $FD,$03                          ;;FE94|----/----\----;
                                                          ;;                   ;
DATA_00FE96:          db $00,$08,$F8,$10,$F8,$10          ;;FE96|----/----\----;
                                                          ;;                   ;
DATA_00FE9C:          db $00,$00,$FF,$00,$FF,$00          ;;FE9C|----/----\----;
                                                          ;;                   ;
DATA_00FEA2:          db $08,$08,$0C,$0C,$14,$14          ;;FEA2|----/----\----;
                                                          ;;                   ;
ShootFireball:        LDX.B #$09                          ;;FEA8|----/----\----; \ Find a free fireball slot (08-09) 
CODE_00FEAA:          LDA.W !ExtSpriteNumber,X            ;;FEAA|----/----\----;  | 
                      BEQ CODE_00FEB5                     ;;FEAD|----/----\----;  | 
                      DEX                                 ;;FEAF|----/----\----;  | 
                      CPX.B #$07                          ;;FEB0|----/----\----;  | 
                      BNE CODE_00FEAA                     ;;FEB2|----/----\----;  | 
                      RTS                                 ;;FEB4|----/----\----; / Return if no free slots 
                                                          ;;                   ;
CODE_00FEB5:          LDA.B #$06                          ;;FEB5|----/----\----;
                      STA.W !SPCIO3                       ;;FEB7|----/----\----; / Play sound effect 
                      LDA.B #$0A                          ;;FEBA|----/----\----;
                      STA.W !ShootFireTimer               ;;FEBC|----/----\----;
                      LDA.B #$05                          ;;FEBF|----/----\----; \ Extended sprite = Mario fireball 
                      STA.W !ExtSpriteNumber,X            ;;FEC1|----/----\----; / 
                      LDA.B #$30                          ;;FEC4|----/----\----;
                      STA.W !ExtSpriteYSpeed,X            ;;FEC6|----/----\----;
                      LDY.B !PlayerDirection              ;;FEC9|----/----\----;
                      LDA.W DATA_00FE94,Y                 ;;FECB|----/----\----;
                      STA.W !ExtSpriteXSpeed,X            ;;FECE|----/----\----;
                      LDA.W !PlayerRidingYoshi            ;;FED1|----/----\----;
                      BEQ +                               ;;FED4|----/----\----;
                      INY                                 ;;FED6|----/----\----;
                      INY                                 ;;FED7|----/----\----;
                      LDA.W !PlayerDuckingOnYoshi         ;;FED8|----/----\----;
                      BEQ +                               ;;FEDB|----/----\----;
                      INY                                 ;;FEDD|----/----\----;
                      INY                                 ;;FEDE|----/----\----;
                    + LDA.B !PlayerXPosNext               ;;FEDF|----/----\----;
                      CLC                                 ;;FEE1|----/----\----;
                      ADC.W DATA_00FE96,Y                 ;;FEE2|----/----\----;
                      STA.W !ExtSpriteXPosLow,X           ;;FEE5|----/----\----;
                      LDA.B !PlayerXPosNext+1             ;;FEE8|----/----\----;
                      ADC.W DATA_00FE9C,Y                 ;;FEEA|----/----\----;
                      STA.W !ExtSpriteXPosHigh,X          ;;FEED|----/----\----;
                      LDA.B !PlayerYPosNext               ;;FEF0|----/----\----;
                      CLC                                 ;;FEF2|----/----\----;
                      ADC.W DATA_00FEA2,Y                 ;;FEF3|----/----\----;
                      STA.W !ExtSpriteYPosLow,X           ;;FEF6|----/----\----;
                      LDA.B !PlayerYPosNext+1             ;;FEF9|----/----\----;
                      ADC.B #$00                          ;;FEFB|----/----\----;
                      STA.W !ExtSpriteYPosHigh,X          ;;FEFD|----/----\----;
                      LDA.W !PlayerBehindNet              ;;FF00|----/----\----;
                      STA.W !ExtSpritePriority,X          ;;FF03|----/----\----;
                      RTS                                 ;;FF06|----/----\----; Return 
                                                          ;;                   ;
ADDR_00FF07:          REP #$20                            ;;FF07|----/----\----; Accum (16 bit) 
                      LDA.W !Layer1DYPos                  ;;FF09|----/----\----;
                      AND.W #$FF00                        ;;FF0C|----/----\----;
                      BPL +                               ;;FF0F|----/----\----;
                      ORA.W #$00FF                        ;;FF11|----/----\----;
                    + XBA                                 ;;FF14|----/----\----;
                      CLC                                 ;;FF15|----/----\----;
                      ADC.B !PlayerXPosNext               ;;FF16|----/----\----;
                      STA.B !PlayerXPosNext               ;;FF18|----/----\----;
                      LDA.W !LoadingLevelNumber           ;;FF1A|----/----\----;
                      AND.W #$FF00                        ;;FF1D|----/----\----;
                      BPL +                               ;;FF20|----/----\----;
                      ORA.W #$00FF                        ;;FF22|----/----\----;
                    + XBA                                 ;;FF25|----/----\----;
                      EOR.W #$FFFF                        ;;FF26|----/----\----;
                      INC A                               ;;FF29|----/----\----;
                      CLC                                 ;;FF2A|----/----\----;
                      ADC.B !PlayerYPosNext               ;;FF2B|----/----\----;
                      STA.B !PlayerYPosNext               ;;FF2D|----/----\----;
                      SEP #$20                            ;;FF2F|----/----\----; Accum (8 bit) 
                      RTL                                 ;;FF31|----/----\----; Return 
                                                          ;;                   ;
ADDR_00FF32:          LDA.W !SpriteYPosHigh,X             ;;FF32|----/----\----;
                      XBA                                 ;;FF35|----/----\----;
                      LDA.B !SpriteXPosLow,X              ;;FF36|----/----\----;
                      REP #$20                            ;;FF38|----/----\----; Accum (16 bit) 
                      SEC                                 ;;FF3A|----/----\----;
                      SBC.B !Layer1XPos                   ;;FF3B|----/----\----;
                      STA.B !_0                           ;;FF3D|----/----\----;
                      LDA.W #$0030                        ;;FF3F|----/----\----;
                      SEC                                 ;;FF42|----/----\----;
                      SBC.B !_0                           ;;FF43|----/----\----;
                      STA.B !Layer3XPos                   ;;FF45|----/----\----;
                      SEP #$20                            ;;FF47|----/----\----; Accum (8 bit) 
                      LDA.W !SpriteXPosHigh,X             ;;FF49|----/----\----;
                      XBA                                 ;;FF4C|----/----\----;
                      LDA.B !SpriteYPosLow,X              ;;FF4D|----/----\----;
                      REP #$20                            ;;FF4F|----/----\----; Accum (16 bit) 
                      SEC                                 ;;FF51|----/----\----;
                      SBC.B !Layer1YPos                   ;;FF52|----/----\----;
                      STA.B !_0                           ;;FF54|----/----\----;
                      LDA.W #$0100                        ;;FF56|----/----\----;
                      SEC                                 ;;FF59|----/----\----;
                      SBC.B !_0                           ;;FF5A|----/----\----;
                      STA.B !Layer3YPos                   ;;FF5C|----/----\----;
                      SEP #$20                            ;;FF5E|----/----\----; Accum (8 bit) 
                      RTL                                 ;;FF60|----/----\----; Return 
                                                          ;;                   ;
CODE_00FF61:          LDA.W !SpriteYPosHigh,X             ;;FF61|----/----\----;
                      XBA                                 ;;FF64|----/----\----;
                      LDA.B !SpriteXPosLow,X              ;;FF65|----/----\----;
                      REP #$20                            ;;FF67|----/----\----; Accum (16 bit) 
                      CMP.W #$FF00                        ;;FF69|----/----\----;
                      BMI CODE_00FF73                     ;;FF6C|----/----\----;
                      CMP.W #$0100                        ;;FF6E|----/----\----;
                      BMI +                               ;;FF71|----/----\----;
CODE_00FF73:          LDA.W #$0100                        ;;FF73|----/----\----;
                    + STA.B !Layer3XPos                   ;;FF76|----/----\----;
                      SEP #$20                            ;;FF78|----/----\----; Accum (8 bit) 
                      LDA.W !SpriteXPosHigh,X             ;;FF7A|----/----\----;
                      XBA                                 ;;FF7D|----/----\----;
                      LDA.B !SpriteYPosLow,X              ;;FF7E|----/----\----;
                      REP #$20                            ;;FF80|----/----\----; Accum (16 bit) 
                      STA.B !_0                           ;;FF82|----/----\----;
                      LDA.W #$00A0                        ;;FF84|----/----\----;
                      SEC                                 ;;FF87|----/----\----;
                      SBC.B !_0                           ;;FF88|----/----\----;
                      CLC                                 ;;FF8A|----/----\----;
                      ADC.W !ScreenShakeYOffset           ;;FF8B|----/----\----;
                      STA.B !Layer3YPos                   ;;FF8E|----/----\----;
                      SEP #$20                            ;;FF90|----/----\----; Accum (8 bit) 
                      RTL                                 ;;FF92|----/----\----; Return 
                                                          ;;                   ;
                      padbyte $FF : pad $00FFC0           ;;FF93|----/----\----;