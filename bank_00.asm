                      ORG $008000                         ;                   ;        ;
                                                          ;                   ;        ;
I_RESET:              SEI                                 ;8000|----/----\----;78      ; Disable interrupts 
                      STZ.W !HW_NMITIMEN                  ;8001|----/----\----;9C0042  ; Clear NMI and V/H Count, disable joypad ; NMI, V/H Count, and Joypad Enable
                      STZ.W !HW_HDMAEN                    ;8004|----/----\----;9C0C42  ; Disable HDMA ; H-DMA Channel Enable
                      STZ.W !HW_MDMAEN                    ;8007|----/----\----;9C0B42  ; Disable DMA ; Regular DMA Channel Enable
                      STZ.W !HW_APUIO0                    ;800A|----/----\----;9C4021  ; \ ; APU I/O Port
                      STZ.W !HW_APUIO1                    ;800D|----/----\----;9C4121  ;  |Clear APU I/O ports 1-4 ; APU I/O Port
                      STZ.W !HW_APUIO2                    ;8010|----/----\----;9C4221  ;  | ; APU I/O Port
                      STZ.W !HW_APUIO3                    ;8013|----/----\----;9C4321  ; / ; APU I/O Port
                      LDA.B #$80                          ;8016|----/----\----;A980    ; \ Turn off screen 
                      STA.W !HW_INIDISP                   ;8018|----/----\----;8D0021  ; / ; Screen Display Register
                      CLC                                 ;801B|----/----\----;18      ; \ Turn off emulation mode 
                      XCE                                 ;801C|----/----\----;FB      ; /  
                      REP #$38                            ;801D|----/----\----;C238    ; 16 bit A,X,Y, Decimal mode off ; Index (16 bit) Accum (16 bit) 
                      LDA.W #$0000                        ;801F|----/----\----;A90000  ; \ Set direct page 
                      TCD                                 ;8022|----/----\----;5B      ; /  
                      LDA.W #$01FF                        ;8023|----/----\----;A9FF01  ; \ Set stack location 
                      TCS                                 ;8026|----/----\----;1B      ; /  
                      LDA.W #$F0A9                        ;8027|----/----\----;A9A9F0  ; \  
                      STA.L !OAMResetRoutine              ;802A|----/----\----;8F00807F;  | 
                      LDX.W #$017D                        ;802E|----/----\----;A27D01  ;  | 
                      LDY.W #$03FD                        ;8031|----/----\----;A0FD03  ;  | 
                    - LDA.W #$008D                        ;8034|----/----\----;A98D00  ;  | 
                      STA.L !OAMResetRoutine+2,X          ;8037|----/----\----;9F02807F;  | 
                      TYA                                 ;803B|----/----\----;98      ;  | 
                      STA.L !OAMResetRoutine+3,X          ;803C|----/----\----;9F03807F;  |Create routine in RAM 
                      SEC                                 ;8040|----/----\----;38      ;  | 
                      SBC.W #$0004                        ;8041|----/----\----;E90400  ;  | 
                      TAY                                 ;8044|----/----\----;A8      ;  | 
                      DEX                                 ;8045|----/----\----;CA      ;  | 
                      DEX                                 ;8046|----/----\----;CA      ;  | 
                      DEX                                 ;8047|----/----\----;CA      ;  | 
                      BPL -                               ;8048|----/----\----;10EA    ;  | 
                      SEP #$30                            ;804A|----/----\----;E230    ;  | ; Index (8 bit) Accum (8 bit) 
                      LDA.B #$6B                          ;804C|----/----\----;A96B    ;  | 
                      STA.L !OAMResetRoutine+$182         ;804E|----/----\----;8F82817F; / 
                      JSR UploadSPCEngine                 ;8052|----/----\----;20E880  ; SPC700 Bank 02 + Main code upload handler 
                      STZ.W !GameMode                     ;8055|----/----\----;9C0001  ; Set game mode to 0 
                      STZ.W !OverworldOverride            ;8058|----/----\----;9C0901  ; Set secondary game mode to 0 
                      JSR ClearStack                      ;805B|----/----\----;204E8A  ;
                      JSR UploadSamples                   ;805E|----/----\----;20FD80  ;
                      JSR CODE_009250                     ;8061|----/----\----;205092  ;
                      LDA.B #$03                          ;8064|----/----\----;A903    ; \ Set OAM Size and Data Area Designation to x03 
                      STA.W !HW_OBJSEL                    ;8066|----/----\----;8D0121  ; /  ; OAM Size and Data Area Designation
                      INC.B !LagFlag                      ;8069|----/----\----;E610    ; Skip the following loop 
                    - LDA.B !LagFlag                      ;806B|----/----\----;A510    ;  |Loop until the interrupt routine sets $10 
                      BEQ -                               ;806D|----/----\----;F0FC    ; / to a non-zero value. 
                      CLI                                 ;806F|----/----\----;58      ; Enable interrupts 
                      INC.B !TrueFrame                    ;8070|----/----\----;E613    ; Increase frame number 
                      JSR GetGameMode                     ;8072|----/----\----;202293  ; The actual game 
                      STZ.B !LagFlag                      ;8075|----/----\----;6410    ; \ Wait for interrupt 
                      BRA -                               ;8077|----/----\----;80F2    ; /  
                                                          ;                   ;        ;
SPC700UploadLoop:     PHP                                 ;8079|----/----\----;08      ;
                      REP #$30                            ;807A|----/----\----;C230    ; Index (16 bit) Accum (16 bit) 
                      LDY.W #$0000                        ;807C|----/----\----;A00000  ;
                      LDA.W #$BBAA                        ;807F|----/----\----;A9AABB  ;
                    - CMP.W !HW_APUIO0                    ;8082|----/----\----;CD4021  ; APU I/O Port
                      BNE -                               ;8085|----/----\----;D0FB    ;
                      SEP #$20                            ;8087|----/----\----;E220    ; Accum (8 bit) 
                      LDA.B #$CC                          ;8089|----/----\----;A9CC    ; Load byte to start transfer 
                      BRA CODE_0080B3                     ;808B|----/----\----;8026    ;
                                                          ;                   ;        ;
CODE_00808D:          LDA.B [!_0],Y                       ;808D|----/----\----;B700    ;
                      INY                                 ;808F|----/----\----;C8      ;
                      XBA                                 ;8090|----/----\----;EB      ;
                      LDA.B #$00                          ;8091|----/----\----;A900    ;
                      BRA CODE_0080A0                     ;8093|----/----\----;800B    ;
                                                          ;                   ;        ;
CODE_008095:          XBA                                 ;8095|----/----\----;EB      ;
                      LDA.B [!_0],Y                       ;8096|----/----\----;B700    ;
                      INY                                 ;8098|----/----\----;C8      ;
                      XBA                                 ;8099|----/----\----;EB      ;
                    - CMP.W !HW_APUIO0                    ;809A|----/----\----;CD4021  ; APU I/O Port
                      BNE -                               ;809D|----/----\----;D0FB    ;
                      INC A                               ;809F|----/----\----;1A      ;
CODE_0080A0:          REP #$20                            ;80A0|----/----\----;C220    ; Accum (16 bit) 
                      STA.W !HW_APUIO0                    ;80A2|----/----\----;8D4021  ; APU I/O Port
                      SEP #$20                            ;80A5|----/----\----;E220    ; Accum (8 bit) 
                      DEX                                 ;80A7|----/----\----;CA      ;
                      BNE CODE_008095                     ;80A8|----/----\----;D0EB    ;
                    - CMP.W !HW_APUIO0                    ;80AA|----/----\----;CD4021  ; APU I/O Port
                      BNE -                               ;80AD|----/----\----;D0FB    ;
                    - ADC.B #$03                          ;80AF|----/----\----;6903    ;
                      BEQ -                               ;80B1|----/----\----;F0FC    ;
CODE_0080B3:          PHA                                 ;80B3|----/----\----;48      ;
                      REP #$20                            ;80B4|----/----\----;C220    ; Accum (16 bit) 
                      LDA.B [!_0],Y                       ;80B6|----/----\----;B700    ;
                      INY                                 ;80B8|----/----\----;C8      ;
                      INY                                 ;80B9|----/----\----;C8      ;
                      TAX                                 ;80BA|----/----\----;AA      ;
                      LDA.B [!_0],Y                       ;80BB|----/----\----;B700    ;
                      INY                                 ;80BD|----/----\----;C8      ;
                      INY                                 ;80BE|----/----\----;C8      ;
                      STA.W !HW_APUIO2                    ;80BF|----/----\----;8D4221  ; APU I/O Port
                      SEP #$20                            ;80C2|----/----\----;E220    ; Accum (8 bit) 
                      CPX.W #$0001                        ;80C4|----/----\----;E00100  ;
                      LDA.B #$00                          ;80C7|----/----\----;A900    ;
                      ROL A                               ;80C9|----/----\----;2A      ;
                      STA.W !HW_APUIO1                    ;80CA|----/----\----;8D4121  ; APU I/O Port
                      ADC.B #$7F                          ;80CD|----/----\----;697F    ;
                      PLA                                 ;80CF|----/----\----;68      ;
                      STA.W !HW_APUIO0                    ;80D0|----/----\----;8D4021  ; APU I/O Port
                    - CMP.W !HW_APUIO0                    ;80D3|----/----\----;CD4021  ; APU I/O Port
                      BNE -                               ;80D6|----/----\----;D0FB    ;
                      BVS CODE_00808D                     ;80D8|----/----\----;70B3    ;
                      STZ.W !HW_APUIO0                    ;80DA|----/----\----;9C4021  ; APU I/O Port
                      STZ.W !HW_APUIO1                    ;80DD|----/----\----;9C4121  ; APU I/O Port
                      STZ.W !HW_APUIO2                    ;80E0|----/----\----;9C4221  ; APU I/O Port
                      STZ.W !HW_APUIO3                    ;80E3|----/----\----;9C4321  ; APU I/O Port
                      PLP                                 ;80E6|----/----\----;28      ;
                      RTS                                 ;80E7|----/----\----;60      ;
                                                          ;                   ;        ;
UploadSPCEngine:      LDA.B #$00                          ;80E8|----/----\----;A900    ; \ this address (0E:8000) is the start of the SPC engine 
                      STA.W !_0                           ;80EA|----/----\----;8D0000  ;  | instrument settings/sound effect data 
                      LDA.B #$80                          ;80ED|----/----\----;A980    ;  | AND the code used for all music banks. 
                      STA.W !_1                           ;80EF|----/----\----;8D0100  ;  | 
                      LDA.B #$0E                          ;80F2|----/----\----;A90E    ;  | 
                      STA.W !_2                           ;80F4|----/----\----;8D0200  ; /  
UploadDataToSPC:      SEI                                 ;80F7|----/----\----;78      ;
                      JSR SPC700UploadLoop                ;80F8|----/----\----;207980  ;
                      CLI                                 ;80FB|----/----\----;58      ;
                      RTS                                 ;80FC|----/----\----;60      ;
                                                          ;                   ;        ;
UploadSamples:        LDA.B #$00                          ;80FD|----/----\----;A900    ; \    Index (8 bit) ; Index (8 bit) 
                      STA.W !_0                           ;80FF|----/----\----;8D0000  ;  | 
                      LDA.B #$80                          ;8102|----/----\----;A980    ;  |Loads The Address 0F:8000 to 00-02 	(SAMPLE DATA + PTRS)
                      STA.W !_1                           ;8104|----/----\----;8D0100  ;  |[SPC Sample Pointers/Data ROM Address, this is] 
                      LDA.B #$0F                          ;8107|----/----\----;A90F    ;  | 
                      STA.W !_2                           ;8109|----/----\----;8D0200  ; /  
                      BRA StrtSPCMscUpld                  ;810C|----/----\----;800F    ;
                                                          ;                   ;        ;
UploadMusicBank1:     LDA.B #$B1                          ;810E|----/----\----;A9B1    ; \ 
                      STA.W !_0                           ;8110|----/----\----;8D0000  ;  | 
                      LDA.B #$98                          ;8113|----/----\----;A998    ;  |Loads the Bank 1 music data (Map) to 00-02 
                      STA.W !_1                           ;8115|----/----\----;8D0100  ;  | ($0E:98B1) 
                      LDA.B #$0E                          ;8118|----/----\----;A90E    ;  | 
                      STA.W !_2                           ;811A|----/----\----;8D0200  ; /  
StrtSPCMscUpld:       LDA.B #$FF                          ;811D|----/----\----;A9FF    ;
                      STA.W !HW_APUIO1                    ;811F|----/----\----;8D4121  ; APU I/O Port
                      JSR UploadDataToSPC                 ;8122|----/----\----;20F780  ;
                      LDX.B #$03                          ;8125|----/----\----;A203    ;
                    - STZ.W !HW_APUIO0,X                  ;8127|----/----\----;9E4021  ;
                      STZ.W !SPCIO0,X                     ;812A|----/----\----;9EF91D  ;
                      STZ.W !Empty1DFD,X                  ;812D|----/----\----;9EFD1D  ;
                      DEX                                 ;8130|----/----\----;CA      ;
                      BPL -                               ;8131|----/----\----;10F4    ;
Return008133:         RTS                                 ;8133|----/----\----;60      ;
                                                          ;                   ;        ;
CODE_008134:          LDA.W !BonusGameActivate            ;8134|----/----\----;AD2514  ;
                      BNE UploadMusicBank2                ;8137|----/----\----;D00F    ;
                      LDA.W !OverworldOverride            ;8139|----/----\----;AD0901  ;
                      CMP.B #$E9                          ;813C|----/----\----;C9E9    ;
                      BEQ UploadMusicBank2                ;813E|----/----\----;F008    ;
                      ORA.W !SublevelCount                ;8140|----/----\----;0D1A14  ;
                      ORA.W !ShowMarioStart               ;8143|----/----\----;0D1D14  ;
                      BNE Return008133                    ;8146|----/----\----;D0EB    ;
UploadMusicBank2:     LDA.B #$D6                          ;8148|----/----\----;A9D6    ; \ 
                      STA.W !_0                           ;814A|----/----\----;8D0000  ;  |Loads the Bank 2 music address(Levels) 
                      LDA.B #$AE                          ;814D|----/----\----;A9AE    ;  | (0E:AED6) 
                      STA.W !_1                           ;814F|----/----\----;8D0100  ;  | 
                      LDA.B #$0E                          ;8152|----/----\----;A90E    ;  | 
                      STA.W !_2                           ;8154|----/----\----;8D0200  ; / 
                      BRA StrtSPCMscUpld                  ;8157|----/----\----;80C4    ;
                                                          ;                   ;        ;
UploadMusicBank3:     LDA.B #$00                          ;8159|----/----\----;A900    ; \ 
                      STA.W !_0                           ;815B|----/----\----;8D0000  ;  |Bank 3 music(Ending) ROM address 
                      LDA.B #$E4                          ;815E|----/----\----;A9E4    ;  | 
                      STA.W !_1                           ;8160|----/----\----;8D0100  ;  | ($03:E400) 
                      LDA.B #$03                          ;8163|----/----\----;A903    ;  | 
                      STA.W !_2                           ;8165|----/----\----;8D0200  ; / 
                      BRA StrtSPCMscUpld                  ;8168|----/----\----;80B3    ;
                                                          ;                   ;        ;
                                                          ;                   ;        ;
I_NMI:                SEI                                 ;816A|----/----\----;78      ; Looks like this might be the NMI routine here. That is correct. 
                      PHP                                 ;816B|----/----\----;08      ; I thought it was, just from the address, but I wasn't too sure. 
                      REP #$30                            ;816C|----/----\----;C230    ; Index (16 bit) Accum (16 bit) 
                      PHA                                 ;816E|----/----\----;48      ;
                      PHX                                 ;816F|----/----\----;DA      ;
                      PHY                                 ;8170|----/----\----;5A      ;
                      PHB                                 ;8171|----/----\----;8B      ;
                      PHK                                 ;8172|----/----\----;4B      ;
                      PLB                                 ;8173|----/----\----;AB      ;
                      SEP #$30                            ;8174|----/----\----;E230    ; 8 bit A,X,Y ; Index (8 bit) Accum (8 bit) 
                      LDA.W !HW_RDNMI                     ;8176|----/----\----;AD1042  ; Load "NMI Enable."  This has the effect of clearing the Interrupt, so that ; NMI Enable
                      LDA.W !SPCIO2                       ;8179|----/----\----;ADFB1D  ; \  
                      BNE CODE_008186                     ;817C|----/----\----;D008    ;  | 
                      LDY.W !HW_APUIO2                    ;817E|----/----\----;AC4221  ;  | ; APU I/O Port
                      CPY.W !LastUsedMusic                ;8181|----/----\----;CCFF1D  ;  |Update SPC700 I/O port 2 
                      BNE +                               ;8184|----/----\----;D009    ;  | 
CODE_008186:          STA.W !HW_APUIO2                    ;8186|----/----\----;8D4221  ;  | ; APU I/O Port
                      STA.W !LastUsedMusic                ;8189|----/----\----;8DFF1D  ;  | 
                      STZ.W !SPCIO2                       ;818C|----/----\----;9CFB1D  ;  | 
                    + LDA.W !SPCIO0                       ;818F|----/----\----;ADF91D  ; \  
                      STA.W !HW_APUIO0                    ;8192|----/----\----;8D4021  ;  | ; APU I/O Port
                      LDA.W !SPCIO1                       ;8195|----/----\----;ADFA1D  ;  | 
                      STA.W !HW_APUIO1                    ;8198|----/----\----;8D4121  ;  |Update SPC700 I/O ports 0, 1 and 3 ; APU I/O Port
                      LDA.W !SPCIO3                       ;819B|----/----\----;ADFC1D  ;  | 
                      STA.W !HW_APUIO3                    ;819E|----/----\----;8D4321  ;  | ; APU I/O Port
                      STZ.W !SPCIO0                       ;81A1|----/----\----;9CF91D  ;  | 
                      STZ.W !SPCIO1                       ;81A4|----/----\----;9CFA1D  ;  | 
                      STZ.W !SPCIO3                       ;81A7|----/----\----;9CFC1D  ; /  
                      LDA.B #$80                          ;81AA|----/----\----;A980    ; \ Screen off, brightness=0 
                      STA.W !HW_INIDISP                   ;81AC|----/----\----;8D0021  ; / ; Screen Display Register
                      STZ.W !HW_HDMAEN                    ;81AF|----/----\----;9C0C42  ; Zero The HDMA reg ; H-DMA Channel Enable
                      LDA.B !Layer12Window                ;81B2|----/----\----;A541    ;
                      STA.W !HW_W12SEL                    ;81B4|----/----\----;8D2321  ; BG 1 and 2 Window Mask Settings
                      LDA.B !Layer34Window                ;81B7|----/----\----;A542    ;
                      STA.W !HW_W34SEL                    ;81B9|----/----\----;8D2421  ; BG 3 and 4 Window Mask Settings
                      LDA.B !OBJCWWindow                  ;81BC|----/----\----;A543    ;
                      STA.W !HW_WOBJSEL                   ;81BE|----/----\----;8D2521  ; OBJ and Color Window Settings
                      LDA.B !ColorAddition                ;81C1|----/----\----;A544    ;
                      STA.W !HW_CGSWSEL                   ;81C3|----/----\----;8D3021  ; Initial Settings for Color Addition
                      LDA.W !IRQNMICommand                ;81C6|----/----\----;AD9B0D  ; \  
                      BPL +                               ;81C9|----/----\----;1003    ;  |If in a "Special level", 
                      JMP CODE_0082C4                     ;81CB|----/----\----;4CC482  ;  |jump to $82C4 
                                                          ;                   ;        ;
                    + LDA.B !ColorSettings                ;81CE|----/----\----;A540    ; \ Get the CGADSUB byte... 
                      AND.B #$FB                          ;81D0|----/----\----;29FB    ;  |Get the Add/Subtract Select and Enable part... 
                      STA.W !HW_CGADSUB                   ;81D2|----/----\----;8D3121  ; / ...and store it to the A/SSaE register... ; Add/Subtract Select and Enable
                      LDA.B #$09                          ;81D5|----/----\----;A909    ; \ 8x8 tiles, Graphics mode 1 
                      STA.W !HW_BGMODE                    ;81D7|----/----\----;8D0521  ; /  ; BG Mode and Tile Size Setting
                      LDA.B !LagFlag                      ;81DA|----/----\----;A510    ; \ If there isn't any lag, 
                      BEQ CODE_0081E7                     ;81DC|----/----\----;F009    ; / branch to $81E7 
                      LDA.W !IRQNMICommand                ;81DE|----/----\----;AD9B0D  ; \  
                      LSR A                               ;81E1|----/----\----;4A      ;  |If not on a special level, branch to NMINotSpecialLv 
                      BEQ NMINotSpecialLv                 ;81E2|----/----\----;F062    ; /  
                      JMP CODE_00827A                     ;81E4|----/----\----;4C7A82  ;
                                                          ;                   ;        ;
CODE_0081E7:          INC.B !LagFlag                      ;81E7|----/----\----;E610    ;
                      JSR CODE_00A488                     ;81E9|----/----\----;2088A4  ;
                      LDA.W !IRQNMICommand                ;81EC|----/----\----;AD9B0D  ;
                      LSR A                               ;81EF|----/----\----;4A      ;
                      BNE CODE_008222                     ;81F0|----/----\----;D030    ;
                      BCS +                               ;81F2|----/----\----;B003    ;
                      JSR DrawStatusBar                   ;81F4|----/----\----;20AC8D  ;
                    + LDA.W !CutsceneID                   ;81F7|----/----\----;ADC613  ; \  
                      CMP.B #$08                          ;81FA|----/----\----;C908    ;  |If the current cutscene isn't the ending, 
                      BNE CODE_008209                     ;81FC|----/----\----;D00B    ; / branch to $8209 
                      LDA.W !CreditsUpdateBG              ;81FE|----/----\----;ADFE1F  ; \  
                      BEQ CODE_00821A                     ;8201|----/----\----;F017    ;  |Related to reloading the palettes when switching 
                      JSL CODE_0C9567                     ;8203|----/----\----;2267950C;  |to another background during the credits. 
                      BRA CODE_00821A                     ;8207|----/----\----;8011    ; /  
                                                          ;                   ;        ;
CODE_008209:          JSL CODE_0087AD                     ;8209|----/----\----;22AD8700;
                      LDA.W !UploadMarioStart             ;820D|----/----\----;AD3A14  ;
                      BEQ CODE_008217                     ;8210|----/----\----;F005    ;
                      JSR CODE_00A7C2                     ;8212|----/----\----;20C2A7  ;
                      BRA CODE_00823D                     ;8215|----/----\----;8026    ;
                                                          ;                   ;        ;
CODE_008217:          JSR CODE_00A390                     ;8217|----/----\----;2090A3  ;
CODE_00821A:          JSR CODE_00A436                     ;821A|----/----\----;2036A4  ;
                      JSR MarioGFXDMA                     ;821D|----/----\----;2000A3  ;
                      BRA CODE_00823D                     ;8220|----/----\----;801B    ;
                                                          ;                   ;        ;
CODE_008222:          LDA.W !OverworldProcess             ;8222|----/----\----;ADD913  ;
                      CMP.B #$0A                          ;8225|----/----\----;C90A    ;
                      BNE CODE_008237                     ;8227|----/----\----;D00E    ;
                      LDY.W !OWSubmapSwapProcess          ;8229|----/----\----;ACE81D  ;
                      DEY                                 ;822C|----/----\----;88      ;
                      DEY                                 ;822D|----/----\----;88      ;
                      CPY.B #$04                          ;822E|----/----\----;C004    ;
                      BCS CODE_008237                     ;8230|----/----\----;B005    ;
                      JSR CODE_00A529                     ;8232|----/----\----;2029A5  ;
                      BRA +                               ;8235|----/----\----;800C    ;
                                                          ;                   ;        ;
CODE_008237:          JSR CODE_00A4E3                     ;8237|----/----\----;20E3A4  ;
                      JSR MarioGFXDMA                     ;823A|----/----\----;2000A3  ;
CODE_00823D:          JSR LoadScrnImage                   ;823D|----/----\----;20D285  ;
                      JSR DoSomeSpriteDMA                 ;8240|----/----\----;204984  ;
                    + JSR ControllerUpdate                ;8243|----/----\----;205086  ;
NMINotSpecialLv:      LDA.B !Layer1XPos                   ;8246|----/----\----;A51A    ; \  
                      STA.W !HW_BG1HOFS                   ;8248|----/----\----;8D0D21  ;  |Set BG 1 Horizontal Scroll Offset ; BG 1 Horizontal Scroll Offset
                      LDA.B !Layer1XPos+1                 ;824B|----/----\----;A51B    ;  |to X position of screen boundry  
                      STA.W !HW_BG1HOFS                   ;824D|----/----\----;8D0D21  ; /  ; BG 1 Horizontal Scroll Offset
                      LDA.B !Layer1YPos                   ;8250|----/----\----;A51C    ; \  
                      CLC                                 ;8252|----/----\----;18      ;  | 
                      ADC.W !ScreenShakeYOffset           ;8253|----/----\----;6D8818  ;  |Set BG 1 Vertical Scroll Offset 
                      STA.W !HW_BG1VOFS                   ;8256|----/----\----;8D0E21  ;  |to Y position of screen boundry + Layer 1 disposition ; BG 1 Vertical Scroll Offset
                      LDA.B !Layer1YPos+1                 ;8259|----/----\----;A51D    ;  | 
                      ADC.W !ScreenShakeYOffset+1         ;825B|----/----\----;6D8918  ;  | 
                      STA.W !HW_BG1VOFS                   ;825E|----/----\----;8D0E21  ; /  ; BG 1 Vertical Scroll Offset
                      LDA.B !Layer2XPos                   ;8261|----/----\----;A51E    ; \  
                      STA.W !HW_BG2HOFS                   ;8263|----/----\----;8D0F21  ;  |Set BG 2 Horizontal Scroll Offset ; BG 2 Horizontal Scroll Offset
                      LDA.B !Layer2XPos+1                 ;8266|----/----\----;A51F    ;  |to X position of Layer 2 
                      STA.W !HW_BG2HOFS                   ;8268|----/----\----;8D0F21  ; /  ; BG 2 Horizontal Scroll Offset
                      LDA.B !Layer2YPos                   ;826B|----/----\----;A520    ; \  
                      STA.W !HW_BG2VOFS                   ;826D|----/----\----;8D1021  ;  |Set BG 2 Vertical Scroll Offset ; BG 2 Vertical Scroll Offset
                      LDA.B !Layer2YPos+1                 ;8270|----/----\----;A521    ;  |to Y position of Layer 2 
                      STA.W !HW_BG2VOFS                   ;8272|----/----\----;8D1021  ; /  ; BG 2 Vertical Scroll Offset
                      LDA.W !IRQNMICommand                ;8275|----/----\----;AD9B0D  ; \ If in a normal (not special) level, branch 
                      BEQ CODE_008292                     ;8278|----/----\----;F018    ; /  
CODE_00827A:          LDA.B #$81                          ;827A|----/----\----;A981    ;
                      LDY.W !CutsceneID                   ;827C|----/----\----;ACC613  ; \  
                      CPY.B #$08                          ;827F|----/----\----;C008    ;  |If not playing ending movie, branch to $82A1 
                      BNE +                               ;8281|----/----\----;D01E    ; /  
                      LDY.W !Brightness                   ;8283|----/----\----;ACAE0D  ; \  
                      STY.W !HW_INIDISP                   ;8286|----/----\----;8C0021  ; / Set brightness to $0DAE ; Screen Display Register
                      LDY.W !HDMAEnable                   ;8289|----/----\----;AC9F0D  ; \  
                      STY.W !HW_HDMAEN                    ;828C|----/----\----;8C0C42  ; / Set HDMA channel enable to $0D9F ; H-DMA Channel Enable
                      JMP IRQNMIEnding                    ;828F|----/----\----;4C8C83  ;
                                                          ;                   ;        ;
CODE_008292:          LDY.B #$24                          ;8292|----/----\----;A024    ; \  ; IRQ timer, at which scanline the IRQ will be fired.
CODE_008294:          LDA.W !HW_TIMEUP                    ;8294|----/----\----;AD1142  ;  |(i.e. below the status bar) ; IRQ Flag By H/V Count Timer
                      STY.W !HW_VTIME                     ;8297|----/----\----;8C0942  ;  | ; V-Count Timer (Upper 8 Bits)
                      STZ.W !HW_VTIME+1                   ;829A|----/----\----;9C0A42  ; /  ; V-Count Timer MSB (Bit 0)
                      STZ.B !IRQType                      ;829D|----/----\----;6411    ;
                      LDA.B #$A1                          ;829F|----/----\----;A9A1    ;
                    + STA.W !HW_NMITIMEN                  ;82A1|----/----\----;8D0042  ; NMI, V/H Count, and Joypad Enable
                      STZ.W !HW_BG3HOFS                   ;82A4|----/----\----;9C1121  ; \  ; BG 3 Horizontal Scroll Offset- Write twice register
                      STZ.W !HW_BG3HOFS                   ;82A7|----/----\----;9C1121  ;  |Set Layer 3 horizontal and vertical ; BG 3 Horizontal Scroll Offset
                      STZ.W !HW_BG3VOFS                   ;82AA|----/----\----;9C1221  ;  |scroll to x00 ; BG 3 Vertical Scroll Offset ; Write twice register
                      STZ.W !HW_BG3VOFS                   ;82AD|----/----\----;9C1221  ; /  ; BG 3 Vertical Scroll Offset
                      LDA.W !Brightness                   ;82B0|----/----\----;ADAE0D  ; \  
                      STA.W !HW_INIDISP                   ;82B3|----/----\----;8D0021  ; / Set brightness to $0DAE ; Screen Display Register
                      LDA.W !HDMAEnable                   ;82B6|----/----\----;AD9F0D  ; \  
                      STA.W !HW_HDMAEN                    ;82B9|----/----\----;8D0C42  ; / Set HDMA channel enable to $0D9F ; H-DMA Channel Enable
                      REP #$30                            ;82BC|----/----\----;C230    ; \ Pull all ; Index (16 bit) Accum (16 bit) 
                      PLB                                 ;82BE|----/----\----;AB      ;  | 
                      PLY                                 ;82BF|----/----\----;7A      ;  | 
                      PLX                                 ;82C0|----/----\----;FA      ;  | 
                      PLA                                 ;82C1|----/----\----;68      ;  | 
                      PLP                                 ;82C2|----/----\----;28      ; /  
I_EMPTY:              RTI                                 ;82C3|----/----\----;40      ; And return 
                                                          ;                   ;        ;
CODE_0082C4:          LDA.B !LagFlag                      ;82C4|----/----\----;A510    ; \ If there is lag, ; Index (8 bit) Accum (8 bit) 
                      BNE CODE_0082F7                     ;82C6|----/----\----;D02F    ; / branch to $82F7 
                      INC.B !LagFlag                      ;82C8|----/----\----;E610    ;
                      LDA.W !UploadMarioStart             ;82CA|----/----\----;AD3A14  ; \ If Mario Start! graphics shouldn't be loaded, 
                      BEQ CODE_0082D4                     ;82CD|----/----\----;F005    ; / branch to $82D4 
                      JSR CODE_00A7C2                     ;82CF|----/----\----;20C2A7  ;
                      BRA CODE_0082E8                     ;82D2|----/----\----;8014    ;
                                                          ;                   ;        ;
CODE_0082D4:          JSR CODE_00A436                     ;82D4|----/----\----;2036A4  ;
                      JSR MarioGFXDMA                     ;82D7|----/----\----;2000A3  ;
                      BIT.W !IRQNMICommand                ;82DA|----/----\----;2C9B0D  ;
                      BVC CODE_0082E8                     ;82DD|----/----\----;5009    ;
                      JSR CODE_0098A9                     ;82DF|----/----\----;20A998  ;
                      LDA.W !IRQNMICommand                ;82E2|----/----\----;AD9B0D  ;
                      LSR A                               ;82E5|----/----\----;4A      ;
                      BCS +                               ;82E6|----/----\----;B003    ;
CODE_0082E8:          JSR DrawStatusBar                   ;82E8|----/----\----;20AC8D  ;
                    + JSR CODE_00A488                     ;82EB|----/----\----;2088A4  ;
                      JSR LoadScrnImage                   ;82EE|----/----\----;20D285  ;
                      JSR DoSomeSpriteDMA                 ;82F1|----/----\----;204984  ;
                      JSR ControllerUpdate                ;82F4|----/----\----;205086  ;
CODE_0082F7:          LDA.B #$09                          ;82F7|----/----\----;A909    ;
                      STA.W !HW_BGMODE                    ;82F9|----/----\----;8D0521  ; BG Mode and Tile Size Setting
                      LDA.B !Mode7CenterX                 ;82FC|----/----\----;A52A    ;
                      CLC                                 ;82FE|----/----\----;18      ;
                      ADC.B #$80                          ;82FF|----/----\----;6980    ;
                      STA.W !HW_M7X                       ;8301|----/----\----;8D1F21  ; Mode 7 Center Position X
                      LDA.B !Mode7CenterX+1               ;8304|----/----\----;A52B    ;
                      ADC.B #$00                          ;8306|----/----\----;6900    ;
                      STA.W !HW_M7X                       ;8308|----/----\----;8D1F21  ; Mode 7 Center Position X
                      LDA.B !Mode7CenterY                 ;830B|----/----\----;A52C    ;
                      CLC                                 ;830D|----/----\----;18      ;
                      ADC.B #$80                          ;830E|----/----\----;6980    ;
                      STA.W !HW_M7Y                       ;8310|----/----\----;8D2021  ; Mode 7 Center Position Y
                      LDA.B !Mode7CenterY+1               ;8313|----/----\----;A52D    ;
                      ADC.B #$00                          ;8315|----/----\----;6900    ;
                      STA.W !HW_M7Y                       ;8317|----/----\----;8D2021  ; Mode 7 Center Position Y
                      LDA.B !Mode7ParamA                  ;831A|----/----\----;A52E    ;
                      STA.W !HW_M7A                       ;831C|----/----\----;8D1B21  ; Mode 7 Matrix Parameter A
                      LDA.B !Mode7ParamA+1                ;831F|----/----\----;A52F    ;
                      STA.W !HW_M7A                       ;8321|----/----\----;8D1B21  ; Mode 7 Matrix Parameter A
                      LDA.B !Mode7ParamB                  ;8324|----/----\----;A530    ;
                      STA.W !HW_M7B                       ;8326|----/----\----;8D1C21  ; Mode 7 Matrix Parameter B
                      LDA.B !Mode7ParamB+1                ;8329|----/----\----;A531    ;
                      STA.W !HW_M7B                       ;832B|----/----\----;8D1C21  ; Mode 7 Matrix Parameter B
                      LDA.B !Mode7ParamC                  ;832E|----/----\----;A532    ;
                      STA.W !HW_M7C                       ;8330|----/----\----;8D1D21  ; Mode 7 Matrix Parameter C
                      LDA.B !Mode7ParamC+1                ;8333|----/----\----;A533    ;
                      STA.W !HW_M7C                       ;8335|----/----\----;8D1D21  ; Mode 7 Matrix Parameter C
                      LDA.B !Mode7ParamD                  ;8338|----/----\----;A534    ;
                      STA.W !HW_M7D                       ;833A|----/----\----;8D1E21  ; Mode 7 Matrix Parameter D
                      LDA.B !Mode7ParamD+1                ;833D|----/----\----;A535    ;
                      STA.W !HW_M7D                       ;833F|----/----\----;8D1E21  ; Mode 7 Matrix Parameter D
                      JSR SETL1SCROLL                     ;8342|----/----\----;201684  ;
                      LDA.W !IRQNMICommand                ;8345|----/----\----;AD9B0D  ;
                      LSR A                               ;8348|----/----\----;4A      ;
                      BCC +                               ;8349|----/----\----;9011    ;
                      LDA.W !Brightness                   ;834B|----/----\----;ADAE0D  ;
                      STA.W !HW_INIDISP                   ;834E|----/----\----;8D0021  ; Screen Display Register
                      LDA.W !HDMAEnable                   ;8351|----/----\----;AD9F0D  ;
                      STA.W !HW_HDMAEN                    ;8354|----/----\----;8D0C42  ; H-DMA Channel Enable
                      LDA.B #$81                          ;8357|----/----\----;A981    ;
                      JMP CODE_0083F3                     ;8359|----/----\----;4CF383  ;
                                                          ;                   ;        ;
                    + LDY.B #$24                          ;835C|----/----\----;A024    ;
                      BIT.W !IRQNMICommand                ;835E|----/----\----;2C9B0D  ;
                      BVC +                               ;8361|----/----\----;500E    ;
                      LDA.W !ActiveBoss                   ;8363|----/----\----;ADFC13  ;
                      ASL A                               ;8366|----/----\----;0A      ;
                      TAX                                 ;8367|----/----\----;AA      ;
                      LDA.W DATA_00F8E8,X                 ;8368|----/----\----;BDE8F8  ;
                      CMP.B #$2A                          ;836B|----/----\----;C92A    ;
                      BNE +                               ;836D|----/----\----;D002    ;
                      LDY.B #$2D                          ;836F|----/----\----;A02D    ;
                    + JMP CODE_008294                     ;8371|----/----\----;4C9482  ;
                                                          ;                   ;        ;
I_IRQ:                SEI                                 ;8374|----/----\----;78      ; Set Interrupt flag so routine can start 
                      PHP                                 ;8375|----/----\----;08      ; \ Save A/X/Y/P/B 
                      REP #$30                            ;8376|----/----\----;C230    ;  |P = Processor Flags, B = bank number for all $xxxx operations ; Index (16 bit) Accum (16 bit) 
                      PHA                                 ;8378|----/----\----;48      ;  |Set B to 0$0 
                      PHX                                 ;8379|----/----\----;DA      ;  | 
                      PHY                                 ;837A|----/----\----;5A      ;  | 
                      PHB                                 ;837B|----/----\----;8B      ;  | 
                      PHK                                 ;837C|----/----\----;4B      ;  | 
                      PLB                                 ;837D|----/----\----;AB      ; /  
                      SEP #$30                            ;837E|----/----\----;E230    ; Index (8 bit) Accum (8 bit) 
                      LDA.W !HW_TIMEUP                    ;8380|----/----\----;AD1142  ; Read the IRQ register, 'unapply' the interrupt ; IRQ Flag By H/V Count Timer
                      BPL CODE_0083B2                     ;8383|----/----\----;102D    ; If "Timer IRQ" is clear, skip the next code block 
                      LDA.B #$81                          ;8385|----/----\----;A981    ;
                      LDY.W !IRQNMICommand                ;8387|----/----\----;AC9B0D  ;
                      BMI +                               ;838A|----/----\----;302E    ; If Bit 7 (negative flag) is set, branch to a different IRQ mode 
IRQNMIEnding:         STA.W !HW_NMITIMEN                  ;838C|----/----\----;8D0042  ; Enable NMI Interrupt and Automatic Joypad reading ; NMI, V/H Count, and Joypad Enable
                      LDY.B #$1F                          ;838F|----/----\----;A01F    ;
                      JSR WaitForHBlank                   ;8391|----/----\----;203B84  ;
                      LDA.B !Layer3XPos                   ;8394|----/----\----;A522    ; \ Adjust scroll settings for layer 3 
                      STA.W !HW_BG3HOFS                   ;8396|----/----\----;8D1121  ;  | ; BG 3 Horizontal Scroll Offset
                      LDA.B !Layer3XPos+1                 ;8399|----/----\----;A523    ;  | 
                      STA.W !HW_BG3HOFS                   ;839B|----/----\----;8D1121  ;  | ; BG 3 Horizontal Scroll Offset
                      LDA.B !Layer3YPos                   ;839E|----/----\----;A524    ;  | 
                      STA.W !HW_BG3VOFS                   ;83A0|----/----\----;8D1221  ;  | ; BG 3 Vertical Scroll Offset
                      LDA.B !Layer3YPos+1                 ;83A3|----/----\----;A525    ;  | 
                      STA.W !HW_BG3VOFS                   ;83A5|----/----\----;8D1221  ; /  ; BG 3 Vertical Scroll Offset
CODE_0083A8:          LDA.B !MainBGMode                   ;83A8|----/----\----;A53E    ; \Set the layer BG sizes, L3 priority, and BG mode 
                      STA.W !HW_BGMODE                    ;83AA|----/----\----;8D0521  ; /(Effectively, this is the screen mode) ; BG Mode and Tile Size Setting
                      LDA.B !ColorSettings                ;83AD|----/----\----;A540    ; \Write CGADSUB 
                      STA.W !HW_CGADSUB                   ;83AF|----/----\----;8D3121  ; / ; Add/Subtract Select and Enable
CODE_0083B2:          REP #$30                            ;83B2|----/----\----;C230    ; \ Pull everything back ; Index (16 bit) Accum (16 bit) 
                      PLB                                 ;83B4|----/----\----;AB      ;  | 
                      PLY                                 ;83B5|----/----\----;7A      ;  | 
                      PLX                                 ;83B6|----/----\----;FA      ;  | 
                      PLA                                 ;83B7|----/----\----;68      ;  | 
                      PLP                                 ;83B8|----/----\----;28      ; / 
                      RTI                                 ;83B9|----/----\----;40      ; And Return 
                                                          ;                   ;        ;
                    + BIT.W !IRQNMICommand                ;83BA|----/----\----;2C9B0D  ; Get bit 6 of $0D9B ; Index (8 bit) Accum (8 bit) 
                      BVC CODE_0083E3                     ;83BD|----/----\----;5024    ; If clear, skip the next code section 
                      LDY.B !IRQType                      ;83BF|----/----\----;A411    ; \Skip if $11 = 0 
                      BEQ CODE_0083D0                     ;83C1|----/----\----;F00D    ; / 
                      STA.W !HW_NMITIMEN                  ;83C3|----/----\----;8D0042  ; #$81 -> NMI / Controller Enable reg ; NMI, V/H Count, and Joypad Enable
                      LDY.B #$14                          ;83C6|----/----\----;A014    ;
                      JSR WaitForHBlank                   ;83C8|----/----\----;203B84  ;
                      JSR SETL1SCROLL                     ;83CB|----/----\----;201684  ;
                      BRA CODE_0083A8                     ;83CE|----/----\----;80D8    ;
                                                          ;                   ;        ;
CODE_0083D0:          INC.B !IRQType                      ;83D0|----/----\----;E611    ; $11++ 
                      LDA.W !HW_TIMEUP                    ;83D2|----/----\----;AD1142  ; \ Set up the IRQ routine for layer 3 ; IRQ Flag By H/V Count Timer
                      LDA.B #$AE                          ;83D5|----/----\----;A9AE    ;  |-\  
                      SEC                                 ;83D7|----/----\----;38      ;  |  |Vertical Counter trigger at 174 - $1888 
                      SBC.W !ScreenShakeYOffset           ;83D8|----/----\----;ED8818  ;  |-/ Oddly enough, $1888 seems to be 16-bit, but the 
                      STA.W !HW_VTIME                     ;83DB|----/----\----;8D0942  ;  |Store to Vertical Counter Timer ; V-Count Timer (Upper 8 Bits)
                      STZ.W !HW_VTIME+1                   ;83DE|----/----\----;9C0A42  ; / Make the high byte of said timer 0 ; V-Count Timer MSB (Bit 0)
                      LDA.B #$A1                          ;83E1|----/----\----;A9A1    ; A = NMI enable, V count enable, joypad automatic read enable, H count disable 
CODE_0083E3:          LDY.W !EndLevelTimer                ;83E3|----/----\----;AC9314  ; if $1493 = 0 skip down 
                      BEQ CODE_0083F3                     ;83E6|----/----\----;F00B    ;
                      LDY.W !ColorFadeTimer               ;83E8|----/----\----;AC9514  ; \ If $1495 is <#$40 
                      CPY.B #$40                          ;83EB|----/----\----;C040    ;  | 
                      BCC CODE_0083F3                     ;83ED|----/----\----;9004    ; / Skip down 
                      LDA.B #$81                          ;83EF|----/----\----;A981    ;
                      BRA IRQNMIEnding                    ;83F1|----/----\----;8099    ; Jump up to IRQNMIEnding 
                                                          ;                   ;        ;
CODE_0083F3:          STA.W !HW_NMITIMEN                  ;83F3|----/----\----;8D0042  ; A -> NMI/Joypad Auto-Read/HV-Count Control Register ; NMI, V/H Count, and Joypad Enable
                      JSR CODE_008439                     ;83F6|----/----\----;203984  ;
                      NOP                                 ;83F9|----/----\----;EA      ; \Not often you see NOP, I think there was a JSL here at one point maybe 
                      NOP                                 ;83FA|----/----\----;EA      ; / 
                      LDA.B #$07                          ;83FB|----/----\----;A907    ; \Write Screen register 
                      STA.W !HW_BGMODE                    ;83FD|----/----\----;8D0521  ; / ; BG Mode and Tile Size Setting
                      LDA.B !Mode7XPos                    ;8400|----/----\----;A53A    ; \ Write L1 Horizontal scroll 
                      STA.W !HW_BG1HOFS                   ;8402|----/----\----;8D0D21  ;  | ; BG 1 Horizontal Scroll Offset
                      LDA.B !Mode7XPos+1                  ;8405|----/----\----;A53B    ;  | 
                      STA.W !HW_BG1HOFS                   ;8407|----/----\----;8D0D21  ; /  ; BG 1 Horizontal Scroll Offset
                      LDA.B !Mode7YPos                    ;840A|----/----\----;A53C    ; \ Write L1 Vertical Scroll 
                      STA.W !HW_BG1VOFS                   ;840C|----/----\----;8D0E21  ;  | ; BG 1 Vertical Scroll Offset
                      LDA.B !Mode7YPos+1                  ;840F|----/----\----;A53D    ;  | 
                      STA.W !HW_BG1VOFS                   ;8411|----/----\----;8D0E21  ; /  ; BG 1 Vertical Scroll Offset
                      BRA CODE_0083B2                     ;8414|----/----\----;809C    ; And exit IRQ 
                                                          ;                   ;        ;
SETL1SCROLL:          LDA.B #$59                          ;8416|----/----\----;A959    ; \ 
                      STA.W !HW_BG1SC                     ;8418|----/----\----;8D0721  ; /Write L1 GFX source address ; BG 1 Address and Size
                      LDA.B #$07                          ;841B|----/----\----;A907    ; \Write L1/L2 Tilemap address 
                      STA.W !HW_BG12NBA                   ;841D|----/----\----;8D0B21  ; / ; BG 1 & 2 Tile Data Designation
                      LDA.B !Layer1XPos                   ;8420|----/----\----;A51A    ; \ Write L1 Horizontal scroll 
                      STA.W !HW_BG1HOFS                   ;8422|----/----\----;8D0D21  ;  | ; BG 1 Horizontal Scroll Offset
                      LDA.B !Layer1XPos+1                 ;8425|----/----\----;A51B    ;  | 
                      STA.W !HW_BG1HOFS                   ;8427|----/----\----;8D0D21  ; / ; BG 1 Horizontal Scroll Offset
                      LDA.B !Layer1YPos                   ;842A|----/----\----;A51C    ; \ $1C + $1888 -> L1 Vert scroll 
                      CLC                                 ;842C|----/----\----;18      ;  |$1888 = Some sort of vertioffset 
                      ADC.W !ScreenShakeYOffset           ;842D|----/----\----;6D8818  ;  | 
                      STA.W !HW_BG1VOFS                   ;8430|----/----\----;8D0E21  ; / ; BG 1 Vertical Scroll Offset
                      LDA.B !Layer1YPos+1                 ;8433|----/----\----;A51D    ; \Other half of L1 vert scroll 
                      STA.W !HW_BG1VOFS                   ;8435|----/----\----;8D0E21  ; / ; BG 1 Vertical Scroll Offset
                      RTS                                 ;8438|----/----\----;60      ; Return 
                                                          ;                   ;        ;
CODE_008439:          LDY.B #$20                          ;8439|----/----\----;A020    ; <<- Could this be just to waste time? 
WaitForHBlank:        BIT.W !HW_HVBJOY                    ;843B|----/----\----;2C1242  ; So... LDY gets set with 20 if there is a H-Blank...? ; H/V Blank Flags and Joypad Status
                      BVS CODE_008439                     ;843E|----/----\----;70F9    ; if in H-Blank, make Y #$20 and try again 
                    - BIT.W !HW_HVBJOY                    ;8440|----/----\----;2C1242  ; Now wait until not in H-Blank ; H/V Blank Flags and Joypad Status
                      BVC -                               ;8443|----/----\----;50FB    ;
                    - DEY                                 ;8445|----/----\----;88      ;  |Y = 0 
                      BNE -                               ;8446|----/----\----;D0FD    ; / ...wait a second... why didn't they just do LDY #$00? ...waste more time? 
                      RTS                                 ;8448|----/----\----;60      ; return 
                                                          ;                   ;        ;
DoSomeSpriteDMA:      STZ.W !HW_DMAPARAM                  ;8449|----/----\----;9C0043  ; Parameters for DMA Transfer
                      REP #$20                            ;844C|----/----\----;C220    ; Accum (16 bit) 
                      STZ.W !HW_OAMADD                    ;844E|----/----\----;9C0221  ; OAM address ; Address for Accessing OAM
                      LDA.W #$0004                        ;8451|----/----\----;A90400  ;
                      STA.W !HW_DMAREG                    ;8454|----/----\----;8D0143  ; Dest. address = $2104 (data write to OAM) ; B Address
                      LDA.W #$0002                        ;8457|----/----\----;A90200  ;
                      STA.W !HW_DMAADDR+1                 ;845A|----/----\----;8D0343  ; Source address = $00:0200  ; A Address (High Byte)
                      LDA.W #$0220                        ;845D|----/----\----;A92002  ;
                      STA.W !HW_DMACNT                    ;8460|----/----\----;8D0543  ; $0220 bytes to transfer ; Number Bytes to Transfer (Low Byte) (DMA)
                      LDY.B #$01                          ;8463|----/----\----;A001    ;
                      STY.W !HW_MDMAEN                    ;8465|----/----\----;8C0B42  ; Start DMA ; Regular DMA Channel Enable
                      SEP #$20                            ;8468|----/----\----;E220    ; Accum (8 bit) 
                      LDA.B #$80                          ;846A|----/----\----;A980    ; \  
                      STA.W $2103                         ;846C|----/----\----;8D0321  ;  | 
                      LDA.B !OAMAddress                   ;846F|----/----\----;A53F    ;  |Change the OAM read/write address to #$8000 + $3F 
                      STA.W !HW_OAMADD                    ;8471|----/----\----;8D0221  ; /  ; Address for Accessing OAM
                      RTS                                 ;8474|----/----\----;60      ; Return 
                                                          ;                   ;        ;
                                                          ;                   ;        ;
DATA_008475:          db $00,$00,$08,$00,$10,$00,$18,$00  ;8475|----/----\----;        ;
                      db $20,$00,$28,$00,$30,$00,$38,$00  ;847D|----/----\----;        ;
                      db $40,$00,$48,$00,$50,$00,$58,$00  ;8485|----/----\----;        ;
                      db $60,$00,$68,$00,$70,$00,$78      ;848D|----/----\----;        ;
                                                          ;                   ;        ;
CODE_008494:          LDY.B #$1E                          ;8494|----/----\----;A01E    ;
                    - LDX.W DATA_008475,Y                 ;8496|----/----\----;BE7584  ;
                      LDA.W !OAMTileSize+3,X              ;8499|----/----\----;BD2304  ;
                      ASL A                               ;849C|----/----\----;0A      ;
                      ASL A                               ;849D|----/----\----;0A      ;
                      ORA.W !OAMTileSize+2,X              ;849E|----/----\----;1D2204  ;
                      ASL A                               ;84A1|----/----\----;0A      ;
                      ASL A                               ;84A2|----/----\----;0A      ;
                      ORA.W !OAMTileSize+1,X              ;84A3|----/----\----;1D2104  ;
                      ASL A                               ;84A6|----/----\----;0A      ;
                      ASL A                               ;84A7|----/----\----;0A      ;
                      ORA.W !OAMTileSize,X                ;84A8|----/----\----;1D2004  ;
                      STA.W !OAMTileBitSize,Y             ;84AB|----/----\----;990004  ;
                      LDA.W !OAMTileSize+7,X              ;84AE|----/----\----;BD2704  ;
                      ASL A                               ;84B1|----/----\----;0A      ;
                      ASL A                               ;84B2|----/----\----;0A      ;
                      ORA.W !OAMTileSize+6,X              ;84B3|----/----\----;1D2604  ;
                      ASL A                               ;84B6|----/----\----;0A      ;
                      ASL A                               ;84B7|----/----\----;0A      ;
                      ORA.W !OAMTileSize+5,X              ;84B8|----/----\----;1D2504  ;
                      ASL A                               ;84BB|----/----\----;0A      ;
                      ASL A                               ;84BC|----/----\----;0A      ;
                      ORA.W !OAMTileSize+4,X              ;84BD|----/----\----;1D2404  ;
                      STA.W !OAMTileBitSize+1,Y           ;84C0|----/----\----;990104  ;
                      DEY                                 ;84C3|----/----\----;88      ;
                      DEY                                 ;84C4|----/----\----;88      ;
                      BPL -                               ;84C5|----/----\----;10CF    ;
                      RTS                                 ;84C7|----/----\----;60      ;
                                                          ;                   ;        ;
CODE_0084C8:          PHB                                 ;84C8|----/----\----;8B      ; Wrapper 
                      PHK                                 ;84C9|----/----\----;4B      ;
                      PLB                                 ;84CA|----/----\----;AB      ;
                      JSR LoadScrnImage                   ;84CB|----/----\----;20D285  ;
                      PLB                                 ;84CE|----/----\----;AB      ;
                      RTL                                 ;84CF|----/----\----;6B      ;
                                                          ;                   ;        ;
                                                          ;                   ;        ;
ImagePointers:        dl $7F837D                          ;84D0|----/----\----;7D837F  ; Not used? 
                      dl DATA_05B375                      ;84D3|----/----\----;75B305  ; Title screen 
                      dl DATA_04A400                      ;84D6|----/----\----;00A404  ; OW border 
                      dl DATA_05B0FF                      ;84D9|----/----\----;FFB005  ;
                      dl DATA_05B91C                      ;84DC|----/----\----;1CB905  ; CONTINUE/END 
                      dl DATA_0CB800                      ;84DF|----/----\----;00B80C  ;
                      dl DATA_05B872                      ;84E2|----/----\----;72B805  ; 1 PLAYER GAME/2 PLAYER GAME 
                      dl DATA_04819F                      ;84E5|----/----\----;9F8104  ; OW scroll arrows 
                      dl DATA_0481E0                      ;84E8|----/----\----;E08104  ; Remove OW scroll arrows 
                      dl DATA_04F499                      ;84EB|----/----\----;99F404  ;
                      dl DATA_05B8C7                      ;84EE|----/----\----;C7B805  ; CONTINUE AND SAVE 
                      dl DATA_0CBFF1                      ;84F1|----/----\----;F1BF0C  ;
                      dl DATA_0CBFC3                      ;84F4|----/----\----;C3BF0C  ; Cutscene 1 text: Line 7 
                      dl DATA_0CBF8E                      ;84F7|----/----\----;8EBF0C  ; Cutscene 1 text: Line 6 
                      dl DATA_0CBF59                      ;84FA|----/----\----;59BF0C  ; Cutscene 1 text: Line 5 
                      dl DATA_0CBF24                      ;84FD|----/----\----;24BF0C  ; Cutscene 1 text: Line 4 
                      dl DATA_0CBEEF                      ;8500|----/----\----;EFBE0C  ; Cutscene 1 text: Line 3 
                      dl DATA_0CBEBA                      ;8503|----/----\----;BABE0C  ; Cutscene 1 text: Line 2 
                      dl DATA_0CBE85                      ;8506|----/----\----;85BE0C  ; Cutscene 1 text: Line 1 
                      dl DATA_0CC165                      ;8509|----/----\----;65C10C  ; Cutscene 2 text: Line 8 
                      dl DATA_0CC130                      ;850C|----/----\----;30C10C  ; Cutscene 2 text: Line 7 
                      dl DATA_0CC0FB                      ;850F|----/----\----;FBC00C  ; Cutscene 2 text: Line 6 
                      dl DATA_0CC0C6                      ;8512|----/----\----;C6C00C  ;
                      dl DATA_0CC091                      ;8515|----/----\----;91C00C  ; ...etc... 
                      dl DATA_0CC05C                      ;8518|----/----\----;5CC00C  ;
                      dl DATA_0CC027                      ;851B|----/----\----;27C00C  ;
                      dl DATA_0CBFF2                      ;851E|----/----\----;F2BF0C  ;
                      dl DATA_0CBFF1                      ;8521|----/----\----;F1BF0C  ;
                      dl DATA_0CC2CE                      ;8524|----/----\----;CEC20C  ;
                      dl DATA_0CC299                      ;8527|----/----\----;99C20C  ;
                      dl DATA_0CC264                      ;852A|----/----\----;64C20C  ;
                      dl DATA_0CC22F                      ;852D|----/----\----;2FC20C  ;
                      dl DATA_0CC1FA                      ;8530|----/----\----;FAC10C  ;
                      dl DATA_0CC1C5                      ;8533|----/----\----;C5C10C  ;
                      dl DATA_0CC190                      ;8536|----/----\----;90C10C  ;
                      dl DATA_0CC46C                      ;8539|----/----\----;6CC40C  ;
                      dl DATA_0CC437                      ;853C|----/----\----;37C40C  ;
                      dl DATA_0CC402                      ;853F|----/----\----;02C40C  ;
                      dl DATA_0CC3CD                      ;8542|----/----\----;CDC30C  ;
                      dl DATA_0CC398                      ;8545|----/----\----;98C30C  ;
                      dl DATA_0CC363                      ;8548|----/----\----;63C30C  ;
                      dl DATA_0CC32E                      ;854B|----/----\----;2EC30C  ;
                      dl DATA_0CC2F9                      ;854E|----/----\----;F9C20C  ;
                      dl DATA_0CBFF1                      ;8551|----/----\----;F1BF0C  ;
                      dl DATA_0CC5DD                      ;8554|----/----\----;DDC50C  ;
                      dl DATA_0CC5A8                      ;8557|----/----\----;A8C50C  ;
                      dl DATA_0CC573                      ;855A|----/----\----;73C50C  ;
                      dl DATA_0CC53E                      ;855D|----/----\----;3EC50C  ;
                      dl DATA_0CC509                      ;8560|----/----\----;09C50C  ;
                      dl DATA_0CC4D4                      ;8563|----/----\----;D4C40C  ;
                      dl DATA_0CC49F                      ;8566|----/----\----;9FC40C  ;
                      dl DATA_0CC785                      ;8569|----/----\----;85C70C  ;
                      dl DATA_0CC750                      ;856C|----/----\----;50C70C  ;
                      dl DATA_0CC71B                      ;856F|----/----\----;1BC70C  ;
                      dl DATA_0CC6E6                      ;8572|----/----\----;E6C60C  ;
                      dl DATA_0CC6B1                      ;8575|----/----\----;B1C60C  ;
                      dl DATA_0CC67C                      ;8578|----/----\----;7CC60C  ;
                      dl DATA_0CC647                      ;857B|----/----\----;47C60C  ;
                      dl DATA_0CC612                      ;857E|----/----\----;12C60C  ;
                      dl DATA_0CC92D                      ;8581|----/----\----;2DC90C  ;
                      dl DATA_0CC8F8                      ;8584|----/----\----;F8C80C  ;
                      dl DATA_0CC8C3                      ;8587|----/----\----;C3C80C  ;
                      dl DATA_0CC88E                      ;858A|----/----\----;8EC80C  ;
                      dl DATA_0CC859                      ;858D|----/----\----;59C80C  ;
                      dl DATA_0CC824                      ;8590|----/----\----;24C80C  ;
                      dl DATA_0CC7EF                      ;8593|----/----\----;EFC70C  ;
                      dl DATA_0CC7BA                      ;8596|----/----\----;BAC70C  ;
                      dl DATA_0CBA56                      ;8599|----/----\----;56BA0C  ; Cutscene border, cave ground 
                      dl DATA_0CBBB9                      ;859C|----/----\----;B9BB0C  ;
                      dl DATA_0CB9BF                      ;859F|----/----\----;BFB90C  ;
                      dl DATA_0C9380                      ;85A2|----/----\----;80930C  ;
                      dl DATA_0CB636                      ;85A5|----/----\----;36B60C  ; Ending: THE END 
                      dl DATA_0DF300                      ;85A8|----/----\----;00F30D  ; Ending: Enemies: Lakitu 
                      dl DATA_0DF42D                      ;85AB|----/----\----;2DF40D  ; Ending: Enemies: Hammer Bro. 
                      dl DATA_0DF572                      ;85AE|----/----\----;72F50D  ; Ending: Enemies: Pokey 
                      dl DATA_0DF66B                      ;85B1|----/----\----;6BF60D  ; Ending: Enemies: Rex 
                      dl DATA_0DF742                      ;85B4|----/----\----;42F70D  ; Ending: Enemies: Dino-Rhino 
                      dl DATA_0DF837                      ;85B7|----/----\----;37F80D  ; Ending: Enemies: Blargg 
                      dl DATA_0DF8FA                      ;85BA|----/----\----;FAF80D  ; Ending: Enemies: Urchin 
                      dl DATA_0DF9CD                      ;85BD|----/----\----;CDF90D  ; Ending: Enemies: Boo 
                      dl DATA_0DFA98                      ;85C0|----/----\----;98FA0D  ; Ending: Enemies: Dry Bones 
                      dl DATA_0DFB73                      ;85C3|----/----\----;73FB0D  ; Ending: Enemies: Grinder 
                      dl DATA_0DFC58                      ;85C6|----/----\----;58FC0D  ; Ending: Enemies: Reznor 
                      dl DATA_0DFCD5                      ;85C9|----/----\----;D5FC0D  ; Ending: Enemies: Mechakoopa 
                      dl DATA_0DFD5C                      ;85CC|----/----\----;5CFD0D  ; Ending: Enemies: Bowser 
                      dl DATA_0CBD02                      ;85CF|----/----\----;02BD0C  ;
                                                          ;                   ;        ;
LoadScrnImage:        LDY.B !StripeImage                  ;85D2|----/----\----;A412    ; 12 = Image loader 
                      LDA.W ImagePointers,Y               ;85D4|----/----\----;B9D084  ; \  
                      STA.B !_0                           ;85D7|----/----\----;8500    ;  | 
                      LDA.W ImagePointers+1,Y             ;85D9|----/----\----;B9D184  ;  |Load pointer 
                      STA.B !_1                           ;85DC|----/----\----;8501    ;  | 
                      LDA.W ImagePointers+2,Y             ;85DE|----/----\----;B9D284  ;  | 
                      STA.B !_2                           ;85E1|----/----\----;8502    ; /  
                      JSR CODE_00871E                     ;85E3|----/----\----;201E87  ;
                      LDA.B !StripeImage                  ;85E6|----/----\----;A512    ;
                      BNE +                               ;85E8|----/----\----;D00D    ;
                      STA.L !DynStripeImgSize             ;85EA|----/----\----;8F7B837F;
                      STA.L !DynStripeImgSize+1           ;85EE|----/----\----;8F7C837F;
                      DEC A                               ;85F2|----/----\----;3A      ;
                      STA.L !DynamicStripeImage           ;85F3|----/----\----;8F7D837F;
                    + STZ.B !StripeImage                  ;85F7|----/----\----;6412    ; Do not reload the same thing next frame 
                      RTS                                 ;85F9|----/----\----;60      ;
                                                          ;                   ;        ;
CODE_0085FA:          JSR TurnOffIO                       ;85FA|----/----\----;207D93  ;
                      LDA.B #$FC                          ;85FD|----/----\----;A9FC    ;
                      STA.B !_0                           ;85FF|----/----\----;8500    ;
                      STZ.W !HW_VMAINC                    ;8601|----/----\----;9C1521  ; Set "VRAM Address Increment Value" to x00 ; VRAM Address Increment Value
                      STZ.W !HW_VMADD                     ;8604|----/----\----;9C1621  ; Set "Address for VRAM Read/Write (Low Byte)" to x00 ; Address for VRAM Read/Write (Low Byte)
                      LDA.B #$50                          ;8607|----/----\----;A950    ; \ Set "Address for VRAM Read/Write (High Byte)" to x50 
                      STA.W !HW_VMADD+1                   ;8609|----/----\----;8D1721  ; /  ; Address for VRAM Read/Write (High Byte)
                      LDX.B #$06                          ;860C|----/----\----;A206    ;
                    - LDA.W DATA_008649,X                 ;860E|----/----\----;BD4986  ;
                      STA.W !HW_DMAPARAM+$10,X            ;8611|----/----\----;9D1043  ;
                      DEX                                 ;8614|----/----\----;CA      ;
                      BPL -                               ;8615|----/----\----;10F7    ;
                      LDY.B #$02                          ;8617|----/----\----;A002    ; DMA something to VRAM, my guess is a tilemap... 
                      STY.W !HW_MDMAEN                    ;8619|----/----\----;8C0B42  ; Regular DMA Channel Enable
                      LDA.B #$38                          ;861C|----/----\----;A938    ;
                      STA.B !_0                           ;861E|----/----\----;8500    ;
                      LDA.B #$80                          ;8620|----/----\----;A980    ;
                      STA.W !HW_VMAINC                    ;8622|----/----\----;8D1521  ; VRAM Address Increment Value
                      STZ.W !HW_VMADD                     ;8625|----/----\----;9C1621  ; \Change CRAM address ; Address for VRAM Read/Write (Low Byte)
                      LDA.B #$50                          ;8628|----/----\----;A950    ;  | 
                      STA.W !HW_VMADD+1                   ;862A|----/----\----;8D1721  ; / ; Address for VRAM Read/Write (High Byte)
                      LDX.B #$06                          ;862D|----/----\----;A206    ; And Repeat the DMA 
                    - LDA.W DATA_008649,X                 ;862F|----/----\----;BD4986  ;
                      STA.W !HW_DMAPARAM+$10,X            ;8632|----/----\----;9D1043  ;
                      DEX                                 ;8635|----/----\----;CA      ;
                      BPL -                               ;8636|----/----\----;10F7    ;
                      LDA.B #$19                          ;8638|----/----\----;A919    ; \but change desination address to $2119 
                      STA.W !HW_DMAREG+$10                ;863A|----/----\----;8D1143  ; / ; B Address
                      STY.W !HW_MDMAEN                    ;863D|----/----\----;8C0B42  ; Start DMA ; Regular DMA Channel Enable
                      STZ.B !OAMAddress                   ;8640|----/----\----;643F    ; $3B = 0 (not sure what $3B is) 
                      JSL !OAMResetRoutine                ;8642|----/----\----;2200807F; and JSL to a RAM routine 
                      JMP DoSomeSpriteDMA                 ;8646|----/----\----;4C4984  ; Jump to the next part of this routine 
                                                          ;                   ;        ;
                                                          ;                   ;        ;
DATA_008649:          db $08,$18,$00,$00,$00,$00,$10      ;8649|----/----\----;        ;
                                                          ;                   ;        ;
ControllerUpdate:     LDA.W !HW_CNTRL1                    ;8650|----/----\----;AD1842  ; \  ; Joypad 1Data (Low Byte)
                      AND.B #$F0                          ;8653|----/----\----;29F0    ;  | 
                      STA.W !axlr0000P1Hold               ;8655|----/----\----;8DA40D  ;  | 
                      TAY                                 ;8658|----/----\----;A8      ;  | 
                      EOR.W !axlr0000P1Mask               ;8659|----/----\----;4DAC0D  ;  | 
                      AND.W !axlr0000P1Hold               ;865C|----/----\----;2DA40D  ;  | 
                      STA.W !axlr0000P1Frame              ;865F|----/----\----;8DA80D  ;  | 
                      STY.W !axlr0000P1Mask               ;8662|----/----\----;8CAC0D  ;  | 
                      LDA.W !HW_CNTRL1+1                  ;8665|----/----\----;AD1942  ;  | ; Joypad 1Data (High Byte)
                      STA.W !byetudlrP1Hold               ;8668|----/----\----;8DA20D  ;  | 
                      TAY                                 ;866B|----/----\----;A8      ;  | 
                      EOR.W !byetudlrP1Mask               ;866C|----/----\----;4DAA0D  ;  | 
                      AND.W !byetudlrP1Hold               ;866F|----/----\----;2DA20D  ;  | 
                      STA.W !byetudlrP1Frame              ;8672|----/----\----;8DA60D  ;  | 
                      STY.W !byetudlrP1Mask               ;8675|----/----\----;8CAA0D  ;  |Read controller data 
                      LDA.W !HW_CNTRL2                    ;8678|----/----\----;AD1A42  ;  | ; Joypad 2Data (Low Byte)
                      AND.B #$F0                          ;867B|----/----\----;29F0    ;  | 
                      STA.W !axlr0000P2Hold               ;867D|----/----\----;8DA50D  ;  | 
                      TAY                                 ;8680|----/----\----;A8      ;  | 
                      EOR.W !axlr0000P2Mask               ;8681|----/----\----;4DAD0D  ;  | 
                      AND.W !axlr0000P2Hold               ;8684|----/----\----;2DA50D  ;  | 
                      STA.W !axlr0000P2Frame              ;8687|----/----\----;8DA90D  ;  | 
                      STY.W !axlr0000P2Mask               ;868A|----/----\----;8CAD0D  ;  | 
                      LDA.W !HW_CNTRL2+1                  ;868D|----/----\----;AD1B42  ;  | ; Joypad 2Data (High Byte)
                      STA.W !byetudlrP2Hold               ;8690|----/----\----;8DA30D  ;  | 
                      TAY                                 ;8693|----/----\----;A8      ;  | 
                      EOR.W !byetudlrP2Mask               ;8694|----/----\----;4DAB0D  ;  | 
                      AND.W !byetudlrP2Hold               ;8697|----/----\----;2DA30D  ;  | 
                      STA.W !byetudlrP2Frame              ;869A|----/----\----;8DA70D  ;  | 
                      STY.W !byetudlrP2Mask               ;869D|----/----\----;8CAB0D  ; /  
                      LDX.W !ControllersPresent           ;86A0|----/----\----;AEA00D  ; \  
                      BPL +                               ;86A3|----/----\----;1003    ;  |If $0DA0 is positive, set X to $0DA0 
                      LDX.W !PlayerTurnLvl                ;86A5|----/----\----;AEB30D  ;  |Otherwise, set X to current character 
                    + LDA.W !axlr0000P1Hold,X             ;86A8|----/----\----;BDA40D  ; \  
                      AND.B #$C0                          ;86AB|----/----\----;29C0    ;  | 
                      ORA.W !byetudlrP1Hold,X             ;86AD|----/----\----;1DA20D  ;  | 
                      STA.B !byetudlrHold                 ;86B0|----/----\----;8515    ;  | 
                      LDA.W !axlr0000P1Hold,X             ;86B2|----/----\----;BDA40D  ;  | 
                      STA.B !axlr0000Hold                 ;86B5|----/----\----;8517    ;  |Update controller data bytes 
                      LDA.W !axlr0000P1Frame,X            ;86B7|----/----\----;BDA80D  ;  | 
                      AND.B #$40                          ;86BA|----/----\----;2940    ;  | 
                      ORA.W !byetudlrP1Frame,X            ;86BC|----/----\----;1DA60D  ;  | 
                      STA.B !byetudlrFrame                ;86BF|----/----\----;8516    ;  | 
                      LDA.W !axlr0000P1Frame,X            ;86C1|----/----\----;BDA80D  ;  | 
                      STA.B !axlr0000Frame                ;86C4|----/----\----;8518    ; /  
                      RTS                                 ;86C6|----/----\----;60      ; Return 
                                                          ;                   ;        ;
CODE_0086C7:          REP #$30                            ;86C7|----/----\----;C230    ; Index (16 bit) Accum (16 bit) 
                      LDX.W #$0062                        ;86C9|----/----\----;A26200  ;
                      LDA.W #$0202                        ;86CC|----/----\----;A90202  ;
                    - STA.W !OAMTileSize,X                ;86CF|----/----\----;9D2004  ;
                      DEX                                 ;86D2|----/----\----;CA      ;
                      DEX                                 ;86D3|----/----\----;CA      ;
                      BPL -                               ;86D4|----/----\----;10F9    ;
                      SEP #$30                            ;86D6|----/----\----;E230    ; Index (8 bit) Accum (8 bit) 
                      LDA.B #$F0                          ;86D8|----/----\----;A9F0    ;
                      JSL !OAMResetRoutine+$12E           ;86DA|----/----\----;222E817F;
                      RTS                                 ;86DE|----/----\----;60      ;
                                                          ;                   ;        ;
ExecutePtr:           STY.B !_3                           ;86DF|----/----\----;8403    ; "Push" Y 
                      PLY                                 ;86E1|----/----\----;7A      ;
                      STY.B !_0                           ;86E2|----/----\----;8400    ;
                      REP #$30                            ;86E4|----/----\----;C230    ; 16 bit A ; Index (16 bit) Accum (16 bit) 
                      AND.W #$00FF                        ;86E6|----/----\----;29FF00  ; A = Game mode 
                      ASL A                               ;86E9|----/----\----;0A      ; Multiply game mode by 2 
                      TAY                                 ;86EA|----/----\----;A8      ;
                      PLA                                 ;86EB|----/----\----;68      ;
                      STA.B !_1                           ;86EC|----/----\----;8501    ;
                      INY                                 ;86EE|----/----\----;C8      ;
                      LDA.B [!_0],Y                       ;86EF|----/----\----;B700    ;
                      STA.B !_0                           ;86F1|----/----\----;8500    ; A is 16-bit 
                      SEP #$30                            ;86F3|----/----\----;E230    ; Index (8 bit) Accum (8 bit) 
                      LDY.B !_3                           ;86F5|----/----\----;A403    ; "Pull" Y 
                      JML.W [!_0]                         ;86F7|----/----\----;DC0000  ; Jump to the game mode's routine, which has been loaded into $00-02 
                                                          ;                   ;        ;
ExecutePtrLong:       STY.B !_5                           ;86FA|----/----\----;8405    ;
                      PLY                                 ;86FC|----/----\----;7A      ;
                      STY.B !_2                           ;86FD|----/----\----;8402    ;
                      REP #$30                            ;86FF|----/----\----;C230    ; 16 bit A,X,Y ; Index (16 bit) Accum (16 bit) 
                      AND.W #$00FF                        ;8701|----/----\----;29FF00  ; \ A = Tileset/byte 3 (TB3) 
                      STA.B !_3                           ;8704|----/----\----;8503    ; / Store A in $03 
                      ASL A                               ;8706|----/----\----;0A      ; \ Multiply A by 2 
                      ADC.B !_3                           ;8707|----/----\----;6503    ;  |Add TB3 to A 
                      TAY                                 ;8709|----/----\----;A8      ; / Set Y to A 
                      PLA                                 ;870A|----/----\----;68      ;
                      STA.B !_3                           ;870B|----/----\----;8503    ;
                      INY                                 ;870D|----/----\----;C8      ;
                      LDA.B [!_2],Y                       ;870E|----/----\----;B702    ;
                      STA.B !_0                           ;8710|----/----\----;8500    ;
                      INY                                 ;8712|----/----\----;C8      ;
                      LDA.B [!_2],Y                       ;8713|----/----\----;B702    ;
                      STA.B !_1                           ;8715|----/----\----;8501    ;
                      SEP #$30                            ;8717|----/----\----;E230    ; Index (8 bit) Accum (8 bit) 
                      LDY.B !_5                           ;8719|----/----\----;A405    ;
                      JML.W [!_0]                         ;871B|----/----\----;DC0000  ;
                                                          ;                   ;        ;
CODE_00871E:          REP #$10                            ;871E|----/----\----;C210    ; 16 bit X,Y ; Index (16 bit) 
                      STA.W !HW_DMAADDR+$12               ;8720|----/----\----;8D1443  ; A Address Bank
                      LDY.W #$0000                        ;8723|----/----\----;A00000  ; Set index to 0 
CODE_008726:          LDA.B [!_0],Y                       ;8726|----/----\----;B700    ; \ Read line header byte 1 
                      BPL +                               ;8728|----/----\----;1003    ;  |If the byte & %10000000 is true, 
                      SEP #$30                            ;872A|----/----\----;E230    ;  |Set A,X,Y to 8 bit and return ; Index (8 bit) Accum (8 bit) 
                      RTS                                 ;872C|----/----\----;60      ;  | 
                                                          ;                   ;        ;
                    + STA.B !_4                           ;872D|----/----\----;8504    ; Store byte in !_4  ; Index(16 bit) 
                      INY                                 ;872F|----/----\----;C8      ; Move onto the next byte 
                      LDA.B [!_0],Y                       ;8730|----/----\----;B700    ; Read line header byte 2 
                      STA.B !_3                           ;8732|----/----\----;8503    ; Store byte in $03 
                      INY                                 ;8734|----/----\----;C8      ; Move onto the next byte 
                      LDA.B [!_0],Y                       ;8735|----/----\----;B700    ; Read line header byte 3 
                      STZ.B !_7                           ;8737|----/----\----;6407    ; \  
                      ASL A                               ;8739|----/----\----;0A      ;  |Store direction bit in $07 
                      ROL.B !_7                           ;873A|----/----\----;2607    ; /  
                      LDA.B #$18                          ;873C|----/----\----;A918    ; \ Set B address (DMA) to x18 
                      STA.W !HW_DMAREG+$10                ;873E|----/----\----;8D1143  ; /  ; B Address
                      LDA.B [!_0],Y                       ;8741|----/----\----;B700    ; Re-read line header byte 3 
                      AND.B #$40                          ;8743|----/----\----;2940    ; \  
                      LSR A                               ;8745|----/----\----;4A      ;  | 
                      LSR A                               ;8746|----/----\----;4A      ;  |Store RLE bit << 3 in $05 
                      LSR A                               ;8747|----/----\----;4A      ;  | 
                      STA.B !_5                           ;8748|----/----\----;8505    ; /  
                      STZ.B !_6                           ;874A|----/----\----;6406    ;
                      ORA.B #$01                          ;874C|----/----\----;0901    ;
                      STA.W !HW_DMAPARAM+$10              ;874E|----/----\----;8D1043  ; Parameters for DMA Transfer
                      REP #$20                            ;8751|----/----\----;C220    ; 16 bit A ; Accum (16 bit) 
                      LDA.B !_3                           ;8753|----/----\----;A503    ;
                      STA.W !HW_VMADD                     ;8755|----/----\----;8D1621  ; Address for VRAM Read/Write (Low Byte)
                      LDA.B [!_0],Y                       ;8758|----/----\----;B700    ;
                      XBA                                 ;875A|----/----\----;EB      ;
                      AND.W #$3FFF                        ;875B|----/----\----;29FF3F  ;
                      TAX                                 ;875E|----/----\----;AA      ;
                      INX                                 ;875F|----/----\----;E8      ;
                      INY                                 ;8760|----/----\----;C8      ;
                      INY                                 ;8761|----/----\----;C8      ;
                      TYA                                 ;8762|----/----\----;98      ;
                      CLC                                 ;8763|----/----\----;18      ;
                      ADC.B !_0                           ;8764|----/----\----;6500    ;
                      STA.W !HW_DMAADDR+$10               ;8766|----/----\----;8D1243  ; A Address (Low Byte)
                      STX.W !HW_DMACNT+$10                ;8769|----/----\----;8E1543  ; Number Bytes to Transfer (Low Byte) (DMA)
                      LDA.B !_5                           ;876C|----/----\----;A505    ;
                      BEQ +                               ;876E|----/----\----;F025    ;
                      SEP #$20                            ;8770|----/----\----;E220    ; 8 bit A ; Accum (8 bit) 
                      LDA.B !_7                           ;8772|----/----\----;A507    ;
                      STA.W !HW_VMAINC                    ;8774|----/----\----;8D1521  ; VRAM Address Increment Value
                      LDA.B #$02                          ;8777|----/----\----;A902    ;
                      STA.W !HW_MDMAEN                    ;8779|----/----\----;8D0B42  ; Regular DMA Channel Enable
                      LDA.B #$19                          ;877C|----/----\----;A919    ;
                      STA.W !HW_DMAREG+$10                ;877E|----/----\----;8D1143  ; B Address
                      REP #$21                            ;8781|----/----\----;C221    ; Accum (16 bit) 
                      LDA.B !_3                           ;8783|----/----\----;A503    ;
                      STA.W !HW_VMADD                     ;8785|----/----\----;8D1621  ; Address for VRAM Read/Write (Low Byte)
                      TYA                                 ;8788|----/----\----;98      ;
                      ADC.B !_0                           ;8789|----/----\----;6500    ;
                      INC A                               ;878B|----/----\----;1A      ;
                      STA.W !HW_DMAADDR+$10               ;878C|----/----\----;8D1243  ; A Address (Low Byte)
                      STX.W !HW_DMACNT+$10                ;878F|----/----\----;8E1543  ; Number Bytes to Transfer (Low Byte) (DMA)
                      LDX.W #$0002                        ;8792|----/----\----;A20200  ;
                    + STX.B !_3                           ;8795|----/----\----;8603    ;
                      TYA                                 ;8797|----/----\----;98      ;
                      CLC                                 ;8798|----/----\----;18      ;
                      ADC.B !_3                           ;8799|----/----\----;6503    ;
                      TAY                                 ;879B|----/----\----;A8      ;
                      SEP #$20                            ;879C|----/----\----;E220    ; Accum (8 bit) 
                      LDA.B !_7                           ;879E|----/----\----;A507    ;
                      ORA.B #$80                          ;87A0|----/----\----;0980    ;
                      STA.W !HW_VMAINC                    ;87A2|----/----\----;8D1521  ; VRAM Address Increment Value
                      LDA.B #$02                          ;87A5|----/----\----;A902    ;
                      STA.W !HW_MDMAEN                    ;87A7|----/----\----;8D0B42  ; Regular DMA Channel Enable
                      JMP CODE_008726                     ;87AA|----/----\----;4C2687  ;
                                                          ;                   ;        ;
CODE_0087AD:          SEP #$30                            ;87AD|----/----\----;E230    ; Index (8 bit) Accum (8 bit) 
                      LDA.W !Layer1VramAddr               ;87AF|----/----\----;ADE41B  ; \  
                      BNE +                               ;87B2|----/----\----;D003    ;  |If Layer 1 has to be updated, 
                      JMP CODE_0088DD                     ;87B4|----/----\----;4CDD88  ;  |jump to $88DD 
                                                          ;                   ;        ;
                    + LDA.B !ScreenMode                   ;87B7|----/----\----;A55B    ; \  
                      AND.B #$01                          ;87B9|----/----\----;2901    ;  | 
                      BEQ +                               ;87BB|----/----\----;F003    ;  |If on a vertical level, 
                      JMP CODE_008849                     ;87BD|----/----\----;4C4988  ;  |jump to $8849 
                                                          ;                   ;        ;
                    + LDY.B #$81                          ;87C0|----/----\----;A081    ; \ Set "VRAM Address Increment Value" to x81 
                      STY.W !HW_VMAINC                    ;87C2|----/----\----;8C1521  ; /  ; VRAM Address Increment Value
                      LDA.W !Layer1VramAddr+1             ;87C5|----/----\----;ADE51B  ;
                      STA.W !HW_VMADD                     ;87C8|----/----\----;8D1621  ; Address for VRAM Read/Write (Low Byte)
                      LDA.W !Layer1VramAddr               ;87CB|----/----\----;ADE41B  ;
                      STA.W !HW_VMADD+1                   ;87CE|----/----\----;8D1721  ; Address for VRAM Read/Write (High Byte)
                      LDX.B #$06                          ;87D1|----/----\----;A206    ;
                    - LDA.W DATA_008A16,X                 ;87D3|----/----\----;BD168A  ;
                      STA.W !HW_DMAPARAM+$10,X            ;87D6|----/----\----;9D1043  ;
                      DEX                                 ;87D9|----/----\----;CA      ;
                      BPL -                               ;87DA|----/----\----;10F7    ;
                      LDA.B #$02                          ;87DC|----/----\----;A902    ; \ Enable DMA channel 1 
                      STA.W !HW_MDMAEN                    ;87DE|----/----\----;8D0B42  ; /  ; Regular DMA Channel Enable
                      STY.W !HW_VMAINC                    ;87E1|----/----\----;8C1521  ; VRAM Address Increment Value
                      LDA.W !Layer1VramAddr+1             ;87E4|----/----\----;ADE51B  ;
                      STA.W !HW_VMADD                     ;87E7|----/----\----;8D1621  ; Address for VRAM Read/Write (Low Byte)
                      LDA.W !Layer1VramAddr               ;87EA|----/----\----;ADE41B  ;
                      CLC                                 ;87ED|----/----\----;18      ;
                      ADC.B #$08                          ;87EE|----/----\----;6908    ;
                      STA.W !HW_VMADD+1                   ;87F0|----/----\----;8D1721  ; Address for VRAM Read/Write (High Byte)
                      LDX.B #$06                          ;87F3|----/----\----;A206    ;
                    - LDA.W DATA_008A1D,X                 ;87F5|----/----\----;BD1D8A  ;
                      STA.W !HW_DMAPARAM+$10,X            ;87F8|----/----\----;9D1043  ;
                      DEX                                 ;87FB|----/----\----;CA      ;
                      BPL -                               ;87FC|----/----\----;10F7    ;
                      LDA.B #$02                          ;87FE|----/----\----;A902    ;
                      STA.W !HW_MDMAEN                    ;8800|----/----\----;8D0B42  ; \ Enable DMA channel 1 ; Regular DMA Channel Enable
                      STY.W !HW_VMAINC                    ;8803|----/----\----;8C1521  ; /  ; VRAM Address Increment Value
                      LDA.W !Layer1VramAddr+1             ;8806|----/----\----;ADE51B  ;
                      INC A                               ;8809|----/----\----;1A      ;
                      STA.W !HW_VMADD                     ;880A|----/----\----;8D1621  ; Address for VRAM Read/Write (Low Byte)
                      LDA.W !Layer1VramAddr               ;880D|----/----\----;ADE41B  ;
                      STA.W !HW_VMADD+1                   ;8810|----/----\----;8D1721  ; Address for VRAM Read/Write (High Byte)
                      LDX.B #$06                          ;8813|----/----\----;A206    ;
                    - LDA.W DATA_008A24,X                 ;8815|----/----\----;BD248A  ;
                      STA.W !HW_DMAPARAM+$10,X            ;8818|----/----\----;9D1043  ;
                      DEX                                 ;881B|----/----\----;CA      ;
                      BPL -                               ;881C|----/----\----;10F7    ;
                      LDA.B #$02                          ;881E|----/----\----;A902    ; \ Enable DMA channel 1 
                      STA.W !HW_MDMAEN                    ;8820|----/----\----;8D0B42  ; /  ; Regular DMA Channel Enable
                      STY.W !HW_VMAINC                    ;8823|----/----\----;8C1521  ; VRAM Address Increment Value
                      LDA.W !Layer1VramAddr+1             ;8826|----/----\----;ADE51B  ;
                      INC A                               ;8829|----/----\----;1A      ;
                      STA.W !HW_VMADD                     ;882A|----/----\----;8D1621  ; Address for VRAM Read/Write (Low Byte)
                      LDA.W !Layer1VramAddr               ;882D|----/----\----;ADE41B  ;
                      CLC                                 ;8830|----/----\----;18      ;
                      ADC.B #$08                          ;8831|----/----\----;6908    ;
                      STA.W !HW_VMADD+1                   ;8833|----/----\----;8D1721  ; Address for VRAM Read/Write (High Byte)
                      LDX.B #$06                          ;8836|----/----\----;A206    ;
                    - LDA.W DATA_008A2B,X                 ;8838|----/----\----;BD2B8A  ;
                      STA.W !HW_DMAPARAM+$10,X            ;883B|----/----\----;9D1043  ;
                      DEX                                 ;883E|----/----\----;CA      ;
                      BPL -                               ;883F|----/----\----;10F7    ;
                      LDA.B #$02                          ;8841|----/----\----;A902    ; \ Enable DMA channel 1 
                      STA.W !HW_MDMAEN                    ;8843|----/----\----;8D0B42  ; /  ; Regular DMA Channel Enable
                      JMP CODE_0088DD                     ;8846|----/----\----;4CDD88  ;
                                                          ;                   ;        ;
CODE_008849:          LDY.B #$80                          ;8849|----/----\----;A080    ;
                      STY.W !HW_VMAINC                    ;884B|----/----\----;8C1521  ; VRAM Address Increment Value
                      LDA.W !Layer1VramAddr+1             ;884E|----/----\----;ADE51B  ;
                      STA.W !HW_VMADD                     ;8851|----/----\----;8D1621  ; Address for VRAM Read/Write (Low Byte)
                      LDA.W !Layer1VramAddr               ;8854|----/----\----;ADE41B  ;
                      STA.W !HW_VMADD+1                   ;8857|----/----\----;8D1721  ; Address for VRAM Read/Write (High Byte)
                      LDX.B #$06                          ;885A|----/----\----;A206    ;
                    - LDA.W DATA_008A16,X                 ;885C|----/----\----;BD168A  ;
                      STA.W !HW_DMAPARAM+$10,X            ;885F|----/----\----;9D1043  ;
                      DEX                                 ;8862|----/----\----;CA      ;
                      BPL -                               ;8863|----/----\----;10F7    ;
                      LDA.B #$02                          ;8865|----/----\----;A902    ;
                      STA.W !HW_MDMAEN                    ;8867|----/----\----;8D0B42  ; Regular DMA Channel Enable
                      STY.W !HW_VMAINC                    ;886A|----/----\----;8C1521  ; VRAM Address Increment Value
                      LDA.W !Layer1VramAddr+1             ;886D|----/----\----;ADE51B  ;
                      STA.W !HW_VMADD                     ;8870|----/----\----;8D1621  ; Address for VRAM Read/Write (Low Byte)
                      LDA.W !Layer1VramAddr               ;8873|----/----\----;ADE41B  ;
                      CLC                                 ;8876|----/----\----;18      ;
                      ADC.B #$04                          ;8877|----/----\----;6904    ;
                      STA.W !HW_VMADD+1                   ;8879|----/----\----;8D1721  ; Address for VRAM Read/Write (High Byte)
                      LDX.B #$06                          ;887C|----/----\----;A206    ;
                    - LDA.W DATA_008A1D,X                 ;887E|----/----\----;BD1D8A  ;
                      STA.W !HW_DMAPARAM+$10,X            ;8881|----/----\----;9D1043  ;
                      DEX                                 ;8884|----/----\----;CA      ;
                      BPL -                               ;8885|----/----\----;10F7    ;
                      LDA.B #$40                          ;8887|----/----\----;A940    ;
                      STA.W !HW_DMACNT+$10                ;8889|----/----\----;8D1543  ; Number Bytes to Transfer (Low Byte) (DMA)
                      LDA.B #$02                          ;888C|----/----\----;A902    ;
                      STA.W !HW_MDMAEN                    ;888E|----/----\----;8D0B42  ; Regular DMA Channel Enable
                      STY.W !HW_VMAINC                    ;8891|----/----\----;8C1521  ; VRAM Address Increment Value
                      LDA.W !Layer1VramAddr+1             ;8894|----/----\----;ADE51B  ;
                      CLC                                 ;8897|----/----\----;18      ;
                      ADC.B #$20                          ;8898|----/----\----;6920    ;
                      STA.W !HW_VMADD                     ;889A|----/----\----;8D1621  ; Address for VRAM Read/Write (Low Byte)
                      LDA.W !Layer1VramAddr               ;889D|----/----\----;ADE41B  ;
                      STA.W !HW_VMADD+1                   ;88A0|----/----\----;8D1721  ; Address for VRAM Read/Write (High Byte)
                      LDX.B #$06                          ;88A3|----/----\----;A206    ;
                    - LDA.W DATA_008A24,X                 ;88A5|----/----\----;BD248A  ;
                      STA.W !HW_DMAPARAM+$10,X            ;88A8|----/----\----;9D1043  ;
                      DEX                                 ;88AB|----/----\----;CA      ;
                      BPL -                               ;88AC|----/----\----;10F7    ;
                      LDA.B #$02                          ;88AE|----/----\----;A902    ;
                      STA.W !HW_MDMAEN                    ;88B0|----/----\----;8D0B42  ; Regular DMA Channel Enable
                      STY.W !HW_VMAINC                    ;88B3|----/----\----;8C1521  ; VRAM Address Increment Value
                      LDA.W !Layer1VramAddr+1             ;88B6|----/----\----;ADE51B  ;
                      CLC                                 ;88B9|----/----\----;18      ;
                      ADC.B #$20                          ;88BA|----/----\----;6920    ;
                      STA.W !HW_VMADD                     ;88BC|----/----\----;8D1621  ; Address for VRAM Read/Write (Low Byte)
                      LDA.W !Layer1VramAddr               ;88BF|----/----\----;ADE41B  ;
                      CLC                                 ;88C2|----/----\----;18      ;
                      ADC.B #$04                          ;88C3|----/----\----;6904    ;
                      STA.W !HW_VMADD+1                   ;88C5|----/----\----;8D1721  ; Address for VRAM Read/Write (High Byte)
                      LDX.B #$06                          ;88C8|----/----\----;A206    ;
                    - LDA.W DATA_008A2B,X                 ;88CA|----/----\----;BD2B8A  ;
                      STA.W !HW_DMAPARAM+$10,X            ;88CD|----/----\----;9D1043  ;
                      DEX                                 ;88D0|----/----\----;CA      ;
                      BPL -                               ;88D1|----/----\----;10F7    ;
                      LDA.B #$40                          ;88D3|----/----\----;A940    ;
                      STA.W !HW_DMACNT+$10                ;88D5|----/----\----;8D1543  ; Number Bytes to Transfer (Low Byte) (DMA)
                      LDA.B #$02                          ;88D8|----/----\----;A902    ;
                      STA.W !HW_MDMAEN                    ;88DA|----/----\----;8D0B42  ; Regular DMA Channel Enable
CODE_0088DD:          LDA.B #$00                          ;88DD|----/----\----;A900    ;
                      STA.W !Layer1VramAddr               ;88DF|----/----\----;8DE41B  ;
                      LDA.W !Layer2VramAddr               ;88E2|----/----\----;ADE61C  ;
                      BNE +                               ;88E5|----/----\----;D003    ;
                      JMP CODE_008A10                     ;88E7|----/----\----;4C108A  ;
                                                          ;                   ;        ;
                    + LDA.B !ScreenMode                   ;88EA|----/----\----;A55B    ;
                      AND.B #$02                          ;88EC|----/----\----;2902    ;
                      BEQ +                               ;88EE|----/----\----;F003    ;
                      JMP CODE_00897C                     ;88F0|----/----\----;4C7C89  ;
                                                          ;                   ;        ;
                    + LDY.B #$81                          ;88F3|----/----\----;A081    ;
                      STY.W !HW_VMAINC                    ;88F5|----/----\----;8C1521  ; VRAM Address Increment Value
                      LDA.W !Layer2VramAddr+1             ;88F8|----/----\----;ADE71C  ;
                      STA.W !HW_VMADD                     ;88FB|----/----\----;8D1621  ; Address for VRAM Read/Write (Low Byte)
                      LDA.W !Layer2VramAddr               ;88FE|----/----\----;ADE61C  ;
                      STA.W !HW_VMADD+1                   ;8901|----/----\----;8D1721  ; Address for VRAM Read/Write (High Byte)
                      LDX.B #$06                          ;8904|----/----\----;A206    ;
                    - LDA.W DATA_008A32,X                 ;8906|----/----\----;BD328A  ;
                      STA.W !HW_DMAPARAM+$10,X            ;8909|----/----\----;9D1043  ;
                      DEX                                 ;890C|----/----\----;CA      ;
                      BPL -                               ;890D|----/----\----;10F7    ;
                      LDA.B #$02                          ;890F|----/----\----;A902    ;
                      STA.W !HW_MDMAEN                    ;8911|----/----\----;8D0B42  ; Regular DMA Channel Enable
                      STY.W !HW_VMAINC                    ;8914|----/----\----;8C1521  ; VRAM Address Increment Value
                      LDA.W !Layer2VramAddr+1             ;8917|----/----\----;ADE71C  ;
                      STA.W !HW_VMADD                     ;891A|----/----\----;8D1621  ; Address for VRAM Read/Write (Low Byte)
                      LDA.W !Layer2VramAddr               ;891D|----/----\----;ADE61C  ;
                      CLC                                 ;8920|----/----\----;18      ;
                      ADC.B #$08                          ;8921|----/----\----;6908    ;
                      STA.W !HW_VMADD+1                   ;8923|----/----\----;8D1721  ; Address for VRAM Read/Write (High Byte)
                      LDX.B #$06                          ;8926|----/----\----;A206    ;
                    - LDA.W DATA_008A39,X                 ;8928|----/----\----;BD398A  ;
                      STA.W !HW_DMAPARAM+$10,X            ;892B|----/----\----;9D1043  ;
                      DEX                                 ;892E|----/----\----;CA      ;
                      BPL -                               ;892F|----/----\----;10F7    ;
                      LDA.B #$02                          ;8931|----/----\----;A902    ;
                      STA.W !HW_MDMAEN                    ;8933|----/----\----;8D0B42  ; Regular DMA Channel Enable
                      STY.W !HW_VMAINC                    ;8936|----/----\----;8C1521  ; VRAM Address Increment Value
                      LDA.W !Layer2VramAddr+1             ;8939|----/----\----;ADE71C  ;
                      INC A                               ;893C|----/----\----;1A      ;
                      STA.W !HW_VMADD                     ;893D|----/----\----;8D1621  ; Address for VRAM Read/Write (Low Byte)
                      LDA.W !Layer2VramAddr               ;8940|----/----\----;ADE61C  ;
                      STA.W !HW_VMADD+1                   ;8943|----/----\----;8D1721  ; Address for VRAM Read/Write (High Byte)
                      LDX.B #$06                          ;8946|----/----\----;A206    ;
                    - LDA.W DATA_008A40,X                 ;8948|----/----\----;BD408A  ;
                      STA.W !HW_DMAPARAM+$10,X            ;894B|----/----\----;9D1043  ;
                      DEX                                 ;894E|----/----\----;CA      ;
                      BPL -                               ;894F|----/----\----;10F7    ;
                      LDA.B #$02                          ;8951|----/----\----;A902    ;
                      STA.W !HW_MDMAEN                    ;8953|----/----\----;8D0B42  ; Regular DMA Channel Enable
                      STY.W !HW_VMAINC                    ;8956|----/----\----;8C1521  ; VRAM Address Increment Value
                      LDA.W !Layer2VramAddr+1             ;8959|----/----\----;ADE71C  ;
                      INC A                               ;895C|----/----\----;1A      ;
                      STA.W !HW_VMADD                     ;895D|----/----\----;8D1621  ; Address for VRAM Read/Write (Low Byte)
                      LDA.W !Layer2VramAddr               ;8960|----/----\----;ADE61C  ;
                      CLC                                 ;8963|----/----\----;18      ;
                      ADC.B #$08                          ;8964|----/----\----;6908    ;
                      STA.W !HW_VMADD+1                   ;8966|----/----\----;8D1721  ; Address for VRAM Read/Write (High Byte)
                      LDX.B #$06                          ;8969|----/----\----;A206    ;
                    - LDA.W DATA_008A47,X                 ;896B|----/----\----;BD478A  ;
                      STA.W !HW_DMAPARAM+$10,X            ;896E|----/----\----;9D1043  ;
                      DEX                                 ;8971|----/----\----;CA      ;
                      BPL -                               ;8972|----/----\----;10F7    ;
                      LDA.B #$02                          ;8974|----/----\----;A902    ;
                      STA.W !HW_MDMAEN                    ;8976|----/----\----;8D0B42  ; Regular DMA Channel Enable
                      JMP CODE_008A10                     ;8979|----/----\----;4C108A  ;
                                                          ;                   ;        ;
CODE_00897C:          LDY.B #$80                          ;897C|----/----\----;A080    ;
                      STY.W !HW_VMAINC                    ;897E|----/----\----;8C1521  ; VRAM Address Increment Value
                      LDA.W !Layer2VramAddr+1             ;8981|----/----\----;ADE71C  ;
                      STA.W !HW_VMADD                     ;8984|----/----\----;8D1621  ; Address for VRAM Read/Write (Low Byte)
                      LDA.W !Layer2VramAddr               ;8987|----/----\----;ADE61C  ;
                      STA.W !HW_VMADD+1                   ;898A|----/----\----;8D1721  ; Address for VRAM Read/Write (High Byte)
                      LDX.B #$06                          ;898D|----/----\----;A206    ;
                    - LDA.W DATA_008A32,X                 ;898F|----/----\----;BD328A  ;
                      STA.W !HW_DMAPARAM+$10,X            ;8992|----/----\----;9D1043  ;
                      DEX                                 ;8995|----/----\----;CA      ;
                      BPL -                               ;8996|----/----\----;10F7    ;
                      LDA.B #$02                          ;8998|----/----\----;A902    ;
                      STA.W !HW_MDMAEN                    ;899A|----/----\----;8D0B42  ; Regular DMA Channel Enable
                      STY.W !HW_VMAINC                    ;899D|----/----\----;8C1521  ; VRAM Address Increment Value
                      LDA.W !Layer2VramAddr+1             ;89A0|----/----\----;ADE71C  ;
                      STA.W !HW_VMADD                     ;89A3|----/----\----;8D1621  ; Address for VRAM Read/Write (Low Byte)
                      LDA.W !Layer2VramAddr               ;89A6|----/----\----;ADE61C  ;
                      CLC                                 ;89A9|----/----\----;18      ;
                      ADC.B #$04                          ;89AA|----/----\----;6904    ;
                      STA.W !HW_VMADD+1                   ;89AC|----/----\----;8D1721  ; Address for VRAM Read/Write (High Byte)
                      LDX.B #$06                          ;89AF|----/----\----;A206    ;
                    - LDA.W DATA_008A39,X                 ;89B1|----/----\----;BD398A  ;
                      STA.W !HW_DMAPARAM+$10,X            ;89B4|----/----\----;9D1043  ;
                      DEX                                 ;89B7|----/----\----;CA      ;
                      BPL -                               ;89B8|----/----\----;10F7    ;
                      LDA.B #$40                          ;89BA|----/----\----;A940    ;
                      STA.W !HW_DMACNT+$10                ;89BC|----/----\----;8D1543  ; Number Bytes to Transfer (Low Byte) (DMA)
                      LDA.B #$02                          ;89BF|----/----\----;A902    ;
                      STA.W !HW_MDMAEN                    ;89C1|----/----\----;8D0B42  ; Regular DMA Channel Enable
                      STY.W !HW_VMAINC                    ;89C4|----/----\----;8C1521  ; VRAM Address Increment Value
                      LDA.W !Layer2VramAddr+1             ;89C7|----/----\----;ADE71C  ;
                      CLC                                 ;89CA|----/----\----;18      ;
                      ADC.B #$20                          ;89CB|----/----\----;6920    ;
                      STA.W !HW_VMADD                     ;89CD|----/----\----;8D1621  ; Address for VRAM Read/Write (Low Byte)
                      LDA.W !Layer2VramAddr               ;89D0|----/----\----;ADE61C  ;
                      STA.W !HW_VMADD+1                   ;89D3|----/----\----;8D1721  ; Address for VRAM Read/Write (High Byte)
                      LDX.B #$06                          ;89D6|----/----\----;A206    ;
                    - LDA.W DATA_008A40,X                 ;89D8|----/----\----;BD408A  ;
                      STA.W !HW_DMAPARAM+$10,X            ;89DB|----/----\----;9D1043  ;
                      DEX                                 ;89DE|----/----\----;CA      ;
                      BPL -                               ;89DF|----/----\----;10F7    ;
                      LDA.B #$02                          ;89E1|----/----\----;A902    ;
                      STA.W !HW_MDMAEN                    ;89E3|----/----\----;8D0B42  ; Regular DMA Channel Enable
                      STY.W !HW_VMAINC                    ;89E6|----/----\----;8C1521  ; VRAM Address Increment Value
                      LDA.W !Layer2VramAddr+1             ;89E9|----/----\----;ADE71C  ;
                      CLC                                 ;89EC|----/----\----;18      ;
                      ADC.B #$20                          ;89ED|----/----\----;6920    ;
                      STA.W !HW_VMADD                     ;89EF|----/----\----;8D1621  ; Address for VRAM Read/Write (Low Byte)
                      LDA.W !Layer2VramAddr               ;89F2|----/----\----;ADE61C  ;
                      CLC                                 ;89F5|----/----\----;18      ;
                      ADC.B #$04                          ;89F6|----/----\----;6904    ;
                      STA.W !HW_VMADD+1                   ;89F8|----/----\----;8D1721  ; Address for VRAM Read/Write (High Byte)
                      LDX.B #$06                          ;89FB|----/----\----;A206    ;
                    - LDA.W DATA_008A47,X                 ;89FD|----/----\----;BD478A  ;
                      STA.W !HW_DMAPARAM+$10,X            ;8A00|----/----\----;9D1043  ;
                      DEX                                 ;8A03|----/----\----;CA      ;
                      BPL -                               ;8A04|----/----\----;10F7    ;
                      LDA.B #$40                          ;8A06|----/----\----;A940    ;
                      STA.W !HW_DMACNT+$10                ;8A08|----/----\----;8D1543  ; Number Bytes to Transfer (Low Byte) (DMA)
                      LDA.B #$02                          ;8A0B|----/----\----;A902    ;
                      STA.W !HW_MDMAEN                    ;8A0D|----/----\----;8D0B42  ; Regular DMA Channel Enable
CODE_008A10:          LDA.B #$00                          ;8A10|----/----\----;A900    ;
                      STA.W !Layer2VramAddr               ;8A12|----/----\----;8DE61C  ;
                      RTL                                 ;8A15|----/----\----;6B      ;
                                                          ;                   ;        ;
                                                          ;                   ;        ;
DATA_008A16:          db $01,$18,$E6,$1B,$00,$40,$00      ;8A16|----/----\----;        ;
                                                          ;                   ;        ;
DATA_008A1D:          db $01,$18,$26,$1C,$00,$2C,$00      ;8A1D|----/----\----;        ;
                                                          ;                   ;        ;
DATA_008A24:          db $01,$18,$66,$1C,$00,$40,$00      ;8A24|----/----\----;        ;
                                                          ;                   ;        ;
DATA_008A2B:          db $01,$18,$A6,$1C,$00,$2C,$00      ;8A2B|----/----\----;        ;
                                                          ;                   ;        ;
DATA_008A32:          db $01,$18,$E8,$1C,$00,$40,$00      ;8A32|----/----\----;        ;
                                                          ;                   ;        ;
DATA_008A39:          db $01,$18,$28,$1D,$00,$2C,$00      ;8A39|----/----\----;        ;
                                                          ;                   ;        ;
DATA_008A40:          db $01,$18,$68,$1D,$00,$40,$00      ;8A40|----/----\----;        ;
                                                          ;                   ;        ;
DATA_008A47:          db $01,$18,$A8,$1D,$00,$2C,$00      ;8A47|----/----\----;        ;
                                                          ;                   ;        ;
ClearStack:           REP #$30                            ;8A4E|----/----\----;C230    ; Index (16 bit) Accum (16 bit) 
                      LDX.W #$1FFE                        ;8A50|----/----\----;A2FE1F  ;
CODE_008A53:          STZ.B !_0,X                         ;8A53|----/----\----;7400    ;
CODE_008A55:          DEX                                 ;8A55|----/----\----;CA      ;
                      DEX                                 ;8A56|----/----\----;CA      ;
                      CPX.W #$01FF                        ;8A57|----/----\----;E0FF01  ;
                      BPL CODE_008A61                     ;8A5A|----/----\----;1005    ;
                      CPX.W #$0100                        ;8A5C|----/----\----;E00001  ;
                      BPL CODE_008A55                     ;8A5F|----/----\----;10F4    ;
CODE_008A61:          CPX.W #$FFFE                        ;8A61|----/----\----;E0FEFF  ;
                      BNE CODE_008A53                     ;8A64|----/----\----;D0ED    ;
                      LDA.W #$0000                        ;8A66|----/----\----;A90000  ;
                      STA.L !DynStripeImgSize             ;8A69|----/----\----;8F7B837F;
                      STZ.W !DynPaletteIndex              ;8A6D|----/----\----;9C8106  ;
                      SEP #$30                            ;8A70|----/----\----;E230    ; Index (8 bit) Accum (8 bit) 
                      LDA.B #$FF                          ;8A72|----/----\----;A9FF    ;
                      STA.L !DynamicStripeImage           ;8A74|----/----\----;8F7D837F;
                      RTS                                 ;8A78|----/----\----;60      ;
                                                          ;                   ;        ;
SetUpScreen:          STZ.W !HW_SETINI                    ;8A79|----/----\----;9C3321  ; Set "Screen Initial Settings" to x00 ; Screen Initial Settings
                      STZ.W !HW_MOSAIC                    ;8A7C|----/----\----;9C0621  ; Turn off mosaic ; Mosaic Size and BG Enable
                      LDA.B #$23                          ;8A7F|----/----\----;A923    ;
                      STA.W !HW_BG1SC                     ;8A81|----/----\----;8D0721  ; BG 1 Address and Size
                      LDA.B #$33                          ;8A84|----/----\----;A933    ;
                      STA.W !HW_BG2SC                     ;8A86|----/----\----;8D0821  ; ; BG 2 Address and Size
                      LDA.B #$53                          ;8A89|----/----\----;A953    ;
                      STA.W !HW_BG3SC                     ;8A8B|----/----\----;8D0921  ; BG 3 Address and Size
                      LDA.B #$00                          ;8A8E|----/----\----;A900    ;
                      STA.W !HW_BG12NBA                   ;8A90|----/----\----;8D0B21  ; BG 1 & 2 Tile Data Designation
                      LDA.B #$04                          ;8A93|----/----\----;A904    ;
                      STA.W !HW_BG34NBA                   ;8A95|----/----\----;8D0C21  ; BG 3 & 4 Tile Data Designation
                      STZ.B !Layer12Window                ;8A98|----/----\----;6441    ;
                      STZ.B !Layer34Window                ;8A9A|----/----\----;6442    ;
                      STZ.B !OBJCWWindow                  ;8A9C|----/----\----;6443    ;
                      STZ.W !HW_WBGLOG                    ;8A9E|----/----\----;9C2A21  ; BG 1, 2, 3 and 4 Window Logic Settings
                      STZ.W !HW_WOBJLOG                   ;8AA1|----/----\----;9C2B21  ; Color and OBJ Window Logic Settings
                      STZ.W !HW_TMW                       ;8AA4|----/----\----;9C2E21  ; Window Mask Designation for Main Screen
                      STZ.W !HW_TSW                       ;8AA7|----/----\----;9C2F21  ; Window Mask Designation for Sub Screen
                      LDA.B #$02                          ;8AAA|----/----\----;A902    ;
                      STA.B !ColorAddition                ;8AAC|----/----\----;8544    ;
                      LDA.B #$80                          ;8AAE|----/----\----;A980    ; \ Set Mode7 "Screen Over" to %10000000, disable Mode7 flipping 
                      STA.W !HW_M7SEL                     ;8AB0|----/----\----;8D1A21  ; /  ; Initial Setting for Mode 7
                      RTS                                 ;8AB3|----/----\----;60      ; Return 
                                                          ;                   ;        ;
                                                          ;                   ;        ;
DATA_008AB4:          db $00,$00,$FE,$00,$00,$00,$FE,$00  ;8AB4|----/----\----;        ;
DATA_008ABC:          db $00,$00,$02,$00,$00,$00,$02,$00  ;8ABC|----/----\----;        ;
                      db $00,$00,$00,$01,$FF,$FF,$00,$10  ;8AC4|----/----\----;        ;
                      db $F0                              ;8ACC|----/----\----;        ;
                                                          ;                   ;        ;
CODE_008ACD:          LDA.B !Mode7YScale                  ;8ACD|----/----\----;A539    ;
                      STA.B !_0                           ;8ACF|----/----\----;8500    ;
                      REP #$30                            ;8AD1|----/----\----;C230    ; Index (16 bit) Accum (16 bit) 
                      JSR CODE_008AE8                     ;8AD3|----/----\----;20E88A  ;
                      LDA.B !Mode7XScale                  ;8AD6|----/----\----;A538    ;
                      STA.B !_0                           ;8AD8|----/----\----;8500    ;
                      REP #$30                            ;8ADA|----/----\----;C230    ; Index (16 bit) Accum (16 bit) 
                      LDA.B !Mode7ParamA                  ;8ADC|----/----\----;A52E    ;
                      STA.B !Mode7ParamD                  ;8ADE|----/----\----;8534    ;
                      LDA.B !Mode7ParamB                  ;8AE0|----/----\----;A530    ;
                      EOR.W #$FFFF                        ;8AE2|----/----\----;49FFFF  ;
                      INC A                               ;8AE5|----/----\----;1A      ;
                      STA.B !Mode7ParamC                  ;8AE6|----/----\----;8532    ;
CODE_008AE8:          LDA.B !Mode7Angle                   ;8AE8|----/----\----;A536    ;
                      ASL A                               ;8AEA|----/----\----;0A      ;
                      PHA                                 ;8AEB|----/----\----;48      ;
                      XBA                                 ;8AEC|----/----\----;EB      ;
                      AND.W #$0003                        ;8AED|----/----\----;290300  ;
                      ASL A                               ;8AF0|----/----\----;0A      ;
                      TAY                                 ;8AF1|----/----\----;A8      ;
                      PLA                                 ;8AF2|----/----\----;68      ;
                      AND.W #$00FE                        ;8AF3|----/----\----;29FE00  ;
                      EOR.W DATA_008AB4,Y                 ;8AF6|----/----\----;59B48A  ;
                      CLC                                 ;8AF9|----/----\----;18      ;
                      ADC.W DATA_008ABC,Y                 ;8AFA|----/----\----;79BC8A  ;
                      TAX                                 ;8AFD|----/----\----;AA      ;
                      JSR CODE_008B2B                     ;8AFE|----/----\----;202B8B  ;
                      CPY.W #$0004                        ;8B01|----/----\----;C00400  ;
                      BCC +                               ;8B04|----/----\----;9004    ;
                      EOR.W #$FFFF                        ;8B06|----/----\----;49FFFF  ;
                      INC A                               ;8B09|----/----\----;1A      ;
                    + STA.B !Mode7ParamB                  ;8B0A|----/----\----;8530    ;
                      TXA                                 ;8B0C|----/----\----;8A      ;
                      EOR.W #$00FE                        ;8B0D|----/----\----;49FE00  ;
                      CLC                                 ;8B10|----/----\----;18      ;
                      ADC.W #$0002                        ;8B11|----/----\----;690200  ;
                      AND.W #$01FF                        ;8B14|----/----\----;29FF01  ;
                      TAX                                 ;8B17|----/----\----;AA      ;
                      JSR CODE_008B2B                     ;8B18|----/----\----;202B8B  ;
                      DEY                                 ;8B1B|----/----\----;88      ;
                      DEY                                 ;8B1C|----/----\----;88      ;
                      CPY.W #$0004                        ;8B1D|----/----\----;C00400  ;
                      BCS +                               ;8B20|----/----\----;B004    ;
                      EOR.W #$FFFF                        ;8B22|----/----\----;49FFFF  ;
                      INC A                               ;8B25|----/----\----;1A      ;
                    + STA.B !Mode7ParamA                  ;8B26|----/----\----;852E    ;
                      SEP #$30                            ;8B28|----/----\----;E230    ; Index (8 bit) Accum (8 bit) 
                      RTS                                 ;8B2A|----/----\----;60      ;
                                                          ;                   ;        ;
CODE_008B2B:          SEP #$20                            ;8B2B|----/----\----;E220    ; Accum (8 bit) 
                      LDA.W DATA_008B58,X                 ;8B2D|----/----\----;BD588B  ;
                      BEQ +                               ;8B30|----/----\----;F002    ;
                      LDA.B !_0                           ;8B32|----/----\----;A500    ;
                    + STA.B !_1                           ;8B34|----/----\----;8501    ;
                      LDA.W DATA_008B57,X                 ;8B36|----/----\----;BD578B  ;
                      STA.W !HW_WRMPYA                    ;8B39|----/----\----;8D0242  ; Multiplicand A
                      LDA.B !_0                           ;8B3C|----/----\----;A500    ;
                      STA.W !HW_WRMPYB                    ;8B3E|----/----\----;8D0342  ; Multplier B
                      NOP                                 ;8B41|----/----\----;EA      ;
                      NOP                                 ;8B42|----/----\----;EA      ;
                      NOP                                 ;8B43|----/----\----;EA      ;
                      NOP                                 ;8B44|----/----\----;EA      ;
                      LDA.W !HW_RDMPY+1                   ;8B45|----/----\----;AD1742  ; Product/Remainder Result (High Byte)
                      CLC                                 ;8B48|----/----\----;18      ;
                      ADC.B !_1                           ;8B49|----/----\----;6501    ;
                      XBA                                 ;8B4B|----/----\----;EB      ;
                      LDA.W !HW_RDMPY                     ;8B4C|----/----\----;AD1642  ; Product/Remainder Result (Low Byte)
                      REP #$20                            ;8B4F|----/----\----;C220    ; Accum (16 bit) 
                      LSR A                               ;8B51|----/----\----;4A      ;
                      LSR A                               ;8B52|----/----\----;4A      ;
                      LSR A                               ;8B53|----/----\----;4A      ;
                      LSR A                               ;8B54|----/----\----;4A      ;
                      LSR A                               ;8B55|----/----\----;4A      ;
                      RTS                                 ;8B56|----/----\----;60      ;
                                                          ;                   ;        ;
                                                          ;                   ;        ;
DATA_008B57:          db $00                              ;8B57|----/----\----;        ;
                                                          ;                   ;        ;
DATA_008B58:          db $00,$03,$00,$06,$00,$09,$00,$0C  ;8B58|----/----\----;        ;
                      db $00,$0F,$00,$12,$00,$15,$00,$19  ;8B60|----/----\----;        ;
                      db $00,$1C,$00,$1F,$00,$22,$00,$25  ;8B68|----/----\----;        ;
                      db $00,$28,$00,$2B,$00,$2E,$00,$31  ;8B70|----/----\----;        ;
                      db $00,$35,$00,$38,$00,$3B,$00,$3E  ;8B78|----/----\----;        ;
                      db $00,$41,$00,$44,$00,$47,$00,$4A  ;8B80|----/----\----;        ;
                      db $00,$4D,$00,$50,$00,$53,$00,$56  ;8B88|----/----\----;        ;
                      db $00,$59,$00,$5C,$00,$5F,$00,$61  ;8B90|----/----\----;        ;
                      db $00,$64,$00,$67,$00,$6A,$00,$6D  ;8B98|----/----\----;        ;
                      db $00,$70,$00,$73,$00,$75,$00,$78  ;8BA0|----/----\----;        ;
                      db $00,$7B,$00,$7E,$00,$80,$00,$83  ;8BA8|----/----\----;        ;
                      db $00,$86,$00,$88,$00,$8B,$00,$8E  ;8BB0|----/----\----;        ;
                      db $00,$90,$00,$93,$00,$95,$00,$98  ;8BB8|----/----\----;        ;
                      db $00,$9B,$00,$9D,$00,$9F,$00,$A2  ;8BC0|----/----\----;        ;
                      db $00,$A4,$00,$A7,$00,$A9,$00,$AB  ;8BC8|----/----\----;        ;
                      db $00,$AE,$00,$B0,$00,$B2,$00,$B5  ;8BD0|----/----\----;        ;
                      db $00,$B7,$00,$B9,$00,$BB,$00,$BD  ;8BD8|----/----\----;        ;
                      db $00,$BF,$00,$C1,$00,$C3,$00,$C5  ;8BE0|----/----\----;        ;
                      db $00,$C7,$00,$C9,$00,$CB,$00,$CD  ;8BE8|----/----\----;        ;
                      db $00,$CF,$00,$D1,$00,$D3,$00,$D4  ;8BF0|----/----\----;        ;
                      db $00,$D6,$00,$D8,$00,$D9,$00,$DB  ;8BF8|----/----\----;        ;
                      db $00,$DD,$00,$DE,$00,$E0,$00,$E1  ;8C00|----/----\----;        ;
                      db $00,$E3,$00,$E4,$00,$E6,$00,$E7  ;8C08|----/----\----;        ;
                      db $00,$E8,$00,$EA,$00,$EB,$00,$EC  ;8C10|----/----\----;        ;
                      db $00,$ED,$00,$EE,$00,$EF,$00,$F1  ;8C18|----/----\----;        ;
                      db $00,$F2,$00,$F3,$00,$F4,$00,$F4  ;8C20|----/----\----;        ;
                      db $00,$F5,$00,$F6,$00,$F7,$00,$F8  ;8C28|----/----\----;        ;
                      db $00,$F9,$00,$F9,$00,$FA,$00,$FB  ;8C30|----/----\----;        ;
                      db $00,$FB,$00,$FC,$00,$FC,$00,$FD  ;8C38|----/----\----;        ;
                      db $00,$FD,$00,$FE,$00,$FE,$00,$FE  ;8C40|----/----\----;        ;
                      db $00,$FF,$00,$FF,$00,$FF,$00,$FF  ;8C48|----/----\----;        ;
                      db $00,$FF,$00,$FF,$00,$FF,$00,$00  ;8C50|----/----\----;        ;
                      db $01,$B7,$3C,$B7,$BC,$B8,$3C,$B9  ;8C58|----/----\----;        ;
                      db $3C,$BA,$3C,$BB,$3C,$BA,$3C,$BA  ;8C60|----/----\----;        ;
                      db $BC,$BC,$3C,$BD,$3C,$BE,$3C,$BF  ;8C68|----/----\----;        ;
                      db $3C,$C0,$3C,$B7,$BC,$C1,$3C,$B9  ;8C70|----/----\----;        ;
                      db $3C,$C2,$3C,$C2,$BC,$B7,$3C,$C0  ;8C78|----/----\----;        ;
                      db $FC,$3A,$38,$3B,$38,$3B,$38,$3A  ;8C80|----/----\----;        ;
                      db $78                              ;8C88|----/----\----;        ;
                                                          ;                   ;        ;
DATA_008C89:          db $30,$28,$31,$28,$32,$28,$33,$28  ;8C89|----/----\----;        ;
                      db $34,$28,$FC,$38,$FC,$3C,$FC,$3C  ;8C91|----/----\----;        ;
                      db $FC,$3C,$FC,$3C,$FC,$38,$FC,$38  ;8C99|----/----\----;        ;
                      db $4A,$38,$FC,$38,$FC,$38,$4A,$78  ;8CA1|----/----\----;        ;
                      db $FC,$38,$3D,$3C,$3E,$3C,$3F,$3C  ;8CA9|----/----\----;        ;
                      db $FC,$38,$FC,$38,$FC,$38,$2E,$3C  ;8CB1|----/----\----;        ;
                      db $26,$38,$FC,$38,$FC,$38,$00,$38  ;8CB9|----/----\----;        ;
                      db $26,$38,$FC,$38,$00,$38,$FC,$38  ;8CC1|----/----\----;        ;
                      db $FC,$38,$FC,$38,$64,$28,$26,$38  ;8CC9|----/----\----;        ;
                      db $FC,$38,$FC,$38,$FC,$38,$4A,$38  ;8CD1|----/----\----;        ;
                      db $FC,$38,$FC,$38,$4A,$78,$FC,$38  ;8CD9|----/----\----;        ;
                      db $FE,$3C,$FE,$3C,$00,$3C,$FC,$38  ;8CE1|----/----\----;        ;
                      db $FC,$38,$FC,$38,$FC,$38,$FC,$38  ;8CE9|----/----\----;        ;
                      db $FC,$38,$FC,$38,$00,$38,$3A,$B8  ;8CF1|----/----\----;        ;
                      db $3B,$B8,$3B,$B8,$3A,$F8          ;8CF9|----/----\----;        ;
                                                          ;                   ;        ;
GM04DoDMA:            LDA.B #$80                          ;8CFF|----/----\----;A980    ; More DMA ; Accum (8 bit) 
                      STA.W !HW_VMAINC                    ;8D01|----/----\----;8D1521  ; Increment when $2119 accessed ; VRAM Address Increment Value
                      LDA.B #$2E                          ;8D04|----/----\----;A92E    ; \VRAM address = #$502E 
                      STA.W !HW_VMADD                     ;8D06|----/----\----;8D1621  ;  | ; Address for VRAM Read/Write (Low Byte)
                      LDA.B #$50                          ;8D09|----/----\----;A950    ;  | 
                      STA.W !HW_VMADD+1                   ;8D0B|----/----\----;8D1721  ; / ; Address for VRAM Read/Write (High Byte)
                      LDX.B #$06                          ;8D0E|----/----\----;A206    ;
                    - LDA.W DATA_008D90,X                 ;8D10|----/----\----;BD908D  ;
                      STA.W !HW_DMAPARAM+$10,X            ;8D13|----/----\----;9D1043  ; Load up the DMA regs 
                      DEX                                 ;8D16|----/----\----;CA      ; DMA Source = 8C:8118 (...) 
                      BPL -                               ;8D17|----/----\----;10F7    ; Dest = $2118, Transfer: #$08 bytes 
                      LDA.B #$02                          ;8D19|----/----\----;A902    ;
                      STA.W !HW_MDMAEN                    ;8D1B|----/----\----;8D0B42  ; Do the DMA ; Regular DMA Channel Enable
                      LDA.B #$80                          ;8D1E|----/----\----;A980    ; \ Set VRAM mode = same as above 
                      STA.W !HW_VMAINC                    ;8D20|----/----\----;8D1521  ;  |Address = #$5042 ; VRAM Address Increment Value
                      LDA.B #$42                          ;8D23|----/----\----;A942    ;  | 
                      STA.W !HW_VMADD                     ;8D25|----/----\----;8D1621  ;  | ; Address for VRAM Read/Write (Low Byte)
                      LDA.B #$50                          ;8D28|----/----\----;A950    ;  | 
                      STA.W !HW_VMADD+1                   ;8D2A|----/----\----;8D1721  ; /  ; Address for VRAM Read/Write (High Byte)
                      LDX.B #$06                          ;8D2D|----/----\----;A206    ; \ Set up more DMA 
                    - LDA.W DATA_008D97,X                 ;8D2F|----/----\----;BD978D  ;  |Dest = $2100 
                      STA.W !HW_DMAPARAM+$10,X            ;8D32|----/----\----;9D1043  ;  |Fixed source address = $89:1801 (Lunar Address: 7E:1801) 
                      DEX                                 ;8D35|----/----\----;CA      ;  |#$808C bytes to transfer 
                      BPL -                               ;8D36|----/----\----;10F7    ; /Type = One reg write once 
                      LDA.B #$02                          ;8D38|----/----\----;A902    ;
                      STA.W !HW_MDMAEN                    ;8D3A|----/----\----;8D0B42  ; Start DMA ; Regular DMA Channel Enable
                      LDA.B #$80                          ;8D3D|----/----\----;A980    ; \prep VRAM for another write 
                      STA.W !HW_VMAINC                    ;8D3F|----/----\----;8D1521  ;  | ; VRAM Address Increment Value
                      LDA.B #$63                          ;8D42|----/----\----;A963    ;  | 
                      STA.W !HW_VMADD                     ;8D44|----/----\----;8D1621  ;  | ; Address for VRAM Read/Write (Low Byte)
                      LDA.B #$50                          ;8D47|----/----\----;A950    ;  | 
                      STA.W !HW_VMADD+1                   ;8D49|----/----\----;8D1721  ; / ; Address for VRAM Read/Write (High Byte)
                      LDX.B #$06                          ;8D4C|----/----\----;A206    ; \ Load up DMA again 
                    - LDA.W DATA_008D9E,X                 ;8D4E|----/----\----;BD9E8D  ;  |Dest = $2118 
                      STA.W !HW_DMAPARAM+$10,X            ;8D51|----/----\----;9D1043  ;  |Source Address = $39:8CC1 
                      DEX                                 ;8D54|----/----\----;CA      ;  |Size = #$0100 bytes 
                      BPL -                               ;8D55|----/----\----;10F7    ; /Type = Two reg write once 
                      LDA.B #$02                          ;8D57|----/----\----;A902    ; \Start Transfer 
                      STA.W !HW_MDMAEN                    ;8D59|----/----\----;8D0B42  ; / ; Regular DMA Channel Enable
                      LDA.B #$80                          ;8D5C|----/----\----;A980    ; \ 
                      STA.W !HW_VMAINC                    ;8D5E|----/----\----;8D1521  ;  |Set up VRAM once more ; VRAM Address Increment Value
                      LDA.B #$8E                          ;8D61|----/----\----;A98E    ;  | 
                      STA.W !HW_VMADD                     ;8D63|----/----\----;8D1621  ;  | ; Address for VRAM Read/Write (Low Byte)
                      LDA.B #$50                          ;8D66|----/----\----;A950    ;  | 
                      STA.W !HW_VMADD+1                   ;8D68|----/----\----;8D1721  ; / ; Address for VRAM Read/Write (High Byte)
                      LDX.B #$06                          ;8D6B|----/----\----;A206    ; \Last DMA... 
                    - LDA.W DATA_008DA5,X                 ;8D6D|----/----\----;BDA58D  ;  |Reg = $2118 Type = Two reg write once 
                      STA.W !HW_DMAPARAM+$10,X            ;8D70|----/----\----;9D1043  ;  |Source Address = $08:8CF7 
                      DEX                                 ;8D73|----/----\----;CA      ;  |Size = #$9C00 bytes (o_o) 
                      BPL -                               ;8D74|----/----\----;10F7    ; / 
                      LDA.B #$02                          ;8D76|----/----\----;A902    ; \Transfer 
                      STA.W !HW_MDMAEN                    ;8D78|----/----\----;8D0B42  ; / ; Regular DMA Channel Enable
                      LDX.B #$36                          ;8D7B|----/----\----;A236    ; \Copy some data into RAM 
                      LDY.B #$6C                          ;8D7D|----/----\----;A06C    ;  | 
                    - LDA.W DATA_008C89,Y                 ;8D7F|----/----\----;B9898C  ;  | 
                      STA.W !StatusBar,X                  ;8D82|----/----\----;9DF90E  ;  | 59
                      DEY                                 ;8D85|----/----\----;88      ;  | 
                      DEY                                 ;8D86|----/----\----;88      ;  | 
                      DEX                                 ;8D87|----/----\----;CA      ;  | 
                      BPL -                               ;8D88|----/----\----;10F5    ; / 
                      LDA.B #$28                          ;8D8A|----/----\----;A928    ;
                      STA.W !InGameTimerFrames            ;8D8C|----/----\----;8D300F  ; #$28 -> Timer frame counter 
                      RTS                                 ;8D8F|----/----\----;60      ; Return 
                                                          ;                   ;        ;
                                                          ;                   ;        ;
DATA_008D90:          db $01,$18,$81,$8C,$00,$08,$00      ;8D90|----/----\----;        ;
                                                          ;                   ;        ;
DATA_008D97:          db $01,$18,$89,$8C,$00,$38,$00      ;8D97|----/----\----;        ;
                                                          ;                   ;        ;
DATA_008D9E:          db $01,$18,$C1,$8C,$00,$36,$00      ;8D9E|----/----\----;        ;
                                                          ;                   ;        ;
DATA_008DA5:          db $01,$18,$F7,$8C,$00,$08,$00      ;8DA5|----/----\----;        ;
                                                          ;                   ;        ;
DrawStatusBar:        STZ.W !HW_VMAINC                    ;8DAC|----/----\----;9C1521  ; Set VRAM Address Increment Value to x00 ; VRAM Address Increment Value
                      LDA.B #$42                          ;8DAF|----/----\----;A942    ; \  
                      STA.W !HW_VMADD                     ;8DB1|----/----\----;8D1621  ;  |Set Address for VRAM Read/Write to x5042 ; Address for VRAM Read/Write (Low Byte)
                      LDA.B #$50                          ;8DB4|----/----\----;A950    ;  | 
                      STA.W !HW_VMADD+1                   ;8DB6|----/----\----;8D1721  ; /  ; Address for VRAM Read/Write (High Byte)
                      LDX.B #$06                          ;8DB9|----/----\----;A206    ; \  
                    - LDA.W DMAdata_StBr1,X               ;8DBB|----/----\----;BDE78D  ;  |Load settings from DMAdata_StBr1 into DMA channel 1 
                      STA.W !HW_DMAPARAM+$10,X            ;8DBE|----/----\----;9D1043  ;  | 
                      DEX                                 ;8DC1|----/----\----;CA      ;  | 
                      BPL -                               ;8DC2|----/----\----;10F7    ; /  
                      LDA.B #$02                          ;8DC4|----/----\----;A902    ; \ Activate DMA channel 1 
                      STA.W !HW_MDMAEN                    ;8DC6|----/----\----;8D0B42  ; /  ; Regular DMA Channel Enable
                      STZ.W !HW_VMAINC                    ;8DC9|----/----\----;9C1521  ; Set VRAM Address Increment Value to x00 ; VRAM Address Increment Value
                      LDA.B #$63                          ;8DCC|----/----\----;A963    ; \  
                      STA.W !HW_VMADD                     ;8DCE|----/----\----;8D1621  ;  |Set Address for VRAM Read/Write to x5063 ; Address for VRAM Read/Write (Low Byte)
                      LDA.B #$50                          ;8DD1|----/----\----;A950    ;  | 
                      STA.W !HW_VMADD+1                   ;8DD3|----/----\----;8D1721  ; /  ; Address for VRAM Read/Write (High Byte)
                      LDX.B #$06                          ;8DD6|----/----\----;A206    ; \  
                    - LDA.W DMAdata_StBr2,X               ;8DD8|----/----\----;BDEE8D  ;  |Load settings from DMAdata_StBr2 into DMA channel 1 
                      STA.W !HW_DMAPARAM+$10,X            ;8DDB|----/----\----;9D1043  ;  | 
                      DEX                                 ;8DDE|----/----\----;CA      ;  | 
                      BPL -                               ;8DDF|----/----\----;10F7    ; /  
                      LDA.B #$02                          ;8DE1|----/----\----;A902    ; \ Activate DMA channel 1 
                      STA.W !HW_MDMAEN                    ;8DE3|----/----\----;8D0B42  ; /  ; Regular DMA Channel Enable
                      RTS                                 ;8DE6|----/----\----;60      ; Return 
                                                          ;                   ;        ;
                                                          ;                   ;        ;
DMAdata_StBr1:        db $00,$18,$F9,$0E,$00,$1C,$00      ;8DE7|----/----\----;        ;
                                                          ;                   ;        ;
DMAdata_StBr2:        db $00,$18,$15,$0F,$00,$1B,$00      ;8DEE|----/----\----;        ;
                                                          ;                   ;        ;
DATA_008DF5:          db $40,$41,$42,$43                  ;8DF5|----/----\----;        ;
                                                          ;                   ;        ;
DATA_008DF9:          db $44,$24,$26,$48,$0E              ;8DF9|----/----\----;        ;
                                                          ;                   ;        ;
DATA_008DFE:          db $00,$02,$04                      ;8DFE|----/----\----;        ;
                                                          ;                   ;        ;
DATA_008E01:          db $02,$08,$0A,$00,$04              ;8E01|----/----\----;        ;
                                                          ;                   ;        ;
DATA_008E06:          db $B7                              ;8E06|----/----\----;        ;
                                                          ;                   ;        ;
DATA_008E07:          db $C3,$B8,$B9,$BA,$BB,$BA,$BF,$BC  ;8E07|----/----\----;        ;
                      db $BD,$BE,$BF,$C0,$C3,$C1,$B9,$C2  ;8E0F|----/----\----;        ;
                      db $C4,$B7,$C5                      ;8E17|----/----\----;        ;
                                                          ;                   ;        ;
CODE_008E1A:          LDA.W !EndLevelTimer                ;8E1A|----/----\----;AD9314  ; \  
                      ORA.B !SpriteLock                   ;8E1D|----/----\----;059D    ;  |If level is ending or sprites are locked, 
                      BNE CODE_008E6F                     ;8E1F|----/----\----;D04E    ; / branch to $8E6F 
                      LDA.W !IRQNMICommand                ;8E21|----/----\----;AD9B0D  ;
                      CMP.B #$C1                          ;8E24|----/----\----;C9C1    ;
                      BEQ CODE_008E6F                     ;8E26|----/----\----;F047    ;
                      DEC.W !InGameTimerFrames            ;8E28|----/----\----;CE300F  ;
                      BPL CODE_008E6F                     ;8E2B|----/----\----;1042    ;
                      LDA.B #$28                          ;8E2D|----/----\----;A928    ;
                      STA.W !InGameTimerFrames            ;8E2F|----/----\----;8D300F  ;
                      LDA.W !InGameTimerHundreds          ;8E32|----/----\----;AD310F  ; \  
                      ORA.W !InGameTimerTens              ;8E35|----/----\----;0D320F  ;  |If time is 0, 
                      ORA.W !InGameTimerOnes              ;8E38|----/----\----;0D330F  ;  |branch to $8E6F 
                      BEQ CODE_008E6F                     ;8E3B|----/----\----;F032    ; /  
                      LDX.B #$02                          ;8E3D|----/----\----;A202    ;
CODE_008E3F:          DEC.W !InGameTimerHundreds,X        ;8E3F|----/----\----;DE310F  ;
                      BPL CODE_008E4C                     ;8E42|----/----\----;1008    ;
                      LDA.B #$09                          ;8E44|----/----\----;A909    ;
                      STA.W !InGameTimerHundreds,X        ;8E46|----/----\----;9D310F  ;
                      DEX                                 ;8E49|----/----\----;CA      ;
                      BPL CODE_008E3F                     ;8E4A|----/----\----;10F3    ;
CODE_008E4C:          LDA.W !InGameTimerHundreds          ;8E4C|----/----\----;AD310F  ; \  
                      BNE +                               ;8E4F|----/----\----;D00F    ;  | 
                      LDA.W !InGameTimerTens              ;8E51|----/----\----;AD320F  ;  | 
                      AND.W !InGameTimerOnes              ;8E54|----/----\----;2D330F  ;  |If time is 99, 
                      CMP.B #$09                          ;8E57|----/----\----;C909    ;  |speed up the music 
                      BNE +                               ;8E59|----/----\----;D005    ;  | 
                      LDA.B #$FF                          ;8E5B|----/----\----;A9FF    ;  | 
                      STA.W !SPCIO0                       ;8E5D|----/----\----;8DF91D  ;  | 
                    + LDA.W !InGameTimerHundreds          ;8E60|----/----\----;AD310F  ; \  
                      ORA.W !InGameTimerTens              ;8E63|----/----\----;0D320F  ;  | 
                      ORA.W !InGameTimerOnes              ;8E66|----/----\----;0D330F  ;  |If time is 0, 
                      BNE CODE_008E6F                     ;8E69|----/----\----;D004    ;  |JSL to $00F606 
                      JSL KillMario                       ;8E6B|----/----\----;2206F600;  | 
CODE_008E6F:          LDA.W !InGameTimerHundreds          ;8E6F|----/----\----;AD310F  ; \  
                      STA.W !StatusBar+$2C                ;8E72|----/----\----;8D250F  ;  | 
                      LDA.W !InGameTimerTens              ;8E75|----/----\----;AD320F  ;  |Copy time to $0F25-$0F27 
                      STA.W !StatusBar+$2D                ;8E78|----/----\----;8D260F  ;  | 
                      LDA.W !InGameTimerOnes              ;8E7B|----/----\----;AD330F  ;  | 
                      STA.W !StatusBar+$2E                ;8E7E|----/----\----;8D270F  ; /  
                      LDX.B #$10                          ;8E81|----/----\----;A210    ;
                      LDY.B #$00                          ;8E83|----/----\----;A000    ;
CODE_008E85:          LDA.W !InGameTimerHundreds,Y        ;8E85|----/----\----;B9310F  ;
                      BNE CODE_008E95                     ;8E88|----/----\----;D00B    ;
                      LDA.B #$FC                          ;8E8A|----/----\----;A9FC    ;
                      STA.W !StatusBar+$1C,X              ;8E8C|----/----\----;9D150F  ;
                      INY                                 ;8E8F|----/----\----;C8      ;
                      INX                                 ;8E90|----/----\----;E8      ;
                      CPY.B #$02                          ;8E91|----/----\----;C002    ;
                      BNE CODE_008E85                     ;8E93|----/----\----;D0F0    ;
CODE_008E95:          LDX.B #$03                          ;8E95|----/----\----;A203    ;
CODE_008E97:          LDA.W !PlayerScore+2,X              ;8E97|----/----\----;BD360F  ;
                      STA.B !_0                           ;8E9A|----/----\----;8500    ;
                      STZ.B !_1                           ;8E9C|----/----\----;6401    ;
                      REP #$20                            ;8E9E|----/----\----;C220    ; 16 bit A ; Accum (16 bit) 
                      LDA.W !PlayerScore,X                ;8EA0|----/----\----;BD340F  ;
                      SEC                                 ;8EA3|----/----\----;38      ;
                      SBC.W #$423F                        ;8EA4|----/----\----;E93F42  ;
                      LDA.B !_0                           ;8EA7|----/----\----;A500    ;
                      SBC.W #$000F                        ;8EA9|----/----\----;E90F00  ;
                      BCC +                               ;8EAC|----/----\----;9011    ;
                      SEP #$20                            ;8EAE|----/----\----;E220    ; 8 bit A ; Accum (8 bit) 
                      LDA.B #$0F                          ;8EB0|----/----\----;A90F    ;
                      STA.W !PlayerScore+2,X              ;8EB2|----/----\----;9D360F  ;
                      LDA.B #$42                          ;8EB5|----/----\----;A942    ;
                      STA.W !PlayerScore+1,X              ;8EB7|----/----\----;9D350F  ;
                      LDA.B #$3F                          ;8EBA|----/----\----;A93F    ;
                      STA.W !PlayerScore,X                ;8EBC|----/----\----;9D340F  ;
                    + SEP #$20                            ;8EBF|----/----\----;E220    ; 8 bit A ; Accum (8 bit) 
                      DEX                                 ;8EC1|----/----\----;CA      ;
                      DEX                                 ;8EC2|----/----\----;CA      ;
                      DEX                                 ;8EC3|----/----\----;CA      ;
                      BPL CODE_008E97                     ;8EC4|----/----\----;10D1    ;
                      LDA.W !PlayerScore+2                ;8EC6|----/----\----;AD360F  ; \ Store high byte of Mario's score in $00 
                      STA.B !_0                           ;8EC9|----/----\----;8500    ; /  
                      STZ.B !_1                           ;8ECB|----/----\----;6401    ; Store x00 in $01 
                      LDA.W !PlayerScore+1                ;8ECD|----/----\----;AD350F  ; \ Store mid byte of Mario's score in $03 
                      STA.B !_3                           ;8ED0|----/----\----;8503    ; / 
                      LDA.W !PlayerScore                  ;8ED2|----/----\----;AD340F  ; \ Store low byte of Mario's score in $02 
                      STA.B !_2                           ;8ED5|----/----\----;8502    ; / 
                      LDX.B #$14                          ;8ED7|----/----\----;A214    ;
                      LDY.B #$00                          ;8ED9|----/----\----;A000    ;
                      JSR CODE_009012                     ;8EDB|----/----\----;201290  ;
                      LDX.B #$00                          ;8EDE|----/----\----;A200    ; \  
CODE_008EE0:          LDA.W !StatusBar+$30,X              ;8EE0|----/----\----;BD290F  ;  | 
                      BNE CODE_008EEF                     ;8EE3|----/----\----;D00A    ;  | 
                      LDA.B #$FC                          ;8EE5|----/----\----;A9FC    ;  |Replace all leading zeroes in the score with spaces 
                      STA.W !StatusBar+$30,X              ;8EE7|----/----\----;9D290F  ;  | 
                      INX                                 ;8EEA|----/----\----;E8      ;  | 
                      CPX.B #$06                          ;8EEB|----/----\----;E006    ;  | 
                      BNE CODE_008EE0                     ;8EED|----/----\----;D0F1    ;  | 
CODE_008EEF:          LDA.W !PlayerTurnLvl                ;8EEF|----/----\----;ADB30D  ; Get current player 
                      BEQ CODE_008F1D                     ;8EF2|----/----\----;F029    ; If player is Mario, branch to $8F1D 
                      LDA.W !PlayerScore+5                ;8EF4|----/----\----;AD390F  ; \ Store high byte of Luigi's score in $00 
                      STA.B !_0                           ;8EF7|----/----\----;8500    ; /  
                      STZ.B !_1                           ;8EF9|----/----\----;6401    ; Store x00 in $01 
                      LDA.W !PlayerScore+4                ;8EFB|----/----\----;AD380F  ; \ Store mid byte of Luigi's score in $03 
                      STA.B !_3                           ;8EFE|----/----\----;8503    ; /  
                      LDA.W !PlayerScore+3                ;8F00|----/----\----;AD370F  ; \ Store low byte of Luigi's score in $02 
                      STA.B !_2                           ;8F03|----/----\----;8502    ; /  
                      LDX.B #$14                          ;8F05|----/----\----;A214    ;
                      LDY.B #$00                          ;8F07|----/----\----;A000    ;
                      JSR CODE_009012                     ;8F09|----/----\----;201290  ;
                      LDX.B #$00                          ;8F0C|----/----\----;A200    ; \  
CODE_008F0E:          LDA.W !StatusBar+$30,X              ;8F0E|----/----\----;BD290F  ;  | 
                      BNE CODE_008F1D                     ;8F11|----/----\----;D00A    ;  | 
                      LDA.B #$FC                          ;8F13|----/----\----;A9FC    ;  |Replace all leading zeroes in the score with spaces 
                      STA.W !StatusBar+$30,X              ;8F15|----/----\----;9D290F  ;  | 
                      INX                                 ;8F18|----/----\----;E8      ;  | 
                      CPX.B #$06                          ;8F19|----/----\----;E006    ;  | 
                      BNE CODE_008F0E                     ;8F1B|----/----\----;D0F1    ; /  
CODE_008F1D:          LDA.W !CoinAdder                    ;8F1D|----/----\----;ADCC13  ; \ If Coin increase isn't x00, 
                      BEQ +                               ;8F20|----/----\----;F019    ; / branch to $8F3B 
                      DEC.W !CoinAdder                    ;8F22|----/----\----;CECC13  ; Decrease "Coin increase" 
                      INC.W !PlayerCoins                  ;8F25|----/----\----;EEBF0D  ; Increase coins by 1 
                      LDA.W !PlayerCoins                  ;8F28|----/----\----;ADBF0D  ; \  
                      CMP.B #$64                          ;8F2B|----/----\----;C964    ;  |If coins<100, branch to $8F3B 
                      BCC +                               ;8F2D|----/----\----;900C    ; /  
                      INC.W !GivePlayerLives              ;8F2F|----/----\----;EEE418  ; Increase lives by 1 
                      LDA.W !PlayerCoins                  ;8F32|----/----\----;ADBF0D  ; \  
                      SEC                                 ;8F35|----/----\----;38      ;  |Decrease coins by 100 
                      SBC.B #$64                          ;8F36|----/----\----;E964    ;  | 
                      STA.W !PlayerCoins                  ;8F38|----/----\----;8DBF0D  ; /  
                    + LDA.W !PlayerLives                  ;8F3B|----/----\----;ADBE0D  ; \ If amount of lives is negative, 
                      BMI +                               ;8F3E|----/----\----;3009    ; / branch to $8F49 
                      CMP.B #$62                          ;8F40|----/----\----;C962    ; \ If amount of lives is less than 98, 
                      BCC +                               ;8F42|----/----\----;9005    ; / branch to $8F49 
                      LDA.B #$62                          ;8F44|----/----\----;A962    ; \ Set amount of lives to 98 
                      STA.W !PlayerLives                  ;8F46|----/----\----;8DBE0D  ; /  
                    + LDA.W !PlayerLives                  ;8F49|----/----\----;ADBE0D  ; \  
                      INC A                               ;8F4C|----/----\----;1A      ;  |Get amount of lives in decimal 
                      JSR HexToDec                        ;8F4D|----/----\----;204590  ; /  
                      TXY                                 ;8F50|----/----\----;9B      ; \  
                      BNE +                               ;8F51|----/----\----;D002    ;  |If 10s is 0, replace with space 
                      LDX.B #$FC                          ;8F53|----/----\----;A2FC    ;  | 
                    + STX.W !StatusBar+$1D                ;8F55|----/----\----;8E160F  ; \ Write lives to status bar 
                      STA.W !StatusBar+$1E                ;8F58|----/----\----;8D170F  ; /  
                      LDX.W !PlayerTurnLvl                ;8F5B|----/----\----;AEB30D  ; \ Get bonus stars 
                      LDA.W !PlayerBonusStars,X           ;8F5E|----/----\----;BD480F  ; /  
                      CMP.B #$64                          ;8F61|----/----\----;C964    ; \ If bonus stars is less than 100, 
                      BCC +                               ;8F63|----/----\----;900E    ; / branch to $8F73 
                      LDA.B #$FF                          ;8F65|----/----\----;A9FF    ; \ Start bonus game when the level ends 
                      STA.W !BonusGameActivate            ;8F67|----/----\----;8D2514  ; /  
                      LDA.W !PlayerBonusStars,X           ;8F6A|----/----\----;BD480F  ; \  
                      SEC                                 ;8F6D|----/----\----;38      ;  |Subtract bonus stars by 100 
                      SBC.B #$64                          ;8F6E|----/----\----;E964    ;  | 
                      STA.W !PlayerBonusStars,X           ;8F70|----/----\----;9D480F  ; /  
                    + LDA.W !PlayerCoins                  ;8F73|----/----\----;ADBF0D  ; \ Get amount of coins in decimal 
                      JSR HexToDec                        ;8F76|----/----\----;204590  ; /  
                      TXY                                 ;8F79|----/----\----;9B      ; \ 
                      BNE +                               ;8F7A|----/----\----;D002    ;  |If 10s is 0, replace with space 
                      LDX.B #$FC                          ;8F7C|----/----\----;A2FC    ;  | 
                    + STA.W !StatusBar+$1B                ;8F7E|----/----\----;8D140F  ; \ Write coins to status bar 
                      STX.W !StatusBar+$1A                ;8F81|----/----\----;8E130F  ; /  
                      SEP #$20                            ;8F84|----/----\----;E220    ; 8 bit A ; Accum (8 bit) 
                      LDX.W !PlayerTurnLvl                ;8F86|----/----\----;AEB30D  ; Load Character into X 
                      STZ.B !_0                           ;8F89|----/----\----;6400    ;
                      STZ.B !_1                           ;8F8B|----/----\----;6401    ;
                      STZ.B !_3                           ;8F8D|----/----\----;6403    ;
                      LDA.W !PlayerBonusStars,X           ;8F8F|----/----\----;BD480F  ;
                      STA.B !_2                           ;8F92|----/----\----;8502    ;
                      LDX.B #$09                          ;8F94|----/----\----;A209    ;
                      LDY.B #$10                          ;8F96|----/----\----;A010    ;
                      JSR CODE_009051                     ;8F98|----/----\----;205190  ;
                      LDX.B #$00                          ;8F9B|----/----\----;A200    ;
CODE_008F9D:          LDA.W !StatusBar+$25,X              ;8F9D|----/----\----;BD1E0F  ;
                      BNE CODE_008FAF                     ;8FA0|----/----\----;D00D    ;
                      LDA.B #$FC                          ;8FA2|----/----\----;A9FC    ;
                      STA.W !StatusBar+$25,X              ;8FA4|----/----\----;9D1E0F  ;
                      STA.W !StatusBar+$0A,X              ;8FA7|----/----\----;9D030F  ;
                      INX                                 ;8FAA|----/----\----;E8      ;
                      CPX.B #$01                          ;8FAB|----/----\----;E001    ;
                      BNE CODE_008F9D                     ;8FAD|----/----\----;D0EE    ;
CODE_008FAF:          LDA.W !StatusBar+$25,X              ;8FAF|----/----\----;BD1E0F  ;
                      ASL A                               ;8FB2|----/----\----;0A      ;
                      TAY                                 ;8FB3|----/----\----;A8      ;
                      LDA.W DATA_008E06,Y                 ;8FB4|----/----\----;B9068E  ;
                      STA.W !StatusBar+$0A,X              ;8FB7|----/----\----;9D030F  ;
                      LDA.W DATA_008E07,Y                 ;8FBA|----/----\----;B9078E  ;
                      STA.W !StatusBar+$25,X              ;8FBD|----/----\----;9D1E0F  ;
                      INX                                 ;8FC0|----/----\----;E8      ;
                      CPX.B #$02                          ;8FC1|----/----\----;E002    ;
                      BNE CODE_008FAF                     ;8FC3|----/----\----;D0EA    ;
                      JSR CODE_009079                     ;8FC5|----/----\----;207990  ;
                      LDA.W !PlayerTurnLvl                ;8FC8|----/----\----;ADB30D  ;
                      BEQ CODE_008FD8                     ;8FCB|----/----\----;F00B    ;
                      LDX.B #$04                          ;8FCD|----/----\----;A204    ;
                    - LDA.W DATA_008DF5,X                 ;8FCF|----/----\----;BDF58D  ;
                      STA.W !StatusBar,X                  ;8FD2|----/----\----;9DF90E  ;
                      DEX                                 ;8FD5|----/----\----;CA      ;
                      BPL -                               ;8FD6|----/----\----;10F7    ;
CODE_008FD8:          LDA.W !DragonCoinsShown             ;8FD8|----/----\----;AD2214  ;
                      CMP.B #$05                          ;8FDB|----/----\----;C905    ;
                      BCC +                               ;8FDD|----/----\----;9002    ;
                      LDA.B #$00                          ;8FDF|----/----\----;A900    ;
                    + DEC A                               ;8FE1|----/----\----;3A      ;
                      STA.B !_0                           ;8FE2|----/----\----;8500    ;
                      LDX.B #$00                          ;8FE4|----/----\----;A200    ;
CODE_008FE6:          LDY.B #$FC                          ;8FE6|----/----\----;A0FC    ;
                      LDA.B !_0                           ;8FE8|----/----\----;A500    ;
                      BMI +                               ;8FEA|----/----\----;3002    ;
                      LDY.B #$2E                          ;8FEC|----/----\----;A02E    ;
                    + TYA                                 ;8FEE|----/----\----;98      ;
                      STA.W !StatusBar+6,X                ;8FEF|----/----\----;9DFF0E  ;
                      DEC.B !_0                           ;8FF2|----/----\----;C600    ;
                      INX                                 ;8FF4|----/----\----;E8      ;
                      CPX.B #$04                          ;8FF5|----/----\----;E004    ;
                      BNE CODE_008FE6                     ;8FF7|----/----\----;D0ED    ;
                      RTS                                 ;8FF9|----/----\----;60      ;
                                                          ;                   ;        ;
                                                          ;                   ;        ;
DATA_008FFA:          db $01,$00                          ;8FFA|----/----\----;        ;
                                                          ;                   ;        ;
DATA_008FFC:          db $A0,$86,$00,$00,$10,$27,$00,$00  ;8FFC|----/----\----;        ;
                      db $E8,$03,$00,$00,$64,$00,$00,$00  ;9004|----/----\----;        ;
                      db $0A,$00,$00,$00,$01,$00          ;900C|----/----\----;        ;
                                                          ;                   ;        ;
CODE_009012:          SEP #$20                            ;9012|----/----\----;E220    ; 8 bit A ; Accum (8 bit) 
                      STZ.W !StatusBar+$1C,X              ;9014|----/----\----;9E150F  ;
CODE_009017:          REP #$20                            ;9017|----/----\----;C220    ; 16 bit A ; Accum (16 bit) 
                      LDA.B !_2                           ;9019|----/----\----;A502    ;
                      SEC                                 ;901B|----/----\----;38      ;
                      SBC.W DATA_008FFC,Y                 ;901C|----/----\----;F9FC8F  ;
                      STA.B !_6                           ;901F|----/----\----;8506    ;
                      LDA.B !_0                           ;9021|----/----\----;A500    ;
                      SBC.W DATA_008FFA,Y                 ;9023|----/----\----;F9FA8F  ;
                      STA.B !_4                           ;9026|----/----\----;8504    ;
                      BCC CODE_009039                     ;9028|----/----\----;900F    ;
                      LDA.B !_6                           ;902A|----/----\----;A506    ;
                      STA.B !_2                           ;902C|----/----\----;8502    ;
                      LDA.B !_4                           ;902E|----/----\----;A504    ;
                      STA.B !_0                           ;9030|----/----\----;8500    ;
                      SEP #$20                            ;9032|----/----\----;E220    ; 8 bit A ; Accum (8 bit) 
                      INC.W !StatusBar+$1C,X              ;9034|----/----\----;FE150F  ;
                      BRA CODE_009017                     ;9037|----/----\----;80DE    ;
                                                          ;                   ;        ;
CODE_009039:          INX                                 ;9039|----/----\----;E8      ;
                      INY                                 ;903A|----/----\----;C8      ;
                      INY                                 ;903B|----/----\----;C8      ;
                      INY                                 ;903C|----/----\----;C8      ;
                      INY                                 ;903D|----/----\----;C8      ;
                      CPY.B #$18                          ;903E|----/----\----;C018    ;
                      BNE CODE_009012                     ;9040|----/----\----;D0D0    ;
                      SEP #$20                            ;9042|----/----\----;E220    ; 8 bit A ; Accum (8 bit) 
                      RTS                                 ;9044|----/----\----;60      ;
                                                          ;                   ;        ;
HexToDec:             LDX.B #$00                          ;9045|----/----\----;A200    ;  | 
CODE_009047:          CMP.B #$0A                          ;9047|----/----\----;C90A    ;  | 
                      BCC Return009050                    ;9049|----/----\----;9005    ;  |Sets A to 10s of original A 
                      SBC.B #$0A                          ;904B|----/----\----;E90A    ;  |Sets X to 1s of original A 
                      INX                                 ;904D|----/----\----;E8      ;  | 
                      BRA CODE_009047                     ;904E|----/----\----;80F7    ;  | 
                                                          ;                   ;        ;
Return009050:         RTS                                 ;9050|----/----\----;60      ; /  
                                                          ;                   ;        ;
CODE_009051:          SEP #$20                            ;9051|----/----\----;E220    ; Accum (8 bit) 
                      STZ.W !StatusBar+$1C,X              ;9053|----/----\----;9E150F  ;
CODE_009056:          REP #$20                            ;9056|----/----\----;C220    ; Accum (16 bit) 
                      LDA.B !_2                           ;9058|----/----\----;A502    ;
                      SEC                                 ;905A|----/----\----;38      ;
                      SBC.W DATA_008FFC,Y                 ;905B|----/----\----;F9FC8F  ;
                      STA.B !_6                           ;905E|----/----\----;8506    ;
                      BCC CODE_00906D                     ;9060|----/----\----;900B    ;
                      LDA.B !_6                           ;9062|----/----\----;A506    ;
                      STA.B !_2                           ;9064|----/----\----;8502    ;
                      SEP #$20                            ;9066|----/----\----;E220    ; Accum (8 bit) 
                      INC.W !StatusBar+$1C,X              ;9068|----/----\----;FE150F  ;
                      BRA CODE_009056                     ;906B|----/----\----;80E9    ;
                                                          ;                   ;        ;
CODE_00906D:          INX                                 ;906D|----/----\----;E8      ;
                      INY                                 ;906E|----/----\----;C8      ;
                      INY                                 ;906F|----/----\----;C8      ;
                      INY                                 ;9070|----/----\----;C8      ;
                      INY                                 ;9071|----/----\----;C8      ;
                      CPY.B #$18                          ;9072|----/----\----;C018    ;
                      BNE CODE_009051                     ;9074|----/----\----;D0DB    ;
                      SEP #$20                            ;9076|----/----\----;E220    ; Accum (8 bit) 
                      RTS                                 ;9078|----/----\----;60      ;
                                                          ;                   ;        ;
CODE_009079:          LDY.B #$E0                          ;9079|----/----\----;A0E0    ;
                      BIT.W !IRQNMICommand                ;907B|----/----\----;2C9B0D  ;
                      BVC +                               ;907E|----/----\----;500E    ;
                      LDY.B #$00                          ;9080|----/----\----;A000    ;
                      LDA.W !IRQNMICommand                ;9082|----/----\----;AD9B0D  ;
                      CMP.B #$C1                          ;9085|----/----\----;C9C1    ;
                      BEQ +                               ;9087|----/----\----;F005    ;
                      LDA.B #$F0                          ;9089|----/----\----;A9F0    ;
                      STA.W !OAMTileYPos,Y                ;908B|----/----\----;990102  ;
                    + STY.B !_1                           ;908E|----/----\----;8401    ;
                      LDY.W !PlayerItembox                ;9090|----/----\----;ACC20D  ;
                      BEQ Return0090D0                    ;9093|----/----\----;F03B    ;
                      LDA.W DATA_008E01,Y                 ;9095|----/----\----;B9018E  ;
                      STA.B !_0                           ;9098|----/----\----;8500    ;
                      CPY.B #$03                          ;909A|----/----\----;C003    ;
                      BNE +                               ;909C|----/----\----;D00D    ;
                      LDA.B !TrueFrame                    ;909E|----/----\----;A513    ;
                      LSR A                               ;90A0|----/----\----;4A      ;
                      AND.B #$03                          ;90A1|----/----\----;2903    ;
                      PHY                                 ;90A3|----/----\----;5A      ;
                      TAY                                 ;90A4|----/----\----;A8      ;
                      LDA.W DATA_008DFE,Y                 ;90A5|----/----\----;B9FE8D  ;
                      PLY                                 ;90A8|----/----\----;7A      ;
                      STA.B !_0                           ;90A9|----/----\----;8500    ;
                    + LDY.B !_1                           ;90AB|----/----\----;A401    ;
                      LDA.B #$78                          ;90AD|----/----\----;A978    ;
                      STA.W !OAMTileXPos,Y                ;90AF|----/----\----;990002  ;
                      LDA.B #$0F                          ;90B2|----/----\----;A90F    ;
                      STA.W !OAMTileYPos,Y                ;90B4|----/----\----;990102  ;
                      LDA.B #$30                          ;90B7|----/----\----;A930    ;
                      ORA.B !_0                           ;90B9|----/----\----;0500    ;
                      STA.W !OAMTileAttr,Y                ;90BB|----/----\----;990302  ;
                      LDX.W !PlayerItembox                ;90BE|----/----\----;AEC20D  ;
                      LDA.W DATA_008DF9,X                 ;90C1|----/----\----;BDF98D  ;
                      STA.W !OAMTileNo,Y                  ;90C4|----/----\----;990202  ;
                      TYA                                 ;90C7|----/----\----;98      ;
                      LSR A                               ;90C8|----/----\----;4A      ;
                      LSR A                               ;90C9|----/----\----;4A      ;
                      TAY                                 ;90CA|----/----\----;A8      ;
                      LDA.B #$02                          ;90CB|----/----\----;A902    ;
                      STA.W !OAMTileSize,Y                ;90CD|----/----\----;992004  ;
Return0090D0:         RTS                                 ;90D0|----/----\----;60      ;
                                                          ;                   ;        ;
                                                          ;                   ;        ;
DATA_0090D1:          db $00,$FF,$4D,$4C,$03,$4D,$5D,$FF  ;90D1|----/----\----;        ;
                      db $03,$00,$4C,$03,$04,$15,$00,$02  ;90D9|----/----\----;        ;
                      db $00,$4A,$4E,$FF,$4C,$4B,$4A,$03  ;90E1|----/----\----;        ;
                      db $5F,$05,$04,$03,$02,$00,$FF,$01  ;90E9|----/----\----;        ;
                      db $4A,$5F,$05,$04,$00,$4D,$5D,$03  ;90F1|----/----\----;        ;
                      db $02,$01,$00,$FF,$5B,$14,$5F,$01  ;90F9|----/----\----;        ;
                      db $5E,$FF,$FF,$FF                  ;9101|----/----\----;        ;
                                                          ;                   ;        ;
DATA_009105:          db $10,$FF,$00,$5C,$13,$00,$5D,$FF  ;9105|----/----\----;        ;
                      db $03,$00,$5C,$13,$14,$15,$00,$12  ;910D|----/----\----;        ;
                      db $00,$03,$5E,$FF,$5C,$4B,$5A,$03  ;9115|----/----\----;        ;
                      db $5F,$05,$14,$13,$12,$10,$FF,$11  ;911D|----/----\----;        ;
                      db $03,$5F,$05,$14,$00,$00,$5D,$03  ;9125|----/----\----;        ;
                      db $12,$11,$10,$FF,$5B,$01,$5F,$01  ;912D|----/----\----;        ;
                      db $5E,$FF,$FF,$FF                  ;9135|----/----\----;        ;
                                                          ;                   ;        ;
DATA_009139:          db $34,$00,$34,$34,$34,$34,$30,$00  ;9139|----/----\----;        ;
                      db $34,$34,$34,$34,$74,$34,$34,$34  ;9141|----/----\----;        ;
                      db $34,$34,$34,$00,$34,$34,$34,$34  ;9149|----/----\----;        ;
                      db $34,$34,$34,$34,$34,$34,$00,$34  ;9151|----/----\----;        ;
                      db $34,$34,$34,$34,$34,$34,$34,$34  ;9159|----/----\----;        ;
                      db $34,$34,$34,$34,$34,$34,$34,$34  ;9161|----/----\----;        ;
                      db $34                              ;9169|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00916A:          db $34,$00,$B4,$34,$34,$B4,$F0,$00  ;916A|----/----\----;        ;
                      db $B4,$B4,$34,$34,$74,$B4,$B4,$34  ;9172|----/----\----;        ;
                      db $B4,$B4,$34,$00,$34,$B4,$34,$B4  ;917A|----/----\----;        ;
                      db $B4,$B4,$34,$34,$34,$34,$00,$34  ;9182|----/----\----;        ;
                      db $B4,$B4,$B4,$34,$B4,$B4,$B4,$B4  ;918A|----/----\----;        ;
                      db $34,$34,$34,$34,$F4,$B4,$F4,$B4  ;9192|----/----\----;        ;
                      db $B4                              ;919A|----/----\----;        ;
                                                          ;                   ;        ;
CODE_00919B:          LDA.B !PlayerAnimation              ;919B|----/----\----;A571    ;
                      CMP.B #$0A                          ;919D|----/----\----;C90A    ;
                      BNE CODE_0091A6                     ;919F|----/----\----;D005    ;
                      JSR CODE_00C593                     ;91A1|----/----\----;2093C5  ;
                      BRA +                               ;91A4|----/----\----;800A    ;
                                                          ;                   ;        ;
CODE_0091A6:          LDA.W !SublevelCount                ;91A6|----/----\----;AD1A14  ;
                      BNE +                               ;91A9|----/----\----;D005    ;
                      LDA.B #$1E                          ;91AB|----/----\----;A91E    ;
                      STA.W !GreenStarBlockCoins          ;91AD|----/----\----;8DC00D  ;
                    + RTS                                 ;91B0|----/----\----;60      ;
                                                          ;                   ;        ;
CODE_0091B1:          JSR CODE_00A82D                     ;91B1|----/----\----;202DA8  ;
                      LDX.B #$00                          ;91B4|----/----\----;A200    ;
                      LDA.B #$B0                          ;91B6|----/----\----;A9B0    ;
                      LDY.W !BonusGameActivate            ;91B8|----/----\----;AC2514  ;
                      BEQ +                               ;91BB|----/----\----;F00D    ;
                      STZ.W !InGameTimerHundreds          ;91BD|----/----\----;9C310F  ; \  
                      STZ.W !InGameTimerTens              ;91C0|----/----\----;9C320F  ;  |Set timer to 000 
                      STZ.W !InGameTimerOnes              ;91C3|----/----\----;9C330F  ; /  
                      LDX.B #$26                          ;91C6|----/----\----;A226    ;
                      LDA.B #$A4                          ;91C8|----/----\----;A9A4    ;
                    + STA.B !_0                           ;91CA|----/----\----;8500    ;
                      STZ.B !_1                           ;91CC|----/----\----;6401    ;
                      LDY.B #$70                          ;91CE|----/----\----;A070    ;
CODE_0091D0:          JSR CODE_0091E9                     ;91D0|----/----\----;20E991  ;
                      INX                                 ;91D3|----/----\----;E8      ;
                      CPX.B #$08                          ;91D4|----/----\----;E008    ;
                      BNE +                               ;91D6|----/----\----;D007    ;
                      LDA.W !PlayerTurnLvl                ;91D8|----/----\----;ADB30D  ;
                      BEQ +                               ;91DB|----/----\----;F002    ;
                      LDX.B #$0E                          ;91DD|----/----\----;A20E    ;
                    + TYA                                 ;91DF|----/----\----;98      ;
                      SEC                                 ;91E0|----/----\----;38      ;
                      SBC.B #$08                          ;91E1|----/----\----;E908    ;
                      TAY                                 ;91E3|----/----\----;A8      ;
                      BNE CODE_0091D0                     ;91E4|----/----\----;D0EA    ;
                      JMP CODE_008494                     ;91E6|----/----\----;4C9484  ;
                                                          ;                   ;        ;
CODE_0091E9:          LDA.W DATA_009139,X                 ;91E9|----/----\----;BD3991  ;
                      STA.W !OAMTileAttr+$108,Y           ;91EC|----/----\----;990B03  ;
                      LDA.W DATA_00916A,X                 ;91EF|----/----\----;BD6A91  ;
                      STA.W !OAMTileAttr+$10C,Y           ;91F2|----/----\----;990F03  ;
                      LDA.B !_0                           ;91F5|----/----\----;A500    ;
                      STA.W !OAMTileXPos+$108,Y           ;91F7|----/----\----;990803  ;
                      STA.W !OAMTileXPos+$10C,Y           ;91FA|----/----\----;990C03  ;
                      SEC                                 ;91FD|----/----\----;38      ;
                      SBC.B #$08                          ;91FE|----/----\----;E908    ;
                      STA.B !_0                           ;9200|----/----\----;8500    ;
                      BCS +                               ;9202|----/----\----;B002    ;
                      DEC.B !_1                           ;9204|----/----\----;C601    ;
                    + PHY                                 ;9206|----/----\----;5A      ;
                      TYA                                 ;9207|----/----\----;98      ;
                      LSR A                               ;9208|----/----\----;4A      ;
                      LSR A                               ;9209|----/----\----;4A      ;
                      TAY                                 ;920A|----/----\----;A8      ;
                      LDA.B !_1                           ;920B|----/----\----;A501    ;
                      AND.B #$01                          ;920D|----/----\----;2901    ;
                      STA.W !OAMTileSize+$42,Y            ;920F|----/----\----;996204  ;
                      STA.W !OAMTileSize+$43,Y            ;9212|----/----\----;996304  ;
                      PLY                                 ;9215|----/----\----;7A      ;
                      LDA.W DATA_0090D1,X                 ;9216|----/----\----;BDD190  ;
                      BMI +                               ;9219|----/----\----;3013    ;
                      STA.W !OAMTileNo+$108,Y             ;921B|----/----\----;990A03  ;
                      LDA.W DATA_009105,X                 ;921E|----/----\----;BD0591  ;
                      STA.W !OAMTileNo+$10C,Y             ;9221|----/----\----;990E03  ;
                      LDA.B #$68                          ;9224|----/----\----;A968    ;
                      STA.W !OAMTileYPos+$108,Y           ;9226|----/----\----;990903  ;
                      LDA.B #$70                          ;9229|----/----\----;A970    ;
                      STA.W !OAMTileYPos+$10C,Y           ;922B|----/----\----;990D03  ;
                    + RTS                                 ;922E|----/----\----;60      ;
                                                          ;                   ;        ;
CODE_00922F:          STZ.W !MainPalette                  ;922F|----/----\----;9C0307  ;
                      STZ.W !MainPalette+1                ;9232|----/----\----;9C0407  ;
                      STZ.W !HW_CGADD                     ;9235|----/----\----;9C2121  ; Set "Address for CG-RAM Write" to 0 ; Address for CG-RAM Write
                      LDX.B #$06                          ;9238|----/----\----;A206    ;
                    - LDA.W DATA_009249,X                 ;923A|----/----\----;BD4992  ;
                      STA.W !HW_DMAPARAM+$20,X            ;923D|----/----\----;9D2043  ;
                      DEX                                 ;9240|----/----\----;CA      ;
                      BPL -                               ;9241|----/----\----;10F7    ;
                      LDA.B #$04                          ;9243|----/----\----;A904    ;
                      STA.W !HW_MDMAEN                    ;9245|----/----\----;8D0B42  ; Regular DMA Channel Enable
                      RTS                                 ;9248|----/----\----;60      ;
                                                          ;                   ;        ;
                                                          ;                   ;        ;
DATA_009249:          db $00,$22,$03,$07,$00,$00,$02      ;9249|----/----\----;        ;
                                                          ;                   ;        ;
CODE_009250:          LDX.B #$04                          ;9250|----/----\----;A204    ;
                    - LDA.W DATA_009277,X                 ;9252|----/----\----;BD7792  ;
                      STA.W !HW_DMAPARAM+$70,X            ;9255|----/----\----;9D7043  ;
                      DEX                                 ;9258|----/----\----;CA      ;
                      BPL -                               ;9259|----/----\----;10F7    ;
                      LDA.B #$00                          ;925B|----/----\----;A900    ;
                      STA.W !HW_HDMABANK+$70              ;925D|----/----\----;8D7743  ; Data Bank (H-DMA)
CODE_009260:          STZ.W !HDMAEnable                   ;9260|----/----\----;9C9F0D  ; Disable all HDMA channels 
CODE_009263:          REP #$10                            ;9263|----/----\----;C210    ; 16 bit A ; Index (16 bit) 
                      LDX.W #$01BE                        ;9265|----/----\----;A2BE01  ; \  
                      LDA.B #$FF                          ;9268|----/----\----;A9FF    ;  | 
                    - STA.W !WindowTable,X                ;926A|----/----\----;9DA004  ;  |Clear "HDMA table for windowing effects" 
                      STZ.W !WindowTable+1,X              ;926D|----/----\----;9EA104  ;  |...hang on again.  It clears one set of RAM here, but not the same 
                      DEX                                 ;9270|----/----\----;CA      ;  | 
                      DEX                                 ;9271|----/----\----;CA      ;  | 
                      BPL -                               ;9272|----/----\----;10F6    ; /  
                      SEP #$10                            ;9274|----/----\----;E210    ; \ Set A to 8bit and return ; Index (8 bit) 
                      RTS                                 ;9276|----/----\----;60      ; /  
                                                          ;                   ;        ;
                                                          ;                   ;        ;
DATA_009277:          db $41,$26,$7C,$92,$00,$F0,$A0,$04  ;9277|----/----\----;        ;
                      db $F0,$80,$05,$00                  ;927F|----/----\----;        ;
                                                          ;                   ;        ;
CODE_009283:          JSR CODE_009263                     ;9283|----/----\----;206392  ;
                      LDA.W !IRQNMICommand                ;9286|----/----\----;AD9B0D  ;
                      LSR A                               ;9289|----/----\----;4A      ;
                      BCS CODE_0092A0                     ;928A|----/----\----;B014    ;
                      REP #$10                            ;928C|----/----\----;C210    ; Index (16 bit) 
                      LDX.W #$01BE                        ;928E|----/----\----;A2BE01  ;
                    - STZ.W !WindowTable,X                ;9291|----/----\----;9EA004  ; out? 
                      LDA.B #$FF                          ;9294|----/----\----;A9FF    ; *note to self: ctrl+insert, not shift+insert* 
                      STA.W !WindowTable+1,X              ;9296|----/----\----;9DA104  ; ...  This is, uh, strange.  It pastes $00FF into the $04A0,x table 
                      INX                                 ;9299|----/----\----;E8      ; instead of $FF00 o_O 
                      INX                                 ;929A|----/----\----;E8      ;
                      CPX.W #$01C0                        ;929B|----/----\----;E0C001  ;
                      BCC -                               ;929E|----/----\----;90F1    ;
CODE_0092A0:          LDA.B #$80                          ;92A0|----/----\----;A980    ;  Enable channel 7 in HDMA, disable all other HDMA channels 
                      STA.W !HDMAEnable                   ;92A2|----/----\----;8D9F0D  ;  $7E:0D9F - H-DMA Channel Enable RAM Mirror 
                      SEP #$10                            ;92A5|----/----\----;E210    ; Index (8 bit) 
                      RTS                                 ;92A7|----/----\----;60      ;
                                                          ;                   ;        ;
CODE_0092A8:          JSR CODE_009263                     ;92A8|----/----\----;206392  ; these are somewhat the same subroutine, but also not >_> 
                      REP #$10                            ;92AB|----/----\----;C210    ; Index (16 bit) 
                      LDX.W #$0198                        ;92AD|----/----\----;A29801  ;
                      BRA -                               ;92B0|----/----\----;80DF    ;
                                                          ;                   ;        ;
CODE_0092B2:          LDA.B #$58                          ;92B2|----/----\----;A958    ; Index (8 bit) 
                      STA.W !WindowTable                  ;92B4|----/----\----;8DA004  ;
                      STA.W !WindowTable+$0A              ;92B7|----/----\----;8DAA04  ;
                      STA.W !WindowTable+$14              ;92BA|----/----\----;8DB404  ;
                      STZ.W !WindowTable+9                ;92BD|----/----\----;9CA904  ;
                      STZ.W !WindowTable+$13              ;92C0|----/----\----;9CB304  ;
                      STZ.W !WindowTable+$1D              ;92C3|----/----\----;9CBD04  ;
                      LDX.B #$04                          ;92C6|----/----\----;A204    ;
                    - LDA.W DATA_009313,X                 ;92C8|----/----\----;BD1393  ;
                      STA.W !HW_DMAPARAM+$50,X            ;92CB|----/----\----;9D5043  ;
                      LDA.W DATA_009318,X                 ;92CE|----/----\----;BD1893  ;
                      STA.W !HW_DMAPARAM+$60,X            ;92D1|----/----\----;9D6043  ;
                      LDA.W DATA_00931D,X                 ;92D4|----/----\----;BD1D93  ;
                      STA.W !HW_DMAPARAM+$70,X            ;92D7|----/----\----;9D7043  ;
                      DEX                                 ;92DA|----/----\----;CA      ;
                      BPL -                               ;92DB|----/----\----;10EB    ;
                      LDA.B #$00                          ;92DD|----/----\----;A900    ;
                      STA.W !HW_HDMABANK+$50              ;92DF|----/----\----;8D5743  ; Data Bank (H-DMA)
                      STA.W !HW_HDMABANK+$60              ;92E2|----/----\----;8D6743  ; Data Bank (H-DMA)
                      STA.W !HW_HDMABANK+$70              ;92E5|----/----\----;8D7743  ; Data Bank (H-DMA)
                      LDA.B #$E0                          ;92E8|----/----\----;A9E0    ;
                      STA.W !HDMAEnable                   ;92EA|----/----\----;8D9F0D  ;
CODE_0092ED:          REP #$30                            ;92ED|----/----\----;C230    ; Index (16 bit) Accum (16 bit) 
                      LDY.W #$0008                        ;92EF|----/----\----;A00800  ;
                      LDX.W #$0014                        ;92F2|----/----\----;A21400  ;
                    - LDA.W !Layer1XPos,Y                 ;92F5|----/----\----;B91A00  ;
                      STA.W !WindowTable+1,X              ;92F8|----/----\----;9DA104  ;
                      STA.W !WindowTable+4,X              ;92FB|----/----\----;9DA404  ;
                      LDA.W !NextLayer1XPos,Y             ;92FE|----/----\----;B96214  ;
                      STA.W !WindowTable+7,X              ;9301|----/----\----;9DA704  ;
                      TXA                                 ;9304|----/----\----;8A      ;
                      SEC                                 ;9305|----/----\----;38      ;
                      SBC.W #$000A                        ;9306|----/----\----;E90A00  ;
                      TAX                                 ;9309|----/----\----;AA      ;
                      DEY                                 ;930A|----/----\----;88      ;
                      DEY                                 ;930B|----/----\----;88      ;
                      DEY                                 ;930C|----/----\----;88      ;
                      DEY                                 ;930D|----/----\----;88      ;
                      BPL -                               ;930E|----/----\----;10E5    ;
                      SEP #$30                            ;9310|----/----\----;E230    ; Index (8 bit) Accum (8 bit) 
                      RTS                                 ;9312|----/----\----;60      ;
                                                          ;                   ;        ;
                                                          ;                   ;        ;
DATA_009313:          db $02,$0D,$A0,$04,$00              ;9313|----/----\----;        ;
                                                          ;                   ;        ;
DATA_009318:          db $02,$0F,$AA,$04,$00              ;9318|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00931D:          db $02,$11,$B4,$04,$00              ;931D|----/----\----;        ;
                                                          ;                   ;        ;
GetGameMode:          LDA.W !GameMode                     ;9322|----/----\----;AD0001  ; Load game mode 
                      JSL ExecutePtr                      ;9325|----/----\----;22DF8600;
                                                          ;                   ;        ;
                      dw CODE_009391                      ;9329|----/----\----;9193    ; 00 - 
                      dw CODE_00940F                      ;932B|----/----\----;0F94    ; 01 - 
                      dw CODE_009F6F                      ;932D|----/----\----;6F9F    ; 02 - 
                      dw CODE_0096AE                      ;932F|----/----\----;AE96    ; 03 - 
                      dw CODE_009A8B                      ;9331|----/----\----;8B9A    ; 04 - 
                      dw CODE_009F6F                      ;9333|----/----\----;6F9F    ; 05 - 
                      dw CODE_00941B                      ;9335|----/----\----;1B94    ; 06 - 
                      dw GAMEMODE_07                      ;9337|----/----\----;649C    ; 07 - 
                      dw CODE_009CD1                      ;9339|----/----\----;D19C    ; 08 - 
                      dw CODE_009B1A                      ;933B|----/----\----;1A9B    ; 09 - 
                      dw CODE_009DFA                      ;933D|----/----\----;FA9D    ; 0A - 
                      dw CODE_009F6F                      ;933F|----/----\----;6F9F    ; 0B - 
                      dw CODE_00A087                      ;9341|----/----\----;87A0    ; 0C - 
                      dw CODE_009F6F                      ;9343|----/----\----;6F9F    ; 0D - 
                      dw CODE_00A1BE                      ;9345|----/----\----;BEA1    ; 0E - 
                      dw TmpFade                          ;9347|----/----\----;379F    ; 0F - 
                      dw CODE_00968E                      ;9349|----/----\----;8E96    ; 10 - 
                      dw CODE_0096D5                      ;934B|----/----\----;D596    ; 11 - 
                      dw GM04Load                         ;934D|----/----\----;9CA5    ; 12 - 
                      dw TmpFade                          ;934F|----/----\----;379F    ; 13 - 
                      dw CODE_00A1DA                      ;9351|----/----\----;DAA1    ; 14 - 
                      dw CODE_009F6F                      ;9353|----/----\----;6F9F    ; 15 - 
                      dw CODE_009750                      ;9355|----/----\----;5097    ; 16 - 
                      dw CODE_009759                      ;9357|----/----\----;5997    ; 17 - 
                      dw CODE_009F6F                      ;9359|----/----\----;6F9F    ; 18 - 
                      dw CODE_009468                      ;935B|----/----\----;6894    ; 19 - 
                      dw CODE_009F6F                      ;935D|----/----\----;6F9F    ; 1A - 
                      dw CODE_0094FD                      ;935F|----/----\----;FD94    ; 1B - 
                      dw CODE_009F6F                      ;9361|----/----\----;6F9F    ; 1C - 
                      dw CODE_009583                      ;9363|----/----\----;8395    ; 1D - f
                      dw CODE_009F6F                      ;9365|----/----\----;6F9F    ; 1E - 
                      dw CODE_0095AB                      ;9367|----/----\----;AB95    ; 1F - f
                      dw CODE_009F6F                      ;9369|----/----\----;6F9F    ; 20 - 
                      dw CODE_0095BC                      ;936B|----/----\----;BC95    ; 21 - 
                      dw CODE_009F6F                      ;936D|----/----\----;6F9F    ; 22 - 
                      dw CODE_0095C1                      ;936F|----/----\----;C195    ; 23 - 
                      dw CODE_009F6F                      ;9371|----/----\----;6F9F    ; 24 - 
                      dw CODE_00962C                      ;9373|----/----\----;2C96    ; 25 - 
                      dw CODE_009F6F                      ;9375|----/----\----;6F9F    ; 26 - 
                      dw CODE_00963D                      ;9377|----/----\----;3D96    ; 27 - 
                      dw CODE_009F7C                      ;9379|----/----\----;7C9F    ; 28 - 
                      dw Return00968D                     ;937B|----/----\----;8D96    ; 29 - 
                                                          ;                   ;        ;
TurnOffIO:            STZ.W !HW_NMITIMEN                  ;937D|----/----\----;9C0042  ; Disable NMI ,VIRQ, HIRQ, Joypads ; NMI, V/H Count, and Joypad Enable
                      STZ.W !HW_HDMAEN                    ;9380|----/----\----;9C0C42  ; Turn off all HDMA ; H-DMA Channel Enable
                      LDA.B #$80                          ;9383|----/----\----;A980    ; \ 
                      STA.W !HW_INIDISP                   ;9385|----/----\----;8D0021  ; /Disable Screen ; Screen Display Register
                      RTS                                 ;9388|----/----\----;60      ; And return 
                                                          ;                   ;        ;
                                                          ;                   ;        ;
NintendoPos:          db $60,$70,$80,$90                  ;9389|----/----\----;        ;
                                                          ;                   ;        ;
NintendoTile:         db $02,$04,$06,$08                  ;938D|----/----\----;        ; Nintendo Presents tilemap 
                                                          ;                   ;        ;
CODE_009391:          JSR CODE_0085FA                     ;9391|----/----\----;20FA85  ;
                      JSR SetUpScreen                     ;9394|----/----\----;20798A  ;
                      JSR CODE_00A993                     ;9397|----/----\----;2093A9  ;
                      LDY.B #$0C                          ;939A|----/----\----;A00C    ; \ Load Nintendo Presents logo 
                      LDX.B #$03                          ;939C|----/----\----;A203    ;  | 
                    - LDA.W NintendoPos,X                 ;939E|----/----\----;BD8993  ;  | 
                      STA.W !OAMTileXPos,Y                ;93A1|----/----\----;990002  ;  | 
                      LDA.B #$70                          ;93A4|----/----\----;A970    ;  |   <-Y position of logo 
                      STA.W !OAMTileYPos,Y                ;93A6|----/----\----;990102  ;  | 
                      LDA.W NintendoTile,X                ;93A9|----/----\----;BD8D93  ;  | 
                      STA.W !OAMTileNo,Y                  ;93AC|----/----\----;990202  ;  | 
                      LDA.B #$30                          ;93AF|----/----\----;A930    ;  | 
                      STA.W !OAMTileAttr,Y                ;93B1|----/----\----;990302  ;  | 
                      DEY                                 ;93B4|----/----\----;88      ;  | 
                      DEY                                 ;93B5|----/----\----;88      ;  | 
                      DEY                                 ;93B6|----/----\----;88      ;  | 
                      DEY                                 ;93B7|----/----\----;88      ;  | 
                      DEX                                 ;93B8|----/----\----;CA      ;  | 
                      BPL -                               ;93B9|----/----\----;10E3    ; /  
                      LDA.B #$AA                          ;93BB|----/----\----;A9AA    ; \ Related to making the sprites 16x16? 
                      STA.W !OAMTileBitSize               ;93BD|----/----\----;8D0004  ; /  
                      LDA.B #$01                          ;93C0|----/----\----;A901    ; \ Play "Bing" sound? 
                      STA.W !SPCIO3                       ;93C2|----/----\----;8DFC1D  ; /  
                      LDA.B #$40                          ;93C5|----/----\----;A940    ; \ Set timer to x40 
                      STA.W !VariousPromptTimer           ;93C7|----/----\----;8DF51D  ; /  
CODE_0093CA:          LDA.B #$0F                          ;93CA|----/----\----;A90F    ; \ Set brightness to max 
                      STA.W !Brightness                   ;93CC|----/----\----;8DAE0D  ; /  
                      LDA.B #$01                          ;93CF|----/----\----;A901    ;
                      STA.W !MosaicDirection              ;93D1|----/----\----;8DAF0D  ;
                      STZ.W !SpritePalette                ;93D4|----/----\----;9C2E19  ; Sprite palette setting = 0 
                      JSR LoadPalette                     ;93D7|----/----\----;20EDAB  ; Load the palette 
                      STZ.W !BackgroundColor              ;93DA|----/----\----;9C0107  ; \ Black background 
                      STZ.W !BackgroundColor+1            ;93DD|----/----\----;9C0207  ; / 
                      JSR CODE_00922F                     ;93E0|----/----\----;202F92  ;
                      STZ.W !BlinkCursorPos               ;93E3|----/----\----;9C921B  ; Set menu pointer position to 0 
                      LDX.B #$10                          ;93E6|----/----\----;A210    ; Enable sprites, disable layers 
                      LDY.B #$04                          ;93E8|----/----\----;A004    ; Set Layer 3 to subscreen 
CODE_0093EA:          LDA.B #$01                          ;93EA|----/----\----;A901    ;
                      STA.W !IRQNMICommand                ;93EC|----/----\----;8D9B0D  ;
                      LDA.B #$20                          ;93EF|----/----\----;A920    ; CGADSUB = 20 
                      JSR ScreenSettings                  ;93F1|----/----\----;20FD93  ; Apply above settings 
CODE_0093F4:          INC.W !GameMode                     ;93F4|----/----\----;EE0001  ; Move on to Game Mode 01 
Mode04Finish:         LDA.B #$81                          ;93F7|----/----\----;A981    ; \ Enable NMI and joypad, Disable V-count and H-cout 
                      STA.W !HW_NMITIMEN                  ;93F9|----/----\----;8D0042  ; /  ; NMI, V/H Count, and Joypad Enable
                      RTS                                 ;93FC|----/----\----;60      ;
                                                          ;                   ;        ;
ScreenSettings:       STA.W !HW_CGADSUB                   ;93FD|----/----\----;8D3121  ; \ Set CGADSUB settings to A ; Add/Subtract Select and Enable
                      STA.B !ColorSettings                ;9400|----/----\----;8540    ; /  
                      STX.W !HW_TM                        ;9402|----/----\----;8E2C21  ; Set "Background and Object Enable" to X ; Background and Object Enable
                      STY.W !HW_TS                        ;9405|----/----\----;8C2D21  ; Set "Sub Screen Designation" Y ; Sub Screen Designation
                      STZ.W !HW_TMW                       ;9408|----/----\----;9C2E21  ; \ Set "Window Mask Designation" for main and sub screen to x00 ; Window Mask Designation for Main Screen
                      STZ.W !HW_TSW                       ;940B|----/----\----;9C2F21  ; /  ; Window Mask Designation for Sub Screen
                      RTS                                 ;940E|----/----\----;60      ; Return 
                                                          ;                   ;        ;
CODE_00940F:          DEC.W !VariousPromptTimer           ;940F|----/----\----;CEF51D  ; Decrease timer 
                      BNE Return00941A                    ;9412|----/----\----;D006    ; \ If timer is 0: 
                      JSR CODE_00B888                     ;9414|----/----\----;2088B8  ;  |Jump to sub $B888 
CODE_009417:          INC.W !GameMode                     ;9417|----/----\----;EE0001  ;  |Move on to Game Mode 02 
Return00941A:         RTS                                 ;941A|----/----\----;60      ; Return 
                                                          ;                   ;        ;
CODE_00941B:          JSR SetUp0DA0GM4                    ;941B|----/----\----;20749A  ;
                      JSR CODE_009CBE                     ;941E|----/----\----;20BE9C  ;
                      BEQ +                               ;9421|----/----\----;F00B    ;
                      LDA.B #$EC                          ;9423|----/----\----;A9EC    ;
                      JSR CODE_009440                     ;9425|----/----\----;204094  ;
                      INC.W !GameMode                     ;9428|----/----\----;EE0001  ;
                      JMP CODE_009C9F                     ;942B|----/----\----;4C9F9C  ;
                                                          ;                   ;        ;
                    + DEC.W !VariousPromptTimer           ;942E|----/----\----;CEF51D  ;
                      BNE Return00941A                    ;9431|----/----\----;D0E7    ;
                      INC.W !VariousPromptTimer           ;9433|----/----\----;EEF51D  ;
                      LDA.W !SpotlightSize                ;9436|----/----\----;AD3314  ;
                      CLC                                 ;9439|----/----\----;18      ;
                      ADC.B #$04                          ;943A|----/----\----;6904    ;
                      CMP.B #$F0                          ;943C|----/----\----;C9F0    ;
                      BCS CODE_009417                     ;943E|----/----\----;B0D7    ;
CODE_009440:          STA.W !SpotlightSize                ;9440|----/----\----;8D3314  ;
CODE_009443:          JSR CODE_00CA61                     ;9443|----/----\----;2061CA  ;
                      LDA.B #$80                          ;9446|----/----\----;A980    ; \  
                      STA.B !_0                           ;9448|----/----\----;8500    ;  |Store x80 in $00, 
                      LDA.B #$70                          ;944A|----/----\----;A970    ;  |Store x70 in $01 
                      STA.B !_1                           ;944C|----/----\----;8501    ; /  
                      JMP CODE_00CA88                     ;944E|----/----\----;4C88CA  ;
                                                          ;                   ;        ;
                                                          ;                   ;        ;
CutsceneBgColor:      db $02,$00,$04,$01,$00,$06,$04      ;9451|----/----\----;        ;
                                                          ;                   ;        ;
CutsceneCastlePal:    db $03,$06,$05,$06,$03,$03,$06,$06  ;9458|----/----\----;        ; Castle palette to use for cutscenes ; Purpose of first byte is unknown 
DATA_009460:          db $03,$FF,$FF,$C9,$0F,$FF,$CC,$C9  ;9460|----/----\----;        ;
                                                          ;                   ;        ;
CODE_009468:          JSR CODE_0085FA                     ;9468|----/----\----;20FA85  ;
                      JSR Clear_1A_13D3                   ;946B|----/----\----;20A6A1  ;
                      JSR SetUpScreen                     ;946E|----/----\----;20798A  ;
                      LDX.W !CutsceneID                   ;9471|----/----\----;AEC613  ; Cutscene number 
                      LDA.B #$18                          ;9474|----/----\----;A918    ;
                      STA.W !ObjectTileset                ;9476|----/----\----;8D3119  ;
                      LDA.B #$14                          ;9479|----/----\----;A914    ;
                      STA.W !SpriteTileset                ;947B|----/----\----;8D2B19  ;
                      LDA.W CutsceneBgColor-1,X           ;947E|----/----\----;BD5094  ;
                      STA.W !BackAreaColor                ;9481|----/----\----;8D2F19  ;
                      LDA.W CutsceneCastlePal,X           ;9484|----/----\----;BD5894  ;
                      STA.W !BackgroundPalette            ;9487|----/----\----;8D3019  ;
                      STZ.W !SpritePalette                ;948A|----/----\----;9C2E19  ;
                      LDA.B #$01                          ;948D|----/----\----;A901    ;
                      STA.W !ForegroundPalette            ;948F|----/----\----;8D2D19  ;
                      CPX.B #$08                          ;9492|----/----\----;E008    ;
                      BNE CODE_0094B2                     ;9494|----/----\----;D01C    ;
                      JSR CODE_00955E                     ;9496|----/----\----;205E95  ;
                      LDA.B #$D2                          ;9499|----/----\----;A9D2    ;
                      STA.B !StripeImage                  ;949B|----/----\----;8512    ;
                      JSR LoadScrnImage                   ;949D|----/----\----;20D285  ;
                      JSR UploadMusicBank3                ;94A0|----/----\----;205981  ;
                      JSL CODE_0C93DD                     ;94A3|----/----\----;22DD930C;
                      JSR CODE_009260                     ;94A7|----/----\----;206092  ;
                      INC.W !ObjectTileset                ;94AA|----/----\----;EE3119  ;
                      INC.W !SpriteTileset                ;94AD|----/----\----;EE2B19  ;
                      BRA +                               ;94B0|----/----\----;8025    ;
                                                          ;                   ;        ;
CODE_0094B2:          LDA.B #$15                          ;94B2|----/----\----;A915    ;
                      STA.W !SPCIO2                       ;94B4|----/----\----;8DFB1D  ;
                      LDA.W DATA_009460,X                 ;94B7|----/----\----;BD6094  ;
                      STA.B !StripeImage                  ;94BA|----/----\----;8512    ;
                      JSR LoadScrnImage                   ;94BC|----/----\----;20D285  ;
                      LDA.B #$CF                          ;94BF|----/----\----;A9CF    ;
                      STA.B !StripeImage                  ;94C1|----/----\----;8512    ;
                      JSR LoadScrnImage                   ;94C3|----/----\----;20D285  ;
                      REP #$20                            ;94C6|----/----\----;C220    ; Accum (16 bit) 
                      LDA.W #$0090                        ;94C8|----/----\----;A99000  ;
                      STA.B !PlayerXPosNext               ;94CB|----/----\----;8594    ;
                      LDA.W #$0058                        ;94CD|----/----\----;A95800  ;
                      STA.B !PlayerYPosNext               ;94D0|----/----\----;8596    ;
                      SEP #$20                            ;94D2|----/----\----;E220    ; Accum (8 bit) 
                      INC.W !IsCarryingItem               ;94D4|----/----\----;EE8F14  ;
                    + JSR UploadSpriteGFX                 ;94D7|----/----\----;20DAA9  ;
                      JSR LoadPalette                     ;94DA|----/----\----;20EDAB  ;
                      JSR CODE_00922F                     ;94DD|----/----\----;202F92  ;
                      LDX.B #$0B                          ;94E0|----/----\----;A20B    ;
                    - STZ.B !Layer1XPos,X                 ;94E2|----/----\----;741A    ;
                      DEX                                 ;94E4|----/----\----;CA      ;
                      BPL -                               ;94E5|----/----\----;10FB    ;
                      LDA.B #$20                          ;94E7|----/----\----;A920    ;
                      STA.B !SpriteProperties             ;94E9|----/----\----;8564    ;
                      JSR CODE_00A635                     ;94EB|----/----\----;2035A6  ;
                      STZ.B !PlayerDirection              ;94EE|----/----\----;6476    ;
                      STZ.B !PlayerInAir                  ;94F0|----/----\----;6472    ;
                      JSL CODE_00CEB1                     ;94F2|----/----\----;22B1CE00;
                      LDX.B #$17                          ;94F6|----/----\----;A217    ;
                      LDY.B #$00                          ;94F8|----/----\----;A000    ;
                      JSR CODE_009622                     ;94FA|----/----\----;202296  ;
CODE_0094FD:          JSL !OAMResetRoutine                ;94FD|----/----\----;2200807F;
                      LDA.W !CutsceneID                   ;9501|----/----\----;ADC613  ;
                      CMP.B #$08                          ;9504|----/----\----;C908    ;
                      BEQ CODE_009557                     ;9506|----/----\----;F04F    ;
                      LDA.B !axlr0000Hold                 ;9508|----/----\----;A517    ;
                      AND.B #$00                          ;950A|----/----\----;2900    ; Change to #$30 to enter debug region below 
                      CMP.B #$30                          ;950C|----/----\----;C930    ;
                      BNE CODE_009529                     ;950E|----/----\----;D019    ;
                      LDA.B !byetudlrHold                 ;9510|----/----\----;A515    ; \ Unreachable 
                      AND.B #$08                          ;9512|----/----\----;2908    ;  | Debug: Boss defeated scene select 
                      BEQ ADDR_009523                     ;9514|----/----\----;F00D    ;  | 
                      LDA.W !CutsceneID                   ;9516|----/----\----;ADC613  ;  | 
                      INC A                               ;9519|----/----\----;1A      ;  | 
                      CMP.B #$09                          ;951A|----/----\----;C909    ;  | 
                      BCC +                               ;951C|----/----\----;9002    ;  | 
                      LDA.B #$01                          ;951E|----/----\----;A901    ;  | 
                    + STA.W !CutsceneID                   ;9520|----/----\----;8DC613  ;  | 
ADDR_009523:          LDA.B #$18                          ;9523|----/----\----;A918    ;  | 
                      STA.W !GameMode                     ;9525|----/----\----;8D0001  ;  | 
                      RTS                                 ;9528|----/----\----;60      ; / 
                                                          ;                   ;        ;
CODE_009529:          JSL CODE_0CC97E                     ;9529|----/----\----;227EC90C;
                      REP #$20                            ;952D|----/----\----;C220    ; Accum (16 bit) 
                      LDA.B !Layer1XPos                   ;952F|----/----\----;A51A    ;
                      PHA                                 ;9531|----/----\----;48      ;
                      LDA.B !Layer1YPos                   ;9532|----/----\----;A51C    ;
                      PHA                                 ;9534|----/----\----;48      ;
                      LDA.B !Layer2XPos                   ;9535|----/----\----;A51E    ;
                      STA.B !Layer1XPos                   ;9537|----/----\----;851A    ;
                      LDA.B !Layer2YPos                   ;9539|----/----\----;A520    ;
                      STA.B !Layer1YPos                   ;953B|----/----\----;851C    ;
                      SEP #$20                            ;953D|----/----\----;E220    ; Accum (8 bit) 
                      JSL CODE_00E2BD                     ;953F|----/----\----;22BDE200;
                      REP #$20                            ;9543|----/----\----;C220    ; Accum (16 bit) 
                      PLA                                 ;9545|----/----\----;68      ;
                      STA.B !Layer1YPos                   ;9546|----/----\----;851C    ;
                      PLA                                 ;9548|----/----\----;68      ;
                      STA.B !Layer1XPos                   ;9549|----/----\----;851A    ;
                      SEP #$20                            ;954B|----/----\----;E220    ; Accum (8 bit) 
                      LDA.B #$0C                          ;954D|----/----\----;A90C    ;
                      STA.B !PlayerAnimation              ;954F|----/----\----;8571    ;
                      JSR CODE_00C47E                     ;9551|----/----\----;207EC4  ;
                      JMP CODE_008494                     ;9554|----/----\----;4C9484  ;
                                                          ;                   ;        ;
CODE_009557:          JSL CODE_0C938D                     ;9557|----/----\----;228D930C;
                      JMP CODE_008494                     ;955B|----/----\----;4C9484  ;
                                                          ;                   ;        ;
CODE_00955E:          LDY.B #$2F                          ;955E|----/----\----;A02F    ;
                      JSL CODE_00BA28                     ;9560|----/----\----;2228BA00;
                      LDA.B #$80                          ;9564|----/----\----;A980    ;
                      STA.W !HW_VMAINC                    ;9566|----/----\----;8D1521  ; VRAM Address Increment Value
                      REP #$30                            ;9569|----/----\----;C230    ; Index (16 bit) Accum (16 bit) 
                      LDA.W #$4600                        ;956B|----/----\----;A90046  ;
                      STA.W !HW_VMADD                     ;956E|----/----\----;8D1621  ; Address for VRAM Read/Write (Low Byte)
                      LDX.W #$0200                        ;9571|----/----\----;A20002  ;
                    - LDA.B [!_0]                         ;9574|----/----\----;A700    ;
                      STA.W !HW_VMDATA                    ;9576|----/----\----;8D1821  ; Data for VRAM Write (Low Byte)
                      INC.B !_0                           ;9579|----/----\----;E600    ;
                      INC.B !_0                           ;957B|----/----\----;E600    ;
                      DEX                                 ;957D|----/----\----;CA      ;
                      BNE -                               ;957E|----/----\----;D0F4    ;
                      SEP #$30                            ;9580|----/----\----;E230    ; Index (8 bit) Accum (8 bit) 
                      RTS                                 ;9582|----/----\----;60      ;
                                                          ;                   ;        ;
CODE_009583:          INC.W !CutsceneID                   ;9583|----/----\----;EEC613  ;
                      LDA.B #$28                          ;9586|----/----\----;A928    ;
                      LDY.B #$01                          ;9588|----/----\----;A001    ;
                      JSR CODE_0096CF                     ;958A|----/----\----;20CF96  ;
                      DEC.W !GameMode                     ;958D|----/----\----;CE0001  ;
                      LDA.B #$16                          ;9590|----/----\----;A916    ;
                      STA.W !SpriteTileset                ;9592|----/----\----;8D2B19  ;
                      JSR GM04Load                        ;9595|----/----\----;209CA5  ;
                      DEC.W !GameMode                     ;9598|----/----\----;CE0001  ;
                      JSR TurnOffIO                       ;959B|----/----\----;207D93  ;
                      JSR CODE_0085FA                     ;959E|----/----\----;20FA85  ;
                      JSR CODE_00A993                     ;95A1|----/----\----;2093A9  ;
                      JSL CODE_0CA3C9                     ;95A4|----/----\----;22C9A30C;
                      JSR CODE_00961E                     ;95A8|----/----\----;201E96  ;
CODE_0095AB:          JSL !OAMResetRoutine                ;95AB|----/----\----;2200807F;
                      JSL CODE_0C939A                     ;95AF|----/----\----;229A930C;
                      INC.B !EffFrame                     ;95B3|----/----\----;E614    ;
                      JSL CODE_05BB39                     ;95B5|----/----\----;2239BB05;
                      JMP CODE_008494                     ;95B9|----/----\----;4C9484  ;
                                                          ;                   ;        ;
CODE_0095BC:          JSL CODE_0C93AD                     ;95BC|----/----\----;22AD930C;
                      RTS                                 ;95C0|----/----\----;60      ;
                                                          ;                   ;        ;
CODE_0095C1:          JSR CODE_0085FA                     ;95C1|----/----\----;20FA85  ;
                      JSR Clear_1A_13D3                   ;95C4|----/----\----;20A6A1  ;
                      JSR SetUpScreen                     ;95C7|----/----\----;20798A  ;
                      JSL CODE_0CAD8C                     ;95CA|----/----\----;228CAD0C;
                      JSL CODE_05801E                     ;95CE|----/----\----;221E8005;
                      LDA.W !CreditsScreenNumber          ;95D2|----/----\----;ADE91D  ;
                      CMP.B #$0A                          ;95D5|----/----\----;C90A    ;
                      BNE CODE_0095E0                     ;95D7|----/----\----;D007    ;
                      LDA.B #$13                          ;95D9|----/----\----;A913    ;
                      STA.W !SpriteTileset                ;95DB|----/----\----;8D2B19  ;
                      BRA +                               ;95DE|----/----\----;8009    ;
                                                          ;                   ;        ;
CODE_0095E0:          CMP.B #$0C                          ;95E0|----/----\----;C90C    ;
                      BNE +                               ;95E2|----/----\----;D005    ;
                      LDA.B #$17                          ;95E4|----/----\----;A917    ;
                      STA.W !SpriteTileset                ;95E6|----/----\----;8D2B19  ;
                    + JSR UploadSpriteGFX                 ;95E9|----/----\----;20DAA9  ;
                      JSR LoadPalette                     ;95EC|----/----\----;20EDAB  ;
                      JSL CODE_05809E                     ;95EF|----/----\----;229E8005;
                      JSR CODE_00A5F9                     ;95F3|----/----\----;20F9A5  ;
                      JSL CODE_0CADF6                     ;95F6|----/----\----;22F6AD0C;
                      LDA.W !CreditsScreenNumber          ;95FA|----/----\----;ADE91D  ;
                      CMP.B #$0C                          ;95FD|----/----\----;C90C    ;
                      BNE CODE_009612                     ;95FF|----/----\----;D011    ;
                      LDX.B #$0B                          ;9601|----/----\----;A20B    ;
                    - LDA.W BowserEndPalette,X            ;9603|----/----\----;BDC0B3  ;
                      STA.W !MainPalette+$104,X           ;9606|----/----\----;9D0708  ;
                      LDA.W DATA_00B3CC,X                 ;9609|----/----\----;BDCCB3  ;
                      STA.W !MainPalette+$124,X           ;960C|----/----\----;9D2708  ;
                      DEX                                 ;960F|----/----\----;CA      ;
                      BPL -                               ;9610|----/----\----;10F1    ;
CODE_009612:          JSR CODE_00922F                     ;9612|----/----\----;202F92  ;
                      JSR CODE_0092B2                     ;9615|----/----\----;20B292  ;
                      JSR LoadScrnImage                   ;9618|----/----\----;20D285  ;
                      JSR CODE_00962C                     ;961B|----/----\----;202C96  ;
CODE_00961E:          LDX.B #$15                          ;961E|----/----\----;A215    ;
                      LDY.B #$02                          ;9620|----/----\----;A002    ;
CODE_009622:          JSR KeepModeActive                  ;9622|----/----\----;20299F  ;
                      LDA.B #$09                          ;9625|----/----\----;A909    ;
                      STA.B !MainBGMode                   ;9627|----/----\----;853E    ;
                      JMP CODE_0093EA                     ;9629|----/----\----;4CEA93  ;
                                                          ;                   ;        ;
CODE_00962C:          STZ.W !PlayerGfxTileCount           ;962C|----/----\----;9C840D  ;
                      JSR CODE_0092ED                     ;962F|----/----\----;20ED92  ;
                      JSL !OAMResetRoutine                ;9632|----/----\----;2200807F;
                      JSL CODE_0C93A5                     ;9636|----/----\----;22A5930C;
                      JMP CODE_008494                     ;963A|----/----\----;4C9484  ;
                                                          ;                   ;        ;
CODE_00963D:          JSR CODE_0085FA                     ;963D|----/----\----;20FA85  ;
                      JSR Clear_1A_13D3                   ;9640|----/----\----;20A6A1  ;
                      JSR SetUpScreen                     ;9643|----/----\----;20798A  ;
                      JSR CODE_00955E                     ;9646|----/----\----;205E95  ;
                      LDA.B #$19                          ;9649|----/----\----;A919    ;
                      STA.W !SpriteTileset                ;964B|----/----\----;8D2B19  ;
                      LDA.B #$03                          ;964E|----/----\----;A903    ;
                      STA.W !BackAreaColor                ;9650|----/----\----;8D2F19  ;
                      LDA.B #$03                          ;9653|----/----\----;A903    ;
                      STA.W !BackgroundPalette            ;9655|----/----\----;8D3019  ;
                      JSR UploadSpriteGFX                 ;9658|----/----\----;20DAA9  ;
                      JSR LoadPalette                     ;965B|----/----\----;20EDAB  ;
                      LDX.B #$0B                          ;965E|----/----\----;A20B    ;
                    - LDA.W TheEndPalettes,X              ;9660|----/----\----;BD0EB7  ;
                      STA.W !MainPalette+$1A4,X           ;9663|----/----\----;9DA708  ;
                      LDA.W DATA_00B71A,X                 ;9666|----/----\----;BD1AB7  ;
                      STA.W !MainPalette+$1C4,X           ;9669|----/----\----;9DC708  ;
                      LDA.W DATA_00B726,X                 ;966C|----/----\----;BD26B7  ;
                      STA.W !MainPalette+$1E4,X           ;966F|----/----\----;9DE708  ;
                      DEX                                 ;9672|----/----\----;CA      ;
                      BPL -                               ;9673|----/----\----;10EB    ;
                      JSR CODE_00922F                     ;9675|----/----\----;202F92  ;
                      LDA.B #$D5                          ;9678|----/----\----;A9D5    ;
                      STA.B !StripeImage                  ;967A|----/----\----;8512    ;
                      JSR LoadScrnImage                   ;967C|----/----\----;20D285  ;
                      JSL CODE_0CAADF                     ;967F|----/----\----;22DFAA0C;
                      JSR CODE_008494                     ;9683|----/----\----;209484  ;
                      LDX.B #$14                          ;9686|----/----\----;A214    ;
                      LDY.B #$00                          ;9688|----/----\----;A000    ;
                      JMP CODE_009622                     ;968A|----/----\----;4C2296  ;
                                                          ;                   ;        ;
Return00968D:         RTS                                 ;968D|----/----\----;60      ;
                                                          ;                   ;        ;
CODE_00968E:          JSR CODE_0085FA                     ;968E|----/----\----;20FA85  ;
                      LDA.W !BonusGameActivate            ;9691|----/----\----;AD2514  ;
                      BNE CODE_0096A8                     ;9694|----/----\----;D012    ;
                      LDA.W !SublevelCount                ;9696|----/----\----;AD1A14  ;
                      ORA.W !ShowMarioStart               ;9699|----/----\----;0D1D14  ;
                      ORA.W !OverworldOverride            ;969C|----/----\----;0D0901  ;
                      BNE +                               ;969F|----/----\----;D00A    ;
                      LDA.W !OverworldLayer1Tile          ;96A1|----/----\----;ADC113  ;
                      CMP.B #$56                          ;96A4|----/----\----;C956    ;
                      BEQ +                               ;96A6|----/----\----;F003    ;
CODE_0096A8:          JSR CODE_0091B1                     ;96A8|----/----\----;20B191  ;
                    + JMP CODE_0093CA                     ;96AB|----/----\----;4CCA93  ;
                                                          ;                   ;        ;
CODE_0096AE:          STZ.W !HW_NMITIMEN                  ;96AE|----/----\----;9C0042  ; NMI, V/H Count, and Joypad Enable
                      JSR ClearStack                      ;96B1|----/----\----;204E8A  ;
                      LDX.B #$07                          ;96B4|----/----\----;A207    ;
                      LDA.B #$FF                          ;96B6|----/----\----;A9FF    ;
                    - STA.W !SpriteGFXFile,X              ;96B8|----/----\----;9D0101  ;
                      DEX                                 ;96BB|----/----\----;CA      ;
                      BPL -                               ;96BC|----/----\----;10FA    ;
                      LDA.W !OverworldOverride            ;96BE|----/----\----;AD0901  ;
                      BNE +                               ;96C1|----/----\----;D008    ;
                      JSR UploadMusicBank1                ;96C3|----/----\----;200E81  ;
                      LDA.B #$01                          ;96C6|----/----\----;A901    ; \ Set title screen music 
                      STA.W !SPCIO2                       ;96C8|----/----\----;8DFB1D  ; / 
                    + LDA.B #$EB                          ;96CB|----/----\----;A9EB    ;
                      LDY.B #$00                          ;96CD|----/----\----;A000    ;
CODE_0096CF:          STA.W !OverworldOverride            ;96CF|----/----\----;8D0901  ;
                      STY.W !OWPlayerSubmap               ;96D2|----/----\----;8C111F  ;
CODE_0096D5:          STZ.W !HW_NMITIMEN                  ;96D5|----/----\----;9C0042  ; NMI, V/H Count, and Joypad Enable
                      JSR NoButtons                       ;96D8|----/----\----;202DF6  ;
                      LDA.W !SublevelCount                ;96DB|----/----\----;AD1A14  ;
                      BNE +                               ;96DE|----/----\----;D009    ;
                      LDA.W !ShowMarioStart               ;96E0|----/----\----;AD1D14  ;
                      BEQ +                               ;96E3|----/----\----;F004    ;
                      JSL CODE_04DC09                     ;96E5|----/----\----;2209DC04;
                    + STZ.W !Layer3ScrollType             ;96E9|----/----\----;9CD513  ;
                      STZ.W !OverworldProcess             ;96EC|----/----\----;9CD913  ;
                      LDA.B #$50                          ;96EF|----/----\----;A950    ;
                      STA.W !DrumrollTimer                ;96F1|----/----\----;8DD613  ;
                      JSL CODE_05D796                     ;96F4|----/----\----;2296D705;
                      LDX.B #$07                          ;96F8|----/----\----;A207    ;
                    - LDA.B !Layer1XPos,X                 ;96FA|----/----\----;B51A    ;
                      STA.W !NextLayer1XPos,X             ;96FC|----/----\----;9D6214  ;
                      DEX                                 ;96FF|----/----\----;CA      ;
                      BPL -                               ;9700|----/----\----;10F8    ;
                      JSR CODE_008134                     ;9702|----/----\----;203481  ;
                      JSR CODE_00A635                     ;9705|----/----\----;2035A6  ;
                      LDA.B #$20                          ;9708|----/----\----;A920    ;
                      STA.B !LastScreenHoriz              ;970A|----/----\----;855E    ;
                      JSR CODE_00A796                     ;970C|----/----\----;2096A7  ;
                      INC.W !ScreenScrollAtWill           ;970F|----/----\----;EE0414  ;
                      JSL CODE_00F6DB                     ;9712|----/----\----;22DBF600;
                      JSL CODE_05801E                     ;9716|----/----\----;221E8005;
                      LDA.W !OverworldOverride            ;971A|----/----\----;AD0901  ;
                      BEQ CODE_009728                     ;971D|----/----\----;F009    ;
                      CMP.B #$E9                          ;971F|----/----\----;C9E9    ;
                      BNE CODE_009740                     ;9721|----/----\----;D01D    ;
                      LDA.B #$13                          ;9723|----/----\----;A913    ;
                      STA.W !MusicBackup                  ;9725|----/----\----;8DDA0D  ;
CODE_009728:          LDA.W !MusicBackup                  ;9728|----/----\----;ADDA0D  ;
                      CMP.B #$40                          ;972B|----/----\----;C940    ;
                      BCS CODE_00973B                     ;972D|----/----\----;B00C    ;
                      LDY.W !IRQNMICommand                ;972F|----/----\----;AC9B0D  ;
                      CPY.B #$C1                          ;9732|----/----\----;C0C1    ;
                      BNE +                               ;9734|----/----\----;D002    ;
                      LDA.B #$16                          ;9736|----/----\----;A916    ;
                    + STA.W !SPCIO2                       ;9738|----/----\----;8DFB1D  ;
CODE_00973B:          AND.B #$BF                          ;973B|----/----\----;29BF    ;
                      STA.W !MusicBackup                  ;973D|----/----\----;8DDA0D  ;
CODE_009740:          STZ.W !Brightness                   ;9740|----/----\----;9CAE0D  ;
                      STZ.W !MosaicDirection              ;9743|----/----\----;9CAF0D  ;
                      INC.W !GameMode                     ;9746|----/----\----;EE0001  ;
                      JMP Mode04Finish                    ;9749|----/----\----;4CF793  ;
                                                          ;                   ;        ;
CODE_00974C:          JSR HexToDec                        ;974C|----/----\----;204590  ;
                      RTL                                 ;974F|----/----\----;6B      ;
                                                          ;                   ;        ;
CODE_009750:          JSR CODE_0085FA                     ;9750|----/----\----;20FA85  ;
                      JSR CODE_00A82D                     ;9753|----/----\----;202DA8  ;
                      JMP CODE_0093CA                     ;9756|----/----\----;4CCA93  ;
                                                          ;                   ;        ;
CODE_009759:          JSL !OAMResetRoutine                ;9759|----/----\----;2200807F;
                      LDA.W !GameOverAnimation            ;975D|----/----\----;AD3C14  ;
                      BNE CODE_00978B                     ;9760|----/----\----;D029    ;
                      DEC.W !GameOverTimer                ;9762|----/----\----;CE3D14  ;
                      BNE CODE_00978E                     ;9765|----/----\----;D027    ;
                      LDA.W !PlayerLives                  ;9767|----/----\----;ADBE0D  ;
                      BPL CODE_009788                     ;976A|----/----\----;101C    ;
                      STZ.W !CarryYoshiThruLvls           ;976C|----/----\----;9CC10D  ;
                      LDA.W !SavedPlayerLives             ;976F|----/----\----;ADB40D  ;
                      ORA.W !SavedPlayerLives+1           ;9772|----/----\----;0DB50D  ;
                      BPL CODE_009788                     ;9775|----/----\----;1011    ;
                      LDX.B #$0C                          ;9777|----/----\----;A20C    ;
                    - STZ.W !AllDragonCoinsCollected,X    ;9779|----/----\----;9E2F1F  ;
                      STZ.W !_6,X                         ;977C|----/----\----;9E0600  ; OOF
                      STZ.W !MoonCollected,X              ;977F|----/----\----;9EEE1F  ;
                      DEX                                 ;9782|----/----\----;CA      ;
                      BPL -                               ;9783|----/----\----;10F4    ;
                      INC.W !ShowContinueEnd              ;9785|----/----\----;EEC913  ;
CODE_009788:          JMP CODE_009E62                     ;9788|----/----\----;4C629E  ;
                                                          ;                   ;        ;
CODE_00978B:          SEC                                 ;978B|----/----\----;38      ;
                      SBC.B #$04                          ;978C|----/----\----;E904    ;
CODE_00978E:          STA.W !GameOverAnimation            ;978E|----/----\----;8D3C14  ;
                      CLC                                 ;9791|----/----\----;18      ;
                      ADC.B #$A0                          ;9792|----/----\----;69A0    ;
                      STA.B !_0                           ;9794|----/----\----;8500    ;
                      ROL.B !_1                           ;9796|----/----\----;2601    ;
                      LDX.W !DeathMessage                 ;9798|----/----\----;AE3B14  ;
                      LDY.B #$48                          ;979B|----/----\----;A048    ;
CODE_00979D:          CPY.B #$28                          ;979D|----/----\----;C028    ;
                      BNE +                               ;979F|----/----\----;D00D    ;
                      LDA.B #$78                          ;97A1|----/----\----;A978    ;
                      SEC                                 ;97A3|----/----\----;38      ;
                      SBC.W !GameOverAnimation            ;97A4|----/----\----;ED3C14  ;
                      STA.B !_0                           ;97A7|----/----\----;8500    ;
                      ROL A                               ;97A9|----/----\----;2A      ;
                      EOR.B #$01                          ;97AA|----/----\----;4901    ;
                      STA.B !_1                           ;97AC|----/----\----;8501    ;
                    + JSR CODE_0091E9                     ;97AE|----/----\----;20E991  ;
                      INX                                 ;97B1|----/----\----;E8      ;
                      TYA                                 ;97B2|----/----\----;98      ;
                      SEC                                 ;97B3|----/----\----;38      ;
                      SBC.B #$08                          ;97B4|----/----\----;E908    ;
                      TAY                                 ;97B6|----/----\----;A8      ;
                      BNE CODE_00979D                     ;97B7|----/----\----;D0E4    ;
                      JMP CODE_008494                     ;97B9|----/----\----;4C9484  ;
                                                          ;                   ;        ;
CODE_0097BC:          LDA.B #$0F                          ;97BC|----/----\----;A90F    ;
                      STA.W !Brightness                   ;97BE|----/----\----;8DAE0D  ; Set brightness to full (RAM mirror) 
                      STZ.W !MosaicSize                   ;97C1|----/----\----;9CB00D  ;
                      JSR GM__Mosaic                      ;97C4|----/----\----;205B9F  ;
                      LDA.B #$20                          ;97C7|----/----\----;A920    ; \ 
                      STA.B !Mode7XScale                  ;97C9|----/----\----;8538    ; |Not sure what these bytes are used for yet, unless they're just more  
                      STA.B !Mode7YScale                  ;97CB|----/----\----;8539    ; /scratch (I find that unlikely) 
                      STZ.W !ScreenShakeYOffset           ;97CD|----/----\----;9C8818  ;
                      JSR CODE_0085FA                     ;97D0|----/----\----;20FA85  ;
                      LDA.B #$FF                          ;97D3|----/----\----;A9FF    ;
                      STA.W !ObjectTileset                ;97D5|----/----\----;8D3119  ;
                      JSL CODE_03D958                     ;97D8|----/----\----;2258D903;
                      BIT.W !IRQNMICommand                ;97DC|----/----\----;2C9B0D  ;
                      BVC CODE_009801                     ;97DF|----/----\----;5020    ;
                      JSR CODE_009925                     ;97E1|----/----\----;202599  ;
                      LDY.W !ActiveBoss                   ;97E4|----/----\----;ACFC13  ;
                      CPY.B #$03                          ;97E7|----/----\----;C003    ;
                      BCC CODE_0097F1                     ;97E9|----/----\----;9006    ;
                      BNE CODE_00983B                     ;97EB|----/----\----;D04E    ;
                      LDA.B #$18                          ;97ED|----/----\----;A918    ;
                      BRA +                               ;97EF|----/----\----;800B    ;
                                                          ;                   ;        ;
CODE_0097F1:          LDA.B #$03                          ;97F1|----/----\----;A903    ;
                      STA.W !PlayerBehindNet              ;97F3|----/----\----;8DF913  ;
                      LDA.B #$C8                          ;97F6|----/----\----;A9C8    ;
                      STA.B !OAMAddress                   ;97F8|----/----\----;853F    ;
                      LDA.B #$12                          ;97FA|----/----\----;A912    ;
                    + DEC.W !ObjectTileset                ;97FC|----/----\----;CE3119  ;
                      BRA +                               ;97FF|----/----\----;803C    ;
                                                          ;                   ;        ;
CODE_009801:          JSR CODE_00ADD9                     ;9801|----/----\----;20D9AD  ;
                      JSR CODE_0092A8                     ;9804|----/----\----;20A892  ;
                      LDX.B #$50                          ;9807|----/----\----;A250    ;
                      JSR CODE_009A3D                     ;9809|----/----\----;203D9A  ;
                      REP #$20                            ;980C|----/----\----;C220    ; Accum (16 bit) 
                      LDA.W #$0050                        ;980E|----/----\----;A95000  ;
                      STA.B !PlayerXPosNext               ;9811|----/----\----;8594    ;
                      LDA.W #$FFD0                        ;9813|----/----\----;A9D0FF  ;
                      STA.B !PlayerYPosNext               ;9816|----/----\----;8596    ;
                      STZ.B !Layer1XPos                   ;9818|----/----\----;641A    ;
                      STZ.W !NextLayer1XPos               ;981A|----/----\----;9C6214  ;
                      LDA.W #$FF90                        ;981D|----/----\----;A990FF  ;
                      STA.B !Layer1YPos                   ;9820|----/----\----;851C    ;
                      STA.W !NextLayer1YPos               ;9822|----/----\----;8D6414  ;
                      LDA.W #$0080                        ;9825|----/----\----;A98000  ;
                      STA.B !Mode7CenterX                 ;9828|----/----\----;852A    ;
                      LDA.W #$0050                        ;982A|----/----\----;A95000  ;
                      STA.B !Mode7CenterY                 ;982D|----/----\----;852C    ;
                      LDA.W #$0080                        ;982F|----/----\----;A98000  ;
                      STA.B !Mode7XPos                    ;9832|----/----\----;853A    ;
                      LDA.W #$0010                        ;9834|----/----\----;A91000  ;
                      STA.B !Mode7YPos                    ;9837|----/----\----;853C    ;
                      SEP #$20                            ;9839|----/----\----;E220    ; Accum (8 bit) 
CODE_00983B:          LDA.B #$13                          ;983B|----/----\----;A913    ;
                    + STA.W !SpriteTileset                ;983D|----/----\----;8D2B19  ;
                      JSR UploadSpriteGFX                 ;9840|----/----\----;20DAA9  ;
                      LDA.B #$11                          ;9843|----/----\----;A911    ;
                      STA.W !HW_TMW                       ;9845|----/----\----;8D2E21  ; Window Mask Designation for Main Screen
                      STZ.W !HW_TS                        ;9848|----/----\----;9C2D21  ; Sub Screen Designation
                      STZ.W !HW_TSW                       ;984B|----/----\----;9C2F21  ; Window Mask Designation for Sub Screen
                      LDA.B #$02                          ;984E|----/----\----;A902    ;
                      STA.B !Layer12Window                ;9850|----/----\----;8541    ;
                      LDA.B #$32                          ;9852|----/----\----;A932    ;
                      STA.B !OBJCWWindow                  ;9854|----/----\----;8543    ;
                      LDA.B #$20                          ;9856|----/----\----;A920    ;
                      STA.B !ColorAddition                ;9858|----/----\----;8544    ;
                      JSR GM04DoDMA                       ;985A|----/----\----;20FF8C  ;
                      JSR CODE_008ACD                     ;985D|----/----\----;20CD8A  ;
CODE_009860:          JSL CODE_00E2BD                     ;9860|----/----\----;22BDE200;
                      JSR CODE_00A2F3                     ;9864|----/----\----;20F3A2  ;
                      JSR CODE_00C593                     ;9867|----/----\----;2093C5  ;
                      STZ.B !PlayerYSpeed                 ;986A|----/----\----;647D    ; Y speed = 0 
                      JSL CODE_01808C                     ;986C|----/----\----;228C8001;
                      JSL !OAMResetRoutine                ;9870|----/----\----;2200807F;
                      RTS                                 ;9874|----/----\----;60      ;
                                                          ;                   ;        ;
                                                          ;                   ;        ;
                      db $01,$00,$FF,$FF,$40,$00,$C0,$01  ;9875|----/----\----;        ;
                                                          ;                   ;        ;
CODE_00987D:          JSR CODE_008ACD                     ;987D|----/----\----;20CD8A  ;
                      BIT.W !IRQNMICommand                ;9880|----/----\----;2C9B0D  ;
                      BVC +                               ;9883|----/----\----;5003    ;
                      JMP CODE_009A52                     ;9885|----/----\----;4C529A  ;
                                                          ;                   ;        ;
                    + JSL !OAMResetRoutine                ;9888|----/----\----;2200807F;
                      JSL CODE_03C0C6                     ;988C|----/----\----;22C6C003;
                      RTS                                 ;9890|----/----\----;60      ;
                                                          ;                   ;        ;
                                                          ;                   ;        ;
DATA_009891:          db $9E,$12,$1E,$12,$9E,$11,$1E,$11  ;9891|----/----\----;        ;
                      db $1E,$16,$9E,$15,$1E,$15,$9E,$14  ;9899|----/----\----;        ;
                      db $1E,$14,$9E,$13,$1E,$13,$9E,$16  ;98A1|----/----\----;        ;
                                                          ;                   ;        ;
CODE_0098A9:          LDA.W !IRQNMICommand                ;98A9|----/----\----;AD9B0D  ; \  
                      LSR A                               ;98AC|----/----\----;4A      ;  |If "Special level" is even, 
                      BCS +                               ;98AD|----/----\----;B032    ; / branch to $98E1 
                      LDA.B !EffFrame                     ;98AF|----/----\----;A514    ;
                      LSR A                               ;98B1|----/----\----;4A      ;
                      LSR A                               ;98B2|----/----\----;4A      ;
                      AND.B #$06                          ;98B3|----/----\----;2906    ;
                      TAX                                 ;98B5|----/----\----;AA      ;
                      REP #$20                            ;98B6|----/----\----;C220    ; 16 bit A ; Accum (16 bit) 
                      LDY.B #$80                          ;98B8|----/----\----;A080    ;
                      STY.W !HW_VMAINC                    ;98BA|----/----\----;8C1521  ; VRAM Address Increment Value
                      LDA.W #$1801                        ;98BD|----/----\----;A90118  ;
                      STA.W !HW_DMAPARAM+$20              ;98C0|----/----\----;8D2043  ; Parameters for DMA Transfer
                      LDA.W #$7800                        ;98C3|----/----\----;A90078  ;
                      STA.W !HW_VMADD                     ;98C6|----/----\----;8D1621  ; Address for VRAM Read/Write (Low Byte)
                      LDA.L DATA_05BA39,X                 ;98C9|----/----\----;BF39BA05;
                      STA.W !HW_DMAADDR+$20               ;98CD|----/----\----;8D2243  ; A Address (Low Byte)
                      LDY.B #$7E                          ;98D0|----/----\----;A07E    ;
                      STY.W !HW_DMAADDR+$22               ;98D2|----/----\----;8C2443  ; A Address Bank
                      LDA.W #$0080                        ;98D5|----/----\----;A98000  ;
                      STA.W !HW_DMACNT+$20                ;98D8|----/----\----;8D2543  ; Number Bytes to Transfer (Low Byte) (DMA)
                      LDY.B #$04                          ;98DB|----/----\----;A004    ;
                      STY.W !HW_MDMAEN                    ;98DD|----/----\----;8C0B42  ; Regular DMA Channel Enable
                      CLC                                 ;98E0|----/----\----;18      ;
                    + REP #$20                            ;98E1|----/----\----;C220    ; 16 bit A ; Accum (16 bit) 
                      LDA.W #$0004                        ;98E3|----/----\----;A90400  ;
                      LDY.B #$06                          ;98E6|----/----\----;A006    ;
                      BCC +                               ;98E8|----/----\----;9005    ;
                      LDA.W #$0008                        ;98EA|----/----\----;A90800  ;
                      LDY.B #$16                          ;98ED|----/----\----;A016    ;
                    + STA.B !_0                           ;98EF|----/----\----;8500    ;
                      LDA.W #$C680                        ;98F1|----/----\----;A980C6  ;
                      STA.B !_2                           ;98F4|----/----\----;8502    ;
                      STZ.W !HW_VMAINC                    ;98F6|----/----\----;9C1521  ; VRAM Address Increment Value
                      LDA.W #$1800                        ;98F9|----/----\----;A90018  ;
                      STA.W !HW_DMAPARAM+$20              ;98FC|----/----\----;8D2043  ; Parameters for DMA Transfer
                      LDX.B #$7E                          ;98FF|----/----\----;A27E    ;
                      STX.W !HW_DMAADDR+$22               ;9901|----/----\----;8E2443  ; A Address Bank
                      LDX.B #$04                          ;9904|----/----\----;A204    ;
                    - LDA.W DATA_009891,Y                 ;9906|----/----\----;B99198  ;
                      STA.W !HW_VMADD                     ;9909|----/----\----;8D1621  ; Address for VRAM Read/Write (Low Byte)
                      LDA.B !_2                           ;990C|----/----\----;A502    ;
                      STA.W !HW_DMAADDR+$20               ;990E|----/----\----;8D2243  ; A Address (Low Byte)
                      CLC                                 ;9911|----/----\----;18      ;
                      ADC.B !_0                           ;9912|----/----\----;6500    ;
                      STA.B !_2                           ;9914|----/----\----;8502    ;
                      LDA.B !_0                           ;9916|----/----\----;A500    ;
                      STA.W !HW_DMACNT+$20                ;9918|----/----\----;8D2543  ; Number Bytes to Transfer (Low Byte) (DMA)
                      STX.W !HW_MDMAEN                    ;991B|----/----\----;8E0B42  ; Regular DMA Channel Enable
                      DEY                                 ;991E|----/----\----;88      ;
                      DEY                                 ;991F|----/----\----;88      ;
                      BPL -                               ;9920|----/----\----;10E4    ;
                      SEP #$20                            ;9922|----/----\----;E220    ; 8 bit A ; Accum (8 bit) 
                      RTS                                 ;9924|----/----\----;60      ;
                                                          ;                   ;        ;
CODE_009925:          STZ.B !PlayerYPosNext+1             ;9925|----/----\----;6497    ;
                      REP #$20                            ;9927|----/----\----;C220    ; Accum (16 bit) 
                      LDA.W #$0020                        ;9929|----/----\----;A92000  ;
                      STA.B !PlayerXPosNext               ;992C|----/----\----;8594    ;
                      STZ.B !Layer1XPos                   ;992E|----/----\----;641A    ;
                      STZ.W !NextLayer1XPos               ;9930|----/----\----;9C6214  ;
                      STZ.B !Layer1YPos                   ;9933|----/----\----;641C    ;
                      STZ.W !NextLayer1YPos               ;9935|----/----\----;9C6414  ;
                      LDA.W #$0080                        ;9938|----/----\----;A98000  ;
                      STA.B !Mode7CenterX                 ;993B|----/----\----;852A    ;
                      LDA.W #$00A0                        ;993D|----/----\----;A9A000  ;
                      STA.B !Mode7CenterY                 ;9940|----/----\----;852C    ;
                      SEP #$20                            ;9942|----/----\----;E220    ; Accum (8 bit) 
                      JSR CODE_00AE15                     ;9944|----/----\----;2015AE  ;
                      JSL CODE_01808C                     ;9947|----/----\----;228C8001;
                      LDA.W !IRQNMICommand                ;994B|----/----\----;AD9B0D  ;
                      LSR A                               ;994E|----/----\----;4A      ;
                      LDX.B #$C0                          ;994F|----/----\----;A2C0    ;
                      LDA.B #$A0                          ;9951|----/----\----;A9A0    ;
                      BCC +                               ;9953|----/----\----;9006    ;
                      STZ.W !HorizLayer1Setting           ;9955|----/----\----;9C1114  ;
                      JMP CODE_009A17                     ;9958|----/----\----;4C179A  ;
                                                          ;                   ;        ;
                    + REP #$30                            ;995B|----/----\----;C230    ; Index (16 bit) Accum (16 bit) 
                      LDA.W !ActiveBoss                   ;995D|----/----\----;ADFC13  ;
                      AND.W #$00FF                        ;9960|----/----\----;29FF00  ;
                      ASL A                               ;9963|----/----\----;0A      ;
                      TAX                                 ;9964|----/----\----;AA      ;
                      LDY.W #$02C0                        ;9965|----/----\----;A0C002  ;
                      LDA.W DATA_00F8E8,X                 ;9968|----/----\----;BDE8F8  ;
                      BPL +                               ;996B|----/----\----;1003    ;
                      LDY.W #$FB80                        ;996D|----/----\----;A080FB  ;
                    + CMP.W #$0012                        ;9970|----/----\----;C91200  ;
                      BNE +                               ;9973|----/----\----;D003    ;
                      LDY.W #$0320                        ;9975|----/----\----;A02003  ;
                    + STY.B !_0                           ;9978|----/----\----;8400    ;
                      LDX.W #$0000                        ;997A|----/----\----;A20000  ;
                      LDA.W #$C05A                        ;997D|----/----\----;A95AC0  ;
CODE_009980:          STA.L !DynamicStripeImage,X         ;9980|----/----\----;9F7D837F;
                      XBA                                 ;9984|----/----\----;EB      ;
                      CLC                                 ;9985|----/----\----;18      ;
                      ADC.W #$0080                        ;9986|----/----\----;698000  ;
                      XBA                                 ;9989|----/----\----;EB      ;
                      STA.L !DynamicStripeImage+$84,X     ;998A|----/----\----;9F01847F;
                      XBA                                 ;998E|----/----\----;EB      ;
                      SEC                                 ;998F|----/----\----;38      ;
                      SBC.B !_0                           ;9990|----/----\----;E500    ;
                      XBA                                 ;9992|----/----\----;EB      ;
                      STA.L !DynamicStripeImage+$108,X    ;9993|----/----\----;9F85847F;
                      LDA.W #$7F00                        ;9997|----/----\----;A9007F  ;
                      STA.L !DynamicStripeImage+2,X       ;999A|----/----\----;9F7F837F;
                      STA.L !DynamicStripeImage+$86,X     ;999E|----/----\----;9F03847F;
                      STA.L !DynamicStripeImage+$10A,X    ;99A2|----/----\----;9F87847F;
                      LDY.W #$0010                        ;99A6|----/----\----;A01000  ;
                    - LDA.W #$38A2                        ;99A9|----/----\----;A9A238  ;
                      STA.L !DynamicStripeImage+4,X       ;99AC|----/----\----;9F81837F;
                      INC A                               ;99B0|----/----\----;1A      ;
                      STA.L !DynamicStripeImage+6,X       ;99B1|----/----\----;9F83837F;
                      LDA.W #$38B2                        ;99B5|----/----\----;A9B238  ;
                      STA.L !DynamicStripeImage+$44,X     ;99B8|----/----\----;9FC1837F;
                      INC A                               ;99BC|----/----\----;1A      ;
                      STA.L !DynamicStripeImage+$46,X     ;99BD|----/----\----;9FC3837F;
                      LDA.W #$2C80                        ;99C1|----/----\----;A9802C  ;
                      STA.L !DynamicStripeImage+$88,X     ;99C4|----/----\----;9F05847F;
                      INC A                               ;99C8|----/----\----;1A      ;
                      STA.L !DynamicStripeImage+$8A,X     ;99C9|----/----\----;9F07847F;
                      INC A                               ;99CD|----/----\----;1A      ;
                      STA.L !DynamicStripeImage+$C8,X     ;99CE|----/----\----;9F45847F;
                      INC A                               ;99D2|----/----\----;1A      ;
                      STA.L !DynamicStripeImage+$CA,X     ;99D3|----/----\----;9F47847F;
                      LDA.W #$28A0                        ;99D7|----/----\----;A9A028  ;
                      STA.L !DynamicStripeImage+$10C,X    ;99DA|----/----\----;9F89847F;
                      INC A                               ;99DE|----/----\----;1A      ;
                      STA.L !DynamicStripeImage+$10E,X    ;99DF|----/----\----;9F8B847F;
                      LDA.W #$28B0                        ;99E3|----/----\----;A9B028  ;
                      STA.L !DynamicStripeImage+$14C,X    ;99E6|----/----\----;9FC9847F;
                      INC A                               ;99EA|----/----\----;1A      ;
                      STA.L !DynamicStripeImage+$14E,X    ;99EB|----/----\----;9FCB847F;
                      INX                                 ;99EF|----/----\----;E8      ;
                      INX                                 ;99F0|----/----\----;E8      ;
                      INX                                 ;99F1|----/----\----;E8      ;
                      INX                                 ;99F2|----/----\----;E8      ;
                      DEY                                 ;99F3|----/----\----;88      ;
                      BNE -                               ;99F4|----/----\----;D0B3    ;
                      TXA                                 ;99F6|----/----\----;8A      ;
                      CLC                                 ;99F7|----/----\----;18      ;
                      ADC.W #$014C                        ;99F8|----/----\----;694C01  ;
                      TAX                                 ;99FB|----/----\----;AA      ;
                      LDA.W #$C05E                        ;99FC|----/----\----;A95EC0  ;
                      CPX.W #$0318                        ;99FF|----/----\----;E01803  ;
                      BCS +                               ;9A02|----/----\----;B003    ;
                      JMP CODE_009980                     ;9A04|----/----\----;4C8099  ;
                                                          ;                   ;        ;
                    + LDA.W #$00FF                        ;9A07|----/----\----;A9FF00  ;
                      STA.L !DynamicStripeImage,X         ;9A0A|----/----\----;9F7D837F;
                      SEP #$30                            ;9A0E|----/----\----;E230    ; Index (8 bit) Accum (8 bit) 
                      JSR LoadScrnImage                   ;9A10|----/----\----;20D285  ;
                      LDX.B #$B0                          ;9A13|----/----\----;A2B0    ;
                      LDA.B #$90                          ;9A15|----/----\----;A990    ;
CODE_009A17:          STA.B !PlayerYPosNext               ;9A17|----/----\----;8596    ;
                      JSR CODE_009A1F                     ;9A19|----/----\----;201F9A  ;
                      JMP CODE_009283                     ;9A1C|----/----\----;4C8392  ;
                                                          ;                   ;        ;
CODE_009A1F:          LDY.B #$10                          ;9A1F|----/----\----;A010    ;
                      LDA.B #$32                          ;9A21|----/----\----;A932    ;
                    - STA.L !Map16TilesLow,X              ;9A23|----/----\----;9F00C87E;
                      STA.L !Map16TilesLow+$1B0,X         ;9A27|----/----\----;9FB0C97E;
                      STA.L !Map16TilesHigh,X             ;9A2B|----/----\----;9F00C87F;
                      STA.L !Map16TilesHigh+$1B0,X        ;9A2F|----/----\----;9FB0C97F;
                      INX                                 ;9A33|----/----\----;E8      ;
                      DEY                                 ;9A34|----/----\----;88      ;
                      BNE -                               ;9A35|----/----\----;D0EC    ;
                      CPX.B #$C0                          ;9A37|----/----\----;E0C0    ;
                      BNE Return009A4D                    ;9A39|----/----\----;D012    ;
                      LDX.B #$D0                          ;9A3B|----/----\----;A2D0    ;
CODE_009A3D:          LDY.B #$10                          ;9A3D|----/----\----;A010    ;
                      LDA.B #$05                          ;9A3F|----/----\----;A905    ;
                    - STA.L !Map16TilesLow,X              ;9A41|----/----\----;9F00C87E;
                      STA.L !Map16TilesLow+$1B0,X         ;9A45|----/----\----;9FB0C97E;
                      INX                                 ;9A49|----/----\----;E8      ;
                      DEY                                 ;9A4A|----/----\----;88      ;
                      BNE -                               ;9A4B|----/----\----;D0F4    ;
Return009A4D:         RTS                                 ;9A4D|----/----\----;60      ;
                                                          ;                   ;        ;
                                                          ;                   ;        ;
                      db $FF,$01,$18,$30                  ;9A4E|----/----\----;        ;
                                                          ;                   ;        ;
CODE_009A52:          LDA.W !IRQNMICommand                ;9A52|----/----\----;AD9B0D  ;
                      LSR A                               ;9A55|----/----\----;4A      ;
                      BCS +                               ;9A56|----/----\----;B017    ;
                      JSL CODE_00F6DB                     ;9A58|----/----\----;22DBF600;
                      JSL CODE_05BC00                     ;9A5C|----/----\----;2200BC05;
                      LDA.W !ActiveBoss                   ;9A60|----/----\----;ADFC13  ;
                      CMP.B #$04                          ;9A63|----/----\----;C904    ;
                      BEQ +                               ;9A65|----/----\----;F008    ;
                      JSR CODE_0086C7                     ;9A67|----/----\----;20C786  ;
                      JSL CODE_02827D                     ;9A6A|----/----\----;227D8202;
                      RTS                                 ;9A6E|----/----\----;60      ;
                                                          ;                   ;        ;
                    + JSL !OAMResetRoutine                ;9A6F|----/----\----;2200807F;
                      RTS                                 ;9A73|----/----\----;60      ;
                                                          ;                   ;        ;
SetUp0DA0GM4:         LDA.W !HW_JOY1                      ;9A74|----/----\----;AD1640  ; \Read old-style controller register for player 1 
                      LSR A                               ;9A77|----/----\----;4A      ; /LSR A, but then discard (Is this for carry flag or something?) 
                      LDA.W !HW_JOY2                      ;9A78|----/----\----;AD1740  ; \Load And Rotate left A (player 2 old-style controller regs) 
                      ROL A                               ;9A7B|----/----\----;2A      ; / 
                      AND.B #$03                          ;9A7C|----/----\----;2903    ; AND A with #$03 
                      BEQ CODE_009A87                     ;9A7E|----/----\----;F007    ; If A AND #$03 = 0 Then STA $0DA0 (A=0) 
                      CMP.B #$03                          ;9A80|----/----\----;C903    ;
                      BNE +                               ;9A82|----/----\----;D002    ;
                      ORA.B #$80                          ;9A84|----/----\----;0980    ;
                    + DEC A                               ;9A86|----/----\----;3A      ;
CODE_009A87:          STA.W !ControllersPresent           ;9A87|----/----\----;8DA00D  ;
                      RTS                                 ;9A8A|----/----\----;60      ; *yawn* 
                                                          ;                   ;        ;
CODE_009A8B:          JSR SetUp0DA0GM4                    ;9A8B|----/----\----;20749A  ;
                      JSR GM04Load                        ;9A8E|----/----\----;209CA5  ;
                      STZ.W !InGameTimerHundreds          ;9A91|----/----\----;9C310F  ; Zero the timer 
                      JSR CODE_0085FA                     ;9A94|----/----\----;20FA85  ;
                      LDA.B #$03                          ;9A97|----/----\----;A903    ; \ Load title screen Layer 3 image 
                      STA.B !StripeImage                  ;9A99|----/----\----;8512    ;  | 
                      JSR LoadScrnImage                   ;9A9B|----/----\----;20D285  ; /  
                      JSR CODE_00ADA6                     ;9A9E|----/----\----;20A6AD  ;
                      JSR CODE_00922F                     ;9AA1|----/----\----;202F92  ;
                      JSL CODE_04F675                     ;9AA4|----/----\----;2275F604; todo: NOTE TO SELF: Check this routine out after making Bank4.asm 
                      LDA.B #$01                          ;9AA8|----/----\----;A901    ; \ Set special level to x01 
                      STA.W !IRQNMICommand                ;9AAA|----/----\----;8D9B0D  ; /  
                      LDA.B #$33                          ;9AAD|----/----\----;A933    ;
                      STA.B !Layer12Window                ;9AAF|----/----\----;8541    ;
                      LDA.B #$00                          ;9AB1|----/----\----;A900    ;
                      STA.B !Layer34Window                ;9AB3|----/----\----;8542    ;
                      LDA.B #$23                          ;9AB5|----/----\----;A923    ;
                      STA.B !OBJCWWindow                  ;9AB7|----/----\----;8543    ;
                      LDA.B #$12                          ;9AB9|----/----\----;A912    ;
                      STA.B !ColorAddition                ;9ABB|----/----\----;8544    ;
                      JSR CODE_009443                     ;9ABD|----/----\----;204394  ;
                      LDA.B #$10                          ;9AC0|----/----\----;A910    ;
                      STA.W !VariousPromptTimer           ;9AC2|----/----\----;8DF51D  ;
                      JMP Mode04Finish                    ;9AC5|----/----\----;4CF793  ;
                                                          ;                   ;        ;
                                                          ;                   ;        ;
DATA_009AC8:          db $01,$FF,$FF                      ;9AC8|----/----\----;        ;
                                                          ;                   ;        ;
CODE_009ACB:          PHY                                 ;9ACB|----/----\----;5A      ;
                      JSR SetUp0DA0GM4                    ;9ACC|----/----\----;20749A  ;
                      PLY                                 ;9ACF|----/----\----;7A      ;
CODE_009AD0:          INC.W !BlinkCursorTimer             ;9AD0|----/----\----;EE911B  ; Blinking cursor frame counter (file select, save prompt, etc) 
                      JSR CODE_009E82                     ;9AD3|----/----\----;20829E  ;
                      LDX.W !BlinkCursorPos               ;9AD6|----/----\----;AE921B  ;
                      LDA.B !byetudlrFrame                ;9AD9|----/----\----;A516    ;
                      AND.B #$90                          ;9ADB|----/----\----;2990    ;
                      BNE CODE_009AE3                     ;9ADD|----/----\----;D004    ;
                      LDA.B !axlr0000Frame                ;9ADF|----/----\----;A518    ;
                      BPL CODE_009AEA                     ;9AE1|----/----\----;1007    ;
CODE_009AE3:          LDA.B #$01                          ;9AE3|----/----\----;A901    ;
                      STA.W !SPCIO3                       ;9AE5|----/----\----;8DFC1D  ;
                      BRA CODE_009B11                     ;9AE8|----/----\----;8027    ;
                                                          ;                   ;        ;
CODE_009AEA:          PLA                                 ;9AEA|----/----\----;68      ;
                      PLA                                 ;9AEB|----/----\----;68      ;
                      LDA.B !byetudlrFrame                ;9AEC|----/----\----;A516    ;
                      AND.B #$20                          ;9AEE|----/----\----;2920    ;
                      LSR A                               ;9AF0|----/----\----;4A      ;
                      LSR A                               ;9AF1|----/----\----;4A      ;
                      LSR A                               ;9AF2|----/----\----;4A      ;
                      ORA.B !byetudlrFrame                ;9AF3|----/----\----;0516    ;
                      AND.B #$0C                          ;9AF5|----/----\----;290C    ;
                      BEQ Return009B16                    ;9AF7|----/----\----;F01D    ;
                      LDY.B #$06                          ;9AF9|----/----\----;A006    ;
                      STY.W !SPCIO3                       ;9AFB|----/----\----;8CFC1D  ;
                      STZ.W !BlinkCursorTimer             ;9AFE|----/----\----;9C911B  ;
                      LSR A                               ;9B01|----/----\----;4A      ;
                      LSR A                               ;9B02|----/----\----;4A      ;
                      TAY                                 ;9B03|----/----\----;A8      ;
                      TXA                                 ;9B04|----/----\----;8A      ;
                      ADC.W DATA_009AC8-1,Y               ;9B05|----/----\----;79C79A  ;
                      BPL +                               ;9B08|----/----\----;1003    ;
                      LDA.B !GraphicsCompPtr              ;9B0A|----/----\----;A58A    ;
                      DEC A                               ;9B0C|----/----\----;3A      ;
                    + CMP.B !GraphicsCompPtr              ;9B0D|----/----\----;C58A    ;
                      BCC +                               ;9B0F|----/----\----;9002    ;
CODE_009B11:          LDA.B #$00                          ;9B11|----/----\----;A900    ;
                    + STA.W !BlinkCursorPos               ;9B13|----/----\----;8D921B  ;
Return009B16:         RTS                                 ;9B16|----/----\----;60      ;
                                                          ;                   ;        ;
                                                          ;                   ;        ;
DATA_009B17:          db $04,$02,$01                      ;9B17|----/----\----;        ;
                                                          ;                   ;        ;
CODE_009B1A:          REP #$20                            ;9B1A|----/----\----;C220    ; Accum (16 bit) 
                      LDA.W #$39C9                        ;9B1C|----/----\----;A9C939  ;
                      LDY.B #$60                          ;9B1F|----/----\----;A060    ;
                      JSR CODE_009D30                     ;9B21|----/----\----;20309D  ;
                      LDA.B !byetudlrFrame                ;9B24|----/----\----;A516    ; Accum (8 bit) 
                      ORA.B !axlr0000Frame                ;9B26|----/----\----;0518    ;
                      AND.B #$40                          ;9B28|----/----\----;2940    ;
                      BEQ +                               ;9B2A|----/----\----;F00C    ;
CODE_009B2C:          DEC.W !GameMode                     ;9B2C|----/----\----;CE0001  ;
                      DEC.W !GameMode                     ;9B2F|----/----\----;CE0001  ;
                      JSR CODE_009B11                     ;9B32|----/----\----;20119B  ;
                      JMP CODE_009CB0                     ;9B35|----/----\----;4CB09C  ;
                                                          ;                   ;        ;
                    + LDY.B #$08                          ;9B38|----/----\----;A008    ;
                      JSR CODE_009AD0                     ;9B3A|----/----\----;20D09A  ;
                      CPX.B #$03                          ;9B3D|----/----\----;E003    ;
                      BNE CODE_009B6D                     ;9B3F|----/----\----;D02C    ;
                      LDY.B #$02                          ;9B41|----/----\----;A002    ;
CODE_009B43:          LSR.W !SaveFileDelete               ;9B43|----/----\----;4EDE0D  ;
                      BCC CODE_009B67                     ;9B46|----/----\----;901F    ;
                      PHY                                 ;9B48|----/----\----;5A      ;
                      LDA.W DATA_009CCB,Y                 ;9B49|----/----\----;B9CB9C  ;
                      XBA                                 ;9B4C|----/----\----;EB      ;
                      LDA.W DATA_009CCE,Y                 ;9B4D|----/----\----;B9CE9C  ;
                      REP #$10                            ;9B50|----/----\----;C210    ; Index (16 bit) 
                      TAX                                 ;9B52|----/----\----;AA      ;
                      LDY.W #$008F                        ;9B53|----/----\----;A08F00  ;
                      LDA.B #$00                          ;9B56|----/----\----;A900    ;
                    - STA.L !SaveData,X                   ;9B58|----/----\----;9F000070;
                      STA.L !SaveDataBackup,X             ;9B5C|----/----\----;9FAD0170;
                      INX                                 ;9B60|----/----\----;E8      ;
                      DEY                                 ;9B61|----/----\----;88      ;
                      BNE -                               ;9B62|----/----\----;D0F4    ;
                      SEP #$10                            ;9B64|----/----\----;E210    ; Index (8 bit) 
                      PLY                                 ;9B66|----/----\----;7A      ;
CODE_009B67:          DEY                                 ;9B67|----/----\----;88      ;
                      BPL CODE_009B43                     ;9B68|----/----\----;10D9    ;
                      JMP CODE_009C89                     ;9B6A|----/----\----;4C899C  ;
                                                          ;                   ;        ;
CODE_009B6D:          STX.W !BlinkCursorPos               ;9B6D|----/----\----;8E921B  ;
                      LDA.W DATA_009B17,X                 ;9B70|----/----\----;BD179B  ;
                      ORA.W !SaveFileDelete               ;9B73|----/----\----;0DDE0D  ;
                      STA.W !SaveFileDelete               ;9B76|----/----\----;8DDE0D  ;
                      STA.B !_5                           ;9B79|----/----\----;8505    ;
                      LDX.B #$00                          ;9B7B|----/----\----;A200    ;
                      JMP CODE_009D3C                     ;9B7D|----/----\----;4C3C9D  ;
                                                          ;                   ;        ;
CODE_009B80:          PHB                                 ;9B80|----/----\----;8B      ; Wrapper 
                      PHK                                 ;9B81|----/----\----;4B      ;
                      PLB                                 ;9B82|----/----\----;AB      ;
                      JSR CODE_009B88                     ;9B83|----/----\----;20889B  ;
                      PLB                                 ;9B86|----/----\----;AB      ;
                      RTL                                 ;9B87|----/----\----;6B      ;
                                                          ;                   ;        ;
CODE_009B88:          DEC A                               ;9B88|----/----\----;3A      ;
                      JSL ExecutePtr                      ;9B89|----/----\----;22DF8600;
                                                          ;                   ;        ;
                      dw CODE_009B91                      ;9B8D|----/----\----;919B    ;
                      dw CODE_009B9A                      ;9B8F|----/----\----;9A9B    ;
                                                          ;                   ;        ;
CODE_009B91:          LDY.B #$0C                          ;9B91|----/----\----;A00C    ;
                      JSR CODE_009D29                     ;9B93|----/----\----;20299D  ;
                      INC.W !ShowContinueEnd              ;9B96|----/----\----;EEC913  ;
                      RTS                                 ;9B99|----/----\----;60      ;
                                                          ;                   ;        ;
CODE_009B9A:          LDY.B #$00                          ;9B9A|----/----\----;A000    ;
                      JSR CODE_009AD0                     ;9B9C|----/----\----;20D09A  ;
                      TXA                                 ;9B9F|----/----\----;8A      ;
                      BNE +                               ;9BA0|----/----\----;D003    ;
                      JMP CODE_009E17                     ;9BA2|----/----\----;4C179E  ;
                                                          ;                   ;        ;
                    + JMP CODE_009C89                     ;9BA5|----/----\----;4C899C  ;
                                                          ;                   ;        ;
CODE_009BA8:          PHB                                 ;9BA8|----/----\----;8B      ; Wrapper 
                      PHK                                 ;9BA9|----/----\----;4B      ;
                      PLB                                 ;9BAA|----/----\----;AB      ;
                      JSR CODE_009BB0                     ;9BAB|----/----\----;20B09B  ;
                      PLB                                 ;9BAE|----/----\----;AB      ;
                      RTL                                 ;9BAF|----/----\----;6B      ;
                                                          ;                   ;        ;
CODE_009BB0:          LDY.B #$06                          ;9BB0|----/----\----;A006    ;
                      JSR CODE_009AD0                     ;9BB2|----/----\----;20D09A  ;
                      TXA                                 ;9BB5|----/----\----;8A      ;
                      BNE +                               ;9BB6|----/----\----;D00C    ;
                      STZ.W !SPCIO3                       ;9BB8|----/----\----;9CFC1D  ;
                      LDA.B #$05                          ;9BBB|----/----\----;A905    ;
                      STA.W !SPCIO0                       ;9BBD|----/----\----;8DF91D  ;
                      JSL CODE_009BC9                     ;9BC0|----/----\----;22C99B00;
                    + JSL CODE_009C13                     ;9BC4|----/----\----;22139C00;
                      RTS                                 ;9BC8|----/----\----;60      ;
                                                          ;                   ;        ;
CODE_009BC9:          PHB                                 ;9BC9|----/----\----;8B      ;
                      PHK                                 ;9BCA|----/----\----;4B      ;
                      PLB                                 ;9BCB|----/----\----;AB      ;
                      LDX.W !SaveFile                     ;9BCC|----/----\----;AE0A01  ;
                      LDA.W DATA_009CCB,X                 ;9BCF|----/----\----;BDCB9C  ;
                      XBA                                 ;9BD2|----/----\----;EB      ;
                      LDA.W DATA_009CCE,X                 ;9BD3|----/----\----;BDCE9C  ;
                      REP #$10                            ;9BD6|----/----\----;C210    ; Index (16 bit) 
                      TAX                                 ;9BD8|----/----\----;AA      ;
CODE_009BD9:          LDY.W #$0000                        ;9BD9|----/----\----;A00000  ;
                      STY.B !GraphicsCompPtr              ;9BDC|----/----\----;848A    ;
CODE_009BDE:          LDA.W !SaveDataBuffer,Y             ;9BDE|----/----\----;B9491F  ;
                      STA.L !SaveData,X                   ;9BE1|----/----\----;9F000070;
                      CLC                                 ;9BE5|----/----\----;18      ;
                      ADC.B !GraphicsCompPtr              ;9BE6|----/----\----;658A    ;
                      STA.B !GraphicsCompPtr              ;9BE8|----/----\----;858A    ;
                      BCC +                               ;9BEA|----/----\----;9002    ;
                      INC.B !GraphicsCompPtr+1            ;9BEC|----/----\----;E68B    ;
                    + INX                                 ;9BEE|----/----\----;E8      ;
                      INY                                 ;9BEF|----/----\----;C8      ;
                      CPY.W #$008D                        ;9BF0|----/----\----;C08D00  ;
                      BCC CODE_009BDE                     ;9BF3|----/----\----;90E9    ;
                      REP #$20                            ;9BF5|----/----\----;C220    ; Accum (16 bit) 
                      LDA.W #$5A5A                        ;9BF7|----/----\----;A95A5A  ;
                      SEC                                 ;9BFA|----/----\----;38      ;
                      SBC.B !GraphicsCompPtr              ;9BFB|----/----\----;E58A    ;
                      STA.L !SaveData,X                   ;9BFD|----/----\----;9F000070;
                      CPX.W #$01AD                        ;9C01|----/----\----;E0AD01  ;
                      BCS CODE_009C0F                     ;9C04|----/----\----;B009    ;
                      TXA                                 ;9C06|----/----\----;8A      ;
                      ADC.W #$0120                        ;9C07|----/----\----;692001  ;
                      TAX                                 ;9C0A|----/----\----;AA      ;
                      SEP #$20                            ;9C0B|----/----\----;E220    ; Accum (8 bit) 
                      BRA CODE_009BD9                     ;9C0D|----/----\----;80CA    ;
                                                          ;                   ;        ;
CODE_009C0F:          SEP #$30                            ;9C0F|----/----\----;E230    ; Index (8 bit) Accum (8 bit) 
                      PLB                                 ;9C11|----/----\----;AB      ;
                      RTL                                 ;9C12|----/----\----;6B      ;
                                                          ;                   ;        ;
CODE_009C13:          INC.W !OverworldPromptProcess       ;9C13|----/----\----;EE871B  ;
                      INC.W !MessageBoxExpand             ;9C16|----/----\----;EE881B  ;
                      LDY.B #$1B                          ;9C19|----/----\----;A01B    ;
                      JSR CODE_009D29                     ;9C1B|----/----\----;20299D  ;
                      RTL                                 ;9C1E|----/----\----;6B      ;
                                                          ;                   ;        ;
                                                          ;                   ;        ;
                      db $41                              ;9C1F|----/----\----;        ;
                                                          ;                   ;        ;
ItrCntrlrSqnc:        db $0F,$C1,$30,$00,$10,$42,$20,$41  ;9C20|----/----\----;        ;
                      db $70,$81,$11,$00,$80,$82,$0C,$00  ;9C28|----/----\----;        ;
                      db $30,$C1,$30,$41,$60,$C1,$10,$00  ;9C30|----/----\----;        ;
                      db $40,$01,$30,$E1,$01,$00,$60,$41  ;9C38|----/----\----;        ;
                      db $4E,$80,$10,$00,$30,$41,$58,$00  ;9C40|----/----\----;        ;
                      db $20,$60,$01,$00,$30,$60,$01,$00  ;9C48|----/----\----;        ;
                      db $30,$60,$01,$00,$30,$60,$01,$00  ;9C50|----/----\----;        ;
                      db $30,$60,$01,$00,$30,$41,$1A,$C1  ;9C58|----/----\----;        ;
                      db $30,$00,$30,$FF                  ;9C60|----/----\----;        ;
                                                          ;                   ;        ;
GAMEMODE_07:          JSR SetUp0DA0GM4                    ;9C64|----/----\----;20749A  ;
                      JSR CODE_009CBE                     ;9C67|----/----\----;20BE9C  ;
                      BNE CODE_009C9F                     ;9C6A|----/----\----;D033    ;
                      JSR NoButtons                       ;9C6C|----/----\----;202DF6  ; Zero controller RAM mirror 
                      LDX.W !TitleInputIndex              ;9C6F|----/----\----;AEF41D  ; (Unknown byte) -> X 
                      DEC.W !VariousPromptTimer           ;9C72|----/----\----;CEF51D  ; Decrement $1DF5 (unknown byte) 
                      BNE +                               ;9C75|----/----\----;D00B    ; if !=  0 branch forward 
                      LDA.W ItrCntrlrSqnc,X               ;9C77|----/----\----;BD209C  ; Load $00/9C20,$1DF4 
                      STA.W !VariousPromptTimer           ;9C7A|----/----\----;8DF51D  ; And store to $1DF5 
                      INX                                 ;9C7D|----/----\----;E8      ;
                      INX                                 ;9C7E|----/----\----;E8      ; $1DF4+=2 
                      STX.W !TitleInputIndex              ;9C7F|----/----\----;8EF41D  ;
                    + LDA.W ItrCntrlrSqnc-3,X             ;9C82|----/----\----;BD1D9C  ; With the +=2 above, this is effectively LDA $9C20,$1DF4 
                      CMP.B #$FF                          ;9C85|----/----\----;C9FF    ;
                      BNE +                               ;9C87|----/----\----;D006    ;
CODE_009C89:          LDY.B #$02                          ;9C89|----/----\----;A002    ; If = #$FF, switch to game mode #$02... 
CODE_009C8B:          STY.W !GameMode                     ;9C8B|----/----\----;8C0001  ;
                      RTS                                 ;9C8E|----/----\----;60      ; ...And finish 
                                                          ;                   ;        ;
                    + AND.B #$DF                          ;9C8F|----/----\----;29DF    ;
                      STA.B !byetudlrHold                 ;9C91|----/----\----;8515    ; Write to controller RAM byte 01 
                      CMP.W ItrCntrlrSqnc-3,X             ;9C93|----/----\----;DD1D9C  ;
                      BNE +                               ;9C96|----/----\----;D002    ;
                      AND.B #$9F                          ;9C98|----/----\----;299F    ;
                    + STA.B !byetudlrFrame                ;9C9A|----/----\----;8516    ; Write to byte 01, Just-pressed variant 
                      JMP CODE_00A1DA                     ;9C9C|----/----\----;4CDAA1  ; Jump to another section of this routine 
                                                          ;                   ;        ;
CODE_009C9F:          JSL !OAMResetRoutine                ;9C9F|----/----\----;2200807F; IIRC, this contains a lot of STZ instructions 
                      LDA.B #$04                          ;9CA3|----/----\----;A904    ;
                      STA.W !HW_TM                        ;9CA5|----/----\----;8D2C21  ; Zero something related to PPU ; Background and Object Enable
                      LDA.B #$13                          ;9CA8|----/----\----;A913    ;
                      STA.W !HW_TS                        ;9CAA|----/----\----;8D2D21  ; Sub Screen Designation
                      STZ.W !HDMAEnable                   ;9CAD|----/----\----;9C9F0D  ; Disable all HDMA 
CODE_009CB0:          LDA.B #$E9                          ;9CB0|----/----\----;A9E9    ;
                      STA.W !OverworldOverride            ;9CB2|----/----\----;8D0901  ; #$E9 -> Uknown RAM byte 
                      JSR CODE_WRITEOW                    ;9CB5|----/----\----;20069F  ;
                      JSR CODE_009D38                     ;9CB8|----/----\----;20389D  ; -> here 
                      JMP CODE_009417                     ;9CBB|----/----\----;4C1794  ; Increase the Game mode and return (at jump point) 
                                                          ;                   ;        ;
CODE_009CBE:          LDA.B !axlr0000Hold                 ;9CBE|----/----\----;A517    ;
                      AND.B #$C0                          ;9CC0|----/----\----;29C0    ;
                      BNE +                               ;9CC2|----/----\----;D006    ;
                      LDA.B !byetudlrHold                 ;9CC4|----/----\----;A515    ;
                      AND.B #$F0                          ;9CC6|----/----\----;29F0    ;
                      BNE +                               ;9CC8|----/----\----;D000    ;
                    + RTS                                 ;9CCA|----/----\----;60      ;
                                                          ;                   ;        ;
                                                          ;                   ;        ;
DATA_009CCB:          db $00,$00,$01                      ;9CCB|----/----\----;        ;
                                                          ;                   ;        ;
DATA_009CCE:          db $00,$8F,$1E                      ;9CCE|----/----\----;        ;
                                                          ;                   ;        ;
CODE_009CD1:          REP #$20                            ;9CD1|----/----\----;C220    ; 16 bit A ; Accum (16 bit) 
                      LDA.W #$7393                        ;9CD3|----/----\----;A99373  ;
                      LDY.B #$20                          ;9CD6|----/----\----;A020    ;
                      JSR CODE_009D30                     ;9CD8|----/----\----;20309D  ;
                      LDY.B #$02                          ;9CDB|----/----\----;A002    ;
                      JSR CODE_009ACB                     ;9CDD|----/----\----;20CB9A  ;
                      INC.W !GameMode                     ;9CE0|----/----\----;EE0001  ;
                      CPX.B #$03                          ;9CE3|----/----\----;E003    ;
                      BNE +                               ;9CE5|----/----\----;D008    ;
                      STZ.W !SaveFileDelete               ;9CE7|----/----\----;9CDE0D  ;
                      LDX.B #$00                          ;9CEA|----/----\----;A200    ;
                      JMP CODE_009D3A                     ;9CEC|----/----\----;4C3A9D  ;
                                                          ;                   ;        ;
                    + STX.W !SaveFile                     ;9CEF|----/----\----;8E0A01  ; Index (16 bit) Accum (8 bit) 
                      JSR CODE_009DB5                     ;9CF2|----/----\----;20B59D  ;
                      BNE CODE_009D22                     ;9CF5|----/----\----;D02B    ;
                      PHX                                 ;9CF7|----/----\----;DA      ;
                      STZ.W !OverworldOverride            ;9CF8|----/----\----;9C0901  ;
                      LDA.B #$8F                          ;9CFB|----/----\----;A98F    ;
                      STA.B !_0                           ;9CFD|----/----\----;8500    ;
                    - LDA.L !SaveData,X                   ;9CFF|----/----\----;BF000070;
                      PHX                                 ;9D03|----/----\----;DA      ;
                      TYX                                 ;9D04|----/----\----;BB      ;
                      STA.L !SaveData,X                   ;9D05|----/----\----;9F000070;
                      PLX                                 ;9D09|----/----\----;FA      ;
                      INX                                 ;9D0A|----/----\----;E8      ;
                      INY                                 ;9D0B|----/----\----;C8      ;
                      DEC.B !_0                           ;9D0C|----/----\----;C600    ;
                      BNE -                               ;9D0E|----/----\----;D0EF    ;
                      PLX                                 ;9D10|----/----\----;FA      ;
                      LDY.W #$0000                        ;9D11|----/----\----;A00000  ;
                    - LDA.L !SaveData,X                   ;9D14|----/----\----;BF000070;
                      STA.W !SaveDataBuffer,Y             ;9D18|----/----\----;99491F  ;
                      INX                                 ;9D1B|----/----\----;E8      ;
                      INY                                 ;9D1C|----/----\----;C8      ;
                      CPY.W #$008D                        ;9D1D|----/----\----;C08D00  ;
                      BCC -                               ;9D20|----/----\----;90F2    ;
CODE_009D22:          SEP #$10                            ;9D22|----/----\----;E210    ; Index (8 bit) 
                      LDY.B #$12                          ;9D24|----/----\----;A012    ; \ Draw 1 PLAYER GAME/2 PLAYER GAME text 
                      INC.W !GameMode                     ;9D26|----/----\----;EE0001  ;  |Increase Game Mode 
CODE_009D29:          STY.B !StripeImage                  ;9D29|----/----\----;8412    ; /  
                      LDX.B #$00                          ;9D2B|----/----\----;A200    ;
                      JMP CODE_009ED4                     ;9D2D|----/----\----;4CD49E  ;
                                                          ;                   ;        ;
CODE_009D30:          STA.W !BackgroundColor              ;9D30|----/----\----;8D0107  ; Store A in BG color 
                      STY.B !ColorSettings                ;9D33|----/----\----;8440    ; Store Y in CGADSUB 
                      SEP #$20                            ;9D35|----/----\----;E220    ; 8 bit A ; Accum (8 bit) 
                      RTS                                 ;9D37|----/----\----;60      ;
                                                          ;                   ;        ;
CODE_009D38:          LDX.B #$CB                          ;9D38|----/----\----;A2CB    ;
CODE_009D3A:          STZ.B !_5                           ;9D3A|----/----\----;6405    ;
CODE_009D3C:          REP #$10                            ;9D3C|----/----\----;C210    ; Index (16 bit) 
                      LDY.W #$0000                        ;9D3E|----/----\----;A00000  ;
                    - LDA.L DATA_05B6FE,X                 ;9D41|----/----\----;BFFEB605; X =  read index 
                      PHX                                 ;9D45|----/----\----;DA      ; Y = write index 
                      TYX                                 ;9D46|----/----\----;BB      ;
                      STA.L !DynamicStripeImage,X         ;9D47|----/----\----;9F7D837F; Layer 3-related table 
                      PLX                                 ;9D4B|----/----\----;FA      ;
                      INX                                 ;9D4C|----/----\----;E8      ;
                      INY                                 ;9D4D|----/----\----;C8      ;
                      CPY.W #$00CC                        ;9D4E|----/----\----;C0CC00  ; If not at end of loop, continue 
                      BNE -                               ;9D51|----/----\----;D0EE    ;
                      SEP #$10                            ;9D53|----/----\----;E210    ; Index (8 bit) 
                      LDA.B #$84                          ;9D55|----/----\----;A984    ;
                      STA.B !_0                           ;9D57|----/----\----;8500    ;
                      LDX.B #$02                          ;9D59|----/----\----;A202    ;
CODE_009D5B:          STX.B !_4                           ;9D5B|----/----\----;8604    ;
                      LSR.B !_5                           ;9D5D|----/----\----;4605    ;  $05 = $05 / 2 
                      BCS CODE_009DA6                     ;9D5F|----/----\----;B045    ;
                      JSR CODE_009DB5                     ;9D61|----/----\----;20B59D  ;
                      BNE CODE_009DA6                     ;9D64|----/----\----;D040    ;
                      LDA.L !SaveDataChecksum,X           ;9D66|----/----\----;BF8C0070;
                      SEP #$10                            ;9D6A|----/----\----;E210    ; Index (8 bit) 
                      CMP.B #$60                          ;9D6C|----/----\----;C960    ;
                      BCC CODE_009D76                     ;9D6E|----/----\----;9006    ;
                      LDY.B #$87                          ;9D70|----/----\----;A087    ;
                      LDA.B #$88                          ;9D72|----/----\----;A988    ;
                      BRA +                               ;9D74|----/----\----;8004    ;
                                                          ;                   ;        ;
CODE_009D76:          JSR HexToDec                        ;9D76|----/----\----;204590  ;
                      TXY                                 ;9D79|----/----\----;9B      ;
                    + LDX.B !_0                           ;9D7A|----/----\----;A600    ;
                      STA.L !DynamicStripeImage+4,X       ;9D7C|----/----\----;9F81837F;
                      TYA                                 ;9D80|----/----\----;98      ;
                      BNE +                               ;9D81|----/----\----;D002    ;
                      LDY.B #$FC                          ;9D83|----/----\----;A0FC    ;
                    + TYA                                 ;9D85|----/----\----;98      ;
                      STA.L !DynamicStripeImage+2,X       ;9D86|----/----\----;9F7F837F;
                      LDA.B #$38                          ;9D8A|----/----\----;A938    ;
                      STA.L !DynamicStripeImage+3,X       ;9D8C|----/----\----;9F80837F;
                      STA.L !DynamicStripeImage+5,X       ;9D90|----/----\----;9F82837F;
                      REP #$20                            ;9D94|----/----\----;C220    ; Accum (16 bit) 
                      LDY.B #$03                          ;9D96|----/----\----;A003    ;
                    - LDA.W #$38FC                        ;9D98|----/----\----;A9FC38  ;
                      STA.L !DynamicStripeImage+6,X       ;9D9B|----/----\----;9F83837F;
                      INX                                 ;9D9F|----/----\----;E8      ;
                      INX                                 ;9DA0|----/----\----;E8      ;
                      DEY                                 ;9DA1|----/----\----;88      ;
                      BNE -                               ;9DA2|----/----\----;D0F4    ;
                      SEP #$20                            ;9DA4|----/----\----;E220    ; Accum (8 bit) 
CODE_009DA6:          SEP #$10                            ;9DA6|----/----\----;E210    ; Index (8 bit) 
                      LDA.B !_0                           ;9DA8|----/----\----;A500    ;
                      SEC                                 ;9DAA|----/----\----;38      ;
                      SBC.B #$24                          ;9DAB|----/----\----;E924    ;
                      STA.B !_0                           ;9DAD|----/----\----;8500    ;
                      LDX.B !_4                           ;9DAF|----/----\----;A604    ;
                      DEX                                 ;9DB1|----/----\----;CA      ;
                      BPL CODE_009D5B                     ;9DB2|----/----\----;10A7    ;
                      RTS                                 ;9DB4|----/----\----;60      ;
                                                          ;                   ;        ;
CODE_009DB5:          LDA.W DATA_009CCB,X                 ;9DB5|----/----\----;BDCB9C  ;
                      XBA                                 ;9DB8|----/----\----;EB      ;
                      LDA.W DATA_009CCE,X                 ;9DB9|----/----\----;BDCE9C  ;
                      REP #$30                            ;9DBC|----/----\----;C230    ; Index (16 bit) Accum (16 bit) 
                      TAX                                 ;9DBE|----/----\----;AA      ;
                      CLC                                 ;9DBF|----/----\----;18      ;
                      ADC.W #$01AD                        ;9DC0|----/----\----;69AD01  ;
                      TAY                                 ;9DC3|----/----\----;A8      ;
CODE_009DC4:          PHX                                 ;9DC4|----/----\----;DA      ;
                      PHY                                 ;9DC5|----/----\----;5A      ;
                      LDA.L !SaveDataChecksum+1,X         ;9DC6|----/----\----;BF8D0070;
                      STA.B !GraphicsCompPtr              ;9DCA|----/----\----;858A    ;
                      SEP #$20                            ;9DCC|----/----\----;E220    ; Accum (8 bit) 
                      LDY.W #$008D                        ;9DCE|----/----\----;A08D00  ;
CODE_009DD1:          LDA.L !SaveData,X                   ;9DD1|----/----\----;BF000070;
                      CLC                                 ;9DD5|----/----\----;18      ;
                      ADC.B !GraphicsCompPtr              ;9DD6|----/----\----;658A    ;
                      STA.B !GraphicsCompPtr              ;9DD8|----/----\----;858A    ;
                      BCC +                               ;9DDA|----/----\----;9002    ;
                      INC.B !GraphicsCompPtr+1            ;9DDC|----/----\----;E68B    ;
                    + INX                                 ;9DDE|----/----\----;E8      ;
                      DEY                                 ;9DDF|----/----\----;88      ;
                      BNE CODE_009DD1                     ;9DE0|----/----\----;D0EF    ;
                      REP #$20                            ;9DE2|----/----\----;C220    ; Accum (16 bit) 
                      PLY                                 ;9DE4|----/----\----;7A      ;
                      PLX                                 ;9DE5|----/----\----;FA      ;
                      LDA.B !GraphicsCompPtr              ;9DE6|----/----\----;A58A    ;
                      CMP.W #$5A5A                        ;9DE8|----/----\----;C95A5A  ;
                      BEQ CODE_009DF7                     ;9DEB|----/----\----;F00A    ;
                      CPX.W #$01AC                        ;9DED|----/----\----;E0AC01  ;
                      BCS CODE_009DF7                     ;9DF0|----/----\----;B005    ;
                      PHX                                 ;9DF2|----/----\----;DA      ;
                      TYX                                 ;9DF3|----/----\----;BB      ;
                      PLY                                 ;9DF4|----/----\----;7A      ;
                      BRA CODE_009DC4                     ;9DF5|----/----\----;80CD    ;
                                                          ;                   ;        ;
CODE_009DF7:          SEP #$20                            ;9DF7|----/----\----;E220    ; Accum (8 bit) 
                      RTS                                 ;9DF9|----/----\----;60      ;
                                                          ;                   ;        ;
CODE_009DFA:          LDA.B !byetudlrFrame                ;9DFA|----/----\----;A516    ; Index (8 bit) 
                      ORA.B !axlr0000Frame                ;9DFC|----/----\----;0518    ;
                      AND.B #$40                          ;9DFE|----/----\----;2940    ;
                      BEQ +                               ;9E00|----/----\----;F006    ;
                      DEC.W !GameMode                     ;9E02|----/----\----;CE0001  ;
                      JMP CODE_009B2C                     ;9E05|----/----\----;4C2C9B  ;
                                                          ;                   ;        ;
                    + LDY.B #$04                          ;9E08|----/----\----;A004    ;
                      JSR CODE_009ACB                     ;9E0A|----/----\----;20CB9A  ;
                      STX.W !IsTwoPlayerGame              ;9E0D|----/----\----;8EB20D  ;
                      JSR CODE_00A195                     ;9E10|----/----\----;2095A1  ;
                      JSL CODE_04DAAD                     ;9E13|----/----\----;22ADDA04;
CODE_009E17:          LDA.B #$80                          ;9E17|----/----\----;A980    ;
                      STA.W !SPCIO2                       ;9E19|----/----\----;8DFB1D  ;
                      LDA.B #$FF                          ;9E1C|----/----\----;A9FF    ;
                      STA.W !SavedPlayerLives+1           ;9E1E|----/----\----;8DB50D  ;
                      LDX.W !IsTwoPlayerGame              ;9E21|----/----\----;AEB20D  ;
                      LDA.B #$04                          ;9E24|----/----\----;A904    ;
                    - STA.W !SavedPlayerLives,X           ;9E26|----/----\----;9DB40D  ;
                      DEX                                 ;9E29|----/----\----;CA      ;
                      BPL -                               ;9E2A|----/----\----;10FA    ;
                      STA.W !PlayerLives                  ;9E2C|----/----\----;8DBE0D  ;
                      STZ.W !PlayerCoins                  ;9E2F|----/----\----;9CBF0D  ;
                      STZ.W !CarryYoshiThruLvls           ;9E32|----/----\----;9CC10D  ;
                      STZ.B !Powerup                      ;9E35|----/----\----;6419    ;
                      STZ.W !PlayerItembox                ;9E37|----/----\----;9CC20D  ;
                      STZ.W !ShowContinueEnd              ;9E3A|----/----\----;9CC913  ;
                      REP #$20                            ;9E3D|----/----\----;C220    ; Accum (16 bit) 
                      STZ.W !SavedPlayerCoins             ;9E3F|----/----\----;9CB60D  ;
                      STZ.W !SavedPlayerPowerup           ;9E42|----/----\----;9CB80D  ;
                      STZ.W !SavedPlayerYoshi             ;9E45|----/----\----;9CBA0D  ;
                      STZ.W !PlayerItembox                ;9E48|----/----\----;9CC20D  ;
                      STZ.W !PlayerBonusStars             ;9E4B|----/----\----;9C480F  ;
                      STZ.W !PlayerScore                  ;9E4E|----/----\----;9C340F  ;
                      STZ.W !PlayerScore+3                ;9E51|----/----\----;9C370F  ;
                      SEP #$20                            ;9E54|----/----\----;E220    ; Accum (8 bit) 
                      STZ.W !PlayerScore+2                ;9E56|----/----\----;9C360F  ;
                      STZ.W !PlayerScore+5                ;9E59|----/----\----;9C390F  ;
                      STZ.W !OWLevelExitMode              ;9E5C|----/----\----;9CD50D  ;
                      STZ.W !PlayerTurnLvl                ;9E5F|----/----\----;9CB30D  ;
CODE_009E62:          JSR KeepModeActive                  ;9E62|----/----\----;20299F  ;
                      LDY.B #$0B                          ;9E65|----/----\----;A00B    ;
                      JMP CODE_009C8B                     ;9E67|----/----\----;4C8B9C  ;
                                                          ;                   ;        ;
                                                          ;                   ;        ;
DATA_009E6A:          db $02,$00,$04,$00,$02,$00,$02,$00  ;9E6A|----/----\----;        ;
                      db $04,$00                          ;9E72|----/----\----;        ;
                                                          ;                   ;        ;
DATA_009E74:          db $CB,$51,$E8,$51,$08,$52,$C4,$51  ;9E74|----/----\----;        ;
                      db $E5,$51                          ;9E7C|----/----\----;        ;
                                                          ;                   ;        ;
DATA_009E7E:          db $01,$02,$04,$08                  ;9E7E|----/----\----;        ;
                                                          ;                   ;        ;
CODE_009E82:          LDX.W !BlinkCursorPos               ;9E82|----/----\----;AE921B  ;
                      LDA.W DATA_009E7E,X                 ;9E85|----/----\----;BD7E9E  ;
                      TAX                                 ;9E88|----/----\----;AA      ;
                      LDA.W !BlinkCursorTimer             ;9E89|----/----\----;AD911B  ;
                      EOR.B #$1F                          ;9E8C|----/----\----;491F    ;
                      AND.B #$18                          ;9E8E|----/----\----;2918    ;
                      BNE +                               ;9E90|----/----\----;D002    ;
                      LDX.B #$00                          ;9E92|----/----\----;A200    ;
                    + STX.B !_0                           ;9E94|----/----\----;8600    ;
                      LDA.L !DynStripeImgSize             ;9E96|----/----\----;AF7B837F;
                      TAX                                 ;9E9A|----/----\----;AA      ;
                      REP #$20                            ;9E9B|----/----\----;C220    ; Accum (16 bit) 
                      LDA.W DATA_009E6A,Y                 ;9E9D|----/----\----;B96A9E  ;
                      STA.B !GraphicsCompPtr              ;9EA0|----/----\----;858A    ;
                      STA.B !_2                           ;9EA2|----/----\----;8502    ;
                      LDA.W DATA_009E74,Y                 ;9EA4|----/----\----;B9749E  ;
CODE_009EA7:          XBA                                 ;9EA7|----/----\----;EB      ;
                      STA.L !DynamicStripeImage,X         ;9EA8|----/----\----;9F7D837F;
                      XBA                                 ;9EAC|----/----\----;EB      ;
                      CLC                                 ;9EAD|----/----\----;18      ;
                      ADC.W #$0040                        ;9EAE|----/----\----;694000  ;
                      PHA                                 ;9EB1|----/----\----;48      ;
                      LDA.W #$0100                        ;9EB2|----/----\----;A90001  ;
                      STA.L !DynamicStripeImage+2,X       ;9EB5|----/----\----;9F7F837F;
                      LDA.W #$38FC                        ;9EB9|----/----\----;A9FC38  ;
                      LSR.B !_0                           ;9EBC|----/----\----;4600    ;
                      BCC +                               ;9EBE|----/----\----;9003    ;
                      LDA.W #$3D2E                        ;9EC0|----/----\----;A92E3D  ;
                    + STA.L !DynamicStripeImage+4,X       ;9EC3|----/----\----;9F81837F;
                      PLA                                 ;9EC7|----/----\----;68      ;
                      INX                                 ;9EC8|----/----\----;E8      ;
                      INX                                 ;9EC9|----/----\----;E8      ;
                      INX                                 ;9ECA|----/----\----;E8      ;
                      INX                                 ;9ECB|----/----\----;E8      ;
                      INX                                 ;9ECC|----/----\----;E8      ;
                      INX                                 ;9ECD|----/----\----;E8      ;
                      DEC.B !_2                           ;9ECE|----/----\----;C602    ;
                      BNE CODE_009EA7                     ;9ED0|----/----\----;D0D5    ;
                      SEP #$20                            ;9ED2|----/----\----;E220    ; Accum (8 bit) 
CODE_009ED4:          TXA                                 ;9ED4|----/----\----;8A      ;
                      STA.L !DynStripeImgSize             ;9ED5|----/----\----;8F7B837F;
                      LDA.B #$FF                          ;9ED9|----/----\----;A9FF    ;
                      STA.L !DynamicStripeImage,X         ;9EDB|----/----\----;9F7D837F;
                      RTS                                 ;9EDF|----/----\----;60      ;
                                                          ;                   ;        ;
                                                          ;                   ;        ;
TBL_009EE0:           db $28                              ;9EE0|----/----\----;        ;
                                                          ;                   ;        ;
DATA_009EE1:          db $03,$4D,$01,$52,$01,$53,$01,$5B  ;9EE1|----/----\----;        ;
                      db $08,$5C,$02,$57,$04,$30,$01      ;9EE9|----/----\----;        ;
                                                          ;                   ;        ;
TBL_009EF0:           db $01,$01,$02,$00,$02,$00,$68,$00  ;9EF0|----/----\----;        ;
                      db $78,$00,$68,$00,$78,$00,$06,$00  ;9EF8|----/----\----;        ;
                      db $07,$00,$06,$00,$07,$00          ;9F00|----/----\----;        ;
                                                          ;                   ;        ;
CODE_WRITEOW:         LDX.B #$8D                          ;9F06|----/----\----;A28D    ; Index (8 bit) 
                    - STZ.W !SaveDataBuffer-1,X           ;9F08|----/----\----;9E481F  ;
                      DEX                                 ;9F0B|----/----\----;CA      ;
                      BNE -                               ;9F0C|----/----\----;D0FA    ;
                      LDX.B #$0E                          ;9F0E|----/----\----;A20E    ;
                    - LDY.W TBL_009EE0,X                  ;9F10|----/----\----;BCE09E  ; \ 
                      LDA.W DATA_009EE1,X                 ;9F13|----/----\----;BDE19E  ; |Write overworld settings to OW L1 table 
                      STA.W !SaveDataBuffer,Y             ;9F16|----/----\----;99491F  ; / 
                      DEX                                 ;9F19|----/----\----;CA      ;
                      DEX                                 ;9F1A|----/----\----;CA      ;
                      BPL -                               ;9F1B|----/----\----;10F3    ;
                      LDX.B #$15                          ;9F1D|----/----\----;A215    ;
                    - LDA.W TBL_009EF0,X                  ;9F1F|----/----\----;BDF09E  ;
                      STA.W !SaveDataBufferSubmap,X       ;9F22|----/----\----;9DB81F  ; <- This probably means that the table above ends at 1FB7 
                      DEX                                 ;9F25|----/----\----;CA      ;
                      BPL -                               ;9F26|----/----\----;10F7    ;
                      RTS                                 ;9F28|----/----\----;60      ;
                                                          ;                   ;        ;
KeepModeActive:       LDA.B #$01                          ;9F29|----/----\----;A901    ;
CODE_009F2B:          STA.W !KeepModeActive               ;9F2B|----/----\----;8DB10D  ;
                      RTS                                 ;9F2E|----/----\----;60      ;
                                                          ;                   ;        ;
                                                          ;                   ;        ;
DATA_009F2F:          db $01,$FF                          ;9F2F|----/----\----;        ;
                                                          ;                   ;        ;
DATA_009F31:          db $F0,$10                          ;9F31|----/----\----;        ;
                                                          ;                   ;        ;
DATA_009F33:          db $0F,$00,$00,$F0                  ;9F33|----/----\----;        ;
                                                          ;                   ;        ;
TmpFade:              DEC.W !KeepModeActive               ;9F37|----/----\----;CEB10D  ; \If 0DB1 = 0 Then Exit Ssub 
                      BPL Return009F6E                    ;9F3A|----/----\----;1032    ; /Decrease it either way. 
                      JSR KeepModeActive                  ;9F3C|----/----\----;20299F  ; #$01 -> $0DB1 
                      LDY.W !MosaicDirection              ;9F3F|----/----\----;ACAF0D  ;
                      LDA.W !MosaicSize                   ;9F42|----/----\----;ADB00D  ; \  
                      CLC                                 ;9F45|----/----\----;18      ;  |Increase $0DB0 (mosaic size) by $9F31,y 
                      ADC.W DATA_009F31,Y                 ;9F46|----/----\----;79319F  ;  | 
                      STA.W !MosaicSize                   ;9F49|----/----\----;8DB00D  ; /  
CODE_009F4C:          LDA.W !Brightness                   ;9F4C|----/----\----;ADAE0D  ; Load Brightness byte from RAM 
                      CLC                                 ;9F4F|----/----\----;18      ; \Add $9F2F,Y 
                      ADC.W DATA_009F2F,Y                 ;9F50|----/----\----;792F9F  ; / 
                      STA.W !Brightness                   ;9F53|----/----\----;8DAE0D  ; Store back to brightness RAM byte 
                      CMP.W DATA_009F33,Y                 ;9F56|----/----\----;D9339F  ;
                      BNE +                               ;9F59|----/----\----;D00B    ;
GM__Mosaic:           INC.W !GameMode                     ;9F5B|----/----\----;EE0001  ; Game Mode += 1 
                      LDA.W !MosaicDirection              ;9F5E|----/----\----;ADAF0D  ; \  
                      EOR.B #$01                          ;9F61|----/----\----;4901    ;  |$0DAF = $0DAF XOR 1 
                      STA.W !MosaicDirection              ;9F63|----/----\----;8DAF0D  ; /  
                    + LDA.B #$03                          ;9F66|----/----\----;A903    ; \  
                      ORA.W !MosaicSize                   ;9F68|----/----\----;0DB00D  ;  |Set mosaic size to $0DB0, enable mosaic on Layer 1 and 2. 
                      STA.W !HW_MOSAIC                    ;9F6B|----/----\----;8D0621  ; /  ; Mosaic Size and BG Enable
Return009F6E:         RTS                                 ;9F6E|----/----\----;60      ; I think we're done here 
                                                          ;                   ;        ;
CODE_009F6F:          DEC.W !KeepModeActive               ;9F6F|----/----\----;CEB10D  ; Decrement something...  Seems like it might be a timing counter ; Index (8 bit) 
                      BPL Return009F6E                    ;9F72|----/----\----;10FA    ; If positive, return from subroutine. 
                      JSR KeepModeActive                  ;9F74|----/----\----;20299F  ; Remain in this mode 
CODE_009F77:          LDY.W !MosaicDirection              ;9F77|----/----\----;ACAF0D  ; $0DAF -> Y, 
                      BRA CODE_009F4C                     ;9F7A|----/----\----;80D0    ; BRA to the fade control routine 
                                                          ;                   ;        ;
CODE_009F7C:          DEC.W !KeepModeActive               ;9F7C|----/----\----;CEB10D  ;
                      BPL Return009F6E                    ;9F7F|----/----\----;10ED    ;
                      LDA.B #$08                          ;9F81|----/----\----;A908    ;
                      JSR CODE_009F2B                     ;9F83|----/----\----;202B9F  ;
                      BRA CODE_009F77                     ;9F86|----/----\----;80EF    ;
                                                          ;                   ;        ;
                                                          ;                   ;        ;
DATA_009F88:          db $01,$02,$C0,$01,$80,$81,$01,$02  ;9F88|----/----\----;        ;
                      db $C0,$01,$02,$81,$01,$02,$80,$01  ;9F90|----/----\----;        ;
                      db $02,$81,$01,$02,$81,$01,$02,$C0  ;9F98|----/----\----;        ;
                      db $01,$02,$C0,$01,$02,$81,$01,$02  ;9FA0|----/----\----;        ;
                      db $80,$01,$02,$80,$01,$02,$80,$01  ;9FA8|----/----\----;        ;
                      db $02,$81,$01,$02,$81,$01,$02,$80  ;9FB0|----/----\----;        ;
                                                          ;                   ;        ;
CODE_009FB8:          LDA.W !ObjectTileset                ;9FB8|----/----\----;AD3119  ; \  
                      ASL A                               ;9FBB|----/----\----;0A      ;  |Get (Tileset*3), store in $00 
                      CLC                                 ;9FBC|----/----\----;18      ;  | 
                      ADC.W !ObjectTileset                ;9FBD|----/----\----;6D3119  ;  | 
                      STA.B !_0                           ;9FC0|----/----\----;8500    ; /  
                      LDA.W !Layer3Setting                ;9FC2|----/----\----;ADE31B  ;
                      BEQ CODE_00A012                     ;9FC5|----/----\----;F04B    ;
                      DEC A                               ;9FC7|----/----\----;3A      ;
                      CLC                                 ;9FC8|----/----\----;18      ;
                      ADC.B !_0                           ;9FC9|----/----\----;6500    ;
                      TAX                                 ;9FCB|----/----\----;AA      ;
                      LDA.W DATA_009F88,X                 ;9FCC|----/----\----;BD889F  ;
                      BMI CODE_009FEA                     ;9FCF|----/----\----;3019    ;
                      STA.W !Layer3TideSetting            ;9FD1|----/----\----;8D0314  ;
                      LSR A                               ;9FD4|----/----\----;4A      ;
                      PHP                                 ;9FD5|----/----\----;08      ;
                      JSR CODE_00A045                     ;9FD6|----/----\----;2045A0  ;
                      LDA.B #$70                          ;9FD9|----/----\----;A970    ;
                      PLP                                 ;9FDB|----/----\----;28      ;
                      BEQ +                               ;9FDC|----/----\----;F002    ;
                      LDA.B #$40                          ;9FDE|----/----\----;A940    ;
                    + STA.B !Layer3YPos                   ;9FE0|----/----\----;8524    ;
                      STZ.B !Layer3YPos+1                 ;9FE2|----/----\----;6425    ;
                      JSL CODE_05BC72                     ;9FE4|----/----\----;2272BC05;
                      BRA CODE_00A01B                     ;9FE8|----/----\----;8031    ;
                                                          ;                   ;        ;
CODE_009FEA:          ASL A                               ;9FEA|----/----\----;0A      ;
                      BMI CODE_00A012                     ;9FEB|----/----\----;3025    ;
                      BEQ CODE_00A007                     ;9FED|----/----\----;F018    ;
                      LDA.W !ObjectTileset                ;9FEF|----/----\----;AD3119  ;
                      CMP.B #$01                          ;9FF2|----/----\----;C901    ;
                      BEQ CODE_009FFA                     ;9FF4|----/----\----;F004    ;
                      CMP.B #$03                          ;9FF6|----/----\----;C903    ;
                      BNE CODE_00A01F                     ;9FF8|----/----\----;D025    ;
CODE_009FFA:          REP #$20                            ;9FFA|----/----\----;C220    ; Accum (16 bit) 
                      LDA.B !Layer1XPos                   ;9FFC|----/----\----;A51A    ;
                      LSR A                               ;9FFE|----/----\----;4A      ;
                      STA.B !Layer3XPos                   ;9FFF|----/----\----;8522    ;
                      SEP #$20                            ;A001|----/----\----;E220    ; Accum (8 bit) 
                      LDA.B #$C0                          ;A003|----/----\----;A9C0    ;
                      BRA CODE_00A017                     ;A005|----/----\----;8010    ;
                                                          ;                   ;        ;
CODE_00A007:          LDX.B #$07                          ;A007|----/----\----;A207    ;
                    - LDA.W DATA_00B66C,X                 ;A009|----/----\----;BD6CB6  ;
                      STA.W !MainPalette+$18,X            ;A00C|----/----\----;9D1B07  ;
                      DEX                                 ;A00F|----/----\----;CA      ;
                      BPL -                               ;A010|----/----\----;10F7    ;
CODE_00A012:          INC.W !Layer3ScrollType             ;A012|----/----\----;EED513  ;
                      LDA.B #$D0                          ;A015|----/----\----;A9D0    ;
CODE_00A017:          STA.B !Layer3YPos                   ;A017|----/----\----;8524    ;
                      STZ.B !Layer3YPos+1                 ;A019|----/----\----;6425    ;
CODE_00A01B:          LDA.B #$04                          ;A01B|----/----\----;A904    ;
                      TRB.B !ColorSettings                ;A01D|----/----\----;1440    ;
CODE_00A01F:          LDA.W !Layer3Setting                ;A01F|----/----\----;ADE31B  ;
                      BEQ +                               ;A022|----/----\----;F020    ;
                      DEC A                               ;A024|----/----\----;3A      ;
                      CLC                                 ;A025|----/----\----;18      ;
                      ADC.B !_0                           ;A026|----/----\----;6500    ;
                      STA.B !_1                           ;A028|----/----\----;8501    ;
                      ASL A                               ;A02A|----/----\----;0A      ;
                      CLC                                 ;A02B|----/----\----;18      ;
                      ADC.B !_1                           ;A02C|----/----\----;6501    ;
                      TAX                                 ;A02E|----/----\----;AA      ;
                      LDA.L Layer3Ptr,X                   ;A02F|----/----\----;BF009005;
                      STA.B !_0                           ;A033|----/----\----;8500    ;
                      LDA.L Layer3Ptr+1,X                 ;A035|----/----\----;BF019005;
                      STA.B !_1                           ;A039|----/----\----;8501    ;
                      LDA.L Layer3Ptr+2,X                 ;A03B|----/----\----;BF029005;
                      STA.B !_2                           ;A03F|----/----\----;8502    ;
                      JSR CODE_00871E                     ;A041|----/----\----;201E87  ;
                    + RTS                                 ;A044|----/----\----;60      ;
                                                          ;                   ;        ;
CODE_00A045:          REP #$30                            ;A045|----/----\----;C230    ; Index (16 bit) Accum (16 bit) 
                      LDX.W #$0100                        ;A047|----/----\----;A20001  ;
CODE_00A04A:          LDY.W #$0058                        ;A04A|----/----\----;A05800  ;
                      LDA.W #$0000                        ;A04D|----/----\----;A90000  ;
                    - STA.L !OWLayer1VramBuffer-$100,X    ;A050|----/----\----;9F00E37E;
                      INX                                 ;A054|----/----\----;E8      ;
                      INX                                 ;A055|----/----\----;E8      ;
                      DEY                                 ;A056|----/----\----;88      ;
                      BNE -                               ;A057|----/----\----;D0F7    ;
                      TXA                                 ;A059|----/----\----;8A      ;
                      CLC                                 ;A05A|----/----\----;18      ;
                      ADC.W #$0100                        ;A05B|----/----\----;690001  ;
                      TAX                                 ;A05E|----/----\----;AA      ;
                      CPX.W #$1B00                        ;A05F|----/----\----;E0001B  ;
                      BCC CODE_00A04A                     ;A062|----/----\----;90E6    ;
                      SEP #$30                            ;A064|----/----\----;E230    ; Index (8 bit) Accum (8 bit) 
                      LDA.B #$80                          ;A066|----/----\----;A980    ;
                      TSB.B !ScreenMode                   ;A068|----/----\----;045B    ;
                      RTS                                 ;A06A|----/----\----;60      ;
                                                          ;                   ;        ;
                                                          ;                   ;        ;
DATA_00A06B:          db $00,$00,$EF,$FF,$EF,$FF,$EF,$FF  ;A06B|----/----\----;        ;
                      db $F0,$00,$F0,$00,$F0,$00          ;A073|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00A079:          db $00,$00,$D8,$FF,$80,$00,$28,$01  ;A079|----/----\----;        ;
                      db $D8,$FF,$80,$00,$28,$01          ;A081|----/----\----;        ;
                                                          ;                   ;        ;
CODE_00A087:          JSR TurnOffIO                       ;A087|----/----\----;207D93  ;
                      LDA.W !EnteringStarWarp             ;A08A|----/----\----;AD9C1B  ;
                      BEQ +                               ;A08D|----/----\----;F004    ;
                      JSL CODE_04853B                     ;A08F|----/----\----;223B8504;
                    + JSR Clear_1A_13D3                   ;A093|----/----\----;20A6A1  ;
                      LDA.W !OverworldOverride            ;A096|----/----\----;AD0901  ;
                      BEQ +                               ;A099|----/----\----;F015    ;
                      LDA.B #$B0                          ;A09B|----/----\----;A9B0    ;
                      STA.W !VariousPromptTimer           ;A09D|----/----\----;8DF51D  ;
                      STZ.W !OWPlayerSubmap               ;A0A0|----/----\----;9C111F  ;
                      LDA.B #$F0                          ;A0A3|----/----\----;A9F0    ;
                      STA.W !MosaicSize                   ;A0A5|----/----\----;8DB00D  ;
                      LDA.B #$10                          ;A0A8|----/----\----;A910    ;
                      STA.W !GameMode                     ;A0AA|----/----\----;8D0001  ;
                      JMP Mode04Finish                    ;A0AD|----/----\----;4CF793  ;
                                                          ;                   ;        ;
                    + JSR CODE_0085FA                     ;A0B0|----/----\----;20FA85  ;
                      JSR UploadMusicBank1                ;A0B3|----/----\----;200E81  ;
                      JSR SetUpScreen                     ;A0B6|----/----\----;20798A  ;
                      STZ.W !MusicBackup                  ;A0B9|----/----\----;9CDA0D  ;
                      LDX.W !PlayerTurnLvl                ;A0BC|----/----\----;AEB30D  ;
                      LDA.W !PlayerLives                  ;A0BF|----/----\----;ADBE0D  ;
                      BPL +                               ;A0C2|----/----\----;1003    ;
                      INC.W !OverworldPromptProcess       ;A0C4|----/----\----;EE871B  ;
                    + STA.W !SavedPlayerLives,X           ;A0C7|----/----\----;9DB40D  ;
                      LDA.B !Powerup                      ;A0CA|----/----\----;A519    ;
                      STA.W !SavedPlayerPowerup,X         ;A0CC|----/----\----;9DB80D  ;
                      LDA.W !PlayerCoins                  ;A0CF|----/----\----;ADBF0D  ;
                      STA.W !SavedPlayerCoins,X           ;A0D2|----/----\----;9DB60D  ;
                      LDA.W !CarryYoshiThruLvls           ;A0D5|----/----\----;ADC10D  ;
                      BEQ +                               ;A0D8|----/----\----;F003    ;
                      LDA.W !YoshiColor                   ;A0DA|----/----\----;ADC713  ;
                    + STA.W !SavedPlayerYoshi,X           ;A0DD|----/----\----;9DBA0D  ;
                      LDA.W !PlayerItembox                ;A0E0|----/----\----;ADC20D  ;
                      STA.W !SavedPlayerItembox,X         ;A0E3|----/----\----;9DBC0D  ;
                      LDA.B #$03                          ;A0E6|----/----\----;A903    ;
                      STA.B !ColorAddition                ;A0E8|----/----\----;8544    ;
                      LDA.B #$30                          ;A0EA|----/----\----;A930    ;
                      LDX.B #$15                          ;A0EC|----/----\----;A215    ;
                      LDY.W !ShowContinueEnd              ;A0EE|----/----\----;ACC913  ;
                      BEQ CODE_00A11B                     ;A0F1|----/----\----;F028    ;
                      JSR CODE_00A195                     ;A0F3|----/----\----;2095A1  ;
                      LDA.W !ExitsCompleted               ;A0F6|----/----\----;AD2E1F  ;
                      BNE +                               ;A0F9|----/----\----;D006    ;
                      JSR CODE_009C89                     ;A0FB|----/----\----;20899C  ;
                      JMP CODE_0093F4                     ;A0FE|----/----\----;4CF493  ;
                                                          ;                   ;        ;
                    + JSL CODE_04DAAD                     ;A101|----/----\----;22ADDA04;
                      REP #$20                            ;A105|----/----\----;C220    ; Accum (16 bit) 
                      LDA.W #$318C                        ;A107|----/----\----;A98C31  ;
                      STA.W !BackgroundColor              ;A10A|----/----\----;8D0107  ;
                      SEP #$20                            ;A10D|----/----\----;E220    ; Accum (8 bit) 
                      LDA.B #$30                          ;A10F|----/----\----;A930    ;
                      STA.B !OBJCWWindow                  ;A111|----/----\----;8543    ;
                      LDA.B #$20                          ;A113|----/----\----;A920    ;
                      STA.B !ColorAddition                ;A115|----/----\----;8544    ;
                      LDA.B #$B3                          ;A117|----/----\----;A9B3    ;
                      LDX.B #$17                          ;A119|----/----\----;A217    ;
CODE_00A11B:          LDY.B #$02                          ;A11B|----/----\----;A002    ;
                      JSR ScreenSettings                  ;A11D|----/----\----;20FD93  ;
                      STX.W !HW_TMW                       ;A120|----/----\----;8E2E21  ; Window Mask Designation for Main Screen
                      STY.W !HW_TSW                       ;A123|----/----\----;8C2F21  ; Window Mask Designation for Sub Screen
                      JSL CODE_04DC09                     ;A126|----/----\----;2209DC04;
                      LDX.W !PlayerTurnLvl                ;A12A|----/----\----;AEB30D  ;
                      LDA.W !OWPlayerSubmap,X             ;A12D|----/----\----;BD111F  ;
                      ASL A                               ;A130|----/----\----;0A      ;
                      TAX                                 ;A131|----/----\----;AA      ;
                      REP #$20                            ;A132|----/----\----;C220    ; Accum (16 bit) 
                      LDA.W DATA_00A06B,X                 ;A134|----/----\----;BD6BA0  ;
                      STA.B !Layer1XPos                   ;A137|----/----\----;851A    ;
                      STA.B !Layer2XPos                   ;A139|----/----\----;851E    ;
                      LDA.W DATA_00A079,X                 ;A13B|----/----\----;BD79A0  ;
                      STA.B !Layer1YPos                   ;A13E|----/----\----;851C    ;
                      STA.B !Layer2YPos                   ;A140|----/----\----;8520    ;
                      SEP #$20                            ;A142|----/----\----;E220    ; Accum (8 bit) 
                      JSR UploadSpriteGFX                 ;A144|----/----\----;20DAA9  ;
                      LDY.B #$14                          ;A147|----/----\----;A014    ;
                      JSL CODE_00BA28                     ;A149|----/----\----;2228BA00;
                      JSR CODE_00AD25                     ;A14D|----/----\----;2025AD  ;
                      JSR CODE_00922F                     ;A150|----/----\----;202F92  ;
                      LDA.B #$06                          ;A153|----/----\----;A906    ; \ Load overworld border 
                      STA.B !StripeImage                  ;A155|----/----\----;8512    ;  | 
                      JSR LoadScrnImage                   ;A157|----/----\----;20D285  ; /  
                      JSL CODE_05DBF2                     ;A15A|----/----\----;22F2DB05;
                      JSR LoadScrnImage                   ;A15E|----/----\----;20D285  ;
                      JSL CODE_048D91                     ;A161|----/----\----;22918D04;
                      JSL CODE_04D6E9                     ;A165|----/----\----;22E9D604;
                      LDA.B #$F0                          ;A169|----/----\----;A9F0    ;
                      STA.B !OAMAddress                   ;A16B|----/----\----;853F    ;
                      JSR CODE_008494                     ;A16D|----/----\----;209484  ;
                      JSR LoadScrnImage                   ;A170|----/----\----;20D285  ;
                      STZ.W !OverworldProcess             ;A173|----/----\----;9CD913  ;
                      JSR KeepModeActive                  ;A176|----/----\----;20299F  ;
                      LDA.B #$02                          ;A179|----/----\----;A902    ;
                      STA.W !IRQNMICommand                ;A17B|----/----\----;8D9B0D  ;
                      REP #$10                            ;A17E|----/----\----;C210    ; Index (16 bit) 
                      LDX.W #$01BE                        ;A180|----/----\----;A2BE01  ;
                      LDA.B #$FF                          ;A183|----/----\----;A9FF    ;
                    - STZ.W !WindowTable,X                ;A185|----/----\----;9EA004  ;
                      STA.W !WindowTable+1,X              ;A188|----/----\----;9DA104  ;
                      DEX                                 ;A18B|----/----\----;CA      ;
                      DEX                                 ;A18C|----/----\----;CA      ;
                      BPL -                               ;A18D|----/----\----;10F6    ;
                      JSR CODE_0092A0                     ;A18F|----/----\----;20A092  ;
                      JMP CODE_0093F4                     ;A192|----/----\----;4CF493  ;
                                                          ;                   ;        ;
CODE_00A195:          REP #$10                            ;A195|----/----\----;C210    ; Index (16 bit) 
                      LDX.W #$008C                        ;A197|----/----\----;A28C00  ;
                    - LDA.W !SaveDataBuffer,X             ;A19A|----/----\----;BD491F  ;
                      STA.W !OWLevelTileSettings,X        ;A19D|----/----\----;9DA21E  ;
                      DEX                                 ;A1A0|----/----\----;CA      ;
                      BPL -                               ;A1A1|----/----\----;10F7    ;
                      SEP #$10                            ;A1A3|----/----\----;E210    ; Index (8 bit) 
                      RTS                                 ;A1A5|----/----\----;60      ;
                                                          ;                   ;        ;
Clear_1A_13D3:        REP #$10                            ;A1A6|----/----\----;C210    ; 16 bit X,Y ; Index (16 bit) 
                      SEP #$20                            ;A1A8|----/----\----;E220    ; 8 bit A ; Accum (8 bit) 
                      LDX.W #$00BD                        ;A1AA|----/----\----;A2BD00  ; \  
                    - STZ.B !Layer1XPos,X                 ;A1AD|----/----\----;741A    ;  |Clear RAM addresses $1A-$D7 
                      DEX                                 ;A1AF|----/----\----;CA      ;  | 
                      BPL -                               ;A1B0|----/----\----;10FB    ; /  
                      LDX.W #$07CE                        ;A1B2|----/----\----;A2CE07  ; \  
                    - STZ.W !PauseTimer,X                 ;A1B5|----/----\----;9ED313  ;  |Clear RAM addresses $13D3-$1BA1 
                      DEX                                 ;A1B8|----/----\----;CA      ;  | 
                      BPL -                               ;A1B9|----/----\----;10FA    ; /  
                      SEP #$10                            ;A1BB|----/----\----;E210    ; 16 bit X,Y ; Index (8 bit) 
                      RTS                                 ;A1BD|----/----\----;60      ; Return 
                                                          ;                   ;        ;
CODE_00A1BE:          JSR SetUp0DA0GM4                    ;A1BE|----/----\----;20749A  ;
                      INC.B !EffFrame                     ;A1C1|----/----\----;E614    ; Increase alternate frame counter 
                      JSL !OAMResetRoutine                ;A1C3|----/----\----;2200807F;
                      JSL GameMode_0E_Prim                ;A1C7|----/----\----;22418204; (Bank 4.asm) 
                      JMP CODE_008494                     ;A1CB|----/----\----;4C9484  ;
                                                          ;                   ;        ;
                                                          ;                   ;        ;
GrndShakeDispYLo:     db $FE,$00,$02,$00                  ;A1CE|----/----\----;        ;
                                                          ;                   ;        ;
GrndShakeDispYHi:     db $FF,$00,$00,$00                  ;A1D2|----/----\----;        ;
                                                          ;                   ;        ;
                      db $12,$22,$12,$02                  ;A1D6|----/----\----;        ;
                                                          ;                   ;        ;
CODE_00A1DA:          LDA.W !MessageBoxTrigger            ;A1DA|----/----\----;AD2614  ;
                      BEQ +                               ;A1DD|----/----\----;F005    ;
                      JSL CODE_05B10C                     ;A1DF|----/----\----;220CB105;
                      RTS                                 ;A1E3|----/----\----;60      ;
                                                          ;                   ;        ;
                    + LDA.W !BonusGameActivate            ;A1E4|----/----\----;AD2514  ;
                      BEQ +                               ;A1E7|----/----\----;F017    ;
                      LDA.W !BonusFinishTimer             ;A1E9|----/----\----;ADAB14  ;
                      BEQ +                               ;A1EC|----/----\----;F012    ;
                      CMP.B #$40                          ;A1EE|----/----\----;C940    ;
                      BCS +                               ;A1F0|----/----\----;B00E    ;
                      JSR NoButtons                       ;A1F2|----/----\----;202DF6  ;
                      CMP.B #$1C                          ;A1F5|----/----\----;C91C    ;
                      BCS +                               ;A1F7|----/----\----;B007    ;
                      JSR SetMarioPeaceImg                ;A1F9|----/----\----;2031CA  ;
                      LDA.B #$0D                          ;A1FC|----/----\----;A90D    ;
                      STA.B !PlayerAnimation              ;A1FE|----/----\----;8571    ;
                    + ORA.B !PlayerAnimation              ;A200|----/----\----;0571    ;
                      ORA.W !EndLevelTimer                ;A202|----/----\----;0D9314  ;
                      BEQ +                               ;A205|----/----\----;F00A    ;
                      LDA.B #$04                          ;A207|----/----\----;A904    ;
                      TRB.B !byetudlrHold                 ;A209|----/----\----;1415    ;
                      LDA.B #$40                          ;A20B|----/----\----;A940    ;
                      TRB.B !byetudlrFrame                ;A20D|----/----\----;1416    ;
                      TRB.B !axlr0000Frame                ;A20F|----/----\----;1418    ;
                    + LDA.W !PauseTimer                   ;A211|----/----\----;ADD313  ;
                      BEQ CODE_00A21B                     ;A214|----/----\----;F005    ;
                      DEC.W !PauseTimer                   ;A216|----/----\----;CED313  ;
                      BRA CODE_00A242                     ;A219|----/----\----;8027    ;
                                                          ;                   ;        ;
CODE_00A21B:          LDA.B !byetudlrFrame                ;A21B|----/----\----;A516    ;
                      AND.B #$10                          ;A21D|----/----\----;2910    ;
                      BEQ CODE_00A242                     ;A21F|----/----\----;F021    ;
                      LDA.W !EndLevelTimer                ;A221|----/----\----;AD9314  ;
                      BNE CODE_00A242                     ;A224|----/----\----;D01C    ;
                      LDA.B !PlayerAnimation              ;A226|----/----\----;A571    ;
                      CMP.B #$09                          ;A228|----/----\----;C909    ;
                      BCS CODE_00A242                     ;A22A|----/----\----;B016    ;
                      LDA.B #$3C                          ;A22C|----/----\----;A93C    ;
                      STA.W !PauseTimer                   ;A22E|----/----\----;8DD313  ;
                      LDY.B #$12                          ;A231|----/----\----;A012    ;
                      LDA.W !PauseFlag                    ;A233|----/----\----;ADD413  ;
                      EOR.B #$01                          ;A236|----/----\----;4901    ;
                      STA.W !PauseFlag                    ;A238|----/----\----;8DD413  ;
                      BEQ +                               ;A23B|----/----\----;F002    ;
                      LDY.B #$11                          ;A23D|----/----\----;A011    ;
                    + STY.W !SPCIO0                       ;A23F|----/----\----;8CF91D  ;
CODE_00A242:          LDA.W !PauseFlag                    ;A242|----/----\----;ADD413  ;
                      BEQ CODE_00A28A                     ;A245|----/----\----;F043    ;
                      BRA CODE_00A25B                     ;A247|----/----\----;8012    ;
                                                          ;                   ;        ;
                      BIT.W !byetudlrP2Frame              ;A249|----/----\----;2CA70D  ; \ Unreachable 
                      BVS ADDR_00A259                     ;A24C|----/----\----;700B    ;  | Debug: Slow motion 
                      LDA.W !byetudlrP2Hold               ;A24E|----/----\----;ADA30D  ;  | 
                      BPL CODE_00A25B                     ;A251|----/----\----;1008    ;  | 
                      LDA.B !TrueFrame                    ;A253|----/----\----;A513    ;  | 
                      AND.B #$0F                          ;A255|----/----\----;290F    ;  | 
                      BNE CODE_00A25B                     ;A257|----/----\----;D002    ;  | 
ADDR_00A259:          BRA CODE_00A28A                     ;A259|----/----\----;802F    ; / 
                                                          ;                   ;        ;
CODE_00A25B:          LDA.B !byetudlrHold                 ;A25B|----/----\----;A515    ;
                      AND.B #$20                          ;A25D|----/----\----;2920    ;
                      BEQ Return00A289                    ;A25F|----/----\----;F028    ;
                      LDY.W !TranslevelNo                 ;A261|----/----\----;ACBF13  ;
                      LDA.W !OWLevelTileSettings,Y        ;A264|----/----\----;B9A21E  ;
                      BPL Return00A289                    ;A267|----/----\----;1020    ;
                      LDA.W !OWLevelExitMode              ;A269|----/----\----;ADD50D  ;
                      BEQ CODE_00A270                     ;A26C|----/----\----;F002    ;
                      BPL Return00A289                    ;A26E|----/----\----;1019    ;
CODE_00A270:          LDA.B #$80                          ;A270|----/----\----;A980    ;
                      BRA CODE_00A27E                     ;A272|----/----\----;800A    ;
                                                          ;                   ;        ;
                      LDA.B #$01                          ;A274|----/----\----;A901    ; \ Unreachable 
                      BIT.B !byetudlrHold                 ;A276|----/----\----;2415    ;  | Debug: Beat level with Start+Select 
                      BPL +                               ;A278|----/----\----;1001    ;  | 
                      INC A                               ;A27A|----/----\----;1A      ; / 
                    + STA.W !MidwayFlag                   ;A27B|----/----\----;8DCE13  ;
CODE_00A27E:          STA.W !OWLevelExitMode              ;A27E|----/----\----;8DD50D  ;
                      INC.W !CreditsScreenNumber          ;A281|----/----\----;EEE91D  ;
                      LDA.B #$0B                          ;A284|----/----\----;A90B    ;
                      STA.W !GameMode                     ;A286|----/----\----;8D0001  ;
Return00A289:         RTS                                 ;A289|----/----\----;60      ;
                                                          ;                   ;        ;
CODE_00A28A:          LDA.W !IRQNMICommand                ;A28A|----/----\----;AD9B0D  ;
                      BPL +                               ;A28D|----/----\----;1006    ;
                      JSR CODE_00987D                     ;A28F|----/----\----;207D98  ;
                      JMP CODE_00A2A9                     ;A292|----/----\----;4CA9A2  ;
                                                          ;                   ;        ;
                    + JSL !OAMResetRoutine                ;A295|----/----\----;2200807F;
                      JSL CODE_00F6DB                     ;A299|----/----\----;22DBF600;
                      JSL CODE_05BC00                     ;A29D|----/----\----;2200BC05;
                      JSL CODE_0586F1                     ;A2A1|----/----\----;22F18605;
                      JSL CODE_05BB39                     ;A2A5|----/----\----;2239BB05;
CODE_00A2A9:          LDA.B !Layer1YPos                   ;A2A9|----/----\----;A51C    ;
                      PHA                                 ;A2AB|----/----\----;48      ;
                      LDA.B !Layer1YPos+1                 ;A2AC|----/----\----;A51D    ;
                      PHA                                 ;A2AE|----/----\----;48      ;
                      STZ.W !ScreenShakeYOffset           ;A2AF|----/----\----;9C8818  ; \ Reset amout to shift level 
                      STZ.W !ScreenShakeYOffset+1         ;A2B2|----/----\----;9C8918  ; / 
                      LDA.W !ScreenShakeTimer             ;A2B5|----/----\----;AD8718  ; \ If shake ground timer is set 
                      BEQ +                               ;A2B8|----/----\----;F01B    ;  | 
                      DEC.W !ScreenShakeTimer             ;A2BA|----/----\----;CE8718  ;  | Decrement timer 
                      AND.B #$03                          ;A2BD|----/----\----;2903    ;  | 
                      TAY                                 ;A2BF|----/----\----;A8      ;  | 
                      LDA.W GrndShakeDispYLo,Y            ;A2C0|----/----\----;B9CEA1  ;  | 
                      STA.W !ScreenShakeYOffset           ;A2C3|----/----\----;8D8818  ;  | $1888-$1889 = Amount to shift level 
                      CLC                                 ;A2C6|----/----\----;18      ;  | 
                      ADC.B !Layer1YPos                   ;A2C7|----/----\----;651C    ;  | 
                      STA.B !Layer1YPos                   ;A2C9|----/----\----;851C    ;  | Adjust screen boundry accordingly 
                      LDA.W GrndShakeDispYHi,Y            ;A2CB|----/----\----;B9D2A1  ;  | 
                      STA.W !ScreenShakeYOffset+1         ;A2CE|----/----\----;8D8918  ;  | 
                      ADC.B !Layer1YPos+1                 ;A2D1|----/----\----;651D    ;  | 
                      STA.B !Layer1YPos+1                 ;A2D3|----/----\----;851D    ; / 
                    + JSR CODE_008E1A                     ;A2D5|----/----\----;201A8E  ;
                      JSL CODE_00E2BD                     ;A2D8|----/----\----;22BDE200;
                      JSR CODE_00A2F3                     ;A2DC|----/----\----;20F3A2  ;
                      JSR CODE_00C47E                     ;A2DF|----/----\----;207EC4  ;
                      JSL CODE_01808C                     ;A2E2|----/----\----;228C8001;
                      JSL CODE_028AB1                     ;A2E6|----/----\----;22B18A02;
                      PLA                                 ;A2EA|----/----\----;68      ;
                      STA.B !Layer1YPos+1                 ;A2EB|----/----\----;851D    ;
                      PLA                                 ;A2ED|----/----\----;68      ;
                      STA.B !Layer1YPos                   ;A2EE|----/----\----;851C    ;
                      JMP CODE_008494                     ;A2F0|----/----\----;4C9484  ;
                                                          ;                   ;        ;
CODE_00A2F3:          REP #$20                            ;A2F3|----/----\----;C220    ; Accum (16 bit) 
                      LDA.B !PlayerXPosNext               ;A2F5|----/----\----;A594    ;
                      STA.B !PlayerXPosNow                ;A2F7|----/----\----;85D1    ;
                      LDA.B !PlayerYPosNext               ;A2F9|----/----\----;A596    ;
                      STA.B !PlayerYPosNow                ;A2FB|----/----\----;85D3    ;
                      SEP #$20                            ;A2FD|----/----\----;E220    ; Accum (8 bit) 
                      RTS                                 ;A2FF|----/----\----;60      ;
                                                          ;                   ;        ;
MarioGFXDMA:          REP #$20                            ;A300|----/----\----;C220    ; 16 bit A ; Accum (16 bit) 
                      LDX.B #$04                          ;A302|----/----\----;A204    ; We're using DMA channel 2 
                      LDY.W !PlayerGfxTileCount           ;A304|----/----\----;AC840D  ;
                      BEQ +                               ;A307|----/----\----;F01F    ;
                      LDY.B #$86                          ;A309|----/----\----;A086    ; \ Set Address for CG-RAM Write to x86 
                      STY.W !HW_CGADD                     ;A30B|----/----\----;8C2121  ; / ; Address for CG-RAM Write
                      LDA.W #$2200                        ;A30E|----/----\----;A90022  ;
                      STA.W !HW_DMAPARAM+$20              ;A311|----/----\----;8D2043  ; Parameters for DMA Transfer
                      LDA.W !PlayerPalletePtr             ;A314|----/----\----;AD820D  ; \ Get location of palette from $0D82-$0D83 
                      STA.W !HW_DMAADDR+$20               ;A317|----/----\----;8D2243  ; / ; A Address (Low Byte)
                      LDY.B #$00                          ;A31A|----/----\----;A000    ; \ Palette is stored in bank x00 
                      STY.W !HW_DMAADDR+$22               ;A31C|----/----\----;8C2443  ; / ; A Address Bank
                      LDA.W #$0014                        ;A31F|----/----\----;A91400  ; \ x14 bytes will be transferred 
                      STA.W !HW_DMACNT+$20                ;A322|----/----\----;8D2543  ; / ; Number Bytes to Transfer (Low Byte) (DMA)
                      STX.W !HW_MDMAEN                    ;A325|----/----\----;8E0B42  ; Transfer the colors ; Regular DMA Channel Enable
                    + LDY.B #$80                          ;A328|----/----\----;A080    ; \ Set VRAM Address Increment Value to x80 
                      STY.W !HW_VMAINC                    ;A32A|----/----\----;8C1521  ; / ; VRAM Address Increment Value
                      LDA.W #$1801                        ;A32D|----/----\----;A90118  ;
                      STA.W !HW_DMAPARAM+$20              ;A330|----/----\----;8D2043  ; Parameters for DMA Transfer
                      LDA.W #$67F0                        ;A333|----/----\----;A9F067  ;
                      STA.W !HW_VMADD                     ;A336|----/----\----;8D1621  ; Address for VRAM Read/Write (Low Byte)
                      LDA.W !DynGfxTile7FPtr              ;A339|----/----\----;AD990D  ;
                      STA.W !HW_DMAADDR+$20               ;A33C|----/----\----;8D2243  ; A Address (Low Byte)
                      LDY.B #$7E                          ;A33F|----/----\----;A07E    ; \ Set bank to x7E 
                      STY.W !HW_DMAADDR+$22               ;A341|----/----\----;8C2443  ; / ; A Address Bank
                      LDA.W #$0020                        ;A344|----/----\----;A92000  ; \ x20 bytes will be transferred 
                      STA.W !HW_DMACNT+$20                ;A347|----/----\----;8D2543  ; / ; Number Bytes to Transfer (Low Byte) (DMA)
                      STX.W !HW_MDMAEN                    ;A34A|----/----\----;8E0B42  ; Transfer ; Regular DMA Channel Enable
                      LDA.W #$6000                        ;A34D|----/----\----;A90060  ; \ Set Address for VRAM Read/Write to x6000 
                      STA.W !HW_VMADD                     ;A350|----/----\----;8D1621  ; / ; Address for VRAM Read/Write (Low Byte)
                      LDX.B #$00                          ;A353|----/----\----;A200    ;
                    - LDA.W !DynGfxTilePtr,X              ;A355|----/----\----;BD850D  ; \ Get address of graphics to copy 
                      STA.W !HW_DMAADDR+$20               ;A358|----/----\----;8D2243  ; / ; A Address (Low Byte)
                      LDA.W #$0040                        ;A35B|----/----\----;A94000  ; \ x40 bytes will be transferred 
                      STA.W !HW_DMACNT+$20                ;A35E|----/----\----;8D2543  ; / ; Number Bytes to Transfer (Low Byte) (DMA)
                      LDY.B #$04                          ;A361|----/----\----;A004    ; \ Transfer 
                      STY.W !HW_MDMAEN                    ;A363|----/----\----;8C0B42  ; / ; Regular DMA Channel Enable
                      INX                                 ;A366|----/----\----;E8      ; \ Move to next address 
                      INX                                 ;A367|----/----\----;E8      ; /  
                      CPX.W !PlayerGfxTileCount           ;A368|----/----\----;EC840D  ; \ Repeat last segment while X<$0D84 
                      BCC -                               ;A36B|----/----\----;90E8    ; /  
                      LDA.W #$6100                        ;A36D|----/----\----;A90061  ; \ Set Address for VRAM Read/Write to x6100 
                      STA.W !HW_VMADD                     ;A370|----/----\----;8D1621  ; / ; Address for VRAM Read/Write (Low Byte)
                      LDX.B #$00                          ;A373|----/----\----;A200    ;
                    - LDA.W !DynGfxTilePtr+$0A,X          ;A375|----/----\----;BD8F0D  ; \ Get address of graphics to copy 
                      STA.W !HW_DMAADDR+$20               ;A378|----/----\----;8D2243  ; / ; A Address (Low Byte)
                      LDA.W #$0040                        ;A37B|----/----\----;A94000  ; \ x40 bytes will be transferred 
                      STA.W !HW_DMACNT+$20                ;A37E|----/----\----;8D2543  ; / ; Number Bytes to Transfer (Low Byte) (DMA)
                      LDY.B #$04                          ;A381|----/----\----;A004    ; \ Transfer 
                      STY.W !HW_MDMAEN                    ;A383|----/----\----;8C0B42  ; / ; Regular DMA Channel Enable
                      INX                                 ;A386|----/----\----;E8      ; \ Move to next address 
                      INX                                 ;A387|----/----\----;E8      ; /  
                      CPX.W !PlayerGfxTileCount           ;A388|----/----\----;EC840D  ; \ Repeat last segment while X<$0D84 
                      BCC -                               ;A38B|----/----\----;90E8    ; /  
                      SEP #$20                            ;A38D|----/----\----;E220    ; 8 bit A ; Accum (8 bit) 
                      RTS                                 ;A38F|----/----\----;60      ; Return 
                                                          ;                   ;        ;
CODE_00A390:          REP #$20                            ;A390|----/----\----;C220    ; Accum (16 bit) 
                      LDY.B #$80                          ;A392|----/----\----;A080    ;
                      STY.W !HW_VMAINC                    ;A394|----/----\----;8C1521  ; VRAM Address Increment Value
                      LDA.W #$1801                        ;A397|----/----\----;A90118  ;
                      STA.W !HW_DMAPARAM+$20              ;A39A|----/----\----;8D2043  ; Parameters for DMA Transfer
                      LDY.B #$7E                          ;A39D|----/----\----;A07E    ;
                      STY.W !HW_DMAADDR+$22               ;A39F|----/----\----;8C2443  ; A Address Bank
                      LDX.B #$04                          ;A3A2|----/----\----;A204    ;
                      LDA.W !Gfx33DestAddrC               ;A3A4|----/----\----;AD800D  ;
                      BEQ +                               ;A3A7|----/----\----;F012    ;
                      STA.W !HW_VMADD                     ;A3A9|----/----\----;8D1621  ; Address for VRAM Read/Write (Low Byte)
                      LDA.W !Gfx33SrcAddrC                ;A3AC|----/----\----;AD7A0D  ;
                      STA.W !HW_DMAADDR+$20               ;A3AF|----/----\----;8D2243  ; A Address (Low Byte)
                      LDA.W #$0080                        ;A3B2|----/----\----;A98000  ;
                      STA.W !HW_DMACNT+$20                ;A3B5|----/----\----;8D2543  ; Number Bytes to Transfer (Low Byte) (DMA)
                      STX.W !HW_MDMAEN                    ;A3B8|----/----\----;8E0B42  ; Regular DMA Channel Enable
                    + LDA.W !Gfx33DestAddrB               ;A3BB|----/----\----;AD7E0D  ;
                      BEQ +                               ;A3BE|----/----\----;F012    ;
                      STA.W !HW_VMADD                     ;A3C0|----/----\----;8D1621  ; Address for VRAM Read/Write (Low Byte)
                      LDA.W !Gfx33SrcAddrB                ;A3C3|----/----\----;AD780D  ;
                      STA.W !HW_DMAADDR+$20               ;A3C6|----/----\----;8D2243  ; A Address (Low Byte)
                      LDA.W #$0080                        ;A3C9|----/----\----;A98000  ;
                      STA.W !HW_DMACNT+$20                ;A3CC|----/----\----;8D2543  ; Number Bytes to Transfer (Low Byte) (DMA)
                      STX.W !HW_MDMAEN                    ;A3CF|----/----\----;8E0B42  ; Regular DMA Channel Enable
                    + LDA.W !Gfx33DestAddrA               ;A3D2|----/----\----;AD7C0D  ;
                      BEQ CODE_00A418                     ;A3D5|----/----\----;F041    ;
                      STA.W !HW_VMADD                     ;A3D7|----/----\----;8D1621  ; Address for VRAM Read/Write (Low Byte)
                      CMP.W #$0800                        ;A3DA|----/----\----;C90008  ;
                      BEQ CODE_00A3F0                     ;A3DD|----/----\----;F011    ;
                      LDA.W !Gfx33SrcAddrA                ;A3DF|----/----\----;AD760D  ;
                      STA.W !HW_DMAADDR+$20               ;A3E2|----/----\----;8D2243  ; A Address (Low Byte)
                      LDA.W #$0080                        ;A3E5|----/----\----;A98000  ;
                      STA.W !HW_DMACNT+$20                ;A3E8|----/----\----;8D2543  ; Number Bytes to Transfer (Low Byte) (DMA)
                      STX.W !HW_MDMAEN                    ;A3EB|----/----\----;8E0B42  ; Regular DMA Channel Enable
                      BRA CODE_00A418                     ;A3EE|----/----\----;8028    ;
                                                          ;                   ;        ;
CODE_00A3F0:          LDA.W !Gfx33SrcAddrA                ;A3F0|----/----\----;AD760D  ;
                      STA.W !HW_DMAADDR+$20               ;A3F3|----/----\----;8D2243  ; A Address (Low Byte)
                      LDA.W #$0040                        ;A3F6|----/----\----;A94000  ;
                      STA.W !HW_DMACNT+$20                ;A3F9|----/----\----;8D2543  ; Number Bytes to Transfer (Low Byte) (DMA)
                      STX.W !HW_MDMAEN                    ;A3FC|----/----\----;8E0B42  ; Regular DMA Channel Enable
                      LDA.W #$0900                        ;A3FF|----/----\----;A90009  ;
                      STA.W !HW_VMADD                     ;A402|----/----\----;8D1621  ; Address for VRAM Read/Write (Low Byte)
                      LDA.W !Gfx33SrcAddrA                ;A405|----/----\----;AD760D  ;
                      CLC                                 ;A408|----/----\----;18      ;
                      ADC.W #$0040                        ;A409|----/----\----;694000  ;
                      STA.W !HW_DMAADDR+$20               ;A40C|----/----\----;8D2243  ; A Address (Low Byte)
                      LDA.W #$0040                        ;A40F|----/----\----;A94000  ;
                      STA.W !HW_DMACNT+$20                ;A412|----/----\----;8D2543  ; Number Bytes to Transfer (Low Byte) (DMA)
                      STX.W !HW_MDMAEN                    ;A415|----/----\----;8E0B42  ; Regular DMA Channel Enable
CODE_00A418:          SEP #$20                            ;A418|----/----\----;E220    ; Accum (8 bit) 
                      LDA.B #$64                          ;A41A|----/----\----;A964    ;
CODE_00A41C:          STZ.B !_0                           ;A41C|----/----\----;6400    ;
CODE_00A41E:          STA.W !HW_CGADD                     ;A41E|----/----\----;8D2121  ; Address for CG-RAM Write
                      LDA.B !EffFrame                     ;A421|----/----\----;A514    ;
                      AND.B #$1C                          ;A423|----/----\----;291C    ;
                      LSR A                               ;A425|----/----\----;4A      ;
                      ADC.B !_0                           ;A426|----/----\----;6500    ;
                      TAY                                 ;A428|----/----\----;A8      ;
                      LDA.W MorePalettes,Y                ;A429|----/----\----;B90CB6  ;
                      STA.W !HW_CGDATA                    ;A42C|----/----\----;8D2221  ; Data for CG-RAM Write
                      LDA.W DATA_00B60D,Y                 ;A42F|----/----\----;B90DB6  ;
                      STA.W !HW_CGDATA                    ;A432|----/----\----;8D2221  ; Data for CG-RAM Write
                      RTS                                 ;A435|----/----\----;60      ;
                                                          ;                   ;        ;
CODE_00A436:          LDA.W !MarioStartFlag               ;A436|----/----\----;AD3519  ;
                      BEQ +                               ;A439|----/----\----;F043    ;
                      STZ.W !MarioStartFlag               ;A43B|----/----\----;9C3519  ;
                      REP #$20                            ;A43E|----/----\----;C220    ; 16 bit A ; Accum (16 bit) 
                      LDY.B #$80                          ;A440|----/----\----;A080    ;
                      STY.W !HW_VMAINC                    ;A442|----/----\----;8C1521  ; VRAM Address Increment Value
                      LDA.W #$64A0                        ;A445|----/----\----;A9A064  ;
                      STA.W !HW_VMADD                     ;A448|----/----\----;8D1621  ; Address for VRAM Read/Write (Low Byte)
                      LDA.W #$1801                        ;A44B|----/----\----;A90118  ;
                      STA.W !HW_DMAPARAM+$20              ;A44E|----/----\----;8D2043  ; Parameters for DMA Transfer
                      LDA.W #$0BF6                        ;A451|----/----\----;A9F60B  ;
                      STA.W !HW_DMAADDR+$20               ;A454|----/----\----;8D2243  ; A Address (Low Byte)
                      LDY.B #$00                          ;A457|----/----\----;A000    ;
                      STY.W !HW_DMAADDR+$22               ;A459|----/----\----;8C2443  ; A Address Bank
                      LDA.W #$00C0                        ;A45C|----/----\----;A9C000  ;
                      STA.W !HW_DMACNT+$20                ;A45F|----/----\----;8D2543  ; Number Bytes to Transfer (Low Byte) (DMA)
                      LDX.B #$04                          ;A462|----/----\----;A204    ;
                      STX.W !HW_MDMAEN                    ;A464|----/----\----;8E0B42  ; Regular DMA Channel Enable
                      LDA.W #$65A0                        ;A467|----/----\----;A9A065  ;
                      STA.W !HW_VMADD                     ;A46A|----/----\----;8D1621  ; Address for VRAM Read/Write (Low Byte)
                      LDA.W #$0CB6                        ;A46D|----/----\----;A9B60C  ;
                      STA.W !HW_DMAADDR+$20               ;A470|----/----\----;8D2243  ; A Address (Low Byte)
                      LDA.W #$00C0                        ;A473|----/----\----;A9C000  ;
                      STA.W !HW_DMACNT+$20                ;A476|----/----\----;8D2543  ; Number Bytes to Transfer (Low Byte) (DMA)
                      STX.W !HW_MDMAEN                    ;A479|----/----\----;8E0B42  ; Regular DMA Channel Enable
                      SEP #$20                            ;A47C|----/----\----;E220    ; 8 bit A ; Accum (8 bit) 
                    + RTS                                 ;A47E|----/----\----;60      ;
                                                          ;                   ;        ;
                                                          ;                   ;        ;
DATA_00A47F:          db $82                              ;A47F|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00A480:          db $06                              ;A480|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00A481:          db $00,$05,$09,$00,$03,$07,$00      ;A481|----/----\----;        ;
                                                          ;                   ;        ;
CODE_00A488:          LDY.W !PaletteIndexTable            ;A488|----/----\----;AC8006  ;
                      LDX.W DATA_00A481,Y                 ;A48B|----/----\----;BE81A4  ;
                      STX.B !_2                           ;A48E|----/----\----;8602    ;
                      STZ.B !_1                           ;A490|----/----\----;6401    ;
                      STZ.B !_0                           ;A492|----/----\----;6400    ;
                      STZ.B !_4                           ;A494|----/----\----;6404    ;
                      LDA.W DATA_00A480,Y                 ;A496|----/----\----;B980A4  ;
                      XBA                                 ;A499|----/----\----;EB      ;
                      LDA.W DATA_00A47F,Y                 ;A49A|----/----\----;B97FA4  ;
                      REP #$10                            ;A49D|----/----\----;C210    ; Index (16 bit) 
                      TAY                                 ;A49F|----/----\----;A8      ;
CODE_00A4A0:          LDA.B [!_0],Y                       ;A4A0|----/----\----;B700    ;
                      BEQ CODE_00A4CF                     ;A4A2|----/----\----;F02B    ;
                      STX.W !HW_DMAADDR+$22               ;A4A4|----/----\----;8E2443  ; A Address Bank
                      STA.W !HW_DMACNT+$20                ;A4A7|----/----\----;8D2543  ; Number Bytes to Transfer (Low Byte) (DMA)
                      STA.B !_3                           ;A4AA|----/----\----;8503    ;
                      STZ.W !HW_DMACNT+$21                ;A4AC|----/----\----;9C2643  ; Number Bytes to Transfer (High Byte) (DMA)
                      INY                                 ;A4AF|----/----\----;C8      ;
                      LDA.B [!_0],Y                       ;A4B0|----/----\----;B700    ;
                      STA.W !HW_CGADD                     ;A4B2|----/----\----;8D2121  ; Address for CG-RAM Write
                      REP #$20                            ;A4B5|----/----\----;C220    ; Accum (16 bit) 
                      LDA.W #$2200                        ;A4B7|----/----\----;A90022  ;
                      STA.W !HW_DMAPARAM+$20              ;A4BA|----/----\----;8D2043  ; Parameters for DMA Transfer
                      INY                                 ;A4BD|----/----\----;C8      ;
                      TYA                                 ;A4BE|----/----\----;98      ;
                      STA.W !HW_DMAADDR+$20               ;A4BF|----/----\----;8D2243  ; A Address (Low Byte)
                      CLC                                 ;A4C2|----/----\----;18      ;
                      ADC.B !_3                           ;A4C3|----/----\----;6503    ;
                      TAY                                 ;A4C5|----/----\----;A8      ;
                      SEP #$20                            ;A4C6|----/----\----;E220    ; Accum (8 bit) 
                      LDA.B #$04                          ;A4C8|----/----\----;A904    ;
                      STA.W !HW_MDMAEN                    ;A4CA|----/----\----;8D0B42  ; Regular DMA Channel Enable
                      BRA CODE_00A4A0                     ;A4CD|----/----\----;80D1    ;
                                                          ;                   ;        ;
CODE_00A4CF:          SEP #$10                            ;A4CF|----/----\----;E210    ; Index (8 bit) 
                      JSR CODE_00AE47                     ;A4D1|----/----\----;2047AE  ;
                      LDA.W !PaletteIndexTable            ;A4D4|----/----\----;AD8006  ;
                      BNE +                               ;A4D7|----/----\----;D006    ;
                      STZ.W !DynPaletteIndex              ;A4D9|----/----\----;9C8106  ;
                      STZ.W !DynPaletteTable              ;A4DC|----/----\----;9C8206  ;
                    + STZ.W !PaletteIndexTable            ;A4DF|----/----\----;9C8006  ;
                    - RTS                                 ;A4E2|----/----\----;60      ;
                                                          ;                   ;        ;
CODE_00A4E3:          REP #$10                            ;A4E3|----/----\----;C210    ; Index (16 bit) 
                      LDA.B #$80                          ;A4E5|----/----\----;A980    ;
                      STA.W !HW_VMAINC                    ;A4E7|----/----\----;8D1521  ; VRAM Address Increment Value
                      LDY.W #$0750                        ;A4EA|----/----\----;A05007  ;
                      STY.W !HW_VMADD                     ;A4ED|----/----\----;8C1621  ; Address for VRAM Read/Write (Low Byte)
                      LDY.W #$1801                        ;A4F0|----/----\----;A00118  ;
                      STY.W !HW_DMAPARAM+$20              ;A4F3|----/----\----;8C2043  ; Parameters for DMA Transfer
                      LDY.W #$0AF6                        ;A4F6|----/----\----;A0F60A  ;
                      STY.W !HW_DMAADDR+$20               ;A4F9|----/----\----;8C2243  ; A Address (Low Byte)
                      STZ.W !HW_DMAADDR+$22               ;A4FC|----/----\----;9C2443  ; A Address Bank
                      LDY.W #$0160                        ;A4FF|----/----\----;A06001  ;
                      STY.W !HW_DMACNT+$20                ;A502|----/----\----;8C2543  ; Number Bytes to Transfer (Low Byte) (DMA)
                      LDA.B #$04                          ;A505|----/----\----;A904    ;
                      STA.W !HW_MDMAEN                    ;A507|----/----\----;8D0B42  ; Regular DMA Channel Enable
                      SEP #$10                            ;A50A|----/----\----;E210    ; Index (8 bit) 
                      LDA.W !OverworldProcess             ;A50C|----/----\----;ADD913  ;
                      CMP.B #$0A                          ;A50F|----/----\----;C90A    ;
                      BEQ -                               ;A511|----/----\----;F0CF    ;
                      LDA.B #$6D                          ;A513|----/----\----;A96D    ;
                      JSR CODE_00A41C                     ;A515|----/----\----;201CA4  ;
                      LDA.B #$10                          ;A518|----/----\----;A910    ;
                      STA.B !_0                           ;A51A|----/----\----;8500    ;
                      LDA.B #$7D                          ;A51C|----/----\----;A97D    ;
                      JMP CODE_00A41E                     ;A51E|----/----\----;4C1EA4  ;
                                                          ;                   ;        ;
                                                          ;                   ;        ;
DATA_00A521:          db $00,$04,$08,$0C                  ;A521|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00A525:          db $00,$08,$10,$18                  ;A525|----/----\----;        ;
                                                          ;                   ;        ;
CODE_00A529:          LDA.B #$80                          ;A529|----/----\----;A980    ;
                      STA.W !HW_VMAINC                    ;A52B|----/----\----;8D1521  ; VRAM Address Increment Value
                      STZ.W !HW_VMADD                     ;A52E|----/----\----;9C1621  ; Address for VRAM Read/Write (Low Byte)
                      LDA.B #$30                          ;A531|----/----\----;A930    ;
                      CLC                                 ;A533|----/----\----;18      ;
                      ADC.W DATA_00A521,Y                 ;A534|----/----\----;7921A5  ;
                      STA.W !HW_VMADD+1                   ;A537|----/----\----;8D1721  ; Address for VRAM Read/Write (High Byte)
                      LDX.B #$06                          ;A53A|----/----\----;A206    ;
                    - LDA.W DATA_00A586,X                 ;A53C|----/----\----;BD86A5  ;
                      STA.W !HW_DMAPARAM+$10,X            ;A53F|----/----\----;9D1043  ;
                      DEX                                 ;A542|----/----\----;CA      ;
                      BPL -                               ;A543|----/----\----;10F7    ;
                      LDA.W !PlayerTurnOW                 ;A545|----/----\----;ADD60D  ;
                      LSR A                               ;A548|----/----\----;4A      ;
                      LSR A                               ;A549|----/----\----;4A      ;
                      TAX                                 ;A54A|----/----\----;AA      ;
                      LDA.W !OWPlayerSubmap,X             ;A54B|----/----\----;BD111F  ;
                      BEQ +                               ;A54E|----/----\----;F005    ;
                      LDA.B #$60                          ;A550|----/----\----;A960    ;
                      STA.W !HW_DMAADDR+$11               ;A552|----/----\----;8D1343  ; A Address (High Byte)
                    + LDA.W !HW_DMAADDR+$11               ;A555|----/----\----;AD1343  ; A Address (High Byte)
                      CLC                                 ;A558|----/----\----;18      ;
                      ADC.W DATA_00A525,Y                 ;A559|----/----\----;7925A5  ;
                      STA.W !HW_DMAADDR+$11               ;A55C|----/----\----;8D1343  ; A Address (High Byte)
                      LDA.B #$02                          ;A55F|----/----\----;A902    ;
                      STA.W !HW_MDMAEN                    ;A561|----/----\----;8D0B42  ; Regular DMA Channel Enable
                      LDA.B #$80                          ;A564|----/----\----;A980    ;
                      STA.W !HW_VMAINC                    ;A566|----/----\----;8D1521  ; VRAM Address Increment Value
                      STZ.W !HW_VMADD                     ;A569|----/----\----;9C1621  ; Address for VRAM Read/Write (Low Byte)
                      LDA.B #$20                          ;A56C|----/----\----;A920    ;
                      CLC                                 ;A56E|----/----\----;18      ;
                      ADC.W DATA_00A521,Y                 ;A56F|----/----\----;7921A5  ;
                      STA.W !HW_VMADD+1                   ;A572|----/----\----;8D1721  ; Address for VRAM Read/Write (High Byte)
                      LDX.B #$06                          ;A575|----/----\----;A206    ;
                    - LDA.W DATA_00A58D,X                 ;A577|----/----\----;BD8DA5  ;
                      STA.W !HW_DMAPARAM+$10,X            ;A57A|----/----\----;9D1043  ;
                      DEX                                 ;A57D|----/----\----;CA      ;
                      BPL -                               ;A57E|----/----\----;10F7    ;
                      LDA.B #$02                          ;A580|----/----\----;A902    ;
                      STA.W !HW_MDMAEN                    ;A582|----/----\----;8D0B42  ; Regular DMA Channel Enable
                      RTS                                 ;A585|----/----\----;60      ;
                                                          ;                   ;        ;
                                                          ;                   ;        ;
DATA_00A586:          db $01,$18,$00,$40,$7F,$00,$08      ;A586|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00A58D:          db $01,$18,$00,$E4,$7E,$00,$08      ;A58D|----/----\----;        ;
                                                          ;                   ;        ;
CODE_00A594:          PHB                                 ;A594|----/----\----;8B      ; Wrapper 
                      PHK                                 ;A595|----/----\----;4B      ;
                      PLB                                 ;A596|----/----\----;AB      ;
                      JSR CODE_00AD25                     ;A597|----/----\----;2025AD  ;
                      PLB                                 ;A59A|----/----\----;AB      ;
                      RTL                                 ;A59B|----/----\----;6B      ;
                                                          ;                   ;        ;
GM04Load:             JSR CODE_0085FA                     ;A59C|----/----\----;20FA85  ; gah, stupid keyboard >_< 
                      JSR NoButtons                       ;A59F|----/----\----;202DF6  ;
                      STZ.W !UploadMarioStart             ;A5A2|----/----\----;9C3A14  ;
                      JSR SetUpScreen                     ;A5A5|----/----\----;20798A  ;
                      JSR GM04DoDMA                       ;A5A8|----/----\----;20FF8C  ;
                      JSL CODE_05809E                     ;A5AB|----/----\----;229E8005; ->here 
                      LDA.W !IRQNMICommand                ;A5AF|----/----\----;AD9B0D  ;
                      BPL CODE_00A5B9                     ;A5B2|----/----\----;1005    ;
                      JSR CODE_0097BC                     ;A5B4|----/----\----;20BC97  ; Working on this routine 
                      BRA +                               ;A5B7|----/----\----;8016    ;
                                                          ;                   ;        ;
CODE_00A5B9:          JSR UploadSpriteGFX                 ;A5B9|----/----\----;20DAA9  ;
                      JSR LoadPalette                     ;A5BC|----/----\----;20EDAB  ;
                      JSL CODE_05BE8A                     ;A5BF|----/----\----;228ABE05;
                      JSR CODE_009FB8                     ;A5C3|----/----\----;20B89F  ;
                      JSR CODE_00A5F9                     ;A5C6|----/----\----;20F9A5  ;
                      JSR CODE_009260                     ;A5C9|----/----\----;206092  ;
                      JSR CODE_009860                     ;A5CC|----/----\----;206098  ;
                    + JSR CODE_00922F                     ;A5CF|----/----\----;202F92  ;
                      JSR KeepModeActive                  ;A5D2|----/----\----;20299F  ;
                      JSR CODE_008E1A                     ;A5D5|----/----\----;201A8E  ;
                      REP #$30                            ;A5D8|----/----\----;C230    ; Index (16 bit) Accum (16 bit) 
                      PHB                                 ;A5DA|----/----\----;8B      ;
                      LDX.W #$0703                        ;A5DB|----/----\----;A20307  ;
                      LDY.W #$0905                        ;A5DE|----/----\----;A00509  ;
                      LDA.W #$01EF                        ;A5E1|----/----\----;A9EF01  ;
                      MVN !_0,$00                         ;A5E4|----/----\----;540000  ;
                      PLB                                 ;A5E7|----/----\----;AB      ;
                      LDX.W !BackgroundColor              ;A5E8|----/----\----;AE0107  ;
                      STX.W !CopyBGColor                  ;A5EB|----/----\----;8E0309  ;
                      SEP #$30                            ;A5EE|----/----\----;E230    ; Index (8 bit) Accum (8 bit) 
                      JSR CODE_00919B                     ;A5F0|----/----\----;209B91  ;
                      JSR CODE_008494                     ;A5F3|----/----\----;209484  ;
                      JMP CODE_0093F4                     ;A5F6|----/----\----;4CF493  ;
                                                          ;                   ;        ;
CODE_00A5F9:          LDA.B #$E7                          ;A5F9|----/----\----;A9E7    ;
                      TRB.B !EffFrame                     ;A5FB|----/----\----;1414    ;
                    - JSL CODE_05BB39                     ;A5FD|----/----\----;2239BB05;
                      JSR CODE_00A390                     ;A601|----/----\----;2090A3  ;
                      INC.B !EffFrame                     ;A604|----/----\----;E614    ;
                      LDA.B !EffFrame                     ;A606|----/----\----;A514    ;
                      AND.B #$07                          ;A608|----/----\----;2907    ;
                      BNE -                               ;A60A|----/----\----;D0F1    ;
                      RTS                                 ;A60C|----/----\----;60      ;
                                                          ;                   ;        ;
                                                          ;                   ;        ;
DATA_00A60D:          db $00,$01,$01,$01                  ;A60D|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00A611:          db $0D,$00,$F3,$FF,$FE,$FF,$FE,$FF  ;A611|----/----\----;        ;
                      db $00,$00,$00,$00                  ;A619|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00A61D:          db $0A,$00,$00,$00,$1A,$1A,$0A,$0A  ;A61D|----/----\----;        ;
DATA_00A625:          db $00,$80,$40,$00,$01,$02,$40,$00  ;A625|----/----\----;        ;
                      db $40,$00,$00,$00,$00,$02,$00,$00  ;A62D|----/----\----;        ;
                                                          ;                   ;        ;
CODE_00A635:          LDA.W !BluePSwitchTimer             ;A635|----/----\----;ADAD14  ; If blue pow... 
                      ORA.W !SilverPSwitchTimer           ;A638|----/----\----;0DAE14  ; ...or silver pow... 
                      ORA.W !DirectCoinTimer              ;A63B|----/----\----;0D0C19  ;
                      BNE CODE_00A64A                     ;A63E|----/----\----;D00A    ;
                      LDA.W !InvinsibilityTimer           ;A640|----/----\----;AD9014  ; \ Branch if Mario doesn't have star 
                      BEQ CODE_00A660                     ;A643|----/----\----;F01B    ; / 
                      LDA.W !MusicBackup                  ;A645|----/----\----;ADDA0D  ;
                      BPL +                               ;A648|----/----\----;1005    ;
CODE_00A64A:          LDA.W !MusicBackup                  ;A64A|----/----\----;ADDA0D  ;
                      AND.B #$7F                          ;A64D|----/----\----;297F    ;
                    + ORA.B #$40                          ;A64F|----/----\----;0940    ;
                      STA.W !MusicBackup                  ;A651|----/----\----;8DDA0D  ;
                      STZ.W !BluePSwitchTimer             ;A654|----/----\----;9CAD14  ; Zero out POW timer 
                      STZ.W !SilverPSwitchTimer           ;A657|----/----\----;9CAE14  ; Zero out silver POW timer 
                      STZ.W !DirectCoinTimer              ;A65A|----/----\----;9C0C19  ;
                      STZ.W !InvinsibilityTimer           ;A65D|----/----\----;9C9014  ; Zero out star timer 
CODE_00A660:          LDA.W !BonusRoomBlocks              ;A660|----/----\----;ADF413  ;
                      ORA.W !BonusRoomBlocks+1            ;A663|----/----\----;0DF513  ;
                      ORA.W !BonusRoomBlocks+2            ;A666|----/----\----;0DF613  ;
                      ORA.W !BonusRoomBlocks+3            ;A669|----/----\----;0DF713  ;
                      ORA.W !BonusRoomBlocks+4            ;A66C|----/----\----;0DF813  ;
                      BEQ +                               ;A66F|----/----\----;F003    ;
                      STA.W !DidPlayBonusGame             ;A671|----/----\----;8D1B14  ;
                    + LDX.B #$23                          ;A674|----/----\----;A223    ;
                    - STZ.B !Map16HighPtr+2,X             ;A676|----/----\----;7470    ;
                      DEX                                 ;A678|----/----\----;CA      ;
                      BNE -                               ;A679|----/----\----;D0FB    ;
                      LDX.B #$37                          ;A67B|----/----\----;A237    ;
                    - STZ.W !OverworldProcess,X           ;A67D|----/----\----;9ED913  ;
                      DEX                                 ;A680|----/----\----;CA      ;
                      BNE -                               ;A681|----/----\----;D0FA    ;
                      ASL.W !UnusedStarCounter            ;A683|----/----\----;0ECB13  ;
                      STZ.W !KickingTimer                 ;A686|----/----\----;9C9A14  ;
                      STZ.W !PickUpItemTimer              ;A689|----/----\----;9C9814  ;
                      STZ.W !ColorFadeTimer               ;A68C|----/----\----;9C9514  ;
                      STZ.W !YoshiInPipeSetting           ;A68F|----/----\----;9C1914  ;
                      LDY.B #$01                          ;A692|----/----\----;A001    ;
                      LDX.W !ObjectTileset                ;A694|----/----\----;AE3119  ;
                      CPX.B #$10                          ;A697|----/----\----;E010    ;
                      BCS CODE_00A6CC                     ;A699|----/----\----;B031    ;
                      LDA.W DATA_00A625,X                 ;A69B|----/----\----;BD25A6  ;
                      LSR A                               ;A69E|----/----\----;4A      ;
                      BEQ CODE_00A6CC                     ;A69F|----/----\----;F02B    ;
                      LDA.W !ShowMarioStart               ;A6A1|----/----\----;AD1D14  ;
                      ORA.W !SublevelCount                ;A6A4|----/----\----;0D1A14  ;
                      ORA.W !DisableNoYoshiIntro          ;A6A7|----/----\----;0D1F14  ;
                      BNE CODE_00A6CC                     ;A6AA|----/----\----;D020    ;
                      LDA.W !SkipMidwayCastleIntro        ;A6AC|----/----\----;ADCF13  ;
                      BEQ CODE_00A6B6                     ;A6AF|----/----\----;F005    ;
                      JSR CODE_00C90A                     ;A6B1|----/----\----;200AC9  ;
                      BRA CODE_00A6CC                     ;A6B4|----/----\----;8016    ;
                                                          ;                   ;        ;
CODE_00A6B6:          STZ.B !PlayerInAir                  ;A6B6|----/----\----;6472    ;
                      STY.B !PlayerDirection              ;A6B8|----/----\----;8476    ;
                      STY.B !PlayerPipeAction             ;A6BA|----/----\----;8489    ;
                      LDX.B #$0A                          ;A6BC|----/----\----;A20A    ;
                      LDY.B #$00                          ;A6BE|----/----\----;A000    ;
                      LDA.W !CarryYoshiThruLvls           ;A6C0|----/----\----;ADC10D  ;
                      BEQ CODE_00A6C7                     ;A6C3|----/----\----;F002    ;
                      LDY.B #$0F                          ;A6C5|----/----\----;A00F    ;
CODE_00A6C7:          STX.B !PlayerAnimation              ;A6C7|----/----\----;8671    ;
                      STY.B !PipeTimer                    ;A6C9|----/----\----;8488    ;
                      RTS                                 ;A6CB|----/----\----;60      ;
                                                          ;                   ;        ;
CODE_00A6CC:          LDA.B !Layer1YPos                   ;A6CC|----/----\----;A51C    ;
                      CMP.B #$C0                          ;A6CE|----/----\----;C9C0    ;
                      BEQ +                               ;A6D0|----/----\----;F003    ;
                      INC.W !VerticalScrollEnabled        ;A6D2|----/----\----;EEF113  ;
                    + LDA.W !LevelEntranceType            ;A6D5|----/----\----;AD2A19  ;
                      BEQ CODE_00A6E0                     ;A6D8|----/----\----;F006    ;
                      CMP.B #$05                          ;A6DA|----/----\----;C905    ;
                      BNE CODE_00A716                     ;A6DC|----/----\----;D038    ;
                      ROR.B !LevelIsSlippery              ;A6DE|----/----\----;6686    ;
CODE_00A6E0:          STY.B !PlayerDirection              ;A6E0|----/----\----;8476    ;
                      LDA.B #$24                          ;A6E2|----/----\----;A924    ;
                      STA.B !PlayerInAir                  ;A6E4|----/----\----;8572    ;
                      STZ.B !SpriteLock                   ;A6E6|----/----\----;649D    ;
                      LDA.W !KeyholeTimer                 ;A6E8|----/----\----;AD3414  ;
                      BEQ +                               ;A6EB|----/----\----;F017    ;
                      LDA.W !MusicBackup                  ;A6ED|----/----\----;ADDA0D  ;
                      ORA.B #$7F                          ;A6F0|----/----\----;097F    ;
                      STA.W !MusicBackup                  ;A6F2|----/----\----;8DDA0D  ;
                      LDA.B !PlayerXPosNext               ;A6F5|----/----\----;A594    ;
                      ORA.B #$04                          ;A6F7|----/----\----;0904    ;
                      STA.W !KeyholeXPos                  ;A6F9|----/----\----;8D3614  ;
                      LDA.B !PlayerYPosNext               ;A6FC|----/----\----;A596    ;
                      CLC                                 ;A6FE|----/----\----;18      ;
                      ADC.B #$10                          ;A6FF|----/----\----;6910    ;
                      STA.W !KeyholeYPos                  ;A701|----/----\----;8D3814  ;
                    + LDA.W !YoshiHeavenFlag              ;A704|----/----\----;AD951B  ;
                      BEQ +                               ;A707|----/----\----;F00C    ;
                      LDA.B #$08                          ;A709|----/----\----;A908    ; \ Animation = Rise off screen, 
                      STA.B !PlayerAnimation              ;A70B|----/----\----;8571    ; / for Yoshi Wing bonus stage 
                      LDA.B #$A0                          ;A70D|----/----\----;A9A0    ;
                      STA.B !PlayerYPosNext               ;A70F|----/----\----;8596    ;
                      LDA.B #$90                          ;A711|----/----\----;A990    ; \ Set upward speed, #$90 
                      STA.B !PlayerYSpeed                 ;A713|----/----\----;857D    ; / 
                    + RTS                                 ;A715|----/----\----;60      ;
                                                          ;                   ;        ;
CODE_00A716:          CMP.B #$06                          ;A716|----/----\----;C906    ;
                      BCC CODE_00A740                     ;A718|----/----\----;9026    ;
                      BNE CODE_00A734                     ;A71A|----/----\----;D018    ;
                      STY.B !PlayerDirection              ;A71C|----/----\----;8476    ;
                      STY.W !PlayerCapePose               ;A71E|----/----\----;8CDF13  ;
                      LDA.B #$FF                          ;A721|----/----\----;A9FF    ;
                      STA.W !YoshiInPipeSetting           ;A723|----/----\----;8D1914  ;
                      LDA.B #$08                          ;A726|----/----\----;A908    ;
                      TSB.B !PlayerXPosNext               ;A728|----/----\----;0494    ;
                      LDA.B #$02                          ;A72A|----/----\----;A902    ;
                      TSB.B !PlayerYPosNext               ;A72C|----/----\----;0496    ;
                      LDX.B #$07                          ;A72E|----/----\----;A207    ;
                      LDY.B #$20                          ;A730|----/----\----;A020    ;
                      BRA CODE_00A6C7                     ;A732|----/----\----;8093    ;
                                                          ;                   ;        ;
CODE_00A734:          STY.B !LevelIsWater                 ;A734|----/----\----;8485    ;
                      LDA.W !SkipMidwayCastleIntro        ;A736|----/----\----;ADCF13  ;
                      ORA.W !KeyholeTimer                 ;A739|----/----\----;0D3414  ;
                      BNE CODE_00A6E0                     ;A73C|----/----\----;D0A2    ;
                      LDA.B #$04                          ;A73E|----/----\----;A904    ;
CODE_00A740:          CLC                                 ;A740|----/----\----;18      ;
                      ADC.B #$03                          ;A741|----/----\----;6903    ;
                      STA.B !PlayerPipeAction             ;A743|----/----\----;8589    ;
                      TAY                                 ;A745|----/----\----;A8      ;
                      LSR A                               ;A746|----/----\----;4A      ;
                      DEC A                               ;A747|----/----\----;3A      ;
                      STA.W !YoshiInPipeSetting           ;A748|----/----\----;8D1914  ;
                      LDA.W DATA_00A60D-4,Y               ;A74B|----/----\----;B909A6  ;
                      STA.B !PlayerDirection              ;A74E|----/----\----;8576    ;
                      LDX.B #$05                          ;A750|----/----\----;A205    ;
                      CPY.B #$06                          ;A752|----/----\----;C006    ;
                      BCC CODE_00A768                     ;A754|----/----\----;9012    ;
                      LDA.B #$08                          ;A756|----/----\----;A908    ;
                      TSB.B !PlayerXPosNext               ;A758|----/----\----;0494    ;
                      LDX.B #$06                          ;A75A|----/----\----;A206    ;
                      CPY.B #$07                          ;A75C|----/----\----;C007    ;
                      LDY.B #$1E                          ;A75E|----/----\----;A01E    ;
                      BCC +                               ;A760|----/----\----;9008    ;
                      LDY.B #$0F                          ;A762|----/----\----;A00F    ;
                      LDA.B !Powerup                      ;A764|----/----\----;A519    ;
                      BEQ +                               ;A766|----/----\----;F002    ;
CODE_00A768:          LDY.B #$1C                          ;A768|----/----\----;A01C    ; \ Set downward speed, #$1C 
                    + STY.B !PlayerYSpeed                 ;A76A|----/----\----;847D    ; / 
                      JSR CODE_00A6C7                     ;A76C|----/----\----;20C7A6  ;
                      LDA.W !PlayerRidingYoshi            ;A76F|----/----\----;AD7A18  ;
                      BEQ +                               ;A772|----/----\----;F021    ;
                      LDX.B !PlayerPipeAction             ;A774|----/----\----;A689    ;
                      LDA.B !PipeTimer                    ;A776|----/----\----;A588    ;
                      CLC                                 ;A778|----/----\----;18      ;
                      ADC.W DATA_00A61D,X                 ;A779|----/----\----;7D1DA6  ;
                      STA.B !PipeTimer                    ;A77C|----/----\----;8588    ;
                      TXA                                 ;A77E|----/----\----;8A      ;
                      ASL A                               ;A77F|----/----\----;0A      ;
                      TAX                                 ;A780|----/----\----;AA      ;
                      REP #$20                            ;A781|----/----\----;C220    ; Accum (16 bit) 
                      LDA.B !PlayerXPosNext               ;A783|----/----\----;A594    ;
                      CLC                                 ;A785|----/----\----;18      ;
                      ADC.W DATA_00A60D-4,X               ;A786|----/----\----;7D09A6  ;
                      STA.B !PlayerXPosNext               ;A789|----/----\----;8594    ;
                      LDA.B !PlayerYPosNext               ;A78B|----/----\----;A596    ;
                      CLC                                 ;A78D|----/----\----;18      ;
                      ADC.W DATA_00A611,X                 ;A78E|----/----\----;7D11A6  ;
                      STA.B !PlayerYPosNext               ;A791|----/----\----;8596    ;
                      SEP #$20                            ;A793|----/----\----;E220    ; Accum (8 bit) 
                    + RTS                                 ;A795|----/----\----;60      ;
                                                          ;                   ;        ;
CODE_00A796:          REP #$20                            ;A796|----/----\----;C220    ; Accum (16 bit) 
                      LDY.W !VertLayer2Setting            ;A798|----/----\----;AC1414  ;
                      BEQ CODE_00A7B9                     ;A79B|----/----\----;F01C    ;
                      DEY                                 ;A79D|----/----\----;88      ;
                      BNE CODE_00A7A7                     ;A79E|----/----\----;D007    ;
                      LDA.B !Layer2YPos                   ;A7A0|----/----\----;A520    ;
                      SEC                                 ;A7A2|----/----\----;38      ;
                      SBC.B !Layer1YPos                   ;A7A3|----/----\----;E51C    ;
                      BRA CODE_00A7B6                     ;A7A5|----/----\----;800F    ;
                                                          ;                   ;        ;
CODE_00A7A7:          LDA.B !Layer1YPos                   ;A7A7|----/----\----;A51C    ;
                      LSR A                               ;A7A9|----/----\----;4A      ;
                      DEY                                 ;A7AA|----/----\----;88      ;
                      BEQ +                               ;A7AB|----/----\----;F002    ;
                      LSR A                               ;A7AD|----/----\----;4A      ;
                      LSR A                               ;A7AE|----/----\----;4A      ;
                    + EOR.W #$FFFF                        ;A7AF|----/----\----;49FFFF  ;
                      INC A                               ;A7B2|----/----\----;1A      ;
                      CLC                                 ;A7B3|----/----\----;18      ;
                      ADC.B !Layer2YPos                   ;A7B4|----/----\----;6520    ;
CODE_00A7B6:          STA.W !BackgroundVertOffset         ;A7B6|----/----\----;8D1714  ;
CODE_00A7B9:          LDA.W #$0080                        ;A7B9|----/----\----;A98000  ;
                      STA.W !CameraMoveTrigger            ;A7BC|----/----\----;8D2A14  ;
                      SEP #$20                            ;A7BF|----/----\----;E220    ; Accum (8 bit) 
                      RTS                                 ;A7C1|----/----\----;60      ;
                                                          ;                   ;        ;
CODE_00A7C2:          REP #$20                            ;A7C2|----/----\----;C220    ; 16 bit A ; Accum (16 bit) 
                      LDX.B #$80                          ;A7C4|----/----\----;A280    ;
                      STX.W !HW_VMAINC                    ;A7C6|----/----\----;8E1521  ; VRAM Address Increment Value
                      LDA.W #$6000                        ;A7C9|----/----\----;A90060  ;
                      STA.W !HW_VMADD                     ;A7CC|----/----\----;8D1621  ; Address for VRAM Read/Write (Low Byte)
                      LDA.W #$1801                        ;A7CF|----/----\----;A90118  ;
                      STA.W !HW_DMAPARAM+$20              ;A7D2|----/----\----;8D2043  ; Parameters for DMA Transfer
                      LDA.W #$977B                        ;A7D5|----/----\----;A97B97  ;
                      STA.W !HW_DMAADDR+$20               ;A7D8|----/----\----;8D2243  ; A Address (Low Byte)
                      LDX.B #$7F                          ;A7DB|----/----\----;A27F    ;
                      STX.W !HW_DMAADDR+$22               ;A7DD|----/----\----;8E2443  ; A Address Bank
                      LDA.W #$00C0                        ;A7E0|----/----\----;A9C000  ;
                      STA.W !HW_DMACNT+$20                ;A7E3|----/----\----;8D2543  ; Number Bytes to Transfer (Low Byte) (DMA)
                      LDX.B #$04                          ;A7E6|----/----\----;A204    ;
                      STX.W !HW_MDMAEN                    ;A7E8|----/----\----;8E0B42  ; Regular DMA Channel Enable
                      LDA.W #$6100                        ;A7EB|----/----\----;A90061  ;
                      STA.W !HW_VMADD                     ;A7EE|----/----\----;8D1621  ; Address for VRAM Read/Write (Low Byte)
                      LDA.W #$983B                        ;A7F1|----/----\----;A93B98  ;
                      STA.W !HW_DMAADDR+$20               ;A7F4|----/----\----;8D2243  ; A Address (Low Byte)
                      LDA.W #$00C0                        ;A7F7|----/----\----;A9C000  ;
                      STA.W !HW_DMACNT+$20                ;A7FA|----/----\----;8D2543  ; Number Bytes to Transfer (Low Byte) (DMA)
                      STX.W !HW_MDMAEN                    ;A7FD|----/----\----;8E0B42  ; Regular DMA Channel Enable
                      LDA.W #$64A0                        ;A800|----/----\----;A9A064  ;
                      STA.W !HW_VMADD                     ;A803|----/----\----;8D1621  ; Address for VRAM Read/Write (Low Byte)
                      LDA.W #$98FB                        ;A806|----/----\----;A9FB98  ;
                      STA.W !HW_DMAADDR+$20               ;A809|----/----\----;8D2243  ; A Address (Low Byte)
                      LDA.W #$00C0                        ;A80C|----/----\----;A9C000  ;
                      STA.W !HW_DMACNT+$20                ;A80F|----/----\----;8D2543  ; Number Bytes to Transfer (Low Byte) (DMA)
                      STX.W !HW_MDMAEN                    ;A812|----/----\----;8E0B42  ; Regular DMA Channel Enable
                      LDA.W #$65A0                        ;A815|----/----\----;A9A065  ;
                      STA.W !HW_VMADD                     ;A818|----/----\----;8D1621  ; Address for VRAM Read/Write (Low Byte)
                      LDA.W #$99BB                        ;A81B|----/----\----;A9BB99  ;
                      STA.W !HW_DMAADDR+$20               ;A81E|----/----\----;8D2243  ; A Address (Low Byte)
                      LDA.W #$00C0                        ;A821|----/----\----;A9C000  ;
                      STA.W !HW_DMACNT+$20                ;A824|----/----\----;8D2543  ; Number Bytes to Transfer (Low Byte) (DMA)
                      STX.W !HW_MDMAEN                    ;A827|----/----\----;8E0B42  ; Regular DMA Channel Enable
                      SEP #$20                            ;A82A|----/----\----;E220    ; 8 bit A ; Accum (8 bit) 
                      RTS                                 ;A82C|----/----\----;60      ;
                                                          ;                   ;        ;
CODE_00A82D:          LDY.B #$0F                          ;A82D|----/----\----;A00F    ;
                      JSL CODE_00BA28                     ;A82F|----/----\----;2228BA00;
                      LDA.W !BonusGameActivate            ;A833|----/----\----;AD2514  ;
                      REP #$30                            ;A836|----/----\----;C230    ; Index (16 bit) Accum (16 bit) 
                      BEQ +                               ;A838|----/----\----;F008    ;
                      LDA.B !_0                           ;A83A|----/----\----;A500    ;
                      CLC                                 ;A83C|----/----\----;18      ;
                      ADC.W #$0030                        ;A83D|----/----\----;693000  ;
                      STA.B !_0                           ;A840|----/----\----;8500    ;
                    + LDX.W #$0000                        ;A842|----/----\----;A20000  ;
CODE_00A845:          LDY.W #$0008                        ;A845|----/----\----;A00800  ;
                    - LDA.B [!_0]                         ;A848|----/----\----;A700    ;
                      STA.L !MarioStartGraphics,X         ;A84A|----/----\----;9F7B977F;
                      INX                                 ;A84E|----/----\----;E8      ;
                      INX                                 ;A84F|----/----\----;E8      ;
                      INC.B !_0                           ;A850|----/----\----;E600    ;
                      INC.B !_0                           ;A852|----/----\----;E600    ;
                      DEY                                 ;A854|----/----\----;88      ;
                      BNE -                               ;A855|----/----\----;D0F1    ;
                      LDY.W #$0008                        ;A857|----/----\----;A00800  ;
                    - LDA.B [!_0]                         ;A85A|----/----\----;A700    ;
                      AND.W #$00FF                        ;A85C|----/----\----;29FF00  ;
                      STA.L !MarioStartGraphics,X         ;A85F|----/----\----;9F7B977F;
                      INX                                 ;A863|----/----\----;E8      ;
                      INX                                 ;A864|----/----\----;E8      ;
                      INC.B !_0                           ;A865|----/----\----;E600    ;
                      DEY                                 ;A867|----/----\----;88      ;
                      BNE -                               ;A868|----/----\----;D0F0    ;
                      CPX.W #$0300                        ;A86A|----/----\----;E00003  ;
                      BCC CODE_00A845                     ;A86D|----/----\----;90D6    ;
                      SEP #$30                            ;A86F|----/----\----;E230    ; Index (8 bit) Accum (8 bit) 
                      LDY.B #$00                          ;A871|----/----\----;A000    ;
                      JSL CODE_00BA28                     ;A873|----/----\----;2228BA00;
                      REP #$30                            ;A877|----/----\----;C230    ; Index (16 bit) Accum (16 bit) 
                      LDA.W #$B3F0                        ;A879|----/----\----;A9F0B3  ;
                      STA.B !_0                           ;A87C|----/----\----;8500    ;
                      LDA.W #$7EB3                        ;A87E|----/----\----;A9B37E  ;
                      STA.B !_1                           ;A881|----/----\----;8501    ;
                      LDX.W #$0000                        ;A883|----/----\----;A20000  ;
CODE_00A886:          LDY.W #$0008                        ;A886|----/----\----;A00800  ;
                    - LDA.B [!_0]                         ;A889|----/----\----;A700    ;
                      STA.W !GfxDecompSP1,X               ;A88B|----/----\----;9DF60B  ;
                      INX                                 ;A88E|----/----\----;E8      ;
                      INX                                 ;A88F|----/----\----;E8      ;
                      INC.B !_0                           ;A890|----/----\----;E600    ;
                      INC.B !_0                           ;A892|----/----\----;E600    ;
                      DEY                                 ;A894|----/----\----;88      ;
                      BNE -                               ;A895|----/----\----;D0F2    ;
                      LDY.W #$0008                        ;A897|----/----\----;A00800  ;
                    - LDA.B [!_0]                         ;A89A|----/----\----;A700    ;
                      AND.W #$00FF                        ;A89C|----/----\----;29FF00  ;
                      STA.W !GfxDecompSP1,X               ;A89F|----/----\----;9DF60B  ;
                      INX                                 ;A8A2|----/----\----;E8      ;
                      INX                                 ;A8A3|----/----\----;E8      ;
                      INC.B !_0                           ;A8A4|----/----\----;E600    ;
                      DEY                                 ;A8A6|----/----\----;88      ;
                      BNE -                               ;A8A7|----/----\----;D0F1    ;
                      CPX.W #$00C0                        ;A8A9|----/----\----;E0C000  ;
                      BNE +                               ;A8AC|----/----\----;D005    ;
                      LDA.W #$B570                        ;A8AE|----/----\----;A970B5  ;
                      STA.B !_0                           ;A8B1|----/----\----;8500    ;
                    + CPX.W #$0180                        ;A8B3|----/----\----;E08001  ;
                      BCC CODE_00A886                     ;A8B6|----/----\----;90CE    ;
                      SEP #$30                            ;A8B8|----/----\----;E230    ; Index (8 bit) Accum (8 bit) 
                      LDA.B #$01                          ;A8BA|----/----\----;A901    ;
                      STA.W !UploadMarioStart             ;A8BC|----/----\----;8D3A14  ;
                      STA.W !MarioStartFlag               ;A8BF|----/----\----;8D3519  ;
                      RTS                                 ;A8C2|----/----\----;60      ;
                                                          ;                   ;        ;
                                                          ;                   ;        ;
SPRITEGFXLIST:        db $00,$01,$13,$02,$00,$01,$12,$03  ;A8C3|----/----\----;        ; Forest ; Castle 
                      db $00,$01,$13,$05,$00,$01,$13,$04  ;A8CB|----/----\----;        ; Mushroom ; Underground 
                      db $00,$01,$13,$06,$00,$01,$13,$09  ;A8D3|----/----\----;        ; Water ; Pokey 
                      db $00,$01,$13,$04,$00,$01,$06,$11  ;A8DB|----/----\----;        ; Underground 2 ; Ghost House 
                      db $00,$01,$13,$20,$00,$01,$13,$0F  ;A8E3|----/----\----;        ; Banzai Bill ; Yoshi's House 
                      db $00,$01,$13,$23,$00,$01,$0D,$14  ;A8EB|----/----\----;        ; Dino-Rhino ; Switch Palace 
                      db $00,$01,$24,$0E,$00,$01,$0A,$22  ;A8F3|----/----\----;        ; Mechakoopa ; Wendy/Lemmy 
                      db $00,$01,$13,$0E,$00,$01,$13,$14  ;A8FB|----/----\----;        ; Ninji ; Unused 
                      db $00,$00,$00,$08,$10,$0F,$1C,$1D  ;A903|----/----\----;        ;
                      db $00,$01,$24,$22,$00,$01,$25,$22  ;A90B|----/----\----;        ;
                      db $00,$22,$13,$2D,$00,$01,$0F,$22  ;A913|----/----\----;        ;
                      db $00,$26,$2E,$22,$21,$0B,$25,$0A  ;A91B|----/----\----;        ;
                      db $00,$0D,$24,$22,$2C,$30,$2D,$0E  ;A923|----/----\----;        ;
OBJECTGFXLIST:        db $14,$17,$19,$15,$14,$17,$1B,$18  ;A92B|----/----\----;        ; Normal 1 ; Castle 1 
                      db $14,$17,$1B,$16,$14,$17,$0C,$1A  ;A933|----/----\----;        ; Rope 1 ; Underground 1 
                      db $14,$17,$1B,$08,$14,$17,$0C,$07  ;A93B|----/----\----;        ; Switch Palace 1 ; Ghost House 1 
                      db $14,$17,$0C,$16,$14,$17,$1B,$15  ;A943|----/----\----;        ; Rope 2 ; Normal 2 
                      db $14,$17,$19,$16,$14,$17,$0D,$1A  ;A94B|----/----\----;        ; Rope 3 ; Underground 2 
                      db $14,$17,$1B,$08,$14,$17,$1B,$18  ;A953|----/----\----;        ; Switch Palace 2 ; Castle 2 
                      db $14,$17,$19,$1F,$14,$17,$0D,$07  ;A95B|----/----\----;        ; Cloud/Forest ; Ghost House 2 
                      db $14,$17,$19,$1A,$14,$17,$14,$14  ;A963|----/----\----;        ; Underground 2 
                      db $0E,$0F,$17,$17,$1C,$1D,$08,$1E  ;A96B|----/----\----;        ;
                      db $1C,$1D,$08,$1E,$1C,$1D,$08,$1E  ;A973|----/----\----;        ;
                      db $1C,$1D,$08,$1E,$1C,$1D,$08,$1E  ;A97B|----/----\----;        ;
                      db $1C,$1D,$08,$1E,$1C,$1D,$08,$1E  ;A983|----/----\----;        ;
                      db $14,$17,$19,$2C,$19,$17,$1B,$18  ;A98B|----/----\----;        ;
                                                          ;                   ;        ;
CODE_00A993:          STZ.W !HW_VMADD                     ;A993|----/----\----;9C1621  ; \  ; Address for VRAM Read/Write (Low Byte)
                      LDA.B #$40                          ;A996|----/----\----;A940    ;  |Set "Address for VRAM Read/Write" to x4000 
                      STA.W !HW_VMADD+1                   ;A998|----/----\----;8D1721  ; /  ; Address for VRAM Read/Write (High Byte)
                      LDA.B #$03                          ;A99B|----/----\----;A903    ;
                      STA.B !_F                           ;A99D|----/----\----;850F    ;
                      LDA.B #$28                          ;A99F|----/----\----;A928    ;
                      STA.B !_E                           ;A9A1|----/----\----;850E    ;
CODE_00A9A3:          LDA.B !_E                           ;A9A3|----/----\----;A50E    ;
                      TAY                                 ;A9A5|----/----\----;A8      ;
                      JSL CODE_00BA28                     ;A9A6|----/----\----;2228BA00;
                      REP #$30                            ;A9AA|----/----\----;C230    ; Index (16 bit) Accum (16 bit) 
                      LDX.W #$03FF                        ;A9AC|----/----\----;A2FF03  ;
                      LDY.W #$0000                        ;A9AF|----/----\----;A00000  ;
                    - LDA.B [!_0],Y                       ;A9B2|----/----\----;B700    ;
                      STA.W !HW_VMDATA                    ;A9B4|----/----\----;8D1821  ; Data for VRAM Write (Low Byte)
                      INY                                 ;A9B7|----/----\----;C8      ;
                      INY                                 ;A9B8|----/----\----;C8      ;
                      DEX                                 ;A9B9|----/----\----;CA      ;
                      BPL -                               ;A9BA|----/----\----;10F6    ;
                      SEP #$30                            ;A9BC|----/----\----;E230    ; Index (8 bit) Accum (8 bit) 
                      INC.B !_E                           ;A9BE|----/----\----;E60E    ;
                      DEC.B !_F                           ;A9C0|----/----\----;C60F    ;
                      BPL CODE_00A9A3                     ;A9C2|----/----\----;10DF    ;
                      STZ.W !HW_VMADD                     ;A9C4|----/----\----;9C1621  ; \  ; Address for VRAM Read/Write (Low Byte)
                      LDA.B #$60                          ;A9C7|----/----\----;A960    ;  |Set "Address for VRAM Read/Write" to x6000 
                      STA.W !HW_VMADD+1                   ;A9C9|----/----\----;8D1721  ; /  ; Address for VRAM Read/Write (High Byte)
                      LDY.B #$00                          ;A9CC|----/----\----;A000    ;
                      JSR UploadGFXFile                   ;A9CE|----/----\----;206BAA  ;
                      RTS                                 ;A9D1|----/----\----;60      ;
                                                          ;                   ;        ;
                                                          ;                   ;        ;
DATA_00A9D2:          db $78,$70,$68,$60                  ;A9D2|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00A9D6:          db $18,$10,$08,$00                  ;A9D6|----/----\----;        ;
                                                          ;                   ;        ;
UploadSpriteGFX:      LDA.B #$80                          ;A9DA|----/----\----;A980    ; Decompression as well? 
                      STA.W !HW_VMAINC                    ;A9DC|----/----\----;8D1521  ; VRAM transfer control port ; VRAM Address Increment Value
                      LDX.B #$03                          ;A9DF|----/----\----;A203    ;
                      LDA.W !SpriteTileset                ;A9E1|----/----\----;AD2B19  ; $192B = current sprite GFX list index 
                      ASL A                               ;A9E4|----/----\----;0A      ; \ 
                      ASL A                               ;A9E5|----/----\----;0A      ;  }4A -> Y 
                      TAY                                 ;A9E6|----/----\----;A8      ; / 
                    - LDA.W SPRITEGFXLIST,Y               ;A9E7|----/----\----;B9C3A8  ;  | 
                      STA.B !_4,X                         ;A9EA|----/----\----;9504    ;  | 
                      INY                                 ;A9EC|----/----\----;C8      ;  | 
                      DEX                                 ;A9ED|----/----\----;CA      ;  | 
                      BPL -                               ;A9EE|----/----\----;10F7    ; / 
                      LDA.B #$03                          ;A9F0|----/----\----;A903    ; #$03 -> A -> $0F 
                      STA.B !_F                           ;A9F2|----/----\----;850F    ;
GFXTransferLoop:      LDX.B !_F                           ;A9F4|----/----\----;A60F    ; $0F -> X 
                      STZ.W !HW_VMADD                     ;A9F6|----/----\----;9C1621  ; #$00 -> $2116 ; Address for VRAM Read/Write (Low Byte)
                      LDA.W DATA_00A9D2,X                 ;A9F9|----/----\----;BDD2A9  ; My guess: Locations in VRAM to upload GFX to 
                      STA.W !HW_VMADD+1                   ;A9FC|----/----\----;8D1721  ; Set VRAM address to $??00 ; Address for VRAM Read/Write (High Byte)
                      LDY.B !_4,X                         ;A9FF|----/----\----;B404    ; Y is possibly which GFX file 
                      LDA.W !SpriteGFXFile,X              ;AA01|----/----\----;BD0101  ; to upload to a section in VRAM, used in 
                      CMP.B !_4,X                         ;AA04|----/----\----;D504    ; the subroutine $00:BA28 
                      BEQ +                               ;AA06|----/----\----;F003    ; don't upload when it''s not needed 
                      JSR UploadGFXFile                   ;AA08|----/----\----;206BAA  ; JSR to a JSL... 
                    + DEC.B !_F                           ;AA0B|----/----\----;C60F    ; Decrement $0F 
                      BPL GFXTransferLoop                 ;AA0D|----/----\----;10E5    ; if >= #$00, continue transfer 
                      LDX.B #$03                          ;AA0F|----/----\----;A203    ; \ 
                    - LDA.B !_4,X                         ;AA11|----/----\----;B504    ;  |Update $0101-$0104 to reflect the new sprite GFX 
                      STA.W !SpriteGFXFile,X              ;AA13|----/----\----;9D0101  ;  |That's loaded now. 
                      DEX                                 ;AA16|----/----\----;CA      ;  | 
                      BPL -                               ;AA17|----/----\----;10F8    ; / 
                      LDA.W !ObjectTileset                ;AA19|----/----\----;AD3119  ; LDA Tileset 
                      CMP.B #$FE                          ;AA1C|----/----\----;C9FE    ;
                      BCS SetallFGBG80                    ;AA1E|----/----\----;B03B    ; Branch to a routine that uploads file #$80 to every slot in FG/BG 
                      LDX.B #$03                          ;AA20|----/----\----;A203    ;
                      LDA.W !ObjectTileset                ;AA22|----/----\----;AD3119  ; this routine is pretty close to the above 
                      ASL A                               ;AA25|----/----\----;0A      ; one, I'm guessing this does 
                      ASL A                               ;AA26|----/----\----;0A      ; object/BG GFX. 
                      TAY                                 ;AA27|----/----\----;A8      ; 4A -> Y 
                    - LDA.W OBJECTGFXLIST,Y               ;AA28|----/----\----;B92BA9  ; FG/BG GFX table 
                      STA.B !_4,X                         ;AA2B|----/----\----;9504    ;
                      INY                                 ;AA2D|----/----\----;C8      ;
                      DEX                                 ;AA2E|----/----\----;CA      ;
                      BPL -                               ;AA2F|----/----\----;10F7    ; FG/Bg to upload -> $04 - $07 
                      LDA.B #$03                          ;AA31|----/----\----;A903    ;
                      STA.B !_F                           ;AA33|----/----\----;850F    ; #$03 -> $0F 
CODE_00AA35:          LDX.B !_F                           ;AA35|----/----\----;A60F    ; $0F -> X 
                      STZ.W !HW_VMADD                     ;AA37|----/----\----;9C1621  ; Address for VRAM Read/Write (Low Byte)
                      LDA.W DATA_00A9D6,X                 ;AA3A|----/----\----;BDD6A9  ; Load + Store VRAM upload positions 
                      STA.W !HW_VMADD+1                   ;AA3D|----/----\----;8D1721  ; Address for VRAM Read/Write (High Byte)
                      LDY.B !_4,X                         ;AA40|----/----\----;B404    ;
                      LDA.W !BackgroundGFXFile,X          ;AA42|----/----\----;BD0501  ; Check to see if the file to be uploaded already 
                      CMP.B !_4,X                         ;AA45|----/----\----;D504    ; exists in the slot in VRAM - if so, 
                      BEQ +                               ;AA47|----/----\----;F003    ; don't bother uploading it again. 
                      JSR UploadGFXFile                   ;AA49|----/----\----;206BAA  ; Upload the GFX file 
                    + DEC.B !_F                           ;AA4C|----/----\----;C60F    ; Next GFX file 
                      BPL CODE_00AA35                     ;AA4E|----/----\----;10E5    ;
                      LDX.B #$03                          ;AA50|----/----\----;A203    ;
                    - LDA.B !_4,X                         ;AA52|----/----\----;B504    ;
                      STA.W !BackgroundGFXFile,X          ;AA54|----/----\----;9D0501  ;
                      DEX                                 ;AA57|----/----\----;CA      ;
                      BPL -                               ;AA58|----/----\----;10F8    ;
                      RTS                                 ;AA5A|----/----\----;60      ; Return from uploading the GFX 
                                                          ;                   ;        ;
SetallFGBG80:         BEQ +                               ;AA5B|----/----\----;F003    ; If zero flag set, don't update the tileset 
                      JSR CODE_00AB42                     ;AA5D|----/----\----;2042AB  ;
                    + LDX.B #$03                          ;AA60|----/----\----;A203    ;
                      LDA.B #$80                          ;AA62|----/----\----;A980    ; my guess is that it gets called in the same set of routines 
                    - STA.W !BackgroundGFXFile,X          ;AA64|----/----\----;9D0501  ;
                      DEX                                 ;AA67|----/----\----;CA      ;
                      BPL -                               ;AA68|----/----\----;10FA    ;
                      RTS                                 ;AA6A|----/----\----;60      ; Return 
                                                          ;                   ;        ;
UploadGFXFile:        JSL CODE_00BA28                     ;AA6B|----/----\----;2228BA00;
                      CPY.B #$01                          ;AA6F|----/----\----;C001    ;
                      BNE +                               ;AA71|----/----\----;D00D    ;
                      LDA.W !OWLevelTileSettings+$49      ;AA73|----/----\----;ADEB1E  ;
                      BPL +                               ;AA76|----/----\----;1008    ; handle the post-special world graphics and koopa color swap. 
                      LDY.B #$31                          ;AA78|----/----\----;A031    ;
                      JSL CODE_00BA28                     ;AA7A|----/----\----;2228BA00;
                      LDY.B #$01                          ;AA7E|----/----\----;A001    ;
                    + REP #$20                            ;AA80|----/----\----;C220    ; A = 16bit ; Accum (16 bit) 
                      LDA.W #$0000                        ;AA82|----/----\----;A90000  ;
                      LDX.W !ObjectTileset                ;AA85|----/----\----;AE3119  ; LDX Tileset 
                      CPX.B #$11                          ;AA88|----/----\----;E011    ; CPX #$11 
                      BCC CODE_00AA90                     ;AA8A|----/----\----;9004    ; If Tileset < #$11 skip to lower area 
                      CPY.B #$08                          ;AA8C|----/----\----;C008    ; if Y = #$08 skip to JSR 
                      BEQ JumpTo_____                     ;AA8E|----/----\----;F006    ;
CODE_00AA90:          CPY.B #$1E                          ;AA90|----/----\----;C01E    ; If Y = #$1E then 
                      BEQ JumpTo_____                     ;AA92|----/----\----;F002    ; JMP otherwise 
                      BNE +                               ;AA94|----/----\----;D003    ; don't JMP 
JumpTo_____:          JMP FilterSomeRAM                   ;AA96|----/----\----;4C02AB  ;
                                                          ;                   ;        ;
                    + STA.B !_A                           ;AA99|----/----\----;850A    ;
                      LDA.W #$FFFF                        ;AA9B|----/----\----;A9FFFF  ;
                      CPY.B #$01                          ;AA9E|----/----\----;C001    ;
                      BEQ +                               ;AAA0|----/----\----;F007    ;
                      CPY.B #$17                          ;AAA2|----/----\----;C017    ;
                      BEQ +                               ;AAA4|----/----\----;F003    ;
                      LDA.W #$0000                        ;AAA6|----/----\----;A90000  ;
                    + STA.W !GfxBppConvertFlag            ;AAA9|----/----\----;8DBC1B  ;
                      LDY.B #$7F                          ;AAAC|----/----\----;A07F    ;
CODE_00AAAE:          LDA.W !GfxBppConvertFlag            ;AAAE|----/----\----;ADBC1B  ;
                      BEQ CODE_00AACD                     ;AAB1|----/----\----;F01A    ;
                      CPY.B #$7E                          ;AAB3|----/----\----;C07E    ;
                      BCC CODE_00AABE                     ;AAB5|----/----\----;9007    ;
CODE_00AAB7:          LDA.W #$FF00                        ;AAB7|----/----\----;A900FF  ;
                      STA.B !_A                           ;AABA|----/----\----;850A    ;
                      BNE CODE_00AACD                     ;AABC|----/----\----;D00F    ;
CODE_00AABE:          CPY.B #$6E                          ;AABE|----/----\----;C06E    ;
                      BCC CODE_00AAC8                     ;AAC0|----/----\----;9006    ;
                      CPY.B #$70                          ;AAC2|----/----\----;C070    ;
                      BCS CODE_00AAC8                     ;AAC4|----/----\----;B002    ;
                      BCC CODE_00AAB7                     ;AAC6|----/----\----;90EF    ;
CODE_00AAC8:          LDA.W #$0000                        ;AAC8|----/----\----;A90000  ;
                      STA.B !_A                           ;AACB|----/----\----;850A    ;
CODE_00AACD:          LDX.B #$07                          ;AACD|----/----\----;A207    ;
                    - LDA.B [!_0]                         ;AACF|----/----\----;A700    ;
                      STA.W !HW_VMDATA                    ;AAD1|----/----\----;8D1821  ; Data for VRAM Write (Low Byte)
                      XBA                                 ;AAD4|----/----\----;EB      ;
                      ORA.B [!_0]                         ;AAD5|----/----\----;0700    ;
                      STA.W !GfxBppConvertBuffer,X        ;AAD7|----/----\----;9DB21B  ;
                      INC.B !_0                           ;AADA|----/----\----;E600    ;
                      INC.B !_0                           ;AADC|----/----\----;E600    ;
                      DEX                                 ;AADE|----/----\----;CA      ;
                      BPL -                               ;AADF|----/----\----;10EE    ;
                      LDX.B #$07                          ;AAE1|----/----\----;A207    ;
                    - LDA.B [!_0]                         ;AAE3|----/----\----;A700    ;
                      AND.W #$00FF                        ;AAE5|----/----\----;29FF00  ;
                      STA.B !_C                           ;AAE8|----/----\----;850C    ;
                      LDA.B [!_0]                         ;AAEA|----/----\----;A700    ;
                      XBA                                 ;AAEC|----/----\----;EB      ;
                      ORA.W !GfxBppConvertBuffer,X        ;AAED|----/----\----;1DB21B  ;
                      AND.B !_A                           ;AAF0|----/----\----;250A    ;
                      ORA.B !_C                           ;AAF2|----/----\----;050C    ;
                      STA.W !HW_VMDATA                    ;AAF4|----/----\----;8D1821  ; Data for VRAM Write (Low Byte)
                      INC.B !_0                           ;AAF7|----/----\----;E600    ;
                      DEX                                 ;AAF9|----/----\----;CA      ;
                      BPL -                               ;AAFA|----/----\----;10E7    ;
                      DEY                                 ;AAFC|----/----\----;88      ;
                      BPL CODE_00AAAE                     ;AAFD|----/----\----;10AF    ;
                      SEP #$20                            ;AAFF|----/----\----;E220    ; Accum (8 bit) 
                      RTS                                 ;AB01|----/----\----;60      ; Return 
                                                          ;                   ;        ;
FilterSomeRAM:        LDA.W #$FF00                        ;AB02|----/----\----;A900FF  ; Accum (16 bit) 
                      STA.B !_A                           ;AB05|----/----\----;850A    ;
                      LDY.B #$7F                          ;AB07|----/----\----;A07F    ;
Upload____ToVRAM:     CPY.B #$08                          ;AB09|----/----\----;C008    ; \Completely pointless code. 
                      BCS +                               ;AB0B|----/----\----;B000    ; /(Why not just NOPing it out, Nintendo?) 
                    + LDX.B #$07                          ;AB0D|----/----\----;A207    ;
                    - LDA.B [!_0]                         ;AB0F|----/----\----;A700    ; \ Okay, so take [$00], store 
                      STA.W !HW_VMDATA                    ;AB11|----/----\----;8D1821  ;  |it to VRAM, then bitwise ; Data for VRAM Write (Low Byte)
                      XBA                                 ;AB14|----/----\----;EB      ;  |OR the high and low bytes together 
                      ORA.B [!_0]                         ;AB15|----/----\----;0700    ;  |store in both bytes of A 
                      STA.W !GfxBppConvertBuffer,X        ;AB17|----/----\----;9DB21B  ; /and store to $1BB2,x 
                      INC.B !_0                           ;AB1A|----/----\----;E600    ; \Increment $7E:0000 by 2 
                      INC.B !_0                           ;AB1C|----/----\----;E600    ; / 
                      DEX                                 ;AB1E|----/----\----;CA      ; \And continue on another 7 times (or 8 times total) 
                      BPL -                               ;AB1F|----/----\----;10EE    ; / 
                      LDX.B #$07                          ;AB21|----/----\----;A207    ; hm..  It's like a FOR Y{FOR X{ } } thing ...yeah... 
                    - LDA.B [!_0]                         ;AB23|----/----\----;A700    ;
                      AND.W #$00FF                        ;AB25|----/----\----;29FF00  ; A normal byte becomes 2 anti-compressed bytes. 
                      STA.B !_C                           ;AB28|----/----\----;850C    ; I'm going up, to try and find out what's supposed to set $00-$02 for this routine. 
                      LDA.B [!_0]                         ;AB2A|----/----\----;A700    ; AHA, check $00/BA28.  It writes a RAM address to $00-$02, $7EAD00 
                      XBA                                 ;AB2C|----/----\----;EB      ; So...  Now to find otu what sets *That* 
                      ORA.W !GfxBppConvertBuffer,X        ;AB2D|----/----\----;1DB21B  ; ...this place gives me headaches... Can't we work on some other code? :( 
                      AND.B !_A                           ;AB30|----/----\----;250A    ; Sure, go ahead.  anyways, this seems to upload the decompressed GFX 
                      ORA.B !_C                           ;AB32|----/----\----;050C    ; while scrambling it afterwards (o_O). 
                      STA.W !HW_VMDATA                    ;AB34|----/----\----;8D1821  ; Okay... WHAT THE HELL? ; Data for VRAM Write (Low Byte)
                      INC.B !_0                           ;AB37|----/----\----;E600    ; I'll have nightmares about this routine for a few years. :( 
                      DEX                                 ;AB39|----/----\----;CA      ;
                      BPL -                               ;AB3A|----/----\----;10E7    ; Ouch. 
                      DEY                                 ;AB3C|----/----\----;88      ;
                      BPL Upload____ToVRAM                ;AB3D|----/----\----;10CA    ;
                      SEP #$20                            ;AB3F|----/----\----;E220    ; Accum (8 bit) 
                      RTS                                 ;AB41|----/----\----;60      ; Return 
                                                          ;                   ;        ;
CODE_00AB42:          LDY.B #$27                          ;AB42|----/----\----;A027    ;
                      JSL CODE_00BA28                     ;AB44|----/----\----;2228BA00;
                      REP #$10                            ;AB48|----/----\----;C210    ; Index (16 bit) 
                      LDY.W #$0000                        ;AB4A|----/----\----;A00000  ;
                      LDX.W #$03FF                        ;AB4D|----/----\----;A2FF03  ;
                    - LDA.B [!_0],Y                       ;AB50|----/----\----;B700    ;
                      STA.B !_F                           ;AB52|----/----\----;850F    ;
                      JSR CODE_00ABC4                     ;AB54|----/----\----;20C4AB  ;
                      LDA.B !_4                           ;AB57|----/----\----;A504    ;
                      STA.W $2119                         ;AB59|----/----\----;8D1921  ; Data for VRAM Write (High Byte)
                      JSR CODE_00ABC4                     ;AB5C|----/----\----;20C4AB  ;
                      LDA.B !_4                           ;AB5F|----/----\----;A504    ;
                      STA.W $2119                         ;AB61|----/----\----;8D1921  ; Data for VRAM Write (High Byte)
                      STZ.B !_4                           ;AB64|----/----\----;6404    ;
                      ROL.B !_F                           ;AB66|----/----\----;260F    ;
                      ROL.B !_4                           ;AB68|----/----\----;2604    ;
                      ROL.B !_F                           ;AB6A|----/----\----;260F    ;
                      ROL.B !_4                           ;AB6C|----/----\----;2604    ;
                      INY                                 ;AB6E|----/----\----;C8      ;
                      LDA.B [!_0],Y                       ;AB6F|----/----\----;B700    ;
                      STA.B !_F                           ;AB71|----/----\----;850F    ;
                      ROL.B !_F                           ;AB73|----/----\----;260F    ;
                      ROL.B !_4                           ;AB75|----/----\----;2604    ;
                      LDA.B !_4                           ;AB77|----/----\----;A504    ;
                      STA.W $2119                         ;AB79|----/----\----;8D1921  ; Data for VRAM Write (High Byte)
                      JSR CODE_00ABC4                     ;AB7C|----/----\----;20C4AB  ;
                      LDA.B !_4                           ;AB7F|----/----\----;A504    ;
                      STA.W $2119                         ;AB81|----/----\----;8D1921  ; Data for VRAM Write (High Byte)
                      JSR CODE_00ABC4                     ;AB84|----/----\----;20C4AB  ;
                      LDA.B !_4                           ;AB87|----/----\----;A504    ;
                      STA.W $2119                         ;AB89|----/----\----;8D1921  ; Data for VRAM Write (High Byte)
                      STZ.B !_4                           ;AB8C|----/----\----;6404    ;
                      ROL.B !_F                           ;AB8E|----/----\----;260F    ;
                      ROL.B !_4                           ;AB90|----/----\----;2604    ;
                      INY                                 ;AB92|----/----\----;C8      ;
                      LDA.B [!_0],Y                       ;AB93|----/----\----;B700    ;
                      STA.B !_F                           ;AB95|----/----\----;850F    ;
                      ROL.B !_F                           ;AB97|----/----\----;260F    ;
                      ROL.B !_4                           ;AB99|----/----\----;2604    ;
                      ROL.B !_F                           ;AB9B|----/----\----;260F    ;
                      ROL.B !_4                           ;AB9D|----/----\----;2604    ;
                      LDA.B !_4                           ;AB9F|----/----\----;A504    ;
                      STA.W $2119                         ;ABA1|----/----\----;8D1921  ; Data for VRAM Write (High Byte)
                      JSR CODE_00ABC4                     ;ABA4|----/----\----;20C4AB  ;
                      LDA.B !_4                           ;ABA7|----/----\----;A504    ;
                      STA.W $2119                         ;ABA9|----/----\----;8D1921  ; Data for VRAM Write (High Byte)
                      JSR CODE_00ABC4                     ;ABAC|----/----\----;20C4AB  ;
                      LDA.B !_4                           ;ABAF|----/----\----;A504    ;
                      STA.W $2119                         ;ABB1|----/----\----;8D1921  ; Data for VRAM Write (High Byte)
                      INY                                 ;ABB4|----/----\----;C8      ;
                      DEX                                 ;ABB5|----/----\----;CA      ;
                      BPL -                               ;ABB6|----/----\----;1098    ;
                      LDX.W #$2000                        ;ABB8|----/----\----;A20020  ;
                    - STZ.W $2119                         ;ABBB|----/----\----;9C1921  ; Data for VRAM Write (High Byte)
                      DEX                                 ;ABBE|----/----\----;CA      ;
                      BNE -                               ;ABBF|----/----\----;D0FA    ;
                      SEP #$10                            ;ABC1|----/----\----;E210    ; Index (8 bit) 
                      RTS                                 ;ABC3|----/----\----;60      ; Return 
                                                          ;                   ;        ;
CODE_00ABC4:          STZ.B !_4                           ;ABC4|----/----\----;6404    ;
                      ROL.B !_F                           ;ABC6|----/----\----;260F    ;
                      ROL.B !_4                           ;ABC8|----/----\----;2604    ;
                      ROL.B !_F                           ;ABCA|----/----\----;260F    ;
                      ROL.B !_4                           ;ABCC|----/----\----;2604    ;
                      ROL.B !_F                           ;ABCE|----/----\----;260F    ;
                      ROL.B !_4                           ;ABD0|----/----\----;2604    ;
                      RTS                                 ;ABD2|----/----\----;60      ; Return 
                                                          ;                   ;        ;
                                                          ;                   ;        ;
DATA_00ABD3:          db $00,$18,$30,$48,$60,$78,$90,$A8  ;ABD3|----/----\----;        ;
                      db $00,$14,$28,$3C                  ;ABDB|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00ABDF:          db $00,$00,$38,$00,$70,$00,$A8,$00  ;ABDF|----/----\----;        ;
                      db $E0,$00,$18,$01,$50,$01          ;ABE7|----/----\----;        ;
                                                          ;                   ;        ;
LoadPalette:          REP #$30                            ;ABED|----/----\----;C230    ; 16 bit A, X and Y ; Index (16 bit) Accum (16 bit) 
                      LDA.W #$7FDD                        ;ABEF|----/----\----;A9DD7F  ; \  
                      STA.B !_4                           ;ABF2|----/----\----;8504    ;  |Set color 1 in all object palettes to white 
                      LDX.W #$0002                        ;ABF4|----/----\----;A20200  ;  | 
                      JSR LoadCol8Pal                     ;ABF7|----/----\----;20EDAC  ; /  
                      LDA.W #$7FFF                        ;ABFA|----/----\----;A9FF7F  ; \  
                      STA.B !_4                           ;ABFD|----/----\----;8504    ;  |Set color 1 in all sprite palettes to white 
                      LDX.W #$0102                        ;ABFF|----/----\----;A20201  ;  | 
                      JSR LoadCol8Pal                     ;AC02|----/----\----;20EDAC  ; /  
                      LDA.W #$B170                        ;AC05|----/----\----;A970B1  ; \  
                      STA.B !_0                           ;AC08|----/----\----;8500    ;  | 
                      LDA.W #$0010                        ;AC0A|----/----\----;A91000  ;  |Load colors 8-16 in the first two object palettes from 00/B170 
                      STA.B !_4                           ;AC0D|----/----\----;8504    ;  |(Layer 3 palettes) 
                      LDA.W #$0007                        ;AC0F|----/----\----;A90700  ;  | 
                      STA.B !_6                           ;AC12|----/----\----;8506    ;  | 
                      LDA.W #$0001                        ;AC14|----/----\----;A90100  ;  | 
                      STA.B !_8                           ;AC17|----/----\----;8508    ;  | 
                      JSR LoadColors                      ;AC19|----/----\----;20FFAC  ; /  
                      LDA.W #$B250                        ;AC1C|----/----\----;A950B2  ; \  
                      STA.B !_0                           ;AC1F|----/----\----;8500    ;  | 
                      LDA.W #$0084                        ;AC21|----/----\----;A98400  ;  |Load colors 2-7 in palettes 4-D from 00/B250 
                      STA.B !_4                           ;AC24|----/----\----;8504    ;  |(Object and sprite palettes) 
                      LDA.W #$0005                        ;AC26|----/----\----;A90500  ;  | 
                      STA.B !_6                           ;AC29|----/----\----;8506    ;  | 
                      LDA.W #$0009                        ;AC2B|----/----\----;A90900  ;  | 
                      STA.B !_8                           ;AC2E|----/----\----;8508    ;  | 
                      JSR LoadColors                      ;AC30|----/----\----;20FFAC  ; /  
                      LDA.W !BackAreaColor                ;AC33|----/----\----;AD2F19  ; \  
                      AND.W #$000F                        ;AC36|----/----\----;290F00  ;  | 
                      ASL A                               ;AC39|----/----\----;0A      ;  |Load background color 
                      TAY                                 ;AC3A|----/----\----;A8      ;  | 
                      LDA.W Palettes_,Y                   ;AC3B|----/----\----;B9A0B0  ;  | 
                      STA.W !BackgroundColor              ;AC3E|----/----\----;8D0107  ; /  
                      LDA.W #$B190                        ;AC41|----/----\----;A990B1  ; \Store base address in $00, ... 
                      STA.B !_0                           ;AC44|----/----\----;8500    ; / 
                      LDA.W !ForegroundPalette            ;AC46|----/----\----;AD2D19  ; \...get current object palette, ... 
                      AND.W #$000F                        ;AC49|----/----\----;290F00  ; / 
                      TAY                                 ;AC4C|----/----\----;A8      ; \  
                      LDA.W DATA_00ABD3,Y                 ;AC4D|----/----\----;B9D3AB  ;  | 
                      AND.W #$00FF                        ;AC50|----/----\----;29FF00  ;  |...use it to figure out where to load from, ... 
                      CLC                                 ;AC53|----/----\----;18      ;  | 
                      ADC.B !_0                           ;AC54|----/----\----;6500    ;  |...add it to the base address... 
                      STA.B !_0                           ;AC56|----/----\----;8500    ; / ...and store it in $00 
                      LDA.W #$0044                        ;AC58|----/----\----;A94400  ; \  
                      STA.B !_4                           ;AC5B|----/----\----;8504    ;  | 
                      LDA.W #$0005                        ;AC5D|----/----\----;A90500  ;  | 
                      STA.B !_6                           ;AC60|----/----\----;8506    ;  |Load colors 2-7 in object palettes 2 and 3 from the address in $00 
                      LDA.W #$0001                        ;AC62|----/----\----;A90100  ;  | 
                      STA.B !_8                           ;AC65|----/----\----;8508    ;  | 
                      JSR LoadColors                      ;AC67|----/----\----;20FFAC  ; /  
                      LDA.W #$B318                        ;AC6A|----/----\----;A918B3  ; \Store base address in $00, ... 
                      STA.B !_0                           ;AC6D|----/----\----;8500    ; / 
                      LDA.W !SpritePalette                ;AC6F|----/----\----;AD2E19  ; \...get current sprite palette, ... 
                      AND.W #$000F                        ;AC72|----/----\----;290F00  ; / 
                      TAY                                 ;AC75|----/----\----;A8      ; \  
                      LDA.W DATA_00ABD3,Y                 ;AC76|----/----\----;B9D3AB  ;  | 
                      AND.W #$00FF                        ;AC79|----/----\----;29FF00  ;  |...use it to figure out where to load from, ... 
                      CLC                                 ;AC7C|----/----\----;18      ;  | 
                      ADC.B !_0                           ;AC7D|----/----\----;6500    ;  |...add it to the base address... 
                      STA.B !_0                           ;AC7F|----/----\----;8500    ; / ...and store it in $00 
                      LDA.W #$01C4                        ;AC81|----/----\----;A9C401  ; \  
                      STA.B !_4                           ;AC84|----/----\----;8504    ;  | 
                      LDA.W #$0005                        ;AC86|----/----\----;A90500  ;  | 
                      STA.B !_6                           ;AC89|----/----\----;8506    ;  |Load colors 2-7 in sprite palettes 6 and 7 from the address in $00 
                      LDA.W #$0001                        ;AC8B|----/----\----;A90100  ;  | 
                      STA.B !_8                           ;AC8E|----/----\----;8508    ;  | 
                      JSR LoadColors                      ;AC90|----/----\----;20FFAC  ; /  
                      LDA.W #$B0B0                        ;AC93|----/----\----;A9B0B0  ; \Store bade address in $00, ... 
                      STA.B !_0                           ;AC96|----/----\----;8500    ; / 
                      LDA.W !BackgroundPalette            ;AC98|----/----\----;AD3019  ; \...get current background palette, ... 
                      AND.W #$000F                        ;AC9B|----/----\----;290F00  ; / 
                      TAY                                 ;AC9E|----/----\----;A8      ; \  
                      LDA.W DATA_00ABD3,Y                 ;AC9F|----/----\----;B9D3AB  ;  | 
                      AND.W #$00FF                        ;ACA2|----/----\----;29FF00  ;  |...use it to figure out where to load from, ... 
                      CLC                                 ;ACA5|----/----\----;18      ;  | 
                      ADC.B !_0                           ;ACA6|----/----\----;6500    ;  |...add it to the base address... 
                      STA.B !_0                           ;ACA8|----/----\----;8500    ; / ...and store it in $00 
                      LDA.W #$0004                        ;ACAA|----/----\----;A90400  ; \  
                      STA.B !_4                           ;ACAD|----/----\----;8504    ;  | 
                      LDA.W #$0005                        ;ACAF|----/----\----;A90500  ;  | 
                      STA.B !_6                           ;ACB2|----/----\----;8506    ;  |Load colors 2-7 in object palettes 0 and 1 from the address in $00 
                      LDA.W #$0001                        ;ACB4|----/----\----;A90100  ;  | 
                      STA.B !_8                           ;ACB7|----/----\----;8508    ;  | 
                      JSR LoadColors                      ;ACB9|----/----\----;20FFAC  ; /  
                      LDA.W #$B674                        ;ACBC|----/----\----;A974B6  ; \  
                      STA.B !_0                           ;ACBF|----/----\----;8500    ;  | 
                      LDA.W #$0052                        ;ACC1|----/----\----;A95200  ;  | 
                      STA.B !_4                           ;ACC4|----/----\----;8504    ;  | 
                      LDA.W #$0006                        ;ACC6|----/----\----;A90600  ;  |Load colors 9-F in object palettes 2-4 from 00/B674 
                      STA.B !_6                           ;ACC9|----/----\----;8506    ;  | 
                      LDA.W #$0002                        ;ACCB|----/----\----;A90200  ;  | 
                      STA.B !_8                           ;ACCE|----/----\----;8508    ;  | 
                      JSR LoadColors                      ;ACD0|----/----\----;20FFAC  ; /  
                      LDA.W #$B674                        ;ACD3|----/----\----;A974B6  ; \  
                      STA.B !_0                           ;ACD6|----/----\----;8500    ;  | 
                      LDA.W #$0132                        ;ACD8|----/----\----;A93201  ;  | 
                      STA.B !_4                           ;ACDB|----/----\----;8504    ;  | 
                      LDA.W #$0006                        ;ACDD|----/----\----;A90600  ;  |Load colors 9-F in sprite palettes 1-3 from 00/B674 
                      STA.B !_6                           ;ACE0|----/----\----;8506    ;  | 
                      LDA.W #$0002                        ;ACE2|----/----\----;A90200  ;  | 
                      STA.B !_8                           ;ACE5|----/----\----;8508    ;  | 
                      JSR LoadColors                      ;ACE7|----/----\----;20FFAC  ; /  
                      SEP #$30                            ;ACEA|----/----\----;E230    ; 8 bit A, X and Y ; Index (8 bit) Accum (8 bit) 
                      RTS                                 ;ACEC|----/----\----;60      ; Return 
                                                          ;                   ;        ;
LoadCol8Pal:          LDY.W #$0007                        ;ACED|----/----\----;A00700  ; Index (16 bit) Accum (16 bit) 
                    - LDA.B !_4                           ;ACF0|----/----\----;A504    ;
                      STA.W !MainPalette,X                ;ACF2|----/----\----;9D0307  ;
                      TXA                                 ;ACF5|----/----\----;8A      ;
                      CLC                                 ;ACF6|----/----\----;18      ;
                      ADC.W #$0020                        ;ACF7|----/----\----;692000  ;
                      TAX                                 ;ACFA|----/----\----;AA      ;
                      DEY                                 ;ACFB|----/----\----;88      ;
                      BPL -                               ;ACFC|----/----\----;10F2    ;
                      RTS                                 ;ACFE|----/----\----;60      ; Return 
                                                          ;                   ;        ;
LoadColors:           LDX.B !_4                           ;ACFF|----/----\----;A604    ;
                      LDY.B !_6                           ;AD01|----/----\----;A406    ;
                    - LDA.B (!_0)                         ;AD03|----/----\----;B200    ;
                      STA.W !MainPalette,X                ;AD05|----/----\----;9D0307  ;
                      INC.B !_0                           ;AD08|----/----\----;E600    ;
                      INC.B !_0                           ;AD0A|----/----\----;E600    ;
                      INX                                 ;AD0C|----/----\----;E8      ;
                      INX                                 ;AD0D|----/----\----;E8      ;
                      DEY                                 ;AD0E|----/----\----;88      ;
                      BPL -                               ;AD0F|----/----\----;10F2    ;
                      LDA.B !_4                           ;AD11|----/----\----;A504    ;
                      CLC                                 ;AD13|----/----\----;18      ;
                      ADC.W #$0020                        ;AD14|----/----\----;692000  ;
                      STA.B !_4                           ;AD17|----/----\----;8504    ;
                      DEC.B !_8                           ;AD19|----/----\----;C608    ;
                      BPL LoadColors                      ;AD1B|----/----\----;10E2    ;
                      RTS                                 ;AD1D|----/----\----;60      ; Return 
                                                          ;                   ;        ;
                                                          ;                   ;        ;
DATA_00AD1E:          db $01,$00,$03,$04,$03,$05,$02      ;AD1E|----/----\----;        ;
                                                          ;                   ;        ;
CODE_00AD25:          REP #$30                            ;AD25|----/----\----;C230    ; Index (16 bit) Accum (16 bit) 
                      LDY.W #$B3D8                        ;AD27|----/----\----;A0D8B3  ;
                      LDA.W !OWLevelTileSettings+$48      ;AD2A|----/----\----;ADEA1E  ;
                      BPL +                               ;AD2D|----/----\----;1003    ;
                      LDY.W #$B732                        ;AD2F|----/----\----;A032B7  ;
                    + STY.B !_0                           ;AD32|----/----\----;8400    ;
                      LDA.W !ObjectTileset                ;AD34|----/----\----;AD3119  ;
                      AND.W #$000F                        ;AD37|----/----\----;290F00  ;
                      DEC A                               ;AD3A|----/----\----;3A      ;
                      TAY                                 ;AD3B|----/----\----;A8      ;
                      LDA.W DATA_00AD1E,Y                 ;AD3C|----/----\----;B91EAD  ;
                      AND.W #$00FF                        ;AD3F|----/----\----;29FF00  ;
                      ASL A                               ;AD42|----/----\----;0A      ;
                      TAY                                 ;AD43|----/----\----;A8      ;
                      LDA.W DATA_00ABDF,Y                 ;AD44|----/----\----;B9DFAB  ;
                      CLC                                 ;AD47|----/----\----;18      ;
                      ADC.B !_0                           ;AD48|----/----\----;6500    ;
                      STA.B !_0                           ;AD4A|----/----\----;8500    ;
                      LDA.W #$0082                        ;AD4C|----/----\----;A98200  ;
                      STA.B !_4                           ;AD4F|----/----\----;8504    ;
                      LDA.W #$0006                        ;AD51|----/----\----;A90600  ;
                      STA.B !_6                           ;AD54|----/----\----;8506    ;
                      LDA.W #$0003                        ;AD56|----/----\----;A90300  ;
                      STA.B !_8                           ;AD59|----/----\----;8508    ;
                      JSR LoadColors                      ;AD5B|----/----\----;20FFAC  ;
                      LDA.W #$B528                        ;AD5E|----/----\----;A928B5  ;
                      STA.B !_0                           ;AD61|----/----\----;8500    ;
                      LDA.W #$0052                        ;AD63|----/----\----;A95200  ;
                      STA.B !_4                           ;AD66|----/----\----;8504    ;
                      LDA.W #$0006                        ;AD68|----/----\----;A90600  ;
                      STA.B !_6                           ;AD6B|----/----\----;8506    ;
                      LDA.W #$0005                        ;AD6D|----/----\----;A90500  ;
                      STA.B !_8                           ;AD70|----/----\----;8508    ;
                      JSR LoadColors                      ;AD72|----/----\----;20FFAC  ;
                      LDA.W #$B57C                        ;AD75|----/----\----;A97CB5  ;
                      STA.B !_0                           ;AD78|----/----\----;8500    ;
                      LDA.W #$0102                        ;AD7A|----/----\----;A90201  ;
                      STA.B !_4                           ;AD7D|----/----\----;8504    ;
                      LDA.W #$0006                        ;AD7F|----/----\----;A90600  ;
                      STA.B !_6                           ;AD82|----/----\----;8506    ;
                      LDA.W #$0007                        ;AD84|----/----\----;A90700  ;
                      STA.B !_8                           ;AD87|----/----\----;8508    ;
                      JSR LoadColors                      ;AD89|----/----\----;20FFAC  ;
                      LDA.W #$B5EC                        ;AD8C|----/----\----;A9ECB5  ;
                      STA.B !_0                           ;AD8F|----/----\----;8500    ;
                      LDA.W #$0010                        ;AD91|----/----\----;A91000  ;
                      STA.B !_4                           ;AD94|----/----\----;8504    ;
                      LDA.W #$0007                        ;AD96|----/----\----;A90700  ;
                      STA.B !_6                           ;AD99|----/----\----;8506    ;
                      LDA.W #$0001                        ;AD9B|----/----\----;A90100  ;
                      STA.B !_8                           ;AD9E|----/----\----;8508    ;
                      JSR LoadColors                      ;ADA0|----/----\----;20FFAC  ;
                      SEP #$30                            ;ADA3|----/----\----;E230    ; Index (8 bit) Accum (8 bit) 
                      RTS                                 ;ADA5|----/----\----;60      ; Return 
                                                          ;                   ;        ;
CODE_00ADA6:          REP #$30                            ;ADA6|----/----\----;C230    ; Index (16 bit) Accum (16 bit) 
                      LDA.W #$B63C                        ;ADA8|----/----\----;A93CB6  ;
                      STA.B !_0                           ;ADAB|----/----\----;8500    ;
                      LDA.W #$0010                        ;ADAD|----/----\----;A91000  ;
                      STA.B !_4                           ;ADB0|----/----\----;8504    ;
                      LDA.W #$0007                        ;ADB2|----/----\----;A90700  ;
                      STA.B !_6                           ;ADB5|----/----\----;8506    ;
                      LDA.W #$0000                        ;ADB7|----/----\----;A90000  ;
                      STA.B !_8                           ;ADBA|----/----\----;8508    ;
                      JSR LoadColors                      ;ADBC|----/----\----;20FFAC  ;
                      LDA.W #$B62C                        ;ADBF|----/----\----;A92CB6  ;
                      STA.B !_0                           ;ADC2|----/----\----;8500    ;
                      LDA.W #$0030                        ;ADC4|----/----\----;A93000  ;
                      STA.B !_4                           ;ADC7|----/----\----;8504    ;
                      LDA.W #$0007                        ;ADC9|----/----\----;A90700  ;
                      STA.B !_6                           ;ADCC|----/----\----;8506    ;
                      LDA.W #$0000                        ;ADCE|----/----\----;A90000  ;
                      STA.B !_8                           ;ADD1|----/----\----;8508    ;
                      JSR LoadColors                      ;ADD3|----/----\----;20FFAC  ;
                      SEP #$30                            ;ADD6|----/----\----;E230    ; Index (8 bit) Accum (8 bit) 
                      RTS                                 ;ADD8|----/----\----;60      ; Return 
                                                          ;                   ;        ;
CODE_00ADD9:          JSR LoadPalette                     ;ADD9|----/----\----;20EDAB  ;
                      REP #$30                            ;ADDC|----/----\----;C230    ; Index (16 bit) Accum (16 bit) 
                      LDA.W #$0017                        ;ADDE|----/----\----;A91700  ;
                      STA.W !BackgroundColor              ;ADE1|----/----\----;8D0107  ;
                      LDA.W #$B170                        ;ADE4|----/----\----;A970B1  ;
                      STA.B !_0                           ;ADE7|----/----\----;8500    ;
                      LDA.W #$0010                        ;ADE9|----/----\----;A91000  ;
                      STA.B !_4                           ;ADEC|----/----\----;8504    ;
                      LDA.W #$0007                        ;ADEE|----/----\----;A90700  ;
                      STA.B !_6                           ;ADF1|----/----\----;8506    ;
                      LDA.W #$0001                        ;ADF3|----/----\----;A90100  ;
                      STA.B !_8                           ;ADF6|----/----\----;8508    ;
                      JSR LoadColors                      ;ADF8|----/----\----;20FFAC  ;
                      LDA.W #$B65C                        ;ADFB|----/----\----;A95CB6  ;
                      STA.B !_0                           ;ADFE|----/----\----;8500    ;
                      LDA.W #$0000                        ;AE00|----/----\----;A90000  ;
                      STA.B !_4                           ;AE03|----/----\----;8504    ;
                      LDA.W #$0007                        ;AE05|----/----\----;A90700  ;
                      STA.B !_6                           ;AE08|----/----\----;8506    ;
                      LDA.W #$0000                        ;AE0A|----/----\----;A90000  ;
                      STA.B !_8                           ;AE0D|----/----\----;8508    ;
                      JSR LoadColors                      ;AE0F|----/----\----;20FFAC  ;
                      SEP #$30                            ;AE12|----/----\----;E230    ; Index (8 bit) Accum (8 bit) 
                      RTS                                 ;AE14|----/----\----;60      ; Return 
                                                          ;                   ;        ;
CODE_00AE15:          LDA.B #$02                          ;AE15|----/----\----;A902    ;
                      STA.W !SpritePalette                ;AE17|----/----\----;8D2E19  ;
                      LDA.B #$07                          ;AE1A|----/----\----;A907    ;
                      STA.W !ForegroundPalette            ;AE1C|----/----\----;8D2D19  ;
                      JSR LoadPalette                     ;AE1F|----/----\----;20EDAB  ;
                      REP #$30                            ;AE22|----/----\----;C230    ; Index (16 bit) Accum (16 bit) 
                      LDA.W #$0017                        ;AE24|----/----\----;A91700  ;
                      STA.W !BackgroundColor              ;AE27|----/----\----;8D0107  ;
                      LDA.W #$B5F4                        ;AE2A|----/----\----;A9F4B5  ;
                      STA.B !_0                           ;AE2D|----/----\----;8500    ;
                      LDA.W #$0018                        ;AE2F|----/----\----;A91800  ;
                      STA.B !_4                           ;AE32|----/----\----;8504    ;
                      LDA.W #$0003                        ;AE34|----/----\----;A90300  ;
                      STA.B !_6                           ;AE37|----/----\----;8506    ;
                      STZ.B !_8                           ;AE39|----/----\----;6408    ;
                      JSR LoadColors                      ;AE3B|----/----\----;20FFAC  ;
                      SEP #$30                            ;AE3E|----/----\----;E230    ; Index (8 bit) Accum (8 bit) 
                      RTS                                 ;AE40|----/----\----;60      ; Return 
                                                          ;                   ;        ;
                                                          ;                   ;        ;
DATA_00AE41:          db $00,$05,$0A                      ;AE41|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00AE44:          db $20,$40,$80                      ;AE44|----/----\----;        ;
                                                          ;                   ;        ;
CODE_00AE47:          LDX.B #$02                          ;AE47|----/----\----;A202    ;
CODE_00AE49:          REP #$20                            ;AE49|----/----\----;C220    ; Accum (16 bit) 
                      LDA.W !BackgroundColor              ;AE4B|----/----\----;AD0107  ;
                      LDY.W DATA_00AE41,X                 ;AE4E|----/----\----;BC41AE  ;
CODE_00AE51:          DEY                                 ;AE51|----/----\----;88      ;
                      BMI CODE_00AE57                     ;AE52|----/----\----;3003    ;
                      LSR A                               ;AE54|----/----\----;4A      ;
                      BRA CODE_00AE51                     ;AE55|----/----\----;80FA    ;
                                                          ;                   ;        ;
CODE_00AE57:          SEP #$20                            ;AE57|----/----\----;E220    ; Accum (8 bit) 
                      AND.B #$1F                          ;AE59|----/----\----;291F    ;
                      ORA.W DATA_00AE44,X                 ;AE5B|----/----\----;1D44AE  ;
                      STA.W !HW_COLDATA                   ;AE5E|----/----\----;8D3221  ; Fixed Color Data
                      DEX                                 ;AE61|----/----\----;CA      ;
                      BPL CODE_00AE49                     ;AE62|----/----\----;10E5    ;
                      RTS                                 ;AE64|----/----\----;60      ; Return 
                                                          ;                   ;        ;
                                                          ;                   ;        ;
DATA_00AE65:          db $1F,$00,$E0,$03,$00,$7C          ;AE65|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00AE6B:          db $FF,$FF,$E0,$FF,$00,$FC          ;AE6B|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00AE71:          db $01,$00,$20,$00,$00,$04          ;AE71|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00AE77:          db $00,$00,$00,$00,$01,$00,$00,$00  ;AE77|----/----\----;        ;
                      db $00,$80,$00,$80,$20,$80,$00,$04  ;AE7F|----/----\----;        ;
                      db $80,$80,$80,$80,$08,$82,$40,$10  ;AE87|----/----\----;        ;
                      db $20,$84,$20,$84,$44,$88,$10,$22  ;AE8F|----/----\----;        ;
                      db $88,$88,$88,$88,$22,$91,$88,$44  ;AE97|----/----\----;        ;
                      db $48,$92,$48,$92,$92,$A4,$24,$49  ;AE9F|----/----\----;        ;
                      db $A4,$A4,$A4,$A4,$49,$A9,$94,$52  ;AEA7|----/----\----;        ;
                      db $AA,$AA,$94,$52,$AA,$AA,$54,$55  ;AEAF|----/----\----;        ;
                      db $AA,$AA,$AA,$AA,$AA,$D5,$AA,$AA  ;AEB7|----/----\----;        ;
                      db $AA,$D5,$AA,$D5,$B5,$D6,$6A,$AD  ;AEBF|----/----\----;        ;
                      db $DA,$DA,$DA,$DA,$6D,$DB,$DA,$B6  ;AEC7|----/----\----;        ;
                      db $B6,$ED,$B6,$ED,$DD,$EE,$76,$BB  ;AECF|----/----\----;        ;
                      db $EE,$EE,$EE,$EE,$BB,$F7,$EE,$DD  ;AED7|----/----\----;        ;
                      db $DE,$FB,$DE,$FB,$F7,$FD,$BE,$EF  ;AEDF|----/----\----;        ;
                      db $FE,$FE,$FE,$FE,$DF,$FF,$FE,$FB  ;AEE7|----/----\----;        ;
                      db $FE,$FF,$FE,$FF,$FF,$FF,$FE,$FF  ;AEEF|----/----\----;        ;
DATA_00AEF7:          db $00,$80,$00,$40,$00,$20,$00,$10  ;AEF7|----/----\----;        ;
                      db $00,$08,$00,$04,$00,$02,$00,$01  ;AEFF|----/----\----;        ;
                      db $80,$00,$40,$00,$20,$00,$10,$00  ;AF07|----/----\----;        ;
                      db $08,$00,$04,$00,$02,$00,$01,$00  ;AF0F|----/----\----;        ;
                                                          ;                   ;        ;
CODE_00AF17:          LDY.W !EndLevelTimer                ;AF17|----/----\----;AC9314  ;
                      LDA.B !TrueFrame                    ;AF1A|----/----\----;A513    ;
                      LSR A                               ;AF1C|----/----\----;4A      ;
                      BCC +                               ;AF1D|----/----\----;9006    ;
                      DEY                                 ;AF1F|----/----\----;88      ;
                      BEQ +                               ;AF20|----/----\----;F003    ;
                      STY.W !EndLevelTimer                ;AF22|----/----\----;8C9314  ;
                    + CPY.B #$A0                          ;AF25|----/----\----;C0A0    ;
                      BCS CODE_00AF35                     ;AF27|----/----\----;B00C    ;
                      LDA.B #$04                          ;AF29|----/----\----;A904    ;
                      TRB.B !ColorSettings                ;AF2B|----/----\----;1440    ;
                      LDA.B #$09                          ;AF2D|----/----\----;A909    ;
                      STA.B !MainBGMode                   ;AF2F|----/----\----;853E    ;
                      JSL CODE_05CBFF                     ;AF31|----/----\----;22FFCB05;
CODE_00AF35:          LDA.B !TrueFrame                    ;AF35|----/----\----;A513    ;
                      AND.B #$03                          ;AF37|----/----\----;2903    ;
                      BNE Return00AFA2                    ;AF39|----/----\----;D067    ;
                      LDA.W !ColorFadeTimer               ;AF3B|----/----\----;AD9514  ;
                      CMP.B #$40                          ;AF3E|----/----\----;C940    ;
                      BCS Return00AFA2                    ;AF40|----/----\----;B060    ;
                      JSR CODE_00AFA3                     ;AF42|----/----\----;20A3AF  ; Index (16 bit) Accum (16 bit) 
                      LDA.W #$01FE                        ;AF45|----/----\----;A9FE01  ;
                      STA.W !CopyPalette                  ;AF48|----/----\----;8D0509  ;
                      LDX.W #$00EE                        ;AF4B|----/----\----;A2EE00  ;
CODE_00AF4E:          LDA.W #$0007                        ;AF4E|----/----\----;A90700  ;
                      STA.B !_0                           ;AF51|----/----\----;8500    ;
                    - LDA.W !CopyPalette,X                ;AF53|----/----\----;BD0509  ;
                      STA.B !_2                           ;AF56|----/----\----;8502    ;
                      LDA.W !MainPalette,X                ;AF58|----/----\----;BD0307  ;
                      JSR CODE_00AFC0                     ;AF5B|----/----\----;20C0AF  ;
                      LDA.B !_4                           ;AF5E|----/----\----;A504    ;
                      STA.W !CopyPalette,X                ;AF60|----/----\----;9D0509  ;
                      DEX                                 ;AF63|----/----\----;CA      ;
                      DEX                                 ;AF64|----/----\----;CA      ;
                      DEC.B !_0                           ;AF65|----/----\----;C600    ;
                      BNE -                               ;AF67|----/----\----;D0EA    ;
                      TXA                                 ;AF69|----/----\----;8A      ;
                      SEC                                 ;AF6A|----/----\----;38      ;
                      SBC.W #$0012                        ;AF6B|----/----\----;E91200  ;
                      TAX                                 ;AF6E|----/----\----;AA      ;
                      BPL CODE_00AF4E                     ;AF6F|----/----\----;10DD    ;
                      LDX.W #$0004                        ;AF71|----/----\----;A20400  ;
                    - LDA.W !CopyPalette+$1A,X            ;AF74|----/----\----;BD1F09  ;
                      STA.B !_2                           ;AF77|----/----\----;8502    ;
                      LDA.W !MainPalette+$1A,X            ;AF79|----/----\----;BD1D07  ;
                      JSR CODE_00AFC0                     ;AF7C|----/----\----;20C0AF  ;
                      LDA.B !_4                           ;AF7F|----/----\----;A504    ;
                      STA.W !CopyPalette+$1A,X            ;AF81|----/----\----;9D1F09  ;
                      DEX                                 ;AF84|----/----\----;CA      ;
                      DEX                                 ;AF85|----/----\----;CA      ;
                      BPL -                               ;AF86|----/----\----;10EC    ;
                      LDA.W !BackgroundColor              ;AF88|----/----\----;AD0107  ;
                      STA.B !_2                           ;AF8B|----/----\----;8502    ;
                      LDA.W !CopyBGColor                  ;AF8D|----/----\----;AD0309  ;
                      JSR CODE_00AFC0                     ;AF90|----/----\----;20C0AF  ;
                      LDA.B !_4                           ;AF93|----/----\----;A504    ;
                      STA.W !BackgroundColor              ;AF95|----/----\----;8D0107  ;
                      SEP #$30                            ;AF98|----/----\----;E230    ; Index (8 bit) Accum (8 bit) 
                      STZ.W !CopyPalette+$100             ;AF9A|----/----\----;9C050A  ;
                      LDA.B #$03                          ;AF9D|----/----\----;A903    ;
                      STA.W !PaletteIndexTable            ;AF9F|----/----\----;8D8006  ;
Return00AFA2:         RTS                                 ;AFA2|----/----\----;60      ; Return 
                                                          ;                   ;        ;
CODE_00AFA3:          TAY                                 ;AFA3|----/----\----;A8      ;
                      INC A                               ;AFA4|----/----\----;1A      ;
                      INC A                               ;AFA5|----/----\----;1A      ;
                      STA.W !ColorFadeTimer               ;AFA6|----/----\----;8D9514  ;
                      TYA                                 ;AFA9|----/----\----;98      ;
                      LSR A                               ;AFAA|----/----\----;4A      ;
                      LSR A                               ;AFAB|----/----\----;4A      ;
                      LSR A                               ;AFAC|----/----\----;4A      ;
                      LSR A                               ;AFAD|----/----\----;4A      ;
                      REP #$30                            ;AFAE|----/----\----;C230    ; Index (16 bit) Accum (16 bit) 
                      AND.W #$0002                        ;AFB0|----/----\----;290200  ;
                      STA.B !_C                           ;AFB3|----/----\----;850C    ;
                      TYA                                 ;AFB5|----/----\----;98      ;
                      AND.W #$001E                        ;AFB6|----/----\----;291E00  ;
                      TAY                                 ;AFB9|----/----\----;A8      ;
                      LDA.W DATA_00AEF7,Y                 ;AFBA|----/----\----;B9F7AE  ;
                      STA.B !_E                           ;AFBD|----/----\----;850E    ;
                      RTS                                 ;AFBF|----/----\----;60      ; Return 
                                                          ;                   ;        ;
CODE_00AFC0:          STA.B !_A                           ;AFC0|----/----\----;850A    ;
                      AND.W #$001F                        ;AFC2|----/----\----;291F00  ;
                      ASL A                               ;AFC5|----/----\----;0A      ;
                      ASL A                               ;AFC6|----/----\----;0A      ;
                      STA.B !_6                           ;AFC7|----/----\----;8506    ;
                      LDA.B !_A                           ;AFC9|----/----\----;A50A    ;
                      AND.W #$03E0                        ;AFCB|----/----\----;29E003  ;
                      LSR A                               ;AFCE|----/----\----;4A      ;
                      LSR A                               ;AFCF|----/----\----;4A      ;
                      LSR A                               ;AFD0|----/----\----;4A      ;
                      STA.B !_8                           ;AFD1|----/----\----;8508    ;
                      LDA.B !_B                           ;AFD3|----/----\----;A50B    ;
                      AND.W #$007C                        ;AFD5|----/----\----;297C00  ;
                      STA.B !_A                           ;AFD8|----/----\----;850A    ;
                      STZ.B !_4                           ;AFDA|----/----\----;6404    ;
                      LDY.W #$0004                        ;AFDC|----/----\----;A00400  ;
CODE_00AFDF:          PHY                                 ;AFDF|----/----\----;5A      ;
                      LDA.W !_6,Y                         ;AFE0|----/----\----;B90600  ;
                      ORA.B !_C                           ;AFE3|----/----\----;050C    ;
                      TAY                                 ;AFE5|----/----\----;A8      ;
                      LDA.W DATA_00AE77,Y                 ;AFE6|----/----\----;B977AE  ;
                      PLY                                 ;AFE9|----/----\----;7A      ;
                      AND.B !_E                           ;AFEA|----/----\----;250E    ;
                      BEQ +                               ;AFEC|----/----\----;F00B    ;
                      LDA.W DATA_00AE6B,Y                 ;AFEE|----/----\----;B96BAE  ;
                      BIT.W !EndLevelTimer                ;AFF1|----/----\----;2C9314  ;
                      BPL +                               ;AFF4|----/----\----;1003    ;
                      LDA.W DATA_00AE71,Y                 ;AFF6|----/----\----;B971AE  ;
                    + CLC                                 ;AFF9|----/----\----;18      ;
                      ADC.B !_2                           ;AFFA|----/----\----;6502    ;
                      AND.W DATA_00AE65,Y                 ;AFFC|----/----\----;3965AE  ;
                      TSB.B !_4                           ;AFFF|----/----\----;0404    ;
                      DEY                                 ;B001|----/----\----;88      ;
                      DEY                                 ;B002|----/----\----;88      ;
                      BPL CODE_00AFDF                     ;B003|----/----\----;10DA    ;
                      RTS                                 ;B005|----/----\----;60      ; Return 
                                                          ;                   ;        ;
CODE_00B006:          PHB                                 ;B006|----/----\----;8B      ;
                      PHK                                 ;B007|----/----\----;4B      ;
                      PLB                                 ;B008|----/----\----;AB      ;
                      JSR CODE_00AFA3                     ;B009|----/----\----;20A3AF  ;
                      LDX.W #$006E                        ;B00C|----/----\----;A26E00  ;
CODE_00B00F:          LDY.W #$0008                        ;B00F|----/----\----;A00800  ;
                    - LDA.W !CopyPalette+2,X              ;B012|----/----\----;BD0709  ;
                      STA.B !_2                           ;B015|----/----\----;8502    ;
                      LDA.W !MainPalette+$80,X            ;B017|----/----\----;BD8307  ;
                      PHY                                 ;B01A|----/----\----;5A      ;
                      JSR CODE_00AFC0                     ;B01B|----/----\----;20C0AF  ;
                      PLY                                 ;B01E|----/----\----;7A      ;
                      LDA.B !_4                           ;B01F|----/----\----;A504    ;
                      STA.W !CopyPalette+2,X              ;B021|----/----\----;9D0709  ;
                      LDA.W !MainPalette+$80,X            ;B024|----/----\----;BD8307  ;
                      SEC                                 ;B027|----/----\----;38      ;
                      SBC.B !_4                           ;B028|----/----\----;E504    ;
                      STA.W !CopyPalette+$74,X            ;B02A|----/----\----;9D7909  ;
                      DEX                                 ;B02D|----/----\----;CA      ;
                      DEX                                 ;B02E|----/----\----;CA      ;
                      DEY                                 ;B02F|----/----\----;88      ;
                      BNE -                               ;B030|----/----\----;D0E0    ;
                      TXA                                 ;B032|----/----\----;8A      ;
                      SEC                                 ;B033|----/----\----;38      ;
                      SBC.W #$0010                        ;B034|----/----\----;E91000  ;
                      TAX                                 ;B037|----/----\----;AA      ;
                      BPL CODE_00B00F                     ;B038|----/----\----;10D5    ;
                      SEP #$30                            ;B03A|----/----\----;E230    ; Index (8 bit) Accum (8 bit) 
                      PLB                                 ;B03C|----/----\----;AB      ;
                      RTL                                 ;B03D|----/----\----;6B      ; Return 
                                                          ;                   ;        ;
CODE_00B03E:          JSR CODE_00AF35                     ;B03E|----/----\----;2035AF  ;
                      LDA.W !PaletteIndexTable            ;B041|----/----\----;AD8006  ;
                      CMP.B #$03                          ;B044|----/----\----;C903    ;
                      BNE Return00B090                    ;B046|----/----\----;D048    ;
                      LDA.B #$00                          ;B048|----/----\----;A900    ;
                      STA.B !_2                           ;B04A|----/----\----;8502    ;
                      REP #$30                            ;B04C|----/----\----;C230    ; Index (16 bit) Accum (16 bit) 
                      LDA.W !PlayerPalletePtr             ;B04E|----/----\----;AD820D  ;
                      STA.B !_0                           ;B051|----/----\----;8500    ;
                      LDY.W #$0014                        ;B053|----/----\----;A01400  ;
                    - LDA.B [!_0],Y                       ;B056|----/----\----;B700    ;
                      STA.W !CopyPalette+$10C,Y           ;B058|----/----\----;99110A  ;
                      DEY                                 ;B05B|----/----\----;88      ;
                      DEY                                 ;B05C|----/----\----;88      ;
                      BPL -                               ;B05D|----/----\----;10F7    ;
                      LDA.W #$81EE                        ;B05F|----/----\----;A9EE81  ;
                      STA.W !CopyPalette+$100             ;B062|----/----\----;8D050A  ;
                      LDX.W #$00CE                        ;B065|----/----\----;A2CE00  ;
CODE_00B068:          LDA.W #$0007                        ;B068|----/----\----;A90700  ;
                      STA.B !_0                           ;B06B|----/----\----;8500    ;
                    - LDA.W !CopyPalette+$120,X           ;B06D|----/----\----;BD250A  ;
                      STA.B !_2                           ;B070|----/----\----;8502    ;
                      LDA.W !MainPalette+$120,X           ;B072|----/----\----;BD2308  ;
                      JSR CODE_00AFC0                     ;B075|----/----\----;20C0AF  ;
                      LDA.B !_4                           ;B078|----/----\----;A504    ;
                      STA.W !CopyPalette+$120,X           ;B07A|----/----\----;9D250A  ;
                      DEX                                 ;B07D|----/----\----;CA      ;
                      DEX                                 ;B07E|----/----\----;CA      ;
                      DEC.B !_0                           ;B07F|----/----\----;C600    ;
                      BNE -                               ;B081|----/----\----;D0EA    ;
                      TXA                                 ;B083|----/----\----;8A      ;
                      SEC                                 ;B084|----/----\----;38      ;
                      SBC.W #$0012                        ;B085|----/----\----;E91200  ;
                      TAX                                 ;B088|----/----\----;AA      ;
                      BPL CODE_00B068                     ;B089|----/----\----;10DD    ;
                      SEP #$30                            ;B08B|----/----\----;E230    ; Index (8 bit) Accum (8 bit) 
                      STZ.W !Empty0AF5                    ;B08D|----/----\----;9CF50A  ;
Return00B090:         RTS                                 ;B090|----/----\----;60      ; Return 
                                                          ;                   ;        ;
                                                          ;                   ;        ;
                      db $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF  ;B091|----/----\----;        ;
                      db $FF,$FF,$FF,$FF,$FF,$FF,$FF      ;B099|----/----\----;        ;
                                                          ;                   ;        ;
Palettes_:            db $9F,$5B,$FB,$6F,$80,$5D,$00,$00  ;B0A0|----/----\----;        ;
                      db $22,$1D,$C3,$24,$93,$73,$FF,$7F  ;B0A8|----/----\----;        ;
                      db $49,$3A,$8B,$42,$CD,$4A,$0F,$53  ;B0B0|----/----\----;        ;
                      db $51,$5B,$93,$63,$FF,$7F,$00,$00  ;B0B8|----/----\----;        ;
                      db $20,$7F,$80,$7F,$E0,$7F,$E0,$7F  ;B0C0|----/----\----;        ;
                      db $42,$39,$08,$52,$CE,$6A,$12,$63  ;B0C8|----/----\----;        ;
                      db $55,$6B,$98,$73,$42,$39,$08,$52  ;B0D0|----/----\----;        ;
                      db $CE,$6A,$42,$39,$08,$52,$CE,$6A  ;B0D8|----/----\----;        ;
                      db $D6,$4E,$18,$57,$5A,$5F,$9C,$67  ;B0E0|----/----\----;        ;
                      db $DE,$6F,$FF,$77,$FF,$7F,$00,$00  ;B0E8|----/----\----;        ;
                      db $20,$7F,$80,$7F,$E0,$7F,$E0,$7F  ;B0F0|----/----\----;        ;
                      db $A3,$20,$48,$31,$AC,$3D,$CE,$39  ;B0F8|----/----\----;        ;
                      db $32,$3E,$B6,$4A,$A2,$20,$25,$2D  ;B100|----/----\----;        ;
                      db $68,$35,$8A,$35,$E4,$24,$52,$4A  ;B108|----/----\----;        ;
                      db $C8,$50,$CC,$59,$6D,$52,$EB,$58  ;B110|----/----\----;        ;
                      db $4C,$65,$D0,$5A,$80,$5D,$39,$7F  ;B118|----/----\----;        ;
                      db $93,$7E,$A8,$65,$48,$56,$28,$57  ;B120|----/----\----;        ;
                      db $62,$14,$46,$35,$A9,$45,$0D,$52  ;B128|----/----\----;        ;
                      db $B1,$62,$77,$7B,$00,$00,$1E,$7B  ;B130|----/----\----;        ;
                      db $9F,$7B,$99,$7F,$F6,$7F,$FC,$7F  ;B138|----/----\----;        ;
                      db $00,$00,$C5,$24,$49,$2D,$AD,$2D  ;B140|----/----\----;        ;
                      db $53,$22,$18,$3F,$60,$10,$81,$18  ;B148|----/----\----;        ;
                      db $A3,$1C,$E4,$1C,$09,$29,$4B,$25  ;B150|----/----\----;        ;
                      db $60,$09,$A4,$01,$E8,$01,$2C,$02  ;B158|----/----\----;        ;
                      db $91,$02,$F5,$02,$FF,$7F,$00,$00  ;B160|----/----\----;        ;
                      db $E0,$7E,$20,$7F,$80,$7F,$E0,$7F  ;B168|----/----\----;        ;
                      db $93,$73,$00,$00,$FB,$0C,$EB,$2F  ;B170|----/----\----;        ;
                      db $93,$73,$00,$00,$DD,$7F,$7F,$2D  ;B178|----/----\----;        ;
                      db $93,$73,$00,$00,$AB,$7A,$FF,$7F  ;B180|----/----\----;        ;
                      db $93,$73,$00,$00,$9B,$1E,$7F,$3B  ;B188|----/----\----;        ;
                      db $00,$00,$AF,$0D,$79,$2E,$E0,$25  ;B190|----/----\----;        ;
                      db $1C,$2B,$20,$03,$00,$00,$6B,$2D  ;B198|----/----\----;        ;
                      db $EF,$3D,$73,$4E,$18,$63,$9C,$73  ;B1A0|----/----\----;        ;
                      db $00,$00,$E9,$00,$0D,$22,$8E,$05  ;B1A8|----/----\----;        ;
                      db $33,$1A,$B7,$32,$00,$00,$E0,$2D  ;B1B0|----/----\----;        ;
                      db $E0,$52,$7F,$15,$5F,$32,$3F,$4B  ;B1B8|----/----\----;        ;
                      db $00,$00,$C8,$59,$CE,$72,$CB,$39  ;B1C0|----/----\----;        ;
                      db $30,$3E,$B3,$4A,$00,$00,$16,$00  ;B1C8|----/----\----;        ;
                      db $1B,$00,$5F,$01,$1F,$02,$1F,$03  ;B1D0|----/----\----;        ;
                      db $00,$00,$EC,$49,$4F,$52,$B2,$5A  ;B1D8|----/----\----;        ;
                      db $15,$67,$DB,$7F,$00,$00,$16,$00  ;B1E0|----/----\----;        ;
                      db $1B,$00,$5F,$01,$1F,$02,$1F,$03  ;B1E8|----/----\----;        ;
                      db $00,$00,$C9,$08,$4E,$19,$D3,$29  ;B1F0|----/----\----;        ;
                      db $78,$3E,$1D,$53,$00,$00,$C8,$14  ;B1F8|----/----\----;        ;
                      db $09,$1D,$6C,$29,$CF,$35,$32,$42  ;B200|----/----\----;        ;
                      db $EF,$55,$B5,$6E,$F7,$76,$39,$7F  ;B208|----/----\----;        ;
                      db $7B,$7F,$BD,$7F,$00,$00,$C9,$2C  ;B210|----/----\----;        ;
                      db $4E,$41,$D3,$55,$78,$6E,$1D,$7F  ;B218|----/----\----;        ;
                      db $00,$00,$E9,$01,$AC,$02,$2F,$03  ;B220|----/----\----;        ;
                      db $99,$03,$FE,$53,$00,$00,$00,$00  ;B228|----/----\----;        ;
                      db $00,$00,$8F,$3C,$D8,$61,$7F,$7E  ;B230|----/----\----;        ;
                      db $00,$00,$C5,$24,$49,$2D,$AD,$2D  ;B238|----/----\----;        ;
                      db $53,$22,$18,$3F,$00,$00,$16,$00  ;B240|----/----\----;        ;
                      db $1B,$00,$5F,$01,$1F,$02,$1F,$03  ;B248|----/----\----;        ;
                      db $CE,$39,$00,$00,$18,$63,$34,$7F  ;B250|----/----\----;        ;
                      db $95,$7F,$F8,$7F,$00,$00,$B7,$32  ;B258|----/----\----;        ;
                      db $FB,$67,$00,$02,$20,$03,$E0,$03  ;B260|----/----\----;        ;
                      db $00,$00,$71,$0D,$3F,$7C,$9B,$1E  ;B268|----/----\----;        ;
                      db $7F,$13,$FF,$03,$00,$00,$17,$28  ;B270|----/----\----;        ;
                      db $1F,$40,$29,$45,$AD,$59,$10,$66  ;B278|----/----\----;        ;
                      db $00,$00,$71,$0D,$9B,$1E,$7F,$3B  ;B280|----/----\----;        ;
                      db $FF,$7F,$FF,$7F,$00,$00,$CE,$39  ;B288|----/----\----;        ;
                      db $94,$52,$18,$63,$9C,$73,$5F,$2C  ;B290|----/----\----;        ;
                      db $00,$00,$FF,$01,$1F,$03,$FF,$03  ;B298|----/----\----;        ;
                      db $B7,$00,$3F,$02,$00,$00,$08,$6D  ;B2A0|----/----\----;        ;
                      db $AD,$6D,$31,$7E,$B7,$00,$3F,$02  ;B2A8|----/----\----;        ;
                      db $00,$00,$11,$00,$17,$00,$1F,$00  ;B2B0|----/----\----;        ;
                      db $B7,$00,$3F,$02,$00,$00,$E0,$01  ;B2B8|----/----\----;        ;
                      db $E0,$02,$E0,$03,$B7,$00,$3F,$02  ;B2C0|----/----\----;        ;
                      db $5F,$63,$1D,$58,$0A,$00,$1F,$39  ;B2C8|----/----\----;        ;
                      db $C4,$44,$08,$4E,$70,$67,$B6,$30  ;B2D0|----/----\----;        ;
                      db $DF,$35,$FF,$03,$3F,$4F,$1D,$58  ;B2D8|----/----\----;        ;
                      db $40,$11,$E0,$3F,$07,$3C,$AE,$7C  ;B2E0|----/----\----;        ;
                      db $B3,$7D,$00,$2F,$5F,$16,$FF,$03  ;B2E8|----/----\----;        ;
                      db $5F,$63,$1D,$58,$29,$25,$FF,$7F  ;B2F0|----/----\----;        ;
                      db $08,$00,$17,$00,$1F,$00,$7B,$57  ;B2F8|----/----\----;        ;
                      db $DF,$0D,$FF,$03,$1F,$3B,$1D,$58  ;B300|----/----\----;        ;
                      db $29,$25,$FF,$7F,$40,$11,$E0,$01  ;B308|----/----\----;        ;
                      db $E0,$02,$7B,$57,$DF,$0D,$FF,$03  ;B310|----/----\----;        ;
                      db $00,$00,$C5,$24,$49,$2D,$AD,$2D  ;B318|----/----\----;        ;
                      db $53,$22,$18,$3F,$23,$25,$C4,$35  ;B320|----/----\----;        ;
                      db $25,$3E,$86,$46,$E7,$4E,$1F,$40  ;B328|----/----\----;        ;
                      db $00,$00,$C6,$41,$54,$73,$FA,$7F  ;B330|----/----\----;        ;
                      db $FD,$7F,$08,$6D,$00,$00,$34,$34  ;B338|----/----\----;        ;
                      db $3A,$44,$9F,$65,$16,$01,$7F,$02  ;B340|----/----\----;        ;
                      db $00,$00,$C5,$24,$49,$2D,$AD,$2D  ;B348|----/----\----;        ;
                      db $53,$22,$18,$3F,$00,$00,$AE,$2D  ;B350|----/----\----;        ;
                      db $32,$3E,$B6,$4A,$F9,$52,$F3,$2C  ;B358|----/----\----;        ;
                      db $00,$00,$6B,$51,$6D,$4E,$B3,$4F  ;B360|----/----\----;        ;
                      db $BF,$30,$1D,$37,$32,$2E,$0D,$4A  ;B368|----/----\----;        ;
                      db $88,$10,$4A,$21,$6D,$29,$CF,$3D  ;B370|----/----\----;        ;
                      db $00,$00,$40,$29,$E0,$3D,$80,$52  ;B378|----/----\----;        ;
                      db $B7,$00,$3F,$02,$00,$00,$CE,$39  ;B380|----/----\----;        ;
                      db $94,$52,$18,$63,$B7,$00,$3F,$02  ;B388|----/----\----;        ;
                      db $00,$00,$70,$7E,$D3,$7E,$36,$7F  ;B390|----/----\----;        ;
                      db $99,$7F,$1F,$40,$00,$00,$CE,$39  ;B398|----/----\----;        ;
                      db $94,$52,$18,$63,$9C,$73,$5F,$2C  ;B3A0|----/----\----;        ;
                      db $00,$00,$DF,$4E,$DE,$5A,$BD,$66  ;B3A8|----/----\----;        ;
                      db $7C,$72,$1F,$40,$00,$00,$F5,$7F  ;B3B0|----/----\----;        ;
                      db $F7,$7F,$F9,$7F,$FC,$7F,$FF,$7F  ;B3B8|----/----\----;        ;
BowserEndPalette:     db $00,$00,$FB,$63,$0C,$03,$0B,$02  ;B3C0|----/----\----;        ;
                      db $35,$15,$5F,$1A                  ;B3C8|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00B3CC:          db $00,$00,$34,$34,$3A,$44,$9F,$65  ;B3CC|----/----\----;        ;
                      db $16,$01,$7F,$02,$00,$00,$28,$12  ;B3D4|----/----\----;        ;
                      db $A8,$12,$48,$13,$7B,$32,$BF,$5B  ;B3DC|----/----\----;        ;
                      db $60,$7D,$00,$00,$DE,$7B,$48,$13  ;B3E4|----/----\----;        ;
                      db $60,$7D,$7B,$32,$BF,$37,$7F,$2D  ;B3EC|----/----\----;        ;
                      db $00,$00,$68,$32,$E8,$32,$48,$13  ;B3F4|----/----\----;        ;
                      db $FF,$5E,$7F,$6F,$60,$7D,$00,$00  ;B3FC|----/----\----;        ;
                      db $DE,$7B,$3B,$57,$A0,$7E,$F6,$01  ;B404|----/----\----;        ;
                      db $A8,$12,$48,$13,$00,$00,$28,$12  ;B40C|----/----\----;        ;
                      db $A8,$12,$48,$13,$7B,$32,$BF,$5B  ;B414|----/----\----;        ;
                      db $28,$7E,$00,$00,$DE,$7B,$48,$13  ;B41C|----/----\----;        ;
                      db $28,$7E,$7B,$32,$BF,$37,$FF,$03  ;B424|----/----\----;        ;
                      db $00,$00,$12,$32,$75,$3E,$3B,$57  ;B42C|----/----\----;        ;
                      db $7B,$32,$BF,$5B,$28,$7E,$00,$00  ;B434|----/----\----;        ;
                      db $DE,$7B,$3B,$57,$28,$7E,$7B,$32  ;B43C|----/----\----;        ;
                      db $C4,$38,$48,$13,$C7,$2C,$F0,$69  ;B444|----/----\----;        ;
                      db $B2,$66,$D5,$67,$34,$66,$DE,$53  ;B44C|----/----\----;        ;
                      db $FF,$7F,$C7,$2C,$60,$45,$80,$66  ;B454|----/----\----;        ;
                      db $F7,$7F,$1F,$03,$7F,$03,$FF,$47  ;B45C|----/----\----;        ;
                      db $2C,$41,$F0,$69,$B2,$66,$D5,$67  ;B464|----/----\----;        ;
                      db $1F,$00,$FF,$7F,$C7,$2C,$C7,$2C  ;B46C|----/----\----;        ;
                      db $F0,$69,$B2,$66,$D5,$67,$2C,$41  ;B474|----/----\----;        ;
                      db $D5,$3A,$9C,$5B,$00,$00,$EC,$49  ;B47C|----/----\----;        ;
                      db $2E,$56,$F1,$62,$26,$31,$BF,$5B  ;B484|----/----\----;        ;
                      db $00,$00,$00,$00,$DE,$7B,$95,$57  ;B48C|----/----\----;        ;
                      db $28,$7E,$26,$31,$BF,$37,$7F,$2D  ;B494|----/----\----;        ;
                      db $00,$00,$26,$31,$89,$3D,$EC,$49  ;B49C|----/----\----;        ;
                      db $26,$31,$BF,$5B,$28,$7E,$00,$00  ;B4A4|----/----\----;        ;
                      db $DE,$7B,$3B,$57,$C6,$32,$26,$31  ;B4AC|----/----\----;        ;
                      db $7F,$03,$7F,$03,$00,$00,$05,$1A  ;B4B4|----/----\----;        ;
                      db $C5,$0A,$EF,$22,$75,$1A,$59,$43  ;B4BC|----/----\----;        ;
                      db $60,$7D,$00,$00,$39,$77,$EF,$22  ;B4C4|----/----\----;        ;
                      db $60,$7D,$18,$1E,$5C,$37,$09,$7E  ;B4CC|----/----\----;        ;
                      db $00,$00,$60,$36,$20,$4B,$EF,$22  ;B4D4|----/----\----;        ;
                      db $5A,$4E,$3A,$53,$60,$7D,$00,$00  ;B4DC|----/----\----;        ;
                      db $7B,$32,$EF,$22,$19,$21,$F6,$01  ;B4E4|----/----\----;        ;
                      db $E6,$2D,$A8,$36,$C7,$2C,$F0,$69  ;B4EC|----/----\----;        ;
                      db $00,$00,$00,$00,$34,$66,$F9,$7F  ;B4F4|----/----\----;        ;
                      db $FF,$7F,$00,$00,$60,$45,$80,$66  ;B4FC|----/----\----;        ;
                      db $F7,$7F,$1F,$03,$7F,$03,$FF,$47  ;B504|----/----\----;        ;
                      db $2C,$41,$F0,$69,$B2,$66,$D5,$67  ;B50C|----/----\----;        ;
                      db $1F,$00,$FF,$7F,$C7,$2C,$C7,$2C  ;B514|----/----\----;        ;
                      db $F0,$69,$B2,$66,$D5,$67,$2C,$41  ;B51C|----/----\----;        ;
                      db $D5,$3A,$9C,$5B,$00,$00,$E7,$2C  ;B524|----/----\----;        ;
                      db $6B,$3D,$EF,$4D,$73,$5E,$F7,$6E  ;B52C|----/----\----;        ;
                      db $FF,$7F,$F1,$7F,$BF,$01,$00,$7E  ;B534|----/----\----;        ;
                      db $BF,$03,$E0,$03,$FC,$7F,$FF,$7F  ;B53C|----/----\----;        ;
                      db $00,$00,$4F,$19,$78,$3E,$3E,$57  ;B544|----/----\----;        ;
                      db $20,$7E,$E0,$7E,$E0,$7F,$00,$00  ;B54C|----/----\----;        ;
                      db $31,$52,$F6,$66,$9C,$7B,$85,$16  ;B554|----/----\----;        ;
                      db $4B,$2F,$F1,$47,$00,$00,$4F,$19  ;B55C|----/----\----;        ;
                      db $78,$3E,$3E,$57,$FF,$03,$DE,$7B  ;B564|----/----\----;        ;
                      db $1F,$7C,$00,$00,$4F,$19,$78,$3E  ;B56C|----/----\----;        ;
                      db $3E,$57,$7F,$2D,$4B,$2F,$F1,$47  ;B574|----/----\----;        ;
                      db $FF,$7F,$00,$00,$71,$0D,$7F,$03  ;B57C|----/----\----;        ;
                      db $FF,$4F,$3F,$4F,$E0,$7F,$FF,$7F  ;B584|----/----\----;        ;
                      db $00,$00,$E0,$01,$AD,$7D,$80,$03  ;B58C|----/----\----;        ;
                      db $B7,$00,$3F,$02,$FF,$7F,$00,$00  ;B594|----/----\----;        ;
                      db $16,$00,$1F,$00,$08,$6D,$DD,$2D  ;B59C|----/----\----;        ;
                      db $5F,$63,$FF,$7F,$00,$00,$80,$02  ;B5A4|----/----\----;        ;
                      db $E0,$03,$08,$6D,$1A,$26,$3B,$57  ;B5AC|----/----\----;        ;
                      db $FF,$7F,$00,$00,$E0,$7E,$20,$7F  ;B5B4|----/----\----;        ;
                      db $80,$7F,$E0,$7F,$E0,$7F,$FF,$7F  ;B5BC|----/----\----;        ;
                      db $00,$00,$E0,$7E,$20,$7F,$80,$7F  ;B5C4|----/----\----;        ;
                      db $E0,$7F,$E0,$7F,$00,$00,$1B,$00  ;B5CC|----/----\----;        ;
                      db $2D,$46,$F3,$5E,$85,$16,$4B,$2F  ;B5D4|----/----\----;        ;
                      db $F1,$47                          ;B5DC|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00B5DE:          db $00,$00,$E7,$2C,$6B,$3D,$EF,$4D  ;B5DE|----/----\----;        ;
                      db $73,$5E,$F7,$6E,$FF,$7F,$93,$73  ;B5E6|----/----\----;        ;
                      db $00,$00,$FF,$03,$3B,$57,$93,$73  ;B5EE|----/----\----;        ;
                      db $75,$3E,$12,$32,$AF,$25,$93,$73  ;B5F6|----/----\----;        ;
                      db $3B,$57,$FF,$7F,$00,$00,$93,$73  ;B5FE|----/----\----;        ;
                      db $00,$00,$3B,$57,$6C,$7E          ;B606|----/----\----;        ;
                                                          ;                   ;        ;
MorePalettes:         db $DF                              ;B60C|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00B60D:          db $02,$5F,$03,$FF,$27,$FF,$5F,$FF  ;B60D|----/----\----;        ;
                      db $73,$FF,$5F,$FF,$27,$5F,$03,$BF  ;B615|----/----\----;        ;
                      db $01,$1F,$00,$1B,$00,$18,$00,$18  ;B61D|----/----\----;        ;
                      db $00,$1B,$00,$1F,$00,$BF,$01,$7F  ;B625|----/----\----;        ;
                      db $43,$00,$00,$60,$7F,$3F,$17,$7F  ;B62D|----/----\----;        ;
                      db $43,$00,$00,$FF,$1C,$20,$03,$7F  ;B635|----/----\----;        ;
                      db $43,$00,$00,$20,$03,$60,$7F,$7F  ;B63D|----/----\----;        ;
                      db $43,$BF,$5B,$7B,$32,$E7,$08,$00  ;B645|----/----\----;        ;
                      db $7E,$20,$7E,$A0,$7E,$E0,$7E,$20  ;B64D|----/----\----;        ;
                      db $7F,$80,$7F,$E0,$7F,$E0,$7F,$00  ;B655|----/----\----;        ;
                      db $00,$E0,$1C,$E8,$3D,$F0,$5E,$F8  ;B65D|----/----\----;        ;
                      db $7F,$FF,$7F,$85,$16,$4B,$2F      ;B665|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00B66C:          db $93,$73,$00,$00,$71,$0D,$9B,$1E  ;B66C|----/----\----;        ;
                      db $FF,$7F,$00,$00,$20,$03,$16,$00  ;B674|----/----\----;        ;
                      db $1F,$00,$7F,$01,$9F,$02,$FF,$7F  ;B67C|----/----\----;        ;
                      db $00,$00,$20,$03,$7D,$34,$1E,$55  ;B684|----/----\----;        ;
                      db $FF,$65,$1F,$7B,$FF,$7F,$00,$00  ;B68C|----/----\----;        ;
                      db $20,$03,$80,$03,$F1,$1F,$F9,$03  ;B694|----/----\----;        ;
                      db $FF,$4F                          ;B69C|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00B69E:          db $FF,$7F,$C0,$18,$FB,$63,$0C,$03  ;B69E|----/----\----;        ;
                      db $0B,$02,$35,$15,$5F,$1A,$9B,$77  ;B6A6|----/----\----;        ;
                      db $60,$18,$97,$5B,$A8,$02,$A7,$01  ;B6AE|----/----\----;        ;
                      db $D1,$0C,$FB,$11,$37,$6F,$00,$18  ;B6B6|----/----\----;        ;
                      db $33,$53,$45,$02,$43,$01,$6E,$04  ;B6BE|----/----\----;        ;
                      db $97,$09,$D3,$66,$00,$10,$CF,$4A  ;B6C6|----/----\----;        ;
                      db $E1,$01,$E0,$00,$0A,$00,$33,$01  ;B6CE|----/----\----;        ;
                      db $6F,$5E,$00,$00,$6B,$42,$80,$01  ;B6D6|----/----\----;        ;
                      db $80,$00,$06,$00,$CF,$00,$0B,$56  ;B6DE|----/----\----;        ;
                      db $00,$00,$07,$3A,$20,$01,$20,$00  ;B6E6|----/----\----;        ;
                      db $02,$00,$6B,$00,$A7,$4D,$00,$00  ;B6EE|----/----\----;        ;
                      db $A3,$31,$C0,$00,$00,$00,$00,$00  ;B6F6|----/----\----;        ;
                      db $07,$00,$43,$45,$00,$00,$40,$29  ;B6FE|----/----\----;        ;
                      db $60,$00,$00,$00,$00,$00,$03,$00  ;B706|----/----\----;        ;
TheEndPalettes:       db $C4,$44,$20,$03,$DF,$4A,$00,$02  ;B70E|----/----\----;        ;
                      db $3B,$01,$08,$4E                  ;B716|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00B71A:          db $C4,$44,$1F,$39,$DF,$4A,$74,$28  ;B71A|----/----\----;        ;
                      db $3F,$01,$08,$4E                  ;B722|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00B726:          db $D2,$28,$1E,$55,$5F,$63,$1F,$7B  ;B726|----/----\----;        ;
                      db $FB,$01,$DE,$02,$00,$00,$33,$15  ;B72E|----/----\----;        ;
                      db $B7,$25,$3B,$36,$AF,$25,$BF,$5B  ;B736|----/----\----;        ;
                      db $C6,$5A,$00,$00,$DE,$7B,$3B,$36  ;B73E|----/----\----;        ;
                      db $C6,$5A,$AF,$25,$BF,$37,$7F,$2D  ;B746|----/----\----;        ;
                      db $00,$00,$33,$15,$B7,$25,$3B,$36  ;B74E|----/----\----;        ;
                      db $FF,$5E,$7F,$6F,$C6,$5A,$00,$00  ;B756|----/----\----;        ;
                      db $DE,$7B,$3B,$57,$C6,$5A,$AF,$25  ;B75E|----/----\----;        ;
                      db $A8,$12,$48,$13,$00,$00,$B7,$25  ;B766|----/----\----;        ;
                      db $3B,$36,$BF,$46,$AF,$25,$5F,$5B  ;B76E|----/----\----;        ;
                      db $C6,$5A,$00,$00,$DE,$7B,$BF,$46  ;B776|----/----\----;        ;
                      db $C6,$5A,$AF,$25,$BF,$37,$FF,$03  ;B77E|----/----\----;        ;
                      db $00,$00,$85,$16,$4B,$2F,$F1,$47  ;B786|----/----\----;        ;
                      db $AF,$25,$5F,$5B,$C6,$5A,$00,$00  ;B78E|----/----\----;        ;
                      db $DE,$7B,$3B,$57,$C6,$5A,$AF,$25  ;B796|----/----\----;        ;
                      db $C4,$38,$48,$13,$E7,$1C,$F3,$19  ;B79E|----/----\----;        ;
                      db $B9,$32,$7F,$4B,$10,$76,$B9,$2E  ;B7A6|----/----\----;        ;
                      db $FF,$7F,$E7,$1C,$60,$45,$80,$66  ;B7AE|----/----\----;        ;
                      db $F7,$7F,$1F,$03,$7F,$03,$FF,$47  ;B7B6|----/----\----;        ;
                      db $E7,$1C,$F3,$19,$B9,$32,$7F,$4B  ;B7BE|----/----\----;        ;
                      db $1F,$00,$FF,$7F,$E7,$1C,$E7,$1C  ;B7C6|----/----\----;        ;
                      db $F3,$19,$B9,$32,$7F,$4B,$C6,$58  ;B7CE|----/----\----;        ;
                      db $D5,$3A,$9C,$5B,$00,$00,$6D,$1D  ;B7D6|----/----\----;        ;
                      db $D0,$29,$33,$36,$6B,$2D,$F9,$4E  ;B7DE|----/----\----;        ;
                      db $00,$00,$00,$00,$DE,$7B,$33,$36  ;B7E6|----/----\----;        ;
                      db $82,$30,$6B,$2D,$BF,$37,$7F,$2D  ;B7EE|----/----\----;        ;
                      db $00,$00,$A7,$00,$2B,$15,$8E,$21  ;B7F6|----/----\----;        ;
                      db $6B,$2D,$F9,$4E,$82,$30,$00,$00  ;B7FE|----/----\----;        ;
                      db $DE,$7B,$F9,$4E,$82,$30,$6B,$2D  ;B806|----/----\----;        ;
                      db $82,$30,$48,$13,$00,$00,$71,$21  ;B80E|----/----\----;        ;
                      db $F5,$31,$79,$32,$F6,$41,$3B,$57  ;B816|----/----\----;        ;
                      db $60,$7D,$00,$00,$39,$77,$79,$32  ;B81E|----/----\----;        ;
                      db $60,$7D,$18,$1E,$5C,$37,$09,$7E  ;B826|----/----\----;        ;
                      db $00,$00,$60,$36,$20,$4B,$EF,$22  ;B82E|----/----\----;        ;
                      db $7A,$52,$3A,$53,$60,$7D,$00,$00  ;B836|----/----\----;        ;
                      db $8E,$21,$79,$32,$19,$21,$75,$3E  ;B83E|----/----\----;        ;
                      db $35,$11,$98,$1D,$C7,$2C,$F0,$69  ;B846|----/----\----;        ;
                      db $00,$00,$00,$00,$34,$66,$F9,$7F  ;B84E|----/----\----;        ;
                      db $FF,$7F,$00,$00,$60,$45,$80,$66  ;B856|----/----\----;        ;
                      db $F7,$7F,$1F,$03,$7F,$03,$FF,$47  ;B85E|----/----\----;        ;
                      db $2C,$41,$F0,$69,$B2,$66,$D5,$67  ;B866|----/----\----;        ;
                      db $1F,$00,$FF,$7F,$C7,$2C,$C7,$2C  ;B86E|----/----\----;        ;
                      db $F0,$69,$B2,$66,$D5,$67,$2C,$41  ;B876|----/----\----;        ;
                      db $D5,$3A,$9C,$5B,$C0,$BF,$08,$00  ;B87E|----/----\----;        ;
                      db $80,$08                          ;B886|----/----\----;        ;
                                                          ;                   ;        ;
CODE_00B888:          REP #$10                            ;B888|----/----\----;C210    ; Index (16 bit) 
                      LDY.W #$BFC0                        ;B88A|----/----\----;A0C0BF  ; \  
                      STY.B !GraphicsCompPtr              ;B88D|----/----\----;848A    ;  |Store the address 08/BFC0 at $8A-$8C 
                      LDA.B #$08                          ;B88F|----/----\----;A908    ;  | 
                      STA.B !GraphicsCompPtr+2            ;B891|----/----\----;858C    ; /  
                      LDY.W #$2000                        ;B893|----/----\----;A00020  ; \  
                      STY.B !_0                           ;B896|----/----\----;8400    ;  |Store the address 7E/2000 at $00-$02 
                      LDA.B #$7E                          ;B898|----/----\----;A97E    ;  | 
                      STA.B !_2                           ;B89A|----/----\----;8502    ; /  
                      JSR CODE_00B8DE                     ;B89C|----/----\----;20DEB8  ;
                      LDA.B #$7E                          ;B89F|----/----\----;A97E    ; \  
                      STA.B !GraphicsUncompPtr+2          ;B8A1|----/----\----;858F    ;  | 
                      REP #$30                            ;B8A3|----/----\----;C230    ;  |Store the address 7E/ACFE at $8D-$8F ; Index (16 bit) Accum (16 bit) 
                      LDA.W #$ACFE                        ;B8A5|----/----\----;A9FEAC  ;  | 
                      STA.B !GraphicsUncompPtr            ;B8A8|----/----\----;858D    ; /  
                      LDX.W #$23FF                        ;B8AA|----/----\----;A2FF23  ;
CODE_00B8AD:          LDY.W #$0008                        ;B8AD|----/----\----;A00800  ;
                    - LDA.L !MarioGraphics,X              ;B8B0|----/----\----;BF00207E;
                      AND.W #$00FF                        ;B8B4|----/----\----;29FF00  ;
                      STA.B [!GraphicsUncompPtr]          ;B8B7|----/----\----;878D    ;
                      DEX                                 ;B8B9|----/----\----;CA      ;
                      DEC.B !GraphicsUncompPtr            ;B8BA|----/----\----;C68D    ;
                      DEC.B !GraphicsUncompPtr            ;B8BC|----/----\----;C68D    ;
                      DEY                                 ;B8BE|----/----\----;88      ;
                      BNE -                               ;B8BF|----/----\----;D0EF    ;
                      LDY.W #$0008                        ;B8C1|----/----\----;A00800  ;
CODE_00B8C4:          DEX                                 ;B8C4|----/----\----;CA      ;
                      LDA.L !MarioGraphics,X              ;B8C5|----/----\----;BF00207E;
                      STA.B [!GraphicsUncompPtr]          ;B8C9|----/----\----;878D    ;
                      DEX                                 ;B8CB|----/----\----;CA      ;
                      BMI CODE_00B8D7                     ;B8CC|----/----\----;3009    ;
                      DEC.B !GraphicsUncompPtr            ;B8CE|----/----\----;C68D    ;
                      DEC.B !GraphicsUncompPtr            ;B8D0|----/----\----;C68D    ;
                      DEY                                 ;B8D2|----/----\----;88      ;
                      BNE CODE_00B8C4                     ;B8D3|----/----\----;D0EF    ;
                      BRA CODE_00B8AD                     ;B8D5|----/----\----;80D6    ;
                                                          ;                   ;        ;
CODE_00B8D7:          LDA.W #$8000                        ;B8D7|----/----\----;A90080  ;
                      STA.B !GraphicsCompPtr              ;B8DA|----/----\----;858A    ;
                      SEP #$20                            ;B8DC|----/----\----;E220    ; Accum (8 bit) 
CODE_00B8DE:          REP #$10                            ;B8DE|----/----\----;C210    ; Index (16 bit) 
                      LDY.W #$0000                        ;B8E0|----/----\----;A00000  ; \  
CODE_00B8E3:          JSR ReadByte                        ;B8E3|----/----\----;2083B9  ;  | 
                      CMP.B #$FF                          ;B8E6|----/----\----;C9FF    ;  |If the next byte is xFF, return. 
                      BNE +                               ;B8E8|----/----\----;D003    ;  |Compressed graphics files ends with xFF IIRC 
                      SEP #$10                            ;B8EA|----/----\----;E210    ;  | ; Index (8 bit) 
                      RTS                                 ;B8EC|----/----\----;60      ; /  
                                                          ;                   ;        ;
                    + STA.B !GraphicsUncompPtr+2          ;B8ED|----/----\----;858F    ;
                      AND.B #$E0                          ;B8EF|----/----\----;29E0    ;
                      CMP.B #$E0                          ;B8F1|----/----\----;C9E0    ;
                      BEQ CODE_00B8FF                     ;B8F3|----/----\----;F00A    ;
                      PHA                                 ;B8F5|----/----\----;48      ;
                      LDA.B !GraphicsUncompPtr+2          ;B8F6|----/----\----;A58F    ;
                      REP #$20                            ;B8F8|----/----\----;C220    ; Accum (16 bit) 
                      AND.W #$001F                        ;B8FA|----/----\----;291F00  ;
                      BRA +                               ;B8FD|----/----\----;8012    ;
                                                          ;                   ;        ;
CODE_00B8FF:          LDA.B !GraphicsUncompPtr+2          ;B8FF|----/----\----;A58F    ; Accum (8 bit) 
                      ASL A                               ;B901|----/----\----;0A      ;
                      ASL A                               ;B902|----/----\----;0A      ;
                      ASL A                               ;B903|----/----\----;0A      ;
                      AND.B #$E0                          ;B904|----/----\----;29E0    ;
                      PHA                                 ;B906|----/----\----;48      ;
                      LDA.B !GraphicsUncompPtr+2          ;B907|----/----\----;A58F    ;
                      AND.B #$03                          ;B909|----/----\----;2903    ;
                      XBA                                 ;B90B|----/----\----;EB      ;
                      JSR ReadByte                        ;B90C|----/----\----;2083B9  ;
                      REP #$20                            ;B90F|----/----\----;C220    ; Accum (16 bit) 
                    + INC A                               ;B911|----/----\----;1A      ;
                      STA.B !GraphicsUncompPtr            ;B912|----/----\----;858D    ;
                      SEP #$20                            ;B914|----/----\----;E220    ; Accum (8 bit) 
                      PLA                                 ;B916|----/----\----;68      ;
                      BEQ CODE_00B930                     ;B917|----/----\----;F017    ;
                      BMI CODE_00B966                     ;B919|----/----\----;304B    ;
                      ASL A                               ;B91B|----/----\----;0A      ;
                      BPL CODE_00B93F                     ;B91C|----/----\----;1021    ;
                      ASL A                               ;B91E|----/----\----;0A      ;
                      BPL CODE_00B94C                     ;B91F|----/----\----;102B    ;
                      JSR ReadByte                        ;B921|----/----\----;2083B9  ;
                      LDX.B !GraphicsUncompPtr            ;B924|----/----\----;A68D    ;
                    - STA.B [!_0],Y                       ;B926|----/----\----;9700    ;
                      INC A                               ;B928|----/----\----;1A      ;
                      INY                                 ;B929|----/----\----;C8      ;
                      DEX                                 ;B92A|----/----\----;CA      ;
                      BNE -                               ;B92B|----/----\----;D0F9    ;
                      JMP CODE_00B8E3                     ;B92D|----/----\----;4CE3B8  ;
                                                          ;                   ;        ;
CODE_00B930:          JSR ReadByte                        ;B930|----/----\----;2083B9  ;
                      STA.B [!_0],Y                       ;B933|----/----\----;9700    ;
                      INY                                 ;B935|----/----\----;C8      ;
                      LDX.B !GraphicsUncompPtr            ;B936|----/----\----;A68D    ;
                      DEX                                 ;B938|----/----\----;CA      ;
                      STX.B !GraphicsUncompPtr            ;B939|----/----\----;868D    ;
                      BNE CODE_00B930                     ;B93B|----/----\----;D0F3    ;
                      BRA CODE_00B8E3                     ;B93D|----/----\----;80A4    ;
                                                          ;                   ;        ;
CODE_00B93F:          JSR ReadByte                        ;B93F|----/----\----;2083B9  ;
                      LDX.B !GraphicsUncompPtr            ;B942|----/----\----;A68D    ;
                    - STA.B [!_0],Y                       ;B944|----/----\----;9700    ;
                      INY                                 ;B946|----/----\----;C8      ;
                      DEX                                 ;B947|----/----\----;CA      ;
                      BNE -                               ;B948|----/----\----;D0FA    ;
                      BRA CODE_00B8E3                     ;B94A|----/----\----;8097    ;
                                                          ;                   ;        ;
CODE_00B94C:          JSR ReadByte                        ;B94C|----/----\----;2083B9  ;
                      XBA                                 ;B94F|----/----\----;EB      ;
                      JSR ReadByte                        ;B950|----/----\----;2083B9  ;
                      LDX.B !GraphicsUncompPtr            ;B953|----/----\----;A68D    ;
CODE_00B955:          XBA                                 ;B955|----/----\----;EB      ;
                      STA.B [!_0],Y                       ;B956|----/----\----;9700    ;
                      INY                                 ;B958|----/----\----;C8      ;
                      DEX                                 ;B959|----/----\----;CA      ;
                      BEQ CODE_00B963                     ;B95A|----/----\----;F007    ;
                      XBA                                 ;B95C|----/----\----;EB      ;
                      STA.B [!_0],Y                       ;B95D|----/----\----;9700    ;
                      INY                                 ;B95F|----/----\----;C8      ;
                      DEX                                 ;B960|----/----\----;CA      ;
                      BNE CODE_00B955                     ;B961|----/----\----;D0F2    ;
CODE_00B963:          JMP CODE_00B8E3                     ;B963|----/----\----;4CE3B8  ;
                                                          ;                   ;        ;
CODE_00B966:          JSR ReadByte                        ;B966|----/----\----;2083B9  ;
                      XBA                                 ;B969|----/----\----;EB      ;
                      JSR ReadByte                        ;B96A|----/----\----;2083B9  ;
                      TAX                                 ;B96D|----/----\----;AA      ;
                    - PHY                                 ;B96E|----/----\----;5A      ;
                      TXY                                 ;B96F|----/----\----;9B      ;
                      LDA.B [!_0],Y                       ;B970|----/----\----;B700    ;
                      TYX                                 ;B972|----/----\----;BB      ;
                      PLY                                 ;B973|----/----\----;7A      ;
                      STA.B [!_0],Y                       ;B974|----/----\----;9700    ;
                      INY                                 ;B976|----/----\----;C8      ;
                      INX                                 ;B977|----/----\----;E8      ;
                      REP #$20                            ;B978|----/----\----;C220    ; Accum (16 bit) 
                      DEC.B !GraphicsUncompPtr            ;B97A|----/----\----;C68D    ;
                      SEP #$20                            ;B97C|----/----\----;E220    ; Accum (8 bit) 
                      BNE -                               ;B97E|----/----\----;D0EE    ;
                      JMP CODE_00B8E3                     ;B980|----/----\----;4CE3B8  ;
                                                          ;                   ;        ;
ReadByte:             LDA.B [!GraphicsCompPtr]            ;B983|----/----\----;A78A    ; Read the byte ; Index (16 bit) 
                      LDX.B !GraphicsCompPtr              ;B985|----/----\----;A68A    ; \ Go to next byte 
                      INX                                 ;B987|----/----\----;E8      ;  | 
                      BNE +                               ;B988|----/----\----;D005    ;  |   \  
                      LDX.W #$8000                        ;B98A|----/----\----;A20080  ;  |    |Handle bank crossing 
                      INC.B !GraphicsCompPtr+2            ;B98D|----/----\----;E68C    ;  |   /  
                    + STX.B !GraphicsCompPtr              ;B98F|----/----\----;868A    ; /  
                      RTS                                 ;B991|----/----\----;60      ; Return 
                                                          ;                   ;        ;
                                                          ;                   ;        ;
DATA_00B992:          db $F9,$31,$BB,$52,$7D,$63,$6C,$10  ;B992|----/----\----;        ;
                      db $57,$A1,$15,$9C,$63,$D2,$CB,$E5  ;B99A|----/----\----;        ;
                      db $1E,$AF,$BD,$10,$48,$E8,$74,$B4  ;B9A2|----/----\----;        ;
                      db $AD,$E4,$80,$66,$7E,$88,$7F,$43  ;B9AA|----/----\----;        ;
                      db $A1,$65,$CD,$CA,$E5,$B5,$21,$44  ;B9B2|----/----\----;        ;
                      db $6C,$A3,$7B,$F0,$B9,$06,$36,$85  ;B9BA|----/----\----;        ;
                      db $BB,$00                          ;B9C2|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00B9C4:          db $D9,$E2,$EC,$F5,$FF,$89,$93,$9D  ;B9C4|----/----\----;        ;
                      db $A6,$AF,$BA,$C3,$CD,$D5,$DD,$E6  ;B9CC|----/----\----;        ;
                      db $EF,$F7,$FF,$89,$93,$9A,$A3,$A9  ;B9D4|----/----\----;        ;
                      db $B2,$BB,$C3,$CC,$D4,$DC,$E6,$EE  ;B9DC|----/----\----;        ;
                      db $F6,$FF,$88,$91,$9A,$A3,$AE,$B7  ;B9E4|----/----\----;        ;
                      db $C0,$C6,$CB,$D0,$D7,$E0,$E9,$F1  ;B9EC|----/----\----;        ;
                      db $F3,$F8                          ;B9F4|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00B9F6:          db $08,$08,$08,$08,$08,$09,$09,$09  ;B9F6|----/----\----;        ;
                      db $09,$09,$09,$09,$09,$09,$09,$09  ;B9FE|----/----\----;        ;
                      db $09,$09,$09,$0A,$0A,$0A,$0A,$0A  ;BA06|----/----\----;        ;
                      db $0A,$0A,$0A,$0A,$0A,$0A,$0A,$0A  ;BA0E|----/----\----;        ;
                      db $0A,$0A,$0B,$0B,$0B,$0B,$0B,$0B  ;BA16|----/----\----;        ;
                      db $0B,$0B,$0B,$0B,$0B,$0B,$0B,$0B  ;BA1E|----/----\----;        ;
                      db $0B,$0B                          ;BA26|----/----\----;        ;
                                                          ;                   ;        ;
CODE_00BA28:          PHB                                 ;BA28|----/----\----;8B      ; Accum (8 bit) 
                      PHY                                 ;BA29|----/----\----;5A      ;
                      PHK                                 ;BA2A|----/----\----;4B      ;
                      PLB                                 ;BA2B|----/----\----;AB      ;
                      LDA.W DATA_00B992,Y                 ;BA2C|----/----\----;B992B9  ;
                      STA.B !GraphicsCompPtr              ;BA2F|----/----\----;858A    ;
                      LDA.W DATA_00B9C4,Y                 ;BA31|----/----\----;B9C4B9  ;
                      STA.B !GraphicsCompPtr+1            ;BA34|----/----\----;858B    ;
                      LDA.W DATA_00B9F6,Y                 ;BA36|----/----\----;B9F6B9  ;
                      STA.B !GraphicsCompPtr+2            ;BA39|----/----\----;858C    ;
                      LDA.B #$00                          ;BA3B|----/----\----;A900    ;
                      STA.B !_0                           ;BA3D|----/----\----;8500    ;
                      LDA.B #$AD                          ;BA3F|----/----\----;A9AD    ;
                      STA.B !_1                           ;BA41|----/----\----;8501    ;
                      LDA.B #$7E                          ;BA43|----/----\----;A97E    ;
                      STA.B !_2                           ;BA45|----/----\----;8502    ;
                      JSR CODE_00B8DE                     ;BA47|----/----\----;20DEB8  ;
                      PLY                                 ;BA4A|----/----\----;7A      ;
                      PLB                                 ;BA4B|----/----\----;AB      ;
                      RTL                                 ;BA4C|----/----\----;6B      ; Return 
                                                          ;                   ;        ;
                                                          ;                   ;        ;
                      db $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF  ;BA4D|----/----\----;        ;
                      db $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF  ;BA55|----/----\----;        ;
                      db $FF,$FF,$FF                      ;BA5D|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00BA60:          db $00,$B0,$60,$10,$C0,$70,$20,$D0  ;BA60|----/----\----;        ;
                      db $80,$30,$E0,$90,$40,$F0,$A0,$50  ;BA68|----/----\----;        ;
DATA_00BA70:          db $00,$B0,$60,$10,$C0,$70,$20,$D0  ;BA70|----/----\----;        ;
                      db $80,$30,$E0,$90,$40,$F0,$A0,$50  ;BA78|----/----\----;        ;
DATA_00BA80:          db $00,$00,$00,$00,$00,$00,$00,$00  ;BA80|----/----\----;        ;
                      db $00,$00,$00,$00,$00,$00          ;BA88|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00BA8E:          db $00,$00,$00,$00,$00,$00,$00,$00  ;BA8E|----/----\----;        ;
                      db $00,$00,$00,$00,$00,$00          ;BA96|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00BA9C:          db $C8,$C9,$CB,$CD,$CE,$D0,$D2,$D3  ;BA9C|----/----\----;        ;
                      db $D5,$D7,$D8,$DA,$DC,$DD,$DF,$E1  ;BAA4|----/----\----;        ;
DATA_00BAAC:          db $E3,$E4,$E6,$E8,$E9,$EB,$ED,$EE  ;BAAC|----/----\----;        ;
                      db $F0,$F2,$F3,$F5,$F7,$F8,$FA,$FC  ;BAB4|----/----\----;        ;
DATA_00BABC:          db $C8,$CA,$CC,$CE,$D0,$D2,$D4,$D6  ;BABC|----/----\----;        ;
                      db $D8,$DA,$DC,$DE,$E0,$E2          ;BAC4|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00BACA:          db $E4,$E6,$E8,$EA,$EC,$EE,$F0,$F2  ;BACA|----/----\----;        ;
                      db $F4,$F6,$F8,$FA,$FC,$FE          ;BAD2|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00BAD8:          db $00,$C8,$7E,$B0,$C9,$7E,$60,$CB  ;BAD8|----/----\----;        ;
                      db $7E,$10,$CD,$7E,$C0,$CE,$7E,$70  ;BAE0|----/----\----;        ;
                      db $D0,$7E,$20,$D2,$7E,$D0,$D3,$7E  ;BAE8|----/----\----;        ;
                      db $80,$D5,$7E,$30,$D7,$7E,$E0,$D8  ;BAF0|----/----\----;        ;
                      db $7E,$90,$DA,$7E,$40,$DC,$7E,$F0  ;BAF8|----/----\----;        ;
                      db $DD,$7E,$A0,$DF,$7E,$50,$E1,$7E  ;BB00|----/----\----;        ;
DATA_00BB08:          db $00,$E3,$7E,$B0,$E4,$7E,$60,$E6  ;BB08|----/----\----;        ;
                      db $7E,$10,$E8,$7E,$C0,$E9,$7E,$70  ;BB10|----/----\----;        ;
                      db $EB,$7E,$20,$ED,$7E,$D0,$EE,$7E  ;BB18|----/----\----;        ;
                      db $80,$F0,$7E,$30,$F2,$7E,$E0,$F3  ;BB20|----/----\----;        ;
                      db $7E,$90,$F5,$7E,$40,$F7,$7E,$F0  ;BB28|----/----\----;        ;
                      db $F8,$7E,$A0,$FA,$7E,$50,$FC,$7E  ;BB30|----/----\----;        ;
DATA_00BB38:          db $00,$C8,$7E,$00,$CA,$7E,$00,$CC  ;BB38|----/----\----;        ;
                      db $7E,$00,$CE,$7E,$00,$D0,$7E,$00  ;BB40|----/----\----;        ;
                      db $D2,$7E,$00,$D4,$7E,$00,$D6,$7E  ;BB48|----/----\----;        ;
                      db $00,$D8,$7E,$00,$DA,$7E,$00,$DC  ;BB50|----/----\----;        ;
                      db $7E,$00,$DE,$7E,$00,$E0,$7E,$00  ;BB58|----/----\----;        ;
                      db $E2,$7E                          ;BB60|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00BB62:          db $00,$E3,$7E,$B0,$E4,$7E,$60,$E6  ;BB62|----/----\----;        ;
                      db $7E,$10,$E8,$7E,$C0,$E9,$7E,$70  ;BB6A|----/----\----;        ;
                      db $EB,$7E,$20,$ED,$7E,$D0,$EE,$7E  ;BB72|----/----\----;        ;
                      db $80,$F0,$7E,$30,$F2,$7E,$E0,$F3  ;BB7A|----/----\----;        ;
                      db $7E,$90,$F5,$7E,$40,$F7,$7E,$F0  ;BB82|----/----\----;        ;
                      db $F8,$7E,$A0,$FA,$7E,$50,$FC,$7E  ;BB8A|----/----\----;        ;
DATA_00BB92:          db $00,$C8,$7E,$B0,$C9,$7E,$60,$CB  ;BB92|----/----\----;        ;
                      db $7E,$10,$CD,$7E,$C0,$CE,$7E,$70  ;BB9A|----/----\----;        ;
                      db $D0,$7E,$20,$D2,$7E,$D0,$D3,$7E  ;BBA2|----/----\----;        ;
                      db $80,$D5,$7E,$30,$D7,$7E,$E0,$D8  ;BBAA|----/----\----;        ;
                      db $7E,$90,$DA,$7E,$40,$DC,$7E,$F0  ;BBB2|----/----\----;        ;
                      db $DD,$7E,$A0,$DF,$7E,$50,$E1,$7E  ;BBBA|----/----\----;        ;
DATA_00BBC2:          db $00,$E4,$7E,$00,$E6,$7E,$00,$E8  ;BBC2|----/----\----;        ;
                      db $7E,$00,$EA,$7E,$00,$EC,$7E,$00  ;BBCA|----/----\----;        ;
                      db $EE,$7E,$00,$F0,$7E,$00,$F2,$7E  ;BBD2|----/----\----;        ;
                      db $00,$F4,$7E,$00,$F6,$7E,$00,$F8  ;BBDA|----/----\----;        ;
                      db $7E,$00,$FA,$7E,$00,$FC,$7E,$00  ;BBE2|----/----\----;        ;
                      db $FE,$7E                          ;BBEA|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00BBEC:          db $00,$C8,$7E,$00,$CA,$7E,$00,$CC  ;BBEC|----/----\----;        ;
                      db $7E,$00,$CE,$7E,$00,$D0,$7E,$00  ;BBF4|----/----\----;        ;
                      db $D2,$7E,$00,$D4,$7E,$00,$D6,$7E  ;BBFC|----/----\----;        ;
                      db $00,$D8,$7E,$00,$DA,$7E,$00,$DC  ;BC04|----/----\----;        ;
                      db $7E,$00,$DE,$7E,$00,$E0,$7E,$00  ;BC0C|----/----\----;        ;
                      db $E2,$7E                          ;BC14|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00BC16:          db $00,$E4,$7E,$00,$E6,$7E,$00,$E8  ;BC16|----/----\----;        ;
                      db $7E,$00,$EA,$7E,$00,$EC,$7E,$00  ;BC1E|----/----\----;        ;
                      db $EE,$7E,$00,$F0,$7E,$00,$F2,$7E  ;BC26|----/----\----;        ;
                      db $00,$F4,$7E,$00,$F6,$7E,$00,$F8  ;BC2E|----/----\----;        ;
                      db $7E,$00,$FA,$7E,$00,$FC,$7E,$00  ;BC36|----/----\----;        ;
                      db $FE,$7E                          ;BC3E|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00BC40:          db $00,$C8,$7F,$B0,$C9,$7F,$60,$CB  ;BC40|----/----\----;        ;
                      db $7F,$10,$CD,$7F,$C0,$CE,$7F,$70  ;BC48|----/----\----;        ;
                      db $D0,$7F,$20,$D2,$7F,$D0,$D3,$7F  ;BC50|----/----\----;        ;
                      db $80,$D5,$7F,$30,$D7,$7F,$E0,$D8  ;BC58|----/----\----;        ;
                      db $7F,$90,$DA,$7F,$40,$DC,$7F,$F0  ;BC60|----/----\----;        ;
                      db $DD,$7F,$A0,$DF,$7F,$50,$E1,$7F  ;BC68|----/----\----;        ;
DATA_00BC70:          db $00,$E3,$7F,$B0,$E4,$7F,$60,$E6  ;BC70|----/----\----;        ;
                      db $7F,$10,$E8,$7F,$C0,$E9,$7F,$70  ;BC78|----/----\----;        ;
                      db $EB,$7F,$20,$ED,$7F,$D0,$EE,$7F  ;BC80|----/----\----;        ;
                      db $80,$F0,$7F,$30,$F2,$7F,$E0,$F3  ;BC88|----/----\----;        ;
                      db $7F,$90,$F5,$7F,$40,$F7,$7F,$F0  ;BC90|----/----\----;        ;
                      db $F8,$7F,$A0,$FA,$7F,$50,$FC,$7F  ;BC98|----/----\----;        ;
DATA_00BCA0:          db $00,$C8,$7F,$00,$CA,$7F,$00,$CC  ;BCA0|----/----\----;        ;
                      db $7F,$00,$CE,$7F,$00,$D0,$7F,$00  ;BCA8|----/----\----;        ;
                      db $D2,$7F,$00,$D4,$7F,$00,$D6,$7F  ;BCB0|----/----\----;        ;
                      db $00,$D8,$7F,$00,$DA,$7F,$00,$DC  ;BCB8|----/----\----;        ;
                      db $7F,$00,$DE,$7F,$00,$E0,$7F,$00  ;BCC0|----/----\----;        ;
                      db $E2,$7F                          ;BCC8|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00BCCA:          db $00,$E3,$7F,$B0,$E4,$7F,$60,$E6  ;BCCA|----/----\----;        ;
                      db $7F,$10,$E8,$7F,$C0,$E9,$7F,$70  ;BCD2|----/----\----;        ;
                      db $EB,$7F,$20,$ED,$7F,$D0,$EE,$7F  ;BCDA|----/----\----;        ;
                      db $80,$F0,$7F,$30,$F2,$7F,$E0,$F3  ;BCE2|----/----\----;        ;
                      db $7F,$90,$F5,$7F,$40,$F7,$7F,$F0  ;BCEA|----/----\----;        ;
                      db $F8,$7F,$A0,$FA,$7F,$50,$FC,$7F  ;BCF2|----/----\----;        ;
DATA_00BCFA:          db $00,$C8,$7F,$B0,$C9,$7F,$60,$CB  ;BCFA|----/----\----;        ;
                      db $7F,$10,$CD,$7F,$C0,$CE,$7F,$70  ;BD02|----/----\----;        ;
                      db $D0,$7F,$20,$D2,$7F,$D0,$D3,$7F  ;BD0A|----/----\----;        ;
                      db $80,$D5,$7F,$30,$D7,$7F,$E0,$D8  ;BD12|----/----\----;        ;
                      db $7F,$90,$DA,$7F,$40,$DC,$7F,$F0  ;BD1A|----/----\----;        ;
                      db $DD,$7F,$A0,$DF,$7F,$50,$E1,$7F  ;BD22|----/----\----;        ;
DATA_00BD2A:          db $00,$E4,$7F,$00,$E6,$7F,$00,$E8  ;BD2A|----/----\----;        ;
                      db $7F,$00,$EA,$7F,$00,$EC,$7F,$00  ;BD32|----/----\----;        ;
                      db $EE,$7F,$00,$F0,$7F,$00,$F2,$7F  ;BD3A|----/----\----;        ;
                      db $00,$F4,$7F,$00,$F6,$7F,$00,$F8  ;BD42|----/----\----;        ;
                      db $7F,$00,$FA,$7F,$00,$FC,$7F,$00  ;BD4A|----/----\----;        ;
                      db $FE,$7F                          ;BD52|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00BD54:          db $00,$C8,$7F,$00,$CA,$7F,$00,$CC  ;BD54|----/----\----;        ;
                      db $7F,$00,$CE,$7F,$00,$D0,$7F,$00  ;BD5C|----/----\----;        ;
                      db $D2,$7F,$00,$D4,$7F,$00,$D6,$7F  ;BD64|----/----\----;        ;
                      db $00,$D8,$7F,$00,$DA,$7F,$00,$DC  ;BD6C|----/----\----;        ;
                      db $7F,$00,$DE,$7F,$00,$E0,$7F,$00  ;BD74|----/----\----;        ;
                      db $E2,$7F                          ;BD7C|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00BD7E:          db $00,$E4,$7F,$00,$E6,$7F,$00,$E8  ;BD7E|----/----\----;        ;
                      db $7F,$00,$EA,$7F,$00,$EC,$7F,$00  ;BD86|----/----\----;        ;
                      db $EE,$7F,$00,$F0,$7F,$00,$F2,$7F  ;BD8E|----/----\----;        ;
                      db $00,$F4,$7F,$00,$F6,$7F,$00,$F8  ;BD96|----/----\----;        ;
                      db $7F,$00,$FA,$7F,$00,$FC,$7F,$00  ;BD9E|----/----\----;        ;
                      db $FE,$7F                          ;BDA6|----/----\----;        ;
                                                          ;                   ;        ;
Ptrs00BDA8:           dw DATA_00BAD8                      ;BDA8|----/----\----;D8BA    ;
                      dw DATA_00BAD8                      ;BDAA|----/----\----;D8BA    ;
                      dw DATA_00BAD8                      ;BDAC|----/----\----;D8BA    ;
                      dw DATA_00BB38                      ;BDAE|----/----\----;38BB    ;
                      dw DATA_00BB38                      ;BDB0|----/----\----;38BB    ;
                      dw DATA_00BB92                      ;BDB2|----/----\----;92BB    ;
                      dw DATA_00BB92                      ;BDB4|----/----\----;92BB    ;
                      dw DATA_00BBEC                      ;BDB6|----/----\----;ECBB    ;
                      dw DATA_00BBEC                      ;BDB8|----/----\----;ECBB    ;
                      dw $0000                            ;BDBA|----/----\----;0000    ;
                      dw DATA_00BBEC                      ;BDBC|----/----\----;ECBB    ;
                      dw $0000                            ;BDBE|----/----\----;0000    ;
                      dw DATA_00BAD8                      ;BDC0|----/----\----;D8BA    ;
                      dw DATA_00BBEC                      ;BDC2|----/----\----;ECBB    ;
                      dw DATA_00BAD8                      ;BDC4|----/----\----;D8BA    ;
                      dw DATA_00BAD8                      ;BDC6|----/----\----;D8BA    ;
                      dw $0000                            ;BDC8|----/----\----;0000    ;
                      dw DATA_00BAD8                      ;BDCA|----/----\----;D8BA    ;
                      dw $0000                            ;BDCC|----/----\----;0000    ;
                      dw $0000                            ;BDCE|----/----\----;0000    ;
                      dw $0000                            ;BDD0|----/----\----;0000    ;
                      dw $0000                            ;BDD2|----/----\----;0000    ;
                      dw $0000                            ;BDD4|----/----\----;0000    ;
                      dw $0000                            ;BDD6|----/----\----;0000    ;
                      dw $0000                            ;BDD8|----/----\----;0000    ;
                      dw $0000                            ;BDDA|----/----\----;0000    ;
                      dw $0000                            ;BDDC|----/----\----;0000    ;
                      dw $0000                            ;BDDE|----/----\----;0000    ;
                      dw $0000                            ;BDE0|----/----\----;0000    ;
                      dw $0000                            ;BDE2|----/----\----;0000    ;
                      dw DATA_00BAD8                      ;BDE4|----/----\----;D8BA    ;
                      dw DATA_00BAD8                      ;BDE6|----/----\----;D8BA    ;
                                                          ;                   ;        ;
Ptrs00BDE8:           dw DATA_00BB08                      ;BDE8|----/----\----;08BB    ;
                      dw DATA_00BB08                      ;BDEA|----/----\----;08BB    ;
                      dw DATA_00BB08                      ;BDEC|----/----\----;08BB    ;
                      dw DATA_00BB62                      ;BDEE|----/----\----;62BB    ;
                      dw DATA_00BB62                      ;BDF0|----/----\----;62BB    ;
                      dw DATA_00BBC2                      ;BDF2|----/----\----;C2BB    ;
                      dw DATA_00BBC2                      ;BDF4|----/----\----;C2BB    ;
                      dw DATA_00BC16                      ;BDF6|----/----\----;16BC    ;
                      dw DATA_00BC16                      ;BDF8|----/----\----;16BC    ;
                      dw $0000                            ;BDFA|----/----\----;0000    ;
                      dw DATA_00BC16                      ;BDFC|----/----\----;16BC    ;
                      dw $0000                            ;BDFE|----/----\----;0000    ;
                      dw DATA_00BB08                      ;BE00|----/----\----;08BB    ;
                      dw DATA_00BC16                      ;BE02|----/----\----;16BC    ;
                      dw DATA_00BB08                      ;BE04|----/----\----;08BB    ;
                      dw DATA_00BB08                      ;BE06|----/----\----;08BB    ;
                      dw $0000                            ;BE08|----/----\----;0000    ;
                      dw DATA_00BB08                      ;BE0A|----/----\----;08BB    ;
                      dw $0000                            ;BE0C|----/----\----;0000    ;
                      dw $0000                            ;BE0E|----/----\----;0000    ;
                      dw $0000                            ;BE10|----/----\----;0000    ;
                      dw $0000                            ;BE12|----/----\----;0000    ;
                      dw $0000                            ;BE14|----/----\----;0000    ;
                      dw $0000                            ;BE16|----/----\----;0000    ;
                      dw $0000                            ;BE18|----/----\----;0000    ;
                      dw $0000                            ;BE1A|----/----\----;0000    ;
                      dw $0000                            ;BE1C|----/----\----;0000    ;
                      dw $0000                            ;BE1E|----/----\----;0000    ;
                      dw $0000                            ;BE20|----/----\----;0000    ;
                      dw $0000                            ;BE22|----/----\----;0000    ;
                      dw DATA_00BB08                      ;BE24|----/----\----;08BB    ;
                      dw DATA_00BB08                      ;BE26|----/----\----;08BB    ;
                                                          ;                   ;        ;
Ptrs00BE28:           dw DATA_00BC40                      ;BE28|----/----\----;40BC    ;
                      dw DATA_00BC40                      ;BE2A|----/----\----;40BC    ;
                      dw DATA_00BC40                      ;BE2C|----/----\----;40BC    ;
                      dw DATA_00BCA0                      ;BE2E|----/----\----;A0BC    ;
                      dw DATA_00BCA0                      ;BE30|----/----\----;A0BC    ;
                      dw DATA_00BCFA                      ;BE32|----/----\----;FABC    ;
                      dw DATA_00BCFA                      ;BE34|----/----\----;FABC    ;
                      dw DATA_00BD54                      ;BE36|----/----\----;54BD    ;
                      dw DATA_00BD54                      ;BE38|----/----\----;54BD    ;
                      dw $0000                            ;BE3A|----/----\----;0000    ;
                      dw DATA_00BD54                      ;BE3C|----/----\----;54BD    ;
                      dw $0000                            ;BE3E|----/----\----;0000    ;
                      dw DATA_00BC40                      ;BE40|----/----\----;40BC    ;
                      dw DATA_00BD54                      ;BE42|----/----\----;54BD    ;
                      dw DATA_00BC40                      ;BE44|----/----\----;40BC    ;
                      dw DATA_00BC40                      ;BE46|----/----\----;40BC    ;
                      dw $0000                            ;BE48|----/----\----;0000    ;
                      dw DATA_00BC40                      ;BE4A|----/----\----;40BC    ;
                      dw $0000                            ;BE4C|----/----\----;0000    ;
                      dw $0000                            ;BE4E|----/----\----;0000    ;
                      dw $0000                            ;BE50|----/----\----;0000    ;
                      dw $0000                            ;BE52|----/----\----;0000    ;
                      dw $0000                            ;BE54|----/----\----;0000    ;
                      dw $0000                            ;BE56|----/----\----;0000    ;
                      dw $0000                            ;BE58|----/----\----;0000    ;
                      dw $0000                            ;BE5A|----/----\----;0000    ;
                      dw $0000                            ;BE5C|----/----\----;0000    ;
                      dw $0000                            ;BE5E|----/----\----;0000    ;
                      dw $0000                            ;BE60|----/----\----;0000    ;
                      dw $0000                            ;BE62|----/----\----;0000    ;
                      dw DATA_00BC40                      ;BE64|----/----\----;40BC    ;
                      dw DATA_00BC40                      ;BE66|----/----\----;40BC    ;
                                                          ;                   ;        ;
Ptrs00BE68:           dw DATA_00BC70                      ;BE68|----/----\----;70BC    ;
                      dw DATA_00BC70                      ;BE6A|----/----\----;70BC    ;
                      dw DATA_00BC70                      ;BE6C|----/----\----;70BC    ;
                      dw DATA_00BCCA                      ;BE6E|----/----\----;CABC    ;
                      dw DATA_00BCCA                      ;BE70|----/----\----;CABC    ;
                      dw DATA_00BD2A                      ;BE72|----/----\----;2ABD    ;
                      dw DATA_00BD2A                      ;BE74|----/----\----;2ABD    ;
                      dw DATA_00BD7E                      ;BE76|----/----\----;7EBD    ;
                      dw DATA_00BD7E                      ;BE78|----/----\----;7EBD    ;
                      dw $0000                            ;BE7A|----/----\----;0000    ;
                      dw DATA_00BD7E                      ;BE7C|----/----\----;7EBD    ;
                      dw $0000                            ;BE7E|----/----\----;0000    ;
                      dw DATA_00BC70                      ;BE80|----/----\----;70BC    ;
                      dw DATA_00BD7E                      ;BE82|----/----\----;7EBD    ;
                      dw DATA_00BC70                      ;BE84|----/----\----;70BC    ;
                      dw DATA_00BC70                      ;BE86|----/----\----;70BC    ;
                      dw $0000                            ;BE88|----/----\----;0000    ;
                      dw DATA_00BC70                      ;BE8A|----/----\----;70BC    ;
                      dw $0000                            ;BE8C|----/----\----;0000    ;
                      dw $0000                            ;BE8E|----/----\----;0000    ;
                      dw $0000                            ;BE90|----/----\----;0000    ;
                      dw $0000                            ;BE92|----/----\----;0000    ;
                      dw $0000                            ;BE94|----/----\----;0000    ;
                      dw $0000                            ;BE96|----/----\----;0000    ;
                      dw $0000                            ;BE98|----/----\----;0000    ;
                      dw $0000                            ;BE9A|----/----\----;0000    ;
                      dw $0000                            ;BE9C|----/----\----;0000    ;
                      dw $0000                            ;BE9E|----/----\----;0000    ;
                      dw $0000                            ;BEA0|----/----\----;0000    ;
                      dw $0000                            ;BEA2|----/----\----;0000    ;
                      dw DATA_00BC70                      ;BEA4|----/----\----;70BC    ;
                      dw DATA_00BC70                      ;BEA6|----/----\----;70BC    ;
                                                          ;                   ;        ;
LoadBlkPtrs:          dw Ptrs00BDA8                       ;BEA8|----/----\----;A8BD    ;
                      dw Ptrs00BDE8                       ;BEAA|----/----\----;E8BD    ;
LoadBlkTable2:        dw Ptrs00BE28                       ;BEAC|----/----\----;28BE    ;
                      dw Ptrs00BE68                       ;BEAE|----/----\----;68BE    ;
                                                          ;                   ;        ;
GenerateTile:         PHP                                 ;BEB0|----/----\----;08      ;
                      REP #$30                            ;BEB1|----/----\----;C230    ; Index (16 bit) Accum (16 bit) 
                      PHX                                 ;BEB3|----/----\----;DA      ;
                      LDA.B !Map16TileGenerate            ;BEB4|----/----\----;A59C    ;
                      AND.W #$00FF                        ;BEB6|----/----\----;29FF00  ;
                      BNE +                               ;BEB9|----/----\----;D003    ;
ADDR_00BEBB:          JMP CODE_00BFB9                     ;BEBB|----/----\----;4CB9BF  ;
                                                          ;                   ;        ;
                    + LDA.B !TouchBlockXPos               ;BEBE|----/----\----;A59A    ;
                      STA.B !_C                           ;BEC0|----/----\----;850C    ;
                      LDA.B !TouchBlockYPos               ;BEC2|----/----\----;A598    ;
                      STA.B !_E                           ;BEC4|----/----\----;850E    ;
                      LDA.W #$0000                        ;BEC6|----/----\----;A90000  ;
                      SEP #$20                            ;BEC9|----/----\----;E220    ; Accum (8 bit) 
                      LDA.B !ScreenMode                   ;BECB|----/----\----;A55B    ;
                      STA.B !_9                           ;BECD|----/----\----;8509    ;
                      LDA.W !LayerProcessing              ;BECF|----/----\----;AD3319  ;
                      BEQ +                               ;BED2|----/----\----;F002    ;
                      LSR.B !_9                           ;BED4|----/----\----;4609    ;
                    + LDY.B !_E                           ;BED6|----/----\----;A40E    ;
                      LDA.B !_9                           ;BED8|----/----\----;A509    ;
                      AND.B #$01                          ;BEDA|----/----\----;2901    ;
                      BEQ +                               ;BEDC|----/----\----;F00E    ;
                      LDA.B !TouchBlockXPos+1             ;BEDE|----/----\----;A59B    ;
                      STA.B !_0                           ;BEE0|----/----\----;8500    ;
                      LDA.B !TouchBlockYPos+1             ;BEE2|----/----\----;A599    ;
                      STA.B !TouchBlockXPos+1             ;BEE4|----/----\----;859B    ;
                      LDA.B !_0                           ;BEE6|----/----\----;A500    ;
                      STA.B !TouchBlockYPos+1             ;BEE8|----/----\----;8599    ;
                      LDY.B !_C                           ;BEEA|----/----\----;A40C    ;
                    + CPY.W #$0200                        ;BEEC|----/----\----;C00002  ;
                      BCS ADDR_00BEBB                     ;BEEF|----/----\----;B0CA    ;
                      LDA.W !LayerProcessing              ;BEF1|----/----\----;AD3319  ;
                      ASL A                               ;BEF4|----/----\----;0A      ;
                      TAX                                 ;BEF5|----/----\----;AA      ;
                      LDA.L LoadBlkPtrs,X                 ;BEF6|----/----\----;BFA8BE00; Set low byte of pointer 
                      STA.B !Layer1DataPtr                ;BEFA|----/----\----;8565    ;
                      LDA.L LoadBlkPtrs+1,X               ;BEFC|----/----\----;BFA9BE00; Set middle byte of pointer 
                      STA.B !Layer1DataPtr+1              ;BF00|----/----\----;8566    ;
                      STZ.B !Layer1DataPtr+2              ;BF02|----/----\----;6467    ; High byte of pointer = #$00 
                      LDA.W !LevelModeSetting             ;BF04|----/----\----;AD2519  ;
                      ASL A                               ;BF07|----/----\----;0A      ;
                      TAY                                 ;BF08|----/----\----;A8      ;
                      LDA.B [!Layer1DataPtr],Y            ;BF09|----/----\----;B765    ;
                      STA.B !_4                           ;BF0B|----/----\----;8504    ;
                      INY                                 ;BF0D|----/----\----;C8      ;
                      LDA.B [!Layer1DataPtr],Y            ;BF0E|----/----\----;B765    ;
                      STA.B !_5                           ;BF10|----/----\----;8505    ;
                      STZ.B !_6                           ;BF12|----/----\----;6406    ;
                      LDA.B !TouchBlockXPos+1             ;BF14|----/----\----;A59B    ;
                      STA.B !_7                           ;BF16|----/----\----;8507    ;
                      ASL A                               ;BF18|----/----\----;0A      ;
                      CLC                                 ;BF19|----/----\----;18      ;
                      ADC.B !_7                           ;BF1A|----/----\----;6507    ;
                      TAY                                 ;BF1C|----/----\----;A8      ;
                      LDA.B [!_4],Y                       ;BF1D|----/----\----;B704    ;
                      STA.B !Map16LowPtr                  ;BF1F|----/----\----;856B    ;
                      STA.B !Map16HighPtr                 ;BF21|----/----\----;856E    ;
                      INY                                 ;BF23|----/----\----;C8      ;
                      LDA.B [!_4],Y                       ;BF24|----/----\----;B704    ;
                      STA.B !Map16LowPtr+1                ;BF26|----/----\----;856C    ;
                      STA.B !Map16HighPtr+1               ;BF28|----/----\----;856F    ;
                      LDA.B #$7E                          ;BF2A|----/----\----;A97E    ;
                      STA.B !Map16LowPtr+2                ;BF2C|----/----\----;856D    ;
                      INC A                               ;BF2E|----/----\----;1A      ;
                      STA.B !Map16HighPtr+2               ;BF2F|----/----\----;8570    ;
                      LDA.B !_9                           ;BF31|----/----\----;A509    ;
                      AND.B #$01                          ;BF33|----/----\----;2901    ;
                      BEQ +                               ;BF35|----/----\----;F00A    ;
                      LDA.B !TouchBlockYPos+1             ;BF37|----/----\----;A599    ;
                      LSR A                               ;BF39|----/----\----;4A      ;
                      LDA.B !TouchBlockXPos+1             ;BF3A|----/----\----;A59B    ;
                      AND.B #$01                          ;BF3C|----/----\----;2901    ;
                      JMP CODE_00BF46                     ;BF3E|----/----\----;4C46BF  ;
                                                          ;                   ;        ;
                    + LDA.B !TouchBlockXPos+1             ;BF41|----/----\----;A59B    ;
                      LSR A                               ;BF43|----/----\----;4A      ;
                      LDA.B !TouchBlockYPos+1             ;BF44|----/----\----;A599    ;
CODE_00BF46:          ROL A                               ;BF46|----/----\----;2A      ;
                      ASL A                               ;BF47|----/----\----;0A      ;
                      ASL A                               ;BF48|----/----\----;0A      ;
                      ORA.B #$20                          ;BF49|----/----\----;0920    ;
                      STA.B !_4                           ;BF4B|----/----\----;8504    ;
                      CPX.W #$0000                        ;BF4D|----/----\----;E00000  ;
                      BEQ +                               ;BF50|----/----\----;F005    ;
                      CLC                                 ;BF52|----/----\----;18      ;
                      ADC.B #$10                          ;BF53|----/----\----;6910    ;
                      STA.B !_4                           ;BF55|----/----\----;8504    ;
                    + LDA.B !TouchBlockYPos               ;BF57|----/----\----;A598    ;
                      AND.B #$F0                          ;BF59|----/----\----;29F0    ;
                      CLC                                 ;BF5B|----/----\----;18      ;
                      ASL A                               ;BF5C|----/----\----;0A      ;
                      ROL A                               ;BF5D|----/----\----;2A      ;
                      STA.B !_5                           ;BF5E|----/----\----;8505    ;
                      ROL A                               ;BF60|----/----\----;2A      ;
                      AND.B #$03                          ;BF61|----/----\----;2903    ;
                      ORA.B !_4                           ;BF63|----/----\----;0504    ;
                      STA.B !_6                           ;BF65|----/----\----;8506    ;
                      LDA.B !TouchBlockXPos               ;BF67|----/----\----;A59A    ;
                      AND.B #$F0                          ;BF69|----/----\----;29F0    ;
                      LSR A                               ;BF6B|----/----\----;4A      ;
                      LSR A                               ;BF6C|----/----\----;4A      ;
                      LSR A                               ;BF6D|----/----\----;4A      ;
                      STA.B !_4                           ;BF6E|----/----\----;8504    ;
                      LDA.B !_5                           ;BF70|----/----\----;A505    ;
                      AND.B #$C0                          ;BF72|----/----\----;29C0    ;
                      ORA.B !_4                           ;BF74|----/----\----;0504    ;
                      STA.B !_7                           ;BF76|----/----\----;8507    ;
                      REP #$20                            ;BF78|----/----\----;C220    ; Accum (16 bit) 
                      LDA.B !_9                           ;BF7A|----/----\----;A509    ;
                      AND.W #$0001                        ;BF7C|----/----\----;290100  ;
                      BNE CODE_00BF9B                     ;BF7F|----/----\----;D01A    ;
                      LDA.B !Layer1XPos                   ;BF81|----/----\----;A51A    ;
                      SEC                                 ;BF83|----/----\----;38      ;
                      SBC.W #$0080                        ;BF84|----/----\----;E98000  ;
                      TAX                                 ;BF87|----/----\----;AA      ;
                      LDY.B !Layer1YPos                   ;BF88|----/----\----;A41C    ;
                      LDA.W !LayerProcessing              ;BF8A|----/----\----;AD3319  ;
                      BEQ CODE_00BFB2                     ;BF8D|----/----\----;F023    ;
                      LDX.B !Layer2XPos                   ;BF8F|----/----\----;A61E    ;
                      LDA.B !Layer2YPos                   ;BF91|----/----\----;A520    ;
                      SEC                                 ;BF93|----/----\----;38      ;
                      SBC.W #$0080                        ;BF94|----/----\----;E98000  ;
                      TAY                                 ;BF97|----/----\----;A8      ;
                      JMP CODE_00BFB2                     ;BF98|----/----\----;4CB2BF  ;
                                                          ;                   ;        ;
CODE_00BF9B:          LDX.B !Layer1XPos                   ;BF9B|----/----\----;A61A    ;
                      LDA.B !Layer1YPos                   ;BF9D|----/----\----;A51C    ;
                      SEC                                 ;BF9F|----/----\----;38      ;
                      SBC.W #$0080                        ;BFA0|----/----\----;E98000  ;
                      TAY                                 ;BFA3|----/----\----;A8      ;
                      LDA.W !LayerProcessing              ;BFA4|----/----\----;AD3319  ;
                      BEQ CODE_00BFB2                     ;BFA7|----/----\----;F009    ;
                      LDA.B !Layer2XPos                   ;BFA9|----/----\----;A51E    ;
                      SEC                                 ;BFAB|----/----\----;38      ;
                      SBC.W #$0080                        ;BFAC|----/----\----;E98000  ;
                      TAX                                 ;BFAF|----/----\----;AA      ;
                      LDY.B !Layer2YPos                   ;BFB0|----/----\----;A420    ;
CODE_00BFB2:          STX.B !_8                           ;BFB2|----/----\----;8608    ;
                      STY.B !_A                           ;BFB4|----/----\----;840A    ;
                      JSR CODE_00BFBC                     ;BFB6|----/----\----;20BCBF  ;
CODE_00BFB9:          PLX                                 ;BFB9|----/----\----;FA      ;
                      PLP                                 ;BFBA|----/----\----;28      ;
                      RTL                                 ;BFBB|----/----\----;6B      ; Return 
                                                          ;                   ;        ;
CODE_00BFBC:          SEP #$30                            ;BFBC|----/----\----;E230    ; Index (8 bit) Accum (8 bit) 
                      LDA.B !Map16TileGenerate            ;BFBE|----/----\----;A59C    ;
                      DEC A                               ;BFC0|----/----\----;3A      ;
                      PHK                                 ;BFC1|----/----\----;4B      ;
                      PER $0003                           ;BFC2|----/----\----;620300  ;
                      JML ExecutePtr                      ;BFC5|----/----\----;5CDF8600; $9C - Tile generated 
                                                          ;                   ;        ;
                                                          ;                   ;        ;
GeneratedTiles:       dw CODE_00C074                      ;BFC9|----/----\----;74C0    ; 01 - empty space 
                      dw CODE_00C077                      ;BFCB|----/----\----;77C0    ; 02 - empty space 
                      dw CODE_00C077                      ;BFCD|----/----\----;77C0    ; 03 - vine 
                      dw CODE_00C077                      ;BFCF|----/----\----;77C0    ; 04 - tree background, for berries 
                      dw CODE_00C077                      ;BFD1|----/----\----;77C0    ; 05 - always turning block 
                      dw CODE_00C077                      ;BFD3|----/----\----;77C0    ; 06 - coin 
                      dw CODE_00C077                      ;BFD5|----/----\----;77C0    ; 07 - Mushroom scale base 
                      dw CODE_00C077                      ;BFD7|----/----\----;77C0    ; 08 - mole hole 
                      dw CODE_00C0C4                      ;BFD9|----/----\----;C4C0    ; 09 - invisible solid 
                      dw CODE_00C0C4                      ;BFDB|----/----\----;C4C0    ; 0a - multiple coin turnblock 
                      dw CODE_00C0C4                      ;BFDD|----/----\----;C4C0    ; 0b - multiple coin q block 
                      dw CODE_00C0C4                      ;BFDF|----/----\----;C4C0    ; 0c - turn block 
                      dw CODE_00C0C4                      ;BFE1|----/----\----;C4C0    ; 0d - used block 
                      dw CODE_00C0C4                      ;BFE3|----/----\----;C4C0    ; 0e - music block 
                      dw CODE_00C0C4                      ;BFE5|----/----\----;C4C0    ; 0f - music 
                      dw CODE_00C0C4                      ;BFE7|----/----\----;C4C0    ; 10 - all way music block 
                      dw CODE_00C0C4                      ;BFE9|----/----\----;C4C0    ; 11 - sideways turn block 
                      dw CODE_00C0C4                      ;BFEB|----/----\----;C4C0    ; 12 - tranlucent 
                      dw CODE_00C0C4                      ;BFED|----/----\----;C4C0    ; 13 - on off 
                      dw CODE_00C0C4                      ;BFEF|----/----\----;C4C0    ; 14 - side of pipe, left 
                      dw CODE_00C0C4                      ;BFF1|----/----\----;C4C0    ; 15 - side of pipe, right 
                      dw CODE_00C0C1                      ;BFF3|----/----\----;C1C0    ; 16 - used 
                      dw CODE_00C0C1                      ;BFF5|----/----\----;C1C0    ; 17 - O block from 1up game 
                      dw CODE_00C1AC                      ;BFF7|----/----\----;ACC1    ; 18 - invisible block containing wings 
                      dw CODE_00C334                      ;BFF9|----/----\----;34C3    ; 19 - cage 
                      dw CODE_00C334                      ;BFFB|----/----\----;34C3    ; 1a - cage 
                      dw CODE_00C3D1                      ;BFFD|----/----\----;D1C3    ; 1b -  
                                                          ;                   ;        ;
DATA_00BFFF:          db $00,$00,$80,$00,$00,$01          ;BFFF|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00C005:          db $80,$40,$20,$10,$08,$04,$02,$01  ;C005|----/----\----;        ;
                                                          ;                   ;        ;
CODE_00C00D:          REP #$30                            ;C00D|----/----\----;C230    ; Index (16 bit) Accum (16 bit) 
                      LDA.B !TouchBlockXPos               ;C00F|----/----\----;A59A    ;
                      AND.W #$FF00                        ;C011|----/----\----;2900FF  ;
                      LSR A                               ;C014|----/----\----;4A      ;
                      LSR A                               ;C015|----/----\----;4A      ;
                      LSR A                               ;C016|----/----\----;4A      ;
                      LSR A                               ;C017|----/----\----;4A      ;
                      LSR A                               ;C018|----/----\----;4A      ;
                      LSR A                               ;C019|----/----\----;4A      ;
                      STA.B !_4                           ;C01A|----/----\----;8504    ;
                      LDA.B !TouchBlockXPos               ;C01C|----/----\----;A59A    ;
                      AND.W #$0080                        ;C01E|----/----\----;298000  ;
                      LSR A                               ;C021|----/----\----;4A      ;
                      LSR A                               ;C022|----/----\----;4A      ;
                      LSR A                               ;C023|----/----\----;4A      ;
                      LSR A                               ;C024|----/----\----;4A      ;
                      LSR A                               ;C025|----/----\----;4A      ;
                      LSR A                               ;C026|----/----\----;4A      ;
                      LSR A                               ;C027|----/----\----;4A      ;
                      ORA.B !_4                           ;C028|----/----\----;0504    ;
                      STA.B !_4                           ;C02A|----/----\----;8504    ;
                      LDA.B !TouchBlockYPos               ;C02C|----/----\----;A598    ;
                      AND.W #$0100                        ;C02E|----/----\----;290001  ;
                      BEQ +                               ;C031|----/----\----;F007    ;
                      LDA.B !_4                           ;C033|----/----\----;A504    ;
                      ORA.W #$0002                        ;C035|----/----\----;090200  ;
                      STA.B !_4                           ;C038|----/----\----;8504    ;
                    + LDA.W !ItemMemorySetting            ;C03A|----/----\----;ADBE13  ;
                      AND.W #$000F                        ;C03D|----/----\----;290F00  ;
                      ASL A                               ;C040|----/----\----;0A      ;
                      TAX                                 ;C041|----/----\----;AA      ;
                      LDA.L DATA_00BFFF,X                 ;C042|----/----\----;BFFFBF00;
                      CLC                                 ;C046|----/----\----;18      ;
                      ADC.B !_4                           ;C047|----/----\----;6504    ;
                      STA.B !_4                           ;C049|----/----\----;8504    ;
                      TAY                                 ;C04B|----/----\----;A8      ;
                      LDA.B !TouchBlockXPos               ;C04C|----/----\----;A59A    ;
                      AND.W #$0070                        ;C04E|----/----\----;297000  ;
                      LSR A                               ;C051|----/----\----;4A      ;
                      LSR A                               ;C052|----/----\----;4A      ;
                      LSR A                               ;C053|----/----\----;4A      ;
                      LSR A                               ;C054|----/----\----;4A      ;
                      TAX                                 ;C055|----/----\----;AA      ;
                      SEP #$20                            ;C056|----/----\----;E220    ; Accum (8 bit) 
                      LDA.W !ItemMemoryTable,Y            ;C058|----/----\----;B9F819  ;
                      ORA.L DATA_00C005,X                 ;C05B|----/----\----;1F05C000;
                      STA.W !ItemMemoryTable,Y            ;C05F|----/----\----;99F819  ;
                      RTS                                 ;C062|----/----\----;60      ; Return 
                                                          ;                   ;        ;
                                                          ;                   ;        ;
                      db $7F,$BF,$DF,$EF,$F7,$FB,$FD,$FE  ;C063|----/----\----;        ;
TileToGeneratePg0:    db $25,$25,$25,$06,$49,$48,$2B,$A2  ;C06B|----/----\----;        ;
                      db $C6                              ;C073|----/----\----;        ;
                                                          ;                   ;        ;
CODE_00C074:          JSR CODE_00C00D                     ;C074|----/----\----;200DC0  ;
CODE_00C077:          REP #$30                            ;C077|----/----\----;C230    ; Index (16 bit) Accum (16 bit) 
                      LDA.B !TouchBlockYPos               ;C079|----/----\----;A598    ;
                      AND.W #$01F0                        ;C07B|----/----\----;29F001  ;
                      STA.B !_4                           ;C07E|----/----\----;8504    ;
                      LDA.B !TouchBlockXPos               ;C080|----/----\----;A59A    ;
                      LSR A                               ;C082|----/----\----;4A      ;
                      LSR A                               ;C083|----/----\----;4A      ;
                      LSR A                               ;C084|----/----\----;4A      ;
                      LSR A                               ;C085|----/----\----;4A      ;
                      AND.W #$000F                        ;C086|----/----\----;290F00  ;
                      ORA.B !_4                           ;C089|----/----\----;0504    ;
                      TAY                                 ;C08B|----/----\----;A8      ;
                      LDA.B !Map16TileGenerate            ;C08C|----/----\----;A59C    ; \ X = index of tile to generate 
                      AND.W #$00FF                        ;C08E|----/----\----;29FF00  ;  | 
                      TAX                                 ;C091|----/----\----;AA      ; / 
                      SEP #$20                            ;C092|----/----\----;E220    ; Accum (8 bit) 
                      LDA.B [!Map16HighPtr],Y             ;C094|----/----\----;B76E    ; \ Reset #$01 bit 
                      AND.B #$FE                          ;C096|----/----\----;29FE    ;  | 
                      STA.B [!Map16HighPtr],Y             ;C098|----/----\----;976E    ; / 
                      LDA.L TileToGeneratePg0,X           ;C09A|----/----\----;BF6BC000; \ Store tile 
                      STA.B [!Map16LowPtr],Y              ;C09E|----/----\----;976B    ; / 
                      REP #$20                            ;C0A0|----/----\----;C220    ; Accum (16 bit) 
                      AND.W #$00FF                        ;C0A2|----/----\----;29FF00  ;
                      ASL A                               ;C0A5|----/----\----;0A      ;
                      TAY                                 ;C0A6|----/----\----;A8      ;
                      JMP CODE_00C0FB                     ;C0A7|----/----\----;4CFBC0  ;
                                                          ;                   ;        ;
                                                          ;                   ;        ;
                      db $80,$40,$20,$10,$08,$04,$02,$01  ;C0AA|----/----\----;        ;
TileToGeneratePg1:    db $52,$1B,$23,$1E,$32,$13,$15,$16  ;C0B2|----/----\----;        ;
                      db $2B,$2C,$12,$68,$69,$32,$5E      ;C0BA|----/----\----;        ;
                                                          ;                   ;        ;
CODE_00C0C1:          JSR CODE_00C00D                     ;C0C1|----/----\----;200DC0  ;
CODE_00C0C4:          REP #$30                            ;C0C4|----/----\----;C230    ; Index (16 bit) Accum (16 bit) 
                      LDA.B !TouchBlockYPos               ;C0C6|----/----\----;A598    ;
                      AND.W #$01F0                        ;C0C8|----/----\----;29F001  ;
                      STA.B !_4                           ;C0CB|----/----\----;8504    ;
                      LDA.B !TouchBlockXPos               ;C0CD|----/----\----;A59A    ;
                      LSR A                               ;C0CF|----/----\----;4A      ;
                      LSR A                               ;C0D0|----/----\----;4A      ;
                      LSR A                               ;C0D1|----/----\----;4A      ;
                      LSR A                               ;C0D2|----/----\----;4A      ;
                      AND.W #$000F                        ;C0D3|----/----\----;290F00  ;
                      ORA.B !_4                           ;C0D6|----/----\----;0504    ;
                      TAY                                 ;C0D8|----/----\----;A8      ;
                      LDA.B !Map16TileGenerate            ;C0D9|----/----\----;A59C    ; \ X = index of tile to generate 
                      SEC                                 ;C0DB|----/----\----;38      ;  | 
                      SBC.W #$0009                        ;C0DC|----/----\----;E90900  ;  | 
                      AND.W #$00FF                        ;C0DF|----/----\----;29FF00  ;  | 
                      TAX                                 ;C0E2|----/----\----;AA      ; / 
                      SEP #$20                            ;C0E3|----/----\----;E220    ; Accum (8 bit) 
                      LDA.B [!Map16HighPtr],Y             ;C0E5|----/----\----;B76E    ; \ Set #$01 bit 
                      ORA.B #$01                          ;C0E7|----/----\----;0901    ;  | 
                      STA.B [!Map16HighPtr],Y             ;C0E9|----/----\----;976E    ; / 
                      LDA.L TileToGeneratePg1,X           ;C0EB|----/----\----;BFB2C000; \ Store tile 
                      STA.B [!Map16LowPtr],Y              ;C0EF|----/----\----;976B    ; / 
                      REP #$20                            ;C0F1|----/----\----;C220    ; Accum (16 bit) 
                      AND.W #$00FF                        ;C0F3|----/----\----;29FF00  ;
                      ORA.W #$0100                        ;C0F6|----/----\----;090001  ;
                      ASL A                               ;C0F9|----/----\----;0A      ;
                      TAY                                 ;C0FA|----/----\----;A8      ;
CODE_00C0FB:          LDA.B !ScreenMode                   ;C0FB|----/----\----;A55B    ;
                      STA.B !_0                           ;C0FD|----/----\----;8500    ;
                      LDA.W !LayerProcessing              ;C0FF|----/----\----;AD3319  ;
                      BEQ +                               ;C102|----/----\----;F002    ;
                      LSR.B !_0                           ;C104|----/----\----;4600    ;
                    + LDA.B !_0                           ;C106|----/----\----;A500    ;
                      AND.W #$0001                        ;C108|----/----\----;290100  ;
                      BNE CODE_00C127                     ;C10B|----/----\----;D01A    ;
                      LDA.B !_8                           ;C10D|----/----\----;A508    ;
                      AND.W #$FFF0                        ;C10F|----/----\----;29F0FF  ;
                      BMI CODE_00C11A                     ;C112|----/----\----;3006    ;
                      CMP.B !_C                           ;C114|----/----\----;C50C    ;
                      BEQ CODE_00C13E                     ;C116|----/----\----;F026    ;
                      BCS CODE_00C124                     ;C118|----/----\----;B00A    ;
CODE_00C11A:          CLC                                 ;C11A|----/----\----;18      ;
                      ADC.W #$0200                        ;C11B|----/----\----;690002  ;
                      CMP.B !_C                           ;C11E|----/----\----;C50C    ;
                      BEQ CODE_00C124                     ;C120|----/----\----;F002    ;
                      BCS CODE_00C13E                     ;C122|----/----\----;B01A    ;
CODE_00C124:          JMP Return00C1AB                    ;C124|----/----\----;4CABC1  ;
                                                          ;                   ;        ;
CODE_00C127:          LDA.B !_A                           ;C127|----/----\----;A50A    ;
                      AND.W #$FFF0                        ;C129|----/----\----;29F0FF  ;
                      BMI CODE_00C134                     ;C12C|----/----\----;3006    ;
                      CMP.B !_E                           ;C12E|----/----\----;C50E    ;
                      BEQ CODE_00C13E                     ;C130|----/----\----;F00C    ;
                      BCS Return00C1AB                    ;C132|----/----\----;B077    ;
CODE_00C134:          CLC                                 ;C134|----/----\----;18      ;
                      ADC.W #$0200                        ;C135|----/----\----;690002  ;
                      CMP.B !_E                           ;C138|----/----\----;C50E    ;
                      BEQ Return00C1AB                    ;C13A|----/----\----;F06F    ;
                      BCC Return00C1AB                    ;C13C|----/----\----;906D    ;
CODE_00C13E:          LDA.L !DynStripeImgSize             ;C13E|----/----\----;AF7B837F;
                      TAX                                 ;C142|----/----\----;AA      ;
                      SEP #$20                            ;C143|----/----\----;E220    ; Accum (8 bit) 
                      LDA.B !_6                           ;C145|----/----\----;A506    ;
                      STA.L !DynamicStripeImage,X         ;C147|----/----\----;9F7D837F;
                      STA.L !DynamicStripeImage+8,X       ;C14B|----/----\----;9F85837F;
                      LDA.B !_7                           ;C14F|----/----\----;A507    ;
                      STA.L !DynamicStripeImage+1,X       ;C151|----/----\----;9F7E837F;
                      CLC                                 ;C155|----/----\----;18      ;
                      ADC.B #$20                          ;C156|----/----\----;6920    ;
                      STA.L !DynamicStripeImage+9,X       ;C158|----/----\----;9F86837F;
                      LDA.B #$00                          ;C15C|----/----\----;A900    ;
                      STA.L !DynamicStripeImage+2,X       ;C15E|----/----\----;9F7F837F;
                      STA.L !DynamicStripeImage+$0A,X     ;C162|----/----\----;9F87837F;
                      LDA.B #$03                          ;C166|----/----\----;A903    ;
                      STA.L !DynamicStripeImage+3,X       ;C168|----/----\----;9F80837F;
                      STA.L !DynamicStripeImage+$0B,X     ;C16C|----/----\----;9F88837F;
                      LDA.B #$FF                          ;C170|----/----\----;A9FF    ;
                      STA.L !DynamicStripeImage+$10,X     ;C172|----/----\----;9F8D837F;
                      LDA.B #$0D                          ;C176|----/----\----;A90D    ;
                      STA.B !_6                           ;C178|----/----\----;8506    ;
                      REP #$20                            ;C17A|----/----\----;C220    ; Accum (16 bit) 
                      LDA.W !Map16Pointers,Y              ;C17C|----/----\----;B9BE0F  ;
                      STA.B !_4                           ;C17F|----/----\----;8504    ;
                      LDY.W #$0000                        ;C181|----/----\----;A00000  ;
                      LDA.B [!_4],Y                       ;C184|----/----\----;B704    ;
                      STA.L !DynamicStripeImage+4,X       ;C186|----/----\----;9F81837F;
                      INY                                 ;C18A|----/----\----;C8      ;
                      INY                                 ;C18B|----/----\----;C8      ;
                      LDA.B [!_4],Y                       ;C18C|----/----\----;B704    ;
                      STA.L !DynamicStripeImage+$0C,X     ;C18E|----/----\----;9F89837F;
                      INY                                 ;C192|----/----\----;C8      ;
                      INY                                 ;C193|----/----\----;C8      ;
                      LDA.B [!_4],Y                       ;C194|----/----\----;B704    ;
                      STA.L !DynamicStripeImage+6,X       ;C196|----/----\----;9F83837F;
                      INY                                 ;C19A|----/----\----;C8      ;
                      INY                                 ;C19B|----/----\----;C8      ;
                      LDA.B [!_4],Y                       ;C19C|----/----\----;B704    ;
                      STA.L !DynamicStripeImage+$0E,X     ;C19E|----/----\----;9F8B837F;
                      TXA                                 ;C1A2|----/----\----;8A      ;
                      CLC                                 ;C1A3|----/----\----;18      ;
                      ADC.W #$0010                        ;C1A4|----/----\----;691000  ;
                      STA.L !DynStripeImgSize             ;C1A7|----/----\----;8F7B837F;
Return00C1AB:         RTS                                 ;C1AB|----/----\----;60      ; Return 
                                                          ;                   ;        ;
CODE_00C1AC:          JSR CODE_00C00D                     ;C1AC|----/----\----;200DC0  ;
                      REP #$30                            ;C1AF|----/----\----;C230    ; Index (16 bit) Accum (16 bit) 
                      LDA.B !TouchBlockYPos               ;C1B1|----/----\----;A598    ;
                      AND.W #$01F0                        ;C1B3|----/----\----;29F001  ;
                      STA.B !_4                           ;C1B6|----/----\----;8504    ;
                      LDA.B !TouchBlockXPos               ;C1B8|----/----\----;A59A    ;
                      LSR A                               ;C1BA|----/----\----;4A      ;
                      LSR A                               ;C1BB|----/----\----;4A      ;
                      LSR A                               ;C1BC|----/----\----;4A      ;
                      LSR A                               ;C1BD|----/----\----;4A      ;
                      AND.W #$000F                        ;C1BE|----/----\----;290F00  ;
                      ORA.B !_4                           ;C1C1|----/----\----;0504    ;
                      TAY                                 ;C1C3|----/----\----;A8      ;
                      SEP #$20                            ;C1C4|----/----\----;E220    ; Accum (8 bit) 
                      LDA.B #$25                          ;C1C6|----/----\----;A925    ;
                      STA.B [!Map16LowPtr],Y              ;C1C8|----/----\----;976B    ;
                      REP #$20                            ;C1CA|----/----\----;C220    ; Accum (16 bit) 
                      TYA                                 ;C1CC|----/----\----;98      ;
                      CLC                                 ;C1CD|----/----\----;18      ;
                      ADC.W #$0010                        ;C1CE|----/----\----;691000  ;
                      TAY                                 ;C1D1|----/----\----;A8      ;
                      SEP #$20                            ;C1D2|----/----\----;E220    ; Accum (8 bit) 
                      LDA.B #$25                          ;C1D4|----/----\----;A925    ;
                      STA.B [!Map16LowPtr],Y              ;C1D6|----/----\----;976B    ;
                      REP #$20                            ;C1D8|----/----\----;C220    ; Accum (16 bit) 
                      AND.W #$00FF                        ;C1DA|----/----\----;29FF00  ;
                      ASL A                               ;C1DD|----/----\----;0A      ;
                      TAY                                 ;C1DE|----/----\----;A8      ;
                      LDA.B !ScreenMode                   ;C1DF|----/----\----;A55B    ;
                      STA.B !_0                           ;C1E1|----/----\----;8500    ;
                      LDA.W !LayerProcessing              ;C1E3|----/----\----;AD3319  ;
                      BEQ +                               ;C1E6|----/----\----;F002    ;
                      LSR.B !_0                           ;C1E8|----/----\----;4600    ;
                    + LDA.B !_0                           ;C1EA|----/----\----;A500    ;
                      AND.W #$0001                        ;C1EC|----/----\----;290100  ;
                      BNE CODE_00C20B                     ;C1EF|----/----\----;D01A    ;
                      LDA.B !_8                           ;C1F1|----/----\----;A508    ;
                      AND.W #$FFF0                        ;C1F3|----/----\----;29F0FF  ;
                      BMI CODE_00C1FE                     ;C1F6|----/----\----;3006    ;
                      CMP.B !_C                           ;C1F8|----/----\----;C50C    ;
                      BEQ CODE_00C222                     ;C1FA|----/----\----;F026    ;
                      BCS Return00C1AB                    ;C1FC|----/----\----;B0AD    ;
CODE_00C1FE:          CLC                                 ;C1FE|----/----\----;18      ;
                      ADC.W #$0200                        ;C1FF|----/----\----;690002  ;
                      CMP.B !_C                           ;C202|----/----\----;C50C    ;
                      BCC Return00C1AB                    ;C204|----/----\----;90A5    ;
                      BEQ Return00C1AB                    ;C206|----/----\----;F0A3    ;
                      JMP CODE_00C222                     ;C208|----/----\----;4C22C2  ;
                                                          ;                   ;        ;
CODE_00C20B:          LDA.B !_A                           ;C20B|----/----\----;A50A    ;
                      AND.W #$FFF0                        ;C20D|----/----\----;29F0FF  ;
                      BMI CODE_00C218                     ;C210|----/----\----;3006    ;
                      CMP.B !_E                           ;C212|----/----\----;C50E    ;
                      BEQ CODE_00C222                     ;C214|----/----\----;F00C    ;
                      BCS Return00C1AB                    ;C216|----/----\----;B093    ;
CODE_00C218:          CLC                                 ;C218|----/----\----;18      ;
                      ADC.W #$0200                        ;C219|----/----\----;690002  ;
                      CMP.B !_E                           ;C21C|----/----\----;C50E    ;
                      BEQ Return00C1AB                    ;C21E|----/----\----;F08B    ;
                      BCC Return00C1AB                    ;C220|----/----\----;9089    ;
CODE_00C222:          LDA.L !DynStripeImgSize             ;C222|----/----\----;AF7B837F;
                      TAX                                 ;C226|----/----\----;AA      ;
                      SEP #$20                            ;C227|----/----\----;E220    ; Accum (8 bit) 
                      LDA.B !_6                           ;C229|----/----\----;A506    ;
                      STA.L !DynamicStripeImage,X         ;C22B|----/----\----;9F7D837F;
                      STA.L !DynamicStripeImage+$0C,X     ;C22F|----/----\----;9F89837F;
                      LDA.B !_7                           ;C233|----/----\----;A507    ;
                      STA.L !DynamicStripeImage+1,X       ;C235|----/----\----;9F7E837F;
                      INC A                               ;C239|----/----\----;1A      ;
                      STA.L !DynamicStripeImage+$0D,X     ;C23A|----/----\----;9F8A837F;
                      LDA.B #$80                          ;C23E|----/----\----;A980    ;
                      STA.L !DynamicStripeImage+2,X       ;C240|----/----\----;9F7F837F;
                      STA.L !DynamicStripeImage+$0E,X     ;C244|----/----\----;9F8B837F;
                      LDA.B #$07                          ;C248|----/----\----;A907    ;
                      STA.L !DynamicStripeImage+3,X       ;C24A|----/----\----;9F80837F;
                      STA.L !DynamicStripeImage+$0F,X     ;C24E|----/----\----;9F8C837F;
                      LDA.B #$FF                          ;C252|----/----\----;A9FF    ;
                      STA.L !DynamicStripeImage+$18,X     ;C254|----/----\----;9F95837F;
                      LDA.B #$0D                          ;C258|----/----\----;A90D    ;
                      STA.B !_6                           ;C25A|----/----\----;8506    ;
                      REP #$20                            ;C25C|----/----\----;C220    ; Accum (16 bit) 
                      LDA.W !Map16Pointers,Y              ;C25E|----/----\----;B9BE0F  ;
                      STA.B !_4                           ;C261|----/----\----;8504    ;
                      LDY.W #$0000                        ;C263|----/----\----;A00000  ;
                      LDA.B [!_4],Y                       ;C266|----/----\----;B704    ;
                      STA.L !DynamicStripeImage+4,X       ;C268|----/----\----;9F81837F;
                      STA.L !DynamicStripeImage+8,X       ;C26C|----/----\----;9F85837F;
                      INY                                 ;C270|----/----\----;C8      ;
                      INY                                 ;C271|----/----\----;C8      ;
                      LDA.B [!_4],Y                       ;C272|----/----\----;B704    ;
                      STA.L !DynamicStripeImage+$10,X     ;C274|----/----\----;9F8D837F;
                      STA.L !DynamicStripeImage+$14,X     ;C278|----/----\----;9F91837F;
                      INY                                 ;C27C|----/----\----;C8      ;
                      INY                                 ;C27D|----/----\----;C8      ;
                      LDA.B [!_4],Y                       ;C27E|----/----\----;B704    ;
                      STA.L !DynamicStripeImage+6,X       ;C280|----/----\----;9F83837F;
                      STA.L !DynamicStripeImage+$0A,X     ;C284|----/----\----;9F87837F;
                      INY                                 ;C288|----/----\----;C8      ;
                      INY                                 ;C289|----/----\----;C8      ;
                      LDA.B [!_4],Y                       ;C28A|----/----\----;B704    ;
                      STA.L !DynamicStripeImage+$12,X     ;C28C|----/----\----;9F8F837F;
                      STA.L !DynamicStripeImage+$16,X     ;C290|----/----\----;9F93837F;
                      TXA                                 ;C294|----/----\----;8A      ;
                      CLC                                 ;C295|----/----\----;18      ;
                      ADC.W #$0018                        ;C296|----/----\----;691800  ;
                      STA.L !DynStripeImgSize             ;C299|----/----\----;8F7B837F;
                      RTS                                 ;C29D|----/----\----;60      ; Return 
                                                          ;                   ;        ;
                                                          ;                   ;        ;
                      db $99,$9C,$8B,$1C,$8B,$1C,$8B,$1C  ;C29E|----/----\----;        ;
                      db $8B,$1C,$99,$DC,$9B,$1C,$F8,$1C  ;C2A6|----/----\----;        ;
                      db $F8,$1C,$F8,$1C,$F8,$1C,$9B,$5C  ;C2AE|----/----\----;        ;
                      db $9B,$1C,$F8,$1C,$F8,$1C,$F8,$1C  ;C2B6|----/----\----;        ;
                      db $F8,$1C,$9B,$5C,$9B,$1C,$F8,$1C  ;C2BE|----/----\----;        ;
                      db $F8,$1C,$F8,$1C,$F8,$1C,$9B,$5C  ;C2C6|----/----\----;        ;
                      db $9B,$1C,$F8,$1C,$F8,$1C,$F8,$1C  ;C2CE|----/----\----;        ;
                      db $F8,$1C,$9B,$5C,$99,$1C,$8B,$9C  ;C2D6|----/----\----;        ;
                      db $8B,$9C,$8B,$9C,$8B,$9C,$99,$5C  ;C2DE|----/----\----;        ;
                      db $BA,$9C,$AB,$1C,$AB,$1C,$AB,$1C  ;C2E6|----/----\----;        ;
                      db $AB,$1C,$BA,$DC,$AA,$1C,$82,$1C  ;C2EE|----/----\----;        ;
                      db $82,$1C,$82,$1C,$82,$1C,$AA,$5C  ;C2F6|----/----\----;        ;
                      db $AA,$1C,$82,$1C,$82,$1C,$82,$1C  ;C2FE|----/----\----;        ;
                      db $82,$1C,$AA,$5C,$AA,$1C,$82,$1C  ;C306|----/----\----;        ;
                      db $82,$1C,$82,$1C,$82,$1C,$AA,$5C  ;C30E|----/----\----;        ;
                      db $AA,$1C,$82,$1C,$82,$1C,$82,$1C  ;C316|----/----\----;        ;
                      db $82,$1C,$AA,$5C,$BA,$1C,$AB,$9C  ;C31E|----/----\----;        ;
                      db $AB,$9C,$AB,$9C,$AB,$9C,$BA,$5C  ;C326|----/----\----;        ;
DATA_00C32E:          db $9E,$C2                          ;C32E|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00C330:          db $00,$E6,$C2,$00                  ;C330|----/----\----;        ;
                                                          ;                   ;        ;
CODE_00C334:          INC.B !_7                           ;C334|----/----\----;E607    ; Accum (8 bit) 
                      LDA.B !_7                           ;C336|----/----\----;A507    ;
                      CLC                                 ;C338|----/----\----;18      ;
                      ADC.B #$20                          ;C339|----/----\----;6920    ;
                      STA.B !_7                           ;C33B|----/----\----;8507    ;
                      LDA.B !_6                           ;C33D|----/----\----;A506    ;
                      ADC.B #$00                          ;C33F|----/----\----;6900    ;
                      STA.B !_6                           ;C341|----/----\----;8506    ;
                      LDA.B !Map16TileGenerate            ;C343|----/----\----;A59C    ;
                      SEC                                 ;C345|----/----\----;38      ;
                      SBC.B #$19                          ;C346|----/----\----;E919    ;
                      STA.B !_0                           ;C348|----/----\----;8500    ;
                      ASL A                               ;C34A|----/----\----;0A      ;
                      CLC                                 ;C34B|----/----\----;18      ;
                      ADC.B !_0                           ;C34C|----/----\----;6500    ;
                      TAX                                 ;C34E|----/----\----;AA      ;
                      LDA.L DATA_00C330,X                 ;C34F|----/----\----;BF30C300;
                      STA.B !_4                           ;C353|----/----\----;8504    ;
                      REP #$30                            ;C355|----/----\----;C230    ; Index (16 bit) Accum (16 bit) 
                      LDA.L DATA_00C32E,X                 ;C357|----/----\----;BF2EC300;
                      STA.B !_2                           ;C35B|----/----\----;8502    ;
                      LDA.L !DynStripeImgSize             ;C35D|----/----\----;AF7B837F;
                      TAX                                 ;C361|----/----\----;AA      ;
                      LDY.W #$0005                        ;C362|----/----\----;A00500  ;
                    - SEP #$20                            ;C365|----/----\----;E220    ; Accum (8 bit) 
                      LDA.B !_6                           ;C367|----/----\----;A506    ;
                      STA.L !DynamicStripeImage,X         ;C369|----/----\----;9F7D837F;
                      LDA.B !_7                           ;C36D|----/----\----;A507    ;
                      STA.L !DynamicStripeImage+1,X       ;C36F|----/----\----;9F7E837F;
                      LDA.B #$00                          ;C373|----/----\----;A900    ;
                      STA.L !DynamicStripeImage+2,X       ;C375|----/----\----;9F7F837F;
                      LDA.B #$0B                          ;C379|----/----\----;A90B    ;
                      STA.L !DynamicStripeImage+3,X       ;C37B|----/----\----;9F80837F;
                      LDA.B !_7                           ;C37F|----/----\----;A507    ;
                      CLC                                 ;C381|----/----\----;18      ;
                      ADC.B #$20                          ;C382|----/----\----;6920    ;
                      STA.B !_7                           ;C384|----/----\----;8507    ;
                      LDA.B !_6                           ;C386|----/----\----;A506    ;
                      ADC.B #$00                          ;C388|----/----\----;6900    ;
                      STA.B !_6                           ;C38A|----/----\----;8506    ;
                      REP #$20                            ;C38C|----/----\----;C220    ; Accum (16 bit) 
                      TXA                                 ;C38E|----/----\----;8A      ;
                      CLC                                 ;C38F|----/----\----;18      ;
                      ADC.W #$0010                        ;C390|----/----\----;691000  ;
                      TAX                                 ;C393|----/----\----;AA      ;
                      DEY                                 ;C394|----/----\----;88      ;
                      BPL -                               ;C395|----/----\----;10CE    ;
                      LDA.L !DynStripeImgSize             ;C397|----/----\----;AF7B837F;
                      TAX                                 ;C39B|----/----\----;AA      ;
                      LDY.W #$0000                        ;C39C|----/----\----;A00000  ;
CODE_00C39F:          LDA.W #$0005                        ;C39F|----/----\----;A90500  ;
                      STA.B !_0                           ;C3A2|----/----\----;8500    ;
                    - LDA.B [!_2],Y                       ;C3A4|----/----\----;B702    ;
                      STA.L !DynamicStripeImage+4,X       ;C3A6|----/----\----;9F81837F;
                      INY                                 ;C3AA|----/----\----;C8      ;
                      INY                                 ;C3AB|----/----\----;C8      ;
                      INX                                 ;C3AC|----/----\----;E8      ;
                      INX                                 ;C3AD|----/----\----;E8      ;
                      DEC.B !_0                           ;C3AE|----/----\----;C600    ;
                      BPL -                               ;C3B0|----/----\----;10F2    ;
                      TXA                                 ;C3B2|----/----\----;8A      ;
                      CLC                                 ;C3B3|----/----\----;18      ;
                      ADC.W #$0004                        ;C3B4|----/----\----;690400  ;
                      TAX                                 ;C3B7|----/----\----;AA      ;
                      CPY.W #$0048                        ;C3B8|----/----\----;C04800  ;
                      BNE CODE_00C39F                     ;C3BB|----/----\----;D0E2    ;
                      LDA.W #$00FF                        ;C3BD|----/----\----;A9FF00  ;
                      STA.L !DynamicStripeImage,X         ;C3C0|----/----\----;9F7D837F;
                      LDA.L !DynStripeImgSize             ;C3C4|----/----\----;AF7B837F;
                      CLC                                 ;C3C8|----/----\----;18      ;
                      ADC.W #$0060                        ;C3C9|----/----\----;696000  ;
                      STA.L !DynStripeImgSize             ;C3CC|----/----\----;8F7B837F;
                      RTS                                 ;C3D0|----/----\----;60      ; Return 
                                                          ;                   ;        ;
CODE_00C3D1:          REP #$30                            ;C3D1|----/----\----;C230    ; Index (16 bit) Accum (16 bit) 
                      LDA.B !TouchBlockYPos               ;C3D3|----/----\----;A598    ;
                      AND.W #$01F0                        ;C3D5|----/----\----;29F001  ;
                      STA.B !_4                           ;C3D8|----/----\----;8504    ;
                      LDA.B !TouchBlockXPos               ;C3DA|----/----\----;A59A    ;
                      LSR A                               ;C3DC|----/----\----;4A      ;
                      LSR A                               ;C3DD|----/----\----;4A      ;
                      LSR A                               ;C3DE|----/----\----;4A      ;
                      LSR A                               ;C3DF|----/----\----;4A      ;
                      AND.W #$000F                        ;C3E0|----/----\----;290F00  ;
                      ORA.B !_4                           ;C3E3|----/----\----;0504    ;
                      TAY                                 ;C3E5|----/----\----;A8      ;
                      LDA.L !DynStripeImgSize             ;C3E6|----/----\----;AF7B837F;
                      TAX                                 ;C3EA|----/----\----;AA      ;
                      SEP #$20                            ;C3EB|----/----\----;E220    ; Accum (8 bit) 
                      LDA.B #$25                          ;C3ED|----/----\----;A925    ;
                      STA.B [!Map16LowPtr],Y              ;C3EF|----/----\----;976B    ;
                      INY                                 ;C3F1|----/----\----;C8      ;
                      LDA.B #$25                          ;C3F2|----/----\----;A925    ;
                      STA.B [!Map16LowPtr],Y              ;C3F4|----/----\----;976B    ;
                      REP #$20                            ;C3F6|----/----\----;C220    ; Accum (16 bit) 
                      TYA                                 ;C3F8|----/----\----;98      ;
                      CLC                                 ;C3F9|----/----\----;18      ;
                      ADC.W #$0010                        ;C3FA|----/----\----;691000  ;
                      TAY                                 ;C3FD|----/----\----;A8      ;
                      SEP #$20                            ;C3FE|----/----\----;E220    ; Accum (8 bit) 
                      LDA.B #$25                          ;C400|----/----\----;A925    ;
                      STA.B [!Map16LowPtr],Y              ;C402|----/----\----;976B    ;
                      DEY                                 ;C404|----/----\----;88      ;
                      LDA.B #$25                          ;C405|----/----\----;A925    ;
                      STA.B [!Map16LowPtr],Y              ;C407|----/----\----;976B    ;
                      LDY.W #$0003                        ;C409|----/----\----;A00300  ;
                    - LDA.B !_6                           ;C40C|----/----\----;A506    ;
                      STA.L !DynamicStripeImage,X         ;C40E|----/----\----;9F7D837F;
                      LDA.B !_7                           ;C412|----/----\----;A507    ;
                      STA.L !DynamicStripeImage+1,X       ;C414|----/----\----;9F7E837F;
                      LDA.B #$40                          ;C418|----/----\----;A940    ;
                      STA.L !DynamicStripeImage+2,X       ;C41A|----/----\----;9F7F837F;
                      LDA.B #$06                          ;C41E|----/----\----;A906    ;
                      STA.L !DynamicStripeImage+3,X       ;C420|----/----\----;9F80837F;
                      REP #$20                            ;C424|----/----\----;C220    ; Accum (16 bit) 
                      LDA.W #$18F8                        ;C426|----/----\----;A9F818  ;
                      STA.L !DynamicStripeImage+4,X       ;C429|----/----\----;9F81837F;
                      TXA                                 ;C42D|----/----\----;8A      ;
                      CLC                                 ;C42E|----/----\----;18      ;
                      ADC.W #$0006                        ;C42F|----/----\----;690600  ;
                      TAX                                 ;C432|----/----\----;AA      ;
                      SEP #$20                            ;C433|----/----\----;E220    ; Accum (8 bit) 
                      LDA.B !_7                           ;C435|----/----\----;A507    ;
                      CLC                                 ;C437|----/----\----;18      ;
                      ADC.B #$20                          ;C438|----/----\----;6920    ;
                      STA.B !_7                           ;C43A|----/----\----;8507    ;
                      LDA.B !_6                           ;C43C|----/----\----;A506    ;
                      ADC.B #$00                          ;C43E|----/----\----;6900    ;
                      STA.B !_6                           ;C440|----/----\----;8506    ;
                      DEY                                 ;C442|----/----\----;88      ;
                      BPL -                               ;C443|----/----\----;10C7    ;
                      LDA.B #$FF                          ;C445|----/----\----;A9FF    ;
                      STA.L !DynamicStripeImage,X         ;C447|----/----\----;9F7D837F;
                      REP #$20                            ;C44B|----/----\----;C220    ; Accum (16 bit) 
                      TXA                                 ;C44D|----/----\----;8A      ;
                      STA.L !DynStripeImgSize             ;C44E|----/----\----;8F7B837F;
                      RTS                                 ;C452|----/----\----;60      ; Return 
                                                          ;                   ;        ;
                                                          ;                   ;        ;
                      db $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF  ;C453|----/----\----;        ;
                      db $FF,$FF,$FF,$FF,$FF,$80,$40,$20  ;C45B|----/----\----;        ;
                      db $10,$08,$04,$02,$01,$80,$40,$20  ;C463|----/----\----;        ;
                      db $10,$08,$04,$02,$01              ;C46B|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00C470:          db $90,$00,$90,$00                  ;C470|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00C474:          db $04,$FC,$04,$FC                  ;C474|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00C478:          db $30,$33,$33,$30,$01,$00          ;C478|----/----\----;        ;
                                                          ;                   ;        ;
CODE_00C47E:          STZ.B !PlayerHiddenTiles            ;C47E|----/----\----;6478    ; Index (8 bit) Accum (8 bit) 
                      LDA.W !UnusedStarCounter            ;C480|----/----\----;ADCB13  ;
                      BPL +                               ;C483|----/----\----;1007    ;
                      JSL CODE_01C580                     ;C485|----/----\----;2280C501;
                      STZ.W !UnusedStarCounter            ;C489|----/----\----;9CCB13  ;
                    + LDY.W !KeyholeTimer                 ;C48C|----/----\----;AC3414  ;
                      BEQ CODE_00C4BA                     ;C48F|----/----\----;F029    ;
                      STY.W !PlayerIsFrozen               ;C491|----/----\----;8CFB13  ;
                      STY.B !SpriteLock                   ;C494|----/----\----;849D    ;
                      LDX.W !KeyholeDirection             ;C496|----/----\----;AE3514  ;
                      LDA.W !SpotlightSize                ;C499|----/----\----;AD3314  ;
                      CMP.W DATA_00C470,X                 ;C49C|----/----\----;DD70C4  ;
                      BNE CODE_00C4BC                     ;C49F|----/----\----;D01B    ;
                      DEY                                 ;C4A1|----/----\----;88      ;
                      BNE CODE_00C4B7                     ;C4A2|----/----\----;D013    ;
                      INC.W !KeyholeDirection             ;C4A4|----/----\----;EE3514  ;
                      TXA                                 ;C4A7|----/----\----;8A      ;
                      LSR A                               ;C4A8|----/----\----;4A      ;
                      BCC +                               ;C4A9|----/----\----;904D    ;
                      JSR CODE_00FCEC                     ;C4AB|----/----\----;20ECFC  ;
                      LDA.B #$02                          ;C4AE|----/----\----;A902    ;
                      LDY.B #$0B                          ;C4B0|----/----\----;A00B    ;
                      JSR CODE_00C9FE                     ;C4B2|----/----\----;20FEC9  ;
                      LDY.B #$00                          ;C4B5|----/----\----;A000    ;
CODE_00C4B7:          STY.W !KeyholeTimer                 ;C4B7|----/----\----;8C3414  ;
CODE_00C4BA:          BRA +                               ;C4BA|----/----\----;803C    ;
                                                          ;                   ;        ;
CODE_00C4BC:          CLC                                 ;C4BC|----/----\----;18      ;
                      ADC.W DATA_00C474,X                 ;C4BD|----/----\----;7D74C4  ;
                      STA.W !SpotlightSize                ;C4C0|----/----\----;8D3314  ;
                      LDA.B #$22                          ;C4C3|----/----\----;A922    ;
                      STA.B !Layer12Window                ;C4C5|----/----\----;8541    ;
                      LDA.B #$02                          ;C4C7|----/----\----;A902    ;
                      STA.B !Layer34Window                ;C4C9|----/----\----;8542    ;
                      LDA.W DATA_00C478,X                 ;C4CB|----/----\----;BD78C4  ;
                      STA.B !OBJCWWindow                  ;C4CE|----/----\----;8543    ;
                      LDA.B #$12                          ;C4D0|----/----\----;A912    ;
                      STA.B !ColorAddition                ;C4D2|----/----\----;8544    ;
                      REP #$20                            ;C4D4|----/----\----;C220    ; Accum (16 bit) 
                      LDA.W #$CB93                        ;C4D6|----/----\----;A993CB  ;
                      STA.B !_4                           ;C4D9|----/----\----;8504    ;
                      STZ.B !_6                           ;C4DB|----/----\----;6406    ;
                      SEP #$20                            ;C4DD|----/----\----;E220    ; Accum (8 bit) 
                      LDA.W !KeyholeXPos                  ;C4DF|----/----\----;AD3614  ;
                      SEC                                 ;C4E2|----/----\----;38      ;
                      SBC.B !Layer1XPos                   ;C4E3|----/----\----;E51A    ;
                      CLC                                 ;C4E5|----/----\----;18      ;
                      ADC.B #$04                          ;C4E6|----/----\----;6904    ;
                      STA.B !_0                           ;C4E8|----/----\----;8500    ;
                      LDA.W !KeyholeYPos                  ;C4EA|----/----\----;AD3814  ;
                      SEC                                 ;C4ED|----/----\----;38      ;
                      SBC.B !Layer1YPos                   ;C4EE|----/----\----;E51C    ;
                      CLC                                 ;C4F0|----/----\----;18      ;
                      ADC.B #$10                          ;C4F1|----/----\----;6910    ;
                      STA.B !_1                           ;C4F3|----/----\----;8501    ;
                      JSR CODE_00CA88                     ;C4F5|----/----\----;2088CA  ;
                    + LDA.W !PlayerIsFrozen               ;C4F8|----/----\----;ADFB13  ;
                      BEQ +                               ;C4FB|----/----\----;F003    ;
                      JMP CODE_00C58F                     ;C4FD|----/----\----;4C8FC5  ;
                                                          ;                   ;        ;
                    + LDA.B !SpriteLock                   ;C500|----/----\----;A59D    ; \ Branch if sprites locked 
                      BNE CODE_00C569                     ;C502|----/----\----;D065    ; / 
                      INC.B !EffFrame                     ;C504|----/----\----;E614    ;
                      LDX.B #$13                          ;C506|----/----\----;A213    ;
CODE_00C508:          LDA.W !ColorFadeTimer,X             ;C508|----/----\----;BD9514  ;
                      BEQ +                               ;C50B|----/----\----;F003    ;
                      DEC.W !ColorFadeTimer,X             ;C50D|----/----\----;DE9514  ;
                    + DEX                                 ;C510|----/----\----;CA      ;
                      BNE CODE_00C508                     ;C511|----/----\----;D0F5    ;
                      LDA.B !EffFrame                     ;C513|----/----\----;A514    ;
                      AND.B #$03                          ;C515|----/----\----;2903    ;
                      BNE CODE_00C569                     ;C517|----/----\----;D050    ;
                      LDA.W !BonusGameActivate            ;C519|----/----\----;AD2514  ;
                      BEQ CODE_00C533                     ;C51C|----/----\----;F015    ;
                      LDA.W !BonusFinishTimer             ;C51E|----/----\----;ADAB14  ;
                      CMP.B #$44                          ;C521|----/----\----;C944    ;
                      BNE +                               ;C523|----/----\----;D005    ;
                      LDY.B #$14                          ;C525|----/----\----;A014    ;
                      STY.W !SPCIO2                       ;C527|----/----\----;8CFB1D  ; / Change music 
                    + CMP.B #$01                          ;C52A|----/----\----;C901    ;
                      BNE CODE_00C533                     ;C52C|----/----\----;D005    ;
                      LDY.B #$0B                          ;C52E|----/----\----;A00B    ;
                      STY.W !GameMode                     ;C530|----/----\----;8C0001  ;
CODE_00C533:          LDY.W !BluePSwitchTimer             ;C533|----/----\----;ACAD14  ;
                      CPY.W !SilverPSwitchTimer           ;C536|----/----\----;CCAE14  ;
                      BCS +                               ;C539|----/----\----;B003    ;
                      LDY.W !SilverPSwitchTimer           ;C53B|----/----\----;ACAE14  ;
                    + LDA.W !MusicBackup                  ;C53E|----/----\----;ADDA0D  ;
                      BMI +                               ;C541|----/----\----;300C    ;
                      CPY.B #$01                          ;C543|----/----\----;C001    ;
                      BNE +                               ;C545|----/----\----;D008    ;
                      LDY.W !DirectCoinTimer              ;C547|----/----\----;AC0C19  ;
                      BNE +                               ;C54A|----/----\----;D003    ;
                      STA.W !SPCIO2                       ;C54C|----/----\----;8DFB1D  ; / Change music 
                    + CMP.B #$FF                          ;C54F|----/----\----;C9FF    ;
                      BEQ +                               ;C551|----/----\----;F009    ;
                      CPY.B #$1E                          ;C553|----/----\----;C01E    ;
                      BNE +                               ;C555|----/----\----;D005    ;
                      LDA.B #$24                          ;C557|----/----\----;A924    ; \ Play sound effect 
                      STA.W !SPCIO3                       ;C559|----/----\----;8DFC1D  ; / 
                    + LDX.B #$06                          ;C55C|----/----\----;A206    ;
CODE_00C55E:          LDA.W !EmptyTimer14A8,X             ;C55E|----/----\----;BDA814  ;
                      BEQ +                               ;C561|----/----\----;F003    ;
                      DEC.W !EmptyTimer14A8,X             ;C563|----/----\----;DEA814  ;
                    + DEX                                 ;C566|----/----\----;CA      ;
                      BNE CODE_00C55E                     ;C567|----/----\----;D0F5    ;
CODE_00C569:          JSR CODE_00C593                     ;C569|----/----\----;2093C5  ;
                      LDA.B !byetudlrFrame                ;C56C|----/----\----;A516    ;
                      AND.B #$20                          ;C56E|----/----\----;2920    ;
                      BEQ CODE_00C58F                     ;C570|----/----\----;F01D    ;
                      LDA.B !byetudlrHold                 ;C572|----/----\----;A515    ;
                      AND.B #$08                          ;C574|----/----\----;2908    ;
                      BRA CODE_00C585                     ;C576|----/----\----;800D    ; Change to BEQ to reach debug routine below 
                                                          ;                   ;        ;
                      LDA.B !Powerup                      ;C578|----/----\----;A519    ; \ Unreachable 
                      INC A                               ;C57A|----/----\----;1A      ;  | Debug: Cycle through powerups 
                      CMP.B #$04                          ;C57B|----/----\----;C904    ;  | 
                      BCC +                               ;C57D|----/----\----;9002    ;  | 
                      LDA.B #$00                          ;C57F|----/----\----;A900    ;  | 
                    + STA.B !Powerup                      ;C581|----/----\----;8519    ;  | 
                      BRA CODE_00C58F                     ;C583|----/----\----;800A    ; / 
                                                          ;                   ;        ;
CODE_00C585:          PHB                                 ;C585|----/----\----;8B      ;
                      LDA.B #$02                          ;C586|----/----\----;A902    ;
                      PHA                                 ;C588|----/----\----;48      ;
                      PLB                                 ;C589|----/----\----;AB      ;
                      JSL CODE_028008                     ;C58A|----/----\----;22088002;
                      PLB                                 ;C58E|----/----\----;AB      ;
CODE_00C58F:          STZ.W !NoteBlockActive              ;C58F|----/----\----;9C0214  ;
Return00C592:         RTS                                 ;C592|----/----\----;60      ; Return 
                                                          ;                   ;        ;
CODE_00C593:          LDA.B !PlayerAnimation              ;C593|----/----\----;A571    ;
                      JSL ExecutePtr                      ;C595|----/----\----;22DF8600;
                                                          ;                   ;        ;
                      dw ResetAni                         ;C599|----/----\----;68CC    ; 0 - Reset                        
                      dw PowerDownAni                     ;C59B|----/----\----;29D1    ; 1 - Power down                   
                      dw MushroomAni                      ;C59D|----/----\----;47D1    ; 2 - Mushroom power up            
                      dw CapeAni                          ;C59F|----/----\----;5FD1    ; 3 - Cape power up                
                      dw FlowerAni                        ;C5A1|----/----\----;6FD1    ; 4 - Flower power up              
                      dw DoorPipeAni                      ;C5A3|----/----\----;97D1    ; 5 - Door/Horizontal pipe exit    
                      dw VertPipeAni                      ;C5A5|----/----\----;03D2    ; 6 - Vertical pipe exit           
                      dw PipeCannonAni                    ;C5A7|----/----\----;87D2    ; 7 - Shot out of diagonal pipe    
                      dw YoshiWingsAni                    ;C5A9|----/----\----;FDC7    ; 8 - Yoshi wings exit             
                      dw MarioDeathAni                    ;C5AB|----/----\----;B6D0    ; 9 - Mario Death                  
                      dw EnterCastleAni                   ;C5AD|----/----\----;70C8    ; A - Enter Castle                 
                      dw UnknownAniB                      ;C5AF|----/----\----;B5C5    ; B - freeze forever               
                      dw UnknownAniC                      ;C5B1|----/----\----;E7C6    ; C - random movement??            
                      dw Return00C592                     ;C5B3|----/----\----;92C5    ; D - freeze forever               
                                                          ;                   ;        ;
UnknownAniB:          STZ.W !PlayerOverworldPose          ;C5B5|----/----\----;9CDE13  ;
                      STZ.W !PlayerSlopePose              ;C5B8|----/----\----;9CED13  ;
                      LDA.W !EndLevelTimer                ;C5BB|----/----\----;AD9314  ;
                      BEQ CODE_00C5CE                     ;C5BE|----/----\----;F00E    ;
                      JSL CODE_0CAB13                     ;C5C0|----/----\----;2213AB0C;
                      LDA.W !GameMode                     ;C5C4|----/----\----;AD0001  ;
                      CMP.B #$14                          ;C5C7|----/----\----;C914    ;
                      BEQ +                               ;C5C9|----/----\----;F006    ;
                      JMP CODE_00C95B                     ;C5CB|----/----\----;4C5BC9  ;
                                                          ;                   ;        ;
CODE_00C5CE:          STZ.W !HDMAEnable                   ;C5CE|----/----\----;9C9F0D  ;
                    + LDA.B #$01                          ;C5D1|----/----\----;A901    ;
                      STA.W !MessageBoxExpand             ;C5D3|----/----\----;8D881B  ;
                      LDA.B #$07                          ;C5D6|----/----\----;A907    ;
                      STA.W !LevelLoadObject              ;C5D8|----/----\----;8D2819  ;
                      JSR NoButtons                       ;C5DB|----/----\----;202DF6  ;
                      JMP CODE_00CD24                     ;C5DE|----/----\----;4C24CD  ;
                                                          ;                   ;        ;
                                                          ;                   ;        ;
DATA_00C5E1:          db $10,$30,$31,$32,$33,$34,$0E      ;C5E1|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00C5E8:          db $26                              ;C5E8|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00C5E9:          db $11,$02,$48,$00,$60,$01,$09,$80  ;C5E9|----/----\----;        ;
                      db $08,$00,$20,$04,$60,$00,$01,$FF  ;C5F1|----/----\----;        ;
                      db $01,$02,$48,$00,$60,$41,$2C,$C1  ;C5F9|----/----\----;        ;
                      db $04,$27,$04,$2F,$08,$25,$01,$2F  ;C601|----/----\----;        ;
                      db $04,$27,$04,$00,$08,$41,$1B,$C1  ;C609|----/----\----;        ;
                      db $04,$27,$04,$2F,$08,$25,$01,$2F  ;C611|----/----\----;        ;
                      db $04,$27,$04,$00,$04,$01,$08,$20  ;C619|----/----\----;        ;
                      db $01,$01,$10,$00,$08,$41,$12,$81  ;C621|----/----\----;        ;
                      db $0A,$00,$40,$82,$10,$02,$20,$00  ;C629|----/----\----;        ;
                      db $30,$01,$01,$00,$50,$22,$01,$FF  ;C631|----/----\----;        ;
                      db $01,$02,$48,$00,$60,$01,$09,$80  ;C639|----/----\----;        ;
                      db $08,$00,$20,$04,$60,$00,$20,$10  ;C641|----/----\----;        ;
                      db $20,$01,$58,$00,$2C,$31,$01,$3A  ;C649|----/----\----;        ;
                      db $10,$31,$01,$3A,$10,$31,$01,$3A  ;C651|----/----\----;        ;
                      db $20,$28,$A0,$28,$40,$29,$04,$28  ;C659|----/----\----;        ;
                      db $04,$29,$04,$28,$04,$29,$04,$28  ;C661|----/----\----;        ;
                      db $40,$22,$01,$FF,$01,$02,$48,$00  ;C669|----/----\----;        ;
                      db $60,$01,$09,$80,$08,$00,$20,$04  ;C671|----/----\----;        ;
                      db $60,$10,$20,$31,$01,$18,$60,$31  ;C679|----/----\----;        ;
                      db $01,$3B,$80,$31,$01,$3C,$40,$FF  ;C681|----/----\----;        ;
                      db $01,$02,$48,$00,$60,$02,$30,$01  ;C689|----/----\----;        ;
                      db $84,$00,$20,$23,$01,$01,$16,$02  ;C691|----/----\----;        ;
                      db $20,$20,$01,$01,$20,$02,$20,$01  ;C699|----/----\----;        ;
                      db $02,$00,$80,$FF,$01,$02,$48,$00  ;C6A1|----/----\----;        ;
                      db $60,$02,$28,$01,$83,$00,$28,$24  ;C6A9|----/----\----;        ;
                      db $01,$02,$01,$00,$FF,$00,$40,$20  ;C6B1|----/----\----;        ;
                      db $01,$00,$40,$02,$60,$00,$30,$FF  ;C6B9|----/----\----;        ;
                      db $01,$02,$48,$00,$60,$01,$4E,$00  ;C6C1|----/----\----;        ;
                      db $40,$26,$01,$00,$1E,$20,$01,$00  ;C6C9|----/----\----;        ;
                      db $20,$08,$10,$20,$01,$2D,$18,$00  ;C6D1|----/----\----;        ;
                      db $A0,$20,$01,$2E,$01,$FF          ;C6D9|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00C6DF:          db $01,$00,$10,$A0,$84,$50,$BC,$D8  ;C6DF|----/----\----;        ;
                                                          ;                   ;        ;
UnknownAniC:          JSR NoButtons                       ;C6E7|----/----\----;202DF6  ;
                      STZ.W !PlayerOverworldPose          ;C6EA|----/----\----;9CDE13  ;
                      JSR CODE_00DC2D                     ;C6ED|----/----\----;202DDC  ;
                      LDA.B !PlayerYSpeed                 ;C6F0|----/----\----;A57D    ; \ Branch if Mario has upward speed 
                      BMI CODE_00C73F                     ;C6F2|----/----\----;304B    ; / 
                      LDA.B !PlayerYPosNext               ;C6F4|----/----\----;A596    ;
                      CMP.B #$58                          ;C6F6|----/----\----;C958    ;
                      BCS CODE_00C739                     ;C6F8|----/----\----;B03F    ;
                      LDY.B !PlayerXPosNext               ;C6FA|----/----\----;A494    ;
                      CPY.B #$40                          ;C6FC|----/----\----;C040    ;
                      BCC CODE_00C73F                     ;C6FE|----/----\----;903F    ;
                      CPY.B #$60                          ;C700|----/----\----;C060    ;
                      BCC CODE_00C71C                     ;C702|----/----\----;9018    ;
                      LDY.B !Layer1YPos                   ;C704|----/----\----;A41C    ;
                      BEQ CODE_00C73F                     ;C706|----/----\----;F037    ;
                      CLC                                 ;C708|----/----\----;18      ;
                      ADC.B !Layer1YPos                   ;C709|----/----\----;651C    ;
                      CMP.B #$1C                          ;C70B|----/----\----;C91C    ;
                      BMI CODE_00C73F                     ;C70D|----/----\----;3030    ;
                      SEC                                 ;C70F|----/----\----;38      ;
                      SBC.B !Layer1YPos                   ;C710|----/----\----;E51C    ;
                      LDX.B #$D0                          ;C712|----/----\----;A2D0    ;
                      LDY.B !PlayerDirection              ;C714|----/----\----;A476    ;
                      BEQ CODE_00C730                     ;C716|----/----\----;F018    ;
                      LDY.B #$00                          ;C718|----/----\----;A000    ;
                      BRA CODE_00C72E                     ;C71A|----/----\----;8012    ;
                                                          ;                   ;        ;
CODE_00C71C:          CMP.B #$4C                          ;C71C|----/----\----;C94C    ;
                      BCC CODE_00C73F                     ;C71E|----/----\----;901F    ;
                      LDA.B #$1B                          ;C720|----/----\----;A91B    ; \ Play sound effect 
                      STA.W !SPCIO3                       ;C722|----/----\----;8DFC1D  ; / 
                      INC.W !Layer1ScrollCmd              ;C725|----/----\----;EE3E14  ;
                      LDA.B #$4C                          ;C728|----/----\----;A94C    ;
                      LDY.B #$F4                          ;C72A|----/----\----;A0F4    ;
                      LDX.B #$C0                          ;C72C|----/----\----;A2C0    ;
CODE_00C72E:          STY.B !PlayerXSpeed                 ;C72E|----/----\----;847B    ;
CODE_00C730:          STX.B !PlayerYSpeed                 ;C730|----/----\----;867D    ;
                      LDX.B #$01                          ;C732|----/----\----;A201    ; \ Play sound effect 
                      STX.W !SPCIO0                       ;C734|----/----\----;8EF91D  ; / 
                      BRA +                               ;C737|----/----\----;8004    ;
                                                          ;                   ;        ;
CODE_00C739:          STZ.B !PlayerInAir                  ;C739|----/----\----;6472    ;
                      LDA.B #$58                          ;C73B|----/----\----;A958    ;
                    + STA.B !PlayerYPosNext               ;C73D|----/----\----;8596    ;
CODE_00C73F:          LDX.W !CutsceneID                   ;C73F|----/----\----;AEC613  ;
                      LDA.B !GraphicsUncompPtr+2          ;C742|----/----\----;A58F    ;
                      CLC                                 ;C744|----/----\----;18      ;
                      ADC.W DATA_00C6DF,X                 ;C745|----/----\----;7DDFC6  ;
                      TAX                                 ;C748|----/----\----;AA      ;
                      LDA.B !PipeTimer                    ;C749|----/----\----;A588    ;
                      BNE +                               ;C74B|----/----\----;D017    ;
                      INC.B !GraphicsUncompPtr+2          ;C74D|----/----\----;E68F    ;
                      INC.B !GraphicsUncompPtr+2          ;C74F|----/----\----;E68F    ;
                      INX                                 ;C751|----/----\----;E8      ;
                      INX                                 ;C752|----/----\----;E8      ;
                      LDA.W DATA_00C5E9,X                 ;C753|----/----\----;BDE9C5  ;
                      STA.B !PipeTimer                    ;C756|----/----\----;8588    ;
                      LDA.W DATA_00C5E8,X                 ;C758|----/----\----;BDE8C5  ;
                      CMP.B #$2D                          ;C75B|----/----\----;C92D    ;
                      BNE +                               ;C75D|----/----\----;D005    ;
                      LDA.B #$1E                          ;C75F|----/----\----;A91E    ; \ Play sound effect 
                      STA.W !SPCIO0                       ;C761|----/----\----;8DF91D  ; / 
                    + LDA.W DATA_00C5E8,X                 ;C764|----/----\----;BDE8C5  ;
                      CMP.B #$FF                          ;C767|----/----\----;C9FF    ;
                      BNE +                               ;C769|----/----\----;D003    ;
                      JMP Return00C7F8                    ;C76B|----/----\----;4CF8C7  ;
                                                          ;                   ;        ;
                    + PHA                                 ;C76E|----/----\----;48      ;
                      AND.B #$10                          ;C76F|----/----\----;2910    ;
                      BEQ +                               ;C771|----/----\----;F004    ;
                      JSL CODE_0CD4A4                     ;C773|----/----\----;22A4D40C;
                    + PLA                                 ;C777|----/----\----;68      ;
                      TAY                                 ;C778|----/----\----;A8      ;
                      AND.B #$20                          ;C779|----/----\----;2920    ;
                      BNE CODE_00C789                     ;C77B|----/----\----;D00C    ;
                      STY.B !byetudlrHold                 ;C77D|----/----\----;8415    ;
                      TYA                                 ;C77F|----/----\----;98      ;
                      AND.B #$BF                          ;C780|----/----\----;29BF    ;
                      STA.B !byetudlrFrame                ;C782|----/----\----;8516    ;
                      JSR CODE_00CD39                     ;C784|----/----\----;2039CD  ;
                      BRA CODE_00C7F6                     ;C787|----/----\----;806D    ;
                                                          ;                   ;        ;
CODE_00C789:          TYA                                 ;C789|----/----\----;98      ;
                      AND.B #$0F                          ;C78A|----/----\----;290F    ;
                      CMP.B #$07                          ;C78C|----/----\----;C907    ;
                      BCS CODE_00C7E9                     ;C78E|----/----\----;B059    ;
                      DEC A                               ;C790|----/----\----;3A      ;
                      BPL CODE_00C7A2                     ;C791|----/----\----;100F    ;
                      LDA.W !PickUpItemTimer              ;C793|----/----\----;AD9814  ;
                      BEQ CODE_00C79D                     ;C796|----/----\----;F005    ;
                      LDA.B #$09                          ;C798|----/----\----;A909    ; \ Play sound effect 
                      STA.W !SPCIO0                       ;C79A|----/----\----;8DF91D  ; / 
CODE_00C79D:          INC.W !Layer1ScrollCmd              ;C79D|----/----\----;EE3E14  ;
                      BRA CODE_00C7F6                     ;C7A0|----/----\----;8054    ;
                                                          ;                   ;        ;
CODE_00C7A2:          BNE CODE_00C7A9                     ;C7A2|----/----\----;D005    ;
                      INC.W !Layer2ScrollTimer            ;C7A4|----/----\----;EE4514  ;
                      BRA CODE_00C7F6                     ;C7A7|----/----\----;804D    ;
                                                          ;                   ;        ;
CODE_00C7A9:          DEC A                               ;C7A9|----/----\----;3A      ;
                      BNE CODE_00C7B6                     ;C7AA|----/----\----;D00A    ;
                      LDA.B #$0E                          ;C7AC|----/----\----;A90E    ; \ Play sound effect 
                      STA.W !SPCIO0                       ;C7AE|----/----\----;8DF91D  ; / 
                      INC.W !Layer1ScrollXSpeed           ;C7B1|----/----\----;EE4614  ;
                      BRA CODE_00C7F6                     ;C7B4|----/----\----;8040    ;
                                                          ;                   ;        ;
CODE_00C7B6:          DEC A                               ;C7B6|----/----\----;3A      ;
                      BNE CODE_00C7C0                     ;C7B7|----/----\----;D007    ;
                      LDY.B #$88                          ;C7B9|----/----\----;A088    ;
                      STY.W !Layer2ScrollTimer            ;C7BB|----/----\----;8C4514  ;
                      BRA CODE_00C7F6                     ;C7BE|----/----\----;8036    ;
                                                          ;                   ;        ;
CODE_00C7C0:          DEC A                               ;C7C0|----/----\----;3A      ;
                      BNE CODE_00C7CE                     ;C7C1|----/----\----;D00B    ;
                      LDA.B #$38                          ;C7C3|----/----\----;A938    ;
                      STA.W !Layer1ScrollXSpeed           ;C7C5|----/----\----;8D4614  ;
                      LDA.B #$07                          ;C7C8|----/----\----;A907    ;
                      TRB.B !PlayerXPosNext               ;C7CA|----/----\----;1494    ;
                      BRA CODE_00C7F6                     ;C7CC|----/----\----;8028    ;
                                                          ;                   ;        ;
CODE_00C7CE:          DEC A                               ;C7CE|----/----\----;3A      ;
                      BNE CODE_00C7DF                     ;C7CF|----/----\----;D00E    ;
                      LDA.B #$09                          ;C7D1|----/----\----;A909    ; \ Play sound effect 
                      STA.W !SPCIO3                       ;C7D3|----/----\----;8DFC1D  ; / 
                      LDA.B #$D8                          ;C7D6|----/----\----;A9D8    ;
                      STA.B !PlayerXSpeed                 ;C7D8|----/----\----;857B    ;
                      INC.W !Layer1ScrollCmd              ;C7DA|----/----\----;EE3E14  ;
                      BRA CODE_00C79D                     ;C7DD|----/----\----;80BE    ;
                                                          ;                   ;        ;
CODE_00C7DF:          LDA.B #$20                          ;C7DF|----/----\----;A920    ;
                      STA.W !PickUpItemTimer              ;C7E1|----/----\----;8D9814  ;
                      INC.W !IsCarryingItem               ;C7E4|----/----\----;EE8F14  ;
                      BRA CODE_00C7F6                     ;C7E7|----/----\----;800D    ;
                                                          ;                   ;        ;
CODE_00C7E9:          TAY                                 ;C7E9|----/----\----;A8      ;
                      LDA.W DATA_00C5E1-7,Y               ;C7EA|----/----\----;B9DAC5  ;
                      STA.W !PlayerPose                   ;C7ED|----/----\----;8DE013  ;
                      STZ.W !IsCarryingItem               ;C7F0|----/----\----;9C8F14  ;
                      JSR CODE_00D7E4                     ;C7F3|----/----\----;20E4D7  ;
CODE_00C7F6:          DEC.B !PipeTimer                    ;C7F6|----/----\----;C688    ;
Return00C7F8:         RTS                                 ;C7F8|----/----\----;60      ; Return 
                                                          ;                   ;        ;
                                                          ;                   ;        ;
DATA_00C7F9:          db $C0,$FF,$A0,$00                  ;C7F9|----/----\----;        ;
                                                          ;                   ;        ;
YoshiWingsAni:        JSR NoButtons                       ;C7FD|----/----\----;202DF6  ;
                      LDA.B #$0B                          ;C800|----/----\----;A90B    ;
                      STA.B !PlayerInAir                  ;C802|----/----\----;8572    ;
                      JSR CODE_00D7E4                     ;C804|----/----\----;20E4D7  ;
                      LDA.B !PlayerYSpeed                 ;C807|----/----\----;A57D    ; \ Branch if Mario has downward speed 
                      BPL CODE_00C80F                     ;C809|----/----\----;1004    ; / 
                      CMP.B #$90                          ;C80B|----/----\----;C990    ; \ Branch if Y speed < #$90 
                      BCC +                               ;C80D|----/----\----;9005    ; / 
CODE_00C80F:          SEC                                 ;C80F|----/----\----;38      ; \ Y Speed -= #$0D 
                      SBC.B #$0D                          ;C810|----/----\----;E90D    ;  | 
                      STA.B !PlayerYSpeed                 ;C812|----/----\----;857D    ; / 
                    + LDA.B #$02                          ;C814|----/----\----;A902    ;
                      LDY.B !PlayerXSpeed                 ;C816|----/----\----;A47B    ;
                      BEQ CODE_00C827                     ;C818|----/----\----;F00D    ;
                      BMI +                               ;C81A|----/----\----;3002    ;
                      LDA.B #$FE                          ;C81C|----/----\----;A9FE    ;
                    + CLC                                 ;C81E|----/----\----;18      ;
                      ADC.B !PlayerXSpeed                 ;C81F|----/----\----;657B    ;
                      STA.B !PlayerXSpeed                 ;C821|----/----\----;857B    ;
                      BVC CODE_00C827                     ;C823|----/----\----;5002    ;
                      STZ.B !PlayerXSpeed                 ;C825|----/----\----;647B    ;
CODE_00C827:          JSR CODE_00DC2D                     ;C827|----/----\----;202DDC  ;
                      REP #$20                            ;C82A|----/----\----;C220    ; Accum (16 bit) 
                      LDY.W !YoshiHeavenFlag              ;C82C|----/----\----;AC951B  ;
                      LDA.B !PlayerYPosScrRel             ;C82F|----/----\----;A580    ;
                      CMP.W DATA_00C7F9,Y                 ;C831|----/----\----;D9F9C7  ;
                      SEP #$20                            ;C834|----/----\----;E220    ; Accum (8 bit) 
                      BPL +                               ;C836|----/----\----;100D    ;
                      STZ.B !PlayerAnimation              ;C838|----/----\----;6471    ;
                      TYA                                 ;C83A|----/----\----;98      ;
                      BNE +                               ;C83B|----/----\----;D008    ;
                      INY                                 ;C83D|----/----\----;C8      ;
                      INY                                 ;C83E|----/----\----;C8      ;
                      STY.W !YoshiHeavenFlag              ;C83F|----/----\----;8C951B  ;
                      JSR CODE_00D273                     ;C842|----/----\----;2073D2  ;
                    + JMP CODE_00CD8F                     ;C845|----/----\----;4C8FCD  ;
                                                          ;                   ;        ;
DATA_00C848:          db $01,$5F,$00,$30,$08,$30,$00,$20  ;C848|----/----\----;        ;
                      db $40,$01,$00,$30,$01,$80,$FF,$01  ;C850|----/----\----;        ;
                      db $3F,$00,$30,$20,$01,$80,$06,$00  ;C858|----/----\----;        ;
                      db $3A,$01,$38,$00,$30,$08,$30,$00  ;C860|----/----\----;        ;
                      db $20,$40,$01,$00,$30,$01,$80,$FF  ;C868|----/----\----;        ;
                                                          ;                   ;        ;
EnterCastleAni:       STZ.W !SpinjumpFireball             ;C870|----/----\----;9CE213  ;
                      LDX.W !ObjectTileset                ;C873|----/----\----;AE3119  ;
                      BIT.W DATA_00A625,X                 ;C876|----/----\----;3C25A6  ;
                      BMI CODE_00C889                     ;C879|----/----\----;300E    ;
                      BVS ADDR_00C883                     ;C87B|----/----\----;7006    ;
                      JSL CODE_02F57C                     ;C87D|----/----\----;227CF502;
                      BRA +                               ;C881|----/----\----;800A    ;
                                                          ;                   ;        ;
ADDR_00C883:          JSL ADDR_02F58C                     ;C883|----/----\----;228CF502;
                      BRA +                               ;C887|----/----\----;8004    ;
                                                          ;                   ;        ;
CODE_00C889:          JSL CODE_02F584                     ;C889|----/----\----;2284F502;
                    + LDX.B !PipeTimer                    ;C88D|----/----\----;A688    ;
                      LDA.B !byetudlrFrame                ;C88F|----/----\----;A516    ;
                      ORA.B !axlr0000Frame                ;C891|----/----\----;0518    ;
                      JSR NoButtons                       ;C893|----/----\----;202DF6  ;
                      BMI CODE_00C8FB                     ;C896|----/----\----;3063    ;
                      STZ.W !PlayerOverworldPose          ;C898|----/----\----;9CDE13  ;
                      DEC.B !PlayerPipeAction             ;C89B|----/----\----;C689    ;
                      BNE +                               ;C89D|----/----\----;D009    ;
                      INX                                 ;C89F|----/----\----;E8      ;
                      INX                                 ;C8A0|----/----\----;E8      ;
                      STX.B !PipeTimer                    ;C8A1|----/----\----;8688    ;
                      LDA.W DATA_00C848-1,X               ;C8A3|----/----\----;BD47C8  ;
                      STA.B !PlayerPipeAction             ;C8A6|----/----\----;8589    ;
                    + LDA.W DATA_00C848-2,X               ;C8A8|----/----\----;BD46C8  ;
                      CMP.B #$FF                          ;C8AB|----/----\----;C9FF    ;
                      BEQ CODE_00C8FB                     ;C8AD|----/----\----;F04C    ;
                      AND.B #$DF                          ;C8AF|----/----\----;29DF    ;
                      STA.B !byetudlrHold                 ;C8B1|----/----\----;8515    ;
                      CMP.W DATA_00C848-2,X               ;C8B3|----/----\----;DD46C8  ;
                      BEQ +                               ;C8B6|----/----\----;F004    ;
                      LDY.B #$80                          ;C8B8|----/----\----;A080    ;
                      STY.B !axlr0000Frame                ;C8BA|----/----\----;8418    ;
                    + ASL A                               ;C8BC|----/----\----;0A      ;
                      BPL CODE_00C8D1                     ;C8BD|----/----\----;1012    ;
                      JSR NoButtons                       ;C8BF|----/----\----;202DF6  ;
                      LDY.B #$B0                          ;C8C2|----/----\----;A0B0    ;
                      LDX.W !ObjectTileset                ;C8C4|----/----\----;AE3119  ;
                      BIT.W DATA_00A625,X                 ;C8C7|----/----\----;3C25A6  ;
                      BMI +                               ;C8CA|----/----\----;3002    ;
                      LDY.B #$7F                          ;C8CC|----/----\----;A07F    ;
                    + STY.W !NoYoshiIntroTimer            ;C8CE|----/----\----;8CD918  ;
CODE_00C8D1:          JSR CODE_00DC2D                     ;C8D1|----/----\----;202DDC  ;
                      LDA.B #$24                          ;C8D4|----/----\----;A924    ;
                      STA.B !PlayerInAir                  ;C8D6|----/----\----;8572    ;
                      LDA.B #$6F                          ;C8D8|----/----\----;A96F    ;
                      LDY.W !PlayerRidingYoshi            ;C8DA|----/----\----;AC7A18  ;
                      BEQ +                               ;C8DD|----/----\----;F002    ;
                      LDA.B #$5F                          ;C8DF|----/----\----;A95F    ;
                    + LDX.W !ObjectTileset                ;C8E1|----/----\----;AE3119  ;
                      BIT.W DATA_00A625,X                 ;C8E4|----/----\----;3C25A6  ;
                      BVC +                               ;C8E7|----/----\----;5003    ;
                      SEC                                 ;C8E9|----/----\----;38      ;
                      SBC.B #$10                          ;C8EA|----/----\----;E910    ;
                    + CMP.B !PlayerYPosNext               ;C8EC|----/----\----;C596    ;
                      BCS +                               ;C8EE|----/----\----;B008    ;
                      INC A                               ;C8F0|----/----\----;1A      ;
                      STA.B !PlayerYPosNext               ;C8F1|----/----\----;8596    ;
                      STZ.B !PlayerInAir                  ;C8F3|----/----\----;6472    ;
                      STZ.W !SpinJumpFlag                 ;C8F5|----/----\----;9C0D14  ;
                    + JMP CODE_00CD82                     ;C8F8|----/----\----;4C82CD  ;
                                                          ;                   ;        ;
CODE_00C8FB:          INC.W !ShowMarioStart               ;C8FB|----/----\----;EE1D14  ;
                      LDA.B #$0F                          ;C8FE|----/----\----;A90F    ;
                      STA.W !GameMode                     ;C900|----/----\----;8D0001  ;
                      CPX.B #$11                          ;C903|----/----\----;E011    ;
                      BCC CODE_00C90A                     ;C905|----/----\----;9003    ;
                      INC.W !CarryYoshiThruLvls           ;C907|----/----\----;EEC10D  ;
CODE_00C90A:          LDA.B #$01                          ;C90A|----/----\----;A901    ;
                      STA.W !RemoveYoshiFlag              ;C90C|----/----\----;8D9B1B  ;
                      LDA.B #$03                          ;C90F|----/----\----;A903    ; \ Play sound effect 
                      STA.W !SPCIO1                       ;C911|----/----\----;8DFA1D  ; / 
                      RTS                                 ;C914|----/----\----;60      ; Return 
                                                          ;                   ;        ;
CODE_00C915:          JSR NoButtons                       ;C915|----/----\----;202DF6  ;
                      STZ.W !PlayerInCloud                ;C918|----/----\----;9CC218  ;
                      STZ.W !PlayerOverworldPose          ;C91B|----/----\----;9CDE13  ;
                      STZ.W !PlayerSlopePose              ;C91E|----/----\----;9CED13  ;
                      LDA.B !ScreenMode                   ;C921|----/----\----;A55B    ;
                      LSR A                               ;C923|----/----\----;4A      ;
                      BCS CODE_00C944                     ;C924|----/----\----;B01E    ;
                      LDA.W !CutsceneID                   ;C926|----/----\----;ADC613  ;
                      ORA.W !SwitchPalaceColor            ;C929|----/----\----;0DD213  ;
                      BEQ CODE_00C96B                     ;C92C|----/----\----;F03D    ;
                      LDA.B !PlayerInAir                  ;C92E|----/----\----;A572    ;
                      BEQ +                               ;C930|----/----\----;F003    ;
                      JSR CODE_00CCE0                     ;C932|----/----\----;20E0CC  ;
                    + LDA.W !SwitchPalaceColor            ;C935|----/----\----;ADD213  ;
                      BNE CODE_00C948                     ;C938|----/----\----;D00E    ;
                      JSR CODE_00B03E                     ;C93A|----/----\----;203EB0  ;
                      LDA.W !ColorFadeTimer               ;C93D|----/----\----;AD9514  ;
                      CMP.B #$40                          ;C940|----/----\----;C940    ;
                      BCC Return00C96A                    ;C942|----/----\----;9026    ;
CODE_00C944:          JSL CODE_05CBFF                     ;C944|----/----\----;22FFCB05;
CODE_00C948:          LDY.B #$01                          ;C948|----/----\----;A001    ;
                      STY.B !SpriteLock                   ;C94A|----/----\----;849D    ;
                      LDA.B !TrueFrame                    ;C94C|----/----\----;A513    ;
                      LSR A                               ;C94E|----/----\----;4A      ;
                      BCC Return00C96A                    ;C94F|----/----\----;9019    ;
                      DEC.W !EndLevelTimer                ;C951|----/----\----;CE9314  ;
                      BNE Return00C96A                    ;C954|----/----\----;D014    ;
                      LDA.W !SwitchPalaceColor            ;C956|----/----\----;ADD213  ;
                      BNE +                               ;C959|----/----\----;D007    ;
CODE_00C95B:          LDY.B #$0B                          ;C95B|----/----\----;A00B    ;
                      LDA.B #$01                          ;C95D|----/----\----;A901    ;
                      JMP CODE_00C9FE                     ;C95F|----/----\----;4CFEC9  ;
                                                          ;                   ;        ;
                    + LDA.B #$A0                          ;C962|----/----\----;A9A0    ;
                      STA.W !VariousPromptTimer           ;C964|----/----\----;8DF51D  ;
                      INC.W !MessageBoxTrigger            ;C967|----/----\----;EE2614  ;
Return00C96A:         RTS                                 ;C96A|----/----\----;60      ; Return 
                                                          ;                   ;        ;
CODE_00C96B:          JSR CODE_00AF17                     ;C96B|----/----\----;2017AF  ;
                      LDA.W !ShowPeaceSign                ;C96E|----/----\----;AD991B  ;
                      BNE CODE_00C9AF                     ;C971|----/----\----;D03C    ;
                      LDA.W !EndLevelTimer                ;C973|----/----\----;AD9314  ;
                      CMP.B #$28                          ;C976|----/----\----;C928    ;
                      BCC +                               ;C978|----/----\----;900A    ;
                      LDA.B #$01                          ;C97A|----/----\----;A901    ;
                      STA.B !PlayerDirection              ;C97C|----/----\----;8576    ;
                      STA.B !byetudlrHold                 ;C97E|----/----\----;8515    ;
                      LDA.B #$05                          ;C980|----/----\----;A905    ;
                      STA.B !PlayerXSpeed                 ;C982|----/----\----;857B    ;
                    + LDA.B !PlayerInAir                  ;C984|----/----\----;A572    ;
                      BEQ +                               ;C986|----/----\----;F003    ;
                      JSR CODE_00D76B                     ;C988|----/----\----;206BD7  ;
                    + LDA.B !PlayerXSpeed                 ;C98B|----/----\----;A57B    ;
                      BNE +                               ;C98D|----/----\----;D015    ;
                      STZ.W !HorizLayer1Setting           ;C98F|----/----\----;9C1114  ;
                      JSR CODE_00CA3E                     ;C992|----/----\----;203ECA  ;
                      INC.W !ShowPeaceSign                ;C995|----/----\----;EE991B  ;
                      LDA.B #$40                          ;C998|----/----\----;A940    ;
                      STA.W !PlayerPeaceSign              ;C99A|----/----\----;8D9214  ;
                      ASL A                               ;C99D|----/----\----;0A      ;
                      STA.W !ColorFadeDir                 ;C99E|----/----\----;8D9414  ;
                      STZ.W !ColorFadeTimer               ;C9A1|----/----\----;9C9514  ;
                    + JMP CODE_00CD24                     ;C9A4|----/----\----;4C24CD  ;
                                                          ;                   ;        ;
DATA_00C9A7:          db $25,$07,$40,$0E,$20,$1A,$34,$32  ;C9A7|----/----\----;        ;
                                                          ;                   ;        ;
CODE_00C9AF:          JSR SetMarioPeaceImg                ;C9AF|----/----\----;2031CA  ;
                      LDA.W !PlayerPeaceSign              ;C9B2|----/----\----;AD9214  ;
                      BEQ CODE_00C9C2                     ;C9B5|----/----\----;F00B    ;
                      DEC.W !PlayerPeaceSign              ;C9B7|----/----\----;CE9214  ;
                      BNE +                               ;C9BA|----/----\----;D005    ;
                      LDA.B #$11                          ;C9BC|----/----\----;A911    ;
                      STA.W !SPCIO2                       ;C9BE|----/----\----;8DFB1D  ; / Change music 
                    + RTS                                 ;C9C1|----/----\----;60      ; Return 
                                                          ;                   ;        ;
CODE_00C9C2:          JSR CODE_00CA44                     ;C9C2|----/----\----;2044CA  ;
                      LDA.B #$01                          ;C9C5|----/----\----;A901    ;
                      STA.B !byetudlrHold                 ;C9C7|----/----\----;8515    ;
                      JSR CODE_00CD24                     ;C9C9|----/----\----;2024CD  ;
                      LDA.W !SpotlightSize                ;C9CC|----/----\----;AD3314  ;
                      BNE Return00CA30                    ;C9CF|----/----\----;D05F    ;
                      LDA.W !SecretGoalTape               ;C9D1|----/----\----;AD1C14  ; \ Branch if Goal Tape extra bits == #$02 
                      INC A                               ;C9D4|----/----\----;1A      ;  | (never happens) 
                      CMP.B #$03                          ;C9D5|----/----\----;C903    ;  | 
                      BNE +                               ;C9D7|----/----\----;D006    ; / 
                      LDA.B #$01                          ;C9D9|----/----\----;A901    ; \ Unreachable 
                      STA.W !OWPlayerSubmap               ;C9DB|----/----\----;8D111F  ;  | Set submap to be Yoshi's Island 
                      LSR A                               ;C9DE|----/----\----;4A      ; / 
                    + LDY.B #$0C                          ;C9DF|----/----\----;A00C    ;
                      LDX.W !BonusGameActivate            ;C9E1|----/----\----;AE2514  ;
                      BEQ +                               ;C9E4|----/----\----;F012    ;
                      LDX.B #$FF                          ;C9E6|----/----\----;A2FF    ;
                      STX.W !BonusGameActivate            ;C9E8|----/----\----;8E2514  ;
                      LDX.B #$F0                          ;C9EB|----/----\----;A2F0    ;
                      STX.W !MosaicSize                   ;C9ED|----/----\----;8EB00D  ;
                      STZ.W !EndLevelTimer                ;C9F0|----/----\----;9C9314  ;
                      STZ.W !MusicBackup                  ;C9F3|----/----\----;9CDA0D  ;
                      LDY.B #$10                          ;C9F6|----/----\----;A010    ;
                    + STZ.W !Brightness                   ;C9F8|----/----\----;9CAE0D  ;
                      STZ.W !MosaicDirection              ;C9FB|----/----\----;9CAF0D  ;
CODE_00C9FE:          STA.W !OWLevelExitMode              ;C9FE|----/----\----;8DD50D  ; Store secret/normal exit info 
                      LDA.W !CutsceneID                   ;CA01|----/----\----;ADC613  ;
                      BEQ CODE_00CA25                     ;CA04|----/----\----;F01F    ;
                      LDX.B #$08                          ;CA06|----/----\----;A208    ;
                      LDA.W !TranslevelNo                 ;CA08|----/----\----;ADBF13  ;
                      CMP.B #$13                          ;CA0B|----/----\----;C913    ;
                      BNE +                               ;CA0D|----/----\----;D003    ;
                      INC.W !OWLevelExitMode              ;CA0F|----/----\----;EED50D  ;
                    + CMP.B #$31                          ;CA12|----/----\----;C931    ;
                      BEQ CODE_00CA20                     ;CA14|----/----\----;F00A    ;
CODE_00CA16:          CMP.W DATA_00C9A7-1,X               ;CA16|----/----\----;DDA6C9  ;
                      BEQ CODE_00CA20                     ;CA19|----/----\----;F005    ;
                      DEX                                 ;CA1B|----/----\----;CA      ;
                      BNE CODE_00CA16                     ;CA1C|----/----\----;D0F8    ;
                      BRA CODE_00CA25                     ;CA1E|----/----\----;8005    ;
                                                          ;                   ;        ;
CODE_00CA20:          STX.W !CutsceneID                   ;CA20|----/----\----;8EC613  ;
                      LDY.B #$18                          ;CA23|----/----\----;A018    ;
CODE_00CA25:          STY.W !GameMode                     ;CA25|----/----\----;8C0001  ;
                      INC.W !CreditsScreenNumber          ;CA28|----/----\----;EEE91D  ;
CODE_00CA2B:          LDA.B #$01                          ;CA2B|----/----\----;A901    ;
                      STA.W !MidwayFlag                   ;CA2D|----/----\----;8DCE13  ;
Return00CA30:         RTS                                 ;CA30|----/----\----;60      ; Return 
                                                          ;                   ;        ;
SetMarioPeaceImg:     LDA.B #$26                          ;CA31|----/----\----;A926    ; \ Mario's image = Peace Sign, or 
                      LDY.W !PlayerRidingYoshi            ;CA33|----/----\----;AC7A18  ;  | 
                      BEQ +                               ;CA36|----/----\----;F002    ;  | 
                      LDA.B #$14                          ;CA38|----/----\----;A914    ;  | Mario's image = Peace Sign on Yoshi 
                    + STA.W !PlayerPose                   ;CA3A|----/----\----;8DE013  ; / 
                      RTS                                 ;CA3D|----/----\----;60      ; Return 
                                                          ;                   ;        ;
CODE_00CA3E:          LDA.B #$F0                          ;CA3E|----/----\----;A9F0    ;
                      STA.W !SpotlightSize                ;CA40|----/----\----;8D3314  ;
                      RTS                                 ;CA43|----/----\----;60      ; Return 
                                                          ;                   ;        ;
CODE_00CA44:          LDA.W !SpotlightSize                ;CA44|----/----\----;AD3314  ;
                      BNE +                               ;CA47|----/----\----;D001    ;
                      RTS                                 ;CA49|----/----\----;60      ; Return 
                                                          ;                   ;        ;
                    + JSR CODE_00CA61                     ;CA4A|----/----\----;2061CA  ;
                      LDA.B #$FC                          ;CA4D|----/----\----;A9FC    ;
                      JSR CODE_00CA6D                     ;CA4F|----/----\----;206DCA  ;
                      LDA.B #$33                          ;CA52|----/----\----;A933    ;
                      STA.B !Layer12Window                ;CA54|----/----\----;8541    ;
                      STA.B !OBJCWWindow                  ;CA56|----/----\----;8543    ;
                      LDA.B #$03                          ;CA58|----/----\----;A903    ;
                      STA.B !Layer34Window                ;CA5A|----/----\----;8542    ;
                      LDA.B #$22                          ;CA5C|----/----\----;A922    ;
                      STA.B !ColorAddition                ;CA5E|----/----\----;8544    ;
                      RTS                                 ;CA60|----/----\----;60      ; Return 
                                                          ;                   ;        ;
CODE_00CA61:          REP #$20                            ;CA61|----/----\----;C220    ; 16 bit A ; Accum (16 bit) 
                      LDA.W #$CB12                        ;CA63|----/----\----;A912CB  ; \  
                      STA.B !_4                           ;CA66|----/----\----;8504    ;  |Load xCB12 into $04 and $06 
                      STA.B !_6                           ;CA68|----/----\----;8506    ; /  
                      SEP #$20                            ;CA6A|----/----\----;E220    ; 8 bit A ; Accum (8 bit) 
                      RTS                                 ;CA6C|----/----\----;60      ; Return 
                                                          ;                   ;        ;
CODE_00CA6D:          CLC                                 ;CA6D|----/----\----;18      ;
                      ADC.W !SpotlightSize                ;CA6E|----/----\----;6D3314  ;
                      STA.W !SpotlightSize                ;CA71|----/----\----;8D3314  ;
                      LDA.B !PlayerXPosScrRel             ;CA74|----/----\----;A57E    ;
                      CLC                                 ;CA76|----/----\----;18      ;
                      ADC.B #$08                          ;CA77|----/----\----;6908    ;
                      STA.B !_0                           ;CA79|----/----\----;8500    ;
                      LDA.B #$18                          ;CA7B|----/----\----;A918    ;
                      LDY.B !Powerup                      ;CA7D|----/----\----;A419    ;
                      BEQ +                               ;CA7F|----/----\----;F002    ;
                      LDA.B #$10                          ;CA81|----/----\----;A910    ;
                    + CLC                                 ;CA83|----/----\----;18      ;
                      ADC.B !PlayerYPosScrRel             ;CA84|----/----\----;6580    ;
                      STA.B !_1                           ;CA86|----/----\----;8501    ;
CODE_00CA88:          REP #$30                            ;CA88|----/----\----;C230    ; 16 bit A ; Index (16 bit) Accum (16 bit) 
                      AND.W #$00FF                        ;CA8A|----/----\----;29FF00  ; Keep lower byte of A 
                      ASL A                               ;CA8D|----/----\----;0A      ; \  
                      DEC A                               ;CA8E|----/----\----;3A      ;  |Set Y to ((2A-1)*2) 
                      ASL A                               ;CA8F|----/----\----;0A      ;  | 
                      TAY                                 ;CA90|----/----\----;A8      ; /  
                      SEP #$20                            ;CA91|----/----\----;E220    ; 8 bit A ; Accum (8 bit) 
                      LDX.W #$0000                        ;CA93|----/----\----;A20000  ;
CODE_00CA96:          LDA.B !_1                           ;CA96|----/----\----;A501    ;
                      CMP.W !SpotlightSize                ;CA98|----/----\----;CD3314  ;
                      BCC CODE_00CABD                     ;CA9B|----/----\----;9020    ;
                      LDA.B #$FF                          ;CA9D|----/----\----;A9FF    ;
                      STA.W !WindowTable,X                ;CA9F|----/----\----;9DA004  ;
                      STZ.W !WindowTable+1,X              ;CAA2|----/----\----;9EA104  ;
                      CPY.W #$01C0                        ;CAA5|----/----\----;C0C001  ;
                      BCS +                               ;CAA8|----/----\----;B007    ;
                      STA.W !WindowTable,Y                ;CAAA|----/----\----;99A004  ;
                      INC A                               ;CAAD|----/----\----;1A      ;
                      STA.W !WindowTable+1,Y              ;CAAE|----/----\----;99A104  ;
                    + INX                                 ;CAB1|----/----\----;E8      ;
                      INX                                 ;CAB2|----/----\----;E8      ;
                      DEY                                 ;CAB3|----/----\----;88      ;
                      DEY                                 ;CAB4|----/----\----;88      ;
                      LDA.B !_1                           ;CAB5|----/----\----;A501    ;
                      BEQ CODE_00CB0A                     ;CAB7|----/----\----;F051    ;
                      DEC.B !_1                           ;CAB9|----/----\----;C601    ;
                      BRA CODE_00CA96                     ;CABB|----/----\----;80D9    ;
                                                          ;                   ;        ;
CODE_00CABD:          JSR CODE_00CC14                     ;CABD|----/----\----;2014CC  ;
                      CLC                                 ;CAC0|----/----\----;18      ;
                      ADC.B !_0                           ;CAC1|----/----\----;6500    ;
                      BCC +                               ;CAC3|----/----\----;9002    ;
                      LDA.B #$FF                          ;CAC5|----/----\----;A9FF    ;
                    + STA.W !WindowTable+1,X              ;CAC7|----/----\----;9DA104  ;
                      LDA.B !_0                           ;CACA|----/----\----;A500    ;
                      SEC                                 ;CACC|----/----\----;38      ;
                      SBC.B !_2                           ;CACD|----/----\----;E502    ;
                      BCS +                               ;CACF|----/----\----;B002    ;
                      LDA.B #$00                          ;CAD1|----/----\----;A900    ;
                    + STA.W !WindowTable,X                ;CAD3|----/----\----;9DA004  ;
                      CPY.W #$01E0                        ;CAD6|----/----\----;C0E001  ;
                      BCS CODE_00CAFE                     ;CAD9|----/----\----;B023    ;
                      LDA.B !_7                           ;CADB|----/----\----;A507    ;
                      BNE CODE_00CAE7                     ;CADD|----/----\----;D008    ;
                      LDA.B #$00                          ;CADF|----/----\----;A900    ;
                      STA.W !WindowTable+1,Y              ;CAE1|----/----\----;99A104  ;
                      DEC A                               ;CAE4|----/----\----;3A      ;
                      BRA CODE_00CAFB                     ;CAE5|----/----\----;8014    ;
                                                          ;                   ;        ;
CODE_00CAE7:          LDA.B !_3                           ;CAE7|----/----\----;A503    ;
                      ADC.B !_0                           ;CAE9|----/----\----;6500    ;
                      BCC +                               ;CAEB|----/----\----;9002    ;
                      LDA.B #$FF                          ;CAED|----/----\----;A9FF    ;
                    + STA.W !WindowTable+1,Y              ;CAEF|----/----\----;99A104  ;
                      LDA.B !_0                           ;CAF2|----/----\----;A500    ;
                      SEC                                 ;CAF4|----/----\----;38      ;
                      SBC.B !_3                           ;CAF5|----/----\----;E503    ;
                      BCS CODE_00CAFB                     ;CAF7|----/----\----;B002    ;
                      LDA.B #$00                          ;CAF9|----/----\----;A900    ;
CODE_00CAFB:          STA.W !WindowTable,Y                ;CAFB|----/----\----;99A004  ;
CODE_00CAFE:          INX                                 ;CAFE|----/----\----;E8      ;
                      INX                                 ;CAFF|----/----\----;E8      ;
                      DEY                                 ;CB00|----/----\----;88      ;
                      DEY                                 ;CB01|----/----\----;88      ;
                      LDA.B !_1                           ;CB02|----/----\----;A501    ;
                      BEQ CODE_00CB0A                     ;CB04|----/----\----;F004    ;
                      DEC.B !_1                           ;CB06|----/----\----;C601    ;
                      BNE CODE_00CABD                     ;CB08|----/----\----;D0B3    ;
CODE_00CB0A:          LDA.B #$80                          ;CB0A|----/----\----;A980    ;
                      STA.W !HDMAEnable                   ;CB0C|----/----\----;8D9F0D  ;
                      SEP #$10                            ;CB0F|----/----\----;E210    ; Index (8 bit) 
                      RTS                                 ;CB11|----/----\----;60      ; Return 
                                                          ;                   ;        ;
                                                          ;                   ;        ;
                      db $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF  ;CB12|----/----\----;        ;
                      db $FF,$FF,$FF,$FF,$FE,$FE,$FE,$FE  ;CB1A|----/----\----;        ;
                      db $FD,$FD,$FD,$FD,$FC,$FC,$FC,$FB  ;CB22|----/----\----;        ;
                      db $FB,$FB,$FA,$FA,$F9,$F9,$F8,$F8  ;CB2A|----/----\----;        ;
                      db $F7,$F7,$F6,$F6,$F5,$F5,$F4,$F3  ;CB32|----/----\----;        ;
                      db $F3,$F2,$F1,$F1,$F0,$EF,$EE,$EE  ;CB3A|----/----\----;        ;
                      db $ED,$EC,$EB,$EA,$E9,$E9,$E8,$E7  ;CB42|----/----\----;        ;
                      db $E6,$E5,$E4,$E3,$E2,$E1,$DF,$DE  ;CB4A|----/----\----;        ;
                      db $DD,$DC,$DB,$DA,$D8,$D7,$D6,$D5  ;CB52|----/----\----;        ;
                      db $D3,$D2,$D0,$CF,$CD,$CC,$CA,$C9  ;CB5A|----/----\----;        ;
                      db $C7,$C6,$C4,$C2,$C1,$BF,$BD,$BB  ;CB62|----/----\----;        ;
                      db $B9,$B7,$B6,$B4,$B1,$AF,$AD,$AB  ;CB6A|----/----\----;        ;
                      db $A9,$A7,$A4,$A2,$9F,$9D,$9A,$97  ;CB72|----/----\----;        ;
                      db $95,$92,$8F,$8C,$89,$86,$82,$7F  ;CB7A|----/----\----;        ;
                      db $7B,$78,$74,$70,$6C,$67,$63,$5E  ;CB82|----/----\----;        ;
                      db $59,$53,$4D,$46,$3F,$37,$2D,$1F  ;CB8A|----/----\----;        ;
                      db $00,$54,$53,$52,$52,$51,$50,$50  ;CB92|----/----\----;        ;
                      db $4F,$4E,$4E,$4D,$4C,$4C,$4B,$4A  ;CB9A|----/----\----;        ;
                      db $4A,$4B,$48,$48,$47,$46,$46,$45  ;CBA2|----/----\----;        ;
                      db $44,$44,$43,$42,$42,$41,$40,$40  ;CBAA|----/----\----;        ;
                      db $3F,$3E,$3E,$3D,$3C,$3C,$3B,$3A  ;CBB2|----/----\----;        ;
                      db $3A,$39,$38,$38,$37,$36,$36,$35  ;CBBA|----/----\----;        ;
                      db $34,$34,$33,$32,$32,$31,$33,$35  ;CBC2|----/----\----;        ;
                      db $38,$3A,$3C,$3E,$3F,$41,$43,$44  ;CBCA|----/----\----;        ;
                      db $45,$47,$48,$49,$4A,$4B,$4C,$4D  ;CBD2|----/----\----;        ;
                      db $4E,$4E,$4F,$50,$50,$51,$51,$52  ;CBDA|----/----\----;        ;
                      db $52,$53,$53,$53,$53,$53,$53,$53  ;CBE2|----/----\----;        ;
                      db $53,$53,$53,$53,$53,$53,$52,$52  ;CBEA|----/----\----;        ;
                      db $51,$51,$50,$50,$4F,$4E,$4E,$4D  ;CBF2|----/----\----;        ;
                      db $4C,$4B,$4A,$49,$48,$47,$45,$44  ;CBFA|----/----\----;        ;
                      db $43,$41,$3F,$3E,$3C,$3A,$38,$35  ;CC02|----/----\----;        ;
                      db $33,$30,$2D,$2A,$26,$23,$1E,$18  ;CC0A|----/----\----;        ;
                      db $11,$00                          ;CC12|----/----\----;        ;
                                                          ;                   ;        ;
CODE_00CC14:          PHY                                 ;CC14|----/----\----;5A      ;
                      LDA.B !_1                           ;CC15|----/----\----;A501    ;
                      STA.W !HW_WRDIV+1                   ;CC17|----/----\----;8D0542  ; Dividend (High-Byte)
                      STZ.W !HW_WRDIV                     ;CC1A|----/----\----;9C0442  ; Dividend (Low Byte)
                      LDA.W !SpotlightSize                ;CC1D|----/----\----;AD3314  ;
                      STA.W !HW_WRDIV+2                   ;CC20|----/----\----;8D0642  ; Divisor B
                      NOP                                 ;CC23|----/----\----;EA      ;
                      NOP                                 ;CC24|----/----\----;EA      ;
                      NOP                                 ;CC25|----/----\----;EA      ;
                      NOP                                 ;CC26|----/----\----;EA      ;
                      NOP                                 ;CC27|----/----\----;EA      ;
                      NOP                                 ;CC28|----/----\----;EA      ;
                      REP #$20                            ;CC29|----/----\----;C220    ; Accum (16 bit) 
                      LDA.W !HW_RDDIV                     ;CC2B|----/----\----;AD1442  ; Quotient of Divide Result (Low Byte)
                      LSR A                               ;CC2E|----/----\----;4A      ;
                      TAY                                 ;CC2F|----/----\----;A8      ;
                      SEP #$20                            ;CC30|----/----\----;E220    ; Accum (8 bit) 
                      LDA.B (!_6),Y                       ;CC32|----/----\----;B106    ;
                      STA.W !HW_WRMPYA                    ;CC34|----/----\----;8D0242  ; Multiplicand A
                      LDA.W !SpotlightSize                ;CC37|----/----\----;AD3314  ;
                      STA.W !HW_WRMPYB                    ;CC3A|----/----\----;8D0342  ; Multplier B
                      NOP                                 ;CC3D|----/----\----;EA      ;
                      NOP                                 ;CC3E|----/----\----;EA      ;
                      NOP                                 ;CC3F|----/----\----;EA      ;
                      NOP                                 ;CC40|----/----\----;EA      ;
                      LDA.W !HW_RDMPY+1                   ;CC41|----/----\----;AD1742  ; Product/Remainder Result (High Byte)
                      STA.B !_3                           ;CC44|----/----\----;8503    ;
                      LDA.B (!_4),Y                       ;CC46|----/----\----;B104    ;
                      STA.W !HW_WRMPYA                    ;CC48|----/----\----;8D0242  ; Multiplicand A
                      LDA.W !SpotlightSize                ;CC4B|----/----\----;AD3314  ;
                      STA.W !HW_WRMPYB                    ;CC4E|----/----\----;8D0342  ; Multplier B
                      NOP                                 ;CC51|----/----\----;EA      ;
                      NOP                                 ;CC52|----/----\----;EA      ;
                      NOP                                 ;CC53|----/----\----;EA      ;
                      NOP                                 ;CC54|----/----\----;EA      ;
                      LDA.W !HW_RDMPY+1                   ;CC55|----/----\----;AD1742  ; Product/Remainder Result (High Byte)
                      STA.B !_2                           ;CC58|----/----\----;8502    ;
                      PLY                                 ;CC5A|----/----\----;7A      ;
                      RTS                                 ;CC5B|----/----\----;60      ; Return 
                                                          ;                   ;        ;
                                                          ;                   ;        ;
DATA_00CC5C:          db $00,$00,$00,$00,$02,$00,$06,$00  ;CC5C|----/----\----;        ;
                      db $FE,$FF,$FA,$FF                  ;CC64|----/----\----;        ;
                                                          ;                   ;        ;
ResetAni:             LDA.B !axlr0000Hold                 ;CC68|----/----\----;A517    ;
                      AND.B #$20                          ;CC6A|----/----\----;2920    ;
                      BEQ +                               ;CC6C|----/----\----;F013    ;
                      LDA.B !axlr0000Frame                ;CC6E|----/----\----;A518    ;
                      CMP.B #$80                          ;CC70|----/----\----;C980    ;
                      BNE +                               ;CC72|----/----\----;D00D    ;
                      INC.W !DebugFreeRoam                ;CC74|----/----\----;EE011E  ;
                      LDA.W !DebugFreeRoam                ;CC77|----/----\----;AD011E  ;
                      CMP.B #$03                          ;CC7A|----/----\----;C903    ;
                      BCC +                               ;CC7C|----/----\----;9003    ;
                      STZ.W !DebugFreeRoam                ;CC7E|----/----\----;9C011E  ;
                    + LDA.W !DebugFreeRoam                ;CC81|----/----\----;AD011E  ;
                      BRA CODE_00CCBB                     ;CC84|----/----\----;8035    ; Change to BEQ to enable debug code below 
                                                          ;                   ;        ;
                      LSR A                               ;CC86|----/----\----;4A      ; \ Unreachable 
                      BEQ ADDR_00CCB3                     ;CC87|----/----\----;F02A    ;  | Debug: Free roaming mode 
                      LDA.B #$FF                          ;CC89|----/----\----;A9FF    ;  | 
                      STA.W !IFrameTimer                  ;CC8B|----/----\----;8D9714  ;  | 
                      LDA.B !byetudlrHold                 ;CC8E|----/----\----;A515    ;  | 
                      AND.B #$03                          ;CC90|----/----\----;2903    ;  | 
                      ASL A                               ;CC92|----/----\----;0A      ;  | 
                      ASL A                               ;CC93|----/----\----;0A      ;  | 
                      LDX.B #$00                          ;CC94|----/----\----;A200    ;  | 
                      JSR ADDR_00CC9F                     ;CC96|----/----\----;209FCC  ;  | 
                      LDA.B !byetudlrHold                 ;CC99|----/----\----;A515    ;  | 
                      AND.B #$0C                          ;CC9B|----/----\----;290C    ;  | 
                      LDX.B #$02                          ;CC9D|----/----\----;A202    ;  | 
ADDR_00CC9F:          BIT.B !byetudlrHold                 ;CC9F|----/----\----;2415    ;  | 
                      BVC +                               ;CCA1|----/----\----;5002    ;  | 
                      ORA.B #$02                          ;CCA3|----/----\----;0902    ;  | 
                    + TAY                                 ;CCA5|----/----\----;A8      ;  | 
                      REP #$20                            ;CCA6|----/----\----;C220    ;  | Accum (16 bit) ; Accum (16 bit) 
                      LDA.B !PlayerXPosNext,X             ;CCA8|----/----\----;B594    ;  | 
                      CLC                                 ;CCAA|----/----\----;18      ;  | 
                      ADC.W DATA_00CC5C,Y                 ;CCAB|----/----\----;795CCC  ;  | 
                      STA.B !PlayerXPosNext,X             ;CCAE|----/----\----;9594    ;  | 
                      SEP #$20                            ;CCB0|----/----\----;E220    ;  | Accum (8 bit) ; Accum (8 bit) 
                      RTS                                 ;CCB2|----/----\----;60      ; / Return 
                                                          ;                   ;        ;
ADDR_00CCB3:          LDA.B #$70                          ;CCB3|----/----\----;A970    ;
                      STA.W !PlayerPMeter                 ;CCB5|----/----\----;8DE413  ;
                      STA.W !TakeoffTimer                 ;CCB8|----/----\----;8D9F14  ;
CODE_00CCBB:          LDA.W !EndLevelTimer                ;CCBB|----/----\----;AD9314  ;
                      BEQ +                               ;CCBE|----/----\----;F003    ;
                      JMP CODE_00C915                     ;CCC0|----/----\----;4C15C9  ;
                                                          ;                   ;        ;
                    + JSR CODE_00CDDD                     ;CCC3|----/----\----;20DDCD  ;
                      LDA.B !SpriteLock                   ;CCC6|----/----\----;A59D    ; \ Branch if sprites locked 
                      BNE Return00CCDF                    ;CCC8|----/----\----;D015    ; / 
                      STZ.W !CapeInteracts                ;CCCA|----/----\----;9CE813  ;
                      STZ.W !PlayerOverworldPose          ;CCCD|----/----\----;9CDE13  ;
                      LDA.W !PlayerStunnedTimer           ;CCD0|----/----\----;ADBD18  ; \ If lock Mario timer is set... 
                      BEQ CODE_00CCE0                     ;CCD3|----/----\----;F00B    ;  | 
                      DEC.W !PlayerStunnedTimer           ;CCD5|----/----\----;CEBD18  ;  | Decrease the timer 
                      STZ.B !PlayerXSpeed                 ;CCD8|----/----\----;647B    ;  | X speed = 0 
                      LDA.B #$0F                          ;CCDA|----/----\----;A90F    ;  | Mario's image = Going down tube 
                      STA.W !PlayerPose                   ;CCDC|----/----\----;8DE013  ; / 
Return00CCDF:         RTS                                 ;CCDF|----/----\----;60      ; Return 
                                                          ;                   ;        ;
CODE_00CCE0:          LDA.W !IRQNMICommand                ;CCE0|----/----\----;AD9B0D  ;
                      BPL CODE_00CD24                     ;CCE3|----/----\----;103F    ;
                      LSR A                               ;CCE5|----/----\----;4A      ;
                      BCS CODE_00CD24                     ;CCE6|----/----\----;B03C    ;
                      BIT.W !IRQNMICommand                ;CCE8|----/----\----;2C9B0D  ;
                      BVS CODE_00CD1C                     ;CCEB|----/----\----;702F    ;
                      LDA.B !PlayerInAir                  ;CCED|----/----\----;A572    ;
                      BNE CODE_00CD1C                     ;CCEF|----/----\----;D02B    ;
                      REP #$20                            ;CCF1|----/----\----;C220    ; Accum (16 bit) 
                      LDA.W !KeyholeXPos                  ;CCF3|----/----\----;AD3614  ;
                      STA.B !PlayerXPosNext               ;CCF6|----/----\----;8594    ;
                      LDA.W !KeyholeYPos                  ;CCF8|----/----\----;AD3814  ;
                      STA.B !PlayerYPosNext               ;CCFB|----/----\----;8596    ;
                      SEP #$20                            ;CCFD|----/----\----;E220    ; Accum (8 bit) 
                      JSR CODE_00DC2D                     ;CCFF|----/----\----;202DDC  ;
                      REP #$20                            ;CD02|----/----\----;C220    ; Accum (16 bit) 
                      LDA.B !PlayerXPosNext               ;CD04|----/----\----;A594    ;
                      STA.W !KeyholeXPos                  ;CD06|----/----\----;8D3614  ;
                      STA.W !BrSwingXDist                 ;CD09|----/----\----;8DB414  ;
                      LDA.B !PlayerYPosNext               ;CD0C|----/----\----;A596    ;
                      AND.W #$FFF0                        ;CD0E|----/----\----;29F0FF  ;
                      STA.W !KeyholeYPos                  ;CD11|----/----\----;8D3814  ;
                      STA.W !BrSwingYDist                 ;CD14|----/----\----;8DB614  ;
                      JSR CODE_00F9C9                     ;CD17|----/----\----;20C9F9  ;
                      BRA +                               ;CD1A|----/----\----;8003    ;
                                                          ;                   ;        ;
CODE_00CD1C:          JSR CODE_00DC2D                     ;CD1C|----/----\----;202DDC  ; Accum (8 bit) 
                    + JSR CODE_00F8F2                     ;CD1F|----/----\----;20F2F8  ;
                      BRA CODE_00CD36                     ;CD22|----/----\----;8012    ;
                                                          ;                   ;        ;
CODE_00CD24:          LDA.B !PlayerYSpeed                 ;CD24|----/----\----;A57D    ; \ Branch if Mario has downward speed 
                      BPL +                               ;CD26|----/----\----;1008    ; / 
                      LDA.B !PlayerBlockedDir             ;CD28|----/----\----;A577    ;
                      AND.B #$08                          ;CD2A|----/----\----;2908    ;
                      BEQ +                               ;CD2C|----/----\----;F002    ;
                      STZ.B !PlayerYSpeed                 ;CD2E|----/----\----;647D    ; Y speed = 0 
                    + JSR CODE_00DC2D                     ;CD30|----/----\----;202DDC  ;
                      JSR CODE_00E92B                     ;CD33|----/----\----;202BE9  ;
CODE_00CD36:          JSR CODE_00F595                     ;CD36|----/----\----;2095F5  ;
CODE_00CD39:          STZ.W !PlayerTurningPose            ;CD39|----/----\----;9CDD13  ;
                      LDY.W !PBalloonInflating            ;CD3C|----/----\----;ACF313  ;
                      BNE CODE_00CD95                     ;CD3F|----/----\----;D054    ;
                      LDA.W !PlayerClimbingRope           ;CD41|----/----\----;ADBE18  ;
                      BEQ +                               ;CD44|----/----\----;F004    ;
                      LDA.B #$1F                          ;CD46|----/----\----;A91F    ;
                      STA.B !GraphicsCompPtr+1            ;CD48|----/----\----;858B    ;
                    + LDA.B !PlayerIsClimbing             ;CD4A|----/----\----;A574    ;
                      BNE CODE_00CD72                     ;CD4C|----/----\----;D024    ;
                      LDA.W !IsCarryingItem               ;CD4E|----/----\----;AD8F14  ;
                      ORA.W !PlayerRidingYoshi            ;CD51|----/----\----;0D7A18  ;
                      BNE CODE_00CD79                     ;CD54|----/----\----;D023    ;
                      LDA.B !GraphicsCompPtr+1            ;CD56|----/----\----;A58B    ;
                      AND.B #$1B                          ;CD58|----/----\----;291B    ;
                      CMP.B #$1B                          ;CD5A|----/----\----;C91B    ;
                      BNE CODE_00CD79                     ;CD5C|----/----\----;D01B    ;
                      LDA.B !byetudlrHold                 ;CD5E|----/----\----;A515    ;
                      AND.B #$0C                          ;CD60|----/----\----;290C    ;
                      BEQ CODE_00CD79                     ;CD62|----/----\----;F015    ;
                      LDY.B !PlayerInAir                  ;CD64|----/----\----;A472    ;
                      BNE CODE_00CD72                     ;CD66|----/----\----;D00A    ;
                      AND.B #$08                          ;CD68|----/----\----;2908    ;
                      BNE CODE_00CD72                     ;CD6A|----/----\----;D006    ;
                      LDA.B !GraphicsCompPtr+1            ;CD6C|----/----\----;A58B    ;
                      AND.B #$04                          ;CD6E|----/----\----;2904    ;
                      BEQ CODE_00CD79                     ;CD70|----/----\----;F007    ;
CODE_00CD72:          LDA.B !GraphicsCompPtr+1            ;CD72|----/----\----;A58B    ;
                      STA.B !PlayerIsClimbing             ;CD74|----/----\----;8574    ;
                      JMP CODE_00DB17                     ;CD76|----/----\----;4C17DB  ;
                                                          ;                   ;        ;
CODE_00CD79:          LDA.B !PlayerInWater                ;CD79|----/----\----;A575    ;
                      BEQ CODE_00CD82                     ;CD7B|----/----\----;F005    ;
                      JSR CODE_00D988                     ;CD7D|----/----\----;2088D9  ;
                      BRA CODE_00CD8F                     ;CD80|----/----\----;800D    ;
                                                          ;                   ;        ;
CODE_00CD82:          JSR CODE_00D5F2                     ;CD82|----/----\----;20F2D5  ;
                      JSR CODE_00D062                     ;CD85|----/----\----;2062D0  ;
                      JSR CODE_00D7E4                     ;CD88|----/----\----;20E4D7  ;
CODE_00CD8B:          JSL CODE_00CEB1                     ;CD8B|----/----\----;22B1CE00;
CODE_00CD8F:          LDY.W !PlayerRidingYoshi            ;CD8F|----/----\----;AC7A18  ;
                      BNE CODE_00CDAD                     ;CD92|----/----\----;D019    ;
                      RTS                                 ;CD94|----/----\----;60      ; Return 
                                                          ;                   ;        ;
CODE_00CD95:          LDA.B #$42                          ;CD95|----/----\----;A942    ;
                      LDX.B !Powerup                      ;CD97|----/----\----;A619    ;
                      BEQ +                               ;CD99|----/----\----;F002    ;
                      LDA.B #$43                          ;CD9B|----/----\----;A943    ;
                    + DEY                                 ;CD9D|----/----\----;88      ;
                      BEQ +                               ;CD9E|----/----\----;F005    ;
                      STY.W !PBalloonInflating            ;CDA0|----/----\----;8CF313  ;
                      LDA.B #$0F                          ;CDA3|----/----\----;A90F    ; \ Mario's image = Going down tube 
                    + STA.W !PlayerPose                   ;CDA5|----/----\----;8DE013  ; / 
CODE_00CDA8:          RTS                                 ;CDA8|----/----\----;60      ;
                                                          ;                   ;        ;
                                                          ;                   ;        ;
                      db $20,$21,$27,$28                  ;CDA9|----/----\----;        ;
                                                          ;                   ;        ;
CODE_00CDAD:          LDX.W !YoshiTongueTimer             ;CDAD|----/----\----;AEA314  ;
                      BEQ +                               ;CDB0|----/----\----;F008    ;
                      LDY.B #$03                          ;CDB2|----/----\----;A003    ;
                      CPX.B #$0C                          ;CDB4|----/----\----;E00C    ;
                      BCS +                               ;CDB6|----/----\----;B002    ;
                      LDY.B #$04                          ;CDB8|----/----\----;A004    ;
                    + LDA.W CODE_00CDA8,Y                 ;CDBA|----/----\----;B9A8CD  ;
                      DEY                                 ;CDBD|----/----\----;88      ;
                      BNE +                               ;CDBE|----/----\----;D006    ;
                      LDY.B !PlayerIsDucking              ;CDC0|----/----\----;A473    ;
                      BEQ +                               ;CDC2|----/----\----;F002    ;
                      LDA.B #$1D                          ;CDC4|----/----\----;A91D    ; \ Mario's image = Picking up object 
                    + STA.W !PlayerPose                   ;CDC6|----/----\----;8DE013  ; / 
                      LDA.W !YoshiHasWingsEvt             ;CDC9|----/----\----;AD1E14  ; \ Check Yoshi wing ability address for #$01, 
                      CMP.B #$01                          ;CDCC|----/----\----;C901    ; / but this is an impossible value 
                      BNE Return00CDDC                    ;CDCE|----/----\----;D00C    ; \ Unreachable/unused code 
                      BIT.B !byetudlrFrame                ;CDD0|----/----\----;2416    ;  | Lets Mario (any power) shoot fireballs while on Yoshi 
                      BVC Return00CDDC                    ;CDD2|----/----\----;5008    ;  | 
                      LDA.B #$08                          ;CDD4|----/----\----;A908    ;  | 
                      STA.W !Empty18DB                    ;CDD6|----/----\----;8DDB18  ;  | 
                      JSR ShootFireball                   ;CDD9|----/----\----;20A8FE  ; / 
Return00CDDC:         RTS                                 ;CDDC|----/----\----;60      ; Return 
                                                          ;                   ;        ;
CODE_00CDDD:          LDA.W !HorizLayer1Setting           ;CDDD|----/----\----;AD1114  ;
                      BEQ Return00CDDC                    ;CDE0|----/----\----;F0FA    ;
                      LDY.W !CameraScrollDir              ;CDE2|----/----\----;ACFE13  ;
                      LDA.W !CameraIsScrolling            ;CDE5|----/----\----;ADFD13  ;
                      STA.B !SpriteLock                   ;CDE8|----/----\----;859D    ;
                      BNE CODE_00CE4C                     ;CDEA|----/----\----;D060    ;
                      LDA.W !CameraProperMove             ;CDEC|----/----\----;AD0014  ;
                      BEQ CODE_00CDF6                     ;CDEF|----/----\----;F005    ;
                      STZ.W !CameraScrollDir              ;CDF1|----/----\----;9CFE13  ;
                      BRA CODE_00CE48                     ;CDF4|----/----\----;8052    ;
                                                          ;                   ;        ;
CODE_00CDF6:          LDA.B !axlr0000Hold                 ;CDF6|----/----\----;A517    ; \ Branch if anything besides L/R being held 
                      AND.B #$CF                          ;CDF8|----/----\----;29CF    ;  | 
                      ORA.B !byetudlrHold                 ;CDFA|----/----\----;0515    ;  | 
                      BNE CODE_00CE49                     ;CDFC|----/----\----;D04B    ; / 
                      LDA.B !axlr0000Hold                 ;CDFE|----/----\----;A517    ; \ Branch if L/R not being held 
                      AND.B #$30                          ;CE00|----/----\----;2930    ;  | 
                      BEQ CODE_00CE49                     ;CE02|----/----\----;F045    ;  | 
                      CMP.B #$30                          ;CE04|----/----\----;C930    ;  | 
                      BEQ CODE_00CE49                     ;CE06|----/----\----;F041    ; / 
                      LSR A                               ;CE08|----/----\----;4A      ;
                      LSR A                               ;CE09|----/----\----;4A      ;
                      LSR A                               ;CE0A|----/----\----;4A      ;
                      INC.W !CameraScrollTimer            ;CE0B|----/----\----;EE0114  ;
                      LDX.W !CameraScrollTimer            ;CE0E|----/----\----;AE0114  ;
                      CPX.B #$10                          ;CE11|----/----\----;E010    ;
                      BCC CODE_00CE4C                     ;CE13|----/----\----;9037    ;
                      TAX                                 ;CE15|----/----\----;AA      ;
                      REP #$20                            ;CE16|----/----\----;C220    ; Accum (16 bit) 
                      LDA.W !CameraMoveTrigger            ;CE18|----/----\----;AD2A14  ;
                      CMP.W DATA_00F6CB,X                 ;CE1B|----/----\----;DDCBF6  ;
                      SEP #$20                            ;CE1E|----/----\----;E220    ; Accum (8 bit) 
                      BEQ CODE_00CE4C                     ;CE20|----/----\----;F02A    ;
                      LDA.B #$01                          ;CE22|----/----\----;A901    ;
                      TRB.W !CameraMoveTrigger            ;CE24|----/----\----;1C2A14  ;
                      INC.W !CameraIsScrolling            ;CE27|----/----\----;EEFD13  ;
                      LDA.B #$00                          ;CE2A|----/----\----;A900    ;
                      CPX.B #$02                          ;CE2C|----/----\----;E002    ;
                      BNE +                               ;CE2E|----/----\----;D003    ;
                      LDA.B !LastScreenHoriz              ;CE30|----/----\----;A55E    ;
                      DEC A                               ;CE32|----/----\----;3A      ;
                    + REP #$20                            ;CE33|----/----\----;C220    ; Accum (16 bit) 
                      XBA                                 ;CE35|----/----\----;EB      ;
                      AND.W #$FF00                        ;CE36|----/----\----;2900FF  ;
                      CMP.B !Layer1XPos                   ;CE39|----/----\----;C51A    ;
                      SEP #$20                            ;CE3B|----/----\----;E220    ; Accum (8 bit) 
                      BEQ +                               ;CE3D|----/----\----;F005    ;
                      LDY.B #$0E                          ;CE3F|----/----\----;A00E    ; \ Play sound effect 
                      STY.W !SPCIO3                       ;CE41|----/----\----;8CFC1D  ; / 
                    + TXA                                 ;CE44|----/----\----;8A      ;
                      STA.W !CameraScrollDir              ;CE45|----/----\----;8DFE13  ;
CODE_00CE48:          TAY                                 ;CE48|----/----\----;A8      ;
CODE_00CE49:          STZ.W !CameraScrollTimer            ;CE49|----/----\----;9C0114  ;
CODE_00CE4C:          LDX.B #$00                          ;CE4C|----/----\----;A200    ;
                      LDA.B !PlayerDirection              ;CE4E|----/----\----;A576    ;
                      ASL A                               ;CE50|----/----\----;0A      ;
                      STA.W !CameraScrollPlayerDir        ;CE51|----/----\----;8DFF13  ;
                      REP #$20                            ;CE54|----/----\----;C220    ; Accum (16 bit) 
                      LDA.W !CameraMoveTrigger            ;CE56|----/----\----;AD2A14  ;
                      CMP.W DATA_00F6CB,Y                 ;CE59|----/----\----;D9CBF6  ;
                      BEQ CODE_00CE6D                     ;CE5C|----/----\----;F00F    ;
                      CLC                                 ;CE5E|----/----\----;18      ;
                      ADC.W DATA_00F6BF,Y                 ;CE5F|----/----\----;79BFF6  ;
                      LDY.W !CameraScrollPlayerDir        ;CE62|----/----\----;ACFF13  ;
                      CMP.W DATA_00F6B3,Y                 ;CE65|----/----\----;D9B3F6  ;
                      BNE +                               ;CE68|----/----\----;D006    ;
                      STX.W !CameraScrollDir              ;CE6A|----/----\----;8EFE13  ;
CODE_00CE6D:          STX.W !CameraIsScrolling            ;CE6D|----/----\----;8EFD13  ;
                    + STA.W !CameraMoveTrigger            ;CE70|----/----\----;8D2A14  ;
                      STX.W !CameraProperMove             ;CE73|----/----\----;8E0014  ;
                      SEP #$20                            ;CE76|----/----\----;E220    ; Accum (8 bit) 
CODE_00CE78:          RTS                                 ;CE78|----/----\----;60      ;
                                                          ;                   ;        ;
                                                          ;                   ;        ;
                      db $2A,$2B,$2C,$2D,$2E,$2F          ;CE79|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00CE7F:          db $2C,$2C,$2C,$2B,$2B,$2C,$2C,$2B  ;CE7F|----/----\----;        ;
                      db $2B,$2C,$2D,$2A,$2A,$2D,$2D,$2A  ;CE87|----/----\----;        ;
                      db $2A,$2D,$2D,$2A,$2A,$2D,$2E,$2A  ;CE8F|----/----\----;        ;
                      db $2A,$2E                          ;CE97|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00CE99:          db $00,$00,$25,$44,$00,$00,$0F,$45  ;CE99|----/----\----;        ;
DATA_00CEA1:          db $00,$00,$00,$00,$01,$01,$01,$01  ;CEA1|----/----\----;        ;
DATA_00CEA9:          db $02,$07,$06,$09,$02,$07,$06,$09  ;CEA9|----/----\----;        ;
                                                          ;                   ;        ;
CODE_00CEB1:          LDA.W !CapeAniTimer                 ;CEB1|----/----\----;ADA214  ; Related to cape animation? 
                      BNE lbl14A2Not0                     ;CEB4|----/----\----;D060    ;
                      LDX.W !PlayerCapePose               ;CEB6|----/----\----;AEDF13  ; Cape image 
                      LDA.B !PlayerInAir                  ;CEB9|----/----\----;A572    ; If Mario isn't in air, branch to $CEDE 
                      BEQ MarioAnimAir                    ;CEBB|----/----\----;F021    ; branch to $CEDE 
                      LDY.B #$04                          ;CEBD|----/----\----;A004    ;
                      BIT.B !PlayerYSpeed                 ;CEBF|----/----\----;247D    ; \ If Mario is falling (and thus not on ground) 
                      BPL CODE_00CECD                     ;CEC1|----/----\----;100A    ; / branch down 
                      CMP.B #$0C                          ;CEC3|----/----\----;C90C    ; \ If making a "run jump", 
                      BEQ CODE_00CEFD                     ;CEC5|----/----\----;F036    ; / branch to $CEFD 
                      LDA.B !PlayerInWater                ;CEC7|----/----\----;A575    ; \ If Mario is in water, 
                      BNE CODE_00CEFD                     ;CEC9|----/----\----;D032    ;  |branch to $CEFD 
                      BRA MrioNtInWtr                     ;CECB|----/----\----;8017    ; / otherwise, branch to $CEE4 
                                                          ;                   ;        ;
CODE_00CECD:          INX                                 ;CECD|----/----\----;E8      ; \  
                      CPX.B #$05                          ;CECE|----/----\----;E005    ;  |if X >= #$04 and != #$FF then jump down <- counting the INX 
                      BCS CODE_00CED6                     ;CED0|----/----\----;B004    ; /  
                      LDX.B #$05                          ;CED2|----/----\----;A205    ; X = #$05 
                      BRA CODE_00CF0A                     ;CED4|----/----\----;8034    ; Branch to $CF04 
                                                          ;                   ;        ;
CODE_00CED6:          CPX.B #$0B                          ;CED6|----/----\----;E00B    ; \ If X is less than #$0B, 
                      BCC CODE_00CF0A                     ;CED8|----/----\----;9030    ; / branch to $CF0A 
                      LDX.B #$07                          ;CEDA|----/----\----;A207    ; X = #$07 
                      BRA CODE_00CF0A                     ;CEDC|----/----\----;802C    ; Mario is not in the air, branch to $CF0A 
                                                          ;                   ;        ;
MarioAnimAir:         LDA.B !PlayerXSpeed                 ;CEDE|----/----\----;A57B    ; \ If Mario X speed isn't 0, 
                      BNE CODE_00CEF0                     ;CEE0|----/----\----;D00E    ; / branch to $CEF0 
                      LDY.B #$08                          ;CEE2|----/----\----;A008    ; Otherwise Y = #$08 
MrioNtInWtr:          TXA                                 ;CEE4|----/----\----;8A      ; A = X = #13DF 
                      BEQ CODE_00CF0A                     ;CEE5|----/----\----;F023    ; If $13DF (now A) = 0 branch to $CF04 
                      DEX                                 ;CEE7|----/----\----;CA      ; \  
                      CPX.B #$03                          ;CEE8|----/----\----;E003    ;  |If X - 1 < #$03 Then Branch $CF04 
                      BCC CODE_00CF0A                     ;CEEA|----/----\----;901E    ; /  
                      LDX.B #$02                          ;CEEC|----/----\----;A202    ; X = #$02 
                      BRA CODE_00CF0A                     ;CEEE|----/----\----;801A    ; Branch to $CF04 
                                                          ;                   ;        ;
CODE_00CEF0:          BPL +                               ;CEF0|----/----\----;1003    ; \  
                      EOR.B #$FF                          ;CEF2|----/----\----;49FF    ;  |A = abs(A) 
                      INC A                               ;CEF4|----/----\----;1A      ;  | 
                    + LSR A                               ;CEF5|----/----\----;4A      ; \  
                      LSR A                               ;CEF6|----/----\----;4A      ;  |Divide a by 8 
                      LSR A                               ;CEF7|----/----\----;4A      ; /  
                      TAY                                 ;CEF8|----/----\----;A8      ; Y = A 
                      LDA.W DATA_00DC7C,Y                 ;CEF9|----/----\----;B97CDC  ; A = Mario animation speed? (I didn't know it was a table...) 
                      TAY                                 ;CEFC|----/----\----;A8      ; Load Y with this table 
CODE_00CEFD:          INX                                 ;CEFD|----/----\----;E8      ; \  
                      CPX.B #$03                          ;CEFE|----/----\----;E003    ;  | 
                      BCS +                               ;CF00|----/----\----;B002    ;  |If X is < #$02 and != #$FF <- counting the INX 
                      LDX.B #$05                          ;CF02|----/----\----;A205    ;  |then X = #$05 
                    + CPX.B #$07                          ;CF04|----/----\----;E007    ; \  
                      BCC CODE_00CF0A                     ;CF06|----/----\----;9002    ;  |If X is greater than or equal to #$07 then X = #$03 
                      LDX.B #$03                          ;CF08|----/----\----;A203    ;  | 
CODE_00CF0A:          STX.W !PlayerCapePose               ;CF0A|----/----\----;8EDF13  ; And X goes right back into $13DF (cape image) after being modified 
                      TYA                                 ;CF0D|----/----\----;98      ; Now Y goes back into A 
                      LDY.B !PlayerInWater                ;CF0E|----/----\----;A475    ; \  
                      BEQ +                               ;CF10|----/----\----;F001    ;  |If mario is in water then A = 2A 
                      ASL A                               ;CF12|----/----\----;0A      ;  | 
                    + STA.W !CapeAniTimer                 ;CF13|----/----\----;8DA214  ; A -> $14A2 (do we know this byte yet?) no. 
lbl14A2Not0:          LDA.W !SpinJumpFlag                 ;CF16|----/----\----;AD0D14  ; A = Spin Jump Flag 
                      ORA.W !CapeSpinTimer                ;CF19|----/----\----;0DA614  ;
                      BEQ CODE_00CF4E                     ;CF1C|----/----\----;F030    ; If $140D OR $14A6 = 0 then branch to $CF4E 
                      STZ.B !PlayerIsDucking              ;CF1E|----/----\----;6473    ; 0 -> Ducking while jumping flag 
                      LDA.B !EffFrame                     ;CF20|----/----\----;A514    ; \  
                      AND.B #$06                          ;CF22|----/----\----;2906    ;  |X = Y = Alternate frame counter AND #$06 
                      TAX                                 ;CF24|----/----\----;AA      ;  | 
                      TAY                                 ;CF25|----/----\----;A8      ; /  
                      LDA.B !PlayerInAir                  ;CF26|----/----\----;A572    ; \ If on ground branch down 
                      BEQ +                               ;CF28|----/----\----;F005    ; /  
                      LDA.B !PlayerYSpeed                 ;CF2A|----/----\----;A57D    ; \ If Mario moving upwards branch down 
                      BMI +                               ;CF2C|----/----\----;3001    ; /  
                      INY                                 ;CF2E|----/----\----;C8      ; Y = Y + 1 
                    + LDA.W DATA_00CEA9,Y                 ;CF2F|----/----\----;B9A9CE  ; \ After loading from this table, 
                      STA.W !PlayerCapePose               ;CF32|----/----\----;8DDF13  ; / Store A in cape image 
                      LDA.B !Powerup                      ;CF35|----/----\----;A519    ; A = Mario's powerup status 
                      BEQ +                               ;CF37|----/----\----;F001    ; \  
                      INX                                 ;CF39|----/----\----;E8      ;  |If not small, increase X 
                    + LDA.W DATA_00CEA1,X                 ;CF3A|----/----\----;BDA1CE  ; \ Load from another table 
                      STA.B !PlayerDirection              ;CF3D|----/----\----;8576    ; / store to Mario's Direction 
                      LDY.B !Powerup                      ;CF3F|----/----\----;A419    ; \  
                      CPY.B #$02                          ;CF41|----/----\----;C002    ;  | 
                      BNE +                               ;CF43|----/----\----;D003    ;  |If Mario has cape, JSR 
                      JSR CODE_00D044                     ;CF45|----/----\----;2044D0  ;  |to possibly the graphics handler 
                    + LDA.W DATA_00CE99,X                 ;CF48|----/----\----;BD99CE  ; \ Load from a table again 
                      JMP CODE_00D01A                     ;CF4B|----/----\----;4C1AD0  ; / And jump 
                                                          ;                   ;        ;
CODE_00CF4E:          LDA.W !PlayerSlopePose              ;CF4E|----/----\----;ADED13  ; \ If $13ED is #$01 - #$7F then 
                      BEQ CODE_00CF62                     ;CF51|----/----\----;F00F    ;  |branch to $CF85 
                      BPL CODE_00CF85                     ;CF53|----/----\----;1030    ;  | 
                      LDA.W !SlopeType                    ;CF55|----/----\----;ADE113  ;
                      LSR A                               ;CF58|----/----\----;4A      ;
                      LSR A                               ;CF59|----/----\----;4A      ;
                      ORA.B !PlayerDirection              ;CF5A|----/----\----;0576    ;
                      TAY                                 ;CF5C|----/----\----;A8      ;
                      LDA.W DATA_00CE7F,Y                 ;CF5D|----/----\----;B97FCE  ;
                      BRA CODE_00CF85                     ;CF60|----/----\----;8023    ;
                                                          ;                   ;        ;
CODE_00CF62:          LDA.B #$3C                          ;CF62|----/----\----;A93C    ; \ Select Case $148F 
                      LDY.W !IsCarryingItem               ;CF64|----/----\----;AC8F14  ;  |Case 0:A = #$3C 
                      BEQ +                               ;CF67|----/----\----;F002    ;  |Case Else: A = #$1D 
                      LDA.B #$1D                          ;CF69|----/----\----;A91D    ;  |End Select 
                    + LDY.B !PlayerIsDucking              ;CF6B|----/----\----;A473    ; \ If Ducking while jumping 
                      BNE CODE_00CF85                     ;CF6D|----/----\----;D016    ; / Branch to $CF85 
                      LDA.W !ShootFireTimer               ;CF6F|----/----\----;AD9C14  ; \ If (Unknown) = 0 
                      BEQ CODE_00CF7E                     ;CF72|----/----\----;F00A    ; / Branch to $CF7E 
                      LDA.B #$3F                          ;CF74|----/----\----;A93F    ; A = #$3F 
                      LDY.B !PlayerInAir                  ;CF76|----/----\----;A472    ; \ If Mario isn't in air,  
                      BEQ CODE_00CF85                     ;CF78|----/----\----;F00B    ;  |branch to $CF85 
                      LDA.B #$16                          ;CF7A|----/----\----;A916    ;  |Otherwise, set A to #$16 and 
                      BRA CODE_00CF85                     ;CF7C|----/----\----;8007    ; / branch to $CF85 
                                                          ;                   ;        ;
CODE_00CF7E:          LDA.B #$0E                          ;CF7E|----/----\----;A90E    ; A = #$0E 
                      LDY.W !KickingTimer                 ;CF80|----/----\----;AC9A14  ; \ If Time to show Mario's current pose is 00, 
                      BEQ +                               ;CF83|----/----\----;F003    ;  | Don't jump to $D01A 
CODE_00CF85:          JMP CODE_00D01A                     ;CF85|----/----\----;4C1AD0  ;  | 
                                                          ;                   ;        ;
                    + LDA.B #$1D                          ;CF88|----/----\----;A91D    ; A = #$1D 
                      LDY.W !PickUpItemTimer              ;CF8A|----/----\----;AC9814  ; \ If $1499 != 0 then Jump to $D01A 
                      BNE CODE_00CF85                     ;CF8D|----/----\----;D0F6    ; /  
                      LDA.B #$0F                          ;CF8F|----/----\----;A90F    ; A = #$0F 
                      LDY.W !FaceScreenTimer              ;CF91|----/----\----;AC9914  ; \ If $1499 != 0 then Jump to $D01A 
                      BNE CODE_00CF85                     ;CF94|----/----\----;D0EF    ; /  
                      LDA.B #$00                          ;CF96|----/----\----;A900    ; A = #$00 
                      LDX.W !PlayerInCloud                ;CF98|----/----\----;AEC218  ; X = $18C2 (Unknown) 
                      BNE MarioAnimNoAbs1                 ;CF9B|----/----\----;D026    ; If X != 0 then branch down 
                      LDA.B !PlayerInAir                  ;CF9D|----/----\----;A572    ; \ If Mario is flying branch down 
                      BEQ CODE_00CFB7                     ;CF9F|----/----\----;F016    ; /  
                      LDY.W !RunTakeoffTimer              ;CFA1|----/----\----;ACA014  ; \ If $14A0 != 0 then 
                      BNE CODE_00CFBC                     ;CFA4|----/----\----;D016    ; / Skip down 
                      LDY.W !FlightPhase                  ;CFA6|----/----\----;AC0714  ; Spaghetticode(tm) 
                      BEQ +                               ;CFA9|----/----\----;F003    ;
                      LDA.W CODE_00CE78,Y                 ;CFAB|----/----\----;B978CE  ;
                    + LDY.W !IsCarryingItem               ;CFAE|----/----\----;AC8F14  ; \ If Mario isn't holding something, 
                      BEQ CODE_00D01A                     ;CFB1|----/----\----;F067    ;  |branch to $D01A 
                      LDA.B #$09                          ;CFB3|----/----\----;A909    ;  |Otherwise, set A to #$09 and 
                      BRA CODE_00D01A                     ;CFB5|----/----\----;8063    ; / branch to $D01A 
                                                          ;                   ;        ;
CODE_00CFB7:          LDA.W !PlayerTurningPose            ;CFB7|----/----\----;ADDD13  ;
                      BNE CODE_00D01A                     ;CFBA|----/----\----;D05E    ;
CODE_00CFBC:          LDA.B !PlayerXSpeed                 ;CFBC|----/----\----;A57B    ; \  
                      BPL MarioAnimNoAbs1                 ;CFBE|----/----\----;1003    ;  | 
                      EOR.B #$FF                          ;CFC0|----/----\----;49FF    ;  |Set A to absolute value of Mario's X speed 
                      INC A                               ;CFC2|----/----\----;1A      ;  | 
MarioAnimNoAbs1:      TAX                                 ;CFC3|----/----\----;AA      ; Copy A to X 
                      BNE CODE_00CFD4                     ;CFC4|----/----\----;D00E    ; If Mario isn't standing still, branch to $CFD4 
                      XBA                                 ;CFC6|----/----\----;EB      ; "Push" A 
                      LDA.B !byetudlrHold                 ;CFC7|----/----\----;A515    ; \  
                      AND.B #$08                          ;CFC9|----/----\----;2908    ;  |If player isn't pressing up, 
                      BEQ CODE_00D002                     ;CFCB|----/----\----;F035    ;  |branch to $D002 
                      LDA.B #$03                          ;CFCD|----/----\----;A903    ;  |Otherwise, store x03 in $13DE and 
                      STA.W !PlayerOverworldPose          ;CFCF|----/----\----;8DDE13  ;  |branch to $D002 
                      BRA CODE_00D002                     ;CFD2|----/----\----;802E    ; /  
                                                          ;                   ;        ;
CODE_00CFD4:          LDA.B !LevelIsSlippery              ;CFD4|----/----\----;A586    ; \ If level isn't slippery, 
                      BEQ CODE_00CFE3                     ;CFD6|----/----\----;F00B    ; / branch to $CFE3 
                      LDA.B !byetudlrHold                 ;CFD8|----/----\----;A515    ;
                      AND.B #$03                          ;CFDA|----/----\----;2903    ;
                      BEQ CODE_00D003                     ;CFDC|----/----\----;F025    ;
                      LDA.B #$68                          ;CFDE|----/----\----;A968    ;
                      STA.W !PlayerPoseLenTimer           ;CFE0|----/----\----;8DE513  ;
CODE_00CFE3:          LDA.W !PlayerWalkingPose            ;CFE3|----/----\----;ADDB13  ; A = $13DB 
                      LDY.W !PlayerAniTimer               ;CFE6|----/----\----;AC9614  ; \ If Mario is hurt (flashing), 
                      BNE CODE_00D003                     ;CFE9|----/----\----;D018    ; / branch to $D003 
                      DEC A                               ;CFEB|----/----\----;3A      ; A = A - 1 
                      BPL +                               ;CFEC|----/----\----;1005    ; \If bit 7 is clear, 
                      LDY.B !Powerup                      ;CFEE|----/----\----;A419    ;  | Load amount of walking frames 
                      LDA.W NumWalkingFrames,Y            ;CFF0|----/----\----;B978DC  ;  | for current powerup 
                    + XBA                                 ;CFF3|----/----\----;EB      ; \ >>-This code puts together an index to a table further down-<< 
                      TXA                                 ;CFF4|----/----\----;8A      ;  |-\ Above Line: "Push" frame amount 
                      LSR A                               ;CFF5|----/----\----;4A      ;  |  |A = X / 8 
                      LSR A                               ;CFF6|----/----\----;4A      ;  |  | 
                      LSR A                               ;CFF7|----/----\----;4A      ;  |-/  
                      ORA.W !PlayerPoseLenTimer           ;CFF8|----/----\----;0DE513  ;  |ORA with $13E5 
                      TAY                                 ;CFFB|----/----\----;A8      ;  |And store A to Y 
                      LDA.W DATA_00DC7C,Y                 ;CFFC|----/----\----;B97CDC  ;  | 
                      STA.W !PlayerAniTimer               ;CFFF|----/----\----;8D9614  ; /  
CODE_00D002:          XBA                                 ;D002|----/----\----;EB      ; \ Switch in frame amount and store it to $13DB 
CODE_00D003:          STA.W !PlayerWalkingPose            ;D003|----/----\----;8DDB13  ; /  
                      CLC                                 ;D006|----/----\----;18      ; \ Add walking animation type 
                      ADC.W !PlayerOverworldPose          ;D007|----/----\----;6DDE13  ; / (Walking, running...) 
                      LDY.W !IsCarryingItem               ;D00A|----/----\----;AC8F14  ; \  
                      BEQ CODE_00D014                     ;D00D|----/----\----;F005    ;  | 
                      CLC                                 ;D00F|----/----\----;18      ;  |If Mario is carrying something, add #$07 
                      ADC.B #$07                          ;D010|----/----\----;6907    ;  | 
                      BRA CODE_00D01A                     ;D012|----/----\----;8006    ;  | 
                                                          ;                   ;        ;
CODE_00D014:          CPX.B #$2F                          ;D014|----/----\----;E02F    ; \  
                      BCC CODE_00D01A                     ;D016|----/----\----;9002    ;  |If X is greater than #$2F, add #$04 
                      ADC.B #$03                          ;D018|----/----\----;6903    ; / <-Carry is always set here, adding #$01 to (#$03 + A) 
CODE_00D01A:          LDY.W !WallrunningType              ;D01A|----/----\----;ACE313  ; \ If Mario isn't rotated 45 degrees (triangle 
                      BEQ +                               ;D01D|----/----\----;F011    ; / block), branch to $D030 
                      TYA                                 ;D01F|----/----\----;98      ; \ Y AND #$01 -> Mario's Direction RAM Byte 
                      AND.B #$01                          ;D020|----/----\----;2901    ;  | 
                      STA.B !PlayerDirection              ;D022|----/----\----;8576    ; /  
                      LDA.B #$10                          ;D024|----/----\----;A910    ; \  
                      CPY.B #$06                          ;D026|----/----\----;C006    ;  |If Y < 6 then 
                      BCC +                               ;D028|----/----\----;9006    ;  |    A = #13DB + $11 
                      LDA.W !PlayerWalkingPose            ;D02A|----/----\----;ADDB13  ;  |Else 
                      CLC                                 ;D02D|----/----\----;18      ;  |    A = #$10 
                      ADC.B #$11                          ;D02E|----/----\----;6911    ;  |End If 
                    + STA.W !PlayerPose                   ;D030|----/----\----;8DE013  ; Store in Current animation frame 
                      RTL                                 ;D033|----/----\----;6B      ; And Finish 
                                                          ;                   ;        ;
                                                          ;                   ;        ;
DATA_00D034:          db $0C,$00,$F4,$FF,$08,$00,$F8,$FF  ;D034|----/----\----;        ;
DATA_00D03C:          db $10,$00,$10,$00,$02,$00,$02,$00  ;D03C|----/----\----;        ;
                                                          ;                   ;        ;
CODE_00D044:          LDY.B #$01                          ;D044|----/----\----;A001    ;
                      STY.W !CapeInteracts                ;D046|----/----\----;8CE813  ;
                      ASL A                               ;D049|----/----\----;0A      ;
                      TAY                                 ;D04A|----/----\----;A8      ;
                      REP #$20                            ;D04B|----/----\----;C220    ; 16 bit A ; Accum (16 bit) 
                      LDA.B !PlayerXPosNext               ;D04D|----/----\----;A594    ; \  
                      CLC                                 ;D04F|----/----\----;18      ;  | 
                      ADC.W DATA_00D034,Y                 ;D050|----/----\----;7934D0  ;  | 
                      STA.W !CapeInteractionXPos          ;D053|----/----\----;8DE913  ;  |Set cape<->sprite collision coordinates 
                      LDA.B !PlayerYPosNext               ;D056|----/----\----;A596    ;  | 
                      CLC                                 ;D058|----/----\----;18      ;  | 
                      ADC.W DATA_00D03C,Y                 ;D059|----/----\----;793CD0  ;  | 
                      STA.W !CapeInteractionYPos          ;D05C|----/----\----;8DEB13  ; /  
                      SEP #$20                            ;D05F|----/----\----;E220    ; 8 bit A ; Accum (8 bit) 
                      RTS                                 ;D061|----/----\----;60      ; Return 
                                                          ;                   ;        ;
CODE_00D062:          LDA.B !Powerup                      ;D062|----/----\----;A519    ;
                      CMP.B #$02                          ;D064|----/----\----;C902    ;
                      BNE CODE_00D081                     ;D066|----/----\----;D019    ;
                      BIT.B !byetudlrFrame                ;D068|----/----\----;2416    ;
                      BVC Return00D0AD                    ;D06A|----/----\----;5041    ;
                      LDA.B !PlayerIsDucking              ;D06C|----/----\----;A573    ;
                      ORA.W !PlayerRidingYoshi            ;D06E|----/----\----;0D7A18  ;
                      ORA.W !SpinJumpFlag                 ;D071|----/----\----;0D0D14  ;
                      BNE Return00D0AD                    ;D074|----/----\----;D037    ;
                      LDA.B #$12                          ;D076|----/----\----;A912    ;
                      STA.W !CapeSpinTimer                ;D078|----/----\----;8DA614  ;
                      LDA.B #$04                          ;D07B|----/----\----;A904    ; \ Play sound effect 
                      STA.W !SPCIO3                       ;D07D|----/----\----;8DFC1D  ; / 
                      RTS                                 ;D080|----/----\----;60      ; Return 
                                                          ;                   ;        ;
CODE_00D081:          CMP.B #$03                          ;D081|----/----\----;C903    ;
                      BNE Return00D0AD                    ;D083|----/----\----;D028    ;
                      LDA.B !PlayerIsDucking              ;D085|----/----\----;A573    ;
                      ORA.W !PlayerRidingYoshi            ;D087|----/----\----;0D7A18  ;
                      BNE Return00D0AD                    ;D08A|----/----\----;D021    ;
                      BIT.B !byetudlrFrame                ;D08C|----/----\----;2416    ;
                      BVS CODE_00D0AA                     ;D08E|----/----\----;701A    ;
                      LDA.W !SpinJumpFlag                 ;D090|----/----\----;AD0D14  ;
                      BEQ Return00D0AD                    ;D093|----/----\----;F018    ;
                      INC.W !SpinjumpFireball             ;D095|----/----\----;EEE213  ;
                      LDA.W !SpinjumpFireball             ;D098|----/----\----;ADE213  ;
                      AND.B #$0F                          ;D09B|----/----\----;290F    ;
                      BNE Return00D0AD                    ;D09D|----/----\----;D00E    ;
                      TAY                                 ;D09F|----/----\----;A8      ;
                      LDA.W !SpinjumpFireball             ;D0A0|----/----\----;ADE213  ;
                      AND.B #$10                          ;D0A3|----/----\----;2910    ;
                      BEQ +                               ;D0A5|----/----\----;F001    ;
                      INY                                 ;D0A7|----/----\----;C8      ;
                    + STY.B !PlayerDirection              ;D0A8|----/----\----;8476    ;
CODE_00D0AA:          JSR ShootFireball                   ;D0AA|----/----\----;20A8FE  ; haha, I read this as "FEAR" at first 
Return00D0AD:         RTS                                 ;D0AD|----/----\----;60      ; Return 
                                                          ;                   ;        ;
                                                          ;                   ;        ;
                      db $7C,$00,$80,$00,$00,$06,$00,$01  ;D0AE|----/----\----;        ;
                                                          ;                   ;        ;
MarioDeathAni:        STZ.B !Powerup                      ;D0B6|----/----\----;6419    ; Set powerup to 0 
                      LDA.B #$3E                          ;D0B8|----/----\----;A93E    ; \  
                      STA.W !PlayerPose                   ;D0BA|----/----\----;8DE013  ; / Set Mario image to death image 
                      LDA.B !TrueFrame                    ;D0BD|----/----\----;A513    ; \  
                      AND.B #$03                          ;D0BF|----/----\----;2903    ;  |Decrease "Death fall timer" every four frames 
                      BNE +                               ;D0C1|----/----\----;D003    ;  | 
                      DEC.W !PlayerAniTimer               ;D0C3|----/----\----;CE9614  ;  | 
                    + LDA.W !PlayerAniTimer               ;D0C6|----/----\----;AD9614  ; \ If Death fall timer isn't #$00, 
                      BNE DeathNotDone                    ;D0C9|----/----\----;D03D    ; / branch to $D108 
                      LDA.B #$80                          ;D0CB|----/----\----;A980    ;
                      STA.W !OWLevelExitMode              ;D0CD|----/----\----;8DD50D  ;
                      LDA.W !RemoveYoshiFlag              ;D0D0|----/----\----;AD9B1B  ;
                      BNE +                               ;D0D3|----/----\----;D003    ;
                      STZ.W !CarryYoshiThruLvls           ;D0D5|----/----\----;9CC10D  ; Set reserve item to 0 
                    + DEC.W !PlayerLives                  ;D0D8|----/----\----;CEBE0D  ; Decrease amount of lifes 
                      BPL DeathNotGameOver                ;D0DB|----/----\----;1009    ; If not Game Over, branch to $D0E6 
                      LDA.B #$0A                          ;D0DD|----/----\----;A90A    ;
                      STA.W !SPCIO2                       ;D0DF|----/----\----;8DFB1D  ; / Change music 
                      LDX.B #$14                          ;D0E2|----/----\----;A214    ; Set X (Death message) to x14 (Game Over) 
                      BRA DeathShowMessage                ;D0E4|----/----\----;800F    ;
                                                          ;                   ;        ;
DeathNotGameOver:     LDY.B #$0B                          ;D0E6|----/----\----;A00B    ; Set Y (game mode) to x0B (Fade to overworld) 
                      LDA.W !InGameTimerHundreds          ;D0E8|----/----\----;AD310F  ; \  
                      ORA.W !InGameTimerTens              ;D0EB|----/----\----;0D320F  ;  |If time isn't zero, 
                      ORA.W !InGameTimerOnes              ;D0EE|----/----\----;0D330F  ;  |branch to $D104 
                      BNE +                               ;D0F1|----/----\----;D011    ; /  
                      LDX.B #$1D                          ;D0F3|----/----\----;A21D    ; Set X (Death message) to x1D (Time Up) 
DeathShowMessage:     STX.W !DeathMessage                 ;D0F5|----/----\----;8E3B14  ; Store X in Death message 
                      LDA.B #$C0                          ;D0F8|----/----\----;A9C0    ; \ Set Death message animation to xC0 
                      STA.W !GameOverAnimation            ;D0FA|----/----\----;8D3C14  ; /(Must be divisable by 4) 
                      LDA.B #$FF                          ;D0FD|----/----\----;A9FF    ; \ Set Death message timer to xFF 
                      STA.W !GameOverTimer                ;D0FF|----/----\----;8D3D14  ; / 
                      LDY.B #$15                          ;D102|----/----\----;A015    ; Set Y (game mode) to x15 (Fade to Game Over) 
                    + STY.W !GameMode                     ;D104|----/----\----;8C0001  ; Store Y in Game Mode 
                      RTS                                 ;D107|----/----\----;60      ; Return 
                                                          ;                   ;        ;
DeathNotDone:         CMP.B #$26                          ;D108|----/----\----;C926    ; \ If Death fall timer >= x26, 
                      BCS +                               ;D10A|----/----\----;B010    ; / return 
                      STZ.B !PlayerXSpeed                 ;D10C|----/----\----;647B    ; Set Mario X speed to 0 
                      JSR CODE_00DC2D                     ;D10E|----/----\----;202DDC  ;
                      JSR CODE_00D92E                     ;D111|----/----\----;202ED9  ;
                      LDA.B !TrueFrame                    ;D114|----/----\----;A513    ; \  
                      LSR A                               ;D116|----/----\----;4A      ;  | 
                      LSR A                               ;D117|----/----\----;4A      ;  |Flip death image every four frames 
                      AND.B #$01                          ;D118|----/----\----;2901    ;  | 
                      STA.B !PlayerDirection              ;D11A|----/----\----;8576    ; /  
                    + RTS                                 ;D11C|----/----\----;60      ;
                                                          ;                   ;        ;
                                                          ;                   ;        ;
GrowingAniImgs:       db $00,$3D,$00,$3D,$00,$3D,$46,$3D  ;D11D|----/----\----;        ;
                      db $46,$3D,$46,$3D                  ;D125|----/----\----;        ;
                                                          ;                   ;        ;
PowerDownAni:         LDA.W !PlayerAniTimer               ;D129|----/----\----;AD9614  ;
                      BEQ CODE_00D140                     ;D12C|----/----\----;F012    ;
                      LSR A                               ;D12E|----/----\----;4A      ;
                      LSR A                               ;D12F|----/----\----;4A      ;
CODE_00D130:          TAY                                 ;D130|----/----\----;A8      ;
                      LDA.W GrowingAniImgs,Y              ;D131|----/----\----;B91DD1  ; \ Set Mario's image 
                      STA.W !PlayerPose                   ;D134|----/----\----;8DE013  ; / 
CODE_00D137:          LDA.W !PlayerAniTimer               ;D137|----/----\----;AD9614  ;
                      BEQ +                               ;D13A|----/----\----;F003    ;
                      DEC.W !PlayerAniTimer               ;D13C|----/----\----;CE9614  ;
                    + RTS                                 ;D13F|----/----\----;60      ; Return 
                                                          ;                   ;        ;
CODE_00D140:          LDA.B #$7F                          ;D140|----/----\----;A97F    ;
                      STA.W !IFrameTimer                  ;D142|----/----\----;8D9714  ;
                      BRA CODE_00D158                     ;D145|----/----\----;8011    ;
                                                          ;                   ;        ;
MushroomAni:          LDA.W !PlayerAniTimer               ;D147|----/----\----;AD9614  ;
                      BEQ CODE_00D156                     ;D14A|----/----\----;F00A    ;
                      LSR A                               ;D14C|----/----\----;4A      ;
                      LSR A                               ;D14D|----/----\----;4A      ;
                      EOR.B #$FF                          ;D14E|----/----\----;49FF    ;
                      INC A                               ;D150|----/----\----;1A      ;
                      CLC                                 ;D151|----/----\----;18      ;
                      ADC.B #$0B                          ;D152|----/----\----;690B    ;
                      BRA CODE_00D130                     ;D154|----/----\----;80DA    ;
                                                          ;                   ;        ;
CODE_00D156:          INC.B !Powerup                      ;D156|----/----\----;E619    ;
CODE_00D158:          LDA.B #$00                          ;D158|----/----\----;A900    ;
                      STA.B !PlayerAnimation              ;D15A|----/----\----;8571    ;
                      STZ.B !SpriteLock                   ;D15C|----/----\----;649D    ;
                    - RTS                                 ;D15E|----/----\----;60      ; Return 
                                                          ;                   ;        ;
CapeAni:              LDA.B #$7F                          ;D15F|----/----\----;A97F    ;
                      STA.B !PlayerHiddenTiles            ;D161|----/----\----;8578    ;
                      DEC.W !PlayerAniTimer               ;D163|----/----\----;CE9614  ;
                      BNE -                               ;D166|----/----\----;D0F6    ;
                      LDA.B !Powerup                      ;D168|----/----\----;A519    ;
                      LSR A                               ;D16A|----/----\----;4A      ;
                      BEQ CODE_00D140                     ;D16B|----/----\----;F0D3    ;
                      BNE CODE_00D158                     ;D16D|----/----\----;D0E9    ;
FlowerAni:            LDA.W !PlayerSlopePose              ;D16F|----/----\----;ADED13  ;
                      AND.B #$80                          ;D172|----/----\----;2980    ;
                      ORA.W !FlightPhase                  ;D174|----/----\----;0D0714  ;
                      BEQ +                               ;D177|----/----\----;F00E    ;
                      STZ.W !FlightPhase                  ;D179|----/----\----;9C0714  ;
                      LDA.W !PlayerSlopePose              ;D17C|----/----\----;ADED13  ;
                      AND.B #$7F                          ;D17F|----/----\----;297F    ;
                      STA.W !PlayerSlopePose              ;D181|----/----\----;8DED13  ;
                      STZ.W !PlayerPose                   ;D184|----/----\----;9CE013  ;
                    + DEC.W !CyclePaletteTimer            ;D187|----/----\----;CE9B14  ;
                      BEQ CODE_00D158                     ;D18A|----/----\----;F0CC    ;
                      RTS                                 ;D18C|----/----\----;60      ; Return 
                                                          ;                   ;        ;
                                                          ;                   ;        ;
PipeSpeedX:           db $F8,$08                          ;D18D|----/----\----;        ;
                                                          ;                   ;        ;
PipeSpeedY:           db $00,$00,$F0                      ;D18F|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00D192:          db $10                              ;D192|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00D193:          db $00,$63,$1C,$00                  ;D193|----/----\----;        ;
                                                          ;                   ;        ;
DoorPipeAni:          JSR NoButtons                       ;D197|----/----\----;202DF6  ;
                      STZ.W !PlayerOverworldPose          ;D19A|----/----\----;9CDE13  ;
                      JSL CODE_00CEB1                     ;D19D|----/----\----;22B1CE00;
                      JSL CODE_00CFBC                     ;D1A1|----/----\----;22BCCF00;
                      JSR CODE_00D1F4                     ;D1A5|----/----\----;20F4D1  ;
                      LDA.W !PlayerRidingYoshi            ;D1A8|----/----\----;AD7A18  ;
                      BEQ +                               ;D1AB|----/----\----;F005    ;
                      LDA.B #$29                          ;D1AD|----/----\----;A929    ; \ Mario's image = Entering horizontal pipe on Yoshi 
                      STA.W !PlayerPose                   ;D1AF|----/----\----;8DE013  ; / 
                    + REP #$20                            ;D1B2|----/----\----;C220    ; Accum (16 bit) 
                      LDA.B !PlayerYPosNext               ;D1B4|----/----\----;A596    ;
                      SEC                                 ;D1B6|----/----\----;38      ;
                      SBC.W #$0008                        ;D1B7|----/----\----;E90800  ;
                      AND.W #$FFF0                        ;D1BA|----/----\----;29F0FF  ;
                      ORA.W #$000E                        ;D1BD|----/----\----;090E00  ;
                      STA.B !PlayerYPosNext               ;D1C0|----/----\----;8596    ;
                      SEP #$20                            ;D1C2|----/----\----;E220    ; Accum (8 bit) 
                      LDA.B !PlayerPipeAction             ;D1C4|----/----\----;A589    ;
                      LSR A                               ;D1C6|----/----\----;4A      ;
                      TAY                                 ;D1C7|----/----\----;A8      ;
                      INY                                 ;D1C8|----/----\----;C8      ;
                      LDA.W DATA_00D192,Y                 ;D1C9|----/----\----;B992D1  ;
                      LDX.W !IsCarryingItem               ;D1CC|----/----\----;AE8F14  ;
                      BEQ +                               ;D1CF|----/----\----;F00A    ;
                      EOR.B #$1C                          ;D1D1|----/----\----;491C    ;
                      DEC.W !FaceScreenTimer              ;D1D3|----/----\----;CE9914  ;
                      BPL +                               ;D1D6|----/----\----;1003    ;
                      INC.W !FaceScreenTimer              ;D1D8|----/----\----;EE9914  ;
                    + LDX.B !PipeTimer                    ;D1DB|----/----\----;A688    ;
                      CPX.B #$1D                          ;D1DD|----/----\----;E01D    ;
                      BCS CODE_00D1F0                     ;D1DF|----/----\----;B00F    ;
                      CPY.B #$03                          ;D1E1|----/----\----;C003    ;
                      BCC +                               ;D1E3|----/----\----;9008    ;
                      REP #$20                            ;D1E5|----/----\----;C220    ; Accum (16 bit) 
                      INC.B !PlayerYPosNext               ;D1E7|----/----\----;E696    ;
                      INC.B !PlayerYPosNext               ;D1E9|----/----\----;E696    ;
                      SEP #$20                            ;D1EB|----/----\----;E220    ; Accum (8 bit) 
                    + LDA.W DATA_00D193,Y                 ;D1ED|----/----\----;B993D1  ;
CODE_00D1F0:          STA.B !PlayerHiddenTiles            ;D1F0|----/----\----;8578    ;
                      BRA CODE_00D22D                     ;D1F2|----/----\----;8039    ;
                                                          ;                   ;        ;
CODE_00D1F4:          LDA.W !CapeAniTimer                 ;D1F4|----/----\----;ADA214  ;
                      BEQ +                               ;D1F7|----/----\----;F003    ;
                      DEC.W !CapeAniTimer                 ;D1F9|----/----\----;CEA214  ;
                    + JMP CODE_00D137                     ;D1FC|----/----\----;4C37D1  ;
                                                          ;                   ;        ;
                                                          ;                   ;        ;
PipeCntrBoundryX:     db $0A,$06                          ;D1FF|----/----\----;        ;
                                                          ;                   ;        ;
PipeCntringSpeed:     db $FF,$01                          ;D201|----/----\----;        ;
                                                          ;                   ;        ;
VertPipeAni:          JSR NoButtons                       ;D203|----/----\----;202DF6  ;
                      STZ.W !PlayerCapePose               ;D206|----/----\----;9CDF13  ;
                      LDA.B #$0F                          ;D209|----/----\----;A90F    ;
                      LDY.W !PlayerRidingYoshi            ;D20B|----/----\----;AC7A18  ;
                      BEQ CODE_00D22A                     ;D20E|----/----\----;F01A    ;
                      LDX.B #$00                          ;D210|----/----\----;A200    ;
                      LDY.B !PlayerDirection              ;D212|----/----\----;A476    ; \ 
                      LDA.B !PlayerXPosNext               ;D214|----/----\----;A594    ;  | If not relativly centered on the pipe... 
                      AND.B #$0F                          ;D216|----/----\----;290F    ;  | 
                      CMP.W PipeCntrBoundryX,Y            ;D218|----/----\----;D9FFD1  ;  | 
                      BEQ CODE_00D228                     ;D21B|----/----\----;F00B    ;  | 
                      BPL +                               ;D21D|----/----\----;1001    ;  | 
                      INX                                 ;D21F|----/----\----;E8      ;  | 
                    + LDA.B !PlayerXPosNext               ;D220|----/----\----;A594    ;  | ...adjust Mario's X postion 
                      CLC                                 ;D222|----/----\----;18      ;  | 
                      ADC.W PipeCntringSpeed,X            ;D223|----/----\----;7D01D2  ;  | 
                      STA.B !PlayerXPosNext               ;D226|----/----\----;8594    ; / 
CODE_00D228:          LDA.B #$21                          ;D228|----/----\----;A921    ; \ Mario's image = going down pipe 
CODE_00D22A:          STA.W !PlayerPose                   ;D22A|----/----\----;8DE013  ; / 
CODE_00D22D:          LDA.B #$40                          ;D22D|----/----\----;A940    ; \ Set holding X/Y on controller 
                      STA.B !byetudlrHold                 ;D22F|----/----\----;8515    ; / 
                      LDA.B #$02                          ;D231|----/----\----;A902    ; \ Set behind scenery flag 
                      STA.W !PlayerBehindNet              ;D233|----/----\----;8DF913  ; / 
                      LDA.B !PlayerPipeAction             ;D236|----/----\----;A589    ;
                      CMP.B #$04                          ;D238|----/----\----;C904    ;
                      LDY.B !PipeTimer                    ;D23A|----/----\----;A488    ;
                      BEQ CODE_00D268                     ;D23C|----/----\----;F02A    ;
                      AND.B #$03                          ;D23E|----/----\----;2903    ;
                      TAY                                 ;D240|----/----\----;A8      ;
                      DEC.B !PipeTimer                    ;D241|----/----\----;C688    ;
                      BNE +                               ;D243|----/----\----;D009    ;
                      BCS +                               ;D245|----/----\----;B007    ;
                      LDA.B #$7F                          ;D247|----/----\----;A97F    ;
                      STA.B !PlayerHiddenTiles            ;D249|----/----\----;8578    ;
                      INC.W !DrawYoshiInPipe              ;D24B|----/----\----;EE0514  ;
                    + LDA.B !PlayerXSpeed                 ;D24E|----/----\----;A57B    ; \ If Mario has no speed... 
                      ORA.B !PlayerYSpeed                 ;D250|----/----\----;057D    ;  | 
                      BNE +                               ;D252|----/----\----;D005    ;  | 
                      LDA.B #$04                          ;D254|----/----\----;A904    ;  | ...play sound effect 
                      STA.W !SPCIO0                       ;D256|----/----\----;8DF91D  ; / 
                    + LDA.W PipeSpeedX,Y                  ;D259|----/----\----;B98DD1  ; \ Set X speed 
                      STA.B !PlayerXSpeed                 ;D25C|----/----\----;857B    ; / 
                      LDA.W PipeSpeedY,Y                  ;D25E|----/----\----;B98FD1  ; \ Set Y speed 
                      STA.B !PlayerYSpeed                 ;D261|----/----\----;857D    ; / 
                      STZ.B !PlayerInAir                  ;D263|----/----\----;6472    ; Mario flying = false 
                      JMP CODE_00DC2D                     ;D265|----/----\----;4C2DDC  ;
                                                          ;                   ;        ;
CODE_00D268:          BCC CODE_00D273                     ;D268|----/----\----;9009    ;
CODE_00D26A:          STZ.W !PlayerBehindNet              ;D26A|----/----\----;9CF913  ; \ In new level, reset values 
                      STZ.W !YoshiInPipeSetting           ;D26D|----/----\----;9C1914  ; / 
                      JMP CODE_00D158                     ;D270|----/----\----;4C58D1  ;
                                                          ;                   ;        ;
CODE_00D273:          INC.W !SublevelCount                ;D273|----/----\----;EE1A14  ;
                      LDA.B #$0F                          ;D276|----/----\----;A90F    ;
                      STA.W !GameMode                     ;D278|----/----\----;8D0001  ;
                      RTS                                 ;D27B|----/----\----;60      ; Return 
                                                          ;                   ;        ;
                      LDA.B !PlayerYPosNext               ;D27C|----/----\----;A596    ; \ Unreachable 
                      SEC                                 ;D27E|----/----\----;38      ;  | 
                      SBC.B !PlayerYPosNow                ;D27F|----/----\----;E5D3    ;  | 
                      CLC                                 ;D281|----/----\----;18      ;  | 
                      ADC.B !PipeTimer                    ;D282|----/----\----;6588    ;  | 
                      STA.B !PipeTimer                    ;D284|----/----\----;8588    ;  | 
                      RTS                                 ;D286|----/----\----;60      ; / Return 
                                                          ;                   ;        ;
PipeCannonAni:        JSR NoButtons                       ;D287|----/----\----;202DF6  ;
                      LDA.B #$02                          ;D28A|----/----\----;A902    ;
                      STA.W !PlayerBehindNet              ;D28C|----/----\----;8DF913  ;
                      LDA.B #$0C                          ;D28F|----/----\----;A90C    ;
                      STA.B !PlayerInAir                  ;D291|----/----\----;8572    ;
                      JSR CODE_00CD8B                     ;D293|----/----\----;208BCD  ;
                      DEC.B !PipeTimer                    ;D296|----/----\----;C688    ;
                      BNE +                               ;D298|----/----\----;D003    ;
                      JMP CODE_00D26A                     ;D29A|----/----\----;4C6AD2  ;
                                                          ;                   ;        ;
                    + LDA.B !PipeTimer                    ;D29D|----/----\----;A588    ;
                      CMP.B #$18                          ;D29F|----/----\----;C918    ;
                      BCC CODE_00D2AA                     ;D2A1|----/----\----;9007    ;
                      BNE +                               ;D2A3|----/----\----;D00D    ;
                      LDA.B #$09                          ;D2A5|----/----\----;A909    ; \ Play sound effect 
                      STA.W !SPCIO3                       ;D2A7|----/----\----;8DFC1D  ; / 
CODE_00D2AA:          STZ.W !PlayerBehindNet              ;D2AA|----/----\----;9CF913  ;
                      STZ.W !YoshiInPipeSetting           ;D2AD|----/----\----;9C1914  ;
                      STZ.B !SpriteLock                   ;D2B0|----/----\----;649D    ; Set sprites not locked 
                    + LDA.B #$40                          ;D2B2|----/----\----;A940    ; \ X speed = #$40 
                      STA.B !PlayerXSpeed                 ;D2B4|----/----\----;857B    ; / 
                      LDA.B #$C0                          ;D2B6|----/----\----;A9C0    ; \ Y speed = #$C0 
                      STA.B !PlayerYSpeed                 ;D2B8|----/----\----;857D    ; / 
                      JMP CODE_00DC2D                     ;D2BA|----/----\----;4C2DDC  ;
                                                          ;                   ;        ;
                                                          ;                   ;        ;
DATA_00D2BD:          db $B0,$B6,$AE,$B4,$AB,$B2,$A9,$B0  ;D2BD|----/----\----;        ;
                      db $A6,$AE,$A4,$AB,$A1,$A9,$9F,$A6  ;D2C5|----/----\----;        ;
DATA_00D2CD:          db $00,$FF,$00,$01,$00,$FF,$00,$01  ;D2CD|----/----\----;        ;
                      db $00,$FF,$00,$01,$80,$FE,$C0,$00  ;D2D5|----/----\----;        ;
                      db $40,$FF,$80,$01,$00,$FE,$40,$00  ;D2DD|----/----\----;        ;
                      db $C0,$FF,$00,$02,$00,$FE,$40,$00  ;D2E5|----/----\----;        ;
                      db $00,$FE,$40,$00,$C0,$FF,$00,$02  ;D2ED|----/----\----;        ;
                      db $C0,$FF,$00,$02,$00,$FC,$00,$FF  ;D2F5|----/----\----;        ;
                      db $00,$01,$00,$04,$00,$FF,$00,$01  ;D2FD|----/----\----;        ;
                      db $00,$FF,$00,$01                  ;D305|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00D309:          db $E0,$FF,$20,$00,$E0,$FF,$20,$00  ;D309|----/----\----;        ;
                      db $E0,$FF,$20,$00,$C0,$FF,$20,$00  ;D311|----/----\----;        ;
                      db $E0,$FF,$40,$00,$80,$FF,$20,$00  ;D319|----/----\----;        ;
                      db $E0,$FF,$80,$00,$80,$FF,$20,$00  ;D321|----/----\----;        ;
                      db $80,$FF,$20,$00,$E0,$FF,$80,$00  ;D329|----/----\----;        ;
                      db $E0,$FF,$80,$00,$00,$FE,$80,$FF  ;D331|----/----\----;        ;
                      db $80,$00,$00,$02,$00,$FF,$00,$01  ;D339|----/----\----;        ;
                      db $00,$FF,$00,$01                  ;D341|----/----\----;        ;
                                                          ;                   ;        ;
MarioAccel_:          db $80                              ;D345|----/----\----;        ;
                                                          ;                   ;        ;
MarioAccel2_:         db $FE,$80,$FE,$80,$01,$80,$01,$80  ;D346|----/----\----;        ;
                      db $FE,$80,$FE,$80,$01,$80,$01,$80  ;D34E|----/----\----;        ;
                      db $FE,$80,$FE,$80,$01,$80,$01,$80  ;D356|----/----\----;        ;
                      db $FE,$80,$FE,$40,$01,$40,$01,$C0  ;D35E|----/----\----;        ;
                      db $FE,$C0,$FE,$80,$01,$80,$01,$80  ;D366|----/----\----;        ;
                      db $FE,$80,$FE,$00,$01,$00,$01,$00  ;D36E|----/----\----;        ;
                      db $FF,$00,$FF,$80,$01,$80,$01,$80  ;D376|----/----\----;        ;
                      db $FE,$80,$FE,$00,$01,$00,$01,$80  ;D37E|----/----\----;        ;
                      db $FE,$80,$FE,$00,$01,$00,$01,$00  ;D386|----/----\----;        ;
                      db $FF,$00,$FF,$80,$01,$80,$01,$00  ;D38E|----/----\----;        ;
                      db $FF,$00,$FF,$80,$01,$80,$01,$00  ;D396|----/----\----;        ;
                      db $FC,$00,$FC,$00,$FD,$00,$FD,$00  ;D39E|----/----\----;        ;
                      db $03,$00,$03,$00,$04,$00,$04,$00  ;D3A6|----/----\----;        ;
                      db $FC,$00,$FC,$00,$06,$00,$06,$00  ;D3AE|----/----\----;        ;
                      db $FA,$00,$FA,$00,$04,$00,$04,$80  ;D3B6|----/----\----;        ;
                      db $FF,$80,$00,$00,$FF,$00,$01,$80  ;D3BE|----/----\----;        ;
                      db $FE,$80,$01,$80,$FE,$80,$FE,$80  ;D3C6|----/----\----;        ;
                      db $01,$80,$01,$80,$FE,$80,$02,$80  ;D3CE|----/----\----;        ;
                      db $FD,$00,$FB,$80,$02,$00,$05,$80  ;D3D6|----/----\----;        ;
                      db $FD,$00,$FB,$80,$02,$00,$05,$80  ;D3DE|----/----\----;        ;
                      db $FD,$00,$FB,$80,$02,$00,$05,$40  ;D3E6|----/----\----;        ;
                      db $FD,$80,$FA,$40,$02,$80,$04,$C0  ;D3EE|----/----\----;        ;
                      db $FD,$80,$FB,$C0,$02,$80,$05,$00  ;D3F6|----/----\----;        ;
                      db $FD,$00,$FA,$00,$02,$00,$04,$00  ;D3FE|----/----\----;        ;
                      db $FE,$00,$FC,$00,$03,$00,$06,$00  ;D406|----/----\----;        ;
                      db $FD,$00,$FA,$00,$02,$00,$04,$00  ;D40E|----/----\----;        ;
                      db $FD,$00,$FA,$00,$02,$00,$04,$00  ;D416|----/----\----;        ;
                      db $FE,$00,$FC,$00,$03,$00,$06,$00  ;D41E|----/----\----;        ;
                      db $FE,$00,$FC,$00,$03,$00,$06,$00  ;D426|----/----\----;        ;
                      db $FD,$00,$FA,$00,$FD,$00,$FA,$00  ;D42E|----/----\----;        ;
                      db $03,$00,$06,$00,$03,$00,$06      ;D436|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00D43D:          db $80,$FF,$80,$FE,$80,$00,$80,$01  ;D43D|----/----\----;        ;
                      db $80,$FF,$80,$FE,$80,$00,$80,$01  ;D445|----/----\----;        ;
                      db $80,$FF,$80,$FE,$80,$00,$80,$01  ;D44D|----/----\----;        ;
                      db $80,$FE,$80,$FE,$80,$00,$40,$01  ;D455|----/----\----;        ;
                      db $80,$FF,$C0,$FE,$80,$01,$80,$01  ;D45D|----/----\----;        ;
                      db $80,$FE,$80,$FE,$80,$00,$00,$01  ;D465|----/----\----;        ;
                      db $80,$FF,$00,$FF,$80,$01,$80,$01  ;D46D|----/----\----;        ;
                      db $80,$FE,$80,$FE,$80,$00,$00,$01  ;D475|----/----\----;        ;
                      db $80,$FE,$80,$FE,$80,$00,$00,$01  ;D47D|----/----\----;        ;
                      db $80,$FF,$00,$FF,$80,$01,$80,$01  ;D485|----/----\----;        ;
                      db $80,$FF,$00,$FF,$80,$01,$80,$01  ;D48D|----/----\----;        ;
                      db $00,$FC,$00,$FC,$00,$FE,$00,$FD  ;D495|----/----\----;        ;
                      db $00,$03,$00,$03,$00,$04,$00,$04  ;D49D|----/----\----;        ;
                      db $00,$FC,$00,$FC,$80,$00,$80,$00  ;D4A5|----/----\----;        ;
                      db $80,$FF,$80,$FF,$00,$04,$00,$04  ;D4AD|----/----\----;        ;
                      db $80,$FF,$80,$00,$00,$FF,$00,$01  ;D4B5|----/----\----;        ;
                      db $80,$FE,$80,$01,$80,$FE,$80,$FE  ;D4BD|----/----\----;        ;
                      db $80,$01,$80,$01,$80,$FE,$80,$02  ;D4C5|----/----\----;        ;
                      db $C0,$FF,$80,$FD,$40,$00,$80,$02  ;D4CD|----/----\----;        ;
                      db $C0,$FF,$80,$FD,$40,$00,$80,$02  ;D4D5|----/----\----;        ;
                      db $C0,$FF,$80,$FD,$40,$00,$80,$02  ;D4DD|----/----\----;        ;
                      db $80,$FF,$40,$FD,$40,$00,$40,$02  ;D4E5|----/----\----;        ;
                      db $C0,$FF,$C0,$FD,$80,$00,$C0,$02  ;D4ED|----/----\----;        ;
                      db $00,$FD,$00,$FD,$40,$00,$00,$02  ;D4F5|----/----\----;        ;
                      db $C0,$FF,$00,$FE,$00,$03,$00,$03  ;D4FD|----/----\----;        ;
                      db $00,$FD,$00,$FD,$40,$00,$00,$02  ;D505|----/----\----;        ;
                      db $00,$FD,$00,$FD,$40,$00,$00,$02  ;D50D|----/----\----;        ;
                      db $C0,$FF,$00,$FE,$00,$03,$00,$03  ;D515|----/----\----;        ;
                      db $C0,$FF,$00,$FE,$00,$03,$00,$03  ;D51D|----/----\----;        ;
                      db $00,$FD,$00,$FD,$00,$FD,$00,$FD  ;D525|----/----\----;        ;
                      db $00,$03,$00,$03,$00,$03,$00,$03  ;D52D|----/----\----;        ;
DATA_00D535:          db $EC,$14,$DC,$24,$DC,$24,$D0,$30  ;D535|----/----\----;        ;
                      db $EC,$14,$DC,$24,$DC,$24,$D0,$30  ;D53D|----/----\----;        ;
                      db $EC,$14,$DC,$24,$DC,$24,$D0,$30  ;D545|----/----\----;        ;
                      db $E8,$12,$DC,$20,$DC,$20,$D0,$2C  ;D54D|----/----\----;        ;
                      db $EE,$18,$E0,$24,$E0,$24,$D4,$30  ;D555|----/----\----;        ;
                      db $DC,$10,$DC,$1C,$DC,$1C,$D0,$28  ;D55D|----/----\----;        ;
                      db $F0,$24,$E4,$24,$E4,$24,$D8,$30  ;D565|----/----\----;        ;
                      db $DC,$10,$DC,$1C,$DC,$1C,$D0,$28  ;D56D|----/----\----;        ;
                      db $DC,$10,$DC,$1C,$DC,$1C,$D0,$28  ;D575|----/----\----;        ;
                      db $F0,$24,$E4,$24,$E4,$24,$D8,$30  ;D57D|----/----\----;        ;
                      db $F0,$24,$E4,$24,$E4,$24,$D8,$30  ;D585|----/----\----;        ;
                      db $DC,$F0,$DC,$F8,$DC,$F8,$D0,$FC  ;D58D|----/----\----;        ;
                      db $10,$24,$08,$24,$08,$24,$04,$30  ;D595|----/----\----;        ;
                      db $D0,$08,$D0,$08,$D0,$08,$D0,$08  ;D59D|----/----\----;        ;
                      db $F8,$30,$F8,$30,$F8,$30,$F8,$30  ;D5A5|----/----\----;        ;
                      db $F8,$08,$F0,$10,$F4,$04,$E8,$08  ;D5AD|----/----\----;        ;
                      db $F0,$10,$E0,$20,$EC,$0C,$D8,$18  ;D5B5|----/----\----;        ;
                      db $D8,$28,$D4,$2C,$D0,$30,$D0,$D0  ;D5BD|----/----\----;        ;
                      db $30,$30,$E0,$20                  ;D5C5|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00D5C9:          db $00                              ;D5C9|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00D5CA:          db $00,$00,$00,$00,$00,$00,$00,$00  ;D5CA|----/----\----;        ;
                      db $00,$00,$F0,$00,$10,$00,$00,$00  ;D5D2|----/----\----;        ;
                      db $00,$00,$00,$00,$00,$00,$E0,$00  ;D5DA|----/----\----;        ;
                      db $20,$00,$00,$00,$00,$00,$F0,$00  ;D5E2|----/----\----;        ;
                      db $F8                              ;D5EA|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00D5EB:          db $FF,$FF,$02                      ;D5EB|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00D5EE:          db $68,$70                          ;D5EE|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00D5F0:          db $1C,$0C                          ;D5F0|----/----\----;        ;
                                                          ;                   ;        ;
CODE_00D5F2:          LDA.B !PlayerInAir                  ;D5F2|----/----\----;A572    ;
                      BEQ +                               ;D5F4|----/----\----;F003    ;
                      JMP CODE_00D682                     ;D5F6|----/----\----;4C82D6  ;
                                                          ;                   ;        ;
                    + STZ.B !PlayerIsDucking              ;D5F9|----/----\----;6473    ;
                      LDA.W !PlayerSlopePose              ;D5FB|----/----\----;ADED13  ;
                      BNE +                               ;D5FE|----/----\----;D00B    ;
                      LDA.B !byetudlrHold                 ;D600|----/----\----;A515    ;
                      AND.B #$04                          ;D602|----/----\----;2904    ;
                      BEQ +                               ;D604|----/----\----;F005    ;
                      STA.B !PlayerIsDucking              ;D606|----/----\----;8573    ;
                      STZ.W !CapeInteracts                ;D608|----/----\----;9CE813  ;
                    + LDA.W !StandOnSolidSprite           ;D60B|----/----\----;AD7114  ;
                      CMP.B #$02                          ;D60E|----/----\----;C902    ;
                      BEQ CODE_00D61E                     ;D610|----/----\----;F00C    ;
                      LDA.B !PlayerBlockedDir             ;D612|----/----\----;A577    ;
                      AND.B #$08                          ;D614|----/----\----;2908    ;
                      BNE CODE_00D61E                     ;D616|----/----\----;D006    ;
                      LDA.B !byetudlrFrame                ;D618|----/----\----;A516    ;
                      ORA.B !axlr0000Frame                ;D61A|----/----\----;0518    ;
                      BMI CODE_00D630                     ;D61C|----/----\----;3012    ;
CODE_00D61E:          LDA.B !PlayerIsDucking              ;D61E|----/----\----;A573    ;
                      BEQ CODE_00D682                     ;D620|----/----\----;F060    ;
                      LDA.B !PlayerXSpeed                 ;D622|----/----\----;A57B    ;
                      BEQ +                               ;D624|----/----\----;F007    ;
                      LDA.B !LevelIsSlippery              ;D626|----/----\----;A586    ;
                      BNE +                               ;D628|----/----\----;D003    ;
                      JSR CODE_00FE4A                     ;D62A|----/----\----;204AFE  ;
                    + JMP CODE_00D764                     ;D62D|----/----\----;4C64D7  ;
                                                          ;                   ;        ;
CODE_00D630:          LDA.B !PlayerXSpeed                 ;D630|----/----\----;A57B    ;
                      BPL +                               ;D632|----/----\----;1003    ;
                      EOR.B #$FF                          ;D634|----/----\----;49FF    ;
                      INC A                               ;D636|----/----\----;1A      ;
                    + LSR A                               ;D637|----/----\----;4A      ;
                      LSR A                               ;D638|----/----\----;4A      ;
                      AND.B #$FE                          ;D639|----/----\----;29FE    ;
                      TAX                                 ;D63B|----/----\----;AA      ;
                      LDA.B !axlr0000Frame                ;D63C|----/----\----;A518    ;
                      BPL CODE_00D65E                     ;D63E|----/----\----;101E    ;
                      LDA.W !IsCarryingItem               ;D640|----/----\----;AD8F14  ;
                      BNE CODE_00D65E                     ;D643|----/----\----;D019    ;
                      INC A                               ;D645|----/----\----;1A      ;
                      STA.W !SpinJumpFlag                 ;D646|----/----\----;8D0D14  ;
                      LDA.B #$04                          ;D649|----/----\----;A904    ; \ Play sound effect 
                      STA.W !SPCIO3                       ;D64B|----/----\----;8DFC1D  ; / 
                      LDY.B !PlayerDirection              ;D64E|----/----\----;A476    ;
                      LDA.W DATA_00D5F0,Y                 ;D650|----/----\----;B9F0D5  ;
                      STA.W !SpinjumpFireball             ;D653|----/----\----;8DE213  ;
                      LDA.W !PlayerRidingYoshi            ;D656|----/----\----;AD7A18  ;
                      BNE CODE_00D682                     ;D659|----/----\----;D027    ;
                      INX                                 ;D65B|----/----\----;E8      ;
                      BRA +                               ;D65C|----/----\----;8005    ;
                                                          ;                   ;        ;
CODE_00D65E:          LDA.B #$01                          ;D65E|----/----\----;A901    ; \ Play sound effect 
                      STA.W !SPCIO1                       ;D660|----/----\----;8DFA1D  ; / 
                    + LDA.W DATA_00D2BD,X                 ;D663|----/----\----;BDBDD2  ;
                      STA.B !PlayerYSpeed                 ;D666|----/----\----;857D    ;
                      LDA.B #$0B                          ;D668|----/----\----;A90B    ;
                      LDY.W !PlayerPMeter                 ;D66A|----/----\----;ACE413  ;
                      CPY.B #$70                          ;D66D|----/----\----;C070    ;
                      BCC CODE_00D67D                     ;D66F|----/----\----;900C    ;
                      LDA.W !TakeoffTimer                 ;D671|----/----\----;AD9F14  ;
                      BNE +                               ;D674|----/----\----;D005    ;
                      LDA.B #$50                          ;D676|----/----\----;A950    ;
                      STA.W !TakeoffTimer                 ;D678|----/----\----;8D9F14  ;
                    + LDA.B #$0C                          ;D67B|----/----\----;A90C    ;
CODE_00D67D:          STA.B !PlayerInAir                  ;D67D|----/----\----;8572    ;
                      STZ.W !PlayerSlopePose              ;D67F|----/----\----;9CED13  ;
CODE_00D682:          LDA.W !PlayerSlopePose              ;D682|----/----\----;ADED13  ;
                      BMI CODE_00D692                     ;D685|----/----\----;300B    ;
                      LDA.B !byetudlrHold                 ;D687|----/----\----;A515    ;
                      AND.B #$03                          ;D689|----/----\----;2903    ;
                      BNE CODE_00D6B1                     ;D68B|----/----\----;D024    ;
CODE_00D68D:          LDA.W !PlayerSlopePose              ;D68D|----/----\----;ADED13  ;
                      BEQ +                               ;D690|----/----\----;F01C    ;
CODE_00D692:          JSR CODE_00FE4A                     ;D692|----/----\----;204AFE  ;
                      LDA.W !CurrentSlope                 ;D695|----/----\----;ADEE13  ;
                      BEQ +                               ;D698|----/----\----;F014    ;
                      JSR CODE_00D968                     ;D69A|----/----\----;2068D9  ;
                      LDA.W !SlopeType                    ;D69D|----/----\----;ADE113  ;
                      LSR A                               ;D6A0|----/----\----;4A      ;
                      LSR A                               ;D6A1|----/----\----;4A      ;
                      TAY                                 ;D6A2|----/----\----;A8      ;
                      ADC.B #$76                          ;D6A3|----/----\----;6976    ;
                      TAX                                 ;D6A5|----/----\----;AA      ;
                      TYA                                 ;D6A6|----/----\----;98      ;
                      LSR A                               ;D6A7|----/----\----;4A      ;
                      ADC.B #$87                          ;D6A8|----/----\----;6987    ;
                      TAY                                 ;D6AA|----/----\----;A8      ;
                      JMP CODE_00D742                     ;D6AB|----/----\----;4C42D7  ;
                                                          ;                   ;        ;
                    + JMP CODE_00D764                     ;D6AE|----/----\----;4C64D7  ;
                                                          ;                   ;        ;
CODE_00D6B1:          STZ.W !PlayerSlopePose              ;D6B1|----/----\----;9CED13  ;
                      AND.B #$01                          ;D6B4|----/----\----;2901    ;
                      LDY.W !FlightPhase                  ;D6B6|----/----\----;AC0714  ;
                      BEQ CODE_00D6D5                     ;D6B9|----/----\----;F01A    ;
                      CMP.B !PlayerDirection              ;D6BB|----/----\----;C576    ;
                      BEQ CODE_00D6C3                     ;D6BD|----/----\----;F004    ;
                      LDY.B !byetudlrFrame                ;D6BF|----/----\----;A416    ;
                      BPL CODE_00D68D                     ;D6C1|----/----\----;10CA    ;
CODE_00D6C3:          LDX.B !PlayerDirection              ;D6C3|----/----\----;A676    ;
                      LDY.W DATA_00D5EE,X                 ;D6C5|----/----\----;BCEED5  ;
                      STY.W !SlopeType                    ;D6C8|----/----\----;8CE113  ;
                      STA.B !_1                           ;D6CB|----/----\----;8501    ;
                      ASL A                               ;D6CD|----/----\----;0A      ;
                      ASL A                               ;D6CE|----/----\----;0A      ;
                      ORA.W !SlopeType                    ;D6CF|----/----\----;0DE113  ;
                      TAX                                 ;D6D2|----/----\----;AA      ;
                      BRA CODE_00D713                     ;D6D3|----/----\----;803E    ;
                                                          ;                   ;        ;
CODE_00D6D5:          LDY.B !PlayerDirection              ;D6D5|----/----\----;A476    ;
                      CMP.B !PlayerDirection              ;D6D7|----/----\----;C576    ;
                      BEQ CODE_00D6EC                     ;D6D9|----/----\----;F011    ;
                      LDY.W !IsCarryingItem               ;D6DB|----/----\----;AC8F14  ;
                      BEQ CODE_00D6EA                     ;D6DE|----/----\----;F00A    ;
                      LDY.W !FaceScreenTimer              ;D6E0|----/----\----;AC9914  ;
                      BNE CODE_00D6EC                     ;D6E3|----/----\----;D007    ;
                      LDY.B #$08                          ;D6E5|----/----\----;A008    ;
                      STY.W !FaceScreenTimer              ;D6E7|----/----\----;8C9914  ;
CODE_00D6EA:          STA.B !PlayerDirection              ;D6EA|----/----\----;8576    ;
CODE_00D6EC:          STA.B !_1                           ;D6EC|----/----\----;8501    ;
                      ASL A                               ;D6EE|----/----\----;0A      ;
                      ASL A                               ;D6EF|----/----\----;0A      ;
                      ORA.W !SlopeType                    ;D6F0|----/----\----;0DE113  ;
                      TAX                                 ;D6F3|----/----\----;AA      ;
                      LDA.B !PlayerXSpeed                 ;D6F4|----/----\----;A57B    ;
                      BEQ CODE_00D713                     ;D6F6|----/----\----;F01B    ;
                      EOR.W MarioAccel2_,X                ;D6F8|----/----\----;5D46D3  ;
                      BPL CODE_00D713                     ;D6FB|----/----\----;1016    ;
                      LDA.W !SkidTurnTimer                ;D6FD|----/----\----;ADA114  ;
                      BNE CODE_00D713                     ;D700|----/----\----;D011    ;
                      LDA.B !LevelIsSlippery              ;D702|----/----\----;A586    ;
                      BNE +                               ;D704|----/----\----;D008    ;
                      LDA.B #$0D                          ;D706|----/----\----;A90D    ;
                      STA.W !PlayerTurningPose            ;D708|----/----\----;8DDD13  ;
                      JSR CODE_00FE4A                     ;D70B|----/----\----;204AFE  ;
                    + TXA                                 ;D70E|----/----\----;8A      ;
                      CLC                                 ;D70F|----/----\----;18      ;
                      ADC.B #$90                          ;D710|----/----\----;6990    ;
                      TAX                                 ;D712|----/----\----;AA      ;
CODE_00D713:          LDY.B #$00                          ;D713|----/----\----;A000    ;
                      BIT.B !byetudlrHold                 ;D715|----/----\----;2415    ;
                      BVC CODE_00D737                     ;D717|----/----\----;501E    ;
                      INX                                 ;D719|----/----\----;E8      ;
                      INX                                 ;D71A|----/----\----;E8      ;
                      INY                                 ;D71B|----/----\----;C8      ;
                      LDA.B !PlayerXSpeed                 ;D71C|----/----\----;A57B    ;
                      BPL +                               ;D71E|----/----\----;1003    ;
                      EOR.B #$FF                          ;D720|----/----\----;49FF    ;
                      INC A                               ;D722|----/----\----;1A      ;
                    + CMP.B #$23                          ;D723|----/----\----;C923    ;
                      BMI CODE_00D737                     ;D725|----/----\----;3010    ;
                      LDA.B !PlayerInAir                  ;D727|----/----\----;A572    ;
                      BNE CODE_00D732                     ;D729|----/----\----;D007    ;
                      LDA.B #$10                          ;D72B|----/----\----;A910    ;
                      STA.W !RunTakeoffTimer              ;D72D|----/----\----;8DA014  ;
                      BRA CODE_00D736                     ;D730|----/----\----;8004    ;
                                                          ;                   ;        ;
CODE_00D732:          CMP.B #$0C                          ;D732|----/----\----;C90C    ;
                      BNE CODE_00D737                     ;D734|----/----\----;D001    ;
CODE_00D736:          INY                                 ;D736|----/----\----;C8      ;
CODE_00D737:          JSR CODE_00D96A                     ;D737|----/----\----;206AD9  ;
                      TYA                                 ;D73A|----/----\----;98      ;
                      ASL A                               ;D73B|----/----\----;0A      ;
                      ORA.W !SlopeType                    ;D73C|----/----\----;0DE113  ;
                      ORA.B !_1                           ;D73F|----/----\----;0501    ;
                      TAY                                 ;D741|----/----\----;A8      ;
CODE_00D742:          LDA.B !PlayerXSpeed                 ;D742|----/----\----;A57B    ;
                      SEC                                 ;D744|----/----\----;38      ;
                      SBC.W DATA_00D535,Y                 ;D745|----/----\----;F935D5  ;
                      BEQ CODE_00D76B                     ;D748|----/----\----;F021    ;
                      EOR.W DATA_00D535,Y                 ;D74A|----/----\----;5935D5  ;
                      BPL CODE_00D76B                     ;D74D|----/----\----;101C    ;
                      REP #$20                            ;D74F|----/----\----;C220    ; Accum (16 bit) 
                      LDA.W MarioAccel_,X                 ;D751|----/----\----;BD45D3  ;
                      LDY.B !LevelIsSlippery              ;D754|----/----\----;A486    ;
                      BEQ +                               ;D756|----/----\----;F007    ;
                      LDY.B !PlayerInAir                  ;D758|----/----\----;A472    ;
                      BNE +                               ;D75A|----/----\----;D003    ;
                      LDA.W DATA_00D43D,X                 ;D75C|----/----\----;BD3DD4  ;
                    + CLC                                 ;D75F|----/----\----;18      ;
                      ADC.B !PlayerXPosSpx                ;D760|----/----\----;657A    ;
                      BRA CODE_00D7A0                     ;D762|----/----\----;803C    ;
                                                          ;                   ;        ;
CODE_00D764:          JSR CODE_00D968                     ;D764|----/----\----;2068D9  ;
                      LDA.B !PlayerInAir                  ;D767|----/----\----;A572    ;
                      BNE Return00D7A4                    ;D769|----/----\----;D039    ;
CODE_00D76B:          LDA.W !SlopeType                    ;D76B|----/----\----;ADE113  ;
                      LSR A                               ;D76E|----/----\----;4A      ;
                      TAY                                 ;D76F|----/----\----;A8      ;
                      LSR A                               ;D770|----/----\----;4A      ;
                      TAX                                 ;D771|----/----\----;AA      ;
CODE_00D772:          LDA.B !PlayerXSpeed                 ;D772|----/----\----;A57B    ;
                      SEC                                 ;D774|----/----\----;38      ;
                      SBC.W DATA_00D5CA,X                 ;D775|----/----\----;FDCAD5  ;
                      BPL +                               ;D778|----/----\----;1002    ;
                      INY                                 ;D77A|----/----\----;C8      ;
                      INY                                 ;D77B|----/----\----;C8      ;
                    + LDA.W !EndLevelTimer                ;D77C|----/----\----;AD9314  ;
                      ORA.B !PlayerInAir                  ;D77F|----/----\----;0572    ;
                      REP #$20                            ;D781|----/----\----;C220    ; Accum (16 bit) 
                      BNE CODE_00D78C                     ;D783|----/----\----;D007    ;
                      LDA.W DATA_00D309,Y                 ;D785|----/----\----;B909D3  ;
                      BIT.B !LevelIsWater                 ;D788|----/----\----;2485    ;
                      BMI +                               ;D78A|----/----\----;3003    ;
CODE_00D78C:          LDA.W DATA_00D2CD,Y                 ;D78C|----/----\----;B9CDD2  ;
                    + CLC                                 ;D78F|----/----\----;18      ;
                      ADC.B !PlayerXPosSpx                ;D790|----/----\----;657A    ;
                      STA.B !PlayerXPosSpx                ;D792|----/----\----;857A    ;
                      SEC                                 ;D794|----/----\----;38      ;
                      SBC.W DATA_00D5C9,X                 ;D795|----/----\----;FDC9D5  ;
                      EOR.W DATA_00D2CD,Y                 ;D798|----/----\----;59CDD2  ;
                      BMI +                               ;D79B|----/----\----;3005    ;
                      LDA.W DATA_00D5C9,X                 ;D79D|----/----\----;BDC9D5  ;
CODE_00D7A0:          STA.B !PlayerXPosSpx                ;D7A0|----/----\----;857A    ;
                    + SEP #$20                            ;D7A2|----/----\----;E220    ; Accum (8 bit) 
Return00D7A4:         RTS                                 ;D7A4|----/----\----;60      ; Return 
                                                          ;                   ;        ;
                                                          ;                   ;        ;
DATA_00D7A5:          db $06,$03,$04,$10,$F4,$01,$03,$04  ;D7A5|----/----\----;        ;
                      db $05,$06                          ;D7AD|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00D7AF:          db $40,$40,$20,$40,$40,$40,$40,$40  ;D7AF|----/----\----;        ;
                      db $40,$40                          ;D7B7|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00D7B9:          db $10,$C8,$E0,$02,$03,$03,$04,$03  ;D7B9|----/----\----;        ;
                      db $02,$00,$01,$00,$00,$00,$00      ;D7C1|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00D7C8:          db $01,$10,$30,$30,$38,$38,$40      ;D7C8|----/----\----;        ;
                                                          ;                   ;        ;
CapeSpeed:            db $FF,$01,$01,$FF,$FF              ;D7CF|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00D7D4:          db $01,$06,$03,$01,$00              ;D7D4|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00D7D9:          db $00,$00,$00,$F8,$F8,$F8,$F4,$F0  ;D7D9|----/----\----;        ;
                      db $C8,$02,$01                      ;D7E1|----/----\----;        ;
                                                          ;                   ;        ;
CODE_00D7E4:          LDY.W !FlightPhase                  ;D7E4|----/----\----;AC0714  ;
                      BNE CODE_00D824                     ;D7E7|----/----\----;D03B    ;
                      LDA.B !PlayerInAir                  ;D7E9|----/----\----;A572    ;
                      BEQ CODE_00D811                     ;D7EB|----/----\----;F024    ;
                      LDA.W !IsCarryingItem               ;D7ED|----/----\----;AD8F14  ;
                      ORA.W !PlayerRidingYoshi            ;D7F0|----/----\----;0D7A18  ;
                      ORA.W !SpinJumpFlag                 ;D7F3|----/----\----;0D0D14  ;
                      BNE CODE_00D811                     ;D7F6|----/----\----;D019    ;
                      LDA.W !PlayerSlopePose              ;D7F8|----/----\----;ADED13  ;
                      BMI CODE_00D7FF                     ;D7FB|----/----\----;3002    ;
                      BNE CODE_00D811                     ;D7FD|----/----\----;D012    ;
CODE_00D7FF:          STZ.W !PlayerSlopePose              ;D7FF|----/----\----;9CED13  ;
                      LDX.B !Powerup                      ;D802|----/----\----;A619    ;
                      CPX.B #$02                          ;D804|----/----\----;E002    ;
                      BNE CODE_00D811                     ;D806|----/----\----;D009    ;
                      LDA.B !PlayerYSpeed                 ;D808|----/----\----;A57D    ;
                      BMI CODE_00D811                     ;D80A|----/----\----;3005    ;
                      LDA.W !TakeoffTimer                 ;D80C|----/----\----;AD9F14  ;
                      BNE +                               ;D80F|----/----\----;D003    ;
CODE_00D811:          JMP CODE_00D8CD                     ;D811|----/----\----;4CCDD8  ;
                                                          ;                   ;        ;
                    + STZ.B !PlayerIsDucking              ;D814|----/----\----;6473    ;
                      LDA.B #$0B                          ;D816|----/----\----;A90B    ;
                      STA.B !PlayerInAir                  ;D818|----/----\----;8572    ;
                      STZ.W !MaxStageOfFlight             ;D81A|----/----\----;9C0914  ;
                      JSR CODE_00D94F                     ;D81D|----/----\----;204FD9  ;
                      LDX.B #$02                          ;D820|----/----\----;A202    ;
                      BRA CODE_00D85B                     ;D822|----/----\----;8037    ;
                                                          ;                   ;        ;
CODE_00D824:          CPY.B #$02                          ;D824|----/----\----;C002    ;
                      BCC +                               ;D826|----/----\----;9003    ;
                      JSR CODE_00D94F                     ;D828|----/----\----;204FD9  ;
                    + LDX.W !NextFlightPhase              ;D82B|----/----\----;AE0814  ;
                      CPX.B #$04                          ;D82E|----/----\----;E004    ;
                      BEQ CODE_00D856                     ;D830|----/----\----;F024    ;
                      LDX.B #$03                          ;D832|----/----\----;A203    ;
                      LDY.B !PlayerYSpeed                 ;D834|----/----\----;A47D    ;
                      BMI CODE_00D856                     ;D836|----/----\----;301E    ;
                      LDA.B !byetudlrHold                 ;D838|----/----\----;A515    ;
                      AND.B #$03                          ;D83A|----/----\----;2903    ;
                      TAY                                 ;D83C|----/----\----;A8      ;
                      BNE CODE_00D849                     ;D83D|----/----\----;D00A    ;
                      LDA.W !FlightPhase                  ;D83F|----/----\----;AD0714  ;
                      CMP.B #$04                          ;D842|----/----\----;C904    ;
                      BCS CODE_00D856                     ;D844|----/----\----;B010    ;
                      DEX                                 ;D846|----/----\----;CA      ;
                      BRA CODE_00D856                     ;D847|----/----\----;800D    ;
                                                          ;                   ;        ;
CODE_00D849:          LSR A                               ;D849|----/----\----;4A      ;
                      LDY.B !PlayerDirection              ;D84A|----/----\----;A476    ;
                      BEQ +                               ;D84C|----/----\----;F002    ;
                      EOR.B #$01                          ;D84E|----/----\----;4901    ;
                    + TAX                                 ;D850|----/----\----;AA      ;
                      CPX.W !NextFlightPhase              ;D851|----/----\----;EC0814  ;
                      BNE CODE_00D85B                     ;D854|----/----\----;D005    ;
CODE_00D856:          LDA.W !CapePumpTimer                ;D856|----/----\----;ADA414  ;
                      BNE CODE_00D87E                     ;D859|----/----\----;D023    ;
CODE_00D85B:          BIT.B !byetudlrHold                 ;D85B|----/----\----;2415    ;
                      BVS +                               ;D85D|----/----\----;7002    ;
                      LDX.B #$04                          ;D85F|----/----\----;A204    ;
                    + LDA.W !FlightPhase                  ;D861|----/----\----;AD0714  ;
                      CMP.W DATA_00D7D4,X                 ;D864|----/----\----;DDD4D7  ;
                      BEQ CODE_00D87E                     ;D867|----/----\----;F015    ;
                      CLC                                 ;D869|----/----\----;18      ;
                      ADC.W CapeSpeed,X                   ;D86A|----/----\----;7DCFD7  ;
                      STA.W !FlightPhase                  ;D86D|----/----\----;8D0714  ;
                      LDA.B #$08                          ;D870|----/----\----;A908    ;
                      LDY.W !MaxStageOfFlight             ;D872|----/----\----;AC0914  ;
                      CPY.B #$C8                          ;D875|----/----\----;C0C8    ;
                      BNE +                               ;D877|----/----\----;D002    ;
                      LDA.B #$02                          ;D879|----/----\----;A902    ;
                    + STA.W !CapePumpTimer                ;D87B|----/----\----;8DA414  ;
CODE_00D87E:          STX.W !NextFlightPhase              ;D87E|----/----\----;8E0814  ;
                      LDY.W !FlightPhase                  ;D881|----/----\----;AC0714  ;
                      BEQ CODE_00D8CD                     ;D884|----/----\----;F047    ;
                      LDA.B !PlayerYSpeed                 ;D886|----/----\----;A57D    ;
                      BPL CODE_00D892                     ;D888|----/----\----;1008    ;
                      CMP.B #$C8                          ;D88A|----/----\----;C9C8    ;
                      BCS +                               ;D88C|----/----\----;B00C    ;
                      LDA.B #$C8                          ;D88E|----/----\----;A9C8    ;
                      BRA +                               ;D890|----/----\----;8008    ;
                                                          ;                   ;        ;
CODE_00D892:          CMP.W DATA_00D7C8,Y                 ;D892|----/----\----;D9C8D7  ;
                      BCC +                               ;D895|----/----\----;9003    ;
                      LDA.W DATA_00D7C8,Y                 ;D897|----/----\----;B9C8D7  ;
                    + PHA                                 ;D89A|----/----\----;48      ;
                      CPY.B #$01                          ;D89B|----/----\----;C001    ;
                      BNE CODE_00D8C6                     ;D89D|----/----\----;D027    ;
                      LDX.W !MaxStageOfFlight             ;D89F|----/----\----;AE0914  ;
                      BEQ CODE_00D8C4                     ;D8A2|----/----\----;F020    ;
                      LDA.B !PlayerYSpeed                 ;D8A4|----/----\----;A57D    ;
                      BMI CODE_00D8AF                     ;D8A6|----/----\----;3007    ;
                      LDA.B #$09                          ;D8A8|----/----\----;A909    ; \ Play sound effect 
                      STA.W !SPCIO0                       ;D8AA|----/----\----;8DF91D  ; / 
                      BRA +                               ;D8AD|----/----\----;800A    ;
                                                          ;                   ;        ;
CODE_00D8AF:          CMP.W !MaxStageOfFlight             ;D8AF|----/----\----;CD0914  ;
                      BCS +                               ;D8B2|----/----\----;B005    ;
                      STX.B !PlayerYSpeed                 ;D8B4|----/----\----;867D    ;
                      STZ.W !MaxStageOfFlight             ;D8B6|----/----\----;9C0914  ;
                    + LDX.B !PlayerDirection              ;D8B9|----/----\----;A676    ;
                      LDA.B !PlayerXSpeed                 ;D8BB|----/----\----;A57B    ;
                      BEQ CODE_00D8C4                     ;D8BD|----/----\----;F005    ;
                      EOR.W DATA_00D535,X                 ;D8BF|----/----\----;5D35D5  ;
                      BPL CODE_00D8C6                     ;D8C2|----/----\----;1002    ;
CODE_00D8C4:          LDY.B #$02                          ;D8C4|----/----\----;A002    ;
CODE_00D8C6:          PLA                                 ;D8C6|----/----\----;68      ;
                      INY                                 ;D8C7|----/----\----;C8      ;
                      INY                                 ;D8C8|----/----\----;C8      ;
                      INY                                 ;D8C9|----/----\----;C8      ;
                      JMP CODE_00D948                     ;D8CA|----/----\----;4C48D9  ;
                                                          ;                   ;        ;
CODE_00D8CD:          LDA.B !PlayerInAir                  ;D8CD|----/----\----;A572    ; \ Branch if not flying 
                      BEQ CODE_00D928                     ;D8CF|----/----\----;F057    ; / 
                      LDX.B #$00                          ;D8D1|----/----\----;A200    ; X = #$00 
                      LDA.W !PlayerRidingYoshi            ;D8D3|----/----\----;AD7A18  ; \ Branch if not on Yoshi 
                      BEQ CODE_00D8E7                     ;D8D6|----/----\----;F00F    ; / 
                      LDA.W !YoshiHasWingsEvt             ;D8D8|----/----\----;AD1E14  ; \ Branch if not winged Yoshi 
                      LSR A                               ;D8DB|----/----\----;4A      ;  | 
                      BEQ CODE_00D8E7                     ;D8DC|----/----\----;F009    ; / 
                      LDY.B #$02                          ;D8DE|----/----\----;A002    ; \ Branch if not Caped Mario 
                      CPY.B !Powerup                      ;D8E0|----/----\----;C419    ;  | 
                      BEQ +                               ;D8E2|----/----\----;F001    ; / 
                      INX                                 ;D8E4|----/----\----;E8      ; X= #$01 
                    + BRA CODE_00D8FF                     ;D8E5|----/----\----;8018    ;
                                                          ;                   ;        ;
CODE_00D8E7:          LDA.B !Powerup                      ;D8E7|----/----\----;A519    ; \ Branch if not Caped Mario 
                      CMP.B #$02                          ;D8E9|----/----\----;C902    ;  | 
                      BNE CODE_00D928                     ;D8EB|----/----\----;D03B    ; / 
                      LDA.B !PlayerInAir                  ;D8ED|----/----\----;A572    ; \ Branch if $72 != 0C 
                      CMP.B #$0C                          ;D8EF|----/----\----;C90C    ;  | 
                      BNE CODE_00D8FD                     ;D8F1|----/----\----;D00A    ; / 
                      LDY.B #$01                          ;D8F3|----/----\----;A001    ;
                      CPY.W !TakeoffTimer                 ;D8F5|----/----\----;CC9F14  ;
                      BCC CODE_00D8FF                     ;D8F8|----/----\----;9005    ;
                      INC.W !TakeoffTimer                 ;D8FA|----/----\----;EE9F14  ;
CODE_00D8FD:          LDY.B #$00                          ;D8FD|----/----\----;A000    ;
CODE_00D8FF:          LDA.W !CapeFloatTimer               ;D8FF|----/----\----;ADA514  ;
                      BNE CODE_00D90D                     ;D902|----/----\----;D009    ;
                      LDA.B !byetudlrHold,X               ;D904|----/----\----;B515    ;
                      BPL CODE_00D924                     ;D906|----/----\----;101C    ;
                      LDA.B #$10                          ;D908|----/----\----;A910    ;
                      STA.W !CapeFloatTimer               ;D90A|----/----\----;8DA514  ;
CODE_00D90D:          LDA.B !PlayerYSpeed                 ;D90D|----/----\----;A57D    ;
                      BPL CODE_00D91B                     ;D90F|----/----\----;100A    ;
                      LDX.W DATA_00D7B9,Y                 ;D911|----/----\----;BEB9D7  ;
                      BPL CODE_00D924                     ;D914|----/----\----;100E    ;
                      CMP.W DATA_00D7B9,Y                 ;D916|----/----\----;D9B9D7  ;
                      BCC CODE_00D924                     ;D919|----/----\----;9009    ;
CODE_00D91B:          LDA.W DATA_00D7B9,Y                 ;D91B|----/----\----;B9B9D7  ;
                      CMP.B !PlayerYSpeed                 ;D91E|----/----\----;C57D    ;
                      BEQ CODE_00D94C                     ;D920|----/----\----;F02A    ;
                      BMI CODE_00D94C                     ;D922|----/----\----;3028    ;
CODE_00D924:          CPY.B #$02                          ;D924|----/----\----;C002    ;
                      BEQ +                               ;D926|----/----\----;F008    ;
CODE_00D928:          LDY.B #$01                          ;D928|----/----\----;A001    ;
                      LDA.B !byetudlrHold                 ;D92A|----/----\----;A515    ;
                      BMI +                               ;D92C|----/----\----;3002    ;
CODE_00D92E:          LDY.B #$00                          ;D92E|----/----\----;A000    ;
                    + LDA.B !PlayerYSpeed                 ;D930|----/----\----;A57D    ; \ If Mario's Y speed is negative (up), 
                      BMI CODE_00D948                     ;D932|----/----\----;3014    ; / branch to $D948 
                      CMP.W DATA_00D7AF,Y                 ;D934|----/----\----;D9AFD7  ;
                      BCC +                               ;D937|----/----\----;9003    ;
                      LDA.W DATA_00D7AF,Y                 ;D939|----/----\----;B9AFD7  ;
                    + LDX.B !PlayerInAir                  ;D93C|----/----\----;A672    ;
                      BEQ CODE_00D948                     ;D93E|----/----\----;F008    ;
                      CPX.B #$0B                          ;D940|----/----\----;E00B    ;
                      BNE CODE_00D948                     ;D942|----/----\----;D004    ;
                      LDX.B #$24                          ;D944|----/----\----;A224    ;
                      STX.B !PlayerInAir                  ;D946|----/----\----;8672    ;
CODE_00D948:          CLC                                 ;D948|----/----\----;18      ;
                      ADC.W DATA_00D7A5,Y                 ;D949|----/----\----;79A5D7  ;
CODE_00D94C:          STA.B !PlayerYSpeed                 ;D94C|----/----\----;857D    ;
                      RTS                                 ;D94E|----/----\----;60      ; Return 
                                                          ;                   ;        ;
CODE_00D94F:          STZ.W !Empty_140A                   ;D94F|----/----\----;9C0A14  ;
                      LDA.B !PlayerYSpeed                 ;D952|----/----\----;A57D    ;
                      BPL +                               ;D954|----/----\----;1002    ;
                      LDA.B #$00                          ;D956|----/----\----;A900    ;
                    + LSR A                               ;D958|----/----\----;4A      ;
                      LSR A                               ;D959|----/----\----;4A      ;
                      LSR A                               ;D95A|----/----\----;4A      ;
                      TAY                                 ;D95B|----/----\----;A8      ;
                      LDA.W DATA_00D7D9,Y                 ;D95C|----/----\----;B9D9D7  ;
                      CMP.W !MaxStageOfFlight             ;D95F|----/----\----;CD0914  ;
                      BPL +                               ;D962|----/----\----;1003    ;
                      STA.W !MaxStageOfFlight             ;D964|----/----\----;8D0914  ;
                    + RTS                                 ;D967|----/----\----;60      ; Return 
                                                          ;                   ;        ;
CODE_00D968:          LDY.B #$00                          ;D968|----/----\----;A000    ;
CODE_00D96A:          LDA.W !PlayerPMeter                 ;D96A|----/----\----;ADE413  ;
                      CLC                                 ;D96D|----/----\----;18      ;
                      ADC.W DATA_00D5EB,Y                 ;D96E|----/----\----;79EBD5  ;
                      BPL +                               ;D971|----/----\----;1002    ;
                      LDA.B #$00                          ;D973|----/----\----;A900    ;
                    + CMP.B #$70                          ;D975|----/----\----;C970    ;
                      BCC +                               ;D977|----/----\----;9003    ;
                      INY                                 ;D979|----/----\----;C8      ;
                      LDA.B #$70                          ;D97A|----/----\----;A970    ;
                    + STA.W !PlayerPMeter                 ;D97C|----/----\----;8DE413  ;
                      RTS                                 ;D97F|----/----\----;60      ; Return 
                                                          ;                   ;        ;
                                                          ;                   ;        ;
DATA_00D980:          db $16,$1A,$1A,$18                  ;D980|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00D984:          db $E8,$F8,$D0,$D0                  ;D984|----/----\----;        ;
                                                          ;                   ;        ;
CODE_00D988:          STZ.W !PlayerSlopePose              ;D988|----/----\----;9CED13  ;
                      STZ.B !PlayerIsDucking              ;D98B|----/----\----;6473    ;
                      STZ.W !FlightPhase                  ;D98D|----/----\----;9C0714  ;
                      STZ.W !SpinJumpFlag                 ;D990|----/----\----;9C0D14  ;
                      LDY.B !PlayerYSpeed                 ;D993|----/----\----;A47D    ;
                      LDA.W !IsCarryingItem               ;D995|----/----\----;AD8F14  ;
                      BEQ CODE_00D9EB                     ;D998|----/----\----;F051    ;
                      LDA.B !PlayerInAir                  ;D99A|----/----\----;A572    ;
                      BNE CODE_00D9AF                     ;D99C|----/----\----;D011    ;
                      LDA.B !byetudlrFrame                ;D99E|----/----\----;A516    ;
                      ORA.B !axlr0000Frame                ;D9A0|----/----\----;0518    ;
                      BPL CODE_00D9AF                     ;D9A2|----/----\----;100B    ;
                      LDA.B #$0B                          ;D9A4|----/----\----;A90B    ;
                      STA.B !PlayerInAir                  ;D9A6|----/----\----;8572    ;
                      STZ.W !PlayerSlopePose              ;D9A8|----/----\----;9CED13  ;
                      LDY.B #$F0                          ;D9AB|----/----\----;A0F0    ;
                      BRA CODE_00D9B5                     ;D9AD|----/----\----;8006    ;
                                                          ;                   ;        ;
CODE_00D9AF:          LDA.B !byetudlrHold                 ;D9AF|----/----\----;A515    ;
                      AND.B #$04                          ;D9B1|----/----\----;2904    ;
                      BEQ +                               ;D9B3|----/----\----;F008    ;
CODE_00D9B5:          JSR CODE_00DAA9                     ;D9B5|----/----\----;20A9DA  ;
                      TYA                                 ;D9B8|----/----\----;98      ;
                      CLC                                 ;D9B9|----/----\----;18      ;
                      ADC.B #$08                          ;D9BA|----/----\----;6908    ;
                      TAY                                 ;D9BC|----/----\----;A8      ;
                    + INY                                 ;D9BD|----/----\----;C8      ;
                      LDA.W !PlayerCanJumpWater           ;D9BE|----/----\----;ADFA13  ;
                      BNE +                               ;D9C1|----/----\----;D009    ;
                      DEY                                 ;D9C3|----/----\----;88      ;
                      LDA.B !EffFrame                     ;D9C4|----/----\----;A514    ;
                      AND.B #$03                          ;D9C6|----/----\----;2903    ;
                      BNE +                               ;D9C8|----/----\----;D002    ;
                      DEY                                 ;D9CA|----/----\----;88      ;
                      DEY                                 ;D9CB|----/----\----;88      ;
                    + TYA                                 ;D9CC|----/----\----;98      ;
                      BMI CODE_00D9D7                     ;D9CD|----/----\----;3008    ;
                      CMP.B #$10                          ;D9CF|----/----\----;C910    ;
                      BCC +                               ;D9D1|----/----\----;900A    ;
                      LDA.B #$10                          ;D9D3|----/----\----;A910    ;
                      BRA +                               ;D9D5|----/----\----;8006    ;
                                                          ;                   ;        ;
CODE_00D9D7:          CMP.B #$F0                          ;D9D7|----/----\----;C9F0    ;
                      BCS +                               ;D9D9|----/----\----;B002    ;
                      LDA.B #$F0                          ;D9DB|----/----\----;A9F0    ;
                    + STA.B !PlayerYSpeed                 ;D9DD|----/----\----;857D    ;
                      LDY.B #$80                          ;D9DF|----/----\----;A080    ;
                      LDA.B !byetudlrHold                 ;D9E1|----/----\----;A515    ;
                      AND.B #$03                          ;D9E3|----/----\----;2903    ;
                      BNE CODE_00DA48                     ;D9E5|----/----\----;D061    ;
                      LDA.B !PlayerDirection              ;D9E7|----/----\----;A576    ;
                      BRA CODE_00DA46                     ;D9E9|----/----\----;805B    ;
                                                          ;                   ;        ;
CODE_00D9EB:          LDA.B !byetudlrFrame                ;D9EB|----/----\----;A516    ;
                      ORA.B !axlr0000Frame                ;D9ED|----/----\----;0518    ;
                      BPL CODE_00DA0B                     ;D9EF|----/----\----;101A    ;
                      LDA.W !PlayerCanJumpWater           ;D9F1|----/----\----;ADFA13  ;
                      BNE CODE_00DA0B                     ;D9F4|----/----\----;D015    ;
                      JSR CODE_00DAA9                     ;D9F6|----/----\----;20A9DA  ;
                      LDA.B !PlayerInAir                  ;D9F9|----/----\----;A572    ;
                      BNE +                               ;D9FB|----/----\----;D009    ;
                      LDA.B #$0B                          ;D9FD|----/----\----;A90B    ;
                      STA.B !PlayerInAir                  ;D9FF|----/----\----;8572    ;
                      STZ.W !PlayerSlopePose              ;DA01|----/----\----;9CED13  ;
                      LDY.B #$F0                          ;DA04|----/----\----;A0F0    ;
                    + TYA                                 ;DA06|----/----\----;98      ;
                      SEC                                 ;DA07|----/----\----;38      ;
                      SBC.B #$20                          ;DA08|----/----\----;E920    ;
                      TAY                                 ;DA0A|----/----\----;A8      ;
CODE_00DA0B:          LDA.B !EffFrame                     ;DA0B|----/----\----;A514    ;
                      AND.B #$03                          ;DA0D|----/----\----;2903    ;
                      BNE +                               ;DA0F|----/----\----;D002    ;
                      INY                                 ;DA11|----/----\----;C8      ;
                      INY                                 ;DA12|----/----\----;C8      ;
                    + LDA.B !byetudlrHold                 ;DA13|----/----\----;A515    ;
                      AND.B #$0C                          ;DA15|----/----\----;290C    ;
                      LSR A                               ;DA17|----/----\----;4A      ;
                      LSR A                               ;DA18|----/----\----;4A      ;
                      TAX                                 ;DA19|----/----\----;AA      ;
                      TYA                                 ;DA1A|----/----\----;98      ;
                      BMI CODE_00DA25                     ;DA1B|----/----\----;3008    ;
                      CMP.B #$40                          ;DA1D|----/----\----;C940    ;
                      BCC +                               ;DA1F|----/----\----;900C    ;
                      LDA.B #$40                          ;DA21|----/----\----;A940    ;
                      BRA +                               ;DA23|----/----\----;8008    ;
                                                          ;                   ;        ;
CODE_00DA25:          CMP.W DATA_00D984,X                 ;DA25|----/----\----;DD84D9  ;
                      BCS +                               ;DA28|----/----\----;B003    ;
                      LDA.W DATA_00D984,X                 ;DA2A|----/----\----;BD84D9  ;
                    + STA.B !PlayerYSpeed                 ;DA2D|----/----\----;857D    ;
                      LDA.B !PlayerInAir                  ;DA2F|----/----\----;A572    ;
                      BNE CODE_00DA40                     ;DA31|----/----\----;D00D    ;
                      LDA.B !byetudlrHold                 ;DA33|----/----\----;A515    ;
                      AND.B #$04                          ;DA35|----/----\----;2904    ;
                      BEQ CODE_00DA40                     ;DA37|----/----\----;F007    ;
                      STZ.W !CapeInteracts                ;DA39|----/----\----;9CE813  ;
                      INC.B !PlayerIsDucking              ;DA3C|----/----\----;E673    ;
                      BRA CODE_00DA69                     ;DA3E|----/----\----;8029    ;
                                                          ;                   ;        ;
CODE_00DA40:          LDA.B !byetudlrHold                 ;DA40|----/----\----;A515    ;
                      AND.B #$03                          ;DA42|----/----\----;2903    ;
                      BEQ CODE_00DA69                     ;DA44|----/----\----;F023    ;
CODE_00DA46:          LDY.B #$78                          ;DA46|----/----\----;A078    ;
CODE_00DA48:          STY.B !_0                           ;DA48|----/----\----;8400    ;
                      AND.B #$01                          ;DA4A|----/----\----;2901    ;
                      STA.B !PlayerDirection              ;DA4C|----/----\----;8576    ;
                      PHA                                 ;DA4E|----/----\----;48      ;
                      ASL A                               ;DA4F|----/----\----;0A      ;
                      ASL A                               ;DA50|----/----\----;0A      ;
                      TAX                                 ;DA51|----/----\----;AA      ;
                      PLA                                 ;DA52|----/----\----;68      ;
                      ORA.B !_0                           ;DA53|----/----\----;0500    ;
                      LDY.W !Layer3TideSetting            ;DA55|----/----\----;AC0314  ;
                      BEQ +                               ;DA58|----/----\----;F003    ;
                      CLC                                 ;DA5A|----/----\----;18      ;
                      ADC.B #$04                          ;DA5B|----/----\----;6904    ;
                    + TAY                                 ;DA5D|----/----\----;A8      ;
                      LDA.B !PlayerInAir                  ;DA5E|----/----\----;A572    ;
                      BEQ +                               ;DA60|----/----\----;F002    ;
                      INY                                 ;DA62|----/----\----;C8      ;
                      INY                                 ;DA63|----/----\----;C8      ;
                    + JSR CODE_00D742                     ;DA64|----/----\----;2042D7  ;
                      BRA CODE_00DA7C                     ;DA67|----/----\----;8013    ;
                                                          ;                   ;        ;
CODE_00DA69:          LDY.B #$00                          ;DA69|----/----\----;A000    ;
                      TYX                                 ;DA6B|----/----\----;BB      ;
                      LDA.W !Layer3TideSetting            ;DA6C|----/----\----;AD0314  ;
                      BEQ +                               ;DA6F|----/----\----;F008    ;
                      LDX.B #$1E                          ;DA71|----/----\----;A21E    ;
                      LDA.B !PlayerInAir                  ;DA73|----/----\----;A572    ;
                      BNE +                               ;DA75|----/----\----;D002    ;
                      INX                                 ;DA77|----/----\----;E8      ;
                      INX                                 ;DA78|----/----\----;E8      ;
                    + JSR CODE_00D772                     ;DA79|----/----\----;2072D7  ;
CODE_00DA7C:          JSR CODE_00D062                     ;DA7C|----/----\----;2062D0  ;
                      JSL CODE_00CEB1                     ;DA7F|----/----\----;22B1CE00;
                      LDA.W !CapeSpinTimer                ;DA83|----/----\----;ADA614  ;
                      BNE Return00DA8C                    ;DA86|----/----\----;D004    ;
                      LDA.B !PlayerInAir                  ;DA88|----/----\----;A572    ;
                      BNE +                               ;DA8A|----/----\----;D001    ;
Return00DA8C:         RTS                                 ;DA8C|----/----\----;60      ; Return 
                                                          ;                   ;        ;
                    + LDA.B #$18                          ;DA8D|----/----\----;A918    ;
                      LDY.W !ShootFireTimer               ;DA8F|----/----\----;AC9C14  ;
                      BNE +                               ;DA92|----/----\----;D00B    ;
                      LDA.W !PlayerAniTimer               ;DA94|----/----\----;AD9614  ;
                      LSR A                               ;DA97|----/----\----;4A      ;
                      LSR A                               ;DA98|----/----\----;4A      ;
                      AND.B #$03                          ;DA99|----/----\----;2903    ;
                      TAY                                 ;DA9B|----/----\----;A8      ;
                      LDA.W DATA_00D980,Y                 ;DA9C|----/----\----;B980D9  ;
                    + LDY.W !IsCarryingItem               ;DA9F|----/----\----;AC8F14  ;
                      BEQ +                               ;DAA2|----/----\----;F001    ;
                      INC A                               ;DAA4|----/----\----;1A      ;
                    + STA.W !PlayerPose                   ;DAA5|----/----\----;8DE013  ;
                      RTS                                 ;DAA8|----/----\----;60      ; Return 
                                                          ;                   ;        ;
CODE_00DAA9:          LDA.B #$0E                          ;DAA9|----/----\----;A90E    ; \ Play sound effect 
                      STA.W !SPCIO0                       ;DAAB|----/----\----;8DF91D  ; / 
                      LDA.W !PlayerAniTimer               ;DAAE|----/----\----;AD9614  ;
                      ORA.B #$10                          ;DAB1|----/----\----;0910    ;
                      STA.W !PlayerAniTimer               ;DAB3|----/----\----;8D9614  ;
                      RTS                                 ;DAB6|----/----\----;60      ; Return 
                                                          ;                   ;        ;
                                                          ;                   ;        ;
DATA_00DAB7:          db $10,$08,$F0,$F8                  ;DAB7|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00DABB:          db $B0,$F0                          ;DABB|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00DABD:          db $00,$01,$00,$01,$01,$01,$01,$01  ;DABD|----/----\----;        ;
                      db $01,$01,$01,$01,$01,$01,$01,$01  ;DAC5|----/----\----;        ;
DATA_00DACD:          db $22,$15,$22,$15,$21,$1F,$20,$20  ;DACD|----/----\----;        ;
                      db $20,$20,$1F,$21,$1F,$21          ;DAD5|----/----\----;        ;
                                                          ;                   ;        ;
ClimbingImgs:         db $15,$22                          ;DADB|----/----\----;        ;
                                                          ;                   ;        ;
ClimbPunchingImgs:    db $1E,$23                          ;DADD|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00DADF:          db $10,$0F,$0E,$0D,$0C,$0B,$0A,$09  ;DADF|----/----\----;        ;
                      db $08,$07,$06,$05,$05,$05,$05,$05  ;DAE7|----/----\----;        ;
                      db $05,$05                          ;DAEF|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00DAF1:          db $20,$01,$40,$01,$2A,$01,$2A,$01  ;DAF1|----/----\----;        ;
                      db $30,$01,$33,$01,$32,$01,$34,$01  ;DAF9|----/----\----;        ;
                      db $36,$01,$38,$01,$3A,$01,$3B,$01  ;DB01|----/----\----;        ;
                      db $45,$01,$45,$01,$45,$01,$45,$01  ;DB09|----/----\----;        ;
                      db $45,$01,$45,$01,$08,$F8          ;DB11|----/----\----;        ;
                                                          ;                   ;        ;
CODE_00DB17:          STZ.B !PlayerInAir                  ;DB17|----/----\----;6472    ;
                      STZ.B !PlayerYSpeed                 ;DB19|----/----\----;647D    ;
                      STZ.W !PlayerCapePose               ;DB1B|----/----\----;9CDF13  ;
                      STZ.W !SpinJumpFlag                 ;DB1E|----/----\----;9C0D14  ;
                      LDY.W !NetDoorTimer                 ;DB21|----/----\----;AC9D14  ;
                      BEQ CODE_00DB7D                     ;DB24|----/----\----;F057    ;
                      LDA.W !NetDoorPlayerXOffset         ;DB26|----/----\----;AD7818  ;
                      BPL +                               ;DB29|----/----\----;1003    ;
                      EOR.B #$FF                          ;DB2B|----/----\----;49FF    ;
                      INC A                               ;DB2D|----/----\----;1A      ;
                    + TAX                                 ;DB2E|----/----\----;AA      ;
                      CPY.B #$1E                          ;DB2F|----/----\----;C01E    ;
                      BCC CODE_00DB45                     ;DB31|----/----\----;9012    ;
                      LDA.W DATA_00DADF,X                 ;DB33|----/----\----;BDDFDA  ;
                      BIT.W !NetDoorPlayerXOffset         ;DB36|----/----\----;2C7818  ;
                      BPL +                               ;DB39|----/----\----;1003    ;
                      EOR.B #$FF                          ;DB3B|----/----\----;49FF    ;
                      INC A                               ;DB3D|----/----\----;1A      ;
                    + STA.B !PlayerXSpeed                 ;DB3E|----/----\----;857B    ;
                      STZ.B !PlayerXPosSpx                ;DB40|----/----\----;647A    ;
                      STZ.W !PlayerXSpeedFPSpx            ;DB42|----/----\----;9CDA13  ;
CODE_00DB45:          TXA                                 ;DB45|----/----\----;8A      ;
                      ASL A                               ;DB46|----/----\----;0A      ;
                      TAX                                 ;DB47|----/----\----;AA      ;
                      LDA.W !NetDoorPlayerXOffset         ;DB48|----/----\----;AD7818  ;
                      CPY.B #$08                          ;DB4B|----/----\----;C008    ;
                      BCS +                               ;DB4D|----/----\----;B002    ;
                      EOR.B #$80                          ;DB4F|----/----\----;4980    ;
                    + ASL A                               ;DB51|----/----\----;0A      ;
                      REP #$20                            ;DB52|----/----\----;C220    ; Accum (16 bit) 
                      LDA.W DATA_00DAF1,X                 ;DB54|----/----\----;BDF1DA  ;
                      BCS +                               ;DB57|----/----\----;B004    ;
                      EOR.W #$FFFF                        ;DB59|----/----\----;49FFFF  ;
                      INC A                               ;DB5C|----/----\----;1A      ;
                    + CLC                                 ;DB5D|----/----\----;18      ;
                      ADC.B !PlayerXPosSpx                ;DB5E|----/----\----;657A    ;
                      STA.B !PlayerXPosSpx                ;DB60|----/----\----;857A    ;
                      SEP #$20                            ;DB62|----/----\----;E220    ; Accum (8 bit) 
                      TYA                                 ;DB64|----/----\----;98      ;
                      LSR A                               ;DB65|----/----\----;4A      ;
                      AND.B #$0E                          ;DB66|----/----\----;290E    ;
                      ORA.W !NetDoorDirIndex              ;DB68|----/----\----;0DF013  ;
                      TAY                                 ;DB6B|----/----\----;A8      ;
                      LDA.W DATA_00DABD,Y                 ;DB6C|----/----\----;B9BDDA  ;
                      BIT.W !NetDoorPlayerXOffset         ;DB6F|----/----\----;2C7818  ;
                      BMI +                               ;DB72|----/----\----;3002    ;
                      EOR.B #$01                          ;DB74|----/----\----;4901    ;
                    + STA.B !PlayerDirection              ;DB76|----/----\----;8576    ;
                      LDA.W DATA_00DACD,Y                 ;DB78|----/----\----;B9CDDA  ;
                      BRA CODE_00DB92                     ;DB7B|----/----\----;8015    ;
                                                          ;                   ;        ;
CODE_00DB7D:          STZ.B !PlayerXSpeed                 ;DB7D|----/----\----;647B    ;
                      STZ.B !PlayerXPosSpx                ;DB7F|----/----\----;647A    ;
                      LDX.W !PlayerBehindNet              ;DB81|----/----\----;AEF913  ;
                      LDA.W !PunchNetTimer                ;DB84|----/----\----;AD9E14  ;
                      BEQ +                               ;DB87|----/----\----;F00D    ;
                      TXA                                 ;DB89|----/----\----;8A      ;
                      INC A                               ;DB8A|----/----\----;1A      ;
                      INC A                               ;DB8B|----/----\----;1A      ;
                      JSR CODE_00D044                     ;DB8C|----/----\----;2044D0  ;
                      LDA.W ClimbPunchingImgs,X           ;DB8F|----/----\----;BDDDDA  ;
CODE_00DB92:          STA.W !PlayerPose                   ;DB92|----/----\----;8DE013  ;
                      RTS                                 ;DB95|----/----\----;60      ; Return 
                                                          ;                   ;        ;
                    + LDY.B !PlayerInWater                ;DB96|----/----\----;A475    ; Mario is in Water flag 
                      BIT.B !byetudlrFrame                ;DB98|----/----\----;2416    ;
                      BPL CODE_00DBAC                     ;DB9A|----/----\----;1010    ;
                      LDA.B #$0B                          ;DB9C|----/----\----;A90B    ;
                      STA.B !PlayerInAir                  ;DB9E|----/----\----;8572    ;
                      LDA.W DATA_00DABB,Y                 ;DBA0|----/----\----;B9BBDA  ;
                      STA.B !PlayerYSpeed                 ;DBA3|----/----\----;857D    ;
                      LDA.B #$01                          ;DBA5|----/----\----;A901    ; \ Play sound effect 
                      STA.W !SPCIO1                       ;DBA7|----/----\----;8DFA1D  ; / 
                      BRA CODE_00DC00                     ;DBAA|----/----\----;8054    ;
                                                          ;                   ;        ;
CODE_00DBAC:          BVC +                               ;DBAC|----/----\----;501C    ;
                      LDA.B !PlayerIsClimbing             ;DBAE|----/----\----;A574    ;
                      BPL +                               ;DBB0|----/----\----;1018    ;
                      LDA.B #$01                          ;DBB2|----/----\----;A901    ; \ Play sound effect 
                      STA.W !SPCIO0                       ;DBB4|----/----\----;8DF91D  ; / 
                      STX.W !NetDoorDirIndex              ;DBB7|----/----\----;8EF013  ;
                      LDA.B !PlayerXPosNext               ;DBBA|----/----\----;A594    ; Mario X 
                      AND.B #$08                          ;DBBC|----/----\----;2908    ;
                      LSR A                               ;DBBE|----/----\----;4A      ;
                      LSR A                               ;DBBF|----/----\----;4A      ;
                      LSR A                               ;DBC0|----/----\----;4A      ;
                      EOR.B #$01                          ;DBC1|----/----\----;4901    ;
                      STA.B !PlayerDirection              ;DBC3|----/----\----;8576    ; Mario's Direction 
                      LDA.B #$08                          ;DBC5|----/----\----;A908    ;
                      STA.W !PunchNetTimer                ;DBC7|----/----\----;8D9E14  ;
                    + LDA.W ClimbingImgs,X                ;DBCA|----/----\----;BDDBDA  ;
                      STA.W !PlayerPose                   ;DBCD|----/----\----;8DE013  ; Store A in Mario image 
                      LDA.B !byetudlrHold                 ;DBD0|----/----\----;A515    ;
                      AND.B #$03                          ;DBD2|----/----\----;2903    ;
                      BEQ CODE_00DBF2                     ;DBD4|----/----\----;F01C    ;
                      LSR A                               ;DBD6|----/----\----;4A      ;
                      TAX                                 ;DBD7|----/----\----;AA      ;
                      LDA.B !GraphicsCompPtr+1            ;DBD8|----/----\----;A58B    ;
                      AND.B #$18                          ;DBDA|----/----\----;2918    ;
                      CMP.B #$18                          ;DBDC|----/----\----;C918    ;
                      BEQ CODE_00DBE8                     ;DBDE|----/----\----;F008    ;
                      LDA.B !PlayerIsClimbing             ;DBE0|----/----\----;A574    ;
                      BPL CODE_00DC00                     ;DBE2|----/----\----;101C    ;
                      CPX.B !GraphicsCompPtr+2            ;DBE4|----/----\----;E48C    ;
                      BEQ CODE_00DBF2                     ;DBE6|----/----\----;F00A    ;
CODE_00DBE8:          TXA                                 ;DBE8|----/----\----;8A      ;
                      ASL A                               ;DBE9|----/----\----;0A      ;
                      ORA.B !PlayerInWater                ;DBEA|----/----\----;0575    ;
                      TAX                                 ;DBEC|----/----\----;AA      ;
                      LDA.W DATA_00DAB7,X                 ;DBED|----/----\----;BDB7DA  ;
                      STA.B !PlayerXSpeed                 ;DBF0|----/----\----;857B    ;
CODE_00DBF2:          LDA.B !byetudlrHold                 ;DBF2|----/----\----;A515    ; \ 
                      AND.B #$0C                          ;DBF4|----/----\----;290C    ;  |If up or down isn't pressed, branch to $DC16 
                      BEQ CODE_00DC16                     ;DBF6|----/----\----;F01E    ; / 
                      AND.B #$08                          ;DBF8|----/----\----;2908    ; \ If up is pressed, branch to $DC03 
                      BNE CODE_00DC03                     ;DBFA|----/----\----;D007    ; / 
                      LSR.B !GraphicsCompPtr+1            ;DBFC|----/----\----;468B    ;
                      BCS CODE_00DC0B                     ;DBFE|----/----\----;B00B    ;
CODE_00DC00:          STZ.B !PlayerIsClimbing             ;DC00|----/----\----;6474    ; Mario isn't climbing 
                      RTS                                 ;DC02|----/----\----;60      ; Return 
                                                          ;                   ;        ;
CODE_00DC03:          INY                                 ;DC03|----/----\----;C8      ;
                      INY                                 ;DC04|----/----\----;C8      ;
                      LDA.B !GraphicsCompPtr+1            ;DC05|----/----\----;A58B    ;
                      AND.B #$02                          ;DC07|----/----\----;2902    ;
                      BEQ CODE_00DC16                     ;DC09|----/----\----;F00B    ;
CODE_00DC0B:          LDA.B !PlayerIsClimbing             ;DC0B|----/----\----;A574    ;
                      BMI +                               ;DC0D|----/----\----;3002    ;
                      STZ.B !PlayerXSpeed                 ;DC0F|----/----\----;647B    ;
                    + LDA.W DATA_00DAB7,Y                 ;DC11|----/----\----;B9B7DA  ;
                      STA.B !PlayerYSpeed                 ;DC14|----/----\----;857D    ;
CODE_00DC16:          ORA.B !PlayerXSpeed                 ;DC16|----/----\----;057B    ;
                      BEQ +                               ;DC18|----/----\----;F012    ;
                      LDA.W !PlayerAniTimer               ;DC1A|----/----\----;AD9614  ;
                      ORA.B #$08                          ;DC1D|----/----\----;0908    ;
                      STA.W !PlayerAniTimer               ;DC1F|----/----\----;8D9614  ;
                      AND.B #$07                          ;DC22|----/----\----;2907    ;
                      BNE +                               ;DC24|----/----\----;D006    ;
                      LDA.B !PlayerDirection              ;DC26|----/----\----;A576    ;
                      EOR.B #$01                          ;DC28|----/----\----;4901    ;
                      STA.B !PlayerDirection              ;DC2A|----/----\----;8576    ;
                    + RTS                                 ;DC2C|----/----\----;60      ; Return 
                                                          ;                   ;        ;
CODE_00DC2D:          LDA.B !PlayerYSpeed                 ;DC2D|----/----\----;A57D    ; \ Store Mario's Y speed in $8A 
                      STA.B !GraphicsCompPtr              ;DC2F|----/----\----;858A    ; /  
                      LDA.W !WallrunningType              ;DC31|----/----\----;ADE313  ;
                      BEQ CODE_00DC40                     ;DC34|----/----\----;F00A    ;
                      LSR A                               ;DC36|----/----\----;4A      ;
                      LDA.B !PlayerXSpeed                 ;DC37|----/----\----;A57B    ;
                      BCC +                               ;DC39|----/----\----;9003    ;
                      EOR.B #$FF                          ;DC3B|----/----\----;49FF    ;
                      INC A                               ;DC3D|----/----\----;1A      ;
                    + STA.B !PlayerYSpeed                 ;DC3E|----/----\----;857D    ;
CODE_00DC40:          LDX.B #$00                          ;DC40|----/----\----;A200    ;
                      JSR CODE_00DC4F                     ;DC42|----/----\----;204FDC  ;
                      LDX.B #$02                          ;DC45|----/----\----;A202    ;
                      JSR CODE_00DC4F                     ;DC47|----/----\----;204FDC  ;
                      LDA.B !GraphicsCompPtr              ;DC4A|----/----\----;A58A    ;
                      STA.B !PlayerYSpeed                 ;DC4C|----/----\----;857D    ;
                      RTS                                 ;DC4E|----/----\----;60      ; Return 
                                                          ;                   ;        ;
CODE_00DC4F:          LDA.B !PlayerXSpeed,X               ;DC4F|----/----\----;B57B    ;
                      ASL A                               ;DC51|----/----\----;0A      ;
                      ASL A                               ;DC52|----/----\----;0A      ;
                      ASL A                               ;DC53|----/----\----;0A      ;
                      ASL A                               ;DC54|----/----\----;0A      ;
                      CLC                                 ;DC55|----/----\----;18      ;
                      ADC.W !PlayerXSpeedFPSpx,X          ;DC56|----/----\----;7DDA13  ;
                      STA.W !PlayerXSpeedFPSpx,X          ;DC59|----/----\----;9DDA13  ;
                      REP #$20                            ;DC5C|----/----\----;C220    ; Accum (16 bit) 
                      PHP                                 ;DC5E|----/----\----;08      ;
                      LDA.B !PlayerXSpeed,X               ;DC5F|----/----\----;B57B    ;
                      LSR A                               ;DC61|----/----\----;4A      ;
                      LSR A                               ;DC62|----/----\----;4A      ;
                      LSR A                               ;DC63|----/----\----;4A      ;
                      LSR A                               ;DC64|----/----\----;4A      ;
                      AND.W #$000F                        ;DC65|----/----\----;290F00  ;
                      CMP.W #$0008                        ;DC68|----/----\----;C90800  ;
                      BCC +                               ;DC6B|----/----\----;9003    ;
                      ORA.W #$FFF0                        ;DC6D|----/----\----;09F0FF  ;
                    + PLP                                 ;DC70|----/----\----;28      ;
                      ADC.B !PlayerXPosNext,X             ;DC71|----/----\----;7594    ;
                      STA.B !PlayerXPosNext,X             ;DC73|----/----\----;9594    ;
                      SEP #$20                            ;DC75|----/----\----;E220    ; Accum (8 bit) 
                      RTS                                 ;DC77|----/----\----;60      ; Return 
                                                          ;                   ;        ;
                                                          ;                   ;        ;
NumWalkingFrames:     db $01,$02,$02,$02                  ;DC78|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00DC7C:          db $0A,$08,$06,$04,$03,$02,$01,$01  ;DC7C|----/----\----;        ;
                      db $0A,$08,$06,$04,$03,$02,$01,$01  ;DC84|----/----\----;        ;
                      db $0A,$08,$06,$04,$03,$02,$01,$01  ;DC8C|----/----\----;        ;
                      db $08,$06,$04,$03,$02,$01,$01,$01  ;DC94|----/----\----;        ;
                      db $08,$06,$04,$03,$02,$01,$01,$01  ;DC9C|----/----\----;        ;
                      db $05,$04,$03,$02,$01,$01,$01,$01  ;DCA4|----/----\----;        ;
                      db $05,$04,$03,$02,$01,$01,$01,$01  ;DCAC|----/----\----;        ;
                      db $05,$04,$03,$02,$01,$01,$01,$01  ;DCB4|----/----\----;        ;
                      db $05,$04,$03,$02,$01,$01,$01,$01  ;DCBC|----/----\----;        ;
                      db $05,$04,$03,$02,$01,$01,$01,$01  ;DCC4|----/----\----;        ;
                      db $05,$04,$03,$02,$01,$01,$01,$01  ;DCCC|----/----\----;        ;
                      db $04,$03,$02,$01,$01,$01,$01,$01  ;DCD4|----/----\----;        ;
                      db $04,$03,$02,$01,$01,$01,$01,$01  ;DCDC|----/----\----;        ;
                      db $02,$02,$02,$02,$02,$02,$02,$02  ;DCE4|----/----\----;        ;
DATA_00DCEC:          db $00,$00,$00,$00,$00,$00,$00,$00  ;DCEC|----/----\----;        ;
                      db $00,$00,$00,$00,$00,$00,$00,$00  ;DCF4|----/----\----;        ;
                      db $02,$04,$04,$04,$0E,$08,$00,$00  ;DCFC|----/----\----;        ;
                      db $00,$00,$00,$00,$00,$00,$08,$08  ;DD04|----/----\----;        ;
                      db $08,$08,$08,$08,$00,$00,$00,$00  ;DD0C|----/----\----;        ;
                      db $0C,$10,$12,$14,$16,$18,$1A,$00  ;DD14|----/----\----;        ;
                      db $00,$00,$00,$00,$00,$00,$00,$00  ;DD1C|----/----\----;        ;
                      db $00,$00,$00,$00,$00,$06,$00,$00  ;DD24|----/----\----;        ;
                      db $00,$00,$00,$0A,$00,$00          ;DD2C|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00DD32:          db $00,$08,$10,$14,$18,$1E,$24,$24  ;DD32|----/----\----;        ;
                      db $28,$30,$38,$3E,$44,$4A,$50,$54  ;DD3A|----/----\----;        ;
                      db $58,$58,$5C,$60,$64,$68,$6C,$70  ;DD42|----/----\----;        ;
                      db $74,$78,$7C,$80                  ;DD4A|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00DD4E:          db $00,$00,$00,$00,$10,$00,$10,$00  ;DD4E|----/----\----;        ;
                      db $00,$00,$00,$00,$F8,$FF,$F8,$FF  ;DD56|----/----\----;        ;
                      db $0E,$00,$06,$00,$F2,$FF,$FA,$FF  ;DD5E|----/----\----;        ;
                      db $17,$00,$07,$00,$0F,$00,$EA,$FF  ;DD66|----/----\----;        ;
                      db $FA,$FF,$FA,$FF,$00,$00,$00,$00  ;DD6E|----/----\----;        ;
                      db $00,$00,$00,$00,$10,$00,$10,$00  ;DD76|----/----\----;        ;
                      db $00,$00,$00,$00,$F8,$FF,$F8,$FF  ;DD7E|----/----\----;        ;
                      db $00,$00,$F8,$FF,$08,$00,$00,$00  ;DD86|----/----\----;        ;
                      db $08,$00,$F8,$FF,$00,$00,$00,$00  ;DD8E|----/----\----;        ;
                      db $F8,$FF,$00,$00,$00,$00,$10,$00  ;DD96|----/----\----;        ;
                      db $02,$00,$00,$00,$FE,$FF,$00,$00  ;DD9E|----/----\----;        ;
                      db $00,$00,$00,$00,$FC,$FF,$05,$00  ;DDA6|----/----\----;        ;
                      db $04,$00,$FB,$FF,$FB,$FF,$06,$00  ;DDAE|----/----\----;        ;
                      db $05,$00,$FA,$FF,$F9,$FF,$09,$00  ;DDB6|----/----\----;        ;
                      db $07,$00,$F7,$FF,$FD,$FF,$FD,$FF  ;DDBE|----/----\----;        ;
                      db $03,$00,$03,$00,$FF,$FF,$07,$00  ;DDC6|----/----\----;        ;
                      db $01,$00,$F9,$FF,$0A,$00,$F6,$FF  ;DDCE|----/----\----;        ;
                      db $08,$00,$F8,$FF,$08,$00,$F8,$FF  ;DDD6|----/----\----;        ;
                      db $00,$00,$04,$00,$FC,$FF,$FE,$FF  ;DDDE|----/----\----;        ;
                      db $02,$00,$0B,$00,$F5,$FF,$14,$00  ;DDE6|----/----\----;        ;
                      db $EC,$FF,$0E,$00,$F3,$FF,$08,$00  ;DDEE|----/----\----;        ;
                      db $F8,$FF,$0C,$00,$14,$00,$FD,$FF  ;DDF6|----/----\----;        ;
                      db $F4,$FF,$F4,$FF,$0B,$00,$0B,$00  ;DDFE|----/----\----;        ;
                      db $03,$00,$13,$00,$F5,$FF,$05,$00  ;DE06|----/----\----;        ;
                      db $F5,$FF,$09,$00,$01,$00,$01,$00  ;DE0E|----/----\----;        ;
                      db $F7,$FF,$07,$00,$07,$00,$05,$00  ;DE16|----/----\----;        ;
                      db $0D,$00,$0D,$00,$FB,$FF,$FB,$FF  ;DE1E|----/----\----;        ;
                      db $FB,$FF,$FF,$FF,$0F,$00,$01,$00  ;DE26|----/----\----;        ;
                      db $F9,$FF,$00,$00                  ;DE2E|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00DE32:          db $01,$00,$11,$00,$11,$00,$19,$00  ;DE32|----/----\----;        ;
                      db $01,$00,$11,$00,$11,$00,$19,$00  ;DE3A|----/----\----;        ;
                      db $0C,$00,$14,$00,$0C,$00,$14,$00  ;DE42|----/----\----;        ;
                      db $18,$00,$18,$00,$28,$00,$18,$00  ;DE4A|----/----\----;        ;
                      db $18,$00,$28,$00,$06,$00,$16,$00  ;DE52|----/----\----;        ;
                      db $01,$00,$11,$00,$09,$00,$11,$00  ;DE5A|----/----\----;        ;
                      db $01,$00,$11,$00,$09,$00,$11,$00  ;DE62|----/----\----;        ;
                      db $01,$00,$11,$00,$11,$00,$01,$00  ;DE6A|----/----\----;        ;
                      db $11,$00,$11,$00,$01,$00,$11,$00  ;DE72|----/----\----;        ;
                      db $11,$00,$01,$00,$11,$00,$11,$00  ;DE7A|----/----\----;        ;
                      db $01,$00,$11,$00,$01,$00,$11,$00  ;DE82|----/----\----;        ;
                      db $11,$00,$05,$00,$04,$00,$14,$00  ;DE8A|----/----\----;        ;
                      db $04,$00,$14,$00,$0C,$00,$14,$00  ;DE92|----/----\----;        ;
                      db $0C,$00,$14,$00,$10,$00,$10,$00  ;DE9A|----/----\----;        ;
                      db $10,$00,$10,$00,$10,$00,$00,$00  ;DEA2|----/----\----;        ;
                      db $10,$00,$00,$00,$10,$00,$00,$00  ;DEAA|----/----\----;        ;
                      db $10,$00,$00,$00,$0B,$00,$0B,$00  ;DEB2|----/----\----;        ;
                      db $11,$00,$11,$00,$FF,$FF,$FF,$FF  ;DEBA|----/----\----;        ;
                      db $10,$00,$10,$00,$10,$00,$10,$00  ;DEC2|----/----\----;        ;
                      db $10,$00,$10,$00,$10,$00,$15,$00  ;DECA|----/----\----;        ;
                      db $15,$00,$25,$00,$25,$00,$04,$00  ;DED2|----/----\----;        ;
                      db $04,$00,$04,$00,$14,$00,$14,$00  ;DEDA|----/----\----;        ;
                      db $04,$00,$14,$00,$14,$00,$04,$00  ;DEE2|----/----\----;        ;
                      db $04,$00,$14,$00,$04,$00,$04,$00  ;DEEA|----/----\----;        ;
                      db $14,$00,$00,$00,$08,$00,$00,$00  ;DEF2|----/----\----;        ;
                      db $00,$00,$08,$00,$00,$00,$00,$00  ;DEFA|----/----\----;        ;
                      db $10,$00,$18,$00,$00,$00,$10,$00  ;DF02|----/----\----;        ;
                      db $18,$00,$00,$00,$10,$00,$00,$00  ;DF0A|----/----\----;        ;
                      db $10,$00,$F8,$FF                  ;DF12|----/----\----;        ;
                                                          ;                   ;        ;
TilesetIndex:         db $00,$46,$83,$46                  ;DF16|----/----\----;        ;
                                                          ;                   ;        ;
TileExpansion_:       db $00,$00,$00,$00,$00,$00,$00,$00  ;DF1A|----/----\----;        ;
                      db $00,$00,$00,$00,$00,$00,$00,$00  ;DF22|----/----\----;        ;
                      db $00,$00,$00,$00,$00,$00,$00,$00  ;DF2A|----/----\----;        ;
                      db $00,$00,$00,$00,$00,$00,$00,$00  ;DF32|----/----\----;        ;
                      db $00,$00,$00,$00,$00,$00,$00,$00  ;DF3A|----/----\----;        ;
                      db $00,$00,$00,$00,$00,$00,$00,$00  ;DF42|----/----\----;        ;
                      db $00,$00,$00,$00,$00,$00,$00,$00  ;DF4A|----/----\----;        ;
                      db $00,$00,$00,$00,$00,$00,$00,$00  ;DF52|----/----\----;        ;
                      db $00,$00,$00,$28,$00,$00,$00,$00  ;DF5A|----/----\----;        ;
                      db $00,$00,$04,$04,$04,$00,$00,$00  ;DF62|----/----\----;        ;
                      db $00,$00,$08,$00,$00,$00,$00,$0C  ;DF6A|----/----\----;        ;
                      db $0C,$0C,$00,$00,$10,$10,$14,$14  ;DF72|----/----\----;        ;
                      db $18,$18,$00,$00,$1C,$00,$00,$00  ;DF7A|----/----\----;        ;
                      db $00,$20,$00,$00,$00,$00,$24,$00  ;DF82|----/----\----;        ;
                      db $00,$00,$00,$00,$00,$00,$00,$00  ;DF8A|----/----\----;        ;
                      db $00,$00,$00,$00,$00,$00,$00,$00  ;DF92|----/----\----;        ;
                      db $00,$00,$00,$00,$00,$00,$00,$04  ;DF9A|----/----\----;        ;
                      db $04,$04,$00,$00,$00,$00,$00,$08  ;DFA2|----/----\----;        ;
                      db $00,$00,$00,$00,$0C,$0C,$0C,$00  ;DFAA|----/----\----;        ;
                      db $00,$10,$10,$14,$14,$18,$18,$00  ;DFB2|----/----\----;        ;
                      db $00,$1C,$00,$00,$00,$00,$20,$00  ;DFBA|----/----\----;        ;
                      db $00,$00,$00,$24,$00,$00,$00,$00  ;DFC2|----/----\----;        ;
                      db $00,$00,$00,$00,$00,$00,$00,$00  ;DFCA|----/----\----;        ;
                      db $00,$00,$00,$00,$00,$00,$00,$00  ;DFD2|----/----\----;        ;
Mario8x8Tiles:        db $00,$02,$80,$80,$00,$02,$0C,$80  ;DFDA|----/----\----;        ;
                      db $00,$02,$1A,$1B,$00,$02,$0D,$80  ;DFE2|----/----\----;        ;
                      db $00,$02,$22,$23,$00,$02,$32,$33  ;DFEA|----/----\----;        ;
                      db $00,$02,$0A,$0B,$00,$02,$30,$31  ;DFF2|----/----\----;        ;
                      db $00,$02,$20,$21,$00,$02,$7E,$80  ;DFFA|----/----\----;        ;
                      db $00,$02,$02,$80,$04,$7F,$4A,$5B  ;E002|----/----\----;        ;
                      db $4B,$5A                          ;E00A|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00E00C:          db $50,$50,$50,$09,$50,$50,$50,$50  ;E00C|----/----\----;        ;
                      db $50,$50,$09,$2B,$50,$2D,$50,$D5  ;E014|----/----\----;        ;
                      db $2E,$C4,$C4,$C4,$D6,$B6,$50,$50  ;E01C|----/----\----;        ;
                      db $50,$50,$50,$50,$50,$C5,$D7,$2A  ;E024|----/----\----;        ;
                      db $E0,$50,$D5,$29,$2C,$B6,$D6,$28  ;E02C|----/----\----;        ;
                      db $E0,$E0,$C5,$C5,$C5,$C5,$C5,$C5  ;E034|----/----\----;        ;
                      db $5C,$5C,$50,$5A,$B6,$50,$28,$28  ;E03C|----/----\----;        ;
                      db $C5,$D7,$28,$70,$C5,$70,$1C,$93  ;E044|----/----\----;        ;
                      db $C5,$C5,$0B,$85,$90,$84,$70,$70  ;E04C|----/----\----;        ;
                      db $70,$A0,$70,$70,$70,$70,$70,$70  ;E054|----/----\----;        ;
                      db $A0,$74,$70,$80,$70,$84,$17,$A4  ;E05C|----/----\----;        ;
                      db $A4,$A4,$B3,$B0,$70,$70,$70,$70  ;E064|----/----\----;        ;
                      db $70,$70,$70,$E2,$72,$0F,$61,$70  ;E06C|----/----\----;        ;
                      db $63,$82,$C7,$90,$B3,$D4,$A5,$C0  ;E074|----/----\----;        ;
                      db $08,$54,$0C,$0E,$1B,$51,$49,$4A  ;E07C|----/----\----;        ;
                      db $48,$4B,$4C,$5D,$5E,$5F,$E3,$90  ;E084|----/----\----;        ;
                      db $5F,$5F,$C5,$70,$70,$70,$A0,$70  ;E08C|----/----\----;        ;
                      db $70,$70,$70,$70,$70,$A0,$74,$70  ;E094|----/----\----;        ;
                      db $80,$70,$84,$17,$A4,$A4,$A4,$B3  ;E09C|----/----\----;        ;
                      db $B0,$70,$70,$70,$70,$70,$70,$70  ;E0A4|----/----\----;        ;
                      db $E2,$72,$0F,$61,$70,$63,$82,$C7  ;E0AC|----/----\----;        ;
                      db $90,$B3,$D4,$A5,$C0,$08,$64,$0C  ;E0B4|----/----\----;        ;
                      db $0E,$1B,$51,$49,$4A,$48,$4B,$4C  ;E0BC|----/----\----;        ;
                      db $5D,$5E,$5F,$E3,$90,$5F,$5F,$C5  ;E0C4|----/----\----;        ;
DATA_00E0CC:          db $71,$60,$60,$19,$94,$96,$96,$A2  ;E0CC|----/----\----;        ;
                      db $97,$97,$18,$3B,$B4,$3D,$A7,$E5  ;E0D4|----/----\----;        ;
                      db $2F,$D3,$C3,$C3,$F6,$D0,$B1,$81  ;E0DC|----/----\----;        ;
                      db $B2,$86,$B4,$87,$A6,$D1,$F7,$3A  ;E0E4|----/----\----;        ;
                      db $F0,$F4,$F5,$39,$3C,$C6,$E6,$38  ;E0EC|----/----\----;        ;
                      db $F1,$F0,$C5,$C5,$C5,$C5,$C5,$C5  ;E0F4|----/----\----;        ;
                      db $6C,$4D,$71,$6A,$6B,$60,$38,$F1  ;E0FC|----/----\----;        ;
                      db $5B,$69,$F1,$F1,$4E,$E1,$1D,$A3  ;E104|----/----\----;        ;
                      db $C5,$C5,$1A,$95,$10,$07,$02,$01  ;E10C|----/----\----;        ;
                      db $00,$02,$14,$13,$12,$30,$27,$26  ;E114|----/----\----;        ;
                      db $30,$03,$15,$04,$31,$07,$E7,$25  ;E11C|----/----\----;        ;
                      db $24,$23,$62,$36,$33,$91,$34,$92  ;E124|----/----\----;        ;
                      db $35,$A1,$32,$F2,$73,$1F,$C0,$C1  ;E12C|----/----\----;        ;
                      db $C2,$83,$D2,$10,$B7,$E4,$B5,$61  ;E134|----/----\----;        ;
                      db $0A,$55,$0D,$75,$77,$1E,$59,$59  ;E13C|----/----\----;        ;
                      db $58,$02,$02,$6D,$6E,$6F,$F3,$68  ;E144|----/----\----;        ;
                      db $6F,$6F,$06,$02,$01,$00,$02,$14  ;E14C|----/----\----;        ;
                      db $13,$12,$30,$27,$26,$30,$03,$15  ;E154|----/----\----;        ;
                      db $04,$31,$07,$E7,$25,$24,$23,$62  ;E15C|----/----\----;        ;
                      db $36,$33,$91,$34,$92,$35,$A1,$32  ;E164|----/----\----;        ;
                      db $F2,$73,$1F,$C0,$C1,$C2,$83,$D2  ;E16C|----/----\----;        ;
                      db $10,$B7,$E4,$B5,$61,$0A,$55,$0D  ;E174|----/----\----;        ;
                      db $75,$77,$1E,$59,$59,$58,$02,$02  ;E17C|----/----\----;        ;
                      db $6D,$6E,$6F,$F3,$68,$6F,$6F,$06  ;E184|----/----\----;        ;
MarioPalIndex:        db $00,$40                          ;E18C|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00E18E:          db $00,$00,$00,$00,$00,$00,$00,$00  ;E18E|----/----\----;        ;
                      db $00,$00,$00,$00,$00,$0D,$00,$10  ;E196|----/----\----;        ;
                      db $13,$22,$25,$28,$00,$16,$00,$00  ;E19E|----/----\----;        ;
                      db $00,$00,$00,$00,$00,$08,$19,$1C  ;E1A6|----/----\----;        ;
                      db $04,$1F,$10,$10,$00,$16,$10,$06  ;E1AE|----/----\----;        ;
                      db $04,$08,$2B,$30,$35,$3A,$3F,$43  ;E1B6|----/----\----;        ;
                      db $00,$00,$00,$00,$00,$00,$00,$00  ;E1BE|----/----\----;        ;
                      db $16,$16,$00,$00,$08,$00,$00,$00  ;E1C6|----/----\----;        ;
                      db $00,$00,$00,$10,$04,$00          ;E1CE|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00E1D4:          db $06                              ;E1D4|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00E1D5:          db $00                              ;E1D5|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00E1D6:          db $06                              ;E1D6|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00E1D7:          db $00                              ;E1D7|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00E1D8:          db $86,$02,$06,$03,$06,$01,$06,$CE  ;E1D8|----/----\----;        ;
                      db $06,$06,$40,$00,$06,$2C,$06,$06  ;E1E0|----/----\----;        ;
                      db $44,$0E,$86,$2C,$06,$86,$2C,$0A  ;E1E8|----/----\----;        ;
                      db $86,$84,$08,$06,$0A,$02,$06,$AC  ;E1F0|----/----\----;        ;
                      db $10,$06,$CC,$10,$06,$AE,$10,$00  ;E1F8|----/----\----;        ;
                      db $8C,$14,$80,$2E,$00,$CA,$16,$91  ;E200|----/----\----;        ;
                      db $2F,$00,$8E,$18,$81,$30,$00,$EB  ;E208|----/----\----;        ;
                      db $1A,$90,$31,$04,$ED,$1C,$82,$06  ;E210|----/----\----;        ;
                      db $92,$1E                          ;E218|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00E21A:          db $84,$86,$88,$8A,$8C,$8E,$90,$90  ;E21A|----/----\----;        ;
                      db $92,$94,$96,$98,$9A,$9C,$9E,$A0  ;E222|----/----\----;        ;
                      db $A2,$A4,$A6,$A8,$AA,$B0,$B6,$BC  ;E22A|----/----\----;        ;
                      db $C2,$C8,$CE,$D4,$DA,$DE,$E2,$E2  ;E232|----/----\----;        ;
DATA_00E23A:          db $0A,$0A,$84,$0A,$88,$88,$88,$88  ;E23A|----/----\----;        ;
                      db $8A,$8A,$8A,$8A,$44,$44,$44,$44  ;E242|----/----\----;        ;
                      db $42,$42,$42,$42,$40,$40,$40,$40  ;E24A|----/----\----;        ;
                      db $22,$22,$22,$22,$A4,$A4,$A4,$A4  ;E252|----/----\----;        ;
                      db $A6,$A6,$A6,$A6,$86,$86,$86,$86  ;E25A|----/----\----;        ;
                      db $6E,$6E,$6E,$6E                  ;E262|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00E266:          db $02,$02,$02,$0C,$00,$00,$00,$00  ;E266|----/----\----;        ;
                      db $00,$00,$00,$00,$00,$00,$00,$00  ;E26E|----/----\----;        ;
                      db $00,$00,$00,$00,$00,$00,$00,$00  ;E276|----/----\----;        ;
                      db $00,$00,$00,$00,$04,$12,$04,$04  ;E27E|----/----\----;        ;
                      db $04,$12,$04,$04,$04,$12,$04,$04  ;E286|----/----\----;        ;
                      db $04,$12,$04,$04                  ;E28E|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00E292:          db $01,$01,$01,$01,$02,$02,$02,$02  ;E292|----/----\----;        ;
                      db $04,$04,$04,$04,$08,$08,$08,$08  ;E29A|----/----\----;        ;
DATA_00E2A2:          db $C8,$B2,$DC,$B2,$C8,$B2,$DC,$B2  ;E2A2|----/----\----;        ;
                      db $C8,$B2,$DC,$B2,$F0,$B2,$04,$B3  ;E2AA|----/----\----;        ;
DATA_00E2B2:          db $10,$D4,$10,$E8                  ;E2B2|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00E2B6:          db $08,$CC,$08                      ;E2B6|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00E2B9:          db $E0,$10,$10,$30                  ;E2B9|----/----\----;        ;
                                                          ;                   ;        ;
CODE_00E2BD:          PHB                                 ;E2BD|----/----\----;8B      ;
                      PHK                                 ;E2BE|----/----\----;4B      ;
                      PLB                                 ;E2BF|----/----\----;AB      ;
                      LDA.B !PlayerHiddenTiles            ;E2C0|----/----\----;A578    ;
                      CMP.B #$FF                          ;E2C2|----/----\----;C9FF    ;
                      BEQ +                               ;E2C4|----/----\----;F004    ;
                      JSL CODE_01EA70                     ;E2C6|----/----\----;2270EA01;
                    + LDY.W !CyclePaletteTimer            ;E2CA|----/----\----;AC9B14  ;
                      BNE CODE_00E308                     ;E2CD|----/----\----;D039    ;
                      LDY.W !InvinsibilityTimer           ;E2CF|----/----\----;AC9014  ; \ Branch if Mario doesn't have star 
                      BEQ CODE_00E314                     ;E2D2|----/----\----;F040    ; / 
                      LDA.B !PlayerHiddenTiles            ;E2D4|----/----\----;A578    ;
                      CMP.B #$FF                          ;E2D6|----/----\----;C9FF    ;
                      BEQ +                               ;E2D8|----/----\----;F009    ;
                      LDA.B !EffFrame                     ;E2DA|----/----\----;A514    ;
                      AND.B #$03                          ;E2DC|----/----\----;2903    ;
                      BNE +                               ;E2DE|----/----\----;D003    ;
                      DEC.W !InvinsibilityTimer           ;E2E0|----/----\----;CE9014  ; Decrease star timer 
                    + LDA.B !TrueFrame                    ;E2E3|----/----\----;A513    ;
                      CPY.B #$1E                          ;E2E5|----/----\----;C01E    ;
                      BCC CODE_00E30A                     ;E2E7|----/----\----;9021    ;
                      BNE CODE_00E30C                     ;E2E9|----/----\----;D021    ;
                      LDA.W !MusicBackup                  ;E2EB|----/----\----;ADDA0D  ;
                      CMP.B #$FF                          ;E2EE|----/----\----;C9FF    ;
                      BEQ CODE_00E308                     ;E2F0|----/----\----;F016    ;
                      AND.B #$7F                          ;E2F2|----/----\----;297F    ;
                      STA.W !MusicBackup                  ;E2F4|----/----\----;8DDA0D  ;
                      TAX                                 ;E2F7|----/----\----;AA      ;
                      LDA.W !BluePSwitchTimer             ;E2F8|----/----\----;ADAD14  ;
                      ORA.W !SilverPSwitchTimer           ;E2FB|----/----\----;0DAE14  ;
                      ORA.W !DirectCoinTimer              ;E2FE|----/----\----;0D0C19  ;
                      BEQ +                               ;E301|----/----\----;F002    ;
                      LDX.B #$0E                          ;E303|----/----\----;A20E    ;
                    + STX.W !SPCIO2                       ;E305|----/----\----;8EFB1D  ; / Change music 
CODE_00E308:          LDA.B !TrueFrame                    ;E308|----/----\----;A513    ;
CODE_00E30A:          LSR A                               ;E30A|----/----\----;4A      ;
                      LSR A                               ;E30B|----/----\----;4A      ;
CODE_00E30C:          AND.B #$03                          ;E30C|----/----\----;2903    ;
                      INC A                               ;E30E|----/----\----;1A      ;
                      INC A                               ;E30F|----/----\----;1A      ;
                      INC A                               ;E310|----/----\----;1A      ;
                      INC A                               ;E311|----/----\----;1A      ;
                      BRA +                               ;E312|----/----\----;8006    ;
                                                          ;                   ;        ;
CODE_00E314:          LDA.B !Powerup                      ;E314|----/----\----;A519    ;
                      ASL A                               ;E316|----/----\----;0A      ;
                      ORA.W !PlayerTurnLvl                ;E317|----/----\----;0DB30D  ;
                    + ASL A                               ;E31A|----/----\----;0A      ;
                      TAY                                 ;E31B|----/----\----;A8      ;
                      REP #$20                            ;E31C|----/----\----;C220    ; Accum (16 bit) 
                      LDA.W DATA_00E2A2,Y                 ;E31E|----/----\----;B9A2E2  ;
                      STA.W !PlayerPalletePtr             ;E321|----/----\----;8D820D  ;
                      SEP #$20                            ;E324|----/----\----;E220    ; Accum (8 bit) 
                      LDX.W !PlayerPose                   ;E326|----/----\----;AEE013  ;
                      LDA.B #$05                          ;E329|----/----\----;A905    ;
                      CMP.W !WallrunningType              ;E32B|----/----\----;CDE313  ;
                      BCS CODE_00E33E                     ;E32E|----/----\----;B00E    ;
                      LDA.W !WallrunningType              ;E330|----/----\----;ADE313  ;
                      LDY.B !Powerup                      ;E333|----/----\----;A419    ;
                      BEQ CODE_00E33B                     ;E335|----/----\----;F004    ;
                      CPX.B #$13                          ;E337|----/----\----;E013    ;
                      BNE +                               ;E339|----/----\----;D002    ;
CODE_00E33B:          EOR.B #$01                          ;E33B|----/----\----;4901    ;
                    + LSR A                               ;E33D|----/----\----;4A      ;
CODE_00E33E:          REP #$20                            ;E33E|----/----\----;C220    ; Accum (16 bit) 
                      LDA.B !PlayerXPosNext               ;E340|----/----\----;A594    ;
                      SBC.B !Layer1XPos                   ;E342|----/----\----;E51A    ;
                      STA.B !PlayerXPosScrRel             ;E344|----/----\----;857E    ;
                      LDA.W !ScrShakePlayerYOffset        ;E346|----/----\----;AD8B18  ;
                      AND.W #$00FF                        ;E349|----/----\----;29FF00  ;
                      CLC                                 ;E34C|----/----\----;18      ;
                      ADC.B !PlayerYPosNext               ;E34D|----/----\----;6596    ;
                      LDY.B !Powerup                      ;E34F|----/----\----;A419    ;
                      CPY.B #$01                          ;E351|----/----\----;C001    ;
                      LDY.B #$01                          ;E353|----/----\----;A001    ;
                      BCS +                               ;E355|----/----\----;B002    ;
                      DEC A                               ;E357|----/----\----;3A      ;
                      DEY                                 ;E358|----/----\----;88      ;
                    + CPX.B #$0A                          ;E359|----/----\----;E00A    ;
                      BCS +                               ;E35B|----/----\----;B003    ;
                      CPY.W !PlayerWalkingPose            ;E35D|----/----\----;CCDB13  ;
                    + SBC.B !Layer1YPos                   ;E360|----/----\----;E51C    ;
                      CPX.B #$1C                          ;E362|----/----\----;E01C    ;
                      BNE +                               ;E364|----/----\----;D003    ;
                      ADC.W #$0001                        ;E366|----/----\----;690100  ;
                    + STA.B !PlayerYPosScrRel             ;E369|----/----\----;8580    ;
                      SEP #$20                            ;E36B|----/----\----;E220    ; Accum (8 bit) 
                      LDA.W !IFrameTimer                  ;E36D|----/----\----;AD9714  ;
                      BEQ +                               ;E370|----/----\----;F013    ;
                      LSR A                               ;E372|----/----\----;4A      ;
                      LSR A                               ;E373|----/----\----;4A      ;
                      LSR A                               ;E374|----/----\----;4A      ;
                      TAY                                 ;E375|----/----\----;A8      ;
                      LDA.W DATA_00E292,Y                 ;E376|----/----\----;B992E2  ;
                      AND.W !IFrameTimer                  ;E379|----/----\----;2D9714  ;
                      ORA.B !SpriteLock                   ;E37C|----/----\----;059D    ;
                      ORA.W !PlayerIsFrozen               ;E37E|----/----\----;0DFB13  ;
                      BNE +                               ;E381|----/----\----;D002    ;
                      PLB                                 ;E383|----/----\----;AB      ;
                      RTL                                 ;E384|----/----\----;6B      ; Return 
                                                          ;                   ;        ;
                    + LDA.B #$C8                          ;E385|----/----\----;A9C8    ;
                      CPX.B #$43                          ;E387|----/----\----;E043    ;
                      BNE +                               ;E389|----/----\----;D002    ;
                      LDA.B #$E8                          ;E38B|----/----\----;A9E8    ;
                    + STA.B !_4                           ;E38D|----/----\----;8504    ;
                      CPX.B #$29                          ;E38F|----/----\----;E029    ;
                      BNE +                               ;E391|----/----\----;D006    ;
                      LDA.B !Powerup                      ;E393|----/----\----;A519    ;
                      BNE +                               ;E395|----/----\----;D002    ;
                      LDX.B #$20                          ;E397|----/----\----;A220    ;
                    + LDA.W DATA_00DCEC,X                 ;E399|----/----\----;BDECDC  ;
                      ORA.B !PlayerDirection              ;E39C|----/----\----;0576    ;
                      TAY                                 ;E39E|----/----\----;A8      ;
                      LDA.W DATA_00DD32,Y                 ;E39F|----/----\----;B932DD  ;
                      STA.B !_5                           ;E3A2|----/----\----;8505    ;
                      LDY.B !Powerup                      ;E3A4|----/----\----;A419    ;
                      LDA.W !PlayerPose                   ;E3A6|----/----\----;ADE013  ;
                      CMP.B #$3D                          ;E3A9|----/----\----;C93D    ;
                      BCS +                               ;E3AB|----/----\----;B003    ;
                      ADC.W TilesetIndex,Y                ;E3AD|----/----\----;7916DF  ;
                    + TAY                                 ;E3B0|----/----\----;A8      ;
                      LDA.W TileExpansion_,Y              ;E3B1|----/----\----;B91ADF  ;
                      STA.B !_6                           ;E3B4|----/----\----;8506    ;
                      LDA.W DATA_00E00C,Y                 ;E3B6|----/----\----;B90CE0  ;
                      STA.B !_A                           ;E3B9|----/----\----;850A    ;
                      LDA.W DATA_00E0CC,Y                 ;E3BB|----/----\----;B9CCE0  ;
                      STA.B !_B                           ;E3BE|----/----\----;850B    ;
                      LDA.B !SpriteProperties             ;E3C0|----/----\----;A564    ;
                      LDX.W !PlayerBehindNet              ;E3C2|----/----\----;AEF913  ;
                      BEQ +                               ;E3C5|----/----\----;F003    ;
                      LDA.W DATA_00E2B9,X                 ;E3C7|----/----\----;BDB9E2  ;
                    + LDY.W DATA_00E2B2,X                 ;E3CA|----/----\----;BCB2E2  ;
                      LDX.B !PlayerDirection              ;E3CD|----/----\----;A676    ;
                      ORA.W MarioPalIndex,X               ;E3CF|----/----\----;1D8CE1  ;
                      STA.W !OAMTileAttr+$100,Y           ;E3D2|----/----\----;990303  ;
                      STA.W !OAMTileAttr+$104,Y           ;E3D5|----/----\----;990703  ;
                      STA.W !OAMTileAttr+$10C,Y           ;E3D8|----/----\----;990F03  ;
                      STA.W !OAMTileAttr+$110,Y           ;E3DB|----/----\----;991303  ;
                      STA.W !OAMTileAttr+$F8,Y            ;E3DE|----/----\----;99FB02  ;
                      STA.W !OAMTileAttr+$FC,Y            ;E3E1|----/----\----;99FF02  ;
                      LDX.B !_4                           ;E3E4|----/----\----;A604    ;
                      CPX.B #$E8                          ;E3E6|----/----\----;E0E8    ;
                      BNE +                               ;E3E8|----/----\----;D002    ;
                      EOR.B #$40                          ;E3EA|----/----\----;4940    ;
                    + STA.W !OAMTileAttr+$108,Y           ;E3EC|----/----\----;990B03  ;
                      JSR CODE_00E45D                     ;E3EF|----/----\----;205DE4  ;
                      JSR CODE_00E45D                     ;E3F2|----/----\----;205DE4  ;
                      JSR CODE_00E45D                     ;E3F5|----/----\----;205DE4  ;
                      JSR CODE_00E45D                     ;E3F8|----/----\----;205DE4  ;
                      LDA.B !Powerup                      ;E3FB|----/----\----;A519    ;
                      CMP.B #$02                          ;E3FD|----/----\----;C902    ;
                      BNE CODE_00E458                     ;E3FF|----/----\----;D057    ;
                      PHY                                 ;E401|----/----\----;5A      ;
                      LDA.B #$2C                          ;E402|----/----\----;A92C    ;
                      STA.B !_6                           ;E404|----/----\----;8506    ;
                      LDX.W !PlayerPose                   ;E406|----/----\----;AEE013  ;
                      LDA.W DATA_00E18E,X                 ;E409|----/----\----;BD8EE1  ;
                      TAX                                 ;E40C|----/----\----;AA      ;
                      LDA.W DATA_00E1D7,X                 ;E40D|----/----\----;BDD7E1  ;
                      STA.B !_D                           ;E410|----/----\----;850D    ;
                      LDA.W DATA_00E1D8,X                 ;E412|----/----\----;BDD8E1  ;
                      STA.B !_E                           ;E415|----/----\----;850E    ;
                      LDA.W DATA_00E1D5,X                 ;E417|----/----\----;BDD5E1  ;
                      STA.B !_C                           ;E41A|----/----\----;850C    ;
                      CMP.B #$04                          ;E41C|----/----\----;C904    ;
                      BCS CODE_00E432                     ;E41E|----/----\----;B012    ;
                      LDA.W !PlayerCapePose               ;E420|----/----\----;ADDF13  ;
                      ASL A                               ;E423|----/----\----;0A      ;
                      ASL A                               ;E424|----/----\----;0A      ;
                      ORA.B !_C                           ;E425|----/----\----;050C    ;
                      TAY                                 ;E427|----/----\----;A8      ;
                      LDA.W DATA_00E23A,Y                 ;E428|----/----\----;B93AE2  ;
                      STA.B !_C                           ;E42B|----/----\----;850C    ;
                      LDA.W DATA_00E266,Y                 ;E42D|----/----\----;B966E2  ;
                      BRA +                               ;E430|----/----\----;8003    ;
                                                          ;                   ;        ;
CODE_00E432:          LDA.W DATA_00E1D6,X                 ;E432|----/----\----;BDD6E1  ;
                    + ORA.B !PlayerDirection              ;E435|----/----\----;0576    ;
                      TAY                                 ;E437|----/----\----;A8      ;
                      LDA.W DATA_00E21A,Y                 ;E438|----/----\----;B91AE2  ;
                      STA.B !_5                           ;E43B|----/----\----;8505    ;
                      PLY                                 ;E43D|----/----\----;7A      ;
                      LDA.W DATA_00E1D4,X                 ;E43E|----/----\----;BDD4E1  ;
                      TSB.B !PlayerHiddenTiles            ;E441|----/----\----;0478    ;
                      BMI +                               ;E443|----/----\----;3003    ;
                      JSR CODE_00E45D                     ;E445|----/----\----;205DE4  ;
                    + LDX.W !PlayerBehindNet              ;E448|----/----\----;AEF913  ;
                      LDY.W DATA_00E2B6,X                 ;E44B|----/----\----;BCB6E2  ;
                      JSR CODE_00E45D                     ;E44E|----/----\----;205DE4  ;
                      LDA.B !_E                           ;E451|----/----\----;A50E    ;
                      STA.B !_6                           ;E453|----/----\----;8506    ;
                      JSR CODE_00E45D                     ;E455|----/----\----;205DE4  ;
CODE_00E458:          JSR CODE_00F636                     ;E458|----/----\----;2036F6  ;
                      PLB                                 ;E45B|----/----\----;AB      ;
                      RTL                                 ;E45C|----/----\----;6B      ; Return 
                                                          ;                   ;        ;
CODE_00E45D:          LSR.B !PlayerHiddenTiles            ;E45D|----/----\----;4678    ;
                      BCS +                               ;E45F|----/----\----;B03E    ;
                      LDX.B !_6                           ;E461|----/----\----;A606    ;
                      LDA.W Mario8x8Tiles,X               ;E463|----/----\----;BDDADF  ;
                      BMI +                               ;E466|----/----\----;3037    ;
                      STA.W !OAMTileNo+$100,Y             ;E468|----/----\----;990203  ;
                      LDX.B !_5                           ;E46B|----/----\----;A605    ;
                      REP #$20                            ;E46D|----/----\----;C220    ; Accum (16 bit) 
                      LDA.B !PlayerYPosScrRel             ;E46F|----/----\----;A580    ;
                      CLC                                 ;E471|----/----\----;18      ;
                      ADC.W DATA_00DE32,X                 ;E472|----/----\----;7D32DE  ;
                      PHA                                 ;E475|----/----\----;48      ;
                      CLC                                 ;E476|----/----\----;18      ;
                      ADC.W #$0010                        ;E477|----/----\----;691000  ;
                      CMP.W #$0100                        ;E47A|----/----\----;C90001  ;
                      PLA                                 ;E47D|----/----\----;68      ;
                      SEP #$20                            ;E47E|----/----\----;E220    ; Accum (8 bit) 
                      BCS +                               ;E480|----/----\----;B01D    ;
                      STA.W !OAMTileYPos+$100,Y           ;E482|----/----\----;990103  ;
                      REP #$20                            ;E485|----/----\----;C220    ; Accum (16 bit) 
                      LDA.B !PlayerXPosScrRel             ;E487|----/----\----;A57E    ;
                      CLC                                 ;E489|----/----\----;18      ;
                      ADC.W DATA_00DD4E,X                 ;E48A|----/----\----;7D4EDD  ;
                      PHA                                 ;E48D|----/----\----;48      ;
                      CLC                                 ;E48E|----/----\----;18      ;
                      ADC.W #$0080                        ;E48F|----/----\----;698000  ;
                      CMP.W #$0200                        ;E492|----/----\----;C90002  ;
                      PLA                                 ;E495|----/----\----;68      ;
                      SEP #$20                            ;E496|----/----\----;E220    ; Accum (8 bit) 
                      BCS +                               ;E498|----/----\----;B005    ;
                      STA.W !OAMTileXPos+$100,Y           ;E49A|----/----\----;990003  ;
                      XBA                                 ;E49D|----/----\----;EB      ;
                      LSR A                               ;E49E|----/----\----;4A      ;
                    + PHP                                 ;E49F|----/----\----;08      ;
                      TYA                                 ;E4A0|----/----\----;98      ;
                      LSR A                               ;E4A1|----/----\----;4A      ;
                      LSR A                               ;E4A2|----/----\----;4A      ;
                      TAX                                 ;E4A3|----/----\----;AA      ;
                      ASL.B !_4                           ;E4A4|----/----\----;0604    ;
                      ROL A                               ;E4A6|----/----\----;2A      ;
                      PLP                                 ;E4A7|----/----\----;28      ;
                      ROL A                               ;E4A8|----/----\----;2A      ;
                      AND.B #$03                          ;E4A9|----/----\----;2903    ;
                      STA.W !OAMTileSize+$40,X            ;E4AB|----/----\----;9D6004  ;
                      INY                                 ;E4AE|----/----\----;C8      ;
                      INY                                 ;E4AF|----/----\----;C8      ;
                      INY                                 ;E4B0|----/----\----;C8      ;
                      INY                                 ;E4B1|----/----\----;C8      ;
                      INC.B !_5                           ;E4B2|----/----\----;E605    ;
                      INC.B !_5                           ;E4B4|----/----\----;E605    ;
                      INC.B !_6                           ;E4B6|----/----\----;E606    ;
                      RTS                                 ;E4B8|----/----\----;60      ; Return 
                                                          ;                   ;        ;
                                                          ;                   ;        ;
DATA_00E4B9:          db $08,$08,$08,$08,$10,$10,$10,$10  ;E4B9|----/----\----;        ;
                      db $18,$18,$20,$20,$28,$30,$08,$10  ;E4C1|----/----\----;        ;
                      db $00,$00,$28,$00,$00,$00,$00,$00  ;E4C9|----/----\----;        ;
                      db $38,$50,$48,$40,$58,$58,$60,$60  ;E4D1|----/----\----;        ;
                      db $00                              ;E4D9|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00E4DA:          db $10,$10,$10,$10,$10,$10,$10,$10  ;E4DA|----/----\----;        ;
                      db $20,$20,$20,$20,$30,$30,$40,$30  ;E4E2|----/----\----;        ;
                      db $30,$30,$30,$00,$00,$00,$00,$00  ;E4EA|----/----\----;        ;
                      db $30,$30,$30,$30,$40,$40,$40,$40  ;E4F2|----/----\----;        ;
                      db $00                              ;E4FA|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00E4FB:          db $00,$00,$00,$00,$00,$00,$00,$00  ;E4FB|----/----\----;        ;
                      db $EC,$EC,$EE,$EE,$DA,$DA,$00,$00  ;E503|----/----\----;        ;
                      db $00,$00,$00,$00,$00,$00,$00,$00  ;E50B|----/----\----;        ;
                      db $DA,$DA,$DA,$DA,$00,$00,$00,$00  ;E513|----/----\----;        ;
                      db $00                              ;E51B|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00E51C:          db $08,$08,$08,$08,$08,$08,$08,$08  ;E51C|----/----\----;        ;
                      db $09,$09,$09,$09,$0B,$0B,$0B,$0B  ;E524|----/----\----;        ;
                      db $0B,$0B,$0B,$00,$00,$00,$00,$00  ;E52C|----/----\----;        ;
                      db $0B,$0B,$0B,$0B,$14,$14,$14,$14  ;E534|----/----\----;        ;
                      db $06                              ;E53C|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00E53D:          db $FF,$FF,$FF,$FF,$01,$01,$01,$01  ;E53D|----/----\----;        ;
                      db $FE,$FE,$02,$02,$FD,$03,$FD,$03  ;E545|----/----\----;        ;
                      db $FD,$03,$FD,$00,$00,$00,$00,$00  ;E54D|----/----\----;        ;
                      db $08,$08,$F8,$F8,$FC,$FC,$04,$04  ;E555|----/----\----;        ;
                      db $00,$00,$00,$00,$00,$00,$01,$01  ;E55D|----/----\----;        ;
                      db $01,$01,$01,$02,$02,$02,$02,$02  ;E565|----/----\----;        ;
                      db $03,$03,$03,$03,$03,$04,$04,$04  ;E56D|----/----\----;        ;
                      db $04,$04,$05,$05,$05,$05,$05,$06  ;E575|----/----\----;        ;
                      db $06,$06,$06,$06,$07,$07,$07,$07  ;E57D|----/----\----;        ;
                      db $07,$08,$08,$08,$08,$08,$09,$09  ;E585|----/----\----;        ;
                      db $09,$09,$09,$0A,$0A,$0A,$0A,$0A  ;E58D|----/----\----;        ;
                      db $0B,$0B,$0B,$0B,$0B,$0C,$0C,$0C  ;E595|----/----\----;        ;
                      db $0C,$0C,$0D,$0D,$0D,$0D,$0D,$0E  ;E59D|----/----\----;        ;
                      db $0F,$10,$11,$03,$03,$04,$04,$09  ;E5A5|----/----\----;        ;
                      db $09,$0A,$0A,$0C,$0C,$0D,$0D,$12  ;E5AD|----/----\----;        ;
                      db $13,$14,$15,$16,$17,$1C,$1D,$1E  ;E5B5|----/----\----;        ;
                      db $1F,$18,$19,$1A,$1B,$08,$09,$0A  ;E5BD|----/----\----;        ;
                      db $0B,$0C,$0D,$00,$00,$00,$00,$00  ;E5C5|----/----\----;        ;
                      db $01,$01,$01,$01,$01,$02,$02,$02  ;E5CD|----/----\----;        ;
                      db $02,$02,$03,$03,$03,$03,$03,$04  ;E5D5|----/----\----;        ;
                      db $04,$04,$04,$04,$05,$05,$05,$05  ;E5DD|----/----\----;        ;
                      db $05,$06,$06,$06,$06,$06,$07,$07  ;E5E5|----/----\----;        ;
                      db $07,$07,$07,$08,$08,$08,$08,$08  ;E5ED|----/----\----;        ;
                      db $09,$09,$09,$09,$09,$0A,$0A,$0A  ;E5F5|----/----\----;        ;
                      db $0A,$0A,$0B,$0B,$0B,$0B,$0B,$0C  ;E5FD|----/----\----;        ;
                      db $0C,$0C,$0C,$0C,$0D,$0D,$0D,$0D  ;E605|----/----\----;        ;
                      db $0D,$0E,$0F,$10,$11,$03,$03,$04  ;E60D|----/----\----;        ;
                      db $04,$09,$09,$0A,$0A,$0C,$0C,$0D  ;E615|----/----\----;        ;
                      db $0D,$0C,$0D,$0D,$0C,$16,$17,$1C  ;E61D|----/----\----;        ;
                      db $1D,$1E,$1F,$18,$19,$1A,$1B,$08  ;E625|----/----\----;        ;
                      db $09,$0A,$0B,$0C,$0D              ;E62D|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00E632:          db $0F,$0F,$0F,$0F,$0E,$0E,$0E,$0E  ;E632|----/----\----;        ;
                      db $0D,$0D,$0D,$0D,$0C,$0C,$0C,$0C  ;E63A|----/----\----;        ;
                      db $0B,$0B,$0B,$0B,$0A,$0A,$0A,$0A  ;E642|----/----\----;        ;
                      db $09,$09,$09,$09,$08,$08,$08,$08  ;E64A|----/----\----;        ;
                      db $07,$07,$07,$07,$06,$06,$06,$06  ;E652|----/----\----;        ;
                      db $05,$05,$05,$05,$04,$04,$04,$04  ;E65A|----/----\----;        ;
                      db $03,$03,$03,$03,$02,$02,$02,$02  ;E662|----/----\----;        ;
                      db $01,$01,$01,$01,$00,$00,$00,$00  ;E66A|----/----\----;        ;
                      db $00,$00,$00,$00,$01,$01,$01,$01  ;E672|----/----\----;        ;
                      db $02,$02,$02,$02,$03,$03,$03,$03  ;E67A|----/----\----;        ;
                      db $04,$04,$04,$04,$05,$05,$05,$05  ;E682|----/----\----;        ;
                      db $06,$06,$06,$06,$07,$07,$07,$07  ;E68A|----/----\----;        ;
                      db $08,$08,$08,$08,$09,$09,$09,$09  ;E692|----/----\----;        ;
                      db $0A,$0A,$0A,$0A,$0B,$0B,$0B,$0B  ;E69A|----/----\----;        ;
                      db $0C,$0C,$0C,$0C,$0D,$0D,$0D,$0D  ;E6A2|----/----\----;        ;
                      db $0E,$0E,$0E,$0E,$0F,$0F,$0F,$0F  ;E6AA|----/----\----;        ;
                      db $0F,$0F,$0E,$0E,$0D,$0D,$0C,$0C  ;E6B2|----/----\----;        ;
                      db $0B,$0B,$0A,$0A,$09,$09,$08,$08  ;E6BA|----/----\----;        ;
                      db $07,$07,$06,$06,$05,$05,$04,$04  ;E6C2|----/----\----;        ;
                      db $03,$03,$02,$02,$01,$01,$00,$00  ;E6CA|----/----\----;        ;
                      db $00,$00,$01,$01,$02,$02,$03,$03  ;E6D2|----/----\----;        ;
                      db $04,$04,$05,$05,$06,$06,$07,$07  ;E6DA|----/----\----;        ;
                      db $08,$08,$09,$09,$0A,$0A,$0B,$0B  ;E6E2|----/----\----;        ;
                      db $0C,$0C,$0D,$0D,$0E,$0E,$0F,$0F  ;E6EA|----/----\----;        ;
                      db $0F,$0E,$0D,$0C,$0B,$0A,$09,$08  ;E6F2|----/----\----;        ;
                      db $07,$06,$05,$04,$03,$02,$01,$00  ;E6FA|----/----\----;        ;
                      db $00,$01,$02,$03,$04,$05,$06,$07  ;E702|----/----\----;        ;
                      db $08,$09,$0A,$0B,$0C,$0D,$0E,$0F  ;E70A|----/----\----;        ;
                      db $0F,$0E,$0D,$0C,$0B,$0A,$09,$08  ;E712|----/----\----;        ;
                      db $07,$06,$05,$04,$03,$02,$01,$00  ;E71A|----/----\----;        ;
                      db $00,$01,$02,$03,$04,$05,$06,$07  ;E722|----/----\----;        ;
                      db $08,$09,$0A,$0B,$0C,$0D,$0E,$0F  ;E72A|----/----\----;        ;
                      db $08,$06,$04,$03,$02,$02,$01,$01  ;E732|----/----\----;        ;
                      db $00,$00,$00,$00,$00,$00,$00,$00  ;E73A|----/----\----;        ;
                      db $00,$00,$00,$00,$00,$00,$00,$00  ;E742|----/----\----;        ;
                      db $01,$01,$02,$02,$03,$04,$06,$08  ;E74A|----/----\----;        ;
                      db $FF,$FE,$FD,$FC,$FB,$FA,$F9,$F8  ;E752|----/----\----;        ;
                      db $F7,$F6,$F5,$F4,$F3,$F2,$F1,$F0  ;E75A|----/----\----;        ;
                      db $F0,$F1,$F2,$F3,$F4,$F5,$F6,$F7  ;E762|----/----\----;        ;
                      db $F8,$F9,$FA,$FB,$FC,$FD,$FE,$FF  ;E76A|----/----\----;        ;
                      db $FF,$FF,$FE,$FE,$FD,$FD,$FC,$FC  ;E772|----/----\----;        ;
                      db $FB,$FB,$FA,$FA,$F9,$F9,$F8,$F8  ;E77A|----/----\----;        ;
                      db $F7,$F7,$F6,$F6,$F5,$F5,$F4,$F4  ;E782|----/----\----;        ;
                      db $F3,$F3,$F2,$F2,$F1,$F1,$F0,$F0  ;E78A|----/----\----;        ;
                      db $F0,$F0,$F1,$F1,$F2,$F2,$F3,$F3  ;E792|----/----\----;        ;
                      db $F4,$F4,$F5,$F5,$F6,$F6,$F7,$F7  ;E79A|----/----\----;        ;
                      db $F8,$F8,$F9,$F9,$FA,$FA,$FB,$FB  ;E7A2|----/----\----;        ;
                      db $FC,$FC,$FD,$FD,$FE,$FE,$FF,$FF  ;E7AA|----/----\----;        ;
                      db $0F,$0E,$0D,$0C,$0B,$0A,$09,$08  ;E7B2|----/----\----;        ;
                      db $07,$06,$05,$04,$03,$02,$01,$00  ;E7BA|----/----\----;        ;
                      db $00,$01,$02,$03,$04,$05,$06,$07  ;E7C2|----/----\----;        ;
                      db $08,$09,$0A,$0B,$0C,$0D,$0E,$0F  ;E7CA|----/----\----;        ;
                      db $00,$01,$02,$03,$04,$05,$06,$07  ;E7D2|----/----\----;        ;
                      db $08,$09,$0A,$0B,$0C,$0D,$0E,$0F  ;E7DA|----/----\----;        ;
                      db $0F,$0E,$0D,$0C,$0B,$0A,$09,$08  ;E7E2|----/----\----;        ;
                      db $07,$06,$05,$04,$03,$02,$01,$00  ;E7EA|----/----\----;        ;
                      db $10,$10,$10,$10,$10,$10,$10,$10  ;E7F2|----/----\----;        ;
                      db $0E,$0C,$0A,$08,$06,$04,$02,$00  ;E7FA|----/----\----;        ;
                      db $0E,$0C,$0A,$08,$06,$04,$02,$00  ;E802|----/----\----;        ;
                      db $FE,$FC,$FA,$F8,$F6,$F4,$F2,$F0  ;E80A|----/----\----;        ;
                      db $00,$02,$04,$06,$08,$0A,$0C,$0E  ;E812|----/----\----;        ;
                      db $10,$10,$10,$10,$10,$10,$10,$10  ;E81A|----/----\----;        ;
                      db $F0,$F2,$F4,$F6,$F8,$FA,$FC,$FE  ;E822|----/----\----;        ;
                      db $00,$02,$04,$06,$08,$0A          ;E82A|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00E830:          db $0C,$0E,$08,$00,$0E,$00,$0E,$00  ;E830|----/----\----;        ;
                      db $08,$00,$05,$00,$0B,$00,$08,$00  ;E838|----/----\----;        ;
                      db $02,$00,$02,$00,$08,$00,$0B,$00  ;E840|----/----\----;        ;
                      db $05,$00,$08,$00,$0E,$00,$0E,$00  ;E848|----/----\----;        ;
                      db $08,$00,$05,$00,$0B,$00,$08,$00  ;E850|----/----\----;        ;
                      db $02,$00,$02,$00,$08,$00,$0B,$00  ;E858|----/----\----;        ;
                      db $05,$00,$08,$00,$0E,$00,$0E,$00  ;E860|----/----\----;        ;
                      db $08,$00,$05,$00,$0B,$00,$08,$00  ;E868|----/----\----;        ;
                      db $02,$00,$02,$00,$08,$00,$0B,$00  ;E870|----/----\----;        ;
                      db $05,$00,$08,$00,$0E,$00,$0E,$00  ;E878|----/----\----;        ;
                      db $08,$00,$05,$00,$0B,$00,$08,$00  ;E880|----/----\----;        ;
                      db $02,$00,$02,$00,$08,$00,$0B,$00  ;E888|----/----\----;        ;
                      db $05,$00,$10,$00,$20,$00,$07,$00  ;E890|----/----\----;        ;
                      db $00,$00,$F0,$FF                  ;E898|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00E89C:          db $08,$00,$18,$00,$1A,$00,$16,$00  ;E89C|----/----\----;        ;
DATA_00E8A4:          db $10,$00,$20,$00,$20,$00,$18,$00  ;E8A4|----/----\----;        ;
                      db $1A,$00,$16,$00,$10,$00,$20,$00  ;E8AC|----/----\----;        ;
                      db $20,$00,$12,$00,$1A,$00,$0F,$00  ;E8B4|----/----\----;        ;
                      db $08,$00,$20,$00,$20,$00,$12,$00  ;E8BC|----/----\----;        ;
                      db $1A,$00,$0F,$00,$08,$00,$20,$00  ;E8C4|----/----\----;        ;
                      db $20,$00,$1D,$00,$28,$00,$19,$00  ;E8CC|----/----\----;        ;
                      db $13,$00,$30,$00,$30,$00,$1D,$00  ;E8D4|----/----\----;        ;
                      db $28,$00,$19,$00,$13,$00,$30,$00  ;E8DC|----/----\----;        ;
                      db $30,$00,$1A,$00,$28,$00,$16,$00  ;E8E4|----/----\----;        ;
                      db $10,$00,$30,$00,$30,$00,$1A,$00  ;E8EC|----/----\----;        ;
                      db $28,$00,$16,$00,$10,$00,$30,$00  ;E8F4|----/----\----;        ;
                      db $30,$00,$18,$00,$18,$00,$18,$00  ;E8FC|----/----\----;        ;
                      db $18,$00,$18,$00,$18,$00          ;E904|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00E90A:          db $01,$02,$11                      ;E90A|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00E90D:          db $FF                              ;E90D|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00E90E:          db $FF,$01,$00                      ;E90E|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00E911:          db $02,$0D                          ;E911|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00E913:          db $01,$00,$FF,$FF,$01,$00,$01,$00  ;E913|----/----\----;        ;
                      db $FF,$FF,$FF,$FF                  ;E91B|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00E91F:          db $00,$00,$00,$00,$FF,$FF,$01,$00  ;E91F|----/----\----;        ;
                      db $FF,$FF,$01,$00                  ;E927|----/----\----;        ;
                                                          ;                   ;        ;
CODE_00E92B:          JSR CODE_00EAA6                     ;E92B|----/----\----;20A6EA  ;
                      LDA.W !PlayerDisableObjInt          ;E92E|----/----\----;AD5C18  ;
                      BEQ CODE_00E938                     ;E931|----/----\----;F005    ;
                      JSR CODE_00EE1D                     ;E933|----/----\----;201DEE  ;
                      BRA CODE_00E98C                     ;E936|----/----\----;8054    ;
                                                          ;                   ;        ;
CODE_00E938:          LDA.W !PlayerIsOnGround             ;E938|----/----\----;ADEF13  ;
                      STA.B !GraphicsUncompPtr            ;E93B|----/----\----;858D    ;
                      STZ.W !PlayerIsOnGround             ;E93D|----/----\----;9CEF13  ;
                      LDA.B !PlayerInAir                  ;E940|----/----\----;A572    ;
                      STA.B !GraphicsUncompPtr+2          ;E942|----/----\----;858F    ;
                      LDA.B !ScreenMode                   ;E944|----/----\----;A55B    ;
                      BPL +                               ;E946|----/----\----;1030    ;
                      AND.B #$82                          ;E948|----/----\----;2982    ;
                      STA.B !GraphicsUncompPtr+1          ;E94A|----/----\----;858E    ;
                      LDA.B #$01                          ;E94C|----/----\----;A901    ;
                      STA.W !LayerProcessing              ;E94E|----/----\----;8D3319  ;
                      REP #$20                            ;E951|----/----\----;C220    ; Accum (16 bit) 
                      LDA.B !PlayerXPosNext               ;E953|----/----\----;A594    ;
                      CLC                                 ;E955|----/----\----;18      ;
                      ADC.B !Layer23XRelPos               ;E956|----/----\----;6526    ;
                      STA.B !PlayerXPosNext               ;E958|----/----\----;8594    ;
                      LDA.B !PlayerYPosNext               ;E95A|----/----\----;A596    ;
                      CLC                                 ;E95C|----/----\----;18      ;
                      ADC.B !Layer23YRelPos               ;E95D|----/----\----;6528    ;
                      STA.B !PlayerYPosNext               ;E95F|----/----\----;8596    ;
                      SEP #$20                            ;E961|----/----\----;E220    ; Accum (8 bit) 
                      JSR CODE_00EADB                     ;E963|----/----\----;20DBEA  ;
                      REP #$20                            ;E966|----/----\----;C220    ; Accum (16 bit) 
                      LDA.B !PlayerXPosNext               ;E968|----/----\----;A594    ;
                      SEC                                 ;E96A|----/----\----;38      ;
                      SBC.B !Layer23XRelPos               ;E96B|----/----\----;E526    ;
                      STA.B !PlayerXPosNext               ;E96D|----/----\----;8594    ;
                      LDA.B !PlayerYPosNext               ;E96F|----/----\----;A596    ;
                      SEC                                 ;E971|----/----\----;38      ;
                      SBC.B !Layer23YRelPos               ;E972|----/----\----;E528    ;
                      STA.B !PlayerYPosNext               ;E974|----/----\----;8596    ;
                      SEP #$20                            ;E976|----/----\----;E220    ; Accum (8 bit) 
                    + ASL.W !PlayerIsOnGround             ;E978|----/----\----;0EEF13  ;
                      LDA.B !ScreenMode                   ;E97B|----/----\----;A55B    ;
                      AND.B #$41                          ;E97D|----/----\----;2941    ;
                      STA.B !GraphicsUncompPtr+1          ;E97F|----/----\----;858E    ;
                      ASL A                               ;E981|----/----\----;0A      ;
                      BMI CODE_00E98C                     ;E982|----/----\----;3008    ;
                      STZ.W !LayerProcessing              ;E984|----/----\----;9C3319  ;
                      ASL.B !GraphicsUncompPtr            ;E987|----/----\----;068D    ;
                      JSR CODE_00EADB                     ;E989|----/----\----;20DBEA  ;
CODE_00E98C:          LDA.W !SideExitEnabled              ;E98C|----/----\----;AD961B  ;
                      BEQ CODE_00E9A1                     ;E98F|----/----\----;F010    ;
                      REP #$20                            ;E991|----/----\----;C220    ; Accum (16 bit) 
                      LDA.B !PlayerXPosScrRel             ;E993|----/----\----;A57E    ;
                      CMP.W #$00FA                        ;E995|----/----\----;C9FA00  ;
                      SEP #$20                            ;E998|----/----\----;E220    ; Accum (8 bit) 
                      BCC CODE_00E9FB                     ;E99A|----/----\----;905F    ;
                      JSL SubSideExit                     ;E99C|----/----\----;2260B105;
                      RTS                                 ;E9A0|----/----\----;60      ; Return 
                                                          ;                   ;        ;
CODE_00E9A1:          LDA.B !PlayerXPosScrRel             ;E9A1|----/----\----;A57E    ;
                      CMP.B #$F0                          ;E9A3|----/----\----;C9F0    ;
                      BCS CODE_00EA08                     ;E9A5|----/----\----;B061    ;
                      LDA.B !PlayerBlockedDir             ;E9A7|----/----\----;A577    ;
                      AND.B #$03                          ;E9A9|----/----\----;2903    ;
                      BNE CODE_00E9FB                     ;E9AB|----/----\----;D04E    ;
                      REP #$20                            ;E9AD|----/----\----;C220    ; Accum (16 bit) 
                      LDY.B #$00                          ;E9AF|----/----\----;A000    ;
                      LDA.W !NextLayer1XPos               ;E9B1|----/----\----;AD6214  ;
                      CLC                                 ;E9B4|----/----\----;18      ;
                      ADC.W #$00E8                        ;E9B5|----/----\----;69E800  ;
                      CMP.B !PlayerXPosNext               ;E9B8|----/----\----;C594    ;
                      BEQ CODE_00E9C8                     ;E9BA|----/----\----;F00C    ;
                      BMI CODE_00E9C8                     ;E9BC|----/----\----;300A    ;
                      INY                                 ;E9BE|----/----\----;C8      ;
                      LDA.B !PlayerXPosNext               ;E9BF|----/----\----;A594    ;
                      SEC                                 ;E9C1|----/----\----;38      ;
                      SBC.W #$0008                        ;E9C2|----/----\----;E90800  ;
                      CMP.W !NextLayer1XPos               ;E9C5|----/----\----;CD6214  ;
CODE_00E9C8:          SEP #$20                            ;E9C8|----/----\----;E220    ; Accum (8 bit) 
                      BEQ CODE_00E9FB                     ;E9CA|----/----\----;F02F    ;
                      BPL CODE_00E9FB                     ;E9CC|----/----\----;102D    ;
                      LDA.W !HorizLayer1Setting           ;E9CE|----/----\----;AD1114  ;
                      BNE +                               ;E9D1|----/----\----;D023    ;
                      LDA.B #$80                          ;E9D3|----/----\----;A980    ;
                      TSB.B !PlayerBlockedDir             ;E9D5|----/----\----;0477    ;
                      REP #$20                            ;E9D7|----/----\----;C220    ; Accum (16 bit) 
                      LDA.W !Layer1ScrollXSpeed           ;E9D9|----/----\----;AD4614  ;
                      LSR A                               ;E9DC|----/----\----;4A      ;
                      LSR A                               ;E9DD|----/----\----;4A      ;
                      LSR A                               ;E9DE|----/----\----;4A      ;
                      LSR A                               ;E9DF|----/----\----;4A      ;
                      SEP #$20                            ;E9E0|----/----\----;E220    ; Accum (8 bit) 
                      STA.B !_0                           ;E9E2|----/----\----;8500    ;
                      SEC                                 ;E9E4|----/----\----;38      ;
                      SBC.B !PlayerXSpeed                 ;E9E5|----/----\----;E57B    ;
                      EOR.W DATA_00E90E,Y                 ;E9E7|----/----\----;590EE9  ;
                      BMI +                               ;E9EA|----/----\----;300A    ;
                      LDA.B !_0                           ;E9EC|----/----\----;A500    ;
                      STA.B !PlayerXSpeed                 ;E9EE|----/----\----;857B    ;
                      LDA.W !Layer1ScrollXPosUpd          ;E9F0|----/----\----;AD4E14  ;
                      STA.W !PlayerXSpeedFPSpx            ;E9F3|----/----\----;8DDA13  ;
                    + LDA.W DATA_00E90A,Y                 ;E9F6|----/----\----;B90AE9  ;
                      TSB.B !PlayerBlockedDir             ;E9F9|----/----\----;0477    ;
CODE_00E9FB:          LDA.B !PlayerBlockedDir             ;E9FB|----/----\----;A577    ;
                      AND.B #$1C                          ;E9FD|----/----\----;291C    ;
                      CMP.B #$1C                          ;E9FF|----/----\----;C91C    ;
                      BNE CODE_00EA0D                     ;EA01|----/----\----;D00A    ;
                      LDA.W !StandOnSolidSprite           ;EA03|----/----\----;AD7114  ;
                      BNE CODE_00EA0D                     ;EA06|----/----\----;D005    ;
CODE_00EA08:          JSR CODE_00F629                     ;EA08|----/----\----;2029F6  ;
                      BRA CODE_00EA32                     ;EA0B|----/----\----;8025    ;
                                                          ;                   ;        ;
CODE_00EA0D:          LDA.B !PlayerBlockedDir             ;EA0D|----/----\----;A577    ;
                      AND.B #$03                          ;EA0F|----/----\----;2903    ;
                      BEQ +                               ;EA11|----/----\----;F021    ;
                      AND.B #$02                          ;EA13|----/----\----;2902    ;
                      TAY                                 ;EA15|----/----\----;A8      ;
                      REP #$20                            ;EA16|----/----\----;C220    ; Accum (16 bit) 
                      LDA.B !PlayerXPosNext               ;EA18|----/----\----;A594    ;
                      CLC                                 ;EA1A|----/----\----;18      ;
                      ADC.W DATA_00E90D,Y                 ;EA1B|----/----\----;790DE9  ;
                      STA.B !PlayerXPosNext               ;EA1E|----/----\----;8594    ;
                      SEP #$20                            ;EA20|----/----\----;E220    ; Accum (8 bit) 
                      LDA.B !PlayerBlockedDir             ;EA22|----/----\----;A577    ;
                      BMI +                               ;EA24|----/----\----;300E    ;
                      LDA.B #$03                          ;EA26|----/----\----;A903    ;
                      STA.W !PlayerPoseLenTimer           ;EA28|----/----\----;8DE513  ;
                      LDA.B !PlayerXSpeed                 ;EA2B|----/----\----;A57B    ;
                      EOR.W DATA_00E90D,Y                 ;EA2D|----/----\----;590DE9  ;
                      BPL +                               ;EA30|----/----\----;1002    ;
CODE_00EA32:          STZ.B !PlayerXSpeed                 ;EA32|----/----\----;647B    ;
                    + LDA.W !PlayerBehindNet              ;EA34|----/----\----;ADF913  ;
                      CMP.B #$01                          ;EA37|----/----\----;C901    ;
                      BNE +                               ;EA39|----/----\----;D007    ;
                      LDA.B !GraphicsCompPtr+1            ;EA3B|----/----\----;A58B    ;
                      BNE +                               ;EA3D|----/----\----;D003    ;
                      STZ.W !PlayerBehindNet              ;EA3F|----/----\----;9CF913  ;
                    + STZ.W !PlayerCanJumpWater           ;EA42|----/----\----;9CFA13  ;
                      LDA.B !LevelIsWater                 ;EA45|----/----\----;A585    ;
                      BNE CODE_00EA5E                     ;EA47|----/----\----;D015    ;
                      LSR.B !GraphicsCompPtr              ;EA49|----/----\----;468A    ;
                      BCC CODE_00EAA3                     ;EA4B|----/----\----;9056    ;
                      LDA.B !PlayerInWater                ;EA4D|----/----\----;A575    ;
                      BNE CODE_00EA65                     ;EA4F|----/----\----;D014    ;
                      LDA.B !PlayerYSpeed                 ;EA51|----/----\----;A57D    ;
                      BMI CODE_00EA65                     ;EA53|----/----\----;3010    ;
                      LSR.B !GraphicsCompPtr              ;EA55|----/----\----;468A    ;
                      BCC Return00EAA5                    ;EA57|----/----\----;904C    ;
                      JSR CODE_00FDA5                     ;EA59|----/----\----;20A5FD  ;
                      STZ.B !PlayerYSpeed                 ;EA5C|----/----\----;647D    ;
CODE_00EA5E:          LDA.B #$01                          ;EA5E|----/----\----;A901    ;
                      STA.B !PlayerInWater                ;EA60|----/----\----;8575    ;
CODE_00EA62:          JMP CODE_00FD08                     ;EA62|----/----\----;4C08FD  ;
                                                          ;                   ;        ;
CODE_00EA65:          LSR.B !GraphicsCompPtr              ;EA65|----/----\----;468A    ;
                      BCS CODE_00EA5E                     ;EA67|----/----\----;B0F5    ;
                      LDA.B !PlayerInWater                ;EA69|----/----\----;A575    ;
                      BEQ Return00EAA5                    ;EA6B|----/----\----;F038    ;
                      LDA.B #$FC                          ;EA6D|----/----\----;A9FC    ;
                      CMP.B !PlayerYSpeed                 ;EA6F|----/----\----;C57D    ;
                      BMI +                               ;EA71|----/----\----;3002    ;
                      STA.B !PlayerYSpeed                 ;EA73|----/----\----;857D    ;
                    + INC.W !PlayerCanJumpWater           ;EA75|----/----\----;EEFA13  ;
                      LDA.B !byetudlrHold                 ;EA78|----/----\----;A515    ;
                      AND.B #$88                          ;EA7A|----/----\----;2988    ;
                      CMP.B #$88                          ;EA7C|----/----\----;C988    ;
                      BNE CODE_00EA62                     ;EA7E|----/----\----;D0E2    ;
                      LDA.B !axlr0000Hold                 ;EA80|----/----\----;A517    ;
                      BPL +                               ;EA82|----/----\----;100E    ;
                      LDA.W !IsCarryingItem               ;EA84|----/----\----;AD8F14  ;
                      BNE +                               ;EA87|----/----\----;D009    ;
                      INC A                               ;EA89|----/----\----;1A      ;
                      STA.W !SpinJumpFlag                 ;EA8A|----/----\----;8D0D14  ;
                      LDA.B #$04                          ;EA8D|----/----\----;A904    ; \ Play sound effect 
                      STA.W !SPCIO3                       ;EA8F|----/----\----;8DFC1D  ; / 
                    + LDA.B !PlayerBlockedDir             ;EA92|----/----\----;A577    ;
                      AND.B #$08                          ;EA94|----/----\----;2908    ;
                      BNE CODE_00EA62                     ;EA96|----/----\----;D0CA    ;
                      JSR CODE_00FDA5                     ;EA98|----/----\----;20A5FD  ;
                      LDA.B #$0B                          ;EA9B|----/----\----;A90B    ;
                      STA.B !PlayerInAir                  ;EA9D|----/----\----;8572    ;
                      LDA.B #$AA                          ;EA9F|----/----\----;A9AA    ;
                      STA.B !PlayerYSpeed                 ;EAA1|----/----\----;857D    ;
CODE_00EAA3:          STZ.B !PlayerInWater                ;EAA3|----/----\----;6475    ;
Return00EAA5:         RTS                                 ;EAA5|----/----\----;60      ; Return 
                                                          ;                   ;        ;
CODE_00EAA6:          STZ.W !PlayerPoseLenTimer           ;EAA6|----/----\----;9CE513  ;
                      STZ.B !PlayerBlockedDir             ;EAA9|----/----\----;6477    ;
                      STZ.W !SlopeType                    ;EAAB|----/----\----;9CE113  ;
                      STZ.W !CurrentSlope                 ;EAAE|----/----\----;9CEE13  ;
                      STZ.B !GraphicsCompPtr              ;EAB1|----/----\----;648A    ;
                      STZ.B !GraphicsCompPtr+1            ;EAB3|----/----\----;648B    ;
                      STZ.W !Layer2Touched                ;EAB5|----/----\----;9C0E14  ;
                      RTS                                 ;EAB8|----/----\----;60      ; Return 
                                                          ;                   ;        ;
                                                          ;                   ;        ;
DATA_00EAB9:          db $DE,$23                          ;EAB9|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00EABB:          db $20,$E0                          ;EABB|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00EABD:          db $08,$00,$F8,$FF                  ;EABD|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00EAC1:          db $71,$72,$76,$77,$7B,$7C,$81,$86  ;EAC1|----/----\----;        ;
                      db $8A,$8B,$8F,$90,$94,$95,$99,$9A  ;EAC9|----/----\----;        ;
                      db $9E,$9F,$A3,$A4,$A8,$A9,$AD,$AE  ;EAD1|----/----\----;        ;
                      db $B2,$B3                          ;EAD9|----/----\----;        ;
                                                          ;                   ;        ;
CODE_00EADB:          LDA.B !PlayerYPosNext               ;EADB|----/----\----;A596    ;
                      AND.B #$0F                          ;EADD|----/----\----;290F    ;
                      STA.B !PlayerYPosInBlock            ;EADF|----/----\----;8590    ;
                      LDA.W !WallrunningType              ;EAE1|----/----\----;ADE313  ;
                      BNE +                               ;EAE4|----/----\----;D003    ;
                      JMP CODE_00EB77                     ;EAE6|----/----\----;4C77EB  ;
                                                          ;                   ;        ;
                    + AND.B #$01                          ;EAE9|----/----\----;2901    ;
                      TAY                                 ;EAEB|----/----\----;A8      ;
                      LDA.B !PlayerXSpeed                 ;EAEC|----/----\----;A57B    ;
                      SEC                                 ;EAEE|----/----\----;38      ;
                      SBC.W DATA_00EAB9,Y                 ;EAEF|----/----\----;F9B9EA  ;
                      EOR.W DATA_00EAB9,Y                 ;EAF2|----/----\----;59B9EA  ;
                      BMI CODE_00EB48                     ;EAF5|----/----\----;3051    ;
                      LDA.B !PlayerInAir                  ;EAF7|----/----\----;A572    ;
                      ORA.W !IsCarryingItem               ;EAF9|----/----\----;0D8F14  ;
                      ORA.B !PlayerIsDucking              ;EAFC|----/----\----;0573    ;
                      ORA.W !PlayerRidingYoshi            ;EAFE|----/----\----;0D7A18  ;
                      BNE CODE_00EB48                     ;EB01|----/----\----;D045    ;
                      LDA.W !WallrunningType              ;EB03|----/----\----;ADE313  ;
                      CMP.B #$06                          ;EB06|----/----\----;C906    ;
                      BCS CODE_00EB22                     ;EB08|----/----\----;B018    ;
                      LDX.B !PlayerYPosInBlock            ;EB0A|----/----\----;A690    ;
                      CPX.B #$08                          ;EB0C|----/----\----;E008    ;
                      BCC Return00EB76                    ;EB0E|----/----\----;9066    ;
                      CMP.B #$04                          ;EB10|----/----\----;C904    ;
                      BCS CODE_00EB73                     ;EB12|----/----\----;B05F    ;
                      ORA.B #$04                          ;EB14|----/----\----;0904    ;
                      STA.W !WallrunningType              ;EB16|----/----\----;8DE313  ;
CODE_00EB19:          LDA.B !PlayerXPosNext               ;EB19|----/----\----;A594    ;
                      AND.B #$F0                          ;EB1B|----/----\----;29F0    ;
                      ORA.B #$08                          ;EB1D|----/----\----;0908    ;
                      STA.B !PlayerXPosNext               ;EB1F|----/----\----;8594    ;
                      RTS                                 ;EB21|----/----\----;60      ; Return 
                                                          ;                   ;        ;
CODE_00EB22:          LDX.B #$60                          ;EB22|----/----\----;A260    ;
                      TYA                                 ;EB24|----/----\----;98      ;
                      BEQ +                               ;EB25|----/----\----;F002    ;
                      LDX.B #$66                          ;EB27|----/----\----;A266    ;
                    + JSR CODE_00EFE8                     ;EB29|----/----\----;20E8EF  ;
                      LDA.B !Powerup                      ;EB2C|----/----\----;A519    ;
                      BNE CODE_00EB34                     ;EB2E|----/----\----;D004    ;
                      INX                                 ;EB30|----/----\----;E8      ;
                      INX                                 ;EB31|----/----\----;E8      ;
                      BRA +                               ;EB32|----/----\----;8003    ;
                                                          ;                   ;        ;
CODE_00EB34:          JSR CODE_00EFE8                     ;EB34|----/----\----;20E8EF  ;
                    + JSR CODE_00F44D                     ;EB37|----/----\----;204DF4  ;
                      BNE CODE_00EB19                     ;EB3A|----/----\----;D0DD    ;
                      LDA.B #$02                          ;EB3C|----/----\----;A902    ;
                      TRB.W !WallrunningType              ;EB3E|----/----\----;1CE313  ;
                      RTS                                 ;EB41|----/----\----;60      ; Return 
                                                          ;                   ;        ;
ADDR_00EB42:          LDA.W !WallrunningType              ;EB42|----/----\----;ADE313  ;
                      AND.B #$01                          ;EB45|----/----\----;2901    ;
                      TAY                                 ;EB47|----/----\----;A8      ;
CODE_00EB48:          LDA.W DATA_00EABB,Y                 ;EB48|----/----\----;B9BBEA  ;
                      STA.B !PlayerXSpeed                 ;EB4B|----/----\----;857B    ;
                      TYA                                 ;EB4D|----/----\----;98      ;
                      ASL A                               ;EB4E|----/----\----;0A      ;
                      TAY                                 ;EB4F|----/----\----;A8      ;
                      REP #$20                            ;EB50|----/----\----;C220    ; Accum (16 bit) 
                      LDA.B !PlayerXPosNext               ;EB52|----/----\----;A594    ;
                      CLC                                 ;EB54|----/----\----;18      ;
                      ADC.W DATA_00EABD,Y                 ;EB55|----/----\----;79BDEA  ;
                      STA.B !PlayerXPosNext               ;EB58|----/----\----;8594    ;
                      LDA.W #$0008                        ;EB5A|----/----\----;A90800  ;
                      LDY.B !Powerup                      ;EB5D|----/----\----;A419    ;
                      BEQ +                               ;EB5F|----/----\----;F003    ;
                      LDA.W #$0010                        ;EB61|----/----\----;A91000  ;
                    + CLC                                 ;EB64|----/----\----;18      ;
                      ADC.B !PlayerYPosNext               ;EB65|----/----\----;6596    ;
                      STA.B !PlayerYPosNext               ;EB67|----/----\----;8596    ;
                      SEP #$20                            ;EB69|----/----\----;E220    ; Accum (8 bit) 
                      LDA.B #$24                          ;EB6B|----/----\----;A924    ;
                      STA.B !PlayerInAir                  ;EB6D|----/----\----;8572    ;
                      LDA.B #$E0                          ;EB6F|----/----\----;A9E0    ;
                      STA.B !PlayerYSpeed                 ;EB71|----/----\----;857D    ;
CODE_00EB73:          STZ.W !WallrunningType              ;EB73|----/----\----;9CE313  ;
Return00EB76:         RTS                                 ;EB76|----/----\----;60      ; Return 
                                                          ;                   ;        ;
CODE_00EB77:          LDX.B #$00                          ;EB77|----/----\----;A200    ;
                      LDA.B !Powerup                      ;EB79|----/----\----;A519    ;
                      BEQ +                               ;EB7B|----/----\----;F006    ;
                      LDA.B !PlayerIsDucking              ;EB7D|----/----\----;A573    ;
                      BNE +                               ;EB7F|----/----\----;D002    ;
                      LDX.B #$18                          ;EB81|----/----\----;A218    ;
                    + LDA.W !PlayerRidingYoshi            ;EB83|----/----\----;AD7A18  ;
                      BEQ +                               ;EB86|----/----\----;F005    ;
                      TXA                                 ;EB88|----/----\----;8A      ;
                      CLC                                 ;EB89|----/----\----;18      ;
                      ADC.B #$30                          ;EB8A|----/----\----;6930    ;
                      TAX                                 ;EB8C|----/----\----;AA      ;
                    + LDA.B !PlayerXPosNext               ;EB8D|----/----\----;A594    ;
                      AND.B #$0F                          ;EB8F|----/----\----;290F    ;
                      TAY                                 ;EB91|----/----\----;A8      ;
                      CLC                                 ;EB92|----/----\----;18      ;
                      ADC.B #$08                          ;EB93|----/----\----;6908    ;
                      AND.B #$0F                          ;EB95|----/----\----;290F    ;
                      STA.B !PlayerXPosInBlock            ;EB97|----/----\----;8592    ;
                      STZ.B !PlayerBlockXSide             ;EB99|----/----\----;6493    ;
                      CPY.B #$08                          ;EB9B|----/----\----;C008    ;
                      BCC +                               ;EB9D|----/----\----;9006    ;
                      TXA                                 ;EB9F|----/----\----;8A      ;
                      ADC.B #$0B                          ;EBA0|----/----\----;690B    ;
                      TAX                                 ;EBA2|----/----\----;AA      ;
                      INC.B !PlayerBlockXSide             ;EBA3|----/----\----;E693    ;
                    + LDA.B !PlayerYPosInBlock            ;EBA5|----/----\----;A590    ;
                      CLC                                 ;EBA7|----/----\----;18      ;
                      ADC.W DATA_00E8A4,X                 ;EBA8|----/----\----;7DA4E8  ;
                      AND.B #$0F                          ;EBAB|----/----\----;290F    ;
                      STA.B !PlayerBlockMoveY             ;EBAD|----/----\----;8591    ;
                      JSR CODE_00F44D                     ;EBAF|----/----\----;204DF4  ;
                      BEQ CODE_00EBDD                     ;EBB2|----/----\----;F029    ;
                      CPY.B #$11                          ;EBB4|----/----\----;C011    ;
                      BCC CODE_00EC24                     ;EBB6|----/----\----;906C    ;
                      CPY.B #$6E                          ;EBB8|----/----\----;C06E    ;
                      BCC CODE_00EBC9                     ;EBBA|----/----\----;900D    ;
                      TYA                                 ;EBBC|----/----\----;98      ;
                      JSL CODE_00F04D                     ;EBBD|----/----\----;224DF000;
                      BCC CODE_00EC24                     ;EBC1|----/----\----;9061    ;
                      LDA.B #$01                          ;EBC3|----/----\----;A901    ;
                      TSB.B !GraphicsCompPtr              ;EBC5|----/----\----;048A    ;
                      BRA CODE_00EC24                     ;EBC7|----/----\----;805B    ;
                                                          ;                   ;        ;
CODE_00EBC9:          INX                                 ;EBC9|----/----\----;E8      ;
                      INX                                 ;EBCA|----/----\----;E8      ;
                      INX                                 ;EBCB|----/----\----;E8      ;
                      INX                                 ;EBCC|----/----\----;E8      ;
                      TYA                                 ;EBCD|----/----\----;98      ;
                      LDY.B #$00                          ;EBCE|----/----\----;A000    ;
                      CMP.B #$1E                          ;EBD0|----/----\----;C91E    ;
                      BEQ +                               ;EBD2|----/----\----;F006    ;
                      CMP.B #$52                          ;EBD4|----/----\----;C952    ;
                      BEQ +                               ;EBD6|----/----\----;F002    ;
                      LDY.B #$02                          ;EBD8|----/----\----;A002    ;
                    + JMP CODE_00EC6F                     ;EBDA|----/----\----;4C6FEC  ;
                                                          ;                   ;        ;
CODE_00EBDD:          CPY.B #$9C                          ;EBDD|----/----\----;C09C    ;
                      BNE CODE_00EBE8                     ;EBDF|----/----\----;D007    ;
                      LDA.W !ObjectTileset                ;EBE1|----/----\----;AD3119  ;
                      CMP.B #$01                          ;EBE4|----/----\----;C901    ;
                      BEQ CODE_00EC06                     ;EBE6|----/----\----;F01E    ;
CODE_00EBE8:          CPY.B #$20                          ;EBE8|----/----\----;C020    ;
                      BEQ CODE_00EC01                     ;EBEA|----/----\----;F015    ;
                      CPY.B #$1F                          ;EBEC|----/----\----;C01F    ;
                      BEQ CODE_00EBFD                     ;EBEE|----/----\----;F00D    ;
                      LDA.W !BluePSwitchTimer             ;EBF0|----/----\----;ADAD14  ;
                      BEQ CODE_00EC21                     ;EBF3|----/----\----;F02C    ;
                      CPY.B #$28                          ;EBF5|----/----\----;C028    ;
                      BEQ CODE_00EC01                     ;EBF7|----/----\----;F008    ;
                      CPY.B #$27                          ;EBF9|----/----\----;C027    ;
                      BNE CODE_00EC21                     ;EBFB|----/----\----;D024    ;
CODE_00EBFD:          LDA.B !Powerup                      ;EBFD|----/----\----;A519    ;
                      BNE CODE_00EC24                     ;EBFF|----/----\----;D023    ;
CODE_00EC01:          JSR CODE_00F443                     ;EC01|----/----\----;2043F4  ;
                      BCS CODE_00EC24                     ;EC04|----/----\----;B01E    ;
CODE_00EC06:          LDA.B !GraphicsUncompPtr+2          ;EC06|----/----\----;A58F    ;
                      BNE CODE_00EC24                     ;EC08|----/----\----;D01A    ;
                      LDA.B !byetudlrFrame                ;EC0A|----/----\----;A516    ;
                      AND.B #$08                          ;EC0C|----/----\----;2908    ;
                      BEQ CODE_00EC24                     ;EC0E|----/----\----;F014    ;
                      LDA.B #$0F                          ;EC10|----/----\----;A90F    ; \ Play sound effect 
                      STA.W !SPCIO3                       ;EC12|----/----\----;8DFC1D  ; / 
                      JSR CODE_00D273                     ;EC15|----/----\----;2073D2  ;
                      LDA.B #$0D                          ;EC18|----/----\----;A90D    ;
                      STA.B !PlayerAnimation              ;EC1A|----/----\----;8571    ;
                      JSR NoButtons                       ;EC1C|----/----\----;202DF6  ;
                      BRA CODE_00EC24                     ;EC1F|----/----\----;8003    ;
                                                          ;                   ;        ;
CODE_00EC21:          JSR CODE_00F28C                     ;EC21|----/----\----;208CF2  ;
CODE_00EC24:          JSR CODE_00F44D                     ;EC24|----/----\----;204DF4  ;
                      BEQ CODE_00EC35                     ;EC27|----/----\----;F00C    ;
                      CPY.B #$11                          ;EC29|----/----\----;C011    ;
                      BCC CODE_00EC3A                     ;EC2B|----/----\----;900D    ;
                      CPY.B #$6E                          ;EC2D|----/----\----;C06E    ;
                      BCS CODE_00EC3A                     ;EC2F|----/----\----;B009    ;
                      INX                                 ;EC31|----/----\----;E8      ;
                      INX                                 ;EC32|----/----\----;E8      ;
                      BRA CODE_00EC4E                     ;EC33|----/----\----;8019    ;
                                                          ;                   ;        ;
CODE_00EC35:          LDA.B #$10                          ;EC35|----/----\----;A910    ;
                      JSR CODE_00F2C9                     ;EC37|----/----\----;20C9F2  ;
CODE_00EC3A:          JSR CODE_00F44D                     ;EC3A|----/----\----;204DF4  ;
                      BNE CODE_00EC46                     ;EC3D|----/----\----;D007    ;
                      LDA.B #$08                          ;EC3F|----/----\----;A908    ;
                      JSR CODE_00F2C9                     ;EC41|----/----\----;20C9F2  ;
                      BRA CODE_00EC8A                     ;EC44|----/----\----;8044    ;
                                                          ;                   ;        ;
CODE_00EC46:          CPY.B #$11                          ;EC46|----/----\----;C011    ;
                      BCC CODE_00EC8A                     ;EC48|----/----\----;9040    ;
                      CPY.B #$6E                          ;EC4A|----/----\----;C06E    ;
                      BCS CODE_00EC8A                     ;EC4C|----/----\----;B03C    ;
CODE_00EC4E:          LDA.B !PlayerDirection              ;EC4E|----/----\----;A576    ;
                      CMP.B !PlayerBlockXSide             ;EC50|----/----\----;C593    ;
                      BEQ +                               ;EC52|----/----\----;F00B    ;
                      JSR CODE_00F3C4                     ;EC54|----/----\----;20C4F3  ;
                      PHX                                 ;EC57|----/----\----;DA      ;
                      JSR CODE_00F267                     ;EC58|----/----\----;2067F2  ;
                      LDY.W !Map16TileNumber              ;EC5B|----/----\----;AC9316  ; Current MAP16 tile number 
                      PLX                                 ;EC5E|----/----\----;FA      ;
                    + LDA.B #$03                          ;EC5F|----/----\----;A903    ;
                      STA.W !PlayerPoseLenTimer           ;EC61|----/----\----;8DE513  ;
                      LDY.B !PlayerBlockXSide             ;EC64|----/----\----;A493    ;
                      LDA.B !PlayerXPosNext               ;EC66|----/----\----;A594    ;
                      AND.B #$0F                          ;EC68|----/----\----;290F    ;
                      CMP.W DATA_00E911,Y                 ;EC6A|----/----\----;D911E9  ;
                      BEQ CODE_00EC8A                     ;EC6D|----/----\----;F01B    ;
CODE_00EC6F:          LDA.W !NoteBlockActive              ;EC6F|----/----\----;AD0214  ;
                      BEQ CODE_00EC7B                     ;EC72|----/----\----;F007    ;
                      LDA.W !Map16TileNumber              ;EC74|----/----\----;AD9316  ;
                      CMP.B #$52                          ;EC77|----/----\----;C952    ;
                      BEQ CODE_00EC8A                     ;EC79|----/----\----;F00F    ;
CODE_00EC7B:          LDA.W DATA_00E90A,Y                 ;EC7B|----/----\----;B90AE9  ;
                      TSB.B !PlayerBlockedDir             ;EC7E|----/----\----;0477    ;
                      AND.B #$03                          ;EC80|----/----\----;2903    ;
                      TAY                                 ;EC82|----/----\----;A8      ;
                      LDA.W !Map16TileNumber              ;EC83|----/----\----;AD9316  ; Current MAP16 tile number 
                      JSL CODE_00F127                     ;EC86|----/----\----;2227F100;
CODE_00EC8A:          JSR CODE_00F44D                     ;EC8A|----/----\----;204DF4  ;
                      BNE CODE_00ECB1                     ;EC8D|----/----\----;D022    ;
                      LDA.B #$02                          ;EC8F|----/----\----;A902    ;
                      JSR CODE_00F2C2                     ;EC91|----/----\----;20C2F2  ;
                      LDY.B !PlayerYSpeed                 ;EC94|----/----\----;A47D    ;
                      BPL CODE_00ECA3                     ;EC96|----/----\----;100B    ;
                      LDA.W !Map16TileNumber              ;EC98|----/----\----;AD9316  ; Current MAP16 tile number 
                      CMP.B #$21                          ;EC9B|----/----\----;C921    ;
                      BCC CODE_00ECA3                     ;EC9D|----/----\----;9004    ;
                      CMP.B #$25                          ;EC9F|----/----\----;C925    ;
                      BCC +                               ;ECA1|----/----\----;9003    ;
CODE_00ECA3:          JMP CODE_00ED4A                     ;ECA3|----/----\----;4C4AED  ;
                                                          ;                   ;        ;
                    + SEC                                 ;ECA6|----/----\----;38      ;
                      SBC.B #$04                          ;ECA7|----/----\----;E904    ;
                      LDY.B #$00                          ;ECA9|----/----\----;A000    ;
                      JSL CODE_00F17F                     ;ECAB|----/----\----;227FF100;
                      BRA CODE_00ED0D                     ;ECAF|----/----\----;805C    ;
                                                          ;                   ;        ;
CODE_00ECB1:          CPY.B #$11                          ;ECB1|----/----\----;C011    ;
                      BCC CODE_00ECA3                     ;ECB3|----/----\----;90EE    ;
                      CPY.B #$6E                          ;ECB5|----/----\----;C06E    ;
                      BCC CODE_00ECFA                     ;ECB7|----/----\----;9041    ;
                      CPY.B #$D8                          ;ECB9|----/----\----;C0D8    ;
                      BCC CODE_00ECDA                     ;ECBB|----/----\----;901D    ;
                      REP #$20                            ;ECBD|----/----\----;C220    ; Accum (16 bit) 
                      LDA.B !TouchBlockYPos               ;ECBF|----/----\----;A598    ;
                      CLC                                 ;ECC1|----/----\----;18      ;
                      ADC.W #$0010                        ;ECC2|----/----\----;691000  ;
                      STA.B !TouchBlockYPos               ;ECC5|----/----\----;8598    ;
                      JSR CODE_00F461                     ;ECC7|----/----\----;2061F4  ;
                      BEQ CODE_00ECF8                     ;ECCA|----/----\----;F02C    ;
                      CPY.B #$6E                          ;ECCC|----/----\----;C06E    ;
                      BCC CODE_00ED4A                     ;ECCE|----/----\----;907A    ;
                      CPY.B #$D8                          ;ECD0|----/----\----;C0D8    ;
                      BCS CODE_00ED4A                     ;ECD2|----/----\----;B076    ;
                      LDA.B !PlayerBlockMoveY             ;ECD4|----/----\----;A591    ; Accum (8 bit) 
                      SBC.B #$0F                          ;ECD6|----/----\----;E90F    ;
                      STA.B !PlayerBlockMoveY             ;ECD8|----/----\----;8591    ;
CODE_00ECDA:          TYA                                 ;ECDA|----/----\----;98      ;
                      SEC                                 ;ECDB|----/----\----;38      ;
                      SBC.B #$6E                          ;ECDC|----/----\----;E96E    ;
                      TAY                                 ;ECDE|----/----\----;A8      ;
                      REP #$20                            ;ECDF|----/----\----;C220    ; Accum (16 bit) 
                      LDA.B [!SlopesPtr],Y                ;ECE1|----/----\----;B782    ;
                      AND.W #$00FF                        ;ECE3|----/----\----;29FF00  ;
                      ASL A                               ;ECE6|----/----\----;0A      ;
                      ASL A                               ;ECE7|----/----\----;0A      ;
                      ASL A                               ;ECE8|----/----\----;0A      ;
                      ASL A                               ;ECE9|----/----\----;0A      ;
                      SEP #$20                            ;ECEA|----/----\----;E220    ; Accum (8 bit) 
                      ORA.B !PlayerXPosInBlock            ;ECEC|----/----\----;0592    ;
                      REP #$10                            ;ECEE|----/----\----;C210    ; Index (16 bit) 
                      TAY                                 ;ECF0|----/----\----;A8      ;
                      LDA.W DATA_00E632,Y                 ;ECF1|----/----\----;B932E6  ;
                      SEP #$10                            ;ECF4|----/----\----;E210    ; Index (8 bit) 
                      BMI CODE_00ED0F                     ;ECF6|----/----\----;3017    ;
CODE_00ECF8:          BRA CODE_00ED4A                     ;ECF8|----/----\----;8050    ;
                                                          ;                   ;        ;
CODE_00ECFA:          LDA.B #$02                          ;ECFA|----/----\----;A902    ;
                      JSR CODE_00F3E9                     ;ECFC|----/----\----;20E9F3  ;
                      TYA                                 ;ECFF|----/----\----;98      ;
                      LDY.B #$00                          ;ED00|----/----\----;A000    ;
                      JSL CODE_00F127                     ;ED02|----/----\----;2227F100;
                      LDA.W !Map16TileNumber              ;ED06|----/----\----;AD9316  ; Current MAP16 tile number 
                      CMP.B #$1E                          ;ED09|----/----\----;C91E    ; \ If block is turn block, branch to $ED3B 
                      BEQ CODE_00ED3B                     ;ED0B|----/----\----;F02E    ; /  
CODE_00ED0D:          LDA.B #$F0                          ;ED0D|----/----\----;A9F0    ;
CODE_00ED0F:          CLC                                 ;ED0F|----/----\----;18      ;
                      ADC.B !PlayerBlockMoveY             ;ED10|----/----\----;6591    ;
                      BPL CODE_00ED4A                     ;ED12|----/----\----;1036    ;
                      CMP.B #$F9                          ;ED14|----/----\----;C9F9    ;
                      BCS CODE_00ED28                     ;ED16|----/----\----;B010    ;
                      LDY.B !PlayerInAir                  ;ED18|----/----\----;A472    ;
                      BNE CODE_00ED28                     ;ED1A|----/----\----;D00C    ;
                      LDA.B !PlayerBlockedDir             ;ED1C|----/----\----;A577    ;
                      AND.B #$FC                          ;ED1E|----/----\----;29FC    ;
                      ORA.B #$09                          ;ED20|----/----\----;0909    ;
                      STA.B !PlayerBlockedDir             ;ED22|----/----\----;8577    ;
                      STZ.B !PlayerXSpeed                 ;ED24|----/----\----;647B    ;
                      BRA CODE_00ED3B                     ;ED26|----/----\----;8013    ;
                                                          ;                   ;        ;
CODE_00ED28:          LDY.B !PlayerInAir                  ;ED28|----/----\----;A472    ;
                      BEQ +                               ;ED2A|----/----\----;F00B    ;
                      EOR.B #$FF                          ;ED2C|----/----\----;49FF    ;
                      CLC                                 ;ED2E|----/----\----;18      ;
                      ADC.B !PlayerYPosNext               ;ED2F|----/----\----;6596    ;
                      STA.B !PlayerYPosNext               ;ED31|----/----\----;8596    ;
                      BCC +                               ;ED33|----/----\----;9002    ;
                      INC.B !PlayerYPosNext+1             ;ED35|----/----\----;E697    ;
                    + LDA.B #$08                          ;ED37|----/----\----;A908    ;
                      TSB.B !PlayerBlockedDir             ;ED39|----/----\----;0477    ;
CODE_00ED3B:          LDA.B !PlayerYSpeed                 ;ED3B|----/----\----;A57D    ;
                      BPL CODE_00ED4A                     ;ED3D|----/----\----;100B    ;
                      STZ.B !PlayerYSpeed                 ;ED3F|----/----\----;647D    ;
                      LDA.W !SPCIO0                       ;ED41|----/----\----;ADF91D  ; / Play sound effect 
                      BNE CODE_00ED4A                     ;ED44|----/----\----;D004    ;
                      INC A                               ;ED46|----/----\----;1A      ;
                      STA.W !SPCIO0                       ;ED47|----/----\----;8DF91D  ; / Play sound effect 
CODE_00ED4A:          JSR CODE_00F44D                     ;ED4A|----/----\----;204DF4  ;
                      BNE +                               ;ED4D|----/----\----;D003    ;
                      JMP CODE_00EDDB                     ;ED4F|----/----\----;4CDBED  ;
                                                          ;                   ;        ;
                    + CPY.B #$6E                          ;ED52|----/----\----;C06E    ;
                      BCS +                               ;ED54|----/----\----;B008    ;
                      LDA.B #$03                          ;ED56|----/----\----;A903    ;
                      JSR CODE_00F3E9                     ;ED58|----/----\----;20E9F3  ;
                      JMP CODE_00EDF7                     ;ED5B|----/----\----;4CF7ED  ;
                                                          ;                   ;        ;
                    + CPY.B #$D8                          ;ED5E|----/----\----;C0D8    ;
                      BCC CODE_00ED86                     ;ED60|----/----\----;9024    ;
                      CPY.B #$FB                          ;ED62|----/----\----;C0FB    ;
                      BCC +                               ;ED64|----/----\----;9003    ;
                      JMP CODE_00F629                     ;ED66|----/----\----;4C29F6  ;
                                                          ;                   ;        ;
                    + REP #$20                            ;ED69|----/----\----;C220    ; Accum (16 bit) 
                      LDA.B !TouchBlockYPos               ;ED6B|----/----\----;A598    ;
                      SEC                                 ;ED6D|----/----\----;38      ;
                      SBC.W #$0010                        ;ED6E|----/----\----;E91000  ;
                      STA.B !TouchBlockYPos               ;ED71|----/----\----;8598    ;
                      JSR CODE_00F461                     ;ED73|----/----\----;2061F4  ;
                      BEQ CODE_00EDE9                     ;ED76|----/----\----;F071    ;
                      CPY.B #$6E                          ;ED78|----/----\----;C06E    ;
                      BCC CODE_00EDE9                     ;ED7A|----/----\----;906D    ;
                      CPY.B #$D8                          ;ED7C|----/----\----;C0D8    ;
                      BCS CODE_00EDE9                     ;ED7E|----/----\----;B069    ;
                      LDA.B !PlayerYPosInBlock            ;ED80|----/----\----;A590    ; Accum (8 bit) 
                      ADC.B #$10                          ;ED82|----/----\----;6910    ;
                      STA.B !PlayerYPosInBlock            ;ED84|----/----\----;8590    ;
CODE_00ED86:          LDA.W !ObjectTileset                ;ED86|----/----\----;AD3119  ;
                      CMP.B #$03                          ;ED89|----/----\----;C903    ;
                      BEQ CODE_00ED91                     ;ED8B|----/----\----;F004    ;
                      CMP.B #$0E                          ;ED8D|----/----\----;C90E    ;
                      BNE CODE_00ED95                     ;ED8F|----/----\----;D004    ;
CODE_00ED91:          CPY.B #$D2                          ;ED91|----/----\----;C0D2    ;
                      BCS CODE_00EDE9                     ;ED93|----/----\----;B054    ;
CODE_00ED95:          TYA                                 ;ED95|----/----\----;98      ;
                      SEC                                 ;ED96|----/----\----;38      ;
                      SBC.B #$6E                          ;ED97|----/----\----;E96E    ;
                      TAY                                 ;ED99|----/----\----;A8      ;
                      LDA.B [!SlopesPtr],Y                ;ED9A|----/----\----;B782    ;
                      PHA                                 ;ED9C|----/----\----;48      ;
                      REP #$20                            ;ED9D|----/----\----;C220    ; Accum (16 bit) 
                      AND.W #$00FF                        ;ED9F|----/----\----;29FF00  ;
                      ASL A                               ;EDA2|----/----\----;0A      ;
                      ASL A                               ;EDA3|----/----\----;0A      ;
                      ASL A                               ;EDA4|----/----\----;0A      ;
                      ASL A                               ;EDA5|----/----\----;0A      ;
                      SEP #$20                            ;EDA6|----/----\----;E220    ; Accum (8 bit) 
                      ORA.B !PlayerXPosInBlock            ;EDA8|----/----\----;0592    ;
                      PHX                                 ;EDAA|----/----\----;DA      ;
                      REP #$10                            ;EDAB|----/----\----;C210    ; Index (16 bit) 
                      TAX                                 ;EDAD|----/----\----;AA      ;
                      LDA.B !PlayerYPosInBlock            ;EDAE|----/----\----;A590    ;
                      SEC                                 ;EDB0|----/----\----;38      ;
                      SBC.W DATA_00E632,X                 ;EDB1|----/----\----;FD32E6  ;
                      BPL +                               ;EDB4|----/----\----;1003    ;
                      INC.W !PlayerIsOnGround             ;EDB6|----/----\----;EEEF13  ;
                    + SEP #$10                            ;EDB9|----/----\----;E210    ; Index (8 bit) 
                      PLX                                 ;EDBB|----/----\----;FA      ;
                      PLY                                 ;EDBC|----/----\----;7A      ;
                      CMP.W DATA_00E51C,Y                 ;EDBD|----/----\----;D91CE5  ;
                      BCS CODE_00EDE9                     ;EDC0|----/----\----;B027    ;
                      STA.B !PlayerBlockMoveY             ;EDC2|----/----\----;8591    ;
                      STZ.B !PlayerYPosInBlock            ;EDC4|----/----\----;6490    ;
                      JSR CODE_00F005                     ;EDC6|----/----\----;2005F0  ;
                      CPY.B #$1C                          ;EDC9|----/----\----;C01C    ;
                      BCC +                               ;EDCB|----/----\----;9008    ;
                      LDA.B #$08                          ;EDCD|----/----\----;A908    ;
                      STA.W !SkidTurnTimer                ;EDCF|----/----\----;8DA114  ;
                      JMP CODE_00EED1                     ;EDD2|----/----\----;4CD1EE  ;
                                                          ;                   ;        ;
                    + JSR CODE_00EFBC                     ;EDD5|----/----\----;20BCEF  ;
                      JMP CODE_00EE85                     ;EDD8|----/----\----;4C85EE  ;
                                                          ;                   ;        ;
CODE_00EDDB:          CPY.B #$05                          ;EDDB|----/----\----;C005    ;
                      BNE CODE_00EDE4                     ;EDDD|----/----\----;D005    ;
                      JSR CODE_00F629                     ;EDDF|----/----\----;2029F6  ;
                      BRA CODE_00EDE9                     ;EDE2|----/----\----;8005    ;
                                                          ;                   ;        ;
CODE_00EDE4:          LDA.B #$04                          ;EDE4|----/----\----;A904    ;
                      JSR CODE_00F2C2                     ;EDE6|----/----\----;20C2F2  ;
CODE_00EDE9:          JSR CODE_00F44D                     ;EDE9|----/----\----;204DF4  ;
                      BNE CODE_00EDF3                     ;EDEC|----/----\----;D005    ;
                      JSR CODE_00F309                     ;EDEE|----/----\----;2009F3  ;
                      BRA CODE_00EE1D                     ;EDF1|----/----\----;802A    ;
                                                          ;                   ;        ;
CODE_00EDF3:          CPY.B #$6E                          ;EDF3|----/----\----;C06E    ;
                      BCS CODE_00EE1D                     ;EDF5|----/----\----;B026    ;
CODE_00EDF7:          LDA.B !PlayerYSpeed                 ;EDF7|----/----\----;A57D    ;
                      BMI Return00EE39                    ;EDF9|----/----\----;303E    ;
                      LDA.W !ObjectTileset                ;EDFB|----/----\----;AD3119  ;
                      CMP.B #$03                          ;EDFE|----/----\----;C903    ;
                      BEQ CODE_00EE06                     ;EE00|----/----\----;F004    ;
                      CMP.B #$0E                          ;EE02|----/----\----;C90E    ;
                      BNE CODE_00EE11                     ;EE04|----/----\----;D00B    ;
CODE_00EE06:          LDY.W !Map16TileNumber              ;EE06|----/----\----;AC9316  ; $ED3B 
                      CPY.B #$59                          ;EE09|----/----\----;C059    ;
                      BCC CODE_00EE11                     ;EE0B|----/----\----;9004    ;
                      CPY.B #$5C                          ;EE0D|----/----\----;C05C    ;
                      BCC CODE_00EE1D                     ;EE0F|----/----\----;900C    ;
CODE_00EE11:          LDA.B !PlayerYPosInBlock            ;EE11|----/----\----;A590    ;
                      AND.B #$0F                          ;EE13|----/----\----;290F    ;
                      STZ.B !PlayerYPosInBlock            ;EE15|----/----\----;6490    ;
                      CMP.B #$08                          ;EE17|----/----\----;C908    ;
                      STA.B !PlayerBlockMoveY             ;EE19|----/----\----;8591    ;
                      BCC CODE_00EE3A                     ;EE1B|----/----\----;901D    ;
CODE_00EE1D:          LDA.W !StandOnSolidSprite           ;EE1D|----/----\----;AD7114  ; \ If Mario isn't on a sprite platform, 
                      BEQ +                               ;EE20|----/----\----;F00B    ; / branch to $EE2D 
                      LDA.B !PlayerYSpeed                 ;EE22|----/----\----;A57D    ; \ If Mario is moving up, 
                      BMI +                               ;EE24|----/----\----;3007    ; / branch to $EE2D 
                      STZ.B !GraphicsUncompPtr+1          ;EE26|----/----\----;648E    ;
                      LDY.B #$20                          ;EE28|----/----\----;A020    ;
                      JMP CODE_00EEE1                     ;EE2A|----/----\----;4CE1EE  ;
                                                          ;                   ;        ;
                    + LDA.B !PlayerBlockedDir             ;EE2D|----/----\----;A577    ; \  
                      AND.B #$04                          ;EE2F|----/----\----;2904    ;  |If Mario is on an edge or in air, 
                      ORA.B !PlayerInAir                  ;EE31|----/----\----;0572    ;  |branch to $EE39 
                      BNE Return00EE39                    ;EE33|----/----\----;D004    ; /  
CODE_00EE35:          LDA.B #$24                          ;EE35|----/----\----;A924    ; \ Set "In air" to x24 (falling) 
                      STA.B !PlayerInAir                  ;EE37|----/----\----;8572    ; /  
Return00EE39:         RTS                                 ;EE39|----/----\----;60      ; Return 
                                                          ;                   ;        ;
CODE_00EE3A:          LDY.W !Map16TileNumber              ;EE3A|----/----\----;AC9316  ; Current MAP16 tile number 
                      LDA.W !ObjectTileset                ;EE3D|----/----\----;AD3119  ; Tileset 
                      CMP.B #$02                          ;EE40|----/----\----;C902    ; \ If tileset is "Rope 1", 
                      BEQ CODE_00EE48                     ;EE42|----/----\----;F004    ; / branch to $EE48 
                      CMP.B #$08                          ;EE44|----/----\----;C908    ; \ If tileset isn't "Rope 3", 
                      BNE CODE_00EE57                     ;EE46|----/----\----;D00F    ; / branch to $EE57 
CODE_00EE48:          TYA                                 ;EE48|----/----\----;98      ; \  
                      SEC                                 ;EE49|----/----\----;38      ;  |If the current tile isn't Rope 3's "Conveyor rope", 
                      SBC.B #$0C                          ;EE4A|----/----\----;E90C    ;  |branch to $EE57 
                      CMP.B #$02                          ;EE4C|----/----\----;C902    ;  | 
                      BCS CODE_00EE57                     ;EE4E|----/----\----;B007    ; /  
                      ASL A                               ;EE50|----/----\----;0A      ;
                      TAX                                 ;EE51|----/----\----;AA      ;
                      JSR CODE_00EFCD                     ;EE52|----/----\----;20CDEF  ;
                      BRA CODE_00EE83                     ;EE55|----/----\----;802C    ;
                                                          ;                   ;        ;
CODE_00EE57:          JSR CODE_00F267                     ;EE57|----/----\----;2067F2  ;
                      LDY.B #$03                          ;EE5A|----/----\----;A003    ;
                      LDA.W !Map16TileNumber              ;EE5C|----/----\----;AD9316  ; Current MAP16 tile number 
                      CMP.B #$1E                          ;EE5F|----/----\----;C91E    ; \ If block isn't "Turn block", 
                      BNE CODE_00EE78                     ;EE61|----/----\----;D015    ; / branch to $EE78 
                      LDX.B !GraphicsUncompPtr+2          ;EE63|----/----\----;A68F    ;
                      BEQ CODE_00EE83                     ;EE65|----/----\----;F01C    ;
                      LDX.B !Powerup                      ;EE67|----/----\----;A619    ;
                      BEQ CODE_00EE83                     ;EE69|----/----\----;F018    ;
                      LDX.W !SpinJumpFlag                 ;EE6B|----/----\----;AE0D14  ;
                      BEQ CODE_00EE83                     ;EE6E|----/----\----;F013    ;
                      LDA.B #$21                          ;EE70|----/----\----;A921    ;
                      JSL CODE_00F17F                     ;EE72|----/----\----;227FF100;
                      BRA CODE_00EE1D                     ;EE76|----/----\----;80A5    ;
                                                          ;                   ;        ;
CODE_00EE78:          CMP.B #$32                          ;EE78|----/----\----;C932    ; \ If block isn't "Brown block", 
                      BNE +                               ;EE7A|----/----\----;D003    ; / branch to $EE7F 
                      STZ.W !BlockSnakeActive             ;EE7C|----/----\----;9C0919  ;
                    + JSL CODE_00F120                     ;EE7F|----/----\----;2220F100;
CODE_00EE83:          LDY.B #$20                          ;EE83|----/----\----;A020    ;
CODE_00EE85:          LDA.B !PlayerYSpeed                 ;EE85|----/----\----;A57D    ; \ If Mario isn't moving up, 
                      BPL CODE_00EE8F                     ;EE87|----/----\----;1006    ; / branch to $EE8F 
                      LDA.B !GraphicsUncompPtr            ;EE89|----/----\----;A58D    ;
                      CMP.B #$02                          ;EE8B|----/----\----;C902    ;
                      BCC Return00EE39                    ;EE8D|----/----\----;90AA    ;
CODE_00EE8F:          LDX.W !SwitchPalacePressed          ;EE8F|----/----\----;AE2314  ;
                      BEQ CODE_00EED1                     ;EE92|----/----\----;F03D    ;
                      DEX                                 ;EE94|----/----\----;CA      ;
                      TXA                                 ;EE95|----/----\----;8A      ;
                      AND.B #$03                          ;EE96|----/----\----;2903    ;
                      BEQ CODE_00EEAA                     ;EE98|----/----\----;F010    ;
                      CMP.B #$02                          ;EE9A|----/----\----;C902    ;
                      BCS CODE_00EED1                     ;EE9C|----/----\----;B033    ;
                      REP #$20                            ;EE9E|----/----\----;C220    ; Accum (16 bit) 
                      LDA.B !TouchBlockXPos               ;EEA0|----/----\----;A59A    ;
                      SEC                                 ;EEA2|----/----\----;38      ;
                      SBC.W #$0010                        ;EEA3|----/----\----;E91000  ;
                      STA.B !TouchBlockXPos               ;EEA6|----/----\----;859A    ;
                      SEP #$20                            ;EEA8|----/----\----;E220    ; Accum (8 bit) 
CODE_00EEAA:          TXA                                 ;EEAA|----/----\----;8A      ;
                      LSR A                               ;EEAB|----/----\----;4A      ;
                      LSR A                               ;EEAC|----/----\----;4A      ;
                      TAX                                 ;EEAD|----/----\----;AA      ;
                      LDA.W !SwitchBlockFlags,X           ;EEAE|----/----\----;BD271F  ; \ If switch block is already active, 
                      BNE CODE_00EED1                     ;EEB1|----/----\----;D01E    ; / branch to $EED1 
                      INC A                               ;EEB3|----/----\----;1A      ; \ Activate switch block 
                      STA.W !SwitchBlockFlags,X           ;EEB4|----/----\----;9D271F  ; /  
                      STA.W !SwitchPalaceColor            ;EEB7|----/----\----;8DD213  ;
                      PHY                                 ;EEBA|----/----\----;5A      ;
                      STX.W !BigSwitchPressTimer          ;EEBB|----/----\----;8E1E19  ;
                      JSR FlatPalaceSwitch                ;EEBE|----/----\----;2045FA  ;
                      PLY                                 ;EEC1|----/----\----;7A      ;
                      LDA.B #$0C                          ;EEC2|----/----\----;A90C    ;
                      STA.W !SPCIO2                       ;EEC4|----/----\----;8DFB1D  ; / Change music 
                      LDA.B #$FF                          ;EEC7|----/----\----;A9FF    ; \  
                      STA.W !MusicBackup                  ;EEC9|----/----\----;8DDA0D  ; / Set music to xFF 
                      LDA.B #$08                          ;EECC|----/----\----;A908    ;
                      STA.W !EndLevelTimer                ;EECE|----/----\----;8D9314  ;
CODE_00EED1:          INC.W !PlayerIsOnGround             ;EED1|----/----\----;EEEF13  ;
                      LDA.B !PlayerYPosNext               ;EED4|----/----\----;A596    ;
                      SEC                                 ;EED6|----/----\----;38      ;
                      SBC.B !PlayerBlockMoveY             ;EED7|----/----\----;E591    ;
                      STA.B !PlayerYPosNext               ;EED9|----/----\----;8596    ;
                      LDA.B !PlayerYPosNext+1             ;EEDB|----/----\----;A597    ;
                      SBC.B !PlayerYPosInBlock            ;EEDD|----/----\----;E590    ;
                      STA.B !PlayerYPosNext+1             ;EEDF|----/----\----;8597    ;
CODE_00EEE1:          LDA.W DATA_00E53D,Y                 ;EEE1|----/----\----;B93DE5  ;
                      BNE CODE_00EEEF                     ;EEE4|----/----\----;D009    ;
                      LDX.W !PlayerSlopePose              ;EEE6|----/----\----;AEED13  ;
                      BEQ CODE_00EF05                     ;EEE9|----/----\----;F01A    ;
                      LDX.B !PlayerXSpeed                 ;EEEB|----/----\----;A67B    ;
                      BEQ CODE_00EF02                     ;EEED|----/----\----;F013    ;
CODE_00EEEF:          STA.W !CurrentSlope                 ;EEEF|----/----\----;8DEE13  ;
                      LDA.B !byetudlrHold                 ;EEF2|----/----\----;A515    ;
                      AND.B #$04                          ;EEF4|----/----\----;2904    ;
                      BEQ CODE_00EF05                     ;EEF6|----/----\----;F00D    ;
                      LDA.W !IsCarryingItem               ;EEF8|----/----\----;AD8F14  ;
                      ORA.W !PlayerSlopePose              ;EEFB|----/----\----;0DED13  ;
                      BNE CODE_00EF05                     ;EEFE|----/----\----;D005    ;
                      LDX.B #$1C                          ;EF00|----/----\----;A21C    ;
CODE_00EF02:          STX.W !PlayerSlopePose              ;EF02|----/----\----;8EED13  ;
CODE_00EF05:          LDX.W DATA_00E4B9,Y                 ;EF05|----/----\----;BEB9E4  ;
                      STX.W !SlopeType                    ;EF08|----/----\----;8EE113  ;
                      CPY.B #$1C                          ;EF0B|----/----\----;C01C    ;
                      BCS CODE_00EF38                     ;EF0D|----/----\----;B029    ;
                      LDA.B !PlayerXSpeed                 ;EF0F|----/----\----;A57B    ;
                      BEQ CODE_00EF31                     ;EF11|----/----\----;F01E    ;
                      LDA.W DATA_00E53D,Y                 ;EF13|----/----\----;B93DE5  ;
                      BEQ CODE_00EF31                     ;EF16|----/----\----;F019    ;
                      EOR.B !PlayerXSpeed                 ;EF18|----/----\----;457B    ;
                      BPL CODE_00EF31                     ;EF1A|----/----\----;1015    ;
                      STX.W !PlayerPoseLenTimer           ;EF1C|----/----\----;8EE513  ;
                      LDA.B !PlayerXSpeed                 ;EF1F|----/----\----;A57B    ;
                      BPL +                               ;EF21|----/----\----;1003    ;
                      EOR.B #$FF                          ;EF23|----/----\----;49FF    ;
                      INC A                               ;EF25|----/----\----;1A      ;
                    + CMP.B #$28                          ;EF26|----/----\----;C928    ;
                      BCC CODE_00EF2F                     ;EF28|----/----\----;9005    ;
                      LDA.W DATA_00E4FB,Y                 ;EF2A|----/----\----;B9FBE4  ;
                      BRA CODE_00EF60                     ;EF2D|----/----\----;8031    ;
                                                          ;                   ;        ;
CODE_00EF2F:          LDY.B #$20                          ;EF2F|----/----\----;A020    ;
CODE_00EF31:          LDA.B !PlayerYSpeed                 ;EF31|----/----\----;A57D    ;
                      CMP.W DATA_00E4DA,Y                 ;EF33|----/----\----;D9DAE4  ;
                      BCC +                               ;EF36|----/----\----;9003    ;
CODE_00EF38:          LDA.W DATA_00E4DA,Y                 ;EF38|----/----\----;B9DAE4  ;
                    + LDX.B !GraphicsUncompPtr+1          ;EF3B|----/----\----;A68E    ;
                      BPL CODE_00EF60                     ;EF3D|----/----\----;1021    ;
                      INC.W !Layer2Touched                ;EF3F|----/----\----;EE0E14  ;
                      PHA                                 ;EF42|----/----\----;48      ;
                      REP #$20                            ;EF43|----/----\----;C220    ; Accum (16 bit) 
                      LDA.W !Layer2DYPos                  ;EF45|----/----\----;ADBE17  ;
                      AND.W #$FF00                        ;EF48|----/----\----;2900FF  ;
                      BPL +                               ;EF4B|----/----\----;1003    ;
                      ORA.W #$00FF                        ;EF4D|----/----\----;09FF00  ;
                    + XBA                                 ;EF50|----/----\----;EB      ;
                      EOR.W #$FFFF                        ;EF51|----/----\----;49FFFF  ;
                      INC A                               ;EF54|----/----\----;1A      ;
                      CLC                                 ;EF55|----/----\----;18      ;
                      ADC.B !PlayerXPosNext               ;EF56|----/----\----;6594    ;
                      STA.B !PlayerXPosNext               ;EF58|----/----\----;8594    ;
                      SEP #$20                            ;EF5A|----/----\----;E220    ; Accum (8 bit) 
                      PLA                                 ;EF5C|----/----\----;68      ;
                      CLC                                 ;EF5D|----/----\----;18      ;
                      ADC.B #$28                          ;EF5E|----/----\----;6928    ;
CODE_00EF60:          STA.B !PlayerYSpeed                 ;EF60|----/----\----;857D    ;
                      TAX                                 ;EF62|----/----\----;AA      ;
                      BPL +                               ;EF63|----/----\----;1003    ;
                      INC.W !PlayerIsOnGround             ;EF65|----/----\----;EEEF13  ;
                    + STZ.W !StandingOnCage               ;EF68|----/----\----;9CB518  ;
                      STZ.B !PlayerInAir                  ;EF6B|----/----\----;6472    ;
                      STZ.B !PlayerIsClimbing             ;EF6D|----/----\----;6474    ;
                      STZ.W !BouncingOnBoard              ;EF6F|----/----\----;9C0614  ;
                      STZ.W !SpinJumpFlag                 ;EF72|----/----\----;9C0D14  ;
                      LDA.B #$04                          ;EF75|----/----\----;A904    ;
                      TSB.B !PlayerBlockedDir             ;EF77|----/----\----;0477    ;
                      LDY.W !FlightPhase                  ;EF79|----/----\----;AC0714  ;
                      BNE CODE_00EF99                     ;EF7C|----/----\----;D01B    ;
                      LDA.W !PlayerRidingYoshi            ;EF7E|----/----\----;AD7A18  ;
                      BEQ +                               ;EF81|----/----\----;F012    ;
                      LDA.B !GraphicsUncompPtr+2          ;EF83|----/----\----;A58F    ;
                      BEQ +                               ;EF85|----/----\----;F00E    ;
                      LDA.W !YoshiCanStomp                ;EF87|----/----\----;ADE718  ; \ If Yoshi has stomp ability, 
                      BEQ +                               ;EF8A|----/----\----;F009    ;  | 
                      JSL YoshiStompRoutine               ;EF8C|----/----\----;22BF8602;  | Run routine 
                      LDA.B #$25                          ;EF90|----/----\----;A925    ;  | Play sound effect 
                      STA.W !SPCIO3                       ;EF92|----/----\----;8DFC1D  ; / 
                    + STZ.W !SpriteStompCounter           ;EF95|----/----\----;9C9716  ;
                      RTS                                 ;EF98|----/----\----;60      ; Return 
                                                          ;                   ;        ;
CODE_00EF99:          STZ.W !SpriteStompCounter           ;EF99|----/----\----;9C9716  ;
                      STZ.W !FlightPhase                  ;EF9C|----/----\----;9C0714  ;
                      CPY.B #$05                          ;EF9F|----/----\----;C005    ;
                      BCS CallGroundPound                 ;EFA1|----/----\----;B00B    ;
                      LDA.B !Powerup                      ;EFA3|----/----\----;A519    ;
                      CMP.B #$02                          ;EFA5|----/----\----;C902    ;
                      BNE +                               ;EFA7|----/----\----;D004    ;
                      SEC                                 ;EFA9|----/----\----;38      ;
                      ROR.W !PlayerSlopePose              ;EFAA|----/----\----;6EED13  ;
                    + RTS                                 ;EFAD|----/----\----;60      ; Return 
                                                          ;                   ;        ;
CallGroundPound:      LDA.B !GraphicsUncompPtr+2          ;EFAE|----/----\----;A58F    ;
                      BEQ +                               ;EFB0|----/----\----;F009    ;
                      JSL GroundPound                     ;EFB2|----/----\----;22C19402;
                      LDA.B #$09                          ;EFB6|----/----\----;A909    ; \ Play sound effect 
                      STA.W !SPCIO3                       ;EFB8|----/----\----;8DFC1D  ; / 
                    + RTS                                 ;EFBB|----/----\----;60      ; Return 
                                                          ;                   ;        ;
CODE_00EFBC:          LDX.W !Map16TileNumber              ;EFBC|----/----\----;AE9316  ;
                      CPX.B #$CE                          ;EFBF|----/----\----;E0CE    ;
                      BCC +                               ;EFC1|----/----\----;9024    ;
                      CPX.B #$D2                          ;EFC3|----/----\----;E0D2    ;
                      BCS +                               ;EFC5|----/----\----;B020    ;
                      TXA                                 ;EFC7|----/----\----;8A      ;
                      SEC                                 ;EFC8|----/----\----;38      ;
                      SBC.B #$CC                          ;EFC9|----/----\----;E9CC    ;
                      ASL A                               ;EFCB|----/----\----;0A      ;
                      TAX                                 ;EFCC|----/----\----;AA      ;
CODE_00EFCD:          LDA.B !TrueFrame                    ;EFCD|----/----\----;A513    ;
                      AND.B #$03                          ;EFCF|----/----\----;2903    ;
                      BNE +                               ;EFD1|----/----\----;D014    ;
                      REP #$20                            ;EFD3|----/----\----;C220    ; Accum (16 bit) 
                      LDA.B !PlayerXPosNext               ;EFD5|----/----\----;A594    ;
                      CLC                                 ;EFD7|----/----\----;18      ;
                      ADC.W DATA_00E913,X                 ;EFD8|----/----\----;7D13E9  ;
                      STA.B !PlayerXPosNext               ;EFDB|----/----\----;8594    ;
                      LDA.B !PlayerYPosNext               ;EFDD|----/----\----;A596    ;
                      CLC                                 ;EFDF|----/----\----;18      ;
                      ADC.W DATA_00E91F,X                 ;EFE0|----/----\----;7D1FE9  ;
                      STA.B !PlayerYPosNext               ;EFE3|----/----\----;8596    ;
                      SEP #$20                            ;EFE5|----/----\----;E220    ; Accum (8 bit) 
                    + RTS                                 ;EFE7|----/----\----;60      ; Return 
                                                          ;                   ;        ;
CODE_00EFE8:          JSR CODE_00F44D                     ;EFE8|----/----\----;204DF4  ;
                      BNE +                               ;EFEB|----/----\----;D003    ;
                      JMP CODE_00F309                     ;EFED|----/----\----;4C09F3  ;
                                                          ;                   ;        ;
                    + CPY.B #$11                          ;EFF0|----/----\----;C011    ;
                      BCC +                               ;EFF2|----/----\----;9010    ;
                      CPY.B #$6E                          ;EFF4|----/----\----;C06E    ;
                      BCS +                               ;EFF6|----/----\----;B00C    ;
                      TYA                                 ;EFF8|----/----\----;98      ;
                      LDY.B #$00                          ;EFF9|----/----\----;A000    ;
                      JSL CODE_00F160                     ;EFFB|----/----\----;2260F100;
                      PLA                                 ;EFFF|----/----\----;68      ;
                      PLA                                 ;F000|----/----\----;68      ;
                      JMP ADDR_00EB42                     ;F001|----/----\----;4C42EB  ;
                                                          ;                   ;        ;
                    + RTS                                 ;F004|----/----\----;60      ; Return 
                                                          ;                   ;        ;
CODE_00F005:          TYA                                 ;F005|----/----\----;98      ;
                      SEC                                 ;F006|----/----\----;38      ;
                      SBC.B #$0E                          ;F007|----/----\----;E90E    ;
                      CMP.B #$02                          ;F009|----/----\----;C902    ;
                      BCS Return00F04C                    ;F00B|----/----\----;B03F    ;
                      EOR.B #$01                          ;F00D|----/----\----;4901    ;
                      CMP.B !PlayerDirection              ;F00F|----/----\----;C576    ;
                      BNE Return00F04C                    ;F011|----/----\----;D039    ;
                      TAX                                 ;F013|----/----\----;AA      ;
                      LSR A                               ;F014|----/----\----;4A      ;
                      LDA.B !PlayerXPosInBlock            ;F015|----/----\----;A592    ;
                      BCC +                               ;F017|----/----\----;9002    ;
                      EOR.B #$0F                          ;F019|----/----\----;490F    ;
                    + CMP.B #$08                          ;F01B|----/----\----;C908    ;
                      BCS Return00F04C                    ;F01D|----/----\----;B02D    ;
                      LDA.W !PlayerRidingYoshi            ;F01F|----/----\----;AD7A18  ;
                      BEQ +                               ;F022|----/----\----;F011    ;
                      LDA.B #$08                          ;F024|----/----\----;A908    ;
                      STA.W !SPCIO3                       ;F026|----/----\----;8DFC1D  ; / Play sound effect 
                      LDA.B #$80                          ;F029|----/----\----;A980    ;
                      STA.B !PlayerYSpeed                 ;F02B|----/----\----;857D    ;
                      STA.W !BouncingOnBoard              ;F02D|----/----\----;8D0614  ;
                      PLA                                 ;F030|----/----\----;68      ;
                      PLA                                 ;F031|----/----\----;68      ;
                      JMP CODE_00EE35                     ;F032|----/----\----;4C35EE  ;
                                                          ;                   ;        ;
                    + LDA.B !PlayerXSpeed                 ;F035|----/----\----;A57B    ;
                      SEC                                 ;F037|----/----\----;38      ;
                      SBC.W DATA_00EAB9,X                 ;F038|----/----\----;FDB9EA  ;
                      EOR.W DATA_00EAB9,X                 ;F03B|----/----\----;5DB9EA  ;
                      BMI Return00F04C                    ;F03E|----/----\----;300C    ;
                      LDA.W !IsCarryingItem               ;F040|----/----\----;AD8F14  ;
                      ORA.B !PlayerIsDucking              ;F043|----/----\----;0573    ;
                      BNE Return00F04C                    ;F045|----/----\----;D005    ;
                      INX                                 ;F047|----/----\----;E8      ;
                      INX                                 ;F048|----/----\----;E8      ;
                      STX.W !WallrunningType              ;F049|----/----\----;8EE313  ;
Return00F04C:         RTS                                 ;F04C|----/----\----;60      ; Return 
                                                          ;                   ;        ;
CODE_00F04D:          PHX                                 ;F04D|----/----\----;DA      ;
                      LDX.B #$19                          ;F04E|----/----\----;A219    ;
CODE_00F050:          CMP.L DATA_00EAC1,X                 ;F050|----/----\----;DFC1EA00;
                      BEQ CODE_00F05A                     ;F054|----/----\----;F004    ;
                      DEX                                 ;F056|----/----\----;CA      ;
                      BPL CODE_00F050                     ;F057|----/----\----;10F7    ;
                      CLC                                 ;F059|----/----\----;18      ;
CODE_00F05A:          PLX                                 ;F05A|----/----\----;FA      ;
                      RTL                                 ;F05B|----/----\----;6B      ; Return 
                                                          ;                   ;        ;
                                                          ;                   ;        ;
DATA_00F05C:          db $01,$05,$01,$02,$01,$01,$00,$00  ;F05C|----/----\----;        ;
                      db $00,$00,$00,$00,$00,$06,$02,$02  ;F064|----/----\----;        ;
                      db $02,$02,$02,$02,$02,$02,$02,$02  ;F06C|----/----\----;        ;
                      db $02,$03,$03,$04,$02,$02,$02,$01  ;F074|----/----\----;        ;
                      db $01,$07,$11,$10                  ;F07C|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00F080:          db $80,$00,$00,$1E,$00,$00,$05,$09  ;F080|----/----\----;        ;
                      db $06,$81,$0E,$0C,$14,$00,$05,$09  ;F088|----/----\----;        ;
                      db $06,$07,$0E,$0C,$16,$18,$1A,$1A  ;F090|----/----\----;        ;
                      db $00,$09,$00,$00,$FF,$0C,$0A,$00  ;F098|----/----\----;        ;
                      db $00,$00,$08,$02                  ;F0A0|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00F0A4:          db $0C,$08,$0C,$08,$0C,$0F,$08,$08  ;F0A4|----/----\----;        ;
                      db $08,$08,$08,$08,$08,$08,$08,$08  ;F0AC|----/----\----;        ;
                      db $08,$08,$08,$08,$08,$08,$08,$08  ;F0B4|----/----\----;        ;
                      db $08,$03,$03,$08,$08,$08,$08,$08  ;F0BC|----/----\----;        ;
                      db $08,$04,$08,$08                  ;F0C4|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00F0C8:          db $0E,$13,$0E,$0D,$0E,$10,$0D,$0D  ;F0C8|----/----\----;        ;
                      db $0D,$0D,$0A,$0D,$0D,$0C,$0D,$0D  ;F0D0|----/----\----;        ;
                      db $0D,$0D,$0B,$0D,$0D,$16,$0D,$0D  ;F0D8|----/----\----;        ;
                      db $0D,$11,$11,$12,$0D,$0D,$0D,$0E  ;F0E0|----/----\----;        ;
                      db $0F,$0C,$0D,$0D                  ;F0E8|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00F0EC:          db $08,$01,$02,$04,$ED,$F6,$00,$7D  ;F0EC|----/----\----;        ;
                      db $BE,$00,$6F,$B7                  ;F0F4|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00F0F8:          db $40,$50,$00,$70,$80,$00,$A0,$B0  ;F0F8|----/----\----;        ;
DATA_00F100:          db $05,$09,$06,$05,$09,$06,$05,$09  ;F100|----/----\----;        ;
                      db $06,$05,$09,$06,$05,$09,$06,$05  ;F108|----/----\----;        ;
                      db $07,$0A,$10,$07,$0A,$10,$07,$0A  ;F110|----/----\----;        ;
                      db $10,$07,$0A,$10,$07,$0A,$10,$07  ;F118|----/----\----;        ;
                                                          ;                   ;        ;
CODE_00F120:          XBA                                 ;F120|----/----\----;EB      ;
                      LDA.W !PlayerRidingYoshi            ;F121|----/----\----;AD7A18  ;
                      BNE CODE_00F15F                     ;F124|----/----\----;D039    ;
                      XBA                                 ;F126|----/----\----;EB      ;
CODE_00F127:          CMP.B #$2F                          ;F127|----/----\----;C92F    ;
                      BEQ CODE_00F154                     ;F129|----/----\----;F029    ;
                      CMP.B #$59                          ;F12B|----/----\----;C959    ;
                      BCC CODE_00F144                     ;F12D|----/----\----;9015    ;
                      CMP.B #$5C                          ;F12F|----/----\----;C95C    ;
                      BCS CODE_00F140                     ;F131|----/----\----;B00D    ;
                      XBA                                 ;F133|----/----\----;EB      ;
                      LDA.W !ObjectTileset                ;F134|----/----\----;AD3119  ;
                      CMP.B #$05                          ;F137|----/----\----;C905    ;
                      BEQ CODE_00F154                     ;F139|----/----\----;F019    ;
                      CMP.B #$0D                          ;F13B|----/----\----;C90D    ;
                      BEQ CODE_00F154                     ;F13D|----/----\----;F015    ;
                      XBA                                 ;F13F|----/----\----;EB      ;
CODE_00F140:          CMP.B #$5D                          ;F140|----/----\----;C95D    ;
                      BCC CODE_00F14C                     ;F142|----/----\----;9008    ;
CODE_00F144:          CMP.B #$66                          ;F144|----/----\----;C966    ;
                      BCC CODE_00F160                     ;F146|----/----\----;9018    ;
                      CMP.B #$6A                          ;F148|----/----\----;C96A    ;
                      BCS CODE_00F160                     ;F14A|----/----\----;B014    ;
CODE_00F14C:          XBA                                 ;F14C|----/----\----;EB      ;
                      LDA.W !ObjectTileset                ;F14D|----/----\----;AD3119  ;
                      CMP.B #$01                          ;F150|----/----\----;C901    ;
                      BNE CODE_00F15F                     ;F152|----/----\----;D00B    ;
CODE_00F154:          PHB                                 ;F154|----/----\----;8B      ;
                      LDA.B #$01                          ;F155|----/----\----;A901    ;
                      PHA                                 ;F157|----/----\----;48      ;
                      PLB                                 ;F158|----/----\----;AB      ;
                      JSL HurtMario                       ;F159|----/----\----;22B7F500;
                      PLB                                 ;F15D|----/----\----;AB      ;
                      RTL                                 ;F15E|----/----\----;6B      ; Return 
                                                          ;                   ;        ;
CODE_00F15F:          XBA                                 ;F15F|----/----\----;EB      ;
CODE_00F160:          SEC                                 ;F160|----/----\----;38      ;
                      SBC.B #$11                          ;F161|----/----\----;E911    ;
                      CMP.B #$1D                          ;F163|----/----\----;C91D    ;
                      BCC CODE_00F17F                     ;F165|----/----\----;9018    ;
                      XBA                                 ;F167|----/----\----;EB      ;
                      PHX                                 ;F168|----/----\----;DA      ;
                      LDX.W !ObjectTileset                ;F169|----/----\----;AE3119  ;
                      LDA.L DATA_00A625,X                 ;F16C|----/----\----;BF25A600;
                      PLX                                 ;F170|----/----\----;FA      ;
                      AND.B #$03                          ;F171|----/----\----;2903    ;
                      BEQ +                               ;F173|----/----\----;F001    ;
                      RTL                                 ;F175|----/----\----;6B      ; Return 
                                                          ;                   ;        ;
                    + XBA                                 ;F176|----/----\----;EB      ;
                      SBC.B #$59                          ;F177|----/----\----;E959    ;
                      CMP.B #$02                          ;F179|----/----\----;C902    ;
                      BCS Return00F1F8                    ;F17B|----/----\----;B07B    ;
                      ADC.B #$22                          ;F17D|----/----\----;6922    ;
CODE_00F17F:          PHX                                 ;F17F|----/----\----;DA      ;
                      PHA                                 ;F180|----/----\----;48      ;
                      TYX                                 ;F181|----/----\----;BB      ;
                      LDA.L DATA_00F0EC,X                 ;F182|----/----\----;BFECF000;
                      PLX                                 ;F186|----/----\----;FA      ;
                      AND.L DATA_00F0A4,X                 ;F187|----/----\----;3FA4F000;
                      BEQ CODE_00F1F6                     ;F18B|----/----\----;F069    ;
                      STY.B !_6                           ;F18D|----/----\----;8406    ;
                      LDA.L DATA_00F0C8,X                 ;F18F|----/----\----;BFC8F000;
                      STA.B !_7                           ;F193|----/----\----;8507    ;
                      LDA.L DATA_00F05C,X                 ;F195|----/----\----;BF5CF000;
                      STA.B !_4                           ;F199|----/----\----;8504    ;
                      LDA.L DATA_00F080,X                 ;F19B|----/----\----;BF80F000;
                      BPL CODE_00F1BA                     ;F19F|----/----\----;1019    ;
                      CMP.B #$FF                          ;F1A1|----/----\----;C9FF    ;
                      BNE CODE_00F1AE                     ;F1A3|----/----\----;D009    ;
                      LDA.B #$05                          ;F1A5|----/----\----;A905    ;
                      LDY.W !GreenStarBlockCoins          ;F1A7|----/----\----;ACC00D  ;
                      BEQ CODE_00F1D0                     ;F1AA|----/----\----;F024    ;
                      BRA CODE_00F1CE                     ;F1AC|----/----\----;8020    ;
                                                          ;                   ;        ;
CODE_00F1AE:          LSR A                               ;F1AE|----/----\----;4A      ;
                      LDA.B !TouchBlockXPos               ;F1AF|----/----\----;A59A    ;
                      ROR A                               ;F1B1|----/----\----;6A      ;
                      LSR A                               ;F1B2|----/----\----;4A      ;
                      LSR A                               ;F1B3|----/----\----;4A      ;
                      LSR A                               ;F1B4|----/----\----;4A      ;
                      TAX                                 ;F1B5|----/----\----;AA      ;
                      LDA.L DATA_00F100,X                 ;F1B6|----/----\----;BF00F100;
CODE_00F1BA:          LSR A                               ;F1BA|----/----\----;4A      ;
                      BCC CODE_00F1D0                     ;F1BB|----/----\----;9013    ;
                      CMP.B #$03                          ;F1BD|----/----\----;C903    ;
                      BEQ CODE_00F1C9                     ;F1BF|----/----\----;F008    ;
                      LDY.B !Powerup                      ;F1C1|----/----\----;A419    ;
                      BNE CODE_00F1D0                     ;F1C3|----/----\----;D00B    ;
                      LDA.B #$01                          ;F1C5|----/----\----;A901    ;
                      BRA CODE_00F1D0                     ;F1C7|----/----\----;8007    ;
                                                          ;                   ;        ;
CODE_00F1C9:          LDY.W !InvinsibilityTimer           ;F1C9|----/----\----;AC9014  ; \ Branch if Mario has star 
                      BNE CODE_00F1D0                     ;F1CC|----/----\----;D002    ; / 
CODE_00F1CE:          LDA.B #$06                          ;F1CE|----/----\----;A906    ;
CODE_00F1D0:          STA.B !_5                           ;F1D0|----/----\----;8505    ;
                      CMP.B #$05                          ;F1D2|----/----\----;C905    ;
                      BNE +                               ;F1D4|----/----\----;D004    ;
                      LDA.B #$16                          ;F1D6|----/----\----;A916    ;
                      STA.B !_7                           ;F1D8|----/----\----;8507    ;
                    + TAY                                 ;F1DA|----/----\----;A8      ;
                      LDA.B #$0F                          ;F1DB|----/----\----;A90F    ;
                      TRB.B !TouchBlockXPos               ;F1DD|----/----\----;149A    ;
                      TRB.B !TouchBlockYPos               ;F1DF|----/----\----;1498    ;
                      CPY.B #$06                          ;F1E1|----/----\----;C006    ;
                      BNE CODE_00F1EC                     ;F1E3|----/----\----;D007    ;
                      LDY.W !ObjectTileset                ;F1E5|----/----\----;AC3119  ;
                      CPY.B #$04                          ;F1E8|----/----\----;C004    ;
                      BEQ +                               ;F1EA|----/----\----;F00D    ;
CODE_00F1EC:          PHB                                 ;F1EC|----/----\----;8B      ;
                      LDA.B #$02                          ;F1ED|----/----\----;A902    ;
                      PHA                                 ;F1EF|----/----\----;48      ;
                      PLB                                 ;F1F0|----/----\----;AB      ;
                      JSL CODE_028752                     ;F1F1|----/----\----;22528702;
                      PLB                                 ;F1F5|----/----\----;AB      ;
CODE_00F1F6:          PLX                                 ;F1F6|----/----\----;FA      ;
                      CLC                                 ;F1F7|----/----\----;18      ;
Return00F1F8:         RTL                                 ;F1F8|----/----\----;6B      ; Return 
                                                          ;                   ;        ;
                    + LDA.B !TouchBlockYPos+1             ;F1F9|----/----\----;A599    ;
                      LSR A                               ;F1FB|----/----\----;4A      ;
                      LDA.B !TouchBlockYPos               ;F1FC|----/----\----;A598    ;
                      AND.B #$C0                          ;F1FE|----/----\----;29C0    ;
                      ROL A                               ;F200|----/----\----;2A      ;
                      ROL A                               ;F201|----/----\----;2A      ;
                      ROL A                               ;F202|----/----\----;2A      ;
                      TAY                                 ;F203|----/----\----;A8      ;
                      LDA.B !TouchBlockXPos               ;F204|----/----\----;A59A    ;
                      LSR A                               ;F206|----/----\----;4A      ;
                      LSR A                               ;F207|----/----\----;4A      ;
                      LSR A                               ;F208|----/----\----;4A      ;
                      LSR A                               ;F209|----/----\----;4A      ;
                      TAX                                 ;F20A|----/----\----;AA      ;
                      LDA.W !PBalloonInflating,Y          ;F20B|----/----\----;B9F313  ;
                      ORA.L DATA_00F0EC,X                 ;F20E|----/----\----;1FECF000;
                      LDX.W !PBalloonInflating,Y          ;F212|----/----\----;BEF313  ;
                      STA.W !PBalloonInflating,Y          ;F215|----/----\----;99F313  ;
                      CMP.B #$FF                          ;F218|----/----\----;C9FF    ;
                      BNE CODE_00F226                     ;F21A|----/----\----;D00A    ;
                      LDA.B #$05                          ;F21C|----/----\----;A905    ;
                      STA.B !_5                           ;F21E|----/----\----;8505    ;
CODE_00F220:          LDA.B #$17                          ;F220|----/----\----;A917    ;
                      STA.B !_7                           ;F222|----/----\----;8507    ;
                      BRA CODE_00F1EC                     ;F224|----/----\----;80C6    ;
                                                          ;                   ;        ;
CODE_00F226:          LDA.W !DidPlayBonusGame             ;F226|----/----\----;AD1B14  ;
                      BNE CODE_00F236                     ;F229|----/----\----;D00B    ;
                      TXA                                 ;F22B|----/----\----;8A      ;
                      BEQ +                               ;F22C|----/----\----;F002    ;
                      LDA.B #$02                          ;F22E|----/----\----;A902    ;
                    + EOR.B #$03                          ;F230|----/----\----;4903    ;
                      AND.B !TrueFrame                    ;F232|----/----\----;2513    ;
                      BNE CODE_00F220                     ;F234|----/----\----;D0EA    ;
CODE_00F236:          LDA.B #$2A                          ;F236|----/----\----;A92A    ;
                      STA.W !SPCIO3                       ;F238|----/----\----;8DFC1D  ; / Play sound effect 
                      PHY                                 ;F23B|----/----\----;5A      ;
                      STZ.B !_5                           ;F23C|----/----\----;6405    ;
                      PHB                                 ;F23E|----/----\----;8B      ;
                      LDA.B #$02                          ;F23F|----/----\----;A902    ; \ Set data bank = $02 
                      PHA                                 ;F241|----/----\----;48      ;  | 
                      PLB                                 ;F242|----/----\----;AB      ;
                      JSL CODE_028752                     ;F243|----/----\----;22528702;
                      PLB                                 ;F247|----/----\----;AB      ;
                      PLY                                 ;F248|----/----\----;7A      ;
                      LDX.B #$07                          ;F249|----/----\----;A207    ;
                      LDA.W !PBalloonInflating,Y          ;F24B|----/----\----;B9F313  ;
CODE_00F24E:          LSR A                               ;F24E|----/----\----;4A      ;
                      BCS +                               ;F24F|----/----\----;B010    ;
                      PHA                                 ;F251|----/----\----;48      ;
                      LDA.B #$0D                          ;F252|----/----\----;A90D    ; \ Block to generate = Used block 
                      STA.B !Map16TileGenerate            ;F254|----/----\----;859C    ; / 
                      LDA.L DATA_00F0F8,X                 ;F256|----/----\----;BFF8F000;
                      STA.B !TouchBlockXPos               ;F25A|----/----\----;859A    ;
                      JSL GenerateTile                    ;F25C|----/----\----;22B0BE00;
                      PLA                                 ;F260|----/----\----;68      ;
                    + DEX                                 ;F261|----/----\----;CA      ;
                      BPL CODE_00F24E                     ;F262|----/----\----;10EA    ;
                      JMP CODE_00F1F6                     ;F264|----/----\----;4CF6F1  ;
                                                          ;                   ;        ;
CODE_00F267:          CPY.B #$2E                          ;F267|----/----\----;C02E    ;
                      BNE Return00F28B                    ;F269|----/----\----;D020    ;
                      BIT.B !byetudlrFrame                ;F26B|----/----\----;2416    ;
                      BVC Return00F28B                    ;F26D|----/----\----;501C    ;
                      LDA.W !IsCarryingItem               ;F26F|----/----\----;AD8F14  ;
                      ORA.W !PlayerRidingYoshi            ;F272|----/----\----;0D7A18  ;
                      BNE Return00F28B                    ;F275|----/----\----;D014    ;
                      LDA.B #$02                          ;F277|----/----\----;A902    ;
                      PHA                                 ;F279|----/----\----;48      ;
                      PLB                                 ;F27A|----/----\----;AB      ;
                      JSL CODE_02862F                     ;F27B|----/----\----;222F8602;
                      BMI +                               ;F27F|----/----\----;3008    ;
                      LDA.B #$02                          ;F281|----/----\----;A902    ; \ Block to generate = #$02 
                      STA.B !Map16TileGenerate            ;F283|----/----\----;859C    ; / 
                      JSL GenerateTile                    ;F285|----/----\----;22B0BE00;
                    + PHK                                 ;F289|----/----\----;4B      ;
                      PLB                                 ;F28A|----/----\----;AB      ;
Return00F28B:         RTS                                 ;F28B|----/----\----;60      ; Return 
                                                          ;                   ;        ;
CODE_00F28C:          TYA                                 ;F28C|----/----\----;98      ;
                      SEC                                 ;F28D|----/----\----;38      ;
                      SBC.B #$6F                          ;F28E|----/----\----;E96F    ;
                      CMP.B #$04                          ;F290|----/----\----;C904    ;
                      BCS CODE_00F2C0                     ;F292|----/----\----;B02C    ;
                      CMP.W !OneUpCheckpoints             ;F294|----/----\----;CD2114  ;
                      BEQ CODE_00F2A8                     ;F297|----/----\----;F00F    ;
                      INC A                               ;F299|----/----\----;1A      ;
                      CMP.W !OneUpCheckpoints             ;F29A|----/----\----;CD2114  ;
                      BEQ +                               ;F29D|----/----\----;F020    ;
                      LDA.W !OneUpCheckpoints             ;F29F|----/----\----;AD2114  ;
                      CMP.B #$04                          ;F2A2|----/----\----;C904    ;
                      BCS +                               ;F2A4|----/----\----;B019    ;
                      LDA.B #$FF                          ;F2A6|----/----\----;A9FF    ;
CODE_00F2A8:          INC A                               ;F2A8|----/----\----;1A      ;
                      STA.W !OneUpCheckpoints             ;F2A9|----/----\----;8D2114  ;
                      CMP.B #$04                          ;F2AC|----/----\----;C904    ;
                      BNE +                               ;F2AE|----/----\----;D00F    ;
                      PHX                                 ;F2B0|----/----\----;DA      ;
                      JSL TriggerInivis1Up                ;F2B1|----/----\----;22D9C203;
                      JSR CODE_00F3B2                     ;F2B5|----/----\----;20B2F3  ;
                      ORA.W !Checkpoint1upCollected,Y     ;F2B8|----/----\----;193C1F  ;
                      STA.W !Checkpoint1upCollected,Y     ;F2BB|----/----\----;993C1F  ;
                      PLX                                 ;F2BE|----/----\----;FA      ;
                    + RTS                                 ;F2BF|----/----\----;60      ; Return 
                                                          ;                   ;        ;
CODE_00F2C0:          LDA.B #$01                          ;F2C0|----/----\----;A901    ;
CODE_00F2C2:          CPY.B #$06                          ;F2C2|----/----\----;C006    ;
                      BCS CODE_00F2C9                     ;F2C4|----/----\----;B003    ;
                      TSB.B !GraphicsCompPtr              ;F2C6|----/----\----;048A    ;
                      RTS                                 ;F2C8|----/----\----;60      ; Return 
                                                          ;                   ;        ;
CODE_00F2C9:          CPY.B #$38                          ;F2C9|----/----\----;C038    ;
                      BNE CODE_00F2EE                     ;F2CB|----/----\----;D021    ;
                      LDA.B #$02                          ;F2CD|----/----\----;A902    ; \ Block to generate = #$02 
                      STA.B !Map16TileGenerate            ;F2CF|----/----\----;859C    ; / 
                      JSL GenerateTile                    ;F2D1|----/----\----;22B0BE00;
                      JSR CODE_00FD5A                     ;F2D5|----/----\----;205AFD  ;
                      LDA.W !DisableMidway                ;F2D8|----/----\----;ADCD13  ;
                      BEQ +                               ;F2DB|----/----\----;F003    ;
                      JSR CODE_00CA2B                     ;F2DD|----/----\----;202BCA  ;
                    + LDA.B !Powerup                      ;F2E0|----/----\----;A519    ;
                      BNE +                               ;F2E2|----/----\----;D004    ;
                      LDA.B #$01                          ;F2E4|----/----\----;A901    ;
                      STA.B !Powerup                      ;F2E6|----/----\----;8519    ;
                    + LDA.B #$05                          ;F2E8|----/----\----;A905    ;
                      STA.W !SPCIO0                       ;F2EA|----/----\----;8DF91D  ; / Play sound effect 
                      RTS                                 ;F2ED|----/----\----;60      ; Return 
                                                          ;                   ;        ;
CODE_00F2EE:          CPY.B #$06                          ;F2EE|----/----\----;C006    ;
                      BEQ CODE_00F2FC                     ;F2F0|----/----\----;F00A    ;
                      CPY.B #$07                          ;F2F2|----/----\----;C007    ;
                      BCC CODE_00F309                     ;F2F4|----/----\----;9013    ;
                      CPY.B #$1D                          ;F2F6|----/----\----;C01D    ;
                      BCS CODE_00F309                     ;F2F8|----/----\----;B00F    ;
                      ORA.B #$80                          ;F2FA|----/----\----;0980    ;
CODE_00F2FC:          CMP.B #$01                          ;F2FC|----/----\----;C901    ;
                      BNE +                               ;F2FE|----/----\----;D002    ;
                      ORA.B #$18                          ;F300|----/----\----;0918    ;
                    + TSB.B !GraphicsCompPtr+1            ;F302|----/----\----;048B    ;
                      LDA.B !PlayerBlockXSide             ;F304|----/----\----;A593    ;
                      STA.B !GraphicsCompPtr+2            ;F306|----/----\----;858C    ;
                      RTS                                 ;F308|----/----\----;60      ; Return 
                                                          ;                   ;        ;
CODE_00F309:          CPY.B #$2F                          ;F309|----/----\----;C02F    ;
                      BCS CODE_00F311                     ;F30B|----/----\----;B004    ;
                      CPY.B #$2A                          ;F30D|----/----\----;C02A    ;
                      BCS CODE_00F32B                     ;F30F|----/----\----;B01A    ;
CODE_00F311:          CPY.B #$6E                          ;F311|----/----\----;C06E    ;
                      BNE Return00F376                    ;F313|----/----\----;D061    ;
                      LDA.B #$0F                          ;F315|----/----\----;A90F    ;
                      JSL CODE_00F38A                     ;F317|----/----\----;228AF300;
                      INC.W !MoonCounter                  ;F31B|----/----\----;EEC513  ;
                      PHX                                 ;F31E|----/----\----;DA      ;
                      JSR CODE_00F3B2                     ;F31F|----/----\----;20B2F3  ;
                      ORA.W !MoonCollected,Y              ;F322|----/----\----;19EE1F  ;
                      STA.W !MoonCollected,Y              ;F325|----/----\----;99EE1F  ;
                      PLX                                 ;F328|----/----\----;FA      ;
                      BRA CODE_00F36B                     ;F329|----/----\----;8040    ;
                                                          ;                   ;        ;
CODE_00F32B:          BNE CODE_00F332                     ;F32B|----/----\----;D005    ;YOSHI COIN HANDLER        
                      LDA.W !BluePSwitchTimer             ;F32D|----/----\----;ADAD14  ;
                      BEQ Return00F376                    ;F330|----/----\----;F044    ;
CODE_00F332:          CPY.B #$2D                          ;F332|----/----\----;C02D    ;
                      BEQ CODE_00F33F                     ;F334|----/----\----;F009    ;
                      BCC CODE_00F367                     ;F336|----/----\----;902F    ;
                      LDA.B !TouchBlockYPos               ;F338|----/----\----;A598    ;
                      SEC                                 ;F33A|----/----\----;38      ;
                      SBC.B #$10                          ;F33B|----/----\----;E910    ;
                      STA.B !TouchBlockYPos               ;F33D|----/----\----;8598    ;
CODE_00F33F:          JSL CODE_00F377                     ;F33F|----/----\----;2277F300;
                      INC.W !DragonCoinsShown             ;F343|----/----\----;EE2214  ;
                      LDA.W !DragonCoinsShown             ;F346|----/----\----;AD2214  ;
                      CMP.B #$05                          ;F349|----/----\----;C905    ;
                      BCC +                               ;F34B|----/----\----;900B    ;
                      PHX                                 ;F34D|----/----\----;DA      ;
                      JSR CODE_00F3B2                     ;F34E|----/----\----;20B2F3  ;
                      ORA.W !AllDragonCoinsCollected,Y    ;F351|----/----\----;192F1F  ;
                      STA.W !AllDragonCoinsCollected,Y    ;F354|----/----\----;992F1F  ;
                      PLX                                 ;F357|----/----\----;FA      ;
                    + LDA.B #$1C                          ;F358|----/----\----;A91C    ;
                      STA.W !SPCIO0                       ;F35A|----/----\----;8DF91D  ; / Play sound effect 
                      LDA.B #$01                          ;F35D|----/----\----;A901    ;
                      JSL CODE_05B330                     ;F35F|----/----\----;2230B305;
                      LDY.B #$18                          ;F363|----/----\----;A018    ;
                      BRA +                               ;F365|----/----\----;8006    ;
                                                          ;                   ;        ;
CODE_00F367:          JSL CODE_05B34A                     ;F367|----/----\----;224AB305;
CODE_00F36B:          LDY.B #$01                          ;F36B|----/----\----;A001    ; \ Block to generate = #$01 
                    + STY.B !Map16TileGenerate            ;F36D|----/----\----;849C    ; / 
                      JSL GenerateTile                    ;F36F|----/----\----;22B0BE00;
                      JSR CODE_00FD5A                     ;F373|----/----\----;205AFD  ;
Return00F376:         RTS                                 ;F376|----/----\----;60      ; Return 
                                                          ;                   ;        ;
CODE_00F377:          LDA.W !DragonCoinsCollected         ;F377|----/----\----;AD2014  ;
                      INC.W !DragonCoinsCollected         ;F37A|----/----\----;EE2014  ;
                      CLC                                 ;F37D|----/----\----;18      ;
                      ADC.B #$09                          ;F37E|----/----\----;6909    ;
                      CMP.B #$0D                          ;F380|----/----\----;C90D    ;
                      BCC +                               ;F382|----/----\----;9002    ;
                      LDA.B #$0D                          ;F384|----/----\----;A90D    ;
                    + BRA CODE_00F38A                     ;F386|----/----\----;8002    ;
                                                          ;                   ;        ;
CODE_00F388:          LDA.B #$0D                          ;F388|----/----\----;A90D    ;
CODE_00F38A:          PHA                                 ;F38A|----/----\----;48      ;
                      JSL CODE_02AD34                     ;F38B|----/----\----;2234AD02;
                      PLA                                 ;F38F|----/----\----;68      ;
                      STA.W !ScoreSpriteNumber,Y          ;F390|----/----\----;99E116  ;
                      LDA.B !PlayerXPosNext               ;F393|----/----\----;A594    ;
                      STA.W !ScoreSpriteXPosLow,Y         ;F395|----/----\----;99ED16  ;
                      LDA.B !PlayerXPosNext+1             ;F398|----/----\----;A595    ;
                      STA.W !ScoreSpriteXPosHigh,Y        ;F39A|----/----\----;99F316  ;
                      LDA.B !PlayerYPosNext               ;F39D|----/----\----;A596    ;
                      STA.W !ScoreSpriteYPosLow,Y         ;F39F|----/----\----;99E716  ;
                      LDA.B !PlayerYPosNext+1             ;F3A2|----/----\----;A597    ;
                      STA.W !ScoreSpriteYPosHigh,Y        ;F3A4|----/----\----;99F916  ;
                      LDA.B #$30                          ;F3A7|----/----\----;A930    ;
                      STA.W !ScoreSpriteTimer,Y           ;F3A9|----/----\----;99FF16  ;
                      LDA.B #$00                          ;F3AC|----/----\----;A900    ;
                      STA.W !ScoreSpriteLayer,Y           ;F3AE|----/----\----;990517  ;
                      RTL                                 ;F3B1|----/----\----;6B      ; Return 
                                                          ;                   ;        ;
CODE_00F3B2:          LDA.W !TranslevelNo                 ;F3B2|----/----\----;ADBF13  ;
                      LSR A                               ;F3B5|----/----\----;4A      ;
                      LSR A                               ;F3B6|----/----\----;4A      ;
                      LSR A                               ;F3B7|----/----\----;4A      ;
                      TAY                                 ;F3B8|----/----\----;A8      ;
                      LDA.W !TranslevelNo                 ;F3B9|----/----\----;ADBF13  ;
                      AND.B #$07                          ;F3BC|----/----\----;2907    ;
                      TAX                                 ;F3BE|----/----\----;AA      ;
                      LDA.L DATA_05B35B,X                 ;F3BF|----/----\----;BF5BB305;
                      RTS                                 ;F3C3|----/----\----;60      ; Return 
                                                          ;                   ;        ;
CODE_00F3C4:          CPY.B #$3F                          ;F3C4|----/----\----;C03F    ;
                      BNE Return00F376                    ;F3C6|----/----\----;D0AE    ;
                      LDY.B !GraphicsUncompPtr+2          ;F3C8|----/----\----;A48F    ;
                      BEQ +                               ;F3CA|----/----\----;F003    ;
                      JMP CODE_00F43F                     ;F3CC|----/----\----;4C3FF4  ;
                                                          ;                   ;        ;
                    + PHX                                 ;F3CF|----/----\----;DA      ;
                      TAX                                 ;F3D0|----/----\----;AA      ;
                      LDA.B !PlayerXPosNext               ;F3D1|----/----\----;A594    ;
                      TXY                                 ;F3D3|----/----\----;9B      ;
                      BEQ +                               ;F3D4|----/----\----;F003    ;
                      EOR.B #$FF                          ;F3D6|----/----\----;49FF    ;
                      INC A                               ;F3D8|----/----\----;1A      ;
                    + AND.B #$0F                          ;F3D9|----/----\----;290F    ;
                      ASL A                               ;F3DB|----/----\----;0A      ;
                      CLC                                 ;F3DC|----/----\----;18      ;
                      ADC.B #$20                          ;F3DD|----/----\----;6920    ;
                      LDY.B #$05                          ;F3DF|----/----\----;A005    ;
                      BRA CODE_00F40A                     ;F3E1|----/----\----;8027    ;
                                                          ;                   ;        ;
                                                          ;                   ;        ;
DATA_00F3E3:          db $0A,$FF                          ;F3E3|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00F3E5:          db $02,$01,$08,$04                  ;F3E5|----/----\----;        ;
                                                          ;                   ;        ;
CODE_00F3E9:          XBA                                 ;F3E9|----/----\----;EB      ;
                      TYA                                 ;F3EA|----/----\----;98      ;
                      SEC                                 ;F3EB|----/----\----;38      ;
                      SBC.B #$37                          ;F3EC|----/----\----;E937    ;
                      CMP.B #$02                          ;F3EE|----/----\----;C902    ;
                      BCS Return00F442                    ;F3F0|----/----\----;B050    ;
                      TAY                                 ;F3F2|----/----\----;A8      ;
                      LDA.B !PlayerXPosInBlock            ;F3F3|----/----\----;A592    ;
                      SBC.W DATA_00F3E3,Y                 ;F3F5|----/----\----;F9E3F3  ;
                      CMP.B #$05                          ;F3F8|----/----\----;C905    ;
                      BCS CODE_00F43F                     ;F3FA|----/----\----;B043    ;
                      PHX                                 ;F3FC|----/----\----;DA      ;
                      XBA                                 ;F3FD|----/----\----;EB      ;
                      TAX                                 ;F3FE|----/----\----;AA      ;
                      LDA.B #$20                          ;F3FF|----/----\----;A920    ;
                      LDY.W !PlayerRidingYoshi            ;F401|----/----\----;AC7A18  ;
                      BEQ +                               ;F404|----/----\----;F002    ;
                      LDA.B #$30                          ;F406|----/----\----;A930    ;
                    + LDY.B #$06                          ;F408|----/----\----;A006    ;
CODE_00F40A:          STA.B !PipeTimer                    ;F40A|----/----\----;8588    ;
                      LDA.B !byetudlrHold                 ;F40C|----/----\----;A515    ;
                      AND.W DATA_00F3E5,X                 ;F40E|----/----\----;3DE5F3  ;
                      BEQ CODE_00F43E                     ;F411|----/----\----;F02B    ;
                      STA.B !SpriteLock                   ;F413|----/----\----;859D    ;
                      AND.B #$01                          ;F415|----/----\----;2901    ;
                      STA.B !PlayerDirection              ;F417|----/----\----;8576    ;
                      STX.B !PlayerPipeAction             ;F419|----/----\----;8689    ;
                      TXA                                 ;F41B|----/----\----;8A      ;
                      LSR A                               ;F41C|----/----\----;4A      ;
                      TAX                                 ;F41D|----/----\----;AA      ;
                      BNE +                               ;F41E|----/----\----;D010    ;
                      LDA.W !IsCarryingItem               ;F420|----/----\----;AD8F14  ;
                      BEQ +                               ;F423|----/----\----;F00B    ;
                      LDA.B !PlayerDirection              ;F425|----/----\----;A576    ;
                      EOR.B #$01                          ;F427|----/----\----;4901    ;
                      STA.B !PlayerDirection              ;F429|----/----\----;8576    ;
                      LDA.B #$08                          ;F42B|----/----\----;A908    ;
                      STA.W !FaceScreenTimer              ;F42D|----/----\----;8D9914  ;
                    + INX                                 ;F430|----/----\----;E8      ;
                      STX.W !YoshiInPipeSetting           ;F431|----/----\----;8E1914  ;
                      STY.B !PlayerAnimation              ;F434|----/----\----;8471    ;
                      JSR NoButtons                       ;F436|----/----\----;202DF6  ;
                      LDA.B #$04                          ;F439|----/----\----;A904    ;
                      STA.W !SPCIO0                       ;F43B|----/----\----;8DF91D  ; / Play sound effect 
CODE_00F43E:          PLX                                 ;F43E|----/----\----;FA      ;
CODE_00F43F:          LDY.W !Map16TileNumber              ;F43F|----/----\----;AC9316  ;
Return00F442:         RTS                                 ;F442|----/----\----;60      ; Return 
                                                          ;                   ;        ;
CODE_00F443:          LDA.B !PlayerXPosNext               ;F443|----/----\----;A594    ;
                      CLC                                 ;F445|----/----\----;18      ;
                      ADC.B #$04                          ;F446|----/----\----;6904    ;
                      AND.B #$0F                          ;F448|----/----\----;290F    ;
                      CMP.B #$08                          ;F44A|----/----\----;C908    ;
                      RTS                                 ;F44C|----/----\----;60      ; Return 
                                                          ;                   ;        ;
CODE_00F44D:          INX                                 ;F44D|----/----\----;E8      ;
                      INX                                 ;F44E|----/----\----;E8      ;
                      REP #$20                            ;F44F|----/----\----;C220    ; Accum (16 bit) 
                      LDA.B !PlayerXPosNext               ;F451|----/----\----;A594    ;
                      CLC                                 ;F453|----/----\----;18      ;
                      ADC.W DATA_00E830,X                 ;F454|----/----\----;7D30E8  ;
                      STA.B !TouchBlockXPos               ;F457|----/----\----;859A    ;
                      LDA.B !PlayerYPosNext               ;F459|----/----\----;A596    ;
                      CLC                                 ;F45B|----/----\----;18      ;
                      ADC.W DATA_00E89C,X                 ;F45C|----/----\----;7D9CE8  ;
                      STA.B !TouchBlockYPos               ;F45F|----/----\----;8598    ;
CODE_00F461:          JSR CODE_00F465                     ;F461|----/----\----;2065F4  ;
                      RTS                                 ;F464|----/----\----;60      ; Return 
                                                          ;                   ;        ;
CODE_00F465:          SEP #$20                            ;F465|----/----\----;E220    ; Accum (8 bit) 
                      STZ.W !SwitchPalacePressed          ;F467|----/----\----;9C2314  ;
                      PHX                                 ;F46A|----/----\----;DA      ;
                      LDA.B !GraphicsUncompPtr+1          ;F46B|----/----\----;A58E    ;
                      BPL +                               ;F46D|----/----\----;1003    ;
                      JMP CODE_00F4EC                     ;F46F|----/----\----;4CECF4  ;
                                                          ;                   ;        ;
                    + BNE CODE_00F4A6                     ;F472|----/----\----;D032    ;
                      REP #$20                            ;F474|----/----\----;C220    ; Accum (16 bit) 
                      LDA.B !TouchBlockYPos               ;F476|----/----\----;A598    ;
                      CMP.W #$01B0                        ;F478|----/----\----;C9B001  ;
                      SEP #$20                            ;F47B|----/----\----;E220    ; Accum (8 bit) 
                      BCS CODE_00F4A0                     ;F47D|----/----\----;B021    ;
                      AND.B #$F0                          ;F47F|----/----\----;29F0    ;
                      STA.B !_0                           ;F481|----/----\----;8500    ;
                      LDX.B !TouchBlockXPos+1             ;F483|----/----\----;A69B    ;
                      CPX.B !LevelScrLength               ;F485|----/----\----;E45D    ;
                      BCS CODE_00F4A0                     ;F487|----/----\----;B017    ;
                      LDA.B !TouchBlockXPos               ;F489|----/----\----;A59A    ;
                      LSR A                               ;F48B|----/----\----;4A      ;
                      LSR A                               ;F48C|----/----\----;4A      ;
                      LSR A                               ;F48D|----/----\----;4A      ;
                      LSR A                               ;F48E|----/----\----;4A      ;
                      ORA.B !_0                           ;F48F|----/----\----;0500    ;
                      CLC                                 ;F491|----/----\----;18      ;
                      ADC.L DATA_00BA60,X                 ;F492|----/----\----;7F60BA00;
                      STA.B !_0                           ;F496|----/----\----;8500    ;
                      LDA.B !TouchBlockYPos+1             ;F498|----/----\----;A599    ;
                      ADC.L DATA_00BA9C,X                 ;F49A|----/----\----;7F9CBA00;
                      BRA CODE_00F4CD                     ;F49E|----/----\----;802D    ;
                                                          ;                   ;        ;
CODE_00F4A0:          PLX                                 ;F4A0|----/----\----;FA      ;
                      LDY.B #$25                          ;F4A1|----/----\----;A025    ;
CODE_00F4A3:          LDA.B #$00                          ;F4A3|----/----\----;A900    ;
                      RTS                                 ;F4A5|----/----\----;60      ; Return 
                                                          ;                   ;        ;
CODE_00F4A6:          LDA.B !TouchBlockXPos+1             ;F4A6|----/----\----;A59B    ;
                      CMP.B #$02                          ;F4A8|----/----\----;C902    ;
                      BCS CODE_00F4E7                     ;F4AA|----/----\----;B03B    ;
                      LDX.B !TouchBlockYPos+1             ;F4AC|----/----\----;A699    ;
                      CPX.B !LevelScrLength               ;F4AE|----/----\----;E45D    ;
                      BCS CODE_00F4E7                     ;F4B0|----/----\----;B035    ;
                      LDA.B !TouchBlockYPos               ;F4B2|----/----\----;A598    ;
                      AND.B #$F0                          ;F4B4|----/----\----;29F0    ;
                      STA.B !_0                           ;F4B6|----/----\----;8500    ;
                      LDA.B !TouchBlockXPos               ;F4B8|----/----\----;A59A    ;
                      LSR A                               ;F4BA|----/----\----;4A      ;
                      LSR A                               ;F4BB|----/----\----;4A      ;
                      LSR A                               ;F4BC|----/----\----;4A      ;
                      LSR A                               ;F4BD|----/----\----;4A      ;
                      ORA.B !_0                           ;F4BE|----/----\----;0500    ;
                      CLC                                 ;F4C0|----/----\----;18      ;
                      ADC.L DATA_00BA80,X                 ;F4C1|----/----\----;7F80BA00;
                      STA.B !_0                           ;F4C5|----/----\----;8500    ;
                      LDA.B !TouchBlockXPos+1             ;F4C7|----/----\----;A59B    ;
                      ADC.L DATA_00BABC,X                 ;F4C9|----/----\----;7FBCBA00;
CODE_00F4CD:          STA.B !_1                           ;F4CD|----/----\----;8501    ;
                      LDA.B #$7E                          ;F4CF|----/----\----;A97E    ;
                      STA.B !_2                           ;F4D1|----/----\----;8502    ;
                      LDA.B [!_0]                         ;F4D3|----/----\----;A700    ;
                      STA.W !Map16TileNumber              ;F4D5|----/----\----;8D9316  ;
                      INC.B !_2                           ;F4D8|----/----\----;E602    ;
                      PLX                                 ;F4DA|----/----\----;FA      ;
                      LDA.B [!_0]                         ;F4DB|----/----\----;A700    ;
                      JSL CODE_00F545                     ;F4DD|----/----\----;2245F500;
                      LDY.W !Map16TileNumber              ;F4E1|----/----\----;AC9316  ;
                      CMP.B #$00                          ;F4E4|----/----\----;C900    ;
                      RTS                                 ;F4E6|----/----\----;60      ; Return 
                                                          ;                   ;        ;
CODE_00F4E7:          PLX                                 ;F4E7|----/----\----;FA      ;
                      LDY.B #$25                          ;F4E8|----/----\----;A025    ;
                      BRA CODE_00F4A3                     ;F4EA|----/----\----;80B7    ;
                                                          ;                   ;        ;
CODE_00F4EC:          ASL A                               ;F4EC|----/----\----;0A      ;
                      BNE CODE_00F51B                     ;F4ED|----/----\----;D02C    ;
                      REP #$20                            ;F4EF|----/----\----;C220    ; Accum (16 bit) 
                      LDA.B !TouchBlockYPos               ;F4F1|----/----\----;A598    ;
                      CMP.W #$01B0                        ;F4F3|----/----\----;C9B001  ;
                      SEP #$20                            ;F4F6|----/----\----;E220    ; Accum (8 bit) 
                      BCS CODE_00F4E7                     ;F4F8|----/----\----;B0ED    ;
                      AND.B #$F0                          ;F4FA|----/----\----;29F0    ;
                      STA.B !_0                           ;F4FC|----/----\----;8500    ;
                      LDX.B !TouchBlockXPos+1             ;F4FE|----/----\----;A69B    ;
                      CPX.B #$10                          ;F500|----/----\----;E010    ;
                      BCS CODE_00F4E7                     ;F502|----/----\----;B0E3    ;
                      LDA.B !TouchBlockXPos               ;F504|----/----\----;A59A    ;
                      LSR A                               ;F506|----/----\----;4A      ;
                      LSR A                               ;F507|----/----\----;4A      ;
                      LSR A                               ;F508|----/----\----;4A      ;
                      LSR A                               ;F509|----/----\----;4A      ;
                      ORA.B !_0                           ;F50A|----/----\----;0500    ;
                      CLC                                 ;F50C|----/----\----;18      ;
                      ADC.L DATA_00BA70,X                 ;F50D|----/----\----;7F70BA00;
                      STA.B !_0                           ;F511|----/----\----;8500    ;
                      LDA.B !TouchBlockYPos+1             ;F513|----/----\----;A599    ;
                      ADC.L DATA_00BAAC,X                 ;F515|----/----\----;7FACBA00;
                      BRA CODE_00F4CD                     ;F519|----/----\----;80B2    ;
                                                          ;                   ;        ;
CODE_00F51B:          LDA.B !TouchBlockXPos+1             ;F51B|----/----\----;A59B    ;
                      CMP.B #$02                          ;F51D|----/----\----;C902    ;
                      BCS CODE_00F4E7                     ;F51F|----/----\----;B0C6    ;
                      LDX.B !TouchBlockYPos+1             ;F521|----/----\----;A699    ;
                      CPX.B #$0E                          ;F523|----/----\----;E00E    ;
                      BCS CODE_00F4E7                     ;F525|----/----\----;B0C0    ;
                      LDA.B !TouchBlockYPos               ;F527|----/----\----;A598    ;
                      AND.B #$F0                          ;F529|----/----\----;29F0    ;
                      STA.B !_0                           ;F52B|----/----\----;8500    ;
                      LDA.B !TouchBlockXPos               ;F52D|----/----\----;A59A    ;
                      LSR A                               ;F52F|----/----\----;4A      ;
                      LSR A                               ;F530|----/----\----;4A      ;
                      LSR A                               ;F531|----/----\----;4A      ;
                      LSR A                               ;F532|----/----\----;4A      ;
                      ORA.B !_0                           ;F533|----/----\----;0500    ;
                      CLC                                 ;F535|----/----\----;18      ;
                      ADC.L DATA_00BA8E,X                 ;F536|----/----\----;7F8EBA00;
                      STA.B !_0                           ;F53A|----/----\----;8500    ;
                      LDA.B !TouchBlockXPos+1             ;F53C|----/----\----;A59B    ;
                      ADC.L DATA_00BACA,X                 ;F53E|----/----\----;7FCABA00;
                      JMP CODE_00F4CD                     ;F542|----/----\----;4CCDF4  ;
                                                          ;                   ;        ;
CODE_00F545:          TAY                                 ;F545|----/----\----;A8      ;
                      BNE CODE_00F577                     ;F546|----/----\----;D02F    ;
                      LDY.W !Map16TileNumber              ;F548|----/----\----;AC9316  ; Load MAP16 tile number 
                      CPY.B #$29                          ;F54B|----/----\----;C029    ; \ If block isn't "Invisible POW ? block", 
                      BNE PSwitchNotInvQBlk               ;F54D|----/----\----;D00B    ; / branch to PSwitchNotInvQBlk 
                      LDY.W !BluePSwitchTimer             ;F54F|----/----\----;ACAD14  ;
                      BEQ Return00F594                    ;F552|----/----\----;F040    ;
                      LDA.B #$24                          ;F554|----/----\----;A924    ;
                      STA.W !Map16TileNumber              ;F556|----/----\----;8D9316  ;
                      RTL                                 ;F559|----/----\----;6B      ; Return 
                                                          ;                   ;        ;
PSwitchNotInvQBlk:    CPY.B #$2B                          ;F55A|----/----\----;C02B    ; \ If block is "Coin", 
                      BEQ PSwitchCoinBrown                ;F55C|----/----\----;F00E    ; / branch to PSwitchCoinBrown 
                      TYA                                 ;F55E|----/----\----;98      ;
                      SEC                                 ;F55F|----/----\----;38      ;
                      SBC.B #$EC                          ;F560|----/----\----;E9EC    ;
                      CMP.B #$10                          ;F562|----/----\----;C910    ;
                      BCS CODE_00F592                     ;F564|----/----\----;B02C    ;
                      INC A                               ;F566|----/----\----;1A      ;
                      STA.W !SwitchPalacePressed          ;F567|----/----\----;8D2314  ;
                      BRA CODE_00F571                     ;F56A|----/----\----;8005    ;
                                                          ;                   ;        ;
PSwitchCoinBrown:     LDY.W !BluePSwitchTimer             ;F56C|----/----\----;ACAD14  ;
                      BEQ Return00F594                    ;F56F|----/----\----;F023    ;
CODE_00F571:          LDA.B #$32                          ;F571|----/----\----;A932    ;
                      STA.W !Map16TileNumber              ;F573|----/----\----;8D9316  ;
                      RTL                                 ;F576|----/----\----;6B      ; Return 
                                                          ;                   ;        ;
CODE_00F577:          LDY.W !Map16TileNumber              ;F577|----/----\----;AC9316  ;
                      CPY.B #$32                          ;F57A|----/----\----;C032    ;
                      BNE CODE_00F584                     ;F57C|----/----\----;D006    ;
                      LDY.W !BluePSwitchTimer             ;F57E|----/----\----;ACAD14  ;
                      BNE CODE_00F58D                     ;F581|----/----\----;D00A    ;
                      RTL                                 ;F583|----/----\----;6B      ; Return 
                                                          ;                   ;        ;
CODE_00F584:          CPY.B #$2F                          ;F584|----/----\----;C02F    ;
                      BNE Return00F594                    ;F586|----/----\----;D00C    ;
                      LDY.W !SilverPSwitchTimer           ;F588|----/----\----;ACAE14  ;
                      BEQ Return00F594                    ;F58B|----/----\----;F007    ;
CODE_00F58D:          LDY.B #$2B                          ;F58D|----/----\----;A02B    ;
                      STY.W !Map16TileNumber              ;F58F|----/----\----;8C9316  ;
CODE_00F592:          LDA.B #$00                          ;F592|----/----\----;A900    ;
Return00F594:         RTL                                 ;F594|----/----\----;6B      ; Return 
                                                          ;                   ;        ;
CODE_00F595:          REP #$20                            ;F595|----/----\----;C220    ; Accum (16 bit) 
                      LDA.W #$FF80                        ;F597|----/----\----;A980FF  ;
                      CLC                                 ;F59A|----/----\----;18      ;
                      ADC.B !Layer1YPos                   ;F59B|----/----\----;651C    ;
                      CMP.B !PlayerYPosNext               ;F59D|----/----\----;C596    ;
                      BMI +                               ;F59F|----/----\----;3002    ;
                      STA.B !PlayerYPosNext               ;F5A1|----/----\----;8596    ;
                    + SEP #$20                            ;F5A3|----/----\----;E220    ; Accum (8 bit) 
                      LDA.B !PlayerYPosScrRel+1           ;F5A5|----/----\----;A581    ;
                      DEC A                               ;F5A7|----/----\----;3A      ;
                      BMI Return00F5B6                    ;F5A8|----/----\----;300C    ;
                      LDA.W !YoshiHeavenFlag              ;F5AA|----/----\----;AD951B  ;
                      BEQ +                               ;F5AD|----/----\----;F003    ;
                      JMP CODE_00C95B                     ;F5AF|----/----\----;4C5BC9  ;
                                                          ;                   ;        ;
                    + JSL CODE_00F60A                     ;F5B2|----/----\----;220AF600;
Return00F5B6:         RTS                                 ;F5B6|----/----\----;60      ; Return 
                                                          ;                   ;        ;
HurtMario:            LDA.B !PlayerAnimation              ;F5B7|----/----\----;A571    ; \ Return if animation sequence activated 
                      BNE Return00F628                    ;F5B9|----/----\----;D06D    ; / 
                      LDA.W !IFrameTimer                  ;F5BB|----/----\----;AD9714  ; \ If flashing... 
                      ORA.W !InvinsibilityTimer           ;F5BE|----/----\----;0D9014  ;  | ...or have star... 
                      ORA.W !EndLevelTimer                ;F5C1|----/----\----;0D9314  ;  | ...or level ending... 
                      BNE Return00F628                    ;F5C4|----/----\----;D062    ; / ...return 
                      STZ.W !GameCloudCoinCount           ;F5C6|----/----\----;9CE318  ;
                      LDA.W !WallrunningType              ;F5C9|----/----\----;ADE313  ;
                      BEQ +                               ;F5CC|----/----\----;F007    ;
                      PHB                                 ;F5CE|----/----\----;8B      ;
                      PHK                                 ;F5CF|----/----\----;4B      ;
                      PLB                                 ;F5D0|----/----\----;AB      ;
                      JSR ADDR_00EB42                     ;F5D1|----/----\----;2042EB  ;
                      PLB                                 ;F5D4|----/----\----;AB      ;
                    + LDA.B !Powerup                      ;F5D5|----/----\----;A519    ; \ If Mario is small, kill him 
                      BEQ KillMario                       ;F5D7|----/----\----;F02D    ; / 
                      CMP.B #$02                          ;F5D9|----/----\----;C902    ; \ Branch if not Caped Mario 
                      BNE PowerDown                       ;F5DB|----/----\----;D016    ; / 
                      LDA.W !FlightPhase                  ;F5DD|----/----\----;AD0714  ; \ Branch if not soaring 
                      BEQ PowerDown                       ;F5E0|----/----\----;F011    ; / 
                      LDY.B #$0F                          ;F5E2|----/----\----;A00F    ; \ Break Mario out of soaring 
                      STY.W !SPCIO0                       ;F5E4|----/----\----;8CF91D  ;  | (Play sound effect) 
                      LDA.B #$01                          ;F5E7|----/----\----;A901    ;  | (Set spin jump flag) 
                      STA.W !SpinJumpFlag                 ;F5E9|----/----\----;8D0D14  ;  | 
                      LDA.B #$30                          ;F5EC|----/----\----;A930    ;  | (Set flashing timer) 
                      STA.W !IFrameTimer                  ;F5EE|----/----\----;8D9714  ; / 
                      BRA CODE_00F622                     ;F5F1|----/----\----;802F    ;
                                                          ;                   ;        ;
PowerDown:            LDY.B #$04                          ;F5F3|----/----\----;A004    ; \ Play sound effect 
                      STY.W !SPCIO0                       ;F5F5|----/----\----;8CF91D  ; / 
                      JSL CODE_028008                     ;F5F8|----/----\----;22088002;
                      LDA.B #$01                          ;F5FC|----/----\----;A901    ; \ Set power down animation 
                      STA.B !PlayerAnimation              ;F5FE|----/----\----;8571    ; / 
                      STZ.B !Powerup                      ;F600|----/----\----;6419    ; Mario status = Small 
                      LDA.B #$2F                          ;F602|----/----\----;A92F    ;
                      BRA +                               ;F604|----/----\----;8017    ;
                                                          ;                   ;        ;
KillMario:            LDA.B #$90                          ;F606|----/----\----;A990    ; \ Mario Y speed = #$90 
                      STA.B !PlayerYSpeed                 ;F608|----/----\----;857D    ; / 
CODE_00F60A:          LDA.B #$09                          ;F60A|----/----\----;A909    ; \ 
                      STA.W !SPCIO2                       ;F60C|----/----\----;8DFB1D  ; / Change music 
                      LDA.B #$FF                          ;F60F|----/----\----;A9FF    ;
                      STA.W !MusicBackup                  ;F611|----/----\----;8DDA0D  ;
                      LDA.B #$09                          ;F614|----/----\----;A909    ; \ Animation sequence = Kill Mario 
                      STA.B !PlayerAnimation              ;F616|----/----\----;8571    ; / 
                      STZ.W !SpinJumpFlag                 ;F618|----/----\----;9C0D14  ; Spin jump flag = 0 
                      LDA.B #$30                          ;F61B|----/----\----;A930    ;
                    + STA.W !PlayerAniTimer               ;F61D|----/----\----;8D9614  ; Set hurt frame timer 
                      STA.B !SpriteLock                   ;F620|----/----\----;859D    ; set lock sprite timer 
CODE_00F622:          STZ.W !FlightPhase                  ;F622|----/----\----;9C0714  ; Cape status = 0 
                      STZ.W !Empty188A                    ;F625|----/----\----;9C8A18  ;
Return00F628:         RTL                                 ;F628|----/----\----;6B      ; Return 
                                                          ;                   ;        ;
CODE_00F629:          JSL KillMario                       ;F629|----/----\----;2206F600;
NoButtons:            STZ.B !byetudlrHold                 ;F62D|----/----\----;6415    ; Zero RAM mirrors for controller Input 
                      STZ.B !byetudlrFrame                ;F62F|----/----\----;6416    ;
                      STZ.B !axlr0000Hold                 ;F631|----/----\----;6417    ;
                      STZ.B !axlr0000Frame                ;F633|----/----\----;6418    ;
                      RTS                                 ;F635|----/----\----;60      ; Return 
                                                          ;                   ;        ;
CODE_00F636:          REP #$20                            ;F636|----/----\----;C220    ; Accum (16 bit) 
                      LDX.B #$00                          ;F638|----/----\----;A200    ;
                      LDA.B !_9                           ;F63A|----/----\----;A509    ;
                      ORA.W #$0800                        ;F63C|----/----\----;090008  ;
                      CMP.B !_9                           ;F63F|----/----\----;C509    ;
                      BEQ +                               ;F641|----/----\----;F001    ;
                      CLC                                 ;F643|----/----\----;18      ;
                    + AND.W #$F700                        ;F644|----/----\----;2900F7  ;
                      ROR A                               ;F647|----/----\----;6A      ;
                      LSR A                               ;F648|----/----\----;4A      ;
                      ADC.W #$2000                        ;F649|----/----\----;690020  ;
                      STA.W !DynGfxTilePtr                ;F64C|----/----\----;8D850D  ;
                      CLC                                 ;F64F|----/----\----;18      ;
                      ADC.W #$0200                        ;F650|----/----\----;690002  ;
                      STA.W !DynGfxTilePtr+$0A            ;F653|----/----\----;8D8F0D  ;
                      LDX.B #$00                          ;F656|----/----\----;A200    ;
                      LDA.B !_A                           ;F658|----/----\----;A50A    ;
                      ORA.W #$0800                        ;F65A|----/----\----;090008  ;
                      CMP.B !_A                           ;F65D|----/----\----;C50A    ;
                      BEQ +                               ;F65F|----/----\----;F001    ;
                      CLC                                 ;F661|----/----\----;18      ;
                    + AND.W #$F700                        ;F662|----/----\----;2900F7  ;
                      ROR A                               ;F665|----/----\----;6A      ;
                      LSR A                               ;F666|----/----\----;4A      ;
                      ADC.W #$2000                        ;F667|----/----\----;690020  ;
                      STA.W !DynGfxTilePtr+2              ;F66A|----/----\----;8D870D  ;
                      CLC                                 ;F66D|----/----\----;18      ;
                      ADC.W #$0200                        ;F66E|----/----\----;690002  ;
                      STA.W !DynGfxTilePtr+$0C            ;F671|----/----\----;8D910D  ;
                      LDA.B !_B                           ;F674|----/----\----;A50B    ;
                      AND.W #$FF00                        ;F676|----/----\----;2900FF  ;
                      LSR A                               ;F679|----/----\----;4A      ;
                      LSR A                               ;F67A|----/----\----;4A      ;
                      LSR A                               ;F67B|----/----\----;4A      ;
                      ADC.W #$2000                        ;F67C|----/----\----;690020  ;
                      STA.W !DynGfxTilePtr+4              ;F67F|----/----\----;8D890D  ;
                      CLC                                 ;F682|----/----\----;18      ;
                      ADC.W #$0200                        ;F683|----/----\----;690002  ;
                      STA.W !DynGfxTilePtr+$0E            ;F686|----/----\----;8D930D  ;
                      LDA.B !_C                           ;F689|----/----\----;A50C    ;
                      AND.W #$FF00                        ;F68B|----/----\----;2900FF  ;
                      LSR A                               ;F68E|----/----\----;4A      ;
                      LSR A                               ;F68F|----/----\----;4A      ;
                      LSR A                               ;F690|----/----\----;4A      ;
                      ADC.W #$2000                        ;F691|----/----\----;690020  ;
                      STA.W !DynGfxTile7FPtr              ;F694|----/----\----;8D990D  ;
                      SEP #$20                            ;F697|----/----\----;E220    ; Accum (8 bit) 
                      LDA.B #$0A                          ;F699|----/----\----;A90A    ;
                      STA.W !PlayerGfxTileCount           ;F69B|----/----\----;8D840D  ;
                      RTS                                 ;F69E|----/----\----;60      ; Return 
                                                          ;                   ;        ;
                                                          ;                   ;        ;
DATA_00F69F:          db $64,$00,$7C,$00                  ;F69F|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00F6A3:          db $00,$00,$FF,$FF                  ;F6A3|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00F6A7:          db $FD,$FF,$05,$00,$FA,$FF          ;F6A7|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00F6AD:          db $00,$00,$00,$00,$C0,$00          ;F6AD|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00F6B3:          db $90,$00,$60,$00,$00,$00,$00,$00  ;F6B3|----/----\----;        ;
                      db $00,$00,$00,$00                  ;F6BB|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00F6BF:          db $00,$00,$FE,$FF,$02,$00,$00,$00  ;F6BF|----/----\----;        ;
                      db $FE,$FF,$02,$00                  ;F6C7|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00F6CB:          db $00,$00,$20,$00                  ;F6CB|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00F6CF:          db $D0,$00,$00,$00,$20,$00,$D0,$00  ;F6CF|----/----\----;        ;
                      db $01,$00,$FF,$FF                  ;F6D7|----/----\----;        ;
                                                          ;                   ;        ;
CODE_00F6DB:          PHB                                 ;F6DB|----/----\----;8B      ;
                      PHK                                 ;F6DC|----/----\----;4B      ;
                      PLB                                 ;F6DD|----/----\----;AB      ;
                      REP #$20                            ;F6DE|----/----\----;C220    ; Accum (16 bit) 
                      LDA.W !CameraMoveTrigger            ;F6E0|----/----\----;AD2A14  ;
                      SEC                                 ;F6E3|----/----\----;38      ;
                      SBC.W #$000C                        ;F6E4|----/----\----;E90C00  ;
                      STA.W !CameraLeftBuffer             ;F6E7|----/----\----;8D2C14  ;
                      CLC                                 ;F6EA|----/----\----;18      ;
                      ADC.W #$0018                        ;F6EB|----/----\----;691800  ;
                      STA.W !CameraRightBuffer            ;F6EE|----/----\----;8D2E14  ;
                      LDA.W !NextLayer1XPos               ;F6F1|----/----\----;AD6214  ;
                      STA.B !Layer1XPos                   ;F6F4|----/----\----;851A    ;
                      LDA.W !NextLayer1YPos               ;F6F6|----/----\----;AD6414  ;
                      STA.B !Layer1YPos                   ;F6F9|----/----\----;851C    ;
                      LDA.W !NextLayer2XPos               ;F6FB|----/----\----;AD6614  ;
                      STA.B !Layer2XPos                   ;F6FE|----/----\----;851E    ;
                      LDA.W !NextLayer2YPos               ;F700|----/----\----;AD6814  ;
                      STA.B !Layer2YPos                   ;F703|----/----\----;8520    ;
                      LDA.B !ScreenMode                   ;F705|----/----\----;A55B    ;
                      LSR A                               ;F707|----/----\----;4A      ;
                      BCC +                               ;F708|----/----\----;9003    ;
                      JMP CODE_00F75C                     ;F70A|----/----\----;4C5CF7  ;
                                                          ;                   ;        ;
                    + LDA.W #$00C0                        ;F70D|----/----\----;A9C000  ;
                      JSR CODE_00F7F4                     ;F710|----/----\----;20F4F7  ;
                      LDY.W !HorizLayer1Setting           ;F713|----/----\----;AC1114  ;
                      BEQ CODE_00F75A                     ;F716|----/----\----;F042    ;
                      LDY.B #$02                          ;F718|----/----\----;A002    ;
                      LDA.B !PlayerXPosNext               ;F71A|----/----\----;A594    ;
                      SEC                                 ;F71C|----/----\----;38      ;
                      SBC.B !Layer1XPos                   ;F71D|----/----\----;E51A    ;
                      STA.B !_0                           ;F71F|----/----\----;8500    ;
                      CMP.W !CameraMoveTrigger            ;F721|----/----\----;CD2A14  ;
                      BPL +                               ;F724|----/----\----;1002    ;
                      LDY.B #$00                          ;F726|----/----\----;A000    ;
                    + STY.B !Layer1ScrollDir              ;F728|----/----\----;8455    ;
                      STY.B !Layer2ScrollDir              ;F72A|----/----\----;8456    ;
                      SEC                                 ;F72C|----/----\----;38      ;
                      SBC.W !CameraLeftBuffer,Y           ;F72D|----/----\----;F92C14  ;
                      BEQ CODE_00F75A                     ;F730|----/----\----;F028    ;
                      STA.B !_2                           ;F732|----/----\----;8502    ;
                      EOR.W DATA_00F6A3,Y                 ;F734|----/----\----;59A3F6  ;
                      BPL CODE_00F75A                     ;F737|----/----\----;1021    ;
                      JSR CODE_00F8AB                     ;F739|----/----\----;20ABF8  ;
                      LDA.B !_2                           ;F73C|----/----\----;A502    ;
                      CLC                                 ;F73E|----/----\----;18      ;
                      ADC.B !Layer1XPos                   ;F73F|----/----\----;651A    ;
                      BPL +                               ;F741|----/----\----;1003    ;
                      LDA.W #$0000                        ;F743|----/----\----;A90000  ;
                    + STA.B !Layer1XPos                   ;F746|----/----\----;851A    ;
                      LDA.B !LastScreenHoriz              ;F748|----/----\----;A55E    ;
                      DEC A                               ;F74A|----/----\----;3A      ;
                      XBA                                 ;F74B|----/----\----;EB      ;
                      AND.W #$FF00                        ;F74C|----/----\----;2900FF  ;
                      BPL +                               ;F74F|----/----\----;1003    ;
                      LDA.W #$0080                        ;F751|----/----\----;A98000  ;
                    + CMP.B !Layer1XPos                   ;F754|----/----\----;C51A    ;
                      BPL CODE_00F75A                     ;F756|----/----\----;1002    ;
                      STA.B !Layer1XPos                   ;F758|----/----\----;851A    ;
CODE_00F75A:          BRA CODE_00F79D                     ;F75A|----/----\----;8041    ;
                                                          ;                   ;        ;
CODE_00F75C:          LDA.B !LastScreenVert               ;F75C|----/----\----;A55F    ;
                      DEC A                               ;F75E|----/----\----;3A      ;
                      XBA                                 ;F75F|----/----\----;EB      ;
                      AND.W #$FF00                        ;F760|----/----\----;2900FF  ;
                      JSR CODE_00F7F4                     ;F763|----/----\----;20F4F7  ;
                      LDY.W !HorizLayer1Setting           ;F766|----/----\----;AC1114  ;
                      BEQ CODE_00F79D                     ;F769|----/----\----;F032    ;
                      LDY.B #$00                          ;F76B|----/----\----;A000    ;
                      LDA.B !PlayerXPosNext               ;F76D|----/----\----;A594    ;
                      SEC                                 ;F76F|----/----\----;38      ;
                      SBC.B !Layer1XPos                   ;F770|----/----\----;E51A    ;
                      STA.B !_0                           ;F772|----/----\----;8500    ;
                      CMP.W !CameraMoveTrigger            ;F774|----/----\----;CD2A14  ;
                      BMI +                               ;F777|----/----\----;3002    ;
                      LDY.B #$02                          ;F779|----/----\----;A002    ;
                    + SEC                                 ;F77B|----/----\----;38      ;
                      SBC.W !CameraLeftBuffer,Y           ;F77C|----/----\----;F92C14  ;
                      STA.B !_2                           ;F77F|----/----\----;8502    ;
                      EOR.W DATA_00F6A3,Y                 ;F781|----/----\----;59A3F6  ;
                      BPL CODE_00F79D                     ;F784|----/----\----;1017    ;
                      JSR CODE_00F8AB                     ;F786|----/----\----;20ABF8  ;
                      LDA.B !_2                           ;F789|----/----\----;A502    ;
                      CLC                                 ;F78B|----/----\----;18      ;
                      ADC.B !Layer1XPos                   ;F78C|----/----\----;651A    ;
                      BPL +                               ;F78E|----/----\----;1003    ;
                      LDA.W #$0000                        ;F790|----/----\----;A90000  ;
                    + CMP.W #$0101                        ;F793|----/----\----;C90101  ;
                      BMI +                               ;F796|----/----\----;3003    ;
                      LDA.W #$0100                        ;F798|----/----\----;A90001  ;
                    + STA.B !Layer1XPos                   ;F79B|----/----\----;851A    ;
CODE_00F79D:          LDY.W !HorizLayer2Setting           ;F79D|----/----\----;AC1314  ;
                      BEQ CODE_00F7AA                     ;F7A0|----/----\----;F008    ;
                      LDA.B !Layer1XPos                   ;F7A2|----/----\----;A51A    ;
                      DEY                                 ;F7A4|----/----\----;88      ;
                      BEQ +                               ;F7A5|----/----\----;F001    ;
                      LSR A                               ;F7A7|----/----\----;4A      ;
                    + STA.B !Layer2XPos                   ;F7A8|----/----\----;851E    ;
CODE_00F7AA:          LDY.W !VertLayer2Setting            ;F7AA|----/----\----;AC1414  ;
                      BEQ CODE_00F7C2                     ;F7AD|----/----\----;F013    ;
                      LDA.B !Layer1YPos                   ;F7AF|----/----\----;A51C    ;
                      DEY                                 ;F7B1|----/----\----;88      ;
                      BEQ +                               ;F7B2|----/----\----;F008    ;
                      LSR A                               ;F7B4|----/----\----;4A      ;
                      DEY                                 ;F7B5|----/----\----;88      ;
                      BEQ +                               ;F7B6|----/----\----;F004    ;
                      LSR A                               ;F7B8|----/----\----;4A      ;
                      LSR A                               ;F7B9|----/----\----;4A      ;
                      LSR A                               ;F7BA|----/----\----;4A      ;
                      LSR A                               ;F7BB|----/----\----;4A      ;
                    + CLC                                 ;F7BC|----/----\----;18      ;
                      ADC.W !BackgroundVertOffset         ;F7BD|----/----\----;6D1714  ;
                      STA.B !Layer2YPos                   ;F7C0|----/----\----;8520    ;
CODE_00F7C2:          SEP #$20                            ;F7C2|----/----\----;E220    ; Accum (8 bit) 
                      LDA.B !Layer1XPos                   ;F7C4|----/----\----;A51A    ;
                      SEC                                 ;F7C6|----/----\----;38      ;
                      SBC.W !NextLayer1XPos               ;F7C7|----/----\----;ED6214  ;
                      STA.W !Layer1DXPos                  ;F7CA|----/----\----;8DBD17  ;
                      LDA.B !Layer1YPos                   ;F7CD|----/----\----;A51C    ;
                      SEC                                 ;F7CF|----/----\----;38      ;
                      SBC.W !NextLayer1YPos               ;F7D0|----/----\----;ED6414  ;
                      STA.W !Layer1DYPos                  ;F7D3|----/----\----;8DBC17  ;
                      LDA.B !Layer2XPos                   ;F7D6|----/----\----;A51E    ;
                      SEC                                 ;F7D8|----/----\----;38      ;
                      SBC.W !NextLayer2XPos               ;F7D9|----/----\----;ED6614  ;
                      STA.W !Layer2DXPos                  ;F7DC|----/----\----;8DBF17  ;
                      LDA.B !Layer2YPos                   ;F7DF|----/----\----;A520    ;
                      SEC                                 ;F7E1|----/----\----;38      ;
                      SBC.W !NextLayer2YPos               ;F7E2|----/----\----;ED6814  ;
                      STA.W !Layer2DYPos                  ;F7E5|----/----\----;8DBE17  ;
                      LDX.B #$07                          ;F7E8|----/----\----;A207    ;
                    - LDA.B !Layer1XPos,X                 ;F7EA|----/----\----;B51A    ;
                      STA.W !NextLayer1XPos,X             ;F7EC|----/----\----;9D6214  ;
                      DEX                                 ;F7EF|----/----\----;CA      ;
                      BPL -                               ;F7F0|----/----\----;10F8    ;
                      PLB                                 ;F7F2|----/----\----;AB      ;
                      RTL                                 ;F7F3|----/----\----;6B      ; Return 
                                                          ;                   ;        ;
CODE_00F7F4:          LDX.W !VertLayer1Setting            ;F7F4|----/----\----;AE1214  ;
                      BNE +                               ;F7F7|----/----\----;D001    ;
                      RTS                                 ;F7F9|----/----\----;60      ; Return 
                                                          ;                   ;        ;
                    + STA.B !_4                           ;F7FA|----/----\----;8504    ; Accum (16 bit) 
                      LDY.B #$00                          ;F7FC|----/----\----;A000    ;
                      LDA.B !PlayerYPosNext               ;F7FE|----/----\----;A596    ;
                      SEC                                 ;F800|----/----\----;38      ;
                      SBC.B !Layer1YPos                   ;F801|----/----\----;E51C    ;
                      STA.B !_0                           ;F803|----/----\----;8500    ;
                      CMP.W #$0070                        ;F805|----/----\----;C97000  ;
                      BMI +                               ;F808|----/----\----;3002    ;
                      LDY.B #$02                          ;F80A|----/----\----;A002    ;
                    + STY.B !Layer1ScrollDir              ;F80C|----/----\----;8455    ;
                      STY.B !Layer2ScrollDir              ;F80E|----/----\----;8456    ;
                      SEC                                 ;F810|----/----\----;38      ;
                      SBC.W DATA_00F69F,Y                 ;F811|----/----\----;F99FF6  ;
                      STA.B !_2                           ;F814|----/----\----;8502    ;
                      EOR.W DATA_00F6A3,Y                 ;F816|----/----\----;59A3F6  ;
                      BMI +                               ;F819|----/----\----;3004    ;
                      LDY.B #$02                          ;F81B|----/----\----;A002    ;
                      STZ.B !_2                           ;F81D|----/----\----;6402    ;
                    + LDA.B !_2                           ;F81F|----/----\----;A502    ;
                      BMI CODE_00F82A                     ;F821|----/----\----;3007    ;
                      LDX.B #$00                          ;F823|----/----\----;A200    ;
                      STX.W !ScreenScrollAtWill           ;F825|----/----\----;8E0414  ;
                      BRA CODE_00F883                     ;F828|----/----\----;8059    ;
                                                          ;                   ;        ;
CODE_00F82A:          SEP #$20                            ;F82A|----/----\----;E220    ; Accum (8 bit) 
                      LDA.W !WallrunningType              ;F82C|----/----\----;ADE313  ;
                      CMP.B #$06                          ;F82F|----/----\----;C906    ;
                      BCS +                               ;F831|----/----\----;B012    ;
                      LDA.W !YoshiHasWingsGfx             ;F833|----/----\----;AD1014  ; \ If winged Yoshi... 
                      LSR A                               ;F836|----/----\----;4A      ;  | 
                      ORA.W !TakeoffTimer                 ;F837|----/----\----;0D9F14  ;
                      ORA.B !PlayerIsClimbing             ;F83A|----/----\----;0574    ;  | ...or climbing 
                      ORA.W !PBalloonInflating            ;F83C|----/----\----;0DF313  ;
                      ORA.W !PlayerInCloud                ;F83F|----/----\----;0DC218  ;
                      ORA.W !BouncingOnBoard              ;F842|----/----\----;0D0614  ;
                    + TAX                                 ;F845|----/----\----;AA      ;
                      REP #$20                            ;F846|----/----\----;C220    ; Accum (16 bit) 
                      BNE CODE_00F869                     ;F848|----/----\----;D01F    ;
                      LDX.W !PlayerRidingYoshi            ;F84A|----/----\----;AE7A18  ;
                      BEQ CODE_00F856                     ;F84D|----/----\----;F007    ;
                      LDX.W !YoshiHasWingsEvt             ;F84F|----/----\----;AE1E14  ; \ Branch if 141E >= #$02 
                      CPX.B #$02                          ;F852|----/----\----;E002    ;  | 
                      BCS CODE_00F869                     ;F854|----/----\----;B013    ; / 
CODE_00F856:          LDX.B !PlayerInWater                ;F856|----/----\----;A675    ;
                      BEQ CODE_00F85E                     ;F858|----/----\----;F004    ;
                      LDX.B !PlayerInAir                  ;F85A|----/----\----;A672    ;
                      BNE CODE_00F869                     ;F85C|----/----\----;D00B    ;
CODE_00F85E:          LDX.W !VertLayer1Setting            ;F85E|----/----\----;AE1214  ;
                      DEX                                 ;F861|----/----\----;CA      ;
                      BEQ CODE_00F875                     ;F862|----/----\----;F011    ;
                      LDX.W !VerticalScrollEnabled        ;F864|----/----\----;AEF113  ;
                      BNE CODE_00F875                     ;F867|----/----\----;D00C    ;
CODE_00F869:          STX.W !VerticalScrollEnabled        ;F869|----/----\----;8EF113  ;
                      LDX.W !VerticalScrollEnabled        ;F86C|----/----\----;AEF113  ;
                      BNE CODE_00F881                     ;F86F|----/----\----;D010    ;
                      LDY.B #$04                          ;F871|----/----\----;A004    ;
                      BRA CODE_00F881                     ;F873|----/----\----;800C    ;
                                                          ;                   ;        ;
CODE_00F875:          LDX.W !ScreenScrollAtWill           ;F875|----/----\----;AE0414  ;
                      BNE CODE_00F881                     ;F878|----/----\----;D007    ;
                      LDX.B !PlayerInAir                  ;F87A|----/----\----;A672    ;
                      BNE Return00F8AA                    ;F87C|----/----\----;D02C    ;
                      INC.W !ScreenScrollAtWill           ;F87E|----/----\----;EE0414  ;
CODE_00F881:          LDA.B !_2                           ;F881|----/----\----;A502    ;
CODE_00F883:          SEC                                 ;F883|----/----\----;38      ;
                      SBC.W DATA_00F6A7,Y                 ;F884|----/----\----;F9A7F6  ;
                      EOR.W DATA_00F6A7,Y                 ;F887|----/----\----;59A7F6  ;
                      ASL A                               ;F88A|----/----\----;0A      ;
                      LDA.B !_2                           ;F88B|----/----\----;A502    ;
                      BCS +                               ;F88D|----/----\----;B003    ;
                      LDA.W DATA_00F6A7,Y                 ;F88F|----/----\----;B9A7F6  ;
                    + CLC                                 ;F892|----/----\----;18      ;
                      ADC.B !Layer1YPos                   ;F893|----/----\----;651C    ;
                      CMP.W DATA_00F6AD,Y                 ;F895|----/----\----;D9ADF6  ;
                      BPL +                               ;F898|----/----\----;1003    ;
                      LDA.W DATA_00F6AD,Y                 ;F89A|----/----\----;B9ADF6  ;
                    + STA.B !Layer1YPos                   ;F89D|----/----\----;851C    ;
                      LDA.B !_4                           ;F89F|----/----\----;A504    ;
                      CMP.B !Layer1YPos                   ;F8A1|----/----\----;C51C    ;
                      BPL Return00F8AA                    ;F8A3|----/----\----;1005    ;
                      STA.B !Layer1YPos                   ;F8A5|----/----\----;851C    ;
                      STZ.W !VerticalScrollEnabled        ;F8A7|----/----\----;9CF113  ;
Return00F8AA:         RTS                                 ;F8AA|----/----\----;60      ; Return 
                                                          ;                   ;        ;
CODE_00F8AB:          LDY.W !CameraIsScrolling            ;F8AB|----/----\----;ACFD13  ;
                      BNE Return00F8DE                    ;F8AE|----/----\----;D02E    ;
                      SEP #$20                            ;F8B0|----/----\----;E220    ; Accum (8 bit) 
                      LDX.W !CameraScrollPlayerDir        ;F8B2|----/----\----;AEFF13  ;
                      REP #$20                            ;F8B5|----/----\----;C220    ; Accum (16 bit) 
                      LDY.B #$08                          ;F8B7|----/----\----;A008    ;
                      LDA.W !CameraMoveTrigger            ;F8B9|----/----\----;AD2A14  ;
                      CMP.W DATA_00F6B3,X                 ;F8BC|----/----\----;DDB3F6  ;
                      BPL +                               ;F8BF|----/----\----;1002    ;
                      LDY.B #$0A                          ;F8C1|----/----\----;A00A    ;
                    + LDA.W DATA_00F6BF,Y                 ;F8C3|----/----\----;B9BFF6  ;
                      EOR.B !_2                           ;F8C6|----/----\----;4502    ;
                      BPL Return00F8DE                    ;F8C8|----/----\----;1014    ;
                      LDA.W DATA_00F6BF,X                 ;F8CA|----/----\----;BDBFF6  ;
                      EOR.B !_2                           ;F8CD|----/----\----;4502    ;
                      BPL Return00F8DE                    ;F8CF|----/----\----;100D    ;
                      LDA.B !_2                           ;F8D1|----/----\----;A502    ;
                      CLC                                 ;F8D3|----/----\----;18      ;
                      ADC.W DATA_00F6CF,Y                 ;F8D4|----/----\----;79CFF6  ;
                      BEQ Return00F8DE                    ;F8D7|----/----\----;F005    ;
                      STA.B !_2                           ;F8D9|----/----\----;8502    ;
                      STY.W !CameraProperMove             ;F8DB|----/----\----;8C0014  ;
Return00F8DE:         RTS                                 ;F8DE|----/----\----;60      ; Return 
                                                          ;                   ;        ;
                                                          ;                   ;        ;
DATA_00F8DF:          db $0C,$0C,$08,$00,$20,$04,$0A,$0D  ;F8DF|----/----\----;        ;
                      db $0D                              ;F8E7|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00F8E8:          db $2A,$00,$2A,$00,$12,$00,$00,$00  ;F8E8|----/----\----;        ;
                      db $ED,$FF                          ;F8F0|----/----\----;        ;
                                                          ;                   ;        ;
CODE_00F8F2:          JSR CODE_00EAA6                     ;F8F2|----/----\----;20A6EA  ;
                      BIT.W !IRQNMICommand                ;F8F5|----/----\----;2C9B0D  ;
                      BVC CODE_00F94E                     ;F8F8|----/----\----;5054    ;
                      JSR CODE_00E92B                     ;F8FA|----/----\----;202BE9  ;
                      LDA.W !ActiveBoss                   ;F8FD|----/----\----;ADFC13  ;
                      ASL A                               ;F900|----/----\----;0A      ;
                      TAX                                 ;F901|----/----\----;AA      ;
                      PHX                                 ;F902|----/----\----;DA      ;
                      LDY.B !PlayerYSpeed                 ;F903|----/----\----;A47D    ;
                      BPL +                               ;F905|----/----\----;1017    ;
                      REP #$20                            ;F907|----/----\----;C220    ; Accum (16 bit) 
                      LDA.B !PlayerYPosNext               ;F909|----/----\----;A596    ;
                      CMP.W DATA_00F8E8,X                 ;F90B|----/----\----;DDE8F8  ;
                      BPL +                               ;F90E|----/----\----;100E    ;
                      LDA.W DATA_00F8E8,X                 ;F910|----/----\----;BDE8F8  ;
                      STA.B !PlayerYPosNext               ;F913|----/----\----;8596    ;
                      SEP #$20                            ;F915|----/----\----;E220    ; Accum (8 bit) 
                      STZ.B !PlayerYSpeed                 ;F917|----/----\----;647D    ;
                      LDA.B #$01                          ;F919|----/----\----;A901    ;
                      STA.W !SPCIO0                       ;F91B|----/----\----;8DF91D  ; / Play sound effect 
                    + SEP #$20                            ;F91E|----/----\----;E220    ; Accum (8 bit) 
                      PLX                                 ;F920|----/----\----;FA      ;
                      LDA.W DATA_00F8E8,X                 ;F921|----/----\----;BDE8F8  ;
                      CMP.B #$2A                          ;F924|----/----\----;C92A    ;
                      BNE Return00F94D                    ;F926|----/----\----;D025    ;
                      REP #$20                            ;F928|----/----\----;C220    ; Accum (16 bit) 
                      LDY.B #$00                          ;F92A|----/----\----;A000    ;
                      LDA.W !SpriteMisc160E+9             ;F92C|----/----\----;AD1716  ;
                      AND.W #$00FF                        ;F92F|----/----\----;29FF00  ;
                      INC A                               ;F932|----/----\----;1A      ;
                      CMP.B !PlayerXPosNext               ;F933|----/----\----;C594    ;
                      BEQ +                               ;F935|----/----\----;F013    ;
                      BMI +                               ;F937|----/----\----;3011    ;
                      LDA.W !SpriteMisc1534+9             ;F939|----/----\----;AD3D15  ;
                      AND.W #$00FF                        ;F93C|----/----\----;29FF00  ;
                      STA.B !_0                           ;F93F|----/----\----;8500    ;
                      INY                                 ;F941|----/----\----;C8      ;
                      LDA.B !PlayerXPosNext               ;F942|----/----\----;A594    ;
                      CLC                                 ;F944|----/----\----;18      ;
                      ADC.W #$000F                        ;F945|----/----\----;690F00  ;
                      CMP.B !_0                           ;F948|----/----\----;C500    ;
                    + JMP CODE_00E9C8                     ;F94A|----/----\----;4CC8E9  ;
                                                          ;                   ;        ;
Return00F94D:         RTS                                 ;F94D|----/----\----;60      ; Return 
                                                          ;                   ;        ;
CODE_00F94E:          LDY.B #$00                          ;F94E|----/----\----;A000    ;
                      LDA.B !PlayerYSpeed                 ;F950|----/----\----;A57D    ;
                      BPL +                               ;F952|----/----\----;1003    ;
                      JMP CODE_00F997                     ;F954|----/----\----;4C97F9  ;
                                                          ;                   ;        ;
                    + JSR CODE_00F9A8                     ;F957|----/----\----;20A8F9  ;
                      BCS +                               ;F95A|----/----\----;B006    ;
                      JSR CODE_00EE1D                     ;F95C|----/----\----;201DEE  ;
                      JMP CODE_00F997                     ;F95F|----/----\----;4C97F9  ;
                                                          ;                   ;        ;
                    + LDA.B !PlayerInAir                  ;F962|----/----\----;A572    ;
                      BEQ +                               ;F964|----/----\----;F01D    ;
                      REP #$20                            ;F966|----/----\----;C220    ; Accum (16 bit) 
                      LDA.W !BrSwingPlatXPos              ;F968|----/----\----;ADB814  ;
                      AND.W #$00FF                        ;F96B|----/----\----;29FF00  ;
                      STA.W !BrSwingXDist                 ;F96E|----/----\----;8DB414  ;
                      STA.W !KeyholeXPos                  ;F971|----/----\----;8D3614  ;
                      LDA.W !BrSwingPlatYPos              ;F974|----/----\----;ADBA14  ;
                      AND.W #$00F0                        ;F977|----/----\----;29F000  ;
                      STA.W !BrSwingYDist                 ;F97A|----/----\----;8DB614  ;
                      STA.W !KeyholeYPos                  ;F97D|----/----\----;8D3814  ;
                      JSR CODE_00F9C9                     ;F980|----/----\----;20C9F9  ;
                    + LDA.B !Mode7Angle                   ;F983|----/----\----;A536    ; Accum (8 bit) 
                      CLC                                 ;F985|----/----\----;18      ;
                      ADC.B #$48                          ;F986|----/----\----;6948    ;
                      LSR A                               ;F988|----/----\----;4A      ;
                      LSR A                               ;F989|----/----\----;4A      ;
                      LSR A                               ;F98A|----/----\----;4A      ;
                      LSR A                               ;F98B|----/----\----;4A      ;
                      TAX                                 ;F98C|----/----\----;AA      ;
                      LDY.W DATA_00F8DF,X                 ;F98D|----/----\----;BCDFF8  ;
                      LDA.B #$80                          ;F990|----/----\----;A980    ;
                      STA.B !GraphicsUncompPtr+1          ;F992|----/----\----;858E    ;
                      JSR CODE_00EEE1                     ;F994|----/----\----;20E1EE  ;
CODE_00F997:          REP #$20                            ;F997|----/----\----;C220    ; Accum (16 bit) 
                      LDA.B !PlayerYPosScrRel             ;F999|----/----\----;A580    ;
                      CMP.W #$00AE                        ;F99B|----/----\----;C9AE00  ;
                      SEP #$20                            ;F99E|----/----\----;E220    ; Accum (8 bit) 
                      BMI +                               ;F9A0|----/----\----;3003    ;
                      JSR CODE_00F629                     ;F9A2|----/----\----;2029F6  ;
                    + JMP CODE_00E98C                     ;F9A5|----/----\----;4C8CE9  ;
                                                          ;                   ;        ;
CODE_00F9A8:          REP #$20                            ;F9A8|----/----\----;C220    ; Accum (16 bit) 
                      LDA.B !PlayerXPosNext               ;F9AA|----/----\----;A594    ;
                      CLC                                 ;F9AC|----/----\----;18      ;
                      ADC.W #$0008                        ;F9AD|----/----\----;690800  ;
                      STA.W !BrSwingXDist                 ;F9B0|----/----\----;8DB414  ;
                      LDA.B !PlayerYPosNext               ;F9B3|----/----\----;A596    ;
                      CLC                                 ;F9B5|----/----\----;18      ;
                      ADC.W #$0020                        ;F9B6|----/----\----;692000  ;
                      STA.W !BrSwingYDist                 ;F9B9|----/----\----;8DB614  ;
CODE_00F9BC:          SEP #$20                            ;F9BC|----/----\----;E220    ; Accum (8 bit) 
                      PHB                                 ;F9BE|----/----\----;8B      ;
                      LDA.B #$01                          ;F9BF|----/----\----;A901    ;
                      PHA                                 ;F9C1|----/----\----;48      ;
                      PLB                                 ;F9C2|----/----\----;AB      ;
                      JSL CODE_01CC9D                     ;F9C3|----/----\----;229DCC01;
                      PLB                                 ;F9C7|----/----\----;AB      ;
                      RTS                                 ;F9C8|----/----\----;60      ; Return 
                                                          ;                   ;        ;
CODE_00F9C9:          LDA.B !Mode7Angle                   ;F9C9|----/----\----;A536    ; Accum (16 bit) 
                      PHA                                 ;F9CB|----/----\----;48      ;
                      EOR.W #$FFFF                        ;F9CC|----/----\----;49FFFF  ;
                      INC A                               ;F9CF|----/----\----;1A      ;
                      STA.B !Mode7Angle                   ;F9D0|----/----\----;8536    ;
                      JSR CODE_00F9BC                     ;F9D2|----/----\----;20BCF9  ;
                      REP #$20                            ;F9D5|----/----\----;C220    ; Accum (16 bit) 
                      PLA                                 ;F9D7|----/----\----;68      ;
                      STA.B !Mode7Angle                   ;F9D8|----/----\----;8536    ;
                      LDA.W !BrSwingPlatXPos              ;F9DA|----/----\----;ADB814  ;
                      AND.W #$00FF                        ;F9DD|----/----\----;29FF00  ;
                      SEC                                 ;F9E0|----/----\----;38      ;
                      SBC.W #$0008                        ;F9E1|----/----\----;E90800  ;
                      STA.B !PlayerXPosNext               ;F9E4|----/----\----;8594    ;
                      LDA.W !BrSwingPlatYPos              ;F9E6|----/----\----;ADBA14  ;
                      AND.W #$00FF                        ;F9E9|----/----\----;29FF00  ;
                      SEC                                 ;F9EC|----/----\----;38      ;
                      SBC.W #$0020                        ;F9ED|----/----\----;E92000  ;
                      STA.B !PlayerYPosNext               ;F9F0|----/----\----;8596    ;
                      SEP #$20                            ;F9F2|----/----\----;E220    ; Accum (8 bit) 
                      RTS                                 ;F9F4|----/----\----;60      ; Return 
                                                          ;                   ;        ;
                                                          ;                   ;        ;
                      db $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF  ;F9F5|----/----\----;        ;
                      db $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF  ;F9FD|----/----\----;        ;
                      db $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF  ;FA05|----/----\----;        ;
                      db $FF,$FF,$FF                      ;FA0D|----/----\----;        ;
                                                          ;                   ;        ;
                      LDX.B #$0B                          ;FA10|----/----\----;A20B    ; \ Unreachable 
                    - STZ.W !SpriteStatus,X               ;FA12|----/----\----;9EC814  ;  | Clear out sprite status table 
                      DEX                                 ;FA15|----/----\----;CA      ;  | 
                      BPL -                               ;FA16|----/----\----;10FA    ;  | 
                      RTL                                 ;FA18|----/----\----;6B      ; / 
                                                          ;                   ;        ;
CODE_00FA19:          LDY.B #$32                          ;FA19|----/----\----;A032    ;
                      STY.B !_5                           ;FA1B|----/----\----;8405    ;
                      LDY.B #$E6                          ;FA1D|----/----\----;A0E6    ;
                      STY.B !_6                           ;FA1F|----/----\----;8406    ;
                      LDY.B #$00                          ;FA21|----/----\----;A000    ;
                      STY.B !_7                           ;FA23|----/----\----;8407    ;
                      SEC                                 ;FA25|----/----\----;38      ;
                      SBC.B #$6E                          ;FA26|----/----\----;E96E    ;
                      TAY                                 ;FA28|----/----\----;A8      ;
                      LDA.B [!SlopesPtr],Y                ;FA29|----/----\----;B782    ;
                      STA.B !_8                           ;FA2B|----/----\----;8508    ;
                      ASL A                               ;FA2D|----/----\----;0A      ;
                      ASL A                               ;FA2E|----/----\----;0A      ;
                      ASL A                               ;FA2F|----/----\----;0A      ;
                      ASL A                               ;FA30|----/----\----;0A      ;
                      STA.B !_1                           ;FA31|----/----\----;8501    ;
                      BCC +                               ;FA33|----/----\----;9002    ;
                      INC.B !_6                           ;FA35|----/----\----;E606    ;
                    + LDA.B !_C                           ;FA37|----/----\----;A50C    ;
                      AND.B #$0F                          ;FA39|----/----\----;290F    ;
                      STA.B !_0                           ;FA3B|----/----\----;8500    ;
                      LDA.B !_A                           ;FA3D|----/----\----;A50A    ;
                      AND.B #$0F                          ;FA3F|----/----\----;290F    ;
                      ORA.B !_1                           ;FA41|----/----\----;0501    ;
                      TAY                                 ;FA43|----/----\----;A8      ;
                      RTL                                 ;FA44|----/----\----;6B      ; Return 
                                                          ;                   ;        ;
FlatPalaceSwitch:     LDA.B #$20                          ;FA45|----/----\----;A920    ; \ Set "Time to shake ground" to x20 
                      STA.W !ScreenShakeTimer             ;FA47|----/----\----;8D8718  ; / 
                      LDY.B #$02                          ;FA4A|----/----\----;A002    ; \  
                      LDA.B #$60                          ;FA4C|----/----\----;A960    ;  |Set sprite x02 to x60 (Flat palace switch) 
                      STA.W !SpriteNumber,Y               ;FA4E|----/----\----;999E00  ; /  
                      LDA.B #$08                          ;FA51|----/----\----;A908    ; \ Set sprite's status to x08 
                      STA.W !SpriteStatus,Y               ;FA53|----/----\----;99C814  ; /  
                      LDA.B !TouchBlockXPos               ;FA56|----/----\----;A59A    ; \  
                      AND.B #$F0                          ;FA58|----/----\----;29F0    ;  |Set sprite X (low) to $9A & 0xF0 
                      STA.W !SpriteXPosLow,Y              ;FA5A|----/----\----;99E400  ; /  
                      LDA.B !TouchBlockXPos+1             ;FA5D|----/----\----;A59B    ; \ Set sprite X (high) to $9B 
                      STA.W !SpriteYPosHigh,Y             ;FA5F|----/----\----;99E014  ; /  
                      LDA.B !TouchBlockYPos               ;FA62|----/----\----;A598    ; \  
                      AND.B #$F0                          ;FA64|----/----\----;29F0    ;  | 
                      CLC                                 ;FA66|----/----\----;18      ;  |Set sprite Y (low) to ($98 & 0xF0) + 0x10 
                      ADC.B #$10                          ;FA67|----/----\----;6910    ;  | 
                      STA.W !SpriteYPosLow,Y              ;FA69|----/----\----;99D800  ; /  
                      LDA.B !TouchBlockYPos+1             ;FA6C|----/----\----;A599    ; \  
                      ADC.B #$00                          ;FA6E|----/----\----;6900    ;  |Set sprite Y (high) to $99 + carry 
                      STA.W !SpriteXPosHigh,Y             ;FA70|----/----\----;99D414  ; / (Carry carried over from previous addition) 
                      PHX                                 ;FA73|----/----\----;DA      ;
                      TYX                                 ;FA74|----/----\----;BB      ;
                      JSL InitSpriteTables                ;FA75|----/----\----;22D2F707;
                      PLX                                 ;FA79|----/----\----;FA      ;
                      LDA.B #$5F                          ;FA7A|----/----\----;A95F    ; \ Set sprite's "Spin Jump Death Frame Counter" to x5F 
                      STA.W !SpriteMisc1540,Y             ;FA7C|----/----\----;994015  ; /  
                      RTS                                 ;FA7F|----/----\----;60      ; Return 
                                                          ;                   ;        ;
TriggerGoalTape:      STZ.W !PBalloonInflating            ;FA80|----/----\----;9CF313  ;
                      STZ.W !PBalloonTimer                ;FA83|----/----\----;9C9118  ;
                      STZ.W !SpriteRespawnTimer           ;FA86|----/----\----;9CC018  ; Don't respawn sprites 
                      STZ.W !CurrentGenerator             ;FA89|----/----\----;9CB918  ;
                      STZ.W !SilverCoinsCollected         ;FA8C|----/----\----;9CDD18  ;
                      LDY.B #$0B                          ;FA8F|----/----\----;A00B    ; Loop over sprites: 
LvlEndSprLoopStrt:    LDA.W !SpriteStatus,Y               ;FA91|----/----\----;B9C814  ; \ If sprite status < 8, 
                      CMP.B #$08                          ;FA94|----/----\----;C908    ;  | skip the current sprite 
                      BCC LvlEndNextSprite                ;FA96|----/----\----;9039    ; / 
                      CMP.B #$0B                          ;FA98|----/----\----;C90B    ; \ If Mario carries a sprite past the goal, 
                      BNE CODE_00FAA3                     ;FA9A|----/----\----;D007    ;  | 
                      PHX                                 ;FA9C|----/----\----;DA      ;  | 
                      JSR LvlEndPowerUp                   ;FA9D|----/----\----;2000FB  ;  | he gets a powerup 
                      PLX                                 ;FAA0|----/----\----;FA      ;  | 
                      BRA LvlEndNextSprite                ;FAA1|----/----\----;802E    ; / 
                                                          ;                   ;        ;
CODE_00FAA3:          LDA.W !SpriteNumber,Y               ;FAA3|----/----\----;B99E00  ; \ Branch if goal tape 
                      CMP.B #$7B                          ;FAA6|----/----\----;C97B    ;  | 
                      BEQ CODE_00FAB2                     ;FAA8|----/----\----;F008    ; / 
                      LDA.W !SpriteOffscreenX,Y           ;FAAA|----/----\----;B9A015  ; \ If sprite on screen... 
                      ORA.W !SpriteOffscreenVert,Y        ;FAAD|----/----\----;196C18  ;  | 
                      BNE CODE_00FAC5                     ;FAB0|----/----\----;D013    ;  | 
CODE_00FAB2:          LDA.W !SpriteTweakerE,Y             ;FAB2|----/----\----;B98616  ;  | ...and "don't turn into coin" not set, 
                      AND.B #$20                          ;FAB5|----/----\----;2920    ;  | 
                      BNE CODE_00FAC5                     ;FAB7|----/----\----;D00C    ;  | 
                      LDA.B #$10                          ;FAB9|----/----\----;A910    ;  | Set coin animation timer = #$10 
                      STA.W !SpriteMisc1540,Y             ;FABB|----/----\----;994015  ;  | 
                      LDA.B #$06                          ;FABE|----/----\----;A906    ;  | Sprite status = Level end, turn to coins 
                      STA.W !SpriteStatus,Y               ;FAC0|----/----\----;99C814  ;  | 
                      BRA LvlEndNextSprite                ;FAC3|----/----\----;800C    ; / 
                                                          ;                   ;        ;
CODE_00FAC5:          LDA.W !SpriteTweakerF,Y             ;FAC5|----/----\----;B90F19  ; \ If "don't erase" not set, 
                      AND.B #$02                          ;FAC8|----/----\----;2902    ;  | 
                      BNE LvlEndNextSprite                ;FACA|----/----\----;D005    ;  | 
                      LDA.B #$00                          ;FACC|----/----\----;A900    ;  | Erase sprite 
                      STA.W !SpriteStatus,Y               ;FACE|----/----\----;99C814  ; / 
LvlEndNextSprite:     DEY                                 ;FAD1|----/----\----;88      ; \ Goto next sprite 
                      BPL LvlEndSprLoopStrt               ;FAD2|----/----\----;10BD    ; / 
                      LDY.B #$07                          ;FAD4|----/----\----;A007    ; \ 
                      LDA.B #$00                          ;FAD6|----/----\----;A900    ;  | Clear out all extended sprites 
                    - STA.W !ExtSpriteNumber,Y            ;FAD8|----/----\----;990B17  ;  | 
                      DEY                                 ;FADB|----/----\----;88      ;  | 
                      BPL -                               ;FADC|----/----\----;10FA    ; / 
                      RTL                                 ;FADE|----/----\----;6B      ; Return 
                                                          ;                   ;        ;
                                                          ;                   ;        ;
DATA_00FADF:          db $74,$74,$77,$75,$76,$E0,$F0,$74  ;FADF|----/----\----;        ;
                      db $74,$77,$75,$76,$E0,$F1,$F0,$F0  ;FAE7|----/----\----;        ;
                      db $F0,$F0,$F1,$E0,$F2,$E0,$E0,$E0  ;FAEF|----/----\----;        ;
                      db $E0,$F1,$E0,$E4                  ;FAF7|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00FAFB:          db $FF,$74,$75,$76,$77              ;FAFB|----/----\----;        ;
                                                          ;                   ;        ;
LvlEndPowerUp:        LDX.B !Powerup                      ;FB00|----/----\----;A619    ; X = Mario's power up status 
                      LDA.W !InvinsibilityTimer           ;FB02|----/----\----;AD9014  ; \ If Mario has star, X = #$04.  However this never happens as $1490 is cleared earlier 
                      BEQ +                               ;FB05|----/----\----;F002    ;  | Otherwise Mario could get a star from carrying a sprite past the goal. 
                      LDX.B #$04                          ;FB07|----/----\----;A204    ; / Unreachable instruction 
                    + LDA.W !PlayerRidingYoshi            ;FB09|----/----\----;AD7A18  ; \ If Mario on Yoshi, X = #$05 
                      BEQ +                               ;FB0C|----/----\----;F002    ;  | 
                      LDX.B #$05                          ;FB0E|----/----\----;A205    ; / 
                    + LDA.W !SpriteNumber,Y               ;FB10|----/----\----;B99E00  ; \ If Spring Board, X += #$07 
                      CMP.B #$2F                          ;FB13|----/----\----;C92F    ;  | 
                      BEQ CODE_00FB2D                     ;FB15|----/----\----;F016    ; / 
                      CMP.B #$3E                          ;FB17|----/----\----;C93E    ; \ If P Switch, X += #$07 
                      BEQ CODE_00FB2D                     ;FB19|----/----\----;F012    ; / 
                      CMP.B #$80                          ;FB1B|----/----\----;C980    ; \ If Key, X += #$0E 
                      BEQ ADDR_00FB28                     ;FB1D|----/----\----;F009    ; / 
                      CMP.B #$2D                          ;FB1F|----/----\----;C92D    ; \ If Baby Yoshi, X += #$15 
                      BNE +                               ;FB21|----/----\----;D00F    ; / 
                      TXA                                 ;FB23|----/----\----;8A      ;
                      CLC                                 ;FB24|----/----\----;18      ;
                      ADC.B #$07                          ;FB25|----/----\----;6907    ;
                      TAX                                 ;FB27|----/----\----;AA      ;
ADDR_00FB28:          TXA                                 ;FB28|----/----\----;8A      ;
                      CLC                                 ;FB29|----/----\----;18      ;
                      ADC.B #$07                          ;FB2A|----/----\----;6907    ;
                      TAX                                 ;FB2C|----/----\----;AA      ;
CODE_00FB2D:          TXA                                 ;FB2D|----/----\----;8A      ;
                      CLC                                 ;FB2E|----/----\----;18      ;
                      ADC.B #$07                          ;FB2F|----/----\----;6907    ;
                      TAX                                 ;FB31|----/----\----;AA      ;
                    + LDA.L DATA_00FADF,X                 ;FB32|----/----\----;BFDFFA00;
                      LDX.W !PlayerItembox                ;FB36|----/----\----;AEC20D  ;
                      CMP.L DATA_00FAFB,X                 ;FB39|----/----\----;DFFBFA00;
                      BNE +                               ;FB3D|----/----\----;D002    ;
                      LDA.B #$78                          ;FB3F|----/----\----;A978    ;
                    + STZ.B !_F                           ;FB41|----/----\----;640F    ;
                      CMP.B #$E0                          ;FB43|----/----\----;C9E0    ;
                      BCC +                               ;FB45|----/----\----;900E    ;
                      PHA                                 ;FB47|----/----\----;48      ;
                      AND.B #$0F                          ;FB48|----/----\----;290F    ;
                      STA.B !_F                           ;FB4A|----/----\----;850F    ;
                      PLA                                 ;FB4C|----/----\----;68      ;
                      CMP.B #$F0                          ;FB4D|----/----\----;C9F0    ;
                      LDA.B #$78                          ;FB4F|----/----\----;A978    ;
                      BCS +                               ;FB51|----/----\----;B002    ;
                      LDA.B #$78                          ;FB53|----/----\----;A978    ;
                    + STA.W !SpriteNumber,Y               ;FB55|----/----\----;999E00  ;
                      CMP.B #$76                          ;FB58|----/----\----;C976    ;
                      BNE +                               ;FB5A|----/----\----;D003    ;
                      INC.W !UnusedStarCounter            ;FB5C|----/----\----;EECB13  ;
                    + TYX                                 ;FB5F|----/----\----;BB      ;
                      JSL InitSpriteTables                ;FB60|----/----\----;22D2F707;
                      LDA.B !_F                           ;FB64|----/----\----;A50F    ;
                      STA.W !SpriteMisc1594,Y             ;FB66|----/----\----;999415  ;
                      LDA.B #$0C                          ;FB69|----/----\----;A90C    ; \ Sprite status = Goal tape power up 
                      STA.W !SpriteStatus,Y               ;FB6B|----/----\----;99C814  ; / 
                      LDA.B #$D0                          ;FB6E|----/----\----;A9D0    ;
                      STA.W !SpriteYSpeed,Y               ;FB70|----/----\----;99AA00  ;
                      LDA.B #$05                          ;FB73|----/----\----;A905    ;
                      STA.W !SpriteXSpeed,Y               ;FB75|----/----\----;99B600  ;
                      LDA.B #$20                          ;FB78|----/----\----;A920    ;
                      STA.W !SpriteMisc154C,Y             ;FB7A|----/----\----;994C15  ;
                      LDA.B #$0C                          ;FB7D|----/----\----;A90C    ;
                      STA.W !SPCIO0                       ;FB7F|----/----\----;8DF91D  ; / Play sound effect 
                      LDX.B #$03                          ;FB82|----/----\----;A203    ;
CODE_00FB84:          LDA.W !SmokeSpriteNumber,X          ;FB84|----/----\----;BDC017  ;
                      BEQ CODE_00FB8D                     ;FB87|----/----\----;F004    ;
                      DEX                                 ;FB89|----/----\----;CA      ;
                      BPL CODE_00FB84                     ;FB8A|----/----\----;10F8    ;
                      RTS                                 ;FB8C|----/----\----;60      ; Return 
                                                          ;                   ;        ;
CODE_00FB8D:          LDA.B #$01                          ;FB8D|----/----\----;A901    ;
                      STA.W !SmokeSpriteNumber,X          ;FB8F|----/----\----;9DC017  ;
                      LDA.W !SpriteYPosLow,Y              ;FB92|----/----\----;B9D800  ;
                      STA.W !SmokeSpriteYPos,X            ;FB95|----/----\----;9DC417  ;
                      LDA.W !SpriteXPosLow,Y              ;FB98|----/----\----;B9E400  ;
                      STA.W !SmokeSpriteXPos,X            ;FB9B|----/----\----;9DC817  ;
                      LDA.B #$1B                          ;FB9E|----/----\----;A91B    ;
                      STA.W !SmokeSpriteTimer,X           ;FBA0|----/----\----;9DCC17  ;
                      RTS                                 ;FBA3|----/----\----;60      ; Return 
                                                          ;                   ;        ;
                                                          ;                   ;        ;
LvlEndSmokeTiles:     db $66,$64,$62,$60,$E8,$EA,$EC,$EA  ;FBA4|----/----\----;        ;
                                                          ;                   ;        ;
LvlEndSprCoins:       PHB                                 ;FBAC|----/----\----;8B      ;
                      PHK                                 ;FBAD|----/----\----;4B      ;
                      PLB                                 ;FBAE|----/----\----;AB      ;
                      JSR LvlEndSprCoinsRt                ;FBAF|----/----\----;20B4FB  ;
                      PLB                                 ;FBB2|----/----\----;AB      ;
                      RTL                                 ;FBB3|----/----\----;6B      ; Return 
                                                          ;                   ;        ;
LvlEndSprCoinsRt:     LDY.B #$00                          ;FBB4|----/----\----;A000    ;
                      LDA.W !Layer1DXPos                  ;FBB6|----/----\----;ADBD17  ;
                      BPL +                               ;FBB9|----/----\----;1001    ;
                      DEY                                 ;FBBB|----/----\----;88      ;
                    + CLC                                 ;FBBC|----/----\----;18      ;
                      ADC.B !SpriteXPosLow,X              ;FBBD|----/----\----;75E4    ;
                      STA.B !SpriteXPosLow,X              ;FBBF|----/----\----;95E4    ;
                      TYA                                 ;FBC1|----/----\----;98      ;
                      ADC.W !SpriteYPosHigh,X             ;FBC2|----/----\----;7DE014  ;
                      STA.W !SpriteYPosHigh,X             ;FBC5|----/----\----;9DE014  ;
                      LDA.W !SpriteMisc1540,X             ;FBC8|----/----\----;BD4015  ;
                      BEQ CODE_00FBF0                     ;FBCB|----/----\----;F023    ;
                      CMP.B #$01                          ;FBCD|----/----\----;C901    ;
                      BNE +                               ;FBCF|----/----\----;D004    ;
                      LDA.B #$D0                          ;FBD1|----/----\----;A9D0    ;
                      STA.B !SpriteYSpeed,X               ;FBD3|----/----\----;95AA    ;
                    + PHX                                 ;FBD5|----/----\----;DA      ;
                      LDA.B #$04                          ;FBD6|----/----\----;A904    ; \ Use Palette A 
                      STA.W !SpriteOBJAttribute,X         ;FBD8|----/----\----;9DF615  ; / 
                      JSL GenericSprGfxRt2                ;FBDB|----/----\----;22B29001;
                      LDA.W !SpriteMisc1540,X             ;FBDF|----/----\----;BD4015  ;
                      LSR A                               ;FBE2|----/----\----;4A      ;
                      LSR A                               ;FBE3|----/----\----;4A      ;
                      LDY.W !SpriteOAMIndex,X             ;FBE4|----/----\----;BCEA15  ; Y = Index into sprite OAM 
                      TAX                                 ;FBE7|----/----\----;AA      ;
                      LDA.W LvlEndSmokeTiles,X            ;FBE8|----/----\----;BDA4FB  ;
                      STA.W !OAMTileNo+$100,Y             ;FBEB|----/----\----;990203  ;
                      PLX                                 ;FBEE|----/----\----;FA      ;
                      RTS                                 ;FBEF|----/----\----;60      ; Return 
                                                          ;                   ;        ;
CODE_00FBF0:          INC.W !SpriteMisc1570,X             ;FBF0|----/----\----;FE7015  ;
                      JSL UpdateYPosNoGvtyW               ;FBF3|----/----\----;221A8001;
                      INC.B !SpriteYSpeed,X               ;FBF7|----/----\----;F6AA    ;
                      INC.B !SpriteYSpeed,X               ;FBF9|----/----\----;F6AA    ;
                      LDA.B !SpriteYSpeed,X               ;FBFB|----/----\----;B5AA    ;
                      CMP.B #$20                          ;FBFD|----/----\----;C920    ;
                      BMI CODE_00FC1E                     ;FBFF|----/----\----;301D    ;
                      JSL CODE_05B34A                     ;FC01|----/----\----;224AB305;
                      LDA.W !SilverCoinsCollected         ;FC05|----/----\----;ADDD18  ;
                      CMP.B #$0D                          ;FC08|----/----\----;C90D    ;
                      BCC +                               ;FC0A|----/----\----;9002    ;
                      LDA.B #$0D                          ;FC0C|----/----\----;A90D    ;
                    + JSL GivePoints                      ;FC0E|----/----\----;22E5AC02;
                      LDA.W !SilverCoinsCollected         ;FC12|----/----\----;ADDD18  ;
                      CLC                                 ;FC15|----/----\----;18      ;
                      ADC.B #$02                          ;FC16|----/----\----;6902    ;
                      STA.W !SilverCoinsCollected         ;FC18|----/----\----;8DDD18  ;
                      STZ.W !SpriteStatus,X               ;FC1B|----/----\----;9EC814  ;
CODE_00FC1E:          JSL CoinSprGfx                      ;FC1E|----/----\----;2241C601;
                      RTS                                 ;FC22|----/----\----;60      ; Return 
                                                          ;                   ;        ;
                      LDY.B #$0B                          ;FC23|----/----\----;A00B    ; \ Unreachable instructions 
ADDR_00FC25:          LDA.W !SpriteStatus,Y               ;FC25|----/----\----;B9C814  ; / Status = Carried 
                      CMP.B #$08                          ;FC28|----/----\----;C908    ;
                      BNE ADDR_00FC73                     ;FC2A|----/----\----;D047    ;
                      LDA.W !SpriteNumber,Y               ;FC2C|----/----\----;B99E00  ;
                      CMP.B #$35                          ;FC2F|----/----\----;C935    ;
                      BNE ADDR_00FC73                     ;FC31|----/----\----;D040    ;
                      LDA.B #$01                          ;FC33|----/----\----;A901    ;
                      STA.W !CarryYoshiThruLvls           ;FC35|----/----\----;8DC10D  ;
                      STZ.W !YoshiHasWingsEvt             ;FC38|----/----\----;9C1E14  ; No Yoshi wings 
                      LDA.W !SpriteOBJAttribute,Y         ;FC3B|----/----\----;B9F615  ;
                      AND.B #$F1                          ;FC3E|----/----\----;29F1    ;
                      ORA.B #$0A                          ;FC40|----/----\----;090A    ;
                      STA.W !SpriteOBJAttribute,Y         ;FC42|----/----\----;99F615  ;
                      LDA.W !PlayerRidingYoshi            ;FC45|----/----\----;AD7A18  ;
                      BNE +                               ;FC48|----/----\----;D028    ;
                      LDA.B !Layer1XPos                   ;FC4A|----/----\----;A51A    ;
                      SEC                                 ;FC4C|----/----\----;38      ;
                      SBC.B #$10                          ;FC4D|----/----\----;E910    ;
                      STA.W !SpriteXPosLow,Y              ;FC4F|----/----\----;99E400  ;
                      LDA.B !Layer1XPos+1                 ;FC52|----/----\----;A51B    ;
                      SBC.B #$00                          ;FC54|----/----\----;E900    ;
                      STA.W !SpriteYPosHigh,Y             ;FC56|----/----\----;99E014  ;
                      LDA.B !PlayerYPosNext               ;FC59|----/----\----;A596    ;
                      STA.W !SpriteYPosLow,Y              ;FC5B|----/----\----;99D800  ;
                      LDA.B !PlayerYPosNext+1             ;FC5E|----/----\----;A597    ;
                      STA.W !SpriteXPosHigh,Y             ;FC60|----/----\----;99D414  ;
                      LDA.B #$03                          ;FC63|----/----\----;A903    ;
                      STA.W !SpriteTableC2,Y              ;FC65|----/----\----;99C200  ;
                      LDA.B #$00                          ;FC68|----/----\----;A900    ;
                      STA.W !SpriteMisc157C,Y             ;FC6A|----/----\----;997C15  ;
                      LDA.B #$10                          ;FC6D|----/----\----;A910    ;
                      STA.W !SpriteXSpeed,Y               ;FC6F|----/----\----;99B600  ;
                    + RTL                                 ;FC72|----/----\----;6B      ; Return 
                                                          ;                   ;        ;
ADDR_00FC73:          DEY                                 ;FC73|----/----\----;88      ;
                      BPL ADDR_00FC25                     ;FC74|----/----\----;10AF    ;
                      STZ.W !CarryYoshiThruLvls           ;FC76|----/----\----;9CC10D  ;
                      RTL                                 ;FC79|----/----\----;6B      ; Return 
                                                          ;                   ;        ;
CODE_00FC7A:          LDA.B #$02                          ;FC7A|----/----\----;A902    ;
                      STA.W !SPCIO1                       ;FC7C|----/----\----;8DFA1D  ; / Play sound effect 
                      LDX.B #$00                          ;FC7F|----/----\----;A200    ;
                      LDA.W !DisableBonusSprite           ;FC81|----/----\----;AD941B  ;
                      BNE +                               ;FC84|----/----\----;D012    ;
                      LDX.B #$05                          ;FC86|----/----\----;A205    ;
                      LDA.W !SpriteMemorySetting          ;FC88|----/----\----;AD9216  ;
                      CMP.B #$0A                          ;FC8B|----/----\----;C90A    ;
                      BEQ +                               ;FC8D|----/----\----;F009    ;
                      JSL FindFreeSprSlot                 ;FC8F|----/----\----;22E4A902; \ X = First free sprite slot, #$03 if none free 
                      TYX                                 ;FC93|----/----\----;BB      ;  | 
                      BPL +                               ;FC94|----/----\----;1002    ;  | 
                      LDX.B #$03                          ;FC96|----/----\----;A203    ; / 
                    + LDA.B #$08                          ;FC98|----/----\----;A908    ; \ Status = Normal 
                      STA.W !SpriteStatus,X               ;FC9A|----/----\----;9DC814  ; / 
                      LDA.B #$35                          ;FC9D|----/----\----;A935    ; \ Sprite = Yoshi 
                      STA.B !SpriteNumber,X               ;FC9F|----/----\----;959E    ; / 
                      LDA.B !PlayerXPosNext               ;FCA1|----/----\----;A594    ; \ Yoshi X position = Mario X position 
                      STA.B !SpriteXPosLow,X              ;FCA3|----/----\----;95E4    ;  | 
                      LDA.B !PlayerXPosNext+1             ;FCA5|----/----\----;A595    ;  | 
                      STA.W !SpriteYPosHigh,X             ;FCA7|----/----\----;9DE014  ; / 
                      LDA.B !PlayerYPosNext               ;FCAA|----/----\----;A596    ; \ Yoshi's Y position = Mario Y position - #$10 
                      SEC                                 ;FCAC|----/----\----;38      ;  | Mario Y position = Mario Y position - #$10 
                      SBC.B #$10                          ;FCAD|----/----\----;E910    ;  | 
                      STA.B !PlayerYPosNext               ;FCAF|----/----\----;8596    ;  | 
                      STA.B !SpriteYPosLow,X              ;FCB1|----/----\----;95D8    ;  | 
                      LDA.B !PlayerYPosNext+1             ;FCB3|----/----\----;A597    ;  | 
                      SBC.B #$00                          ;FCB5|----/----\----;E900    ;  | 
                      STA.B !PlayerYPosNext+1             ;FCB7|----/----\----;8597    ;  | 
                      STA.W !SpriteXPosHigh,X             ;FCB9|----/----\----;9DD414  ; / 
                      JSL InitSpriteTables                ;FCBC|----/----\----;22D2F707; Reset sprite tables 
                      LDA.B #$04                          ;FCC0|----/----\----;A904    ;
                      STA.W !SpriteMisc1FE2,X             ;FCC2|----/----\----;9DE21F  ;
                      LDA.W !YoshiColor                   ;FCC5|----/----\----;ADC713  ; \ Set Yoshi palette 
                      STA.W !SpriteOBJAttribute,X         ;FCC8|----/----\----;9DF615  ; / 
                      LDA.W !YoshiHeavenFlag              ;FCCB|----/----\----;AD951B  ;
                      BEQ +                               ;FCCE|----/----\----;F005    ;
                      LDA.B #$06                          ;FCD0|----/----\----;A906    ;
                      STA.W !SpriteOBJAttribute,X         ;FCD2|----/----\----;9DF615  ;
                    + INC.W !PlayerRidingYoshi            ;FCD5|----/----\----;EE7A18  ;
                      INC.B !SpriteTableC2,X              ;FCD8|----/----\----;F6C2    ;
                      LDA.B !PlayerDirection              ;FCDA|----/----\----;A576    ;
                      EOR.B #$01                          ;FCDC|----/----\----;4901    ;
                      STA.W !SpriteMisc157C,X             ;FCDE|----/----\----;9D7C15  ;
                      DEC.W !SpriteMisc160E,X             ;FCE1|----/----\----;DE0E16  ;
                      INX                                 ;FCE4|----/----\----;E8      ;
                      STX.W !CurrentYoshiSlot             ;FCE5|----/----\----;8EDF18  ;
                      STX.W !YoshiIsLoose                 ;FCE8|----/----\----;8EE218  ;
                      RTL                                 ;FCEB|----/----\----;6B      ; Return 
                                                          ;                   ;        ;
CODE_00FCEC:          LDX.B #$0B                          ;FCEC|----/----\----;A20B    ;
                    - STZ.W !SpriteStatus,X               ;FCEE|----/----\----;9EC814  ;
                      DEX                                 ;FCF1|----/----\----;CA      ;
                      BPL -                               ;FCF2|----/----\----;10FA    ;
                      RTS                                 ;FCF4|----/----\----;60      ; Return 
                                                          ;                   ;        ;
CODE_00FCF5:          LDA.B #$A0                          ;FCF5|----/----\----;A9A0    ;
                      STA.B !SpriteXPosLow,X              ;FCF7|----/----\----;95E4    ;
                      LDA.B #$00                          ;FCF9|----/----\----;A900    ;
                      STA.W !SpriteYPosHigh,X             ;FCFB|----/----\----;9DE014  ;
                      LDA.B #$00                          ;FCFE|----/----\----;A900    ;
                      STA.B !SpriteYPosLow,X              ;FD00|----/----\----;95D8    ;
                      LDA.B #$00                          ;FD02|----/----\----;A900    ;
                      STA.W !SpriteXPosHigh,X             ;FD04|----/----\----;9DD414  ;
                      RTL                                 ;FD07|----/----\----;6B      ; Return 
                                                          ;                   ;        ;
CODE_00FD08:          LDY.B #$3F                          ;FD08|----/----\----;A03F    ;
                      LDA.B !byetudlrHold                 ;FD0A|----/----\----;A515    ;
                      AND.B #$83                          ;FD0C|----/----\----;2983    ;
                      BNE +                               ;FD0E|----/----\----;D002    ;
                      LDY.B #$7F                          ;FD10|----/----\----;A07F    ;
                    + TYA                                 ;FD12|----/----\----;98      ;
                      AND.B !EffFrame                     ;FD13|----/----\----;2514    ;
                      ORA.B !SpriteLock                   ;FD15|----/----\----;059D    ;
                      BNE Return00FD23                    ;FD17|----/----\----;D00A    ;
                      LDX.B #$07                          ;FD19|----/----\----;A207    ; \ Find a free extended sprite slot 
CODE_00FD1B:          LDA.W !ExtSpriteNumber,X            ;FD1B|----/----\----;BD0B17  ;  | 
                      BEQ CODE_00FD26                     ;FD1E|----/----\----;F006    ;  | 
                      DEX                                 ;FD20|----/----\----;CA      ;  | 
                      BPL CODE_00FD1B                     ;FD21|----/----\----;10F8    ;  | 
Return00FD23:         RTS                                 ;FD23|----/----\----;60      ; / Return if no free slots 
                                                          ;                   ;        ;
                                                          ;                   ;        ;
DATA_00FD24:          db $02,$0A                          ;FD24|----/----\----;        ;
                                                          ;                   ;        ;
CODE_00FD26:          LDA.B #$12                          ;FD26|----/----\----;A912    ; \ Extended sprite = Water buble 
                      STA.W !ExtSpriteNumber,X            ;FD28|----/----\----;9D0B17  ; / 
                      LDY.B !PlayerDirection              ;FD2B|----/----\----;A476    ;
                      LDA.B !PlayerXPosNext               ;FD2D|----/----\----;A594    ;
                      CLC                                 ;FD2F|----/----\----;18      ;
                      ADC.W DATA_00FD24,Y                 ;FD30|----/----\----;7924FD  ;
                      STA.W !ExtSpriteXPosLow,X           ;FD33|----/----\----;9D1F17  ;
                      LDA.B !PlayerXPosNext+1             ;FD36|----/----\----;A595    ;
                      ADC.B #$00                          ;FD38|----/----\----;6900    ;
                      STA.W !ExtSpriteXPosHigh,X          ;FD3A|----/----\----;9D3317  ;
                      LDA.B !Powerup                      ;FD3D|----/----\----;A519    ;
                      BEQ CODE_00FD47                     ;FD3F|----/----\----;F006    ;
                      LDA.B #$04                          ;FD41|----/----\----;A904    ;
                      LDY.B !PlayerIsDucking              ;FD43|----/----\----;A473    ;
                      BEQ +                               ;FD45|----/----\----;F002    ;
CODE_00FD47:          LDA.B #$0C                          ;FD47|----/----\----;A90C    ;
                    + CLC                                 ;FD49|----/----\----;18      ;
                      ADC.B !PlayerYPosNext               ;FD4A|----/----\----;6596    ;
                      STA.W !ExtSpriteYPosLow,X           ;FD4C|----/----\----;9D1517  ;
                      LDA.B !PlayerYPosNext+1             ;FD4F|----/----\----;A597    ;
                      ADC.B #$00                          ;FD51|----/----\----;6900    ;
                      STA.W !ExtSpriteYPosHigh,X          ;FD53|----/----\----;9D2917  ;
                      STZ.W !ExtSpriteMisc176F,X          ;FD56|----/----\----;9E6F17  ;
                      RTS                                 ;FD59|----/----\----;60      ; Return 
                                                          ;                   ;        ;
CODE_00FD5A:          LDA.B !PlayerXPosScrRel+1           ;FD5A|----/----\----;A57F    ;
                      ORA.B !PlayerYPosScrRel+1           ;FD5C|----/----\----;0581    ;
                      BNE Return00FD6A                    ;FD5E|----/----\----;D00A    ;
                      LDY.B #$03                          ;FD60|----/----\----;A003    ;
CODE_00FD62:          LDA.W !SmokeSpriteNumber,Y          ;FD62|----/----\----;B9C017  ;
                      BEQ CODE_00FD6B                     ;FD65|----/----\----;F004    ;
                      DEY                                 ;FD67|----/----\----;88      ;
                      BPL CODE_00FD62                     ;FD68|----/----\----;10F8    ;
Return00FD6A:         RTS                                 ;FD6A|----/----\----;60      ; Return 
                                                          ;                   ;        ;
CODE_00FD6B:          LDA.B #$05                          ;FD6B|----/----\----;A905    ;
                      STA.W !SmokeSpriteNumber,Y          ;FD6D|----/----\----;99C017  ;
                      LDA.B !TouchBlockXPos               ;FD70|----/----\----;A59A    ;
                      AND.B #$F0                          ;FD72|----/----\----;29F0    ;
                      STA.W !SmokeSpriteXPos,Y            ;FD74|----/----\----;99C817  ;
                      LDA.B !TouchBlockYPos               ;FD77|----/----\----;A598    ;
                      AND.B #$F0                          ;FD79|----/----\----;29F0    ;
                      STA.W !SmokeSpriteYPos,Y            ;FD7B|----/----\----;99C417  ;
                      LDA.W !LayerProcessing              ;FD7E|----/----\----;AD3319  ;
                      BEQ +                               ;FD81|----/----\----;F014    ;
                      LDA.B !TouchBlockXPos               ;FD83|----/----\----;A59A    ;
                      SEC                                 ;FD85|----/----\----;38      ;
                      SBC.B !Layer23XRelPos               ;FD86|----/----\----;E526    ;
                      AND.B #$F0                          ;FD88|----/----\----;29F0    ;
                      STA.W !SmokeSpriteXPos,Y            ;FD8A|----/----\----;99C817  ;
                      LDA.B !TouchBlockYPos               ;FD8D|----/----\----;A598    ;
                      SEC                                 ;FD8F|----/----\----;38      ;
                      SBC.B !Layer23YRelPos               ;FD90|----/----\----;E528    ;
                      AND.B #$F0                          ;FD92|----/----\----;29F0    ;
                      STA.W !SmokeSpriteYPos,Y            ;FD94|----/----\----;99C417  ;
                    + LDA.B #$10                          ;FD97|----/----\----;A910    ;
                      STA.W !SmokeSpriteTimer,Y           ;FD99|----/----\----;99CC17  ;
                      RTS                                 ;FD9C|----/----\----;60      ; Return 
                                                          ;                   ;        ;
                                                          ;                   ;        ;
DATA_00FD9D:          db $08,$FC,$10,$04                  ;FD9D|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00FDA1:          db $00,$FF,$00,$00                  ;FDA1|----/----\----;        ;
                                                          ;                   ;        ;
CODE_00FDA5:          LDA.B !PlayerInAir                  ;FDA5|----/----\----;A572    ;
                      BEQ CODE_00FDB3                     ;FDA7|----/----\----;F00A    ;
                      LDY.B #$0B                          ;FDA9|----/----\----;A00B    ;
CODE_00FDAB:          LDA.W !MinExtSpriteNumber,Y         ;FDAB|----/----\----;B9F017  ;
                      BEQ CODE_00FDB4                     ;FDAE|----/----\----;F004    ;
                      DEY                                 ;FDB0|----/----\----;88      ;
                      BPL CODE_00FDAB                     ;FDB1|----/----\----;10F8    ;
CODE_00FDB3:          INY                                 ;FDB3|----/----\----;C8      ;
CODE_00FDB4:          PHX                                 ;FDB4|----/----\----;DA      ;
                      LDX.B #$00                          ;FDB5|----/----\----;A200    ;
                      LDA.B !Powerup                      ;FDB7|----/----\----;A519    ;
                      BEQ +                               ;FDB9|----/----\----;F001    ;
                      INX                                 ;FDBB|----/----\----;E8      ;
                    + LDA.W !PlayerRidingYoshi            ;FDBC|----/----\----;AD7A18  ;
                      BEQ +                               ;FDBF|----/----\----;F002    ;
                      INX                                 ;FDC1|----/----\----;E8      ;
                      INX                                 ;FDC2|----/----\----;E8      ;
                    + LDA.B !PlayerYPosNext               ;FDC3|----/----\----;A596    ;
                      CLC                                 ;FDC5|----/----\----;18      ;
                      ADC.W DATA_00FD9D,X                 ;FDC6|----/----\----;7D9DFD  ;
                      PHP                                 ;FDC9|----/----\----;08      ;
                      AND.B #$F0                          ;FDCA|----/----\----;29F0    ;
                      CLC                                 ;FDCC|----/----\----;18      ;
                      ADC.B #$03                          ;FDCD|----/----\----;6903    ;
                      STA.W !MinExtSpriteYPosLow,Y        ;FDCF|----/----\----;99FC17  ;
                      LDA.B !PlayerYPosNext+1             ;FDD2|----/----\----;A597    ;
                      ADC.B #$00                          ;FDD4|----/----\----;6900    ;
                      PLP                                 ;FDD6|----/----\----;28      ;
                      ADC.W DATA_00FDA1,X                 ;FDD7|----/----\----;7DA1FD  ;
                      STA.W !MinExtSpriteYPosHigh,Y       ;FDDA|----/----\----;991418  ;
                      PLX                                 ;FDDD|----/----\----;FA      ;
                      LDA.B !PlayerXPosNext               ;FDDE|----/----\----;A594    ;
                      STA.W !MinExtSpriteXPosLow,Y        ;FDE0|----/----\----;990818  ;
                      LDA.B !PlayerXPosNext+1             ;FDE3|----/----\----;A595    ;
                      STA.W !MinExtSpriteXPosHigh,Y       ;FDE5|----/----\----;99EA18  ;
                      LDA.B #$07                          ;FDE8|----/----\----;A907    ;
                      STA.W !MinExtSpriteNumber,Y         ;FDEA|----/----\----;99F017  ;
                      LDA.B #$00                          ;FDED|----/----\----;A900    ;
                      STA.W !MinExtSpriteXPosSpx,Y        ;FDEF|----/----\----;995018  ;
                      LDA.B !PlayerYSpeed                 ;FDF2|----/----\----;A57D    ;
                      BMI Return00FE0D                    ;FDF4|----/----\----;3017    ;
                      STZ.B !PlayerYSpeed                 ;FDF6|----/----\----;647D    ;
                      LDY.B !PlayerInAir                  ;FDF8|----/----\----;A472    ;
                      BEQ +                               ;FDFA|----/----\----;F002    ;
                      STZ.B !PlayerXSpeed                 ;FDFC|----/----\----;647B    ;
                    + LDY.B #$03                          ;FDFE|----/----\----;A003    ;
                      LDA.B !Powerup                      ;FE00|----/----\----;A519    ;
                      BNE CODE_00FE05                     ;FE02|----/----\----;D001    ;
                      DEY                                 ;FE04|----/----\----;88      ;
CODE_00FE05:          LDA.W !ExtSpriteNumber,Y            ;FE05|----/----\----;B90B17  ;
                      BEQ CODE_00FE16                     ;FE08|----/----\----;F00C    ;
CODE_00FE0A:          DEY                                 ;FE0A|----/----\----;88      ;
                      BPL CODE_00FE05                     ;FE0B|----/----\----;10F8    ;
Return00FE0D:         RTS                                 ;FE0D|----/----\----;60      ; Return 
                                                          ;                   ;        ;
                                                          ;                   ;        ;
DATA_00FE0E:          db $10,$16,$13,$1C                  ;FE0E|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00FE12:          db $00,$04,$0A,$07                  ;FE12|----/----\----;        ;
                                                          ;                   ;        ;
CODE_00FE16:          LDA.B #$12                          ;FE16|----/----\----;A912    ; \ Extended sprite = Water bubble 
                      STA.W !ExtSpriteNumber,Y            ;FE18|----/----\----;990B17  ; / 
                      TYA                                 ;FE1B|----/----\----;98      ;
                      ASL A                               ;FE1C|----/----\----;0A      ;
                      ASL A                               ;FE1D|----/----\----;0A      ;
                      ASL A                               ;FE1E|----/----\----;0A      ;
                      ADC.B #$F7                          ;FE1F|----/----\----;69F7    ;
                      STA.W !ExtSpriteMisc1765,Y          ;FE21|----/----\----;996517  ;
                      LDA.B !PlayerYPosNext               ;FE24|----/----\----;A596    ;
                      ADC.W DATA_00FE0E,Y                 ;FE26|----/----\----;790EFE  ;
                      STA.W !ExtSpriteYPosLow,Y           ;FE29|----/----\----;991517  ;
                      LDA.B !PlayerYPosNext+1             ;FE2C|----/----\----;A597    ;
                      ADC.B #$00                          ;FE2E|----/----\----;6900    ;
                      STA.W !ExtSpriteYPosHigh,Y          ;FE30|----/----\----;992917  ;
                      LDA.B !PlayerXPosNext               ;FE33|----/----\----;A594    ;
                      ADC.W DATA_00FE12,Y                 ;FE35|----/----\----;7912FE  ;
                      STA.W !ExtSpriteXPosLow,Y           ;FE38|----/----\----;991F17  ;
                      LDA.B !PlayerXPosNext+1             ;FE3B|----/----\----;A595    ;
                      ADC.B #$00                          ;FE3D|----/----\----;6900    ;
                      STA.W !ExtSpriteXPosHigh,Y          ;FE3F|----/----\----;993317  ;
                      LDA.B #$00                          ;FE42|----/----\----;A900    ;
                      STA.W !ExtSpriteMisc176F,Y          ;FE44|----/----\----;996F17  ;
                      JMP CODE_00FE0A                     ;FE47|----/----\----;4C0AFE  ;
                                                          ;                   ;        ;
CODE_00FE4A:          LDA.B !TrueFrame                    ;FE4A|----/----\----;A513    ;
                      AND.B #$03                          ;FE4C|----/----\----;2903    ;
                      ORA.B !PlayerInAir                  ;FE4E|----/----\----;0572    ;
                      ORA.B !PlayerXPosScrRel+1           ;FE50|----/----\----;057F    ;
                      ORA.B !PlayerYPosScrRel+1           ;FE52|----/----\----;0581    ;
                      ORA.B !SpriteLock                   ;FE54|----/----\----;059D    ;
                      BNE Return00FE71                    ;FE56|----/----\----;D019    ;
                      LDA.B !byetudlrHold                 ;FE58|----/----\----;A515    ;
                      AND.B #$04                          ;FE5A|----/----\----;2904    ;
                      BEQ CODE_00FE67                     ;FE5C|----/----\----;F009    ;
                      LDA.B !PlayerXSpeed                 ;FE5E|----/----\----;A57B    ;
                      CLC                                 ;FE60|----/----\----;18      ;
                      ADC.B #$08                          ;FE61|----/----\----;6908    ;
                      CMP.B #$10                          ;FE63|----/----\----;C910    ;
                      BCC Return00FE71                    ;FE65|----/----\----;900A    ;
CODE_00FE67:          LDY.B #$03                          ;FE67|----/----\----;A003    ;
CODE_00FE69:          LDA.W !SmokeSpriteNumber,Y          ;FE69|----/----\----;B9C017  ;
                      BEQ CODE_00FE72                     ;FE6C|----/----\----;F004    ;
                      DEY                                 ;FE6E|----/----\----;88      ;
                      BNE CODE_00FE69                     ;FE6F|----/----\----;D0F8    ;
Return00FE71:         RTS                                 ;FE71|----/----\----;60      ; Return 
                                                          ;                   ;        ;
CODE_00FE72:          LDA.B #$03                          ;FE72|----/----\----;A903    ;
                      STA.W !SmokeSpriteNumber,Y          ;FE74|----/----\----;99C017  ;
                      LDA.B !PlayerXPosNext               ;FE77|----/----\----;A594    ;
                      ADC.B #$04                          ;FE79|----/----\----;6904    ;
                      STA.W !SmokeSpriteXPos,Y            ;FE7B|----/----\----;99C817  ;
                      LDA.B !PlayerYPosNext               ;FE7E|----/----\----;A596    ;
                      ADC.B #$1A                          ;FE80|----/----\----;691A    ;
                      PHX                                 ;FE82|----/----\----;DA      ;
                      LDX.W !PlayerRidingYoshi            ;FE83|----/----\----;AE7A18  ;
                      BEQ +                               ;FE86|----/----\----;F002    ;
                      ADC.B #$10                          ;FE88|----/----\----;6910    ;
                    + STA.W !SmokeSpriteYPos,Y            ;FE8A|----/----\----;99C417  ;
                      PLX                                 ;FE8D|----/----\----;FA      ;
                      LDA.B #$13                          ;FE8E|----/----\----;A913    ;
                      STA.W !SmokeSpriteTimer,Y           ;FE90|----/----\----;99CC17  ;
                      RTS                                 ;FE93|----/----\----;60      ; Return 
                                                          ;                   ;        ;
                                                          ;                   ;        ;
DATA_00FE94:          db $FD,$03                          ;FE94|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00FE96:          db $00,$08,$F8,$10,$F8,$10          ;FE96|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00FE9C:          db $00,$00,$FF,$00,$FF,$00          ;FE9C|----/----\----;        ;
                                                          ;                   ;        ;
DATA_00FEA2:          db $08,$08,$0C,$0C,$14,$14          ;FEA2|----/----\----;        ;
                                                          ;                   ;        ;
ShootFireball:        LDX.B #$09                          ;FEA8|----/----\----;A209    ; \ Find a free fireball slot (08-09) 
CODE_00FEAA:          LDA.W !ExtSpriteNumber,X            ;FEAA|----/----\----;BD0B17  ;  | 
                      BEQ CODE_00FEB5                     ;FEAD|----/----\----;F006    ;  | 
                      DEX                                 ;FEAF|----/----\----;CA      ;  | 
                      CPX.B #$07                          ;FEB0|----/----\----;E007    ;  | 
                      BNE CODE_00FEAA                     ;FEB2|----/----\----;D0F6    ;  | 
                      RTS                                 ;FEB4|----/----\----;60      ; / Return if no free slots 
                                                          ;                   ;        ;
CODE_00FEB5:          LDA.B #$06                          ;FEB5|----/----\----;A906    ;
                      STA.W !SPCIO3                       ;FEB7|----/----\----;8DFC1D  ; / Play sound effect 
                      LDA.B #$0A                          ;FEBA|----/----\----;A90A    ;
                      STA.W !ShootFireTimer               ;FEBC|----/----\----;8D9C14  ;
                      LDA.B #$05                          ;FEBF|----/----\----;A905    ; \ Extended sprite = Mario fireball 
                      STA.W !ExtSpriteNumber,X            ;FEC1|----/----\----;9D0B17  ; / 
                      LDA.B #$30                          ;FEC4|----/----\----;A930    ;
                      STA.W !ExtSpriteYSpeed,X            ;FEC6|----/----\----;9D3D17  ;
                      LDY.B !PlayerDirection              ;FEC9|----/----\----;A476    ;
                      LDA.W DATA_00FE94,Y                 ;FECB|----/----\----;B994FE  ;
                      STA.W !ExtSpriteXSpeed,X            ;FECE|----/----\----;9D4717  ;
                      LDA.W !PlayerRidingYoshi            ;FED1|----/----\----;AD7A18  ;
                      BEQ +                               ;FED4|----/----\----;F009    ;
                      INY                                 ;FED6|----/----\----;C8      ;
                      INY                                 ;FED7|----/----\----;C8      ;
                      LDA.W !PlayerDuckingOnYoshi         ;FED8|----/----\----;ADDC18  ;
                      BEQ +                               ;FEDB|----/----\----;F002    ;
                      INY                                 ;FEDD|----/----\----;C8      ;
                      INY                                 ;FEDE|----/----\----;C8      ;
                    + LDA.B !PlayerXPosNext               ;FEDF|----/----\----;A594    ;
                      CLC                                 ;FEE1|----/----\----;18      ;
                      ADC.W DATA_00FE96,Y                 ;FEE2|----/----\----;7996FE  ;
                      STA.W !ExtSpriteXPosLow,X           ;FEE5|----/----\----;9D1F17  ;
                      LDA.B !PlayerXPosNext+1             ;FEE8|----/----\----;A595    ;
                      ADC.W DATA_00FE9C,Y                 ;FEEA|----/----\----;799CFE  ;
                      STA.W !ExtSpriteXPosHigh,X          ;FEED|----/----\----;9D3317  ;
                      LDA.B !PlayerYPosNext               ;FEF0|----/----\----;A596    ;
                      CLC                                 ;FEF2|----/----\----;18      ;
                      ADC.W DATA_00FEA2,Y                 ;FEF3|----/----\----;79A2FE  ;
                      STA.W !ExtSpriteYPosLow,X           ;FEF6|----/----\----;9D1517  ;
                      LDA.B !PlayerYPosNext+1             ;FEF9|----/----\----;A597    ;
                      ADC.B #$00                          ;FEFB|----/----\----;6900    ;
                      STA.W !ExtSpriteYPosHigh,X          ;FEFD|----/----\----;9D2917  ;
                      LDA.W !PlayerBehindNet              ;FF00|----/----\----;ADF913  ;
                      STA.W !ExtSpritePriority,X          ;FF03|----/----\----;9D7917  ;
                      RTS                                 ;FF06|----/----\----;60      ; Return 
                                                          ;                   ;        ;
ADDR_00FF07:          REP #$20                            ;FF07|----/----\----;C220    ; Accum (16 bit) 
                      LDA.W !Layer1DYPos                  ;FF09|----/----\----;ADBC17  ;
                      AND.W #$FF00                        ;FF0C|----/----\----;2900FF  ;
                      BPL +                               ;FF0F|----/----\----;1003    ;
                      ORA.W #$00FF                        ;FF11|----/----\----;09FF00  ;
                    + XBA                                 ;FF14|----/----\----;EB      ;
                      CLC                                 ;FF15|----/----\----;18      ;
                      ADC.B !PlayerXPosNext               ;FF16|----/----\----;6594    ;
                      STA.B !PlayerXPosNext               ;FF18|----/----\----;8594    ;
                      LDA.W !LoadingLevelNumber           ;FF1A|----/----\----;ADBB17  ;
                      AND.W #$FF00                        ;FF1D|----/----\----;2900FF  ;
                      BPL +                               ;FF20|----/----\----;1003    ;
                      ORA.W #$00FF                        ;FF22|----/----\----;09FF00  ;
                    + XBA                                 ;FF25|----/----\----;EB      ;
                      EOR.W #$FFFF                        ;FF26|----/----\----;49FFFF  ;
                      INC A                               ;FF29|----/----\----;1A      ;
                      CLC                                 ;FF2A|----/----\----;18      ;
                      ADC.B !PlayerYPosNext               ;FF2B|----/----\----;6596    ;
                      STA.B !PlayerYPosNext               ;FF2D|----/----\----;8596    ;
                      SEP #$20                            ;FF2F|----/----\----;E220    ; Accum (8 bit) 
                      RTL                                 ;FF31|----/----\----;6B      ; Return 
                                                          ;                   ;        ;
ADDR_00FF32:          LDA.W !SpriteYPosHigh,X             ;FF32|----/----\----;BDE014  ;
                      XBA                                 ;FF35|----/----\----;EB      ;
                      LDA.B !SpriteXPosLow,X              ;FF36|----/----\----;B5E4    ;
                      REP #$20                            ;FF38|----/----\----;C220    ; Accum (16 bit) 
                      SEC                                 ;FF3A|----/----\----;38      ;
                      SBC.B !Layer1XPos                   ;FF3B|----/----\----;E51A    ;
                      STA.B !_0                           ;FF3D|----/----\----;8500    ;
                      LDA.W #$0030                        ;FF3F|----/----\----;A93000  ;
                      SEC                                 ;FF42|----/----\----;38      ;
                      SBC.B !_0                           ;FF43|----/----\----;E500    ;
                      STA.B !Layer3XPos                   ;FF45|----/----\----;8522    ;
                      SEP #$20                            ;FF47|----/----\----;E220    ; Accum (8 bit) 
                      LDA.W !SpriteXPosHigh,X             ;FF49|----/----\----;BDD414  ;
                      XBA                                 ;FF4C|----/----\----;EB      ;
                      LDA.B !SpriteYPosLow,X              ;FF4D|----/----\----;B5D8    ;
                      REP #$20                            ;FF4F|----/----\----;C220    ; Accum (16 bit) 
                      SEC                                 ;FF51|----/----\----;38      ;
                      SBC.B !Layer1YPos                   ;FF52|----/----\----;E51C    ;
                      STA.B !_0                           ;FF54|----/----\----;8500    ;
                      LDA.W #$0100                        ;FF56|----/----\----;A90001  ;
                      SEC                                 ;FF59|----/----\----;38      ;
                      SBC.B !_0                           ;FF5A|----/----\----;E500    ;
                      STA.B !Layer3YPos                   ;FF5C|----/----\----;8524    ;
                      SEP #$20                            ;FF5E|----/----\----;E220    ; Accum (8 bit) 
                      RTL                                 ;FF60|----/----\----;6B      ; Return 
                                                          ;                   ;        ;
CODE_00FF61:          LDA.W !SpriteYPosHigh,X             ;FF61|----/----\----;BDE014  ;
                      XBA                                 ;FF64|----/----\----;EB      ;
                      LDA.B !SpriteXPosLow,X              ;FF65|----/----\----;B5E4    ;
                      REP #$20                            ;FF67|----/----\----;C220    ; Accum (16 bit) 
                      CMP.W #$FF00                        ;FF69|----/----\----;C900FF  ;
                      BMI CODE_00FF73                     ;FF6C|----/----\----;3005    ;
                      CMP.W #$0100                        ;FF6E|----/----\----;C90001  ;
                      BMI +                               ;FF71|----/----\----;3003    ;
CODE_00FF73:          LDA.W #$0100                        ;FF73|----/----\----;A90001  ;
                    + STA.B !Layer3XPos                   ;FF76|----/----\----;8522    ;
                      SEP #$20                            ;FF78|----/----\----;E220    ; Accum (8 bit) 
                      LDA.W !SpriteXPosHigh,X             ;FF7A|----/----\----;BDD414  ;
                      XBA                                 ;FF7D|----/----\----;EB      ;
                      LDA.B !SpriteYPosLow,X              ;FF7E|----/----\----;B5D8    ;
                      REP #$20                            ;FF80|----/----\----;C220    ; Accum (16 bit) 
                      STA.B !_0                           ;FF82|----/----\----;8500    ;
                      LDA.W #$00A0                        ;FF84|----/----\----;A9A000  ;
                      SEC                                 ;FF87|----/----\----;38      ;
                      SBC.B !_0                           ;FF88|----/----\----;E500    ;
                      CLC                                 ;FF8A|----/----\----;18      ;
                      ADC.W !ScreenShakeYOffset           ;FF8B|----/----\----;6D8818  ;
                      STA.B !Layer3YPos                   ;FF8E|----/----\----;8524    ;
                      SEP #$20                            ;FF90|----/----\----;E220    ; Accum (8 bit) 
                      RTL                                 ;FF92|----/----\----;6B      ; Return 
                                                          ;                   ;        ;
                                                          ;                   ;        ;
                      db $FF,$FF,$FF,$FF,$FF              ;FF93|----/----\----;        ;
                      db $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF  ;FF98|----/----\----;        ;
                      db $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF  ;FFA0|----/----\----;        ;
                      db $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF  ;FFA8|----/----\----;        ;
                      db $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF  ;FFB0|----/----\----;        ;
                      db $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF  ;FFB8|----/----\----;        ;
