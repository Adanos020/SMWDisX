                      ORG $018000                         ;;                   ;
                                                          ;;                   ;
DATA_018000:          db $80,$40,$20,$10,$08,$04,$02,$01  ;;----|8000/----\----;
                                                          ;;                   ;
IsTouchingObjSide:    LDA.W !SpriteBlockedDirs,X          ;;----|8008/----\----; \ Set A to lower two bits of 
                      AND.B #$03                          ;;----|800B/----\----; / current sprite's Position Status 
                      RTS                                 ;;----|800D/----\----; Return 
                                                          ;;                   ;
IsOnGround:           LDA.W !SpriteBlockedDirs,X          ;;----|800E/----\----; \ Set A to bit 2 of 
                      AND.B #$04                          ;;----|8011/----\----; / current sprite's Position Status 
                      RTS                                 ;;----|8013/----\----; Return 
                                                          ;;                   ;
IsTouchingCeiling:    LDA.W !SpriteBlockedDirs,X          ;;----|8014/----\----; \ Set A to bit 3 of 
                      AND.B #$08                          ;;----|8017/----\----; / current sprite's Position Status 
                      RTS                                 ;;----|8019/----\----; Return 
                                                          ;;                   ;
UpdateYPosNoGvtyW:    PHB                                 ;;----|801A/----\----;
                      PHK                                 ;;----|801B/----\----;
                      PLB                                 ;;----|801C/----\----;
                      JSR SubSprYPosNoGrvty               ;;----|801D/----\----;
                      PLB                                 ;;----|8020/----\----;
                      RTL                                 ;;----|8021/----\----; Return 
                                                          ;;                   ;
UpdateXPosNoGvtyW:    PHB                                 ;;----|8022/----\----;
                      PHK                                 ;;----|8023/----\----;
                      PLB                                 ;;----|8024/----\----;
                      JSR SubSprXPosNoGrvty               ;;----|8025/----\----;
                      PLB                                 ;;----|8028/----\----;
                      RTL                                 ;;----|8029/----\----; Return 
                                                          ;;                   ;
UpdateSpritePos:      PHB                                 ;;----|802A/----\----;
                      PHK                                 ;;----|802B/----\----;
                      PLB                                 ;;----|802C/----\----;
                      JSR SubUpdateSprPos                 ;;----|802D/----\----;
                      PLB                                 ;;----|8030/----\----;
                      RTL                                 ;;----|8031/----\----; Return 
                                                          ;;                   ;
SprSprInteract:       PHB                                 ;;----|8032/----\----;
                      PHK                                 ;;----|8033/----\----;
                      PLB                                 ;;----|8034/----\----;
                      JSR SubSprSprInteract               ;;----|8035/----\----;
                      PLB                                 ;;----|8038/----\----;
                      RTL                                 ;;----|8039/----\----; Return 
                                                          ;;                   ;
SprSpr_MarioSprRts:   PHB                                 ;;----|803A/----\----;
                      PHK                                 ;;----|803B/----\----;
                      PLB                                 ;;----|803C/----\----;
                      JSR SubSprSpr_MarioSpr              ;;----|803D/----\----;
                      PLB                                 ;;----|8040/----\----;
                      RTL                                 ;;----|8041/----\----; Return 
                                                          ;;                   ;
GenericSprGfxRt0:     PHB                                 ;;----|8042/----\----;
                      PHK                                 ;;----|8043/----\----;
                      PLB                                 ;;----|8044/----\----;
                      JSR SubSprGfx0Entry0                ;;----|8045/----\----;
                      PLB                                 ;;----|8048/----\----;
                      RTL                                 ;;----|8049/----\----; Return 
                                                          ;;                   ;
InvertAccum:          EOR.B #$FF                          ;;----|804A/----\----; \ Set A to -A 
                      INC A                               ;;----|804C/----\----; /  
                      RTS                                 ;;----|804D/----\----; Return 
                                                          ;;                   ;
CODE_01804E:          LDA.W !SpriteBlockedDirs,X          ;;----|804E/----\----; \ Branch if in air 
                      BEQ Return018072                    ;;----|8051/----\----; / 
                      LDA.B !TrueFrame                    ;;----|8053/----\----;
                      AND.B #$03                          ;;----|8055/----\----;
                      ORA.B !LevelIsSlippery              ;;----|8057/----\----;
                      BNE Return018072                    ;;----|8059/----\----;
                      LDA.B #$04                          ;;----|805B/----\----;
                      STA.B !_0                           ;;----|805D/----\----;
                      LDA.B #$0A                          ;;----|805F/----\----;
                      STA.B !_1                           ;;----|8061/----\----;
CODE_018063:          JSR IsSprOffScreen                  ;;----|8063/----\----;
                      BNE Return018072                    ;;----|8066/----\----;
                      LDY.B #$03                          ;;----|8068/----\----;
CODE_01806A:          LDA.W !SmokeSpriteNumber,Y          ;;----|806A/----\----;
                      BEQ CODE_018073                     ;;----|806D/----\----;
                      DEY                                 ;;----|806F/----\----;
                      BPL CODE_01806A                     ;;----|8070/----\----;
Return018072:         RTS                                 ;;----|8072/----\----; Return 
                                                          ;;                   ;
CODE_018073:          LDA.B #$03                          ;;----|8073/----\----;
                      STA.W !SmokeSpriteNumber,Y          ;;----|8075/----\----;
                      LDA.B !SpriteXPosLow,X              ;;----|8078/----\----;
                      ADC.B !_0                           ;;----|807A/----\----;
                      STA.W !SmokeSpriteXPos,Y            ;;----|807C/----\----;
                      LDA.B !SpriteYPosLow,X              ;;----|807F/----\----;
                      ADC.B !_1                           ;;----|8081/----\----;
                      STA.W !SmokeSpriteYPos,Y            ;;----|8083/----\----;
                      LDA.B #$13                          ;;----|8086/----\----;
                      STA.W !SmokeSpriteTimer,Y           ;;----|8088/----\----;
                      RTS                                 ;;----|808B/----\----; Return 
                                                          ;;                   ;
CODE_01808C:          PHB                                 ;;----|808C/----\----;
                      PHK                                 ;;----|808D/----\----;
                      PLB                                 ;;----|808E/----\----;
                      LDA.W !IsCarryingItem               ;;----|808F/----\----;
                      STA.W !CarryingFlag                 ;;----|8092/----\----; Reset carrying enemy flag 
                      STZ.W !IsCarryingItem               ;;----|8095/----\----;
                      STZ.W !StandOnSolidSprite           ;;----|8098/----\----;
                      STZ.W !PlayerInCloud                ;;----|809B/----\----;
                      LDA.W !CurrentYoshiSlot             ;;----|809E/----\----;
                      STA.W !YoshiIsLoose                 ;;----|80A1/----\----;
                      STZ.W !CurrentYoshiSlot             ;;----|80A4/----\----;
                      LDX.B #$0B                          ;;----|80A7/----\----;
                    - STX.W !CurSpriteProcess             ;;----|80A9/----\----;
                      JSR CODE_0180D2                     ;;----|80AC/----\----;
                      JSR HandleSprite                    ;;----|80AF/----\----;
                      DEX                                 ;;----|80B2/----\----;
                      BPL -                               ;;----|80B3/----\----;
                      LDA.W !ActivateClusterSprite        ;;----|80B5/----\----;
                      BEQ +                               ;;----|80B8/----\----;
                      JSL CODE_02F808                     ;;----|80BA/----\----;
                    + LDA.W !CurrentYoshiSlot             ;;----|80BE/----\----;
                      BNE +                               ;;----|80C1/----\----;
                      STZ.W !PlayerRidingYoshi            ;;----|80C3/----\----;
                      STZ.W !ScrShakePlayerYOffset        ;;----|80C6/----\----;
                    + PLB                                 ;;----|80C9/----\----;
                      RTL                                 ;;----|80CA/----\----; Return 
                                                          ;;                   ;
IsSprOffScreen:       LDA.W !SpriteOffscreenX,X           ;;----|80CB/----\----; \ A = Current sprite is offscreen 
                      ORA.W !SpriteOffscreenVert,X        ;;----|80CE/----\----; /  
                      RTS                                 ;;----|80D1/----\----; Return 
                                                          ;;                   ;
CODE_0180D2:          PHX                                 ;;----|80D2/----\----; In all sprite routines, X = current sprite 
                      TXA                                 ;;----|80D3/----\----;
                      LDX.W !SpriteMemorySetting          ;;----|80D4/----\----; $1692 = Current Sprite memory settings 
                      CLC                                 ;;----|80D7/----\----; \  
                      ADC.L DATA_07F0B4,X                 ;;----|80D8/----\----;  |Add $07:F0B4,$1692 to sprite index.  i.e. minimum one tile allotted to each sprite 
                      TAX                                 ;;----|80DC/----\----;  |the bytes read go straight to the OAM indexes 
                      LDA.L DATA_07F000,X                 ;;----|80DD/----\----;  | 
                      PLX                                 ;;----|80E1/----\----; /  
                      STA.W !SpriteOAMIndex,X             ;;----|80E2/----\----; Current sprite's OAM index 
                      LDA.W !SpriteStatus,X               ;;----|80E5/----\----; If  (something related to current sprite) is 0 
                      BEQ Return018126                    ;;----|80E8/----\----; do not decrement these counters 
                      LDA.B !SpriteLock                   ;;----|80EA/----\----; Lock sprites timer 
                      BNE Return018126                    ;;----|80EC/----\----; if sprites locked, do not decrement counters 
                      LDA.W !SpriteMisc1540,X             ;;----|80EE/----\----; \ Decrement a bunch of sprite counter tables 
                      BEQ +                               ;;----|80F1/----\----;  | 
                      DEC.W !SpriteMisc1540,X             ;;----|80F3/----\----;  |Do not decrement any individual counter if it's already at zero 
                    + LDA.W !SpriteMisc154C,X             ;;----|80F6/----\----;  | 
                      BEQ +                               ;;----|80F9/----\----;  | 
                      DEC.W !SpriteMisc154C,X             ;;----|80FB/----\----;  | 
                    + LDA.W !SpriteMisc1558,X             ;;----|80FE/----\----;  | 
                      BEQ +                               ;;----|8101/----\----;  | 
                      DEC.W !SpriteMisc1558,X             ;;----|8103/----\----;  | 
                    + LDA.W !SpriteMisc1564,X             ;;----|8106/----\----;  | 
                      BEQ +                               ;;----|8109/----\----;  | 
                      DEC.W !SpriteMisc1564,X             ;;----|810B/----\----;  | 
                    + LDA.W !SpriteMisc1FE2,X             ;;----|810E/----\----;  | 
                      BEQ +                               ;;----|8111/----\----;  | 
                      DEC.W !SpriteMisc1FE2,X             ;;----|8113/----\----;  | 
                    + LDA.W !SpriteMisc15AC,X             ;;----|8116/----\----;  | 
                      BEQ +                               ;;----|8119/----\----;  | 
                      DEC.W !SpriteMisc15AC,X             ;;----|811B/----\----;  | 
                    + LDA.W !SpriteMisc163E,X             ;;----|811E/----\----;  | 
                      BEQ Return018126                    ;;----|8121/----\----;  | 
                      DEC.W !SpriteMisc163E,X             ;;----|8123/----\----;  | 
Return018126:         RTS                                 ;;----|8126/----\----; / Return 
                                                          ;;                   ;
HandleSprite:         LDA.W !SpriteStatus,X               ;;----|8127/----\----; Call a routine based on the sprite's status 
                      BEQ EraseSprite                     ;;----|812A/----\----; Routine for status 0 hardcoded, maybe for performance 
                      CMP.B #$08                          ;;----|812C/----\----;
                      BNE +                               ;;----|812E/----\----; Routine for status 8 hardcoded, maybe for preformance 
                      JMP CallSpriteMain                  ;;----|8130/----\----;
                                                          ;;                   ;
                    + JSL ExecutePtr                      ;;----|8133/----\----;
                                                          ;;                   ;
                      dw EraseSprite                      ;;----|8137/----\----; 0 - Non-existant (Bypassed above) 
                      dw CallSpriteInit                   ;;----|8139/----\----; 1 - Initialization 
                      dw HandleSprKilled                  ;;----|813B/----\----; 2 - Falling off screen (hit by star, shell, etc) 
                      dw HandleSprSmushed                 ;;----|813D/----\----; 3 - Smushed 
                      dw HandleSprSpinJump                ;;----|813F/----\----; 4 - Spin Jumped 
                      dw CODE_019A7B                      ;;----|8141/----\----; 5 
                      dw HandleSprLvlEnd                  ;;----|8143/----\----; 6 - End of level turn to coin 
                      dw Return018156                     ;;----|8145/----\----; 7 - Unused 
                      dw Return0185C2                     ;;----|8147/----\----; 8 - Normal (Bypassed above) 
                      dw HandleSprStunned                 ;;----|8149/----\----; 9 - Stationary (Carryable, flipped, stunned) 
                      dw HandleSprKicked                  ;;----|814B/----\----; A - Kicked 
                      dw HandleSprCarried                 ;;----|814D/----\----; B - Carried 
                      dw HandleGoalPowerup                ;;----|814F/----\----; C - Power up from carrying a sprite past the goal tape 
                                                          ;;                   ;
EraseSprite:          LDA.B #$FF                          ;;----|8151/----\----; \ Permanently erase sprite: 
                      STA.W !SpriteLoadIndex,X            ;;----|8153/----\----;  | By changing the sprite's index into the level tables 
Return018156:         RTS                                 ;;----|8156/----\----; / the actual sprite won't get marked for reloading 
                                                          ;;                   ;
HandleGoalPowerup:    JSR CallSpriteMain                  ;;----|8157/----\----;
                      JSR SubOffscreen0Bnk1               ;;----|815A/----\----;
                      JSR SubUpdateSprPos                 ;;----|815D/----\----;
                      DEC.B !SpriteYSpeed,X               ;;----|8160/----\----;
                      DEC.B !SpriteYSpeed,X               ;;----|8162/----\----;
                      JSR IsOnGround                      ;;----|8164/----\----;
                      BEQ +                               ;;----|8167/----\----;
                      JSR SetSomeYSpeed__                 ;;----|8169/----\----;
                    + RTS                                 ;;----|816C/----\----; Return 
                                                          ;;                   ;
HandleSprLvlEnd:      JSL LvlEndSprCoins                  ;;----|816D/----\----;
                      RTS                                 ;;----|8171/----\----; Return 
                                                          ;;                   ;
CallSpriteInit:       LDA.B #$08                          ;;----|8172/----\----; \ Sprite status = Normal 
                      STA.W !SpriteStatus,X               ;;----|8174/----\----; / 
                      LDA.B !SpriteNumber,X               ;;----|8177/----\----;
                      JSL ExecutePtr                      ;;----|8179/----\----;
                                                          ;;                   ;
                      dw InitStandardSprite               ;;----|817D/----\----; 00 - Green Koopa, no shell 
                      dw InitStandardSprite               ;;----|817F/----\----; 01 - Red Koopa, no shell 
                      dw InitStandardSprite               ;;----|8181/----\----; 02 - Blue Koopa, no shell 
                      dw InitStandardSprite               ;;----|8183/----\----; 03 - Yellow Koopa, no shell 
                      dw InitStandardSprite               ;;----|8185/----\----; 04 - Green Koopa 
                      dw InitStandardSprite               ;;----|8187/----\----; 05 - Red Koopa 
                      dw InitStandardSprite               ;;----|8189/----\----; 06 - Blue Koopa 
                      dw InitStandardSprite               ;;----|818B/----\----; 07 - Yellow Koopa 
                      dw InitStandardSprite               ;;----|818D/----\----; 08 - Green Koopa, flying left 
                      dw InitGrnBounceKoopa               ;;----|818F/----\----; 09 - Green bouncing Koopa 
                      dw InitStandardSprite               ;;----|8191/----\----; 0A - Red vertical flying Koopa 
                      dw InitStandardSprite               ;;----|8193/----\----; 0B - Red horizontal flying Koopa 
                      dw InitStandardSprite               ;;----|8195/----\----; 0C - Yellow Koopa with wings 
                      dw InitBomb                         ;;----|8197/----\----; 0D - Bob-omb 
                      dw InitKeyHole                      ;;----|8199/----\----; 0E - Keyhole 
                      dw InitStandardSprite               ;;----|819B/----\----; 0F - Goomba 
                      dw InitStandardSprite               ;;----|819D/----\----; 10 - Bouncing Goomba with wings 
                      dw InitStandardSprite               ;;----|819F/----\----; 11 - Buzzy Beetle 
                      dw UnusedInit                       ;;----|81A1/----\----; 12 - Unused 
                      dw InitStandardSprite               ;;----|81A3/----\----; 13 - Spiny 
                      dw InitStandardSprite               ;;----|81A5/----\----; 14 - Spiny falling 
                      dw Return01B011                     ;;----|81A7/----\----; 15 - Fish, horizontal 
                      dw InitVerticalFish                 ;;----|81A9/----\----; 16 - Fish, vertical 
                      dw InitFish                         ;;----|81AB/----\----; 17 - Fish, created from generator 
                      dw InitFish                         ;;----|81AD/----\----; 18 - Surface jumping fish 
                      dw InitMsg_SideExit                 ;;----|81AF/----\----; 19 - Display text from level Message Box #1 
                      dw InitPiranha                      ;;----|81B1/----\----; 1A - Classic Piranha Plant 
                      dw Return0185C2                     ;;----|81B3/----\----; 1B - Bouncing football in place 
                      dw InitBulletBill                   ;;----|81B5/----\----; 1C - Bullet Bill 
                      dw InitStandardSprite               ;;----|81B7/----\----; 1D - Hopping flame 
                      dw InitLakitu                       ;;----|81B9/----\----; 1E - Lakitu 
                      dw InitMagikoopa                    ;;----|81BB/----\----; 1F - Magikoopa 
                      dw Return018583                     ;;----|81BD/----\----; 20 - Magikoopa's magic 
                      dw FaceMario                        ;;----|81BF/----\----; 21 - Moving coin 
                      dw InitVertNetKoopa                 ;;----|81C1/----\----; 22 - Green vertical net Koopa 
                      dw InitVertNetKoopa                 ;;----|81C3/----\----; 23 - Red vertical net Koopa 
                      dw InitHorzNetKoopa                 ;;----|81C5/----\----; 24 - Green horizontal net Koopa 
                      dw InitHorzNetKoopa                 ;;----|81C7/----\----; 25 - Red horizontal net Koopa 
                      dw InitThwomp                       ;;----|81C9/----\----; 26 - Thwomp 
                      dw Return01AEA2                     ;;----|81CB/----\----; 27 - Thwimp 
                      dw InitBigBoo                       ;;----|81CD/----\----; 28 - Big Boo 
                      dw InitKoopaKid                     ;;----|81CF/----\----; 29 - Koopa Kid 
                      dw InitDownPiranha                  ;;----|81D1/----\----; 2A - Upside down Piranha Plant 
                      dw Return0185C2                     ;;----|81D3/----\----; 2B - Sumo Brother's fire lightning 
                      dw InitYoshiEgg                     ;;----|81D5/----\----; 2C - Yoshi egg 
                      dw InitKey_BabyYoshi                ;;----|81D7/----\----; 2D - Baby green Yoshi 
                      dw InitSpikeTop                     ;;----|81D9/----\----; 2E - Spike Top 
                      dw Return0185C2                     ;;----|81DB/----\----; 2F - Portable spring board 
                      dw FaceMario                        ;;----|81DD/----\----; 30 - Dry Bones, throws bones 
                      dw FaceMario                        ;;----|81DF/----\----; 31 - Bony Beetle 
                      dw FaceMario                        ;;----|81E1/----\----; 32 - Dry Bones, stay on ledge 
                      dw InitFireball                     ;;----|81E3/----\----; 33 - Fireball 
                      dw Return0185C2                     ;;----|81E5/----\----; 34 - Boss fireball 
                      dw InitYoshi                        ;;----|81E7/----\----; 35 - Green Yoshi 
                      dw Return0185C2                     ;;----|81E9/----\----; 36 - Unused 
                      dw InitBigBoo                       ;;----|81EB/----\----; 37 - Boo 
                      dw InitEerie                        ;;----|81ED/----\----; 38 - Eerie 
                      dw InitEerie                        ;;----|81EF/----\----; 39 - Eerie, wave motion 
                      dw InitUrchin                       ;;----|81F1/----\----; 3A - Urchin, fixed 
                      dw InitUrchin                       ;;----|81F3/----\----; 3B - Urchin, wall detect 
                      dw InitUrchinWallFllw               ;;----|81F5/----\----; 3C - Urchin, wall follow 
                      dw InitRipVanFish                   ;;----|81F7/----\----; 3D - Rip Van Fish 
                      dw InitPSwitch                      ;;----|81F9/----\----; 3E - POW 
                      dw Return0185C2                     ;;----|81FB/----\----; 3F - Para-Goomba 
                      dw Return0185C2                     ;;----|81FD/----\----; 40 - Para-Bomb 
                      dw Return01843D                     ;;----|81FF/----\----; 41 - Dolphin, horizontal 
                      dw Return01843D                     ;;----|8201/----\----; 42 - Dolphin2, horizontal 
                      dw Return01843D                     ;;----|8203/----\----; 43 - Dolphin, vertical 
                      dw Return01843D                     ;;----|8205/----\----; 44 - Torpedo Ted 
                      dw Return0185C2                     ;;----|8207/----\----; 45 - Directional coins 
                      dw InitDigginChuck                  ;;----|8209/----\----; 46 - Diggin' Chuck 
                      dw Return0183EE                     ;;----|820B/----\----; 47 - Swimming/Jumping fish 
                      dw Return0183EE                     ;;----|820D/----\----; 48 - Diggin' Chuck's rock 
                      dw InitGrowingPipe                  ;;----|820F/----\----; 49 - Growing/shrinking pipe end 
                      dw Return0183EE                     ;;----|8211/----\----; 4A - Goal Point Question Sphere 
                      dw InitPiranha                      ;;----|8213/----\----; 4B - Pipe dwelling Lakitu 
                      dw InitExplodingBlk                 ;;----|8215/----\----; 4C - Exploding Block 
                      dw InitMontyMole                    ;;----|8217/----\----; 4D - Ground dwelling Monty Mole 
                      dw InitMontyMole                    ;;----|8219/----\----; 4E - Ledge dwelling Monty Mole 
                      dw InitPiranha                      ;;----|821B/----\----; 4F - Jumping Piranha Plant 
                      dw InitPiranha                      ;;----|821D/----\----; 50 - Jumping Piranha Plant, spit fire 
                      dw FaceMario                        ;;----|821F/----\----; 51 - Ninji 
                      dw InitMovingLedge                  ;;----|8221/----\----; 52 - Moving ledge hole in ghost house 
                      dw Return0185C2                     ;;----|8223/----\----; 53 - Throw block sprite 
                      dw InitClimbingDoor                 ;;----|8225/----\----; 54 - Climbing net door 
                      dw InitChckbrdPlat                  ;;----|8227/----\----; 55 - Checkerboard platform, horizontal 
                      dw Return01B25D                     ;;----|8229/----\----; 56 - Flying rock platform, horizontal 
                      dw InitChckbrdPlat                  ;;----|822B/----\----; 57 - Checkerboard platform, vertical 
                      dw Return01B25D                     ;;----|822D/----\----; 58 - Flying rock platform, vertical 
                      dw Return01B267                     ;;----|822F/----\----; 59 - Turn block bridge, horizontal and vertical 
                      dw Return01B267                     ;;----|8231/----\----; 5A - Turn block bridge, horizontal 
                      dw InitFloatingPlat                 ;;----|8233/----\----; 5B - Brown platform floating in water 
                      dw InitFallingPlat                  ;;----|8235/----\----; 5C - Checkerboard platform that falls 
                      dw InitFloatingPlat                 ;;----|8237/----\----; 5D - Orange platform floating in water 
                      dw InitOrangePlat                   ;;----|8239/----\----; 5E - Orange platform, goes on forever 
                      dw InitBrwnChainPlat                ;;----|823B/----\----; 5F - Brown platform on a chain 
                      dw Return01AE90                     ;;----|823D/----\----; 60 - Flat green switch palace switch 
                      dw InitFloatingSkull                ;;----|823F/----\----; 61 - Floating skulls 
                      dw InitLineBrwnPlat                 ;;----|8241/----\----; 62 - Brown platform, line-guided 
                      dw InitLinePlat                     ;;----|8243/----\----; 63 - Checker/brown platform, line-guided 
                      dw InitLineRope                     ;;----|8245/----\----; 64 - Rope mechanism, line-guided 
                      dw InitLineGuidedSpr                ;;----|8247/----\----; 65 - Chainsaw, line-guided 
                      dw InitLineGuidedSpr                ;;----|8249/----\----; 66 - Upside down chainsaw, line-guided 
                      dw InitLineGuidedSpr                ;;----|824B/----\----; 67 - Grinder, line-guided 
                      dw InitLineGuidedSpr                ;;----|824D/----\----; 68 - Fuzz ball, line-guided 
                      dw Return01D6C3                     ;;----|824F/----\----; 69 - Unused 
                      dw Return0185C2                     ;;----|8251/----\----; 6A - Coin game cloud 
                      dw Return01843D                     ;;----|8253/----\----; 6B - Spring board, left wall 
                      dw InitPeaBouncer                   ;;----|8255/----\----; 6C - Spring board, right wall 
                      dw Return0185C2                     ;;----|8257/----\----; 6D - Invisible solid block 
                      dw InitDinos                        ;;----|8259/----\----; 6E - Dino Rhino 
                      dw InitDinos                        ;;----|825B/----\----; 6F - Dino Torch 
                      dw InitPokey                        ;;----|825D/----\----; 70 - Pokey 
                      dw InitSuperKoopa                   ;;----|825F/----\----; 71 - Super Koopa, red cape 
                      dw InitSuperKoopa                   ;;----|8261/----\----; 72 - Super Koopa, yellow cape 
                      dw InitSuperKoopaFthr               ;;----|8263/----\----; 73 - Super Koopa, feather 
                      dw InitPowerUp                      ;;----|8265/----\----; 74 - Mushroom 
                      dw InitPowerUp                      ;;----|8267/----\----; 75 - Flower 
                      dw InitPowerUp                      ;;----|8269/----\----; 76 - Star 
                      dw InitPowerUp                      ;;----|826B/----\----; 77 - Feather 
                      dw InitPowerUp                      ;;----|826D/----\----; 78 - 1-Up 
                      dw Return018583                     ;;----|826F/----\----; 79 - Growing Vine 
                      dw Return018583                     ;;----|8271/----\----; 7A - Firework 
                      dw InitGoalTape                     ;;----|8273/----\----; 7B - Goal Point 
                      dw Return0185C2                     ;;----|8275/----\----; 7C - Princess Peach 
                      dw Return0185C2                     ;;----|8277/----\----; 7D - Balloon 
                      dw Return0185C2                     ;;----|8279/----\----; 7E - Flying Red coin 
                      dw Return0185C2                     ;;----|827B/----\----; 7F - Flying yellow 1-Up 
                      dw InitKey_BabyYoshi                ;;----|827D/----\----; 80 - Key 
                      dw InitChangingItem                 ;;----|827F/----\----; 81 - Changing item from translucent block 
                      dw InitBonusGame                    ;;----|8281/----\----; 82 - Bonus game sprite 
                      dw InitFlying_Block                 ;;----|8283/----\----; 83 - Left flying question block 
                      dw InitFlying_Block                 ;;----|8285/----\----; 84 - Flying question block 
                      dw Return0185C2                     ;;----|8287/----\----; 85 - Unused (Pretty sure) 
                      dw InitWiggler                      ;;----|8289/----\----; 86 - Wiggler 
                      dw Return0185C2                     ;;----|828B/----\----; 87 - Lakitu's cloud 
                      dw InitWingedCage                   ;;----|828D/----\----; 88 - Unused (Winged cage sprite) 
                      dw Return01843D                     ;;----|828F/----\----; 89 - Layer 3 smash 
                      dw Return0185C2                     ;;----|8291/----\----; 8A - Bird from Yoshi's house 
                      dw Return0185C2                     ;;----|8293/----\----; 8B - Puff of smoke from Yoshi's house 
                      dw InitMsg_SideExit                 ;;----|8295/----\----; 8C - Fireplace smoke/exit from side screen 
                      dw Return0185C2                     ;;----|8297/----\----; 8D - Ghost house exit sign and door 
                      dw Return0185C2                     ;;----|8299/----\----; 8E - Invisible "Warp Hole" blocks 
                      dw InitScalePlats                   ;;----|829B/----\----; 8F - Scale platforms 
                      dw FaceMario                        ;;----|829D/----\----; 90 - Large green gas bubble 
                      dw Return018869                     ;;----|829F/----\----; 91 - Chargin' Chuck 
                      dw InitChuck                        ;;----|82A1/----\----; 92 - Splittin' Chuck 
                      dw InitChuck                        ;;----|82A3/----\----; 93 - Bouncin' Chuck 
                      dw InitWhistlinChuck                ;;----|82A5/----\----; 94 - Whistlin' Chuck 
                      dw InitClappinChuck                 ;;----|82A7/----\----; 95 - Clapin' Chuck 
                      dw Return018869                     ;;----|82A9/----\----; 96 - Unused (Chargin' Chuck clone) 
                      dw InitPuntinChuck                  ;;----|82AB/----\----; 97 - Puntin' Chuck 
                      dw InitPitchinChuck                 ;;----|82AD/----\----; 98 - Pitchin' Chuck 
                      dw Return0183EE                     ;;----|82AF/----\----; 99 - Volcano Lotus 
                      dw InitSumoBrother                  ;;----|82B1/----\----; 9A - Sumo Brother 
                      dw InitHammerBrother                ;;----|82B3/----\----; 9B - Hammer Brother 
                      dw Return0185C2                     ;;----|82B5/----\----; 9C - Flying blocks for Hammer Brother 
                      dw InitBubbleSpr                    ;;----|82B7/----\----; 9D - Bubble with sprite 
                      dw InitBallNChain                   ;;----|82B9/----\----; 9E - Ball and Chain 
                      dw InitBanzai                       ;;----|82BB/----\----; 9F - Banzai Bill 
                      dw InitBowserScene                  ;;----|82BD/----\----; A0 - Activates Bowser scene 
                      dw Return0185C2                     ;;----|82BF/----\----; A1 - Bowser's bowling ball 
                      dw Return0185C2                     ;;----|82C1/----\----; A2 - MechaKoopa 
                      dw InitGreyChainPlat                ;;----|82C3/----\----; A3 - Grey platform on chain 
                      dw InitFloatSpkBall                 ;;----|82C5/----\----; A4 - Floating Spike ball 
                      dw InitFuzzBall_Spark               ;;----|82C7/----\----; A5 - Fuzzball/Sparky, ground-guided 
                      dw InitFuzzBall_Spark               ;;----|82C9/----\----; A6 - HotHead, ground-guided 
                      dw Return0185C2                     ;;----|82CB/----\----; A7 - Iggy's ball 
                      dw Return0185C2                     ;;----|82CD/----\----; A8 - Blargg 
                      dw InitReznor                       ;;----|82CF/----\----; A9 - Reznor 
                      dw InitFishbone                     ;;----|82D1/----\----; AA - Fishbone 
                      dw FaceMario                        ;;----|82D3/----\----; AB - Rex 
                      dw InitWoodSpike                    ;;----|82D5/----\----; AC - Wooden Spike, moving down and up 
                      dw InitWoodSpike2                   ;;----|82D7/----\----; AD - Wooden Spike, moving up/down first 
                      dw Return0185C2                     ;;----|82D9/----\----; AE - Fishin' Boo 
                      dw Return0185C2                     ;;----|82DB/----\----; AF - Boo Block 
                      dw InitDiagBouncer                  ;;----|82DD/----\----; B0 - Reflecting stream of Boo Buddies 
                      dw InitCreateEatBlk                 ;;----|82DF/----\----; B1 - Creating/Eating block 
                      dw Return0185C2                     ;;----|82E1/----\----; B2 - Falling Spike 
                      dw InitBowsersFire                  ;;----|82E3/----\----; B3 - Bowser statue fireball 
                      dw FaceMario                        ;;----|82E5/----\----; B4 - Grinder, non-line-guided 
                      dw Return0185C2                     ;;----|82E7/----\----; B5 - Sinking fireball used in boss battles 
                      dw InitDiagBouncer                  ;;----|82E9/----\----; B6 - Reflecting fireball 
                      dw Return0185C2                     ;;----|82EB/----\----; B7 - Carrot Top lift, upper right 
                      dw Return0185C2                     ;;----|82ED/----\----; B8 - Carrot Top lift, upper left 
                      dw Return0185C2                     ;;----|82EF/----\----; B9 - Info Box 
                      dw InitTimedPlat                    ;;----|82F1/----\----; BA - Timed lift 
                      dw Return0185C2                     ;;----|82F3/----\----; BB - Grey moving castle block 
                      dw InitBowserStatue                 ;;----|82F5/----\----; BC - Bowser statue 
                      dw InitSlidingKoopa                 ;;----|82F7/----\----; BD - Sliding Koopa without a shell 
                      dw Return0185C2                     ;;----|82F9/----\----; BE - Swooper bat 
                      dw FaceMario                        ;;----|82FB/----\----; BF - Mega Mole 
                      dw InitGreyLavaPlat                 ;;----|82FD/----\----; C0 - Grey platform on lava 
                      dw InitMontyMole                    ;;----|82FF/----\----; C1 - Flying grey turnblocks 
                      dw FaceMario                        ;;----|8301/----\----; C2 - Blurp fish 
                      dw FaceMario                        ;;----|8303/----\----; C3 - Porcu-Puffer fish 
                      dw Return0185C2                     ;;----|8305/----\----; C4 - Grey platform that falls 
                      dw FaceMario                        ;;----|8307/----\----; C5 - Big Boo Boss 
                      dw Return018313                     ;;----|8309/----\----; C6 - Dark room with spot light 
                      dw Return0185C2                     ;;----|830B/----\----; C7 - Invisible mushroom 
                      dw Return0185C2                     ;;----|830D/----\----; C8 - Light switch block for dark room 
                                                          ;;                   ;
InitGreyLavaPlat:     INC.B !SpriteYPosLow,X              ;;----|830F/----\----;
                      INC.B !SpriteYPosLow,X              ;;----|8311/----\----;
Return018313:         RTS                                 ;;----|8313/----\----;
                                                          ;;                   ;
InitBowserStatue:     INC.W !SpriteMisc157C,X             ;;----|8314/----\----;
                      JSR InitExplodingBlk                ;;----|8317/----\----;
                      STY.B !SpriteTableC2,X              ;;----|831A/----\----;
                      CPY.B #$02                          ;;----|831C/----\----;
                      BNE +                               ;;----|831E/----\----;
                      LDA.B #$01                          ;;----|8320/----\----;
                      STA.W !SpriteOBJAttribute,X         ;;----|8322/----\----;
                    + RTS                                 ;;----|8325/----\----; Return 
                                                          ;;                   ;
InitTimedPlat:        LDY.B #$3F                          ;;----|8326/----\----;
                      LDA.B !SpriteXPosLow,X              ;;----|8328/----\----;
                      AND.B #$10                          ;;----|832A/----\----;
                      BNE +                               ;;----|832C/----\----;
                      LDY.B #$FF                          ;;----|832E/----\----;
                    + TYA                                 ;;----|8330/----\----;
                      STA.W !SpriteMisc1570,X             ;;----|8331/----\----;
                      RTS                                 ;;----|8334/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
YoshiPal:             db $09,$07,$05,$07                  ;;----|8335/----\----;
                                                          ;;                   ;
InitYoshiEgg:         LDA.B !SpriteXPosLow,X              ;;----|8339/----\----;
                      LSR A                               ;;----|833B/----\----;
                      LSR A                               ;;----|833C/----\----;
                      LSR A                               ;;----|833D/----\----;
                      LSR A                               ;;----|833E/----\----;
                      AND.B #$03                          ;;----|833F/----\----;
                      TAY                                 ;;----|8341/----\----;
                      LDA.W YoshiPal,Y                    ;;----|8342/----\----;
                      STA.W !SpriteOBJAttribute,X         ;;----|8345/----\----;
                      INC.W !SpriteMisc187B,X             ;;----|8348/----\----;
                      RTS                                 ;;----|834B/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
DATA_01834C:          db $10,$F0                          ;;----|834C/----\----;
                                                          ;;                   ;
InitDiagBouncer:      JSR FaceMario                       ;;----|834E/----\----;
                      LDA.W DATA_01834C,Y                 ;;----|8351/----\----;
                      STA.B !SpriteXSpeed,X               ;;----|8354/----\----;
                      LDA.B #$F0                          ;;----|8356/----\----;
                      STA.B !SpriteYSpeed,X               ;;----|8358/----\----;
                      RTS                                 ;;----|835A/----\----; Return 
                                                          ;;                   ;
InitWoodSpike:        LDA.B !SpriteYPosLow,X              ;;----|835B/----\----;
                      SEC                                 ;;----|835D/----\----;
                      SBC.B #$40                          ;;----|835E/----\----;
                      STA.B !SpriteYPosLow,X              ;;----|8360/----\----;
                      LDA.W !SpriteXPosHigh,X             ;;----|8362/----\----;
                      SBC.B #$00                          ;;----|8365/----\----;
                      STA.W !SpriteXPosHigh,X             ;;----|8367/----\----;
                      RTS                                 ;;----|836A/----\----; Return 
                                                          ;;                   ;
InitWoodSpike2:       JMP InitMontyMole                   ;;----|836B/----\----;
                                                          ;;                   ;
InitBowserScene:      JSL CODE_03A0F1                     ;;----|836E/----\----;
                      RTS                                 ;;----|8372/----\----; Return 
                                                          ;;                   ;
InitSumoBrother:      LDA.B #$03                          ;;----|8373/----\----;
                      STA.B !SpriteTableC2,X              ;;----|8375/----\----;
                      LDA.B #$70                          ;;----|8377/----\----;
                    - STA.W !SpriteMisc1540,X             ;;----|8379/----\----;
                      RTS                                 ;;----|837C/----\----; Return 
                                                          ;;                   ;
InitSlidingKoopa:     LDA.B #$04                          ;;----|837D/----\----;
                      BRA -                               ;;----|837F/----\----;
                                                          ;;                   ;
InitGrowingPipe:      LDA.B #$40                          ;;----|8381/----\----;
                      STA.W !SpriteMisc1534,X             ;;----|8383/----\----;
                      RTS                                 ;;----|8386/----\----; Return 
                                                          ;;                   ;
InitBanzai:           JSR SubHorizPos                     ;;----|8387/----\----;
                      TYA                                 ;;----|838A/----\----;
                      BNE +                               ;;----|838B/----\----;
                      JMP OffScrEraseSprite               ;;----|838D/----\----;
                                                          ;;                   ;
                    + LDA.B #$09                          ;;----|8390/----\----;
                      STA.W !SPCIO3                       ;;----|8392/----\----; / Play sound effect 
                      RTS                                 ;;----|8395/----\----; Return 
                                                          ;;                   ;
InitBallNChain:       LDA.B #$38                          ;;----|8396/----\----;
                      BRA +                               ;;----|8398/----\----;
                                                          ;;                   ;
InitGreyChainPlat:    LDA.B #$30                          ;;----|839A/----\----;
                    + STA.W !SpriteMisc187B,X             ;;----|839C/----\----;
                      RTS                                 ;;----|839F/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
ExplodingBlkSpr:      db $15,$0F,$00,$04                  ;;----|83A0/----\----;
                                                          ;;                   ;
InitExplodingBlk:     LDA.B !SpriteXPosLow,X              ;;----|83A4/----\----;
                      LSR A                               ;;----|83A6/----\----;
                      LSR A                               ;;----|83A7/----\----;
                      LSR A                               ;;----|83A8/----\----;
                      LSR A                               ;;----|83A9/----\----;
                      AND.B #$03                          ;;----|83AA/----\----;
                      TAY                                 ;;----|83AC/----\----;
                      LDA.W ExplodingBlkSpr,Y             ;;----|83AD/----\----;
                      STA.B !SpriteTableC2,X              ;;----|83B0/----\----;
                      RTS                                 ;;----|83B2/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
DATA_0183B3:          db $80,$40                          ;;----|83B3/----\----;
                                                          ;;                   ;
InitScalePlats:       LDA.B !SpriteYPosLow,X              ;;----|83B5/----\----;
                      STA.W !SpriteMisc1534,X             ;;----|83B7/----\----;
                      LDA.W !SpriteXPosHigh,X             ;;----|83BA/----\----;
                      STA.W !SpriteMisc151C,X             ;;----|83BD/----\----;
                      LDA.B !SpriteXPosLow,X              ;;----|83C0/----\----;
                      AND.B #$10                          ;;----|83C2/----\----;
                      LSR A                               ;;----|83C4/----\----;
                      LSR A                               ;;----|83C5/----\----;
                      LSR A                               ;;----|83C6/----\----;
                      LSR A                               ;;----|83C7/----\----;
                      TAY                                 ;;----|83C8/----\----;
                      LDA.B !SpriteXPosLow,X              ;;----|83C9/----\----;
                      CLC                                 ;;----|83CB/----\----;
                      ADC.W DATA_0183B3,Y                 ;;----|83CC/----\----;
                      STA.B !SpriteTableC2,X              ;;----|83CF/----\----;
                      LDA.W !SpriteYPosHigh,X             ;;----|83D1/----\----;
                      ADC.B #$00                          ;;----|83D4/----\----;
                      STA.W !SpriteMisc1602,X             ;;----|83D6/----\----;
                      RTS                                 ;;----|83D9/----\----; Return 
                                                          ;;                   ;
InitMsg_SideExit:     LDA.B #$28                          ;;----|83DA/----\----; \ Set current sprite's "disable contact with other sprites" timer to x28 
                      STA.W !SpriteMisc1564,X             ;;----|83DC/----\----; /  
                      RTS                                 ;;----|83DF/----\----; Return 
                                                          ;;                   ;
InitYoshi:            DEC.W !SpriteMisc160E,X             ;;----|83E0/----\----;
                      INC.W !SpriteMisc157C,X             ;;----|83E3/----\----;
                      LDA.W !CarryYoshiThruLvls           ;;----|83E6/----\----;
                      BEQ Return0183EE                    ;;----|83E9/----\----;
                      STZ.W !SpriteStatus,X               ;;----|83EB/----\----;
Return0183EE:         RTS                                 ;;----|83EE/----\----;
                                                          ;;                   ;
                                                          ;;                   ;
DATA_0183EF:          db $08                              ;;----|83EF/----\----;
                                                          ;;                   ;
DATA_0183F0:          db $00,$08                          ;;----|83F0/----\----;
                                                          ;;                   ;
InitSpikeTop:         JSR SubHorizPos                     ;;----|83F2/----\----;
                      TYA                                 ;;----|83F5/----\----;
                      EOR.B #$01                          ;;----|83F6/----\----;
                      ASL A                               ;;----|83F8/----\----;
                      ASL A                               ;;----|83F9/----\----;
                      ASL A                               ;;----|83FA/----\----;
                      ASL A                               ;;----|83FB/----\----;
                      JSR CODE_01841D                     ;;----|83FC/----\----;
                      STZ.W !SpriteInLiquid,X             ;;----|83FF/----\----;
                      BRA CODE_01840E                     ;;----|8402/----\----;
                                                          ;;                   ;
InitUrchinWallFllw:   INC.B !SpriteYPosLow,X              ;;----|8404/----\----;
                      BNE InitFuzzBall_Spark              ;;----|8406/----\----;
                      INC.W !SpriteXPosHigh,X             ;;----|8408/----\----;
InitFuzzBall_Spark:   JSR InitUrchin                      ;;----|840B/----\----;
CODE_01840E:          LDA.W !SpriteMisc151C,X             ;;----|840E/----\----;
                      EOR.B #$10                          ;;----|8411/----\----;
                      STA.W !SpriteMisc151C,X             ;;----|8413/----\----;
                      LSR A                               ;;----|8416/----\----;
                      LSR A                               ;;----|8417/----\----;
                      STA.B !SpriteTableC2,X              ;;----|8418/----\----;
                      RTS                                 ;;----|841A/----\----; Return 
                                                          ;;                   ;
InitUrchin:           LDA.B !SpriteXPosLow,X              ;;----|841B/----\----;
CODE_01841D:          LDY.B #$00                          ;;----|841D/----\----;
                      AND.B #$10                          ;;----|841F/----\----;
                      STA.W !SpriteMisc151C,X             ;;----|8421/----\----;
                      BNE +                               ;;----|8424/----\----;
                      INY                                 ;;----|8426/----\----;
                    + LDA.W DATA_0183EF,Y                 ;;----|8427/----\----;
                      STA.B !SpriteXSpeed,X               ;;----|842A/----\----;
                      LDA.W DATA_0183F0,Y                 ;;----|842C/----\----;
                      STA.B !SpriteYSpeed,X               ;;----|842F/----\----;
InitRipVanFish:       INC.W !SpriteInLiquid,X             ;;----|8431/----\----;
                      RTS                                 ;;----|8434/----\----; Return 
                                                          ;;                   ;
InitKey_BabyYoshi:    LDA.B #$09                          ;;----|8435/----\----; \ Sprite status = Carryable 
                      STA.W !SpriteStatus,X               ;;----|8437/----\----; / 
                      RTS                                 ;;----|843A/----\----; Return 
                                                          ;;                   ;
InitChangingItem:     INC.B !SpriteTableC2,X              ;;----|843B/----\----;
Return01843D:         RTS                                 ;;----|843D/----\----;
                                                          ;;                   ;
InitPeaBouncer:       LDA.B !SpriteXPosLow,X              ;;----|843E/----\----;
                      SEC                                 ;;----|8440/----\----;
                      SBC.B #$08                          ;;----|8441/----\----;
                      STA.B !SpriteXPosLow,X              ;;----|8443/----\----;
                      LDA.W !SpriteYPosHigh,X             ;;----|8445/----\----;
                      SBC.B #$00                          ;;----|8448/----\----;
                      STA.W !SpriteYPosHigh,X             ;;----|844A/----\----;
                      RTS                                 ;;----|844D/----\----; Return 
                                                          ;;                   ;
InitPSwitch:          LDA.B !SpriteXPosLow,X              ;;----|844E/----\----; \ $151C,x = Blue/Silver, 
                      LSR A                               ;;----|8450/----\----;  | depending on initial X position 
                      LSR A                               ;;----|8451/----\----;  | 
                      LSR A                               ;;----|8452/----\----;  | 
                      LSR A                               ;;----|8453/----\----;  | 
                      AND.B #$01                          ;;----|8454/----\----;  | 
                      STA.W !SpriteMisc151C,X             ;;----|8456/----\----; / 
                      TAY                                 ;;----|8459/----\----; \ Store appropriate palette to RAM 
                      LDA.W PSwitchPal,Y                  ;;----|845A/----\----;  | 
                      STA.W !SpriteOBJAttribute,X         ;;----|845D/----\----; / 
                      LDA.B #$09                          ;;----|8460/----\----; \ Sprite status = Carryable 
                      STA.W !SpriteStatus,X               ;;----|8462/----\----; / 
                      RTS                                 ;;----|8465/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
PSwitchPal:           db $06,$02                          ;;----|8466/----\----;
                                                          ;;                   ;
ADDR_018468:          JMP OffScrEraseSprite               ;;----|8468/----\----;
                                                          ;;                   ;
InitLakitu:           LDY.B #$09                          ;;----|846B/----\----;
CODE_01846D:          CPY.W !CurSpriteProcess             ;;----|846D/----\----;
                      BEQ CODE_018484                     ;;----|8470/----\----;
                      LDA.W !SpriteStatus,Y               ;;----|8472/----\----;
                      CMP.B #$08                          ;;----|8475/----\----;
                      BNE CODE_018484                     ;;----|8477/----\----;
                      LDA.W !SpriteNumber,Y               ;;----|8479/----\----;
                      CMP.B #$87                          ;;----|847C/----\----;
                      BEQ ADDR_018468                     ;;----|847E/----\----;
                      CMP.B #$1E                          ;;----|8480/----\----;
                      BEQ ADDR_018468                     ;;----|8482/----\----;
CODE_018484:          DEY                                 ;;----|8484/----\----;
                      BPL CODE_01846D                     ;;----|8485/----\----;
                      STZ.W !SpriteRespawnTimer           ;;----|8487/----\----;
                      STZ.W !SpriteWillAppear             ;;----|848A/----\----;
                      STZ.W !CurrentGenerator             ;;----|848D/----\----;
                      LDA.B !SpriteYPosLow,X              ;;----|8490/----\----;
                      STA.W !SpriteRespawnYPos            ;;----|8492/----\----;
                      LDA.W !SpriteXPosHigh,X             ;;----|8495/----\----;
                      STA.W !SpriteRespawnYPos+1          ;;----|8498/----\----;
                      JSL FindFreeSprSlot                 ;;----|849B/----\----;
                      BMI InitMontyMole                   ;;----|849F/----\----;
                      STY.W !LakituCloudSlot              ;;----|84A1/----\----;
                      LDA.B #$87                          ;;----|84A4/----\----; \ Sprite = Lakitu Cloud 
                      STA.W !SpriteNumber,Y               ;;----|84A6/----\----; / 
                      LDA.B #$08                          ;;----|84A9/----\----; \ Sprite status = Normal 
                      STA.W !SpriteStatus,Y               ;;----|84AB/----\----; / 
                      LDA.B !SpriteXPosLow,X              ;;----|84AE/----\----;
                      STA.W !SpriteXPosLow,Y              ;;----|84B0/----\----;
                      LDA.W !SpriteYPosHigh,X             ;;----|84B3/----\----;
                      STA.W !SpriteYPosHigh,Y             ;;----|84B6/----\----;
                      LDA.B !SpriteYPosLow,X              ;;----|84B9/----\----;
                      STA.W !SpriteYPosLow,Y              ;;----|84BB/----\----;
                      LDA.W !SpriteXPosHigh,X             ;;----|84BE/----\----;
                      STA.W !SpriteXPosHigh,Y             ;;----|84C1/----\----;
                      PHX                                 ;;----|84C4/----\----;
                      TYX                                 ;;----|84C5/----\----;
                      JSL InitSpriteTables                ;;----|84C6/----\----;
                      PLX                                 ;;----|84CA/----\----;
                      STZ.W !LakituCloudTimer             ;;----|84CB/----\----;
InitMontyMole:        LDA.B !SpriteXPosLow,X              ;;----|84CE/----\----;
                      AND.B #$10                          ;;----|84D0/----\----;
                      STA.W !SpriteMisc151C,X             ;;----|84D2/----\----;
                      RTS                                 ;;----|84D5/----\----; Return 
                                                          ;;                   ;
InitCreateEatBlk:     LDA.B #$FF                          ;;----|84D6/----\----;
                      STA.W !BlockSnakeActive             ;;----|84D8/----\----;
                      BRA InitMontyMole                   ;;----|84DB/----\----;
                                                          ;;                   ;
InitBulletBill:       JSR SubHorizPos                     ;;----|84DD/----\----;
                      TYA                                 ;;----|84E0/----\----;
                      STA.B !SpriteTableC2,X              ;;----|84E1/----\----;
                      LDA.B #$10                          ;;----|84E3/----\----;
                      STA.W !SpriteMisc1540,X             ;;----|84E5/----\----;
                      RTS                                 ;;----|84E8/----\----; Return 
                                                          ;;                   ;
InitClappinChuck:     LDA.B #$08                          ;;----|84E9/----\----;
                      BRA +                               ;;----|84EB/----\----;
                                                          ;;                   ;
InitPitchinChuck:     LDA.B !SpriteXPosLow,X              ;;----|84ED/----\----;
                      AND.B #$30                          ;;----|84EF/----\----;
                      LSR A                               ;;----|84F1/----\----;
                      LSR A                               ;;----|84F2/----\----;
                      LSR A                               ;;----|84F3/----\----;
                      LSR A                               ;;----|84F4/----\----;
                      STA.W !SpriteMisc187B,X             ;;----|84F5/----\----;
                      LDA.B #$0A                          ;;----|84F8/----\----;
                      BRA +                               ;;----|84FA/----\----;
                                                          ;;                   ;
InitPuntinChuck:      LDA.B #$09                          ;;----|84FC/----\----;
                      BRA +                               ;;----|84FE/----\----;
                                                          ;;                   ;
InitWhistlinChuck:    LDA.B #$0B                          ;;----|8500/----\----;
                      BRA +                               ;;----|8502/----\----;
                                                          ;;                   ;
InitChuck:            LDA.B #$05                          ;;----|8504/----\----;
                      BRA +                               ;;----|8506/----\----;
                                                          ;;                   ;
InitDigginChuck:      LDA.B #$30                          ;;----|8508/----\----;
                      STA.W !SpriteMisc1540,X             ;;----|850A/----\----;
                      LDA.B !SpriteXPosLow,X              ;;----|850D/----\----;
                      AND.B #$10                          ;;----|850F/----\----;
                      LSR A                               ;;----|8511/----\----;
                      LSR A                               ;;----|8512/----\----;
                      LSR A                               ;;----|8513/----\----;
                      LSR A                               ;;----|8514/----\----;
                      STA.W !SpriteMisc157C,X             ;;----|8515/----\----;
                      LDA.B #$04                          ;;----|8518/----\----;
                    + STA.B !SpriteTableC2,X              ;;----|851A/----\----;
                      JSR FaceMario                       ;;----|851C/----\----;
                      LDA.W DATA_018526,Y                 ;;----|851F/----\----;
                      STA.W !SpriteMisc151C,X             ;;----|8522/----\----;
                      RTS                                 ;;----|8525/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
DATA_018526:          db $00,$04                          ;;----|8526/----\----;
                                                          ;;                   ;
InitSuperKoopa:       LDA.B #$28                          ;;----|8528/----\----;
                      STA.B !SpriteYSpeed,X               ;;----|852A/----\----;
                      BRA FaceMario                       ;;----|852C/----\----;
                                                          ;;                   ;
InitSuperKoopaFthr:   JSR FaceMario                       ;;----|852E/----\----;
                      LDA.B !SpriteXPosLow,X              ;;----|8531/----\----;
                      AND.B #$10                          ;;----|8533/----\----;
                      BEQ +                               ;;----|8535/----\----;
                      LDA.B #$10                          ;;----|8537/----\----; \ Can be jumped on 
                      STA.W !SpriteTweakerA,X             ;;----|8539/----\----; / 
                      LDA.B #$80                          ;;----|853C/----\----;
                      STA.W !SpriteTweakerB,X             ;;----|853E/----\----;
                      LDA.B #$10                          ;;----|8541/----\----;
                      STA.W !SpriteTweakerE,X             ;;----|8543/----\----;
                      RTS                                 ;;----|8546/----\----; Return 
                                                          ;;                   ;
                    + INC.W !SpriteMisc1534,X             ;;----|8547/----\----;
                      RTS                                 ;;----|854A/----\----; Return 
                                                          ;;                   ;
InitPokey:            LDA.B #$1F                          ;;----|854B/----\----; \ If on Yoshi, $C2,x = #$1F 
                      LDY.W !PlayerRidingYoshi            ;;----|854D/----\----;  | (5 segments, 1 bit each) 
                      BNE +                               ;;----|8550/----\----;  | 
                      LDA.B #$07                          ;;----|8552/----\----;  | If not on Yoshi, $C2,x = #$07 
                    + STA.B !SpriteTableC2,X              ;;----|8554/----\----; /   (3 segments, 1 bit each) 
                      BRA FaceMario                       ;;----|8556/----\----;
                                                          ;;                   ;
InitDinos:            LDA.B #$04                          ;;----|8558/----\----;
                      STA.W !SpriteMisc151C,X             ;;----|855A/----\----;
InitBomb:             LDA.B #$FF                          ;;----|855D/----\----;
                      STA.W !SpriteMisc1540,X             ;;----|855F/----\----;
                      BRA FaceMario                       ;;----|8562/----\----;
                                                          ;;                   ;
InitBubbleSpr:        JSR InitExplodingBlk                ;;----|8564/----\----;
                      STY.B !SpriteTableC2,X              ;;----|8567/----\----;
                      DEC.W !SpriteMisc1534,X             ;;----|8569/----\----;
                      BRA FaceMario                       ;;----|856C/----\----;
                                                          ;;                   ;
InitGrnBounceKoopa:   LDA.B !SpriteYPosLow,X              ;;----|856E/----\----;
                      AND.B #$10                          ;;----|8570/----\----;
                      STA.W !SpriteMisc160E,X             ;;----|8572/----\----;
InitStandardSprite:   JSL GetRand                         ;;----|8575/----\----;
                      STA.W !SpriteMisc1570,X             ;;----|8579/----\----;
FaceMario:            JSR SubHorizPos                     ;;----|857C/----\----;
                      TYA                                 ;;----|857F/----\----;
                      STA.W !SpriteMisc157C,X             ;;----|8580/----\----;
Return018583:         RTS                                 ;;----|8583/----\----;
                                                          ;;                   ;
InitBowsersFire:      LDA.B #$17                          ;;----|8584/----\----;
                      STA.W !SPCIO3                       ;;----|8586/----\----; / Play sound effect 
                      BRA FaceMario                       ;;----|8589/----\----;
                                                          ;;                   ;
InitPowerUp:          INC.B !SpriteTableC2,X              ;;----|858B/----\----;
                      RTS                                 ;;----|858D/----\----; Return 
                                                          ;;                   ;
InitFishbone:         JSL GetRand                         ;;----|858E/----\----;
                      AND.B #$1F                          ;;----|8592/----\----;
                      STA.W !SpriteMisc1540,X             ;;----|8594/----\----;
                      JMP FaceMario                       ;;----|8597/----\----;
                                                          ;;                   ;
InitDownPiranha:      ASL.W !SpriteOBJAttribute,X         ;;----|859A/----\----;
                      SEC                                 ;;----|859D/----\----;
                      ROR.W !SpriteOBJAttribute,X         ;;----|859E/----\----;
                      LDA.B !SpriteYPosLow,X              ;;----|85A1/----\----;
                      SEC                                 ;;----|85A3/----\----;
                      SBC.B #$10                          ;;----|85A4/----\----;
                      STA.B !SpriteYPosLow,X              ;;----|85A6/----\----;
                      LDA.W !SpriteXPosHigh,X             ;;----|85A8/----\----;
                      SBC.B #$00                          ;;----|85AB/----\----;
                      STA.W !SpriteXPosHigh,X             ;;----|85AD/----\----;
InitPiranha:          LDA.B !SpriteXPosLow,X              ;;----|85B0/----\----; \ Center sprite between two tiles 
                      CLC                                 ;;----|85B2/----\----;  | 
                      ADC.B #$08                          ;;----|85B3/----\----;  | 
                      STA.B !SpriteXPosLow,X              ;;----|85B5/----\----; / 
                      DEC.B !SpriteYPosLow,X              ;;----|85B7/----\----;
                      LDA.B !SpriteYPosLow,X              ;;----|85B9/----\----;
                      CMP.B #$FF                          ;;----|85BB/----\----;
                      BNE Return0185C2                    ;;----|85BD/----\----;
                      DEC.W !SpriteXPosHigh,X             ;;----|85BF/----\----;
Return0185C2:         RTS                                 ;;----|85C2/----\----;
                                                          ;;                   ;
CallSpriteMain:       STZ.W !SpriteXMovement              ;;----|85C3/----\----; CallSpriteMain 
                      LDA.B !SpriteNumber,X               ;;----|85C6/----\----;
                      JSL ExecutePtr                      ;;----|85C8/----\----;
                                                          ;;                   ;
                      dw ShellessKoopas                   ;;----|85CC/----\----; 00 - Green Koopa, no shell 
                      dw ShellessKoopas                   ;;----|85CE/----\----; 01 - Red Koopa, no shell 
                      dw ShellessKoopas                   ;;----|85D0/----\----; 02 - Blue Koopa, no shell 
                      dw ShellessKoopas                   ;;----|85D2/----\----; 03 - Yellow Koopa, no shell 
                      dw Spr0to13Start                    ;;----|85D4/----\----; 04 - Green Koopa 
                      dw Spr0to13Start                    ;;----|85D6/----\----; 05 - Red Koopa 
                      dw Spr0to13Start                    ;;----|85D8/----\----; 06 - Blue Koopa 
                      dw Spr0to13Start                    ;;----|85DA/----\----; 07 - Yellow Koopa 
                      dw GreenParaKoopa                   ;;----|85DC/----\----; 08 - Green Koopa, flying left 
                      dw GreenParaKoopa                   ;;----|85DE/----\----; 09 - Green bouncing Koopa 
                      dw RedVertParaKoopa                 ;;----|85E0/----\----; 0A - Red vertical flying Koopa 
                      dw RedHorzParaKoopa                 ;;----|85E2/----\----; 0B - Red horizontal flying Koopa 
                      dw Spr0to13Start                    ;;----|85E4/----\----; 0C - Yellow Koopa with wings 
                      dw Bobomb                           ;;----|85E6/----\----; 0D - Bob-omb 
                      dw Keyhole                          ;;----|85E8/----\----; 0E - Keyhole 
                      dw Spr0to13Start                    ;;----|85EA/----\----; 0F - Goomba 
                      dw WingedGoomba                     ;;----|85EC/----\----; 10 - Bouncing Goomba with wings 
                      dw Spr0to13Start                    ;;----|85EE/----\----; 11 - Buzzy Beetle 
                      dw Return01F87B                     ;;----|85F0/----\----; 12 - Unused 
                      dw Spr0to13Start                    ;;----|85F2/----\----; 13 - Spiny 
                      dw SpinyEgg                         ;;----|85F4/----\----; 14 - Spiny falling 
                      dw Fish                             ;;----|85F6/----\----; 15 - Fish, horizontal 
                      dw Fish                             ;;----|85F8/----\----; 16 - Fish, vertical 
                      dw GeneratedFish                    ;;----|85FA/----\----; 17 - Fish, created from generator 
                      dw JumpingFish                      ;;----|85FC/----\----; 18 - Surface jumping fish 
                      dw PSwitch                          ;;----|85FE/----\----; 19 - Display text from level Message Box #1 
                      dw ClassicPiranhas                  ;;----|8600/----\----; 1A - Classic Piranha Plant 
                      dw Bank3SprHandler                  ;;----|8602/----\----; 1B - Bouncing football in place 
                      dw BulletBill                       ;;----|8604/----\----; 1C - Bullet Bill 
                      dw HoppingFlame                     ;;----|8606/----\----; 1D - Hopping flame 
                      dw Lakitu                           ;;----|8608/----\----; 1E - Lakitu 
                      dw Magikoopa                        ;;----|860A/----\----; 1F - Magikoopa 
                      dw MagikoopasMagic                  ;;----|860C/----\----; 20 - Magikoopa's magic 
                      dw PowerUpRt                        ;;----|860E/----\----; 21 - Moving coin 
                      dw ClimbingKoopa                    ;;----|8610/----\----; 22 - Green vertical net Koopa 
                      dw ClimbingKoopa                    ;;----|8612/----\----; 23 - Red vertical net Koopa 
                      dw ClimbingKoopa                    ;;----|8614/----\----; 24 - Green horizontal net Koopa 
                      dw ClimbingKoopa                    ;;----|8616/----\----; 25 - Red horizontal net Koopa 
                      dw Thwomp                           ;;----|8618/----\----; 26 - Thwomp 
                      dw Thwimp                           ;;----|861A/----\----; 27 - Thwimp 
                      dw BigBoo                           ;;----|861C/----\----; 28 - Big Boo 
                      dw KoopaKid                         ;;----|861E/----\----; 29 - Koopa Kid 
                      dw ClassicPiranhas                  ;;----|8620/----\----; 2A - Upside down Piranha Plant 
                      dw SumosLightning                   ;;----|8622/----\----; 2B - Sumo Brother's fire lightning 
                      dw YoshiEgg                         ;;----|8624/----\----; 2C - Yoshi egg 
                      dw Return0185C2                     ;;----|8626/----\----; 2D - Baby green Yoshi 
                      dw WallFollowers                    ;;----|8628/----\----; 2E - Spike Top 
                      dw SpringBoard                      ;;----|862A/----\----; 2F - Portable spring board 
                      dw DryBonesAndBeetle                ;;----|862C/----\----; 30 - Dry Bones, throws bones 
                      dw DryBonesAndBeetle                ;;----|862E/----\----; 31 - Bony Beetle 
                      dw DryBonesAndBeetle                ;;----|8630/----\----; 32 - Dry Bones, stay on ledge 
                      dw Fireballs                        ;;----|8632/----\----; 33 - Fireball 
                      dw BossFireball                     ;;----|8634/----\----; 34 - Boss fireball 
                      dw Yoshi                            ;;----|8636/----\----; 35 - Green Yoshi 
                      dw DATA_01E41F                      ;;----|8638/----\----; 36 - Unused 
                      dw Boo_BooBlock                     ;;----|863A/----\----; 37 - Boo 
                      dw Eerie                            ;;----|863C/----\----; 38 - Eerie 
                      dw Eerie                            ;;----|863E/----\----; 39 - Eerie, wave motion 
                      dw WallFollowers                    ;;----|8640/----\----; 3A - Urchin, fixed 
                      dw WallFollowers                    ;;----|8642/----\----; 3B - Urchin, wall detect 
                      dw WallFollowers                    ;;----|8644/----\----; 3C - Urchin, wall follow 
                      dw RipVanFish                       ;;----|8646/----\----; 3D - Rip Van Fish 
                      dw PSwitch                          ;;----|8648/----\----; 3E - POW 
                      dw ParachuteSprites                 ;;----|864A/----\----; 3F - Para-Goomba 
                      dw ParachuteSprites                 ;;----|864C/----\----; 40 - Para-Bomb 
                      dw Dolphin                          ;;----|864E/----\----; 41 - Dolphin, horizontal 
                      dw Dolphin                          ;;----|8650/----\----; 42 - Dolphin2, horizontal 
                      dw Dolphin                          ;;----|8652/----\----; 43 - Dolphin, vertical 
                      dw TorpedoTed                       ;;----|8654/----\----; 44 - Torpedo Ted 
                      dw DirectionalCoins                 ;;----|8656/----\----; 45 - Directional coins 
                      dw DigginChuck                      ;;----|8658/----\----; 46 - Diggin' Chuck 
                      dw SwimJumpFish                     ;;----|865A/----\----; 47 - Swimming/Jumping fish 
                      dw DigginChucksRock                 ;;----|865C/----\----; 48 - Diggin' Chuck's rock 
                      dw GrowingPipe                      ;;----|865E/----\----; 49 - Growing/shrinking pipe end 
                      dw GoalSphere                       ;;----|8660/----\----; 4A - Goal Point Question Sphere 
                      dw PipeLakitu                       ;;----|8662/----\----; 4B - Pipe dwelling Lakitu 
                      dw ExplodingBlock                   ;;----|8664/----\----; 4C - Exploding Block 
                      dw MontyMole                        ;;----|8666/----\----; 4D - Ground dwelling Monty Mole 
                      dw MontyMole                        ;;----|8668/----\----; 4E - Ledge dwelling Monty Mole 
                      dw JumpingPiranha                   ;;----|866A/----\----; 4F - Jumping Piranha Plant 
                      dw JumpingPiranha                   ;;----|866C/----\----; 50 - Jumping Piranha Plant, spit fire 
                      dw Bank3SprHandler                  ;;----|866E/----\----; 51 - Ninji 
                      dw MovingLedge                      ;;----|8670/----\----; 52 - Moving ledge hole in ghost house 
                      dw Return0185C2                     ;;----|8672/----\----; 53 - Throw block sprite 
                      dw ClimbingDoor                     ;;----|8674/----\----; 54 - Climbing net door 
                      dw Platforms                        ;;----|8676/----\----; 55 - Checkerboard platform, horizontal 
                      dw Platforms                        ;;----|8678/----\----; 56 - Flying rock platform, horizontal 
                      dw Platforms                        ;;----|867A/----\----; 57 - Checkerboard platform, vertical 
                      dw Platforms                        ;;----|867C/----\----; 58 - Flying rock platform, vertical 
                      dw TurnBlockBridge                  ;;----|867E/----\----; 59 - Turn block bridge, horizontal and vertical 
                      dw HorzTurnBlkBridge                ;;----|8680/----\----; 5A - Turn block bridge, horizontal 
                      dw Platforms2                       ;;----|8682/----\----; 5B - Brown platform floating in water 
                      dw Platforms2                       ;;----|8684/----\----; 5C - Checkerboard platform that falls 
                      dw Platforms2                       ;;----|8686/----\----; 5D - Orange platform floating in water 
                      dw OrangePlatform                   ;;----|8688/----\----; 5E - Orange platform, goes on forever 
                      dw BrownChainedPlat                 ;;----|868A/----\----; 5F - Brown platform on a chain 
                      dw PalaceSwitch                     ;;----|868C/----\----; 60 - Flat green switch palace switch 
                      dw FloatingSkulls                   ;;----|868E/----\----; 61 - Floating skulls 
                      dw LineFuzzy_Plats                  ;;----|8690/----\----; 62 - Brown platform, line-guided 
                      dw LineFuzzy_Plats                  ;;----|8692/----\----; 63 - Checker/brown platform, line-guided 
                      dw LineRope_Chainsaw                ;;----|8694/----\----; 64 - Rope mechanism, line-guided 
                      dw LineRope_Chainsaw                ;;----|8696/----\----; 65 - Chainsaw, line-guided 
                      dw LineRope_Chainsaw                ;;----|8698/----\----; 66 - Upside down chainsaw, line-guided 
                      dw LineGrinder                      ;;----|869A/----\----; 67 - Grinder, line-guided 
                      dw LineFuzzy_Plats                  ;;----|869C/----\----; 68 - Fuzz ball, line-guided 
                      dw Return01D6C3                     ;;----|869E/----\----; 69 - Unused 
                      dw CoinCloud                        ;;----|86A0/----\----; 6A - Coin game cloud 
                      dw PeaBouncer                       ;;----|86A2/----\----; 6B - Spring board, left wall 
                      dw PeaBouncer                       ;;----|86A4/----\----; 6C - Spring board, right wall 
                      dw InvisSolid_Dinos                 ;;----|86A6/----\----; 6D - Invisible solid block 
                      dw InvisSolid_Dinos                 ;;----|86A8/----\----; 6E - Dino Rhino 
                      dw InvisSolid_Dinos                 ;;----|86AA/----\----; 6F - Dino Torch 
                      dw Pokey                            ;;----|86AC/----\----; 70 - Pokey 
                      dw RedSuperKoopa                    ;;----|86AE/----\----; 71 - Super Koopa, red cape 
                      dw YellowSuperKoopa                 ;;----|86B0/----\----; 72 - Super Koopa, yellow cape 
                      dw FeatherSuperKoopa                ;;----|86B2/----\----; 73 - Super Koopa, feather 
                      dw PowerUpRt                        ;;----|86B4/----\----; 74 - Mushroom 
                      dw FireFlower                       ;;----|86B6/----\----; 75 - Flower 
                      dw PowerUpRt                        ;;----|86B8/----\----; 76 - Star 
                      dw Feather                          ;;----|86BA/----\----; 77 - Feather 
                      dw PowerUpRt                        ;;----|86BC/----\----; 78 - 1-Up 
                      dw GrowingVine                      ;;----|86BE/----\----; 79 - Growing Vine 
                      dw Bank3SprHandler                  ;;----|86C0/----\----; 7A - Firework 
                      dw GoalTape                         ;;----|86C2/----\----; 7B - Goal Point 
                      dw Bank3SprHandler                  ;;----|86C4/----\----; 7C - Princess Peach 
                      dw BalloonKeyFlyObjs                ;;----|86C6/----\----; 7D - Balloon 
                      dw BalloonKeyFlyObjs                ;;----|86C8/----\----; 7E - Flying Red coin 
                      dw BalloonKeyFlyObjs                ;;----|86CA/----\----; 7F - Flying yellow 1-Up 
                      dw BalloonKeyFlyObjs                ;;----|86CC/----\----; 80 - Key 
                      dw ChangingItem                     ;;----|86CE/----\----; 81 - Changing item from translucent block 
                      dw BonusGame                        ;;----|86D0/----\----; 82 - Bonus game sprite 
                      dw Flying_Block                     ;;----|86D2/----\----; 83 - Left flying question block 
                      dw Flying_Block                     ;;----|86D4/----\----; 84 - Flying question block 
                      dw InitFlying_Block                 ;;----|86D6/----\----; 85 - Unused (Pretty sure) 
                      dw Wiggler                          ;;----|86D8/----\----; 86 - Wiggler 
                      dw LakituCloud                      ;;----|86DA/----\----; 87 - Lakitu's cloud 
                      dw WingedCage                       ;;----|86DC/----\----; 88 - Unused (Winged cage sprite) 
                      dw Layer3Smash                      ;;----|86DE/----\----; 89 - Layer 3 smash 
                      dw YoshisHouseBirds                 ;;----|86E0/----\----; 8A - Bird from Yoshi's house 
                      dw YoshisHouseSmoke                 ;;----|86E2/----\----; 8B - Puff of smoke from Yoshi's house 
                      dw SideExit                         ;;----|86E4/----\----; 8C - Fireplace smoke/exit from side screen 
                      dw GhostHouseExit                   ;;----|86E6/----\----; 8D - Ghost house exit sign and door 
                      dw WarpBlocks                       ;;----|86E8/----\----; 8E - Invisible "Warp Hole" blocks 
                      dw ScalePlatforms                   ;;----|86EA/----\----; 8F - Scale platforms 
                      dw GasBubble                        ;;----|86EC/----\----; 90 - Large green gas bubble 
                      dw Chucks                           ;;----|86EE/----\----; 91 - Chargin' Chuck 
                      dw Chucks                           ;;----|86F0/----\----; 92 - Splittin' Chuck 
                      dw Chucks                           ;;----|86F2/----\----; 93 - Bouncin' Chuck 
                      dw Chucks                           ;;----|86F4/----\----; 94 - Whistlin' Chuck 
                      dw Chucks                           ;;----|86F6/----\----; 95 - Clapin' Chuck 
                      dw Chucks                           ;;----|86F8/----\----; 96 - Unused (Chargin' Chuck clone) 
                      dw Chucks                           ;;----|86FA/----\----; 97 - Puntin' Chuck 
                      dw Chucks                           ;;----|86FC/----\----; 98 - Pitchin' Chuck 
                      dw VolcanoLotus                     ;;----|86FE/----\----; 99 - Volcano Lotus 
                      dw SumoBrother                      ;;----|8700/----\----; 9A - Sumo Brother 
                      dw HammerBrother                    ;;----|8702/----\----; 9B - Hammer Brother 
                      dw FlyingPlatform                   ;;----|8704/----\----; 9C - Flying blocks for Hammer Brother 
                      dw BubbleWithSprite                 ;;----|8706/----\----; 9D - Bubble with sprite 
                      dw BanzaiBnCGrayPlat                ;;----|8708/----\----; 9E - Ball and Chain 
                      dw BanzaiBnCGrayPlat                ;;----|870A/----\----; 9F - Banzai Bill 
                      dw Bank3SprHandler                  ;;----|870C/----\----; A0 - Activates Bowser scene 
                      dw Bank3SprHandler                  ;;----|870E/----\----; A1 - Bowser's bowling ball 
                      dw Bank3SprHandler                  ;;----|8710/----\----; A2 - MechaKoopa 
                      dw BanzaiBnCGrayPlat                ;;----|8712/----\----; A3 - Grey platform on chain 
                      dw FloatingSpikeBall                ;;----|8714/----\----; A4 - Floating Spike ball 
                      dw WallFollowers                    ;;----|8716/----\----; A5 - Fuzzball/Sparky, ground-guided 
                      dw WallFollowers                    ;;----|8718/----\----; A6 - HotHead, ground-guided 
                      dw IggysBall                        ;;----|871A/----\----; A7 - Iggy's ball 
                      dw Bank3SprHandler                  ;;----|871C/----\----; A8 - Blargg 
                      dw Bank3SprHandler                  ;;----|871E/----\----; A9 - Reznor 
                      dw Bank3SprHandler                  ;;----|8720/----\----; AA - Fishbone 
                      dw Bank3SprHandler                  ;;----|8722/----\----; AB - Rex 
                      dw Bank3SprHandler                  ;;----|8724/----\----; AC - Wooden Spike, moving down and up 
                      dw Bank3SprHandler                  ;;----|8726/----\----; AD - Wooden Spike, moving up/down first 
                      dw Bank3SprHandler                  ;;----|8728/----\----; AE - Fishin' Boo 
                      dw Boo_BooBlock                     ;;----|872A/----\----; AF - Boo Block 
                      dw Bank3SprHandler                  ;;----|872C/----\----; B0 - Reflecting stream of Boo Buddies 
                      dw Bank3SprHandler                  ;;----|872E/----\----; B1 - Creating/Eating block 
                      dw Bank3SprHandler                  ;;----|8730/----\----; B2 - Falling Spike 
                      dw Bank3SprHandler                  ;;----|8732/----\----; B3 - Bowser statue fireball 
                      dw Grinder                          ;;----|8734/----\----; B4 - Grinder, non-line-guided 
                      dw Fireballs                        ;;----|8736/----\----; B5 - Sinking fireball used in boss battles 
                      dw Bank3SprHandler                  ;;----|8738/----\----; B6 - Reflecting fireball 
                      dw Bank3SprHandler                  ;;----|873A/----\----; B7 - Carrot Top lift, upper right 
                      dw Bank3SprHandler                  ;;----|873C/----\----; B8 - Carrot Top lift, upper left 
                      dw Bank3SprHandler                  ;;----|873E/----\----; B9 - Info Box 
                      dw Bank3SprHandler                  ;;----|8740/----\----; BA - Timed lift 
                      dw Bank3SprHandler                  ;;----|8742/----\----; BB - Grey moving castle block 
                      dw Bank3SprHandler                  ;;----|8744/----\----; BC - Bowser statue 
                      dw Bank3SprHandler                  ;;----|8746/----\----; BD - Sliding Koopa without a shell 
                      dw Bank3SprHandler                  ;;----|8748/----\----; BE - Swooper bat 
                      dw Bank3SprHandler                  ;;----|874A/----\----; BF - Mega Mole 
                      dw Bank3SprHandler                  ;;----|874C/----\----; C0 - Grey platform on lava 
                      dw Bank3SprHandler                  ;;----|874E/----\----; C1 - Flying grey turnblocks 
                      dw Bank3SprHandler                  ;;----|8750/----\----; C2 - Blurp fish 
                      dw Bank3SprHandler                  ;;----|8752/----\----; C3 - Porcu-Puffer fish 
                      dw Bank3SprHandler                  ;;----|8754/----\----; C4 - Grey platform that falls 
                      dw Bank3SprHandler                  ;;----|8756/----\----; C5 - Big Boo Boss 
                      dw Bank3SprHandler                  ;;----|8758/----\----; C6 - Dark room with spot light 
                      dw Bank3SprHandler                  ;;----|875A/----\----; C7 - Invisible mushroom 
                      dw Bank3SprHandler                  ;;----|875C/----\----; C8 - Light switch block for dark room 
                                                          ;;                   ;
InvisSolid_Dinos:     JSL InvisBlk_DinosMain              ;;----|875E/----\----;
                      RTS                                 ;;----|8762/----\----; Return 
                                                          ;;                   ;
GoalSphere:           JSR SubSprGfx2Entry1                ;;----|8763/----\----;
                      LDA.B !SpriteLock                   ;;----|8766/----\----; \ Branch if sprites locked 
                      BNE +                               ;;----|8768/----\----; / 
                      LDA.B !TrueFrame                    ;;----|876A/----\----;
                      AND.B #$1F                          ;;----|876C/----\----;
                      ORA.B !SpriteLock                   ;;----|876E/----\----;
                      JSR CODE_01B152                     ;;----|8770/----\----;
                      JSR MarioSprInteractRt              ;;----|8773/----\----;
                      BCC +                               ;;----|8776/----\----;
                      STZ.W !SpriteStatus,X               ;;----|8778/----\----;
                      LDA.B #$FF                          ;;----|877B/----\----;
                      STA.W !EndLevelTimer                ;;----|877D/----\----;
                      STA.W !MusicBackup                  ;;----|8780/----\----;
                      LDA.B #$0B                          ;;----|8783/----\----;
                      STA.W !SPCIO2                       ;;----|8785/----\----; / Change music 
                    + RTS                                 ;;----|8788/----\----; Return 
                                                          ;;                   ;
InitReznor:           JSL ReznorInit                      ;;----|8789/----\----;
                      RTS                                 ;;----|878D/----\----; Return 
                                                          ;;                   ;
Bank3SprHandler:      JSL Bnk3CallSprMain                 ;;----|878E/----\----;
                      RTS                                 ;;----|8792/----\----; Return 
                                                          ;;                   ;
BanzaiBnCGrayPlat:    JSL Banzai_Rotating                 ;;----|8793/----\----;
                      RTS                                 ;;----|8797/----\----; Return 
                                                          ;;                   ;
BubbleWithSprite:     JSL BubbleSpriteMain                ;;----|8798/----\----;
                      RTS                                 ;;----|879C/----\----; Return 
                                                          ;;                   ;
HammerBrother:        JSL HammerBrotherMain               ;;----|879D/----\----;
                      RTS                                 ;;----|87A1/----\----; Return 
                                                          ;;                   ;
FlyingPlatform:       JSL FlyingPlatformMain              ;;----|87A2/----\----;
                      RTS                                 ;;----|87A6/----\----; Return 
                                                          ;;                   ;
InitHammerBrother:    JSL Return02DA59                    ;;----|87A7/----\----; Do nothing at all (Might as well be NOPs) 
                      RTS                                 ;;----|87AB/----\----; Return 
                                                          ;;                   ;
VolcanoLotus:         JSL VolcanoLotusMain                ;;----|87AC/----\----;
                      RTS                                 ;;----|87B0/----\----; Return 
                                                          ;;                   ;
SumoBrother:          JSL SumoBrotherMain                 ;;----|87B1/----\----;
                      RTS                                 ;;----|87B5/----\----; Return 
                                                          ;;                   ;
SumosLightning:       JSL SumosLightningMain              ;;----|87B6/----\----;
                      RTS                                 ;;----|87BA/----\----; Return 
                                                          ;;                   ;
JumpingPiranha:       JSL JumpingPiranhaMain              ;;----|87BB/----\----;
                      RTS                                 ;;----|87BF/----\----; Return 
                                                          ;;                   ;
GasBubble:            JSL GasBubbleMain                   ;;----|87C0/----\----;
                      RTS                                 ;;----|87C4/----\----; Return 
                                                          ;;                   ;
                      JSL SumoBrotherMain                 ;;----|87C5/----\----; Unused call to main Sumo Brother routine 
                      RTS                                 ;;----|87C9/----\----; Return 
                                                          ;;                   ;
DirectionalCoins:     JSL DirectionCoinsMain              ;;----|87CA/----\----;
                      RTS                                 ;;----|87CE/----\----; Return 
                                                          ;;                   ;
ExplodingBlock:       JSL ExplodingBlkMain                ;;----|87CF/----\----;
                      RTS                                 ;;----|87D3/----\----; Return 
                                                          ;;                   ;
ScalePlatforms:       JSL ScalePlatformMain               ;;----|87D4/----\----;
                      RTS                                 ;;----|87D8/----\----; Return 
                                                          ;;                   ;
InitFloatingSkull:    JSL FloatingSkullInit               ;;----|87D9/----\----;
                      RTS                                 ;;----|87DD/----\----; Return 
                                                          ;;                   ;
FloatingSkulls:       JSL FloatingSkullMain               ;;----|87DE/----\----;
                      RTS                                 ;;----|87E2/----\----; Return 
                                                          ;;                   ;
GhostHouseExit:       JSL GhostExitMain                   ;;----|87E3/----\----;
                      RTS                                 ;;----|87E7/----\----; Return 
                                                          ;;                   ;
WarpBlocks:           JSL WarpBlocksMain                  ;;----|87E8/----\----;
                      RTS                                 ;;----|87EC/----\----; Return 
                                                          ;;                   ;
Pokey:                JSL PokeyMain                       ;;----|87ED/----\----;
                      RTS                                 ;;----|87F1/----\----; Return 
                                                          ;;                   ;
RedSuperKoopa:        JSL SuperKoopaMain                  ;;----|87F2/----\----;
                      RTS                                 ;;----|87F6/----\----; Return 
                                                          ;;                   ;
YellowSuperKoopa:     JSL SuperKoopaMain                  ;;----|87F7/----\----;
                      RTS                                 ;;----|87FB/----\----; Return 
                                                          ;;                   ;
FeatherSuperKoopa:    JSL SuperKoopaMain                  ;;----|87FC/----\----;
                      RTS                                 ;;----|8800/----\----; Return 
                                                          ;;                   ;
PipeLakitu:           JSL PipeLakituMain                  ;;----|8801/----\----;
                      RTS                                 ;;----|8805/----\----; Return 
                                                          ;;                   ;
DigginChuck:          JSL ChucksMain                      ;;----|8806/----\----;
                      RTS                                 ;;----|880A/----\----; Return 
                                                          ;;                   ;
SwimJumpFish:         JSL SwimJumpFishMain                ;;----|880B/----\----;
                      RTS                                 ;;----|880F/----\----; Return 
                                                          ;;                   ;
DigginChucksRock:     JSL ChucksRockMain                  ;;----|8810/----\----;
                      RTS                                 ;;----|8814/----\----; Return 
                                                          ;;                   ;
GrowingPipe:          JSL GrowingPipeMain                 ;;----|8815/----\----;
                      RTS                                 ;;----|8819/----\----; Return 
                                                          ;;                   ;
YoshisHouseBirds:     JSL BirdsMain                       ;;----|881A/----\----;
                      RTS                                 ;;----|881E/----\----; Return 
                                                          ;;                   ;
YoshisHouseSmoke:     JSL SmokeMain                       ;;----|881F/----\----;
                      RTS                                 ;;----|8823/----\----; Return 
                                                          ;;                   ;
SideExit:             JSL SideExitMain                    ;;----|8824/----\----;
                      RTS                                 ;;----|8828/----\----; Return 
                                                          ;;                   ;
InitWiggler:          JSL WigglerInit                     ;;----|8829/----\----;
                      RTS                                 ;;----|882D/----\----; Return 
                                                          ;;                   ;
Wiggler:              JSL WigglerMain                     ;;----|882E/----\----;
                      RTS                                 ;;----|8832/----\----; Return 
                                                          ;;                   ;
CoinCloud:            JSL CoinCloudMain                   ;;----|8833/----\----;
                      RTS                                 ;;----|8837/----\----; Return 
                                                          ;;                   ;
TorpedoTed:           JSL TorpedoTedMain                  ;;----|8838/----\----;
                      RTS                                 ;;----|883C/----\----; Return 
                                                          ;;                   ;
Layer3Smash:          PHB                                 ;;----|883D/----\----;
                      LDA.B #$02                          ;;----|883E/----\----;
                      PHA                                 ;;----|8840/----\----;
                      PLB                                 ;;----|8841/----\----;
                      JSL Layer3SmashMain                 ;;----|8842/----\----;
                      PLB                                 ;;----|8846/----\----;
                      RTS                                 ;;----|8847/----\----; Return 
                                                          ;;                   ;
PeaBouncer:           PHB                                 ;;----|8848/----\----;
                      LDA.B #$02                          ;;----|8849/----\----;
                      PHA                                 ;;----|884B/----\----;
                      PLB                                 ;;----|884C/----\----;
                      JSL PeaBouncerMain                  ;;----|884D/----\----;
                      PLB                                 ;;----|8851/----\----;
                      RTS                                 ;;----|8852/----\----; Return 
                                                          ;;                   ;
RipVanFish:           PHB                                 ;;----|8853/----\----;
                      LDA.B #$02                          ;;----|8854/----\----;
                      PHA                                 ;;----|8856/----\----;
                      PLB                                 ;;----|8857/----\----;
                      JSL RipVanFishMain                  ;;----|8858/----\----;
                      PLB                                 ;;----|885C/----\----;
                      RTS                                 ;;----|885D/----\----; Return 
                                                          ;;                   ;
WallFollowers:        PHB                                 ;;----|885E/----\----;
                      LDA.B #$02                          ;;----|885F/----\----;
                      PHA                                 ;;----|8861/----\----;
                      PLB                                 ;;----|8862/----\----;
                      JSL WallFollowersMain               ;;----|8863/----\----;
                      PLB                                 ;;----|8867/----\----;
                      RTS                                 ;;----|8868/----\----; Return 
                                                          ;;                   ;
Return018869:         RTS                                 ;;----|8869/----\----;
                                                          ;;                   ;
Chucks:               JSL ChucksMain                      ;;----|886A/----\----;
                      RTS                                 ;;----|886E/----\----; Return 
                                                          ;;                   ;
InitWingedCage:       PHB                                 ;;----|886F/----\----; \ Do nothing at all 
                      LDA.B #$02                          ;;----|8870/----\----;  | (Might as well be NOPs) 
                      PHA                                 ;;----|8872/----\----;  | 
                      PLB                                 ;;----|8873/----\----;  | 
                      JSL Return02CBFD                    ;;----|8874/----\----;  | 
                      PLB                                 ;;----|8878/----\----; / 
                      RTS                                 ;;----|8879/----\----; Return 
                                                          ;;                   ;
WingedCage:           PHB                                 ;;----|887A/----\----;
                      LDA.B #$02                          ;;----|887B/----\----;
                      PHA                                 ;;----|887D/----\----;
                      PLB                                 ;;----|887E/----\----;
                      JSL WingedCageMain                  ;;----|887F/----\----;
                      PLB                                 ;;----|8883/----\----;
                      RTS                                 ;;----|8884/----\----; Return 
                                                          ;;                   ;
Dolphin:              PHB                                 ;;----|8885/----\----;
                      LDA.B #$02                          ;;----|8886/----\----;
                      PHA                                 ;;----|8888/----\----;
                      PLB                                 ;;----|8889/----\----;
                      JSL DolphinMain                     ;;----|888A/----\----;
                      PLB                                 ;;----|888E/----\----;
                      RTS                                 ;;----|888F/----\----; Return 
                                                          ;;                   ;
InitMovingLedge:      DEC.B !SpriteYPosLow,X              ;;----|8890/----\----;
                      RTS                                 ;;----|8892/----\----; Return 
                                                          ;;                   ;
MovingLedge:          JSL MovingLedgeMain                 ;;----|8893/----\----;
                      RTS                                 ;;----|8897/----\----; Return 
                                                          ;;                   ;
JumpOverShells:       TXA                                 ;;----|8898/----\----; \ Process every 4 frames 
                      EOR.B !TrueFrame                    ;;----|8899/----\----;  | 
                      AND.B #$03                          ;;----|889B/----\----;  | 
                      BNE Return0188AB                    ;;----|889D/----\----; / 
                      LDY.B #$09                          ;;----|889F/----\----; \ Loop over sprites: 
JumpLoopStart:        LDA.W !SpriteStatus,Y               ;;----|88A1/----\----;  | 
                      CMP.B #$0A                          ;;----|88A4/----\----;  | If sprite status = kicked, try to jump it 
                      BEQ HandleJumpOver                  ;;----|88A6/----\----;  | 
JumpLoopNext:         DEY                                 ;;----|88A8/----\----;  | 
                      BPL JumpLoopStart                   ;;----|88A9/----\----; / 
Return0188AB:         RTS                                 ;;----|88AB/----\----; Return 
                                                          ;;                   ;
HandleJumpOver:       LDA.W !SpriteXPosLow,Y              ;;----|88AC/----\----;
                      SEC                                 ;;----|88AF/----\----;
                      SBC.B #$1A                          ;;----|88B0/----\----;
                      STA.B !_0                           ;;----|88B2/----\----;
                      LDA.W !SpriteYPosHigh,Y             ;;----|88B4/----\----;
                      SBC.B #$00                          ;;----|88B7/----\----;
                      STA.B !_8                           ;;----|88B9/----\----;
                      LDA.B #$44                          ;;----|88BB/----\----;
                      STA.B !_2                           ;;----|88BD/----\----;
                      LDA.W !SpriteYPosLow,Y              ;;----|88BF/----\----;
                      STA.B !_1                           ;;----|88C2/----\----;
                      LDA.W !SpriteXPosHigh,Y             ;;----|88C4/----\----;
                      STA.B !_9                           ;;----|88C7/----\----;
                      LDA.B #$10                          ;;----|88C9/----\----;
                      STA.B !_3                           ;;----|88CB/----\----;
                      JSL GetSpriteClippingA              ;;----|88CD/----\----;
                      JSL CheckForContact                 ;;----|88D1/----\----;
                      BCC JumpLoopNext                    ;;----|88D5/----\----; If not close to shell, go back to main loop 
                      JSR IsOnGround                      ;;----|88D7/----\----; \ If sprite not on ground, go back to main loop 
                      BEQ JumpLoopNext                    ;;----|88DA/----\----; / 
                      LDA.W !SpriteMisc157C,Y             ;;----|88DC/----\----; \ If sprite not facing shell, don't jump 
                      CMP.W !SpriteMisc157C,X             ;;----|88DF/----\----;  | 
                      BEQ +                               ;;----|88E2/----\----; / 
                      LDA.B #$C0                          ;;----|88E4/----\----; \ Finally set jump speed 
                      STA.B !SpriteYSpeed,X               ;;----|88E6/----\----; / 
                      STZ.W !SpriteMisc163E,X             ;;----|88E8/----\----;
                    + RTS                                 ;;----|88EB/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
Spr0to13SpeedX:       db $08,$F8,$0C,$F4                  ;;----|88EC/----\----;
                                                          ;;                   ;
Spr0to13Prop:         db $00,$02,$03,$0D,$40,$42,$43,$45  ;;----|88F0/----\----;
                      db $50,$50,$50,$5C,$DD,$05,$00,$20  ;;----|88F8/----\----;
                      db $20,$00,$00,$00                  ;;----|8900/----\----;
                                                          ;;                   ;
ShellessKoopas:       LDA.B !SpriteLock                   ;;----|8904/----\----; \ If sprites aren't locked, 
                      BEQ CODE_018952                     ;;----|8906/----\----; / branch to $8952 
CODE_018908:          LDA.W !SpriteMisc163E,X             ;;----|8908/----\----;COME BACK HERE ON NOT STATIONARY BRANCH             
                      CMP.B #$80                          ;;----|890B/----\----;
                      BCC +                               ;;----|890D/----\----;
                      LDA.B !SpriteLock                   ;;----|890F/----\----; \ If sprites are locked, 
                      BNE +                               ;;----|8911/----\----; / branch to $891F 
CODE_018913:          JSR SetAnimationFrame               ;;----|8913/----\----;
                      LDA.W !SpriteMisc1602,X             ;;----|8916/----\----; \  
                      CLC                                 ;;----|8919/----\----;  |Increase sprite's image by x05 
                      ADC.B #$05                          ;;----|891A/----\----;  | 
                      STA.W !SpriteMisc1602,X             ;;----|891C/----\----; /  
                    + JSR CODE_018931                     ;;----|891F/----\----;
                      JSR SubUpdateSprPos                 ;;----|8922/----\----;
                      STZ.B !SpriteXSpeed,X               ;;----|8925/----\----; Sprite X Speed = 0 
                      JSR IsOnGround                      ;;----|8927/----\----; \ If sprite is on edge (on ground), 
                      BEQ +                               ;;----|892A/----\----;  |Sprite Y Speed = 0 
                      STZ.B !SpriteYSpeed,X               ;;----|892C/----\----; /  
                    + JMP CODE_018B03                     ;;----|892E/----\----;
                                                          ;;                   ;
CODE_018931:          LDA.B !SpriteNumber,X               ;;----|8931/----\----; \  
                      CMP.B #$02                          ;;----|8933/----\----;  |If sprite isn't Blue shelless Koopa, 
                      BNE CODE_01893C                     ;;----|8935/----\----; / branch to $893C 
                      JSR MarioSprInteractRt              ;;----|8937/----\----;
                      BRA Return018951                    ;;----|893A/----\----;
                                                          ;;                   ;
CODE_01893C:          ASL.W !SpriteTweakerD,X             ;;----|893C/----\----;
                      SEC                                 ;;----|893F/----\----;
                      ROR.W !SpriteTweakerD,X             ;;----|8940/----\----;
                      JSR MarioSprInteractRt              ;;----|8943/----\----;
                      BCC +                               ;;----|8946/----\----;
                      JSR CODE_01B12A                     ;;----|8948/----\----;
                    + ASL.W !SpriteTweakerD,X             ;;----|894B/----\----;
                      LSR.W !SpriteTweakerD,X             ;;----|894E/----\----;
Return018951:         RTS                                 ;;----|8951/----\----; Return 
                                                          ;;                   ;
CODE_018952:          LDA.W !SpriteMisc163E,X             ;;----|8952/----\----;CODE RUNA T START?        
                      BEQ CODE_0189B4                     ;;----|8955/----\----;SKIP IF $163E IS ZERO FOR SPRITE.  IS KICKING SHELL TIMER / GENREAL TIME          
                      CMP.B #$80                          ;;----|8957/----\----;
                      BNE CODE_01896B                     ;;----|8959/----\----;
                      JSR FaceMario                       ;;----|895B/----\----;
                      LDA.B !SpriteNumber,X               ;;----|895E/----\----; \  
                      CMP.B #$02                          ;;----|8960/----\----;  |If sprite is Blue shelless Koopa, 
                      BEQ +                               ;;----|8962/----\----;  |Set Y speed to xE0 
                      LDA.B #$E0                          ;;----|8964/----\----;  | 
                      STA.B !SpriteYSpeed,X               ;;----|8966/----\----; /  
                    + STZ.W !SpriteMisc163E,X             ;;----|8968/----\----;ZERO KICKING SHELL TIMER             
CODE_01896B:          CMP.B #$01                          ;;----|896B/----\----;
                      BNE CODE_018908                     ;;----|896D/----\----;
                      LDY.W !SpriteMisc160E,X             ;;----|896F/----\----;IT KICKS THIS? !@#             
                      LDA.W !SpriteStatus,Y               ;;----|8972/----\----;
                      CMP.B #$09                          ;;----|8975/----\----;IF NOT STATIONARY, BRANCH                
                      BNE CODE_018908                     ;;----|8977/----\----;
                      LDA.B !SpriteXPosLow,X              ;;----|8979/----\----;KOOPA BLUE KICK SHELL!       
                      SEC                                 ;;----|897B/----\----;
                      SBC.W !SpriteXPosLow,Y              ;;----|897C/----\----;
                      CLC                                 ;;----|897F/----\----;
                      ADC.B #$12                          ;;----|8980/----\----;
                      CMP.B #$24                          ;;----|8982/----\----;
                      BCS CODE_018908                     ;;----|8984/----\----;
                      JSR PlayKickSfx                     ;;----|8986/----\----;
                      JSR CODE_01A755                     ;;----|8989/----\----;
                      LDY.W !SpriteMisc157C,X             ;;----|898C/----\----;
                      LDA.W DATA_01A6D7,Y                 ;;----|898F/----\----;
                      LDY.W !SpriteMisc160E,X             ;;----|8992/----\----;
                      STA.W !SpriteXSpeed,Y               ;;----|8995/----\----;
                      LDA.B #$0A                          ;;----|8998/----\----; \ Sprite status = Kicked 
                      STA.W !SpriteStatus,Y               ;;----|899A/----\----; / 
                      LDA.W !SpriteMisc1540,Y             ;;----|899D/----\----;
                      STA.W !SpriteTableC2,Y              ;;----|89A0/----\----;
                      LDA.B #$08                          ;;----|89A3/----\----;
                      STA.W !SpriteMisc1564,Y             ;;----|89A5/----\----;
                      LDA.W !SpriteTweakerD,Y             ;;----|89A8/----\----;
                      AND.B #$10                          ;;----|89AB/----\----;
                      BEQ CODE_0189B4                     ;;----|89AD/----\----;
                      LDA.B #$E0                          ;;----|89AF/----\----;
                      STA.W !SpriteYSpeed,Y               ;;----|89B1/----\----;
CODE_0189B4:          LDA.W !SpriteMisc1528,X             ;;----|89B4/----\----;
                      BEQ CODE_018A15                     ;;----|89B7/----\----;
                      JSR IsTouchingObjSide               ;;----|89B9/----\----;
                      BEQ +                               ;;----|89BC/----\----;
                      STZ.B !SpriteXSpeed,X               ;;----|89BE/----\----; Sprite X Speed = 0 
                    + JSR IsOnGround                      ;;----|89C0/----\----;
                      BEQ CODE_0189E6                     ;;----|89C3/----\----;
                      LDA.B !LevelIsSlippery              ;;----|89C5/----\----;
                      CMP.B #$01                          ;;----|89C7/----\----;
                      LDA.B #$02                          ;;----|89C9/----\----;
                      BCC +                               ;;----|89CB/----\----;
                      LSR A                               ;;----|89CD/----\----;
                    + STA.B !_0                           ;;----|89CE/----\----;
                      LDA.B !SpriteXSpeed,X               ;;----|89D0/----\----;
                      CMP.B #$02                          ;;----|89D2/----\----;
                      BCC CODE_0189FD                     ;;----|89D4/----\----;
                      BPL +                               ;;----|89D6/----\----;
                      CLC                                 ;;----|89D8/----\----;
                      ADC.B !_0                           ;;----|89D9/----\----;
                      CLC                                 ;;----|89DB/----\----;
                      ADC.B !_0                           ;;----|89DC/----\----;
                    + SEC                                 ;;----|89DE/----\----;
                      SBC.B !_0                           ;;----|89DF/----\----;
                      STA.B !SpriteXSpeed,X               ;;----|89E1/----\----;
                      JSR CODE_01804E                     ;;----|89E3/----\----;
CODE_0189E6:          STZ.W !SpriteMisc1570,X             ;;----|89E6/----\----;
                      JSR CODE_018B43                     ;;----|89E9/----\----;
                      LDA.B #$E6                          ;;----|89EC/----\----;
                      LDY.B !SpriteNumber,X               ;;----|89EE/----\----; \ Branch if Blue shelless
                      CPY.B #$02                          ;;----|89F0/----\----;  |
                      BEQ +                               ;;----|89F2/----\----; /
                      LDA.B #$86                          ;;----|89F4/----\----;
                    + LDY.W !SpriteOAMIndex,X             ;;----|89F6/----\----; Y = Index into sprite OAM 
                      STA.W !OAMTileNo+$100,Y             ;;----|89F9/----\----;
                      RTS                                 ;;----|89FC/----\----; Return 
                                                          ;;                   ;
CODE_0189FD:          JSR IsOnGround                      ;;----|89FD/----\----;KOOPA CODE         
                      BEQ CODE_018A0F                     ;;----|8A00/----\----;
                      LDA.B #$FF                          ;;----|8A02/----\----;
                      LDY.B !SpriteNumber,X               ;;----|8A04/----\----;
                      CPY.B #$02                          ;;----|8A06/----\----;
                      BNE +                               ;;----|8A08/----\----;
                      LDA.B #$A0                          ;;----|8A0A/----\----;
                    + STA.W !SpriteMisc163E,X             ;;----|8A0C/----\----;
CODE_018A0F:          STZ.W !SpriteMisc1528,X             ;;----|8A0F/----\----;
                      JMP CODE_018913                     ;;----|8A12/----\----;
                                                          ;;                   ;
CODE_018A15:          LDA.W !SpriteMisc1534,X             ;;----|8A15/----\----;
                      BEQ CODE_018A88                     ;;----|8A18/----\----;
                      LDY.W !SpriteMisc160E,X             ;;----|8A1A/----\----;
                      LDA.W !SpriteStatus,Y               ;;----|8A1D/----\----;
                      CMP.B #$0A                          ;;----|8A20/----\----;
                      BEQ CODE_018A29                     ;;----|8A22/----\----;
                      STZ.W !SpriteMisc1534,X             ;;----|8A24/----\----;
                      BRA CODE_018A62                     ;;----|8A27/----\----;
                                                          ;;                   ;
CODE_018A29:          STA.W !SpriteMisc1528,Y             ;;----|8A29/----\----;
                      JSR IsTouchingObjSide               ;;----|8A2C/----\----;
                      BEQ +                               ;;----|8A2F/----\----;
                      LDA.B #$00                          ;;----|8A31/----\----;
                      STA.W !SpriteXSpeed,Y               ;;----|8A33/----\----;
                      STA.B !SpriteXSpeed,X               ;;----|8A36/----\----;
                    + JSR IsOnGround                      ;;----|8A38/----\----;
                      BEQ CODE_018A62                     ;;----|8A3B/----\----;
                      LDA.B !LevelIsSlippery              ;;----|8A3D/----\----;
                      CMP.B #$01                          ;;----|8A3F/----\----;
                      LDA.B #$02                          ;;----|8A41/----\----;
                      BCC +                               ;;----|8A43/----\----;
                      LSR A                               ;;----|8A45/----\----;
                    + STA.B !_0                           ;;----|8A46/----\----;
                      LDA.W !SpriteXSpeed,Y               ;;----|8A48/----\----;
                      CMP.B #$02                          ;;----|8A4B/----\----;
                      BCC CODE_018A69                     ;;----|8A4D/----\----;
                      BPL +                               ;;----|8A4F/----\----;
                      CLC                                 ;;----|8A51/----\----;
                      ADC.B !_0                           ;;----|8A52/----\----;
                      CLC                                 ;;----|8A54/----\----;
                      ADC.B !_0                           ;;----|8A55/----\----;
                    + SEC                                 ;;----|8A57/----\----;
                      SBC.B !_0                           ;;----|8A58/----\----;
                      STA.W !SpriteXSpeed,Y               ;;----|8A5A/----\----;
                      STA.B !SpriteXSpeed,X               ;;----|8A5D/----\----;
                      JSR CODE_01804E                     ;;----|8A5F/----\----;
CODE_018A62:          STZ.W !SpriteMisc1570,X             ;;----|8A62/----\----;
                      JSR CODE_018B43                     ;;----|8A65/----\----;
                      RTS                                 ;;----|8A68/----\----; Return 
                                                          ;;                   ;
CODE_018A69:          LDA.B #$00                          ;;----|8A69/----\----;
                      STA.B !SpriteXSpeed,X               ;;----|8A6B/----\----;
                      STA.W !SpriteXSpeed,Y               ;;----|8A6D/----\----;
                      STZ.W !SpriteMisc1534,X             ;;----|8A70/----\----;
                      LDA.B #$09                          ;;----|8A73/----\----; \ Sprite status = Carryable 
                      STA.W !SpriteStatus,Y               ;;----|8A75/----\----; / 
                      PHX                                 ;;----|8A78/----\----;
                      TYX                                 ;;----|8A79/----\----;
                      JSR CODE_01AA0B                     ;;----|8A7A/----\----;
                      LDA.W !SpriteMisc1540,X             ;;----|8A7D/----\----;
                      BEQ +                               ;;----|8A80/----\----;
                      LDA.B #$FF                          ;;----|8A82/----\----;
                      STA.W !SpriteMisc1540,X             ;;----|8A84/----\----;
                    + PLX                                 ;;----|8A87/----\----;
CODE_018A88:          LDA.B !SpriteTableC2,X              ;;----|8A88/----\----;
                      BEQ CODE_018A9B                     ;;----|8A8A/----\----;
                      DEC.B !SpriteTableC2,X              ;;----|8A8C/----\----;
                      CMP.B #$08                          ;;----|8A8E/----\----;
                      LDA.B #$04                          ;;----|8A90/----\----;
                      BCS +                               ;;----|8A92/----\----;
                      LDA.B #$00                          ;;----|8A94/----\----;
                    + STA.W !SpriteMisc1602,X             ;;----|8A96/----\----;
                      BRA CODE_018B00                     ;;----|8A99/----\----;
                                                          ;;                   ;
CODE_018A9B:          LDA.W !SpriteMisc1558,X             ;;----|8A9B/----\----;
                      CMP.B #$01                          ;;----|8A9E/----\----;
                      BNE Spr0to13Main                    ;;----|8AA0/----\----;
                      LDY.W !SpriteMisc1594,X             ;;----|8AA2/----\----;SHELL TO INTERACT WITH???             
                      LDA.W !SpriteStatus,Y               ;;----|8AA5/----\----;
                      CMP.B #$08                          ;;----|8AA8/----\----;
                      BCC +                               ;;----|8AAA/----\----;
                      LDA.W !SpriteYSpeed,Y               ;;----|8AAC/----\----;
                      BMI +                               ;;----|8AAF/----\----;
                      LDA.W !SpriteNumber,Y               ;;----|8AB1/----\----; \ Return if Coin sprite
                      CMP.B #$21                          ;;----|8AB4/----\----;  |
                      BEQ +                               ;;----|8AB6/----\----; /
                      JSL GetSpriteClippingA              ;;----|8AB8/----\----;
                      PHX                                 ;;----|8ABC/----\----;
                      TYX                                 ;;----|8ABD/----\----;
                      JSL GetSpriteClippingB              ;;----|8ABE/----\----;
                      PLX                                 ;;----|8AC2/----\----;
                      JSL CheckForContact                 ;;----|8AC3/----\----;
                      BCC +                               ;;----|8AC7/----\----;
                      JSR OffScrEraseSprite               ;;----|8AC9/----\----;
                      LDY.W !SpriteMisc1594,X             ;;----|8ACC/----\----;
                      LDA.B #$10                          ;;----|8ACF/----\----;
                      STA.W !SpriteMisc1558,Y             ;;----|8AD1/----\----;
                      LDA.B !SpriteNumber,X               ;;----|8AD4/----\----;
                      STA.W !SpriteMisc160E,Y             ;;----|8AD6/----\----;SPRITE NUMBER TO DEAL WITH ?            
                    + RTS                                 ;;----|8AD9/----\----; Return 
                                                          ;;                   ;
                    - PHB                                 ;;----|8ADA/----\----; \ Change Bob-omb into explosion 
                      LDA.B #$02                          ;;----|8ADB/----\----;  | 
                      PHA                                 ;;----|8ADD/----\----;  | 
                      PLB                                 ;;----|8ADE/----\----;  | 
                      JSL ExplodeBombRt                   ;;----|8ADF/----\----;  | 
                      PLB                                 ;;----|8AE3/----\----;  | 
                      RTS                                 ;;----|8AE4/----\----; / 
                                                          ;;                   ;
Bobomb:               LDA.W !SpriteMisc1534,X             ;;----|8AE5/----\----; \ Branch if exploding 
                      BNE -                               ;;----|8AE8/----\----; / 
                      LDA.W !SpriteMisc1540,X             ;;----|8AEA/----\----; \ Branch if not set to explode 
                      BNE Spr0to13Start                   ;;----|8AED/----\----; / 
                      LDA.B #$09                          ;;----|8AEF/----\----; \ Sprite status = Stunned 
                      STA.W !SpriteStatus,X               ;;----|8AF1/----\----; / 
                      LDA.B #$40                          ;;----|8AF4/----\----; \ Time until explosion = #$40 
                      STA.W !SpriteMisc1540,X             ;;----|8AF6/----\----; / 
                      JMP SubSprGfx2Entry1                ;;----|8AF9/----\----; Draw sprite 
                                                          ;;                   ;
Spr0to13Start:        LDA.B !SpriteLock                   ;;----|8AFC/----\----; \ If sprites locked... 
                      BEQ Spr0to13Main                    ;;----|8AFE/----\----;  | 
CODE_018B00:          JSR MarioSprInteractRt              ;;----|8B00/----\----;  | ...interact with Mario 
CODE_018B03:          JSR SubSprSprInteract               ;;----|8B03/----\----;  | ...interact with sprites 
                      JSR Spr0to13Gfx                     ;;----|8B06/----\----;  | ...draw sprite 
                      RTS                                 ;;----|8B09/----\----; / Return 
                                                          ;;                   ;
Spr0to13Main:         JSR IsOnGround                      ;;----|8B0A/----\----; \ If sprite on ground... 
                      BEQ CODE_018B2E                     ;;----|8B0D/----\----;  | 
                      LDY.B !SpriteNumber,X               ;;----|8B0F/----\----;  | 
                      LDA.W Spr0to13Prop,Y                ;;----|8B11/----\----;  | Set sprite X speed 
                      LSR A                               ;;----|8B14/----\----;  | 
                      LDY.W !SpriteMisc157C,X             ;;----|8B15/----\----;  | 
                      BCC +                               ;;----|8B18/----\----;  | 
                      INY                                 ;;----|8B1A/----\----;  | Increase index if sprite set to go fast 
                      INY                                 ;;----|8B1B/----\----;  | 
                    + LDA.W Spr0to13SpeedX,Y              ;;----|8B1C/----\----;  | 
                      EOR.W !SpriteSlope,X                ;;----|8B1F/----\----;  | what does $15B8,x do? 
                      ASL A                               ;;----|8B22/----\----;  | 
                      LDA.W Spr0to13SpeedX,Y              ;;----|8B23/----\----;  | 
                      BCC +                               ;;----|8B26/----\----;  | 
                      CLC                                 ;;----|8B28/----\----;  | 
                      ADC.W !SpriteSlope,X                ;;----|8B29/----\----;  | 
                    + STA.B !SpriteXSpeed,X               ;;----|8B2C/----\----; / 
CODE_018B2E:          LDY.W !SpriteMisc157C,X             ;;----|8B2E/----\----; \ If touching an object in the direction 
                      TYA                                 ;;----|8B31/----\----;  | that Mario is moving... 
                      INC A                               ;;----|8B32/----\----;  | 
                      AND.W !SpriteBlockedDirs,X          ;;----|8B33/----\----;  | 
                      AND.B #$03                          ;;----|8B36/----\----;  | 
                      BEQ +                               ;;----|8B38/----\----;  | 
                      STZ.B !SpriteXSpeed,X               ;;----|8B3A/----\----; / ...Sprite X Speed = 0 
                    + JSR IsTouchingCeiling               ;;----|8B3C/----\----; \ If touching ceiling... 
                      BEQ CODE_018B43                     ;;----|8B3F/----\----;  | 
                      STZ.B !SpriteYSpeed,X               ;;----|8B41/----\----; / ...Sprite Y Speed = 0 
CODE_018B43:          JSR SubOffscreen0Bnk1               ;;----|8B43/----\----;
                      JSR SubUpdateSprPos                 ;;----|8B46/----\----; Apply speed to position 
                      JSR SetAnimationFrame               ;;----|8B49/----\----; Set the animation frame 
                      JSR IsOnGround                      ;;----|8B4C/----\----; \ Branch if not on ground 
                      BEQ SpriteInAir                     ;;----|8B4F/----\----; / 
                      JSR SetSomeYSpeed__                 ;;----|8B51/----\----;
                      STZ.W !SpriteMisc151C,X             ;;----|8B54/----\----;
                      LDY.B !SpriteNumber,X               ;;----|8B57/----\----; \ 
                      LDA.W Spr0to13Prop,Y                ;;----|8B59/----\----;  | If follow Mario is set... 
                      PHA                                 ;;----|8B5C/----\----;  | 
                      AND.B #$04                          ;;----|8B5D/----\----;  | 
                      BEQ +                               ;;----|8B5F/----\----;  | 
                      LDA.W !SpriteMisc1570,X             ;;----|8B61/----\----;  | ...and time until turn == 0... 
                      AND.B #$7F                          ;;----|8B64/----\----;  | 
                      BNE +                               ;;----|8B66/----\----;  | 
                      LDA.W !SpriteMisc157C,X             ;;----|8B68/----\----;  | 
                      PHA                                 ;;----|8B6B/----\----;  | 
                      JSR FaceMario                       ;;----|8B6C/----\----;  | ...face Mario 
                      PLA                                 ;;----|8B6F/----\----;  | If was facing the other direction... 
                      CMP.W !SpriteMisc157C,X             ;;----|8B70/----\----;  | 
                      BEQ +                               ;;----|8B73/----\----;  | 
                      LDA.B #$08                          ;;----|8B75/----\----;  | ...set turning timer 
                      STA.W !SpriteMisc15AC,X             ;;----|8B77/----\----; / 
                    + PLA                                 ;;----|8B7A/----\----; \ If jump over shells is set call routine 
                      AND.B #$08                          ;;----|8B7B/----\----;  | 
                      BEQ +                               ;;----|8B7D/----\----;  | 
                      JSR JumpOverShells                  ;;----|8B7F/----\----;  | 
                    + BRA CODE_018BB0                     ;;----|8B82/----\----; / 
                                                          ;;                   ;
SpriteInAir:          LDY.B !SpriteNumber,X               ;;----|8B84/----\----;
                      LDA.W Spr0to13Prop,Y                ;;----|8B86/----\----; \ If flutter wings is set... 
                      BPL CODE_018B90                     ;;----|8B89/----\----;  | 
                      JSR SetAnimationFrame               ;;----|8B8B/----\----;  | ...set frame... 
                      BRA +                               ;;----|8B8E/----\----;  | ...and don't zero out $1570,x 
                                                          ;;                   ;
CODE_018B90:          STZ.W !SpriteMisc1570,X             ;;----|8B90/----\----; / 
                    + LDA.W Spr0to13Prop,Y                ;;----|8B93/----\----; \ If stay on ledges is set... 
                      AND.B #$02                          ;;----|8B96/----\----;  | 
                      BEQ CODE_018BB0                     ;;----|8B98/----\----;  | 
                      LDA.W !SpriteMisc151C,X             ;;----|8B9A/----\----;  | todo: what are all these? 
                      ORA.W !SpriteMisc1558,X             ;;----|8B9D/----\----;  | 
                      ORA.W !SpriteMisc1528,X             ;;----|8BA0/----\----;  | 
                      ORA.W !SpriteMisc1534,X             ;;----|8BA3/----\----;  | 
                      BNE CODE_018BB0                     ;;----|8BA6/----\----;  | 
                      JSR FlipSpriteDir                   ;;----|8BA8/----\----;  | ...change sprite direction 
                      LDA.B #$01                          ;;----|8BAB/----\----;  | 
                      STA.W !SpriteMisc151C,X             ;;----|8BAD/----\----; / 
CODE_018BB0:          LDA.W !SpriteMisc1528,X             ;;----|8BB0/----\----;
                      BEQ CODE_018BBA                     ;;----|8BB3/----\----;
                      JSR CODE_018931                     ;;----|8BB5/----\----;
                      BRA +                               ;;----|8BB8/----\----;
                                                          ;;                   ;
CODE_018BBA:          JSR MarioSprInteractRt              ;;----|8BBA/----\----; Interact with Mario 
                    + JSR SubSprSprInteract               ;;----|8BBD/----\----; Interact with other sprites 
                      JSR FlipIfTouchingObj               ;;----|8BC0/----\----; Change direction if touching an object 
Spr0to13Gfx:          LDA.W !SpriteMisc157C,X             ;;----|8BC3/----\----; \ Store sprite direction 
                      PHA                                 ;;----|8BC6/----\----; / 
                      LDY.W !SpriteMisc15AC,X             ;;----|8BC7/----\----; \ If turning timer is set... 
                      BEQ CODE_018BDE                     ;;----|8BCA/----\----;  | 
                      LDA.B #$02                          ;;----|8BCC/----\----;  | ...set turning image 
                      STA.W !SpriteMisc1602,X             ;;----|8BCE/----\----;  | 
                      LDA.B #$00                          ;;----|8BD1/----\----;  | 
                      CPY.B #$05                          ;;----|8BD3/----\----;  | If turning timer >= 5... 
                      BCC +                               ;;----|8BD5/----\----;  | 
                      INC A                               ;;----|8BD7/----\----;  | ...flip sprite direction (temporarily) 
                    + EOR.W !SpriteMisc157C,X             ;;----|8BD8/----\----;  | 
                      STA.W !SpriteMisc157C,X             ;;----|8BDB/----\----; / 
CODE_018BDE:          LDY.B !SpriteNumber,X               ;;----|8BDE/----\----; \ Branch if sprite is 2 tiles high 
                      LDA.W Spr0to13Prop,Y                ;;----|8BE0/----\----;  | 
                      AND.B #$40                          ;;----|8BE3/----\----;  | 
                      BNE CODE_018BEC                     ;;----|8BE5/----\----; / 
                      JSR SubSprGfx2Entry1                ;;----|8BE7/----\----; \ Draw 1 tile high sprite and return 
                      BRA +                               ;;----|8BEA/----\----; / 
                                                          ;;                   ;
CODE_018BEC:          LDA.W !SpriteMisc1602,X             ;;----|8BEC/----\----; \ Nothing? 
                      LSR A                               ;;----|8BEF/----\----; / 
                      LDA.B !SpriteYPosLow,X              ;;----|8BF0/----\----; \ Y position -= #$0F (temporarily) 
                      PHA                                 ;;----|8BF2/----\----;  | 
                      SBC.B #$0F                          ;;----|8BF3/----\----;  | 
                      STA.B !SpriteYPosLow,X              ;;----|8BF5/----\----;  | 
                      LDA.W !SpriteXPosHigh,X             ;;----|8BF7/----\----;  | 
                      PHA                                 ;;----|8BFA/----\----;  | 
                      SBC.B #$00                          ;;----|8BFB/----\----;  | 
                      STA.W !SpriteXPosHigh,X             ;;----|8BFD/----\----; / 
                      JSR SubSprGfx1                      ;;----|8C00/----\----; Draw sprite 
                      PLA                                 ;;----|8C03/----\----; \ Restore Y position 
                      STA.W !SpriteXPosHigh,X             ;;----|8C04/----\----;  | 
                      PLA                                 ;;----|8C07/----\----;  | 
                      STA.B !SpriteYPosLow,X              ;;----|8C08/----\----; / 
                      LDA.B !SpriteNumber,X               ;;----|8C0A/----\----; \ Add wings if sprite number > #$08 
                      CMP.B #$08                          ;;----|8C0C/----\----;  | 
                      BCC +                               ;;----|8C0E/----\----;  | 
                      JSR KoopaWingGfxRt                  ;;----|8C10/----\----; / 
                    + PLA                                 ;;----|8C13/----\----; \ Restore sprite direction 
                      STA.W !SpriteMisc157C,X             ;;----|8C14/----\----; / 
                      RTS                                 ;;----|8C17/----\----; Return 
                                                          ;;                   ;
SpinyEgg:             LDA.B !SpriteLock                   ;;----|8C18/----\----; \ Branch if sprites locked 
                      BNE CODE_018C44                     ;;----|8C1A/----\----; / 
                      LDA.W !SpriteStatus,X               ;;----|8C1C/----\----;
                      CMP.B #$08                          ;;----|8C1F/----\----;
                      BNE CODE_018C44                     ;;----|8C21/----\----;
                      JSR SetAnimationFrame               ;;----|8C23/----\----;
                      JSR SubUpdateSprPos                 ;;----|8C26/----\----;
                      DEC.B !SpriteYSpeed,X               ;;----|8C29/----\----;
                      JSR IsOnGround                      ;;----|8C2B/----\----;
                      BEQ +                               ;;----|8C2E/----\----;
                      LDA.B #$13                          ;;----|8C30/----\----; \ Sprite = Spiny 
                      STA.B !SpriteNumber,X               ;;----|8C32/----\----; / 
                      JSL InitSpriteTables                ;;----|8C34/----\----; Reset sprite tables 
                      JSR FaceMario                       ;;----|8C38/----\----;
                      JSR CODE_0197D5                     ;;----|8C3B/----\----;
                    + JSR FlipIfTouchingObj               ;;----|8C3E/----\----;
                      JSR SubSprSpr_MarioSpr              ;;----|8C41/----\----;
CODE_018C44:          JSR SubOffscreen0Bnk1               ;;----|8C44/----\----;
                      LDA.B #$02                          ;;----|8C47/----\----;
                      JSR SubSprGfx0Entry0                ;;----|8C49/----\----;
                      RTS                                 ;;----|8C4C/----\----; Return 
                                                          ;;                   ;
GreenParaKoopa:       LDA.B !SpriteLock                   ;;----|8C4D/----\----; \ Branch if sprites locked 
                      BNE CODE_018CB7                     ;;----|8C4F/----\----; / 
                      LDY.W !SpriteMisc157C,X             ;;----|8C51/----\----;
                      LDA.W Spr0to13SpeedX,Y              ;;----|8C54/----\----;
                      EOR.W !SpriteSlope,X                ;;----|8C57/----\----;
                      ASL A                               ;;----|8C5A/----\----;
                      LDA.W Spr0to13SpeedX,Y              ;;----|8C5B/----\----;
                      BCC +                               ;;----|8C5E/----\----;
                      CLC                                 ;;----|8C60/----\----;
                      ADC.W !SpriteSlope,X                ;;----|8C61/----\----;
                    + STA.B !SpriteXSpeed,X               ;;----|8C64/----\----;
                      TYA                                 ;;----|8C66/----\----;
                      INC A                               ;;----|8C67/----\----;
                      AND.W !SpriteBlockedDirs,X          ;;----|8C68/----\----; \ If touching object,
                      AND.B #$03                          ;;----|8C6B/----\----;  | 
                      BEQ +                               ;;----|8C6D/----\----;  | 
                      STZ.B !SpriteXSpeed,X               ;;----|8C6F/----\----; / Sprite X Speed = 0 
                    + LDA.B !SpriteNumber,X               ;;----|8C71/----\----; \ If flying left Green Koopa...
                      CMP.B #$08                          ;;----|8C73/----\----;  |
                      BNE CODE_018C8C                     ;;----|8C75/----\----;  |
                      JSR SubSprXPosNoGrvty               ;;----|8C77/----\----;  | Update X position
                      LDY.B #$FC                          ;;----|8C7A/----\----;  |
                      LDA.W !SpriteMisc1570,X             ;;----|8C7C/----\----;  | Y speed = #$FC or #$04,
                      AND.B #$20                          ;;----|8C7F/----\----;  | depending on 1570,x
                      BEQ +                               ;;----|8C81/----\----;  | 
                      LDY.B #$04                          ;;----|8C83/----\----;  |
                    + STY.B !SpriteYSpeed,X               ;;----|8C85/----\----;  |
                      JSR SubSprYPosNoGrvty               ;;----|8C87/----\----; / Update Y position
                      BRA +                               ;;----|8C8A/----\----;
                                                          ;;                   ;
CODE_018C8C:          JSR SubUpdateSprPos                 ;;----|8C8C/----\----;
                      DEC.B !SpriteYSpeed,X               ;;----|8C8F/----\----;
                    + JSR SubSprSpr_MarioSpr              ;;----|8C91/----\----;
                      JSR IsTouchingCeiling               ;;----|8C94/----\----;
                      BEQ +                               ;;----|8C97/----\----;
                      STZ.B !SpriteYSpeed,X               ;;----|8C99/----\----; Sprite Y Speed = 0 
                    + JSR IsOnGround                      ;;----|8C9B/----\----;
                      BEQ CODE_018CAE                     ;;----|8C9E/----\----;
                      JSR SetSomeYSpeed__                 ;;----|8CA0/----\----;
                      LDA.B #$D0                          ;;----|8CA3/----\----;
                      LDY.W !SpriteMisc160E,X             ;;----|8CA5/----\----;
                      BNE +                               ;;----|8CA8/----\----;
                      LDA.B #$B0                          ;;----|8CAA/----\----;
                    + STA.B !SpriteYSpeed,X               ;;----|8CAC/----\----;
CODE_018CAE:          JSR FlipIfTouchingObj               ;;----|8CAE/----\----;
                      JSR SetAnimationFrame               ;;----|8CB1/----\----;
                      JSR SubOffscreen0Bnk1               ;;----|8CB4/----\----;
CODE_018CB7:          JMP Spr0to13Gfx                     ;;----|8CB7/----\----;
                                                          ;;                   ;
                                                          ;;                   ;
DATA_018CBA:          db $FF,$01                          ;;----|8CBA/----\----;
                                                          ;;                   ;
DATA_018CBC:          db $F0,$10                          ;;----|8CBC/----\----;
                                                          ;;                   ;
RedHorzParaKoopa:     JSR SubOffscreen1Bnk1               ;;----|8CBE/----\----;
                      BRA +                               ;;----|8CC1/----\----;
                                                          ;;                   ;
RedVertParaKoopa:     JSR SubOffscreen0Bnk1               ;;----|8CC3/----\----;
                    + LDA.B !SpriteLock                   ;;----|8CC6/----\----; \ Branch if sprites locked 
                      BNE CODE_018D2A                     ;;----|8CC8/----\----; / 
                      LDA.W !SpriteMisc157C,X             ;;----|8CCA/----\----;
                      PHA                                 ;;----|8CCD/----\----;
                      JSR UpdateDirection                 ;;----|8CCE/----\----;
                      PLA                                 ;;----|8CD1/----\----;
                      CMP.W !SpriteMisc157C,X             ;;----|8CD2/----\----;
                      BEQ +                               ;;----|8CD5/----\----;
                      LDA.B #$08                          ;;----|8CD7/----\----; \ Set turning timer 
                      STA.W !SpriteMisc15AC,X             ;;----|8CD9/----\----; / 
                    + JSR SetAnimationFrame               ;;----|8CDC/----\----;
                      LDA.B !SpriteNumber,X               ;;----|8CDF/----\----;
                      CMP.B #$0A                          ;;----|8CE1/----\----;
                      BNE CODE_018CEA                     ;;----|8CE3/----\----;
                      JSR SubSprYPosNoGrvty               ;;----|8CE5/----\----;
                      BRA CODE_018CFD                     ;;----|8CE8/----\----;
                                                          ;;                   ;
CODE_018CEA:          LDY.B #$FC                          ;;----|8CEA/----\----;
                      LDA.W !SpriteMisc1570,X             ;;----|8CEC/----\----;
                      AND.B #$20                          ;;----|8CEF/----\----;
                      BEQ +                               ;;----|8CF1/----\----;
                      LDY.B #$04                          ;;----|8CF3/----\----;
                    + STY.B !SpriteYSpeed,X               ;;----|8CF5/----\----;
                      JSR SubSprYPosNoGrvty               ;;----|8CF7/----\----;
                      JSR SubSprXPosNoGrvty               ;;----|8CFA/----\----;
CODE_018CFD:          LDA.W !SpriteMisc1540,X             ;;----|8CFD/----\----;
                      BNE +                               ;;----|8D00/----\----;
                      INC.B !SpriteTableC2,X              ;;----|8D02/----\----;
                      LDA.B !SpriteTableC2,X              ;;----|8D04/----\----;
                      AND.B #$03                          ;;----|8D06/----\----;
                      BNE +                               ;;----|8D08/----\----;
                      LDA.W !SpriteMisc151C,X             ;;----|8D0A/----\----;
                      AND.B #$01                          ;;----|8D0D/----\----;
                      TAY                                 ;;----|8D0F/----\----;
                      LDA.B !SpriteXSpeed,X               ;;----|8D10/----\----;
                      CLC                                 ;;----|8D12/----\----;
                      ADC.W DATA_018CBA,Y                 ;;----|8D13/----\----;
                      STA.B !SpriteYSpeed,X               ;;----|8D16/----\----;
                      STA.B !SpriteXSpeed,X               ;;----|8D18/----\----;
                      CMP.W DATA_018CBC,Y                 ;;----|8D1A/----\----;
                      BNE +                               ;;----|8D1D/----\----;
                      INC.W !SpriteMisc151C,X             ;;----|8D1F/----\----;
                      LDA.B #$30                          ;;----|8D22/----\----;
                      STA.W !SpriteMisc1540,X             ;;----|8D24/----\----;
                    + JSR SubSprSpr_MarioSpr              ;;----|8D27/----\----;
CODE_018D2A:          JSR CODE_018CB7                     ;;----|8D2A/----\----;
                      RTS                                 ;;----|8D2D/----\----; Return 
                                                          ;;                   ;
WingedGoomba:         JSR SubOffscreen0Bnk1               ;;----|8D2E/----\----;
                      LDA.B !SpriteLock                   ;;----|8D31/----\----;
                      BEQ +                               ;;----|8D33/----\----;
                      JSR CODE_018DAC                     ;;----|8D35/----\----;
                      RTS                                 ;;----|8D38/----\----; Return 
                                                          ;;                   ;
                    + JSR CODE_018DBB                     ;;----|8D39/----\----;
                      JSR SubUpdateSprPos                 ;;----|8D3C/----\----;
                      DEC.B !SpriteYSpeed,X               ;;----|8D3F/----\----;
                      LDA.B !SpriteTableC2,X              ;;----|8D41/----\----;
                      LSR A                               ;;----|8D43/----\----;
                      LSR A                               ;;----|8D44/----\----;
                      LSR A                               ;;----|8D45/----\----;
                      AND.B #$01                          ;;----|8D46/----\----;
                      STA.W !SpriteMisc1602,X             ;;----|8D48/----\----;
                      JSR CODE_018DAC                     ;;----|8D4B/----\----;
                      INC.B !SpriteTableC2,X              ;;----|8D4E/----\----;
                      LDA.W !SpriteMisc151C,X             ;;----|8D50/----\----;
                      BNE +                               ;;----|8D53/----\----;
                      LDA.B !SpriteYSpeed,X               ;;----|8D55/----\----;
                      BPL +                               ;;----|8D57/----\----;
                      INC.W !SpriteMisc1570,X             ;;----|8D59/----\----;
                      INC.W !SpriteMisc1570,X             ;;----|8D5C/----\----;
                    + INC.W !SpriteMisc1570,X             ;;----|8D5F/----\----;
                      JSR IsTouchingCeiling               ;;----|8D62/----\----;
                      BEQ +                               ;;----|8D65/----\----;
                      STZ.B !SpriteYSpeed,X               ;;----|8D67/----\----; Sprite Y Speed = 0 
                    + JSR IsOnGround                      ;;----|8D69/----\----;
                      BEQ CODE_018DA5                     ;;----|8D6C/----\----;
                      LDA.B !SpriteTableC2,X              ;;----|8D6E/----\----;
                      AND.B #$3F                          ;;----|8D70/----\----;
                      BNE +                               ;;----|8D72/----\----;
                      JSR FaceMario                       ;;----|8D74/----\----;
                    + JSR SetSomeYSpeed__                 ;;----|8D77/----\----;
                      LDA.W !SpriteMisc151C,X             ;;----|8D7A/----\----;
                      BNE +                               ;;----|8D7D/----\----;
                      STZ.W !SpriteMisc1570,X             ;;----|8D7F/----\----;
                    + LDA.W !SpriteMisc1540,X             ;;----|8D82/----\----;
                      BNE CODE_018DA5                     ;;----|8D85/----\----;
                      INC.W !SpriteMisc151C,X             ;;----|8D87/----\----;
                      LDY.B #$F0                          ;;----|8D8A/----\----;
                      LDA.W !SpriteMisc151C,X             ;;----|8D8C/----\----;
                      CMP.B #$04                          ;;----|8D8F/----\----;
                      BNE +                               ;;----|8D91/----\----;
                      STZ.W !SpriteMisc151C,X             ;;----|8D93/----\----;
                      JSL GetRand                         ;;----|8D96/----\----;
                      AND.B #$3F                          ;;----|8D9A/----\----;
                      ORA.B #$50                          ;;----|8D9C/----\----;
                      STA.W !SpriteMisc1540,X             ;;----|8D9E/----\----;
                      LDY.B #$D0                          ;;----|8DA1/----\----;
                    + STY.B !SpriteYSpeed,X               ;;----|8DA3/----\----;
CODE_018DA5:          JSR FlipIfTouchingObj               ;;----|8DA5/----\----;
                      JSR SubSprSpr_MarioSpr              ;;----|8DA8/----\----;
                      RTS                                 ;;----|8DAB/----\----; Return 
                                                          ;;                   ;
CODE_018DAC:          JSR GoombaWingGfxRt                 ;;----|8DAC/----\----;
                      LDA.W !SpriteOAMIndex,X             ;;----|8DAF/----\----;
                      CLC                                 ;;----|8DB2/----\----;
                      ADC.B #$04                          ;;----|8DB3/----\----;
                      STA.W !SpriteOAMIndex,X             ;;----|8DB5/----\----;
                      JMP SubSprGfx2Entry1                ;;----|8DB8/----\----;
                                                          ;;                   ;
CODE_018DBB:          LDA.B #$F8                          ;;----|8DBB/----\----;
                      LDY.W !SpriteMisc157C,X             ;;----|8DBD/----\----;
                      BNE +                               ;;----|8DC0/----\----;
                      LDA.B #$08                          ;;----|8DC2/----\----;
                    + STA.B !SpriteXSpeed,X               ;;----|8DC4/----\----;
                      RTS                                 ;;----|8DC6/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
DATA_018DC7:          db $F7,$0B,$F6,$0D,$FD,$0C,$FC,$0D  ;;----|8DC7/----\----;
                      db $0B,$F5,$0A,$F3,$0B,$FC,$0C,$FB  ;;----|8DCF/----\----;
DATA_018DD7:          db $F7,$F7,$F8,$F8,$01,$01,$02,$02  ;;----|8DD7/----\----;
GoombaWingGfxProp:    db $46,$06                          ;;----|8DDF/----\----;
                                                          ;;                   ;
GoombaWingTiles:      db $C6,$C6,$5D,$5D                  ;;----|8DE1/----\----;
                                                          ;;                   ;
GoombaWingTileSize:   db $02,$02,$00,$00                  ;;----|8DE5/----\----;
                                                          ;;                   ;
GoombaWingGfxRt:      JSR GetDrawInfoBnk1                 ;;----|8DE9/----\----;
                      LDA.W !SpriteMisc1570,X             ;;----|8DEC/----\----;
                      LSR A                               ;;----|8DEF/----\----;
                      LSR A                               ;;----|8DF0/----\----;
                      AND.B #$02                          ;;----|8DF1/----\----;
                      CLC                                 ;;----|8DF3/----\----;
                      ADC.W !SpriteMisc1602,X             ;;----|8DF4/----\----;
                      STA.B !_5                           ;;----|8DF7/----\----;
                      ASL A                               ;;----|8DF9/----\----;
                      STA.B !_2                           ;;----|8DFA/----\----;
                      LDA.W !SpriteMisc157C,X             ;;----|8DFC/----\----;
                      STA.B !_4                           ;;----|8DFF/----\----;
                      LDY.W !SpriteOAMIndex,X             ;;----|8E01/----\----; Y = Index into sprite OAM 
                      PHX                                 ;;----|8E04/----\----;
                      LDX.B #$01                          ;;----|8E05/----\----;
CODE_018E07:          STX.B !_3                           ;;----|8E07/----\----;
                      TXA                                 ;;----|8E09/----\----;
                      CLC                                 ;;----|8E0A/----\----;
                      ADC.B !_2                           ;;----|8E0B/----\----;
                      PHA                                 ;;----|8E0D/----\----;
                      LDX.B !_4                           ;;----|8E0E/----\----;
                      BNE +                               ;;----|8E10/----\----;
                      CLC                                 ;;----|8E12/----\----;
                      ADC.B #$08                          ;;----|8E13/----\----;
                    + TAX                                 ;;----|8E15/----\----;
                      LDA.B !_0                           ;;----|8E16/----\----;
                      CLC                                 ;;----|8E18/----\----;
                      ADC.W DATA_018DC7,X                 ;;----|8E19/----\----;
                      STA.W !OAMTileXPos+$100,Y           ;;----|8E1C/----\----;
                      PLX                                 ;;----|8E1F/----\----;
                      LDA.B !_1                           ;;----|8E20/----\----;
                      CLC                                 ;;----|8E22/----\----;
                      ADC.W DATA_018DD7,X                 ;;----|8E23/----\----;
                      STA.W !OAMTileYPos+$100,Y           ;;----|8E26/----\----;
                      LDX.B !_5                           ;;----|8E29/----\----;
                      LDA.W GoombaWingTiles,X             ;;----|8E2B/----\----;
                      STA.W !OAMTileNo+$100,Y             ;;----|8E2E/----\----;
                      PHY                                 ;;----|8E31/----\----;
                      TYA                                 ;;----|8E32/----\----;
                      LSR A                               ;;----|8E33/----\----;
                      LSR A                               ;;----|8E34/----\----;
                      TAY                                 ;;----|8E35/----\----;
                      LDA.W GoombaWingTileSize,X          ;;----|8E36/----\----;
                      STA.W !OAMTileSize+$40,Y            ;;----|8E39/----\----;
                      PLY                                 ;;----|8E3C/----\----;
                      LDX.B !_3                           ;;----|8E3D/----\----;
                      LDA.B !_4                           ;;----|8E3F/----\----;
                      LSR A                               ;;----|8E41/----\----;
                      LDA.W GoombaWingGfxProp,X           ;;----|8E42/----\----;
                      BCS +                               ;;----|8E45/----\----;
                      EOR.B #$40                          ;;----|8E47/----\----;
                    + ORA.B !SpriteProperties             ;;----|8E49/----\----;
                      STA.W !OAMTileAttr+$100,Y           ;;----|8E4B/----\----;
                      TYA                                 ;;----|8E4E/----\----;
                      CLC                                 ;;----|8E4F/----\----;
                      ADC.B #$08                          ;;----|8E50/----\----;
                      TAY                                 ;;----|8E52/----\----;
                      DEX                                 ;;----|8E53/----\----;
                      BPL CODE_018E07                     ;;----|8E54/----\----;
                      PLX                                 ;;----|8E56/----\----;
                      LDY.B #$FF                          ;;----|8E57/----\----;
                      LDA.B #$02                          ;;----|8E59/----\----;
                      JSR FinishOAMWriteRt                ;;----|8E5B/----\----;
                      RTS                                 ;;----|8E5E/----\----; Return 
                                                          ;;                   ;
SetAnimationFrame:    INC.W !SpriteMisc1570,X             ;;----|8E5F/----\----;
                      LDA.W !SpriteMisc1570,X             ;;----|8E62/----\----; \ Change animation image every 8 cycles 
                      LSR A                               ;;----|8E65/----\----;  | 
                      LSR A                               ;;----|8E66/----\----;  | 
                      LSR A                               ;;----|8E67/----\----;  | 
                      AND.B #$01                          ;;----|8E68/----\----;  | 
                      STA.W !SpriteMisc1602,X             ;;----|8E6A/----\----; / 
                      RTS                                 ;;----|8E6D/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
PiranhaSpeed:         db $00,$F0,$00,$10                  ;;----|8E6E/----\----;
                                                          ;;                   ;
PiranTimeInState:     db $20,$30,$20,$30                  ;;----|8E72/----\----;
                                                          ;;                   ;
ClassicPiranhas:      LDA.W !SpriteMisc1594,X             ;;----|8E76/----\----; \ Don't draw the sprite if in pipe and Mario naerby 
                      BNE CODE_018E9A                     ;;----|8E79/----\----; / 
                      LDA.B !SpriteProperties             ;;----|8E7B/----\----; \ Set sprite to go behind objects 
                      PHA                                 ;;----|8E7D/----\----;  | for the graphics routine 
                      LDA.W !SpriteOnYoshiTongue,X        ;;----|8E7E/----\----;  | 
                      BNE +                               ;;----|8E81/----\----;  | 
                      LDA.B #$10                          ;;----|8E83/----\----;  | 
                      STA.B !SpriteProperties             ;;----|8E85/----\----; / 
                    + JSR SubSprGfx1                      ;;----|8E87/----\----; Draw the sprite 
                      LDY.W !SpriteOAMIndex,X             ;;----|8E8A/----\----; \ Modify the palette and page of the stem 
                      LDA.W !OAMTileAttr+$108,Y           ;;----|8E8D/----\----;  | 
                      AND.B #$F1                          ;;----|8E90/----\----;  | 
                      ORA.B #$0B                          ;;----|8E92/----\----;  | 
                      STA.W !OAMTileAttr+$108,Y           ;;----|8E94/----\----; / 
                      PLA                                 ;;----|8E97/----\----; \ Restore value of $64 
                      STA.B !SpriteProperties             ;;----|8E98/----\----; / 
CODE_018E9A:          JSR SubOffscreen0Bnk1               ;;----|8E9A/----\----;
                      LDA.B !SpriteLock                   ;;----|8E9D/----\----; \ Branch if sprites locked 
                      BNE Return018EC7                    ;;----|8E9F/----\----; / 
                      JSR SetAnimationFrame               ;;----|8EA1/----\----;
                      LDA.W !SpriteMisc1594,X             ;;----|8EA4/----\----; \ Don't don't process interactions if in pipe and Mario nearby 
                      BNE +                               ;;----|8EA7/----\----;  | 
                      JSR SubSprSpr_MarioSpr              ;;----|8EA9/----\----; / 
                    + LDA.B !SpriteTableC2,X              ;;----|8EAC/----\----; \ Y = Piranha state 
                      AND.B #$03                          ;;----|8EAE/----\----;  | 
                      TAY                                 ;;----|8EB0/----\----; / 
                      LDA.W !SpriteMisc1540,X             ;;----|8EB1/----\----; \ Change state if it's time 
                      BEQ ChangePiranhaState              ;;----|8EB4/----\----; / 
                      LDA.W PiranhaSpeed,Y                ;;----|8EB6/----\----; Load Y speed 
                      LDY.B !SpriteNumber,X               ;;----|8EB9/----\----; \ Invert speed if upside-down piranha 
                      CPY.B #$2A                          ;;----|8EBB/----\----;  | 
                      BNE +                               ;;----|8EBD/----\----;  | 
                      EOR.B #$FF                          ;;----|8EBF/----\----;  | 
                      INC A                               ;;----|8EC1/----\----; / 
                    + STA.B !SpriteYSpeed,X               ;;----|8EC2/----\----; Store Y Speed 
                      JSR SubSprYPosNoGrvty               ;;----|8EC4/----\----; Update position based on speed 
Return018EC7:         RTS                                 ;;----|8EC7/----\----; Return 
                                                          ;;                   ;
ChangePiranhaState:   LDA.B !SpriteTableC2,X              ;;----|8EC8/----\----; \ $00 = Sprite state (00 - 03) 
                      AND.B #$03                          ;;----|8ECA/----\----;  | 
                      STA.B !_0                           ;;----|8ECC/----\----; / 
                      BNE CODE_018EE1                     ;;----|8ECE/----\----; \ If the piranha is in the pipe (State 0)... 
                      JSR SubHorizPos                     ;;----|8ED0/----\----;  | ...check if Mario is nearby... 
                      LDA.B !_F                           ;;----|8ED3/----\----;  | 
                      CLC                                 ;;----|8ED5/----\----;  | 
                      ADC.B #$1B                          ;;----|8ED6/----\----;  | 
                      CMP.B #$37                          ;;----|8ED8/----\----;  | 
                      LDA.B #$01                          ;;----|8EDA/----\----;  | 
                      STA.W !SpriteMisc1594,X             ;;----|8EDC/----\----;  | ...and set $1594,x if so 
                      BCC +                               ;;----|8EDF/----\----;  | 
CODE_018EE1:          STZ.W !SpriteMisc1594,X             ;;----|8EE1/----\----; / 
                      LDY.B !_0                           ;;----|8EE4/----\----; \ Set time in state 
                      LDA.W PiranTimeInState,Y            ;;----|8EE6/----\----;  | 
                      STA.W !SpriteMisc1540,X             ;;----|8EE9/----\----; / 
                      INC.B !SpriteTableC2,X              ;;----|8EEC/----\----; Go to next state 
                    + RTS                                 ;;----|8EEE/----\----; Return 
                                                          ;;                   ;
CODE_018EEF:          LDY.B #$07                          ;;----|8EEF/----\----; \ Find a free extended sprite slot 
CODE_018EF1:          LDA.W !ExtSpriteNumber,Y            ;;----|8EF1/----\----;
                      BEQ CODE_018F07                     ;;----|8EF4/----\----;
                      DEY                                 ;;----|8EF6/----\----;
                      BPL CODE_018EF1                     ;;----|8EF7/----\----;
                      DEC.W !ExtSpriteSlotIdx             ;;----|8EF9/----\----;
                      BPL +                               ;;----|8EFC/----\----;
                      LDA.B #$07                          ;;----|8EFE/----\----;
                      STA.W !ExtSpriteSlotIdx             ;;----|8F00/----\----;
                    + LDY.W !ExtSpriteSlotIdx             ;;----|8F03/----\----;
                    - RTS                                 ;;----|8F06/----\----; Return 
                                                          ;;                   ;
CODE_018F07:          LDA.W !SpriteOffscreenX,X           ;;----|8F07/----\----;
                      BNE -                               ;;----|8F0A/----\----;
                      RTS                                 ;;----|8F0C/----\----; Return 
                                                          ;;                   ;
HoppingFlame:         LDA.B !SpriteLock                   ;;----|8F0D/----\----; \ Branch if sprites locked 
                      BNE CODE_018F49                     ;;----|8F0F/----\----; / 
                      INC.W !SpriteMisc1602,X             ;;----|8F11/----\----;
                      JSR SetAnimationFrame               ;;----|8F14/----\----;
                      JSR SubUpdateSprPos                 ;;----|8F17/----\----;
                      DEC.B !SpriteYSpeed,X               ;;----|8F1A/----\----;
                      JSR CODE_018DBB                     ;;----|8F1C/----\----;
                      ASL.B !SpriteXSpeed,X               ;;----|8F1F/----\----;
                      JSR IsOnGround                      ;;----|8F21/----\----;
                      BEQ CODE_018F43                     ;;----|8F24/----\----;
                      STZ.B !SpriteXSpeed,X               ;;----|8F26/----\----; Sprite X Speed = 0 
                      JSR SetSomeYSpeed__                 ;;----|8F28/----\----;
                      LDA.W !SpriteMisc1540,X             ;;----|8F2B/----\----;
                      BEQ CODE_018F38                     ;;----|8F2E/----\----;
                      DEC A                               ;;----|8F30/----\----;
                      BNE CODE_018F43                     ;;----|8F31/----\----;
                      JSR CODE_018F50                     ;;----|8F33/----\----;
                      BRA CODE_018F43                     ;;----|8F36/----\----;
                                                          ;;                   ;
CODE_018F38:          JSL GetRand                         ;;----|8F38/----\----;
                      AND.B #$1F                          ;;----|8F3C/----\----;
                      ORA.B #$20                          ;;----|8F3E/----\----;
                      STA.W !SpriteMisc1540,X             ;;----|8F40/----\----;
CODE_018F43:          JSR FlipIfTouchingObj               ;;----|8F43/----\----;
                      JSR MarioSprInteractRt              ;;----|8F46/----\----;
CODE_018F49:          JSR SubOffscreen0Bnk1               ;;----|8F49/----\----;
                      JSR SubSprGfx2Entry1                ;;----|8F4C/----\----;
                      RTS                                 ;;----|8F4F/----\----; Return 
                                                          ;;                   ;
CODE_018F50:          JSL GetRand                         ;;----|8F50/----\----;
                      AND.B #$0F                          ;;----|8F54/----\----;
                      ORA.B #$D0                          ;;----|8F56/----\----;
                      STA.B !SpriteYSpeed,X               ;;----|8F58/----\----;
                      LDA.W !RandomNumber                 ;;----|8F5A/----\----;
                      AND.B #$03                          ;;----|8F5D/----\----;
                      BNE +                               ;;----|8F5F/----\----;
                      JSR FaceMario                       ;;----|8F61/----\----;
                    + JSR IsSprOffScreen                  ;;----|8F64/----\----;
                      BNE +                               ;;----|8F67/----\----;
                      JSR CODE_018EEF                     ;;----|8F69/----\----;
                      LDA.B !SpriteXPosLow,X              ;;----|8F6C/----\----;
                      CLC                                 ;;----|8F6E/----\----;
                      ADC.B #$04                          ;;----|8F6F/----\----;
                      STA.W !ExtSpriteXPosLow,Y           ;;----|8F71/----\----;
                      LDA.W !SpriteYPosHigh,X             ;;----|8F74/----\----;
                      ADC.B #$00                          ;;----|8F77/----\----;
                      STA.W !ExtSpriteXPosHigh,Y          ;;----|8F79/----\----;
                      LDA.B !SpriteYPosLow,X              ;;----|8F7C/----\----;
                      CLC                                 ;;----|8F7E/----\----;
                      ADC.B #$08                          ;;----|8F7F/----\----;
                      STA.W !ExtSpriteYPosLow,Y           ;;----|8F81/----\----;
                      LDA.W !SpriteXPosHigh,X             ;;----|8F84/----\----;
                      ADC.B #$00                          ;;----|8F87/----\----;
                      STA.W !ExtSpriteYPosHigh,Y          ;;----|8F89/----\----;
                      LDA.B #$03                          ;;----|8F8C/----\----; \ Extended sprite = Hopping flame's flame 
                      STA.W !ExtSpriteNumber,Y            ;;----|8F8E/----\----; / 
                      LDA.B #$FF                          ;;----|8F91/----\----;
                      STA.W !ExtSpriteMisc176F,Y          ;;----|8F93/----\----;
                    + RTS                                 ;;----|8F96/----\----; Return 
                                                          ;;                   ;
Lakitu:               LDY.B #$00                          ;;----|8F97/----\----;
                      LDA.W !SpriteMisc1558,X             ;;----|8F99/----\----;
                      BEQ +                               ;;----|8F9C/----\----;
                      LDY.B #$02                          ;;----|8F9E/----\----;
                    + TYA                                 ;;----|8FA0/----\----;
                      STA.W !SpriteMisc1602,X             ;;----|8FA1/----\----;
                      JSR SubSprGfx1                      ;;----|8FA4/----\----;
                      LDA.W !SpriteMisc1558,X             ;;----|8FA7/----\----;
                      BEQ +                               ;;----|8FAA/----\----;
                      LDY.W !SpriteOAMIndex,X             ;;----|8FAC/----\----; Y = Index into sprite OAM 
                      LDA.W !OAMTileYPos+$104,Y           ;;----|8FAF/----\----;
                      SEC                                 ;;----|8FB2/----\----;
                      SBC.B #$03                          ;;----|8FB3/----\----;
                      STA.W !OAMTileYPos+$104,Y           ;;----|8FB5/----\----;
                    + LDA.W !SpriteMisc151C,X             ;;----|8FB8/----\----;
                      BEQ SubSprSpr_MarioSpr              ;;----|8FBB/----\----;
                      JSL CODE_02E672                     ;;----|8FBD/----\----;
SubSprSpr_MarioSpr:   JSR SubSprSprInteract               ;;----|8FC1/----\----;
                      JMP MarioSprInteractRt              ;;----|8FC4/----\----;
                                                          ;;                   ;
                                                          ;;                   ;
BulletGfxProp:        db $42,$02,$03,$83,$03,$43,$03,$43  ;;----|8FC7/----\----;
DATA_018FCF:          db $00,$00,$01,$01,$02,$03,$03,$02  ;;----|8FCF/----\----;
BulletSpeedX:         db $20,$E0,$00,$00,$18,$18,$E8,$E8  ;;----|8FD7/----\----;
BulletSpeedY:         db $00,$00,$E0,$20,$E8,$18,$18,$E8  ;;----|8FDF/----\----;
                                                          ;;                   ;
BulletBill:           LDA.B #$01                          ;;----|8FE7/----\----;
                      STA.W !SpriteMisc157C,X             ;;----|8FE9/----\----;
                      LDA.B !SpriteLock                   ;;----|8FEC/----\----; \ Branch if sprites locked 
                      BNE +                               ;;----|8FEE/----\----; / 
                      LDY.B !SpriteTableC2,X              ;;----|8FF0/----\----;
                      LDA.W BulletGfxProp,Y               ;;----|8FF2/----\----; \ Store gfx properties into palette byte
                      STA.W !SpriteOBJAttribute,X         ;;----|8FF5/----\----; /
                      LDA.W DATA_018FCF,Y                 ;;----|8FF8/----\----;
                      STA.W !SpriteMisc1602,X             ;;----|8FFB/----\----;
                      LDA.W BulletSpeedX,Y                ;;----|8FFE/----\----; \ Set X speed
                      STA.B !SpriteXSpeed,X               ;;----|9001/----\----; /
                      LDA.W BulletSpeedY,Y                ;;----|9003/----\----; \ Set Y speed
                      STA.B !SpriteYSpeed,X               ;;----|9006/----\----; /
                      JSR SubSprXPosNoGrvty               ;;----|9008/----\----; \ Update position
                      JSR SubSprYPosNoGrvty               ;;----|900B/----\----; /
                      JSR CODE_019140                     ;;----|900E/----\----;
                      JSR SubSprSpr_MarioSpr              ;;----|9011/----\----; Interact with Mario and sprites
                    + JSR SubOffscreen0Bnk1               ;;----|9014/----\----;
                      LDA.B !SpriteYPosLow,X              ;;----|9017/----\----;
                      SEC                                 ;;----|9019/----\----;
                      SBC.B !Layer1YPos                   ;;----|901A/----\----;
                      CMP.B #$F0                          ;;----|901C/----\----;
                      BCC +                               ;;----|901E/----\----;
                      STZ.W !SpriteStatus,X               ;;----|9020/----\----;
                    + LDA.W !SpriteMisc1540,X             ;;----|9023/----\----;
                      BEQ +                               ;;----|9026/----\----;
                      JMP CODE_019546                     ;;----|9028/----\----;
                                                          ;;                   ;
                    + JMP SubSprGfx2Entry1                ;;----|902B/----\----;
                                                          ;;                   ;
                                                          ;;                   ;
DATA_01902E:          db $40,$10                          ;;----|902E/----\----;
                                                          ;;                   ;
DATA_019030:          db $03,$01                          ;;----|9030/----\----;
                                                          ;;                   ;
SubUpdateSprPos:      JSR SubSprYPosNoGrvty               ;;----|9032/----\----;
                      LDY.B #$00                          ;;----|9035/----\----;
                      LDA.W !SpriteInLiquid,X             ;;----|9037/----\----;
                      BEQ +                               ;;----|903A/----\----;
                      INY                                 ;;----|903C/----\----;
                      LDA.B !SpriteYSpeed,X               ;;----|903D/----\----;
                      BPL +                               ;;----|903F/----\----;
                      CMP.B #$E8                          ;;----|9041/----\----;
                      BCS +                               ;;----|9043/----\----;
                      LDA.B #$E8                          ;;----|9045/----\----;
                      STA.B !SpriteYSpeed,X               ;;----|9047/----\----;
                    + LDA.B !SpriteYSpeed,X               ;;----|9049/----\----;
                      CLC                                 ;;----|904B/----\----;
                      ADC.W DATA_019030,Y                 ;;----|904C/----\----;
                      STA.B !SpriteYSpeed,X               ;;----|904F/----\----;
                      BMI +                               ;;----|9051/----\----;
                      CMP.W DATA_01902E,Y                 ;;----|9053/----\----;
                      BCC +                               ;;----|9056/----\----;
                      LDA.W DATA_01902E,Y                 ;;----|9058/----\----;
                      STA.B !SpriteYSpeed,X               ;;----|905B/----\----;
                    + LDA.B !SpriteXSpeed,X               ;;----|905D/----\----;
                      PHA                                 ;;----|905F/----\----;
                      LDY.W !SpriteInLiquid,X             ;;----|9060/----\----;
                      BEQ +                               ;;----|9063/----\----;
                      ASL A                               ;;----|9065/----\----;
                      ROR.B !SpriteXSpeed,X               ;;----|9066/----\----;
                      LDA.B !SpriteXSpeed,X               ;;----|9068/----\----;
                      PHA                                 ;;----|906A/----\----;
                      STA.B !_0                           ;;----|906B/----\----;
                      ASL A                               ;;----|906D/----\----;
                      ROR.B !_0                           ;;----|906E/----\----;
                      PLA                                 ;;----|9070/----\----;
                      CLC                                 ;;----|9071/----\----;
                      ADC.B !_0                           ;;----|9072/----\----;
                      STA.B !SpriteXSpeed,X               ;;----|9074/----\----;
                    + JSR SubSprXPosNoGrvty               ;;----|9076/----\----;
                      PLA                                 ;;----|9079/----\----;
                      STA.B !SpriteXSpeed,X               ;;----|907A/----\----;
                      LDA.W !SpriteDisableObjInt,X        ;;----|907C/----\----;
                      BNE +                               ;;----|907F/----\----;
                      JSR CODE_019140                     ;;----|9081/----\----;
                      RTS                                 ;;----|9084/----\----; Return 
                                                          ;;                   ;
                    + STZ.W !SpriteBlockedDirs,X          ;;----|9085/----\----;
                      RTS                                 ;;----|9088/----\----; Return 
                                                          ;;                   ;
FlipIfTouchingObj:    LDA.W !SpriteMisc157C,X             ;;----|9089/----\----; \ If touching an object in the direction 
                      INC A                               ;;----|908C/----\----;  | that the sprite is moving... 
                      AND.W !SpriteBlockedDirs,X          ;;----|908D/----\----;  | 
                      AND.B #$03                          ;;----|9090/----\----;  | 
                      BEQ +                               ;;----|9092/----\----;  | 
                      JSR FlipSpriteDir                   ;;----|9094/----\----;  | ...flip direction 
                    + RTS                                 ;;----|9097/----\----; / 
                                                          ;;                   ;
FlipSpriteDir:        LDA.W !SpriteMisc15AC,X             ;;----|9098/----\----; \ Return if turning timer is set 
                      BNE +                               ;;----|909B/----\----; / 
                      LDA.B #$08                          ;;----|909D/----\----; \ Set turning timer 
                      STA.W !SpriteMisc15AC,X             ;;----|909F/----\----; / 
CODE_0190A2:          LDA.B !SpriteXSpeed,X               ;;----|90A2/----\----; \ Invert speed 
                      EOR.B #$FF                          ;;----|90A4/----\----;  | 
                      INC A                               ;;----|90A6/----\----;  | 
                      STA.B !SpriteXSpeed,X               ;;----|90A7/----\----; / 
                      LDA.W !SpriteMisc157C,X             ;;----|90A9/----\----; \ Flip sprite direction 
                      EOR.B #$01                          ;;----|90AC/----\----;  | 
                      STA.W !SpriteMisc157C,X             ;;----|90AE/----\----; / 
                    + RTS                                 ;;----|90B1/----\----; Return 
                                                          ;;                   ;
GenericSprGfxRt2:     PHB                                 ;;----|90B2/----\----;
                      PHK                                 ;;----|90B3/----\----;
                      PLB                                 ;;----|90B4/----\----;
                      JSR SubSprGfx2Entry1                ;;----|90B5/----\----;
                      PLB                                 ;;----|90B8/----\----;
                      RTL                                 ;;----|90B9/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
SpriteObjClippingX:   db $0E,$02,$08,$08,$0E,$02,$07,$07  ;;----|90BA/----\----;
                      db $07,$07,$07,$07,$0E,$02,$08,$08  ;;----|90C2/----\----;
                      db $10,$00,$08,$08,$0D,$02,$08,$08  ;;----|90CA/----\----;
                      db $07,$00,$04,$04,$1F,$01,$10,$10  ;;----|90D2/----\----;
                      db $0F,$00,$08,$08,$10,$00,$08,$08  ;;----|90DA/----\----;
                      db $0D,$02,$08,$08,$0E,$02,$08,$08  ;;----|90E2/----\----;
                      db $0D,$02,$08,$08,$10,$00,$08,$08  ;;----|90EA/----\----;
                      db $1F,$00,$10,$10,$08              ;;----|90F2/----\----;
                                                          ;;                   ;
SpriteObjClippingY:   db $08,$08,$10,$02,$12,$12,$20,$02  ;;----|90F7/----\----;
                      db $07,$07,$07,$07,$10,$10,$20,$0B  ;;----|90FF/----\----;
                      db $12,$12,$20,$02,$18,$18,$20,$10  ;;----|9107/----\----;
                      db $04,$04,$08,$00,$10,$10,$1F,$01  ;;----|910F/----\----;
                      db $08,$08,$0F,$00,$08,$08,$10,$00  ;;----|9117/----\----;
                      db $48,$48,$50,$42,$04,$04,$08,$00  ;;----|911F/----\----;
                      db $00,$00,$00,$00,$08,$08,$10,$00  ;;----|9127/----\----;
                      db $08,$08,$10,$00,$04              ;;----|912F/----\----;
                                                          ;;                   ;
DATA_019134:          db $01,$02,$04,$08                  ;;----|9134/----\----;
                                                          ;;                   ;
CODE_019138:          PHB                                 ;;----|9138/----\----;
                      PHK                                 ;;----|9139/----\----;
                      PLB                                 ;;----|913A/----\----;
                      JSR CODE_019140                     ;;----|913B/----\----;
                      PLB                                 ;;----|913E/----\----;
                      RTL                                 ;;----|913F/----\----; Return 
                                                          ;;                   ;
CODE_019140:          STZ.W !SpriteBlockOffset            ;;----|9140/----\----;
                      STZ.W !SpriteBlockedDirs,X          ;;----|9143/----\----; Set sprite's position status to 0 (in air) 
                      STZ.W !SpriteSlope,X                ;;----|9146/----\----;
                      STZ.W !TileGenerateTrackA           ;;----|9149/----\----;
                      LDA.W !SpriteInLiquid,X             ;;----|914C/----\----;
                      STA.W !SpriteInterIndex             ;;----|914F/----\----;
                      STZ.W !SpriteInLiquid,X             ;;----|9152/----\----;
                      JSR CODE_019211                     ;;----|9155/----\----;
                      LDA.B !ScreenMode                   ;;----|9158/----\----; Vertical level flag 
                      BPL CODE_0191BE                     ;;----|915A/----\----;
                      INC.W !TileGenerateTrackA           ;;----|915C/----\----;
                      LDA.B !SpriteXPosLow,X              ;;----|915F/----\----; \ Sprite's X position += $26 
                      CLC                                 ;;----|9161/----\----;  | for call to below routine 
                      ADC.B !Layer23XRelPos               ;;----|9162/----\----;  | 
                      STA.B !SpriteXPosLow,X              ;;----|9164/----\----;  | 
                      LDA.W !SpriteYPosHigh,X             ;;----|9166/----\----;  | 
                      ADC.B !Layer23XRelPos+1             ;;----|9169/----\----;  | 
                      STA.W !SpriteYPosHigh,X             ;;----|916B/----\----; / 
                      LDA.B !SpriteYPosLow,X              ;;----|916E/----\----; \ Sprite's Y position += $28 
                      CLC                                 ;;----|9170/----\----;  | for call to below routine 
                      ADC.B !Layer23YRelPos               ;;----|9171/----\----;  | 
                      STA.B !SpriteYPosLow,X              ;;----|9173/----\----;  | 
                      LDA.W !SpriteXPosHigh,X             ;;----|9175/----\----;  | 
                      ADC.B !Layer23YRelPos+1             ;;----|9178/----\----;  | 
                      STA.W !SpriteXPosHigh,X             ;;----|917A/----\----; / 
                      JSR CODE_019211                     ;;----|917D/----\----;
                      LDA.B !SpriteXPosLow,X              ;;----|9180/----\----; \ Restore sprite's original position 
                      SEC                                 ;;----|9182/----\----;  | 
                      SBC.B !Layer23XRelPos               ;;----|9183/----\----;  | 
                      STA.B !SpriteXPosLow,X              ;;----|9185/----\----;  | 
                      LDA.W !SpriteYPosHigh,X             ;;----|9187/----\----;  | 
                      SBC.B !Layer23XRelPos+1             ;;----|918A/----\----;  | 
                      STA.W !SpriteYPosHigh,X             ;;----|918C/----\----;  | 
                      LDA.B !SpriteYPosLow,X              ;;----|918F/----\----;  | 
                      SEC                                 ;;----|9191/----\----;  | 
                      SBC.B !Layer23YRelPos               ;;----|9192/----\----;  | 
                      STA.B !SpriteYPosLow,X              ;;----|9194/----\----;  | 
                      LDA.W !SpriteXPosHigh,X             ;;----|9196/----\----;  | 
                      SBC.B !Layer23YRelPos+1             ;;----|9199/----\----;  | 
                      STA.W !SpriteXPosHigh,X             ;;----|919B/----\----; / 
                      LDA.W !SpriteBlockedDirs,X          ;;----|919E/----\----;
                      BPL CODE_0191BE                     ;;----|91A1/----\----;
                      AND.B #$03                          ;;----|91A3/----\----;
                      BNE CODE_0191BE                     ;;----|91A5/----\----;
                      LDY.B #$00                          ;;----|91A7/----\----;
                      LDA.W !Layer2DXPos                  ;;----|91A9/----\----; \ A = -$17BF 
                      EOR.B #$FF                          ;;----|91AC/----\----;  | 
                      INC A                               ;;----|91AE/----\----;  | 
                      BPL +                               ;;----|91AF/----\----;
                      DEY                                 ;;----|91B1/----\----;
                    + CLC                                 ;;----|91B2/----\----;
                      ADC.B !SpriteXPosLow,X              ;;----|91B3/----\----;
                      STA.B !SpriteXPosLow,X              ;;----|91B5/----\----;
                      TYA                                 ;;----|91B7/----\----;
                      ADC.W !SpriteYPosHigh,X             ;;----|91B8/----\----;
                      STA.W !SpriteYPosHigh,X             ;;----|91BB/----\----;
CODE_0191BE:          LDA.W !SpriteTweakerF,X             ;;----|91BE/----\----; \ Branch if "Don't get stuck in walls" is not set 
                      BPL +                               ;;----|91C1/----\----; / 
                      LDA.W !SpriteBlockedDirs,X          ;;----|91C3/----\----; \ Branch if not touching object 
                      AND.B #$03                          ;;----|91C6/----\----;  | 
                      BEQ +                               ;;----|91C8/----\----; / 
                      TAY                                 ;;----|91CA/----\----;
                      LDA.W !SpriteOnYoshiTongue,X        ;;----|91CB/----\----;
                      BNE +                               ;;----|91CE/----\----;
                      LDA.B !SpriteXPosLow,X              ;;----|91D0/----\----;
                      CLC                                 ;;----|91D2/----\----;
                      ADC.W Return019283,Y                ;;----|91D3/----\----;
                      STA.B !SpriteXPosLow,X              ;;----|91D6/----\----;
                      LDA.W !SpriteYPosHigh,X             ;;----|91D8/----\----;
                      ADC.W DATA_019285,Y                 ;;----|91DB/----\----;
                      STA.W !SpriteYPosHigh,X             ;;----|91DE/----\----;
                      LDA.B !SpriteXSpeed,X               ;;----|91E1/----\----;
                      BNE +                               ;;----|91E3/----\----;
                      LDA.W !SpriteBlockedDirs,X          ;;----|91E5/----\----;
                      AND.B #$FC                          ;;----|91E8/----\----;
                      STA.W !SpriteBlockedDirs,X          ;;----|91EA/----\----;
                    + LDA.W !SpriteInLiquid,X             ;;----|91ED/----\----;
                      EOR.W !SpriteInterIndex             ;;----|91F0/----\----;
                      BEQ Return019210                    ;;----|91F3/----\----;
                   if !_VER != 3                ;\   IF   ;;+++++++++++++++++++; J, U, & E0
                      ASL A                               ;;----|91F5/----     ;
                      LDA.W !SpriteTweakerC,X             ;;----|91F6/----     ; \ TODO: Unknown Bit A... 
                      AND.B #$40                          ;;----|91F9/----     ;  | ... may be related to cape 
                      ORA.W !SpriteMisc1FE2,X             ;;----|91FB/----     ;
                      BNE Return019210                    ;;----|91FE/----     ;
                      BCS +                               ;;----|9200/----     ;
                   else                         ;<  ELSE  ;;-------------------; E1
                      TAY                                 ;;              \----;
                      LDA.W !SpriteTweakerC,X             ;;              \----;
                      AND.B #$40                          ;;              \----;
                      ORA.W !SpriteMisc1FE2,X             ;;              \----;
                      BNE Return019210                    ;;              \----;
                      LDA.W !SpriteYPosLow,X              ;;              \----;
                      SEC                                 ;;              \----;
                      SBC.W !Layer1YPos                   ;;              \----;
                      CMP.B #$D2                          ;;              \----;
                      BCS Return019210                    ;;              \----;
                      TYA                                 ;;              \----;
                      BMI +                               ;;              \----;
                   endif                        ;/ ENDIF  ;;+++++++++++++++++++;
                      BIT.W !IRQNMICommand                ;;----|9202/----\----;
                      BMI +                               ;;----|9205/----\----;
                      JSL CODE_0284C0                     ;;----|9207/----\----;
                      RTS                                 ;;----|920B/----\----; Return 
                                                          ;;                   ;
                    + JSL CODE_028528                     ;;----|920C/----\----;
Return019210:         RTS                                 ;;----|9210/----\----; Return 
                                                          ;;                   ;
CODE_019211:          LDA.W !SpriteBuoyancy               ;;----|9211/----\----;
                      BEQ CODE_01925B                     ;;----|9214/----\----;
                      LDA.B !LevelIsWater                 ;;----|9216/----\----;
                      BNE CODE_019258                     ;;----|9218/----\----;
                      LDY.B #$3C                          ;;----|921A/----\----;
                      JSR CODE_01944D                     ;;----|921C/----\----;
                      BEQ CODE_019233                     ;;----|921F/----\----;
                      LDA.W !Map16TileNumber              ;;----|9221/----\----;
                      CMP.B #$6E                          ;;----|9224/----\----;
                      BCC CODE_01925B                     ;;----|9226/----\----;
                      JSL CODE_00F04D                     ;;----|9228/----\----;
                      LDA.W !Map16TileNumber              ;;----|922C/----\----;
                      BCC CODE_01925B                     ;;----|922F/----\----;
                      BCS CODE_01923A                     ;;----|9231/----\----;
CODE_019233:          LDA.W !Map16TileNumber              ;;----|9233/----\----;
                      CMP.B #$06                          ;;----|9236/----\----;
                      BCS CODE_01925B                     ;;----|9238/----\----;
CODE_01923A:          TAY                                 ;;----|923A/----\----;
                      LDA.W !SpriteInLiquid,X             ;;----|923B/----\----;
                      ORA.B #$01                          ;;----|923E/----\----;
                      CPY.B #$04                          ;;----|9240/----\----;
                      BNE CODE_019258                     ;;----|9242/----\----;
                      PHA                                 ;;----|9244/----\----;
                      LDA.B !SpriteNumber,X               ;;----|9245/----\----; \ Branch if Yoshi 
                      CMP.B #$35                          ;;----|9247/----\----;  | 
                      BEQ CODE_019252                     ;;----|9249/----\----; / 
                      LDA.W !SpriteTweakerD,X             ;;----|924B/----\----; \ Branch if "Process interaction every frame" 
                      AND.B #$02                          ;;----|924E/----\----;  | is set 
                      BNE +                               ;;----|9250/----\----; / 
CODE_019252:          JSR CODE_019330                     ;;----|9252/----\----;
                    + PLA                                 ;;----|9255/----\----;
                      ORA.B #$80                          ;;----|9256/----\----;
CODE_019258:          STA.W !SpriteInLiquid,X             ;;----|9258/----\----;
CODE_01925B:          LDA.W !SpriteTweakerE,X             ;;----|925B/----\----;
                      BMI Return019210                    ;;----|925E/----\----;
                      LDA.W !TileGenerateTrackA           ;;----|9260/----\----;
                      BEQ CODE_01926F                     ;;----|9263/----\----;
                      BIT.W !SpriteBuoyancy               ;;----|9265/----\----;
                      BVS Return0192C0                    ;;----|9268/----\----;
                      LDA.W !SpriteTweakerC,X             ;;----|926A/----\----; \ TODO: Return if Unknown Bit B is set 
                      BMI Return0192C0                    ;;----|926D/----\----; / 
CODE_01926F:          JSR CODE_0192C9                     ;;----|926F/----\----;
                      LDA.W !SpriteTweakerF,X             ;;----|9272/----\----; \ Branch if "Don't get stuck in walls" is not set 
                      BPL +                               ;;----|9275/----\----; / 
                      LDA.B !SpriteXSpeed,X               ;;----|9277/----\----; \ Branch if sprite has X speed... 
                      ORA.W !SpriteMisc15AC,X             ;;----|9279/----\----;  | ...or sprite is turning 
                      BNE +                               ;;----|927C/----\----; / 
                      LDA.B !TrueFrame                    ;;----|927E/----\----;
                      JSR CODE_01928E                     ;;----|9280/----\----;
Return019283:         RTS                                 ;;----|9283/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
                      db $FC                              ;;----|9284/----\----;
                                                          ;;                   ;
DATA_019285:          db $04,$FF,$00                      ;;----|9285/----\----;
                                                          ;;                   ;
                    + LDA.B !SpriteXSpeed,X               ;;----|9288/----\----;
                      BEQ Return0192C0                    ;;----|928A/----\----;
                      ASL A                               ;;----|928C/----\----;
                      ROL A                               ;;----|928D/----\----;
CODE_01928E:          AND.B #$01                          ;;----|928E/----\----;
                      TAY                                 ;;----|9290/----\----;
                      JSR CODE_019441                     ;;----|9291/----\----;
                      STA.W !SprMap16TouchHorizHigh       ;;----|9294/----\----;
                      BEQ +                               ;;----|9297/----\----;
                      LDA.W !Map16TileNumber              ;;----|9299/----\----;
                      CMP.B #$11                          ;;----|929C/----\----;
                      BCC +                               ;;----|929E/----\----;
                      CMP.B #$6E                          ;;----|92A0/----\----;
                      BCS +                               ;;----|92A2/----\----;
                      JSR CODE_019425                     ;;----|92A4/----\----;
                      LDA.W !Map16TileNumber              ;;----|92A7/----\----;
                      STA.W !Map16TileDestroy             ;;----|92AA/----\----;
                      LDA.W !TileGenerateTrackA           ;;----|92AD/----\----;
                      BEQ +                               ;;----|92B0/----\----;
                      LDA.W !SpriteBlockedDirs,X          ;;----|92B2/----\----;
                      ORA.B #$40                          ;;----|92B5/----\----;
                      STA.W !SpriteBlockedDirs,X          ;;----|92B7/----\----;
                    + LDA.W !Map16TileNumber              ;;----|92BA/----\----;
                      STA.W !SprMap16TouchHorizLow        ;;----|92BD/----\----;
Return0192C0:         RTS                                 ;;----|92C0/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
                      db $FE,$02,$FF,$00                  ;;----|92C1/----\----;
                                                          ;;                   ;
DATA_0192C5:          db $01,$FF                          ;;----|92C5/----\----;
                                                          ;;                   ;
DATA_0192C7:          db $00,$FF                          ;;----|92C7/----\----;
                                                          ;;                   ;
CODE_0192C9:          LDY.B #$02                          ;;----|92C9/----\----;
                      LDA.B !SpriteYSpeed,X               ;;----|92CB/----\----;
                      BPL +                               ;;----|92CD/----\----;
                      INY                                 ;;----|92CF/----\----;
                    + JSR CODE_019441                     ;;----|92D0/----\----;
                      STA.W !SprMap16TouchVertHigh        ;;----|92D3/----\----;
                      PHP                                 ;;----|92D6/----\----;
                      LDA.W !Map16TileNumber              ;;----|92D7/----\----;
                      STA.W !SprMap16TouchVertLow         ;;----|92DA/----\----;
                      PLP                                 ;;----|92DD/----\----;
                      BEQ Return01930F                    ;;----|92DE/----\----;
                      LDA.W !Map16TileNumber              ;;----|92E0/----\----;
                      CPY.B #$02                          ;;----|92E3/----\----;
                      BEQ CODE_019310                     ;;----|92E5/----\----;
                      CMP.B #$11                          ;;----|92E7/----\----;
                      BCC Return01930F                    ;;----|92E9/----\----;
                      CMP.B #$6E                          ;;----|92EB/----\----;
                      BCC CODE_0192F9                     ;;----|92ED/----\----;
                      CMP.W !SolidTileStart               ;;----|92EF/----\----;
                      BCC Return01930F                    ;;----|92F2/----\----;
                      CMP.W !SolidTileEnd                 ;;----|92F4/----\----;
                      BCS Return01930F                    ;;----|92F7/----\----;
CODE_0192F9:          JSR CODE_019425                     ;;----|92F9/----\----;
                      LDA.W !Map16TileNumber              ;;----|92FC/----\----;
                      STA.W !Map16TileHittable            ;;----|92FF/----\----;
                      LDA.W !TileGenerateTrackA           ;;----|9302/----\----;
                      BEQ Return01930F                    ;;----|9305/----\----;
                      LDA.W !SpriteBlockedDirs,X          ;;----|9307/----\----;
                      ORA.B #$20                          ;;----|930A/----\----;
                      STA.W !SpriteBlockedDirs,X          ;;----|930C/----\----;
Return01930F:         RTS                                 ;;----|930F/----\----; Return 
                                                          ;;                   ;
CODE_019310:          CMP.B #$59                          ;;----|9310/----\----;
                      BCC CODE_01933B                     ;;----|9312/----\----;
                      CMP.B #$5C                          ;;----|9314/----\----;
                      BCS CODE_01933B                     ;;----|9316/----\----;
                      LDY.W !ObjectTileset                ;;----|9318/----\----;
                      CPY.B #$0E                          ;;----|931B/----\----;
                      BEQ CODE_019323                     ;;----|931D/----\----;
                      CPY.B #$03                          ;;----|931F/----\----;
                      BNE CODE_01933B                     ;;----|9321/----\----;
CODE_019323:          LDA.B !SpriteNumber,X               ;;----|9323/----\----; \ Branch if sprite == Yoshi 
                      CMP.B #$35                          ;;----|9325/----\----;  | 
                      BEQ CODE_019330                     ;;----|9327/----\----; / 
                      LDA.W !SpriteTweakerD,X             ;;----|9329/----\----; \ Branch if "Process interaction every frame" 
                      AND.B #$02                          ;;----|932C/----\----;  | is set 
                      BNE CODE_01933B                     ;;----|932E/----\----; / 
CODE_019330:          LDA.B #$05                          ;;----|9330/----\----; \ Sprite status = #$05 ??? 
                      STA.W !SpriteStatus,X               ;;----|9332/----\----; / 
                      LDA.B #$40                          ;;----|9335/----\----;
                      STA.W !SpriteMisc1558,X             ;;----|9337/----\----;
                      RTS                                 ;;----|933A/----\----; Return 
                                                          ;;                   ;
CODE_01933B:          CMP.B #$11                          ;;----|933B/----\----;
                      BCC CODE_0193B0                     ;;----|933D/----\----;
                      CMP.B #$6E                          ;;----|933F/----\----;
                      BCC CODE_0193B8                     ;;----|9341/----\----;
                      CMP.B #$D8                          ;;----|9343/----\----;
                      BCS CODE_019386                     ;;----|9345/----\----;
                      JSL CODE_00FA19                     ;;----|9347/----\----;
                      LDA.B [!_5],Y                       ;;----|934B/----\----;
                      CMP.B #$10                          ;;----|934D/----\----;
                      BEQ Return0193AF                    ;;----|934F/----\----;
                      BCS CODE_019386                     ;;----|9351/----\----;
                      LDA.B !_0                           ;;----|9353/----\----;
                      CMP.B #$0C                          ;;----|9355/----\----;
                      BCS CODE_01935D                     ;;----|9357/----\----;
                      CMP.B [!_5],Y                       ;;----|9359/----\----;
                      BCC Return0193AF                    ;;----|935B/----\----;
CODE_01935D:          LDA.B [!_5],Y                       ;;----|935D/----\----;
                      STA.W !SpriteBlockOffset            ;;----|935F/----\----;
                      PHX                                 ;;----|9362/----\----;
                      LDX.B !_8                           ;;----|9363/----\----;
                      LDA.L DATA_00E53D,X                 ;;----|9365/----\----;
                      PLX                                 ;;----|9369/----\----;
                      STA.W !SpriteSlope,X                ;;----|936A/----\----;
                      CMP.B #$04                          ;;----|936D/----\----;
                      BEQ CODE_019375                     ;;----|936F/----\----;
                      CMP.B #$FC                          ;;----|9371/----\----;
                      BNE CODE_019384                     ;;----|9373/----\----;
CODE_019375:          EOR.B !SpriteXSpeed,X               ;;----|9375/----\----;
                      BPL +                               ;;----|9377/----\----;
                      LDA.B !SpriteXSpeed,X               ;;----|9379/----\----;
                      BEQ +                               ;;----|937B/----\----;
                      JSR FlipSpriteDir                   ;;----|937D/----\----;
                    + JSL CODE_03C1CA                     ;;----|9380/----\----;
CODE_019384:          BRA CODE_0193B8                     ;;----|9384/----\----;
                                                          ;;                   ;
CODE_019386:          LDA.B !_C                           ;;----|9386/----\----;
                      AND.B #$0F                          ;;----|9388/----\----;
                      CMP.B #$05                          ;;----|938A/----\----;
                      BCS Return0193AF                    ;;----|938C/----\----;
                      LDA.W !SpriteStatus,X               ;;----|938E/----\----; \ Return if sprite status == Killed 
                      CMP.B #$02                          ;;----|9391/----\----;  | 
                      BEQ Return0193AF                    ;;----|9393/----\----; / 
                      CMP.B #$05                          ;;----|9395/----\----; \ Return if sprite status == #$05 
                      BEQ Return0193AF                    ;;----|9397/----\----; / 
                      CMP.B #$0B                          ;;----|9399/----\----; \ Return if sprite status == Carried 
                      BEQ Return0193AF                    ;;----|939B/----\----; / 
                      LDA.B !SpriteYPosLow,X              ;;----|939D/----\----;
                      SEC                                 ;;----|939F/----\----;
                      SBC.B #$01                          ;;----|93A0/----\----;
                      STA.B !SpriteYPosLow,X              ;;----|93A2/----\----;
                      LDA.W !SpriteXPosHigh,X             ;;----|93A4/----\----;
                      SBC.B #$00                          ;;----|93A7/----\----;
                      STA.W !SpriteXPosHigh,X             ;;----|93A9/----\----;
                      JSR CODE_0192C9                     ;;----|93AC/----\----;
Return0193AF:         RTS                                 ;;----|93AF/----\----; Return 
                                                          ;;                   ;
CODE_0193B0:          LDA.B !_C                           ;;----|93B0/----\----;
                      AND.B #$0F                          ;;----|93B2/----\----;
                      CMP.B #$05                          ;;----|93B4/----\----;
                      BCS Return019424                    ;;----|93B6/----\----;
CODE_0193B8:          LDA.W !SpriteTweakerE,X             ;;----|93B8/----\----;
                      AND.B #$04                          ;;----|93BB/----\----;
                      BNE CODE_019414                     ;;----|93BD/----\----;
                      LDA.W !SpriteStatus,X               ;;----|93BF/----\----; \ Return if sprite status == Killed 
                      CMP.B #$02                          ;;----|93C2/----\----;  | 
                      BEQ Return019424                    ;;----|93C4/----\----; / 
                      CMP.B #$05                          ;;----|93C6/----\----; \ Return if sprite status == #$05 
                      BEQ Return019424                    ;;----|93C8/----\----; / 
                      CMP.B #$0B                          ;;----|93CA/----\----; \ Return if sprite status == Carried 
                      BEQ Return019424                    ;;----|93CC/----\----; / 
                      LDY.W !Map16TileNumber              ;;----|93CE/----\----;
                      CPY.B #$0C                          ;;----|93D1/----\----;
                      BEQ CODE_0193D9                     ;;----|93D3/----\----;
                      CPY.B #$0D                          ;;----|93D5/----\----;
                      BNE CODE_019405                     ;;----|93D7/----\----;
CODE_0193D9:          LDA.B !TrueFrame                    ;;----|93D9/----\----;
                      AND.B #$03                          ;;----|93DB/----\----;
                      BNE CODE_019405                     ;;----|93DD/----\----;
                      JSR IsTouchingObjSide               ;;----|93DF/----\----;
                      BNE CODE_019405                     ;;----|93E2/----\----;
                      LDA.W !ObjectTileset                ;;----|93E4/----\----;
                      CMP.B #$02                          ;;----|93E7/----\----;
                      BEQ ADDR_0193EF                     ;;----|93E9/----\----;
                      CMP.B #$08                          ;;----|93EB/----\----;
                      BNE CODE_019405                     ;;----|93ED/----\----;
ADDR_0193EF:          TYA                                 ;;----|93EF/----\----;
                      SEC                                 ;;----|93F0/----\----;
                      SBC.B #$0C                          ;;----|93F1/----\----;
                      TAY                                 ;;----|93F3/----\----;
                      LDA.B !SpriteXPosLow,X              ;;----|93F4/----\----;
                      CLC                                 ;;----|93F6/----\----;
                      ADC.W DATA_0192C5,Y                 ;;----|93F7/----\----;
                      STA.B !SpriteXPosLow,X              ;;----|93FA/----\----;
                      LDA.W !SpriteYPosHigh,X             ;;----|93FC/----\----;
                      ADC.W DATA_0192C7,Y                 ;;----|93FF/----\----;
                      STA.W !SpriteYPosHigh,X             ;;----|9402/----\----;
CODE_019405:          LDA.W !SpriteOnYoshiTongue,X        ;;----|9405/----\----;
                      BNE CODE_019414                     ;;----|9408/----\----;
                      LDA.B !SpriteYPosLow,X              ;;----|940A/----\----;
                      AND.B #$F0                          ;;----|940C/----\----;
                      CLC                                 ;;----|940E/----\----;
                      ADC.W !SpriteBlockOffset            ;;----|940F/----\----;
                      STA.B !SpriteYPosLow,X              ;;----|9412/----\----;
CODE_019414:          JSR CODE_019435                     ;;----|9414/----\----;
                      LDA.W !TileGenerateTrackA           ;;----|9417/----\----;
                      BEQ Return019424                    ;;----|941A/----\----;
                      LDA.W !SpriteBlockedDirs,X          ;;----|941C/----\----;
                      ORA.B #$80                          ;;----|941F/----\----;
                      STA.W !SpriteBlockedDirs,X          ;;----|9421/----\----;
Return019424:         RTS                                 ;;----|9424/----\----; Return 
                                                          ;;                   ;
CODE_019425:          LDA.B !_A                           ;;----|9425/----\----;
                      STA.B !TouchBlockXPos               ;;----|9427/----\----;
                      LDA.B !_B                           ;;----|9429/----\----;
                      STA.B !TouchBlockXPos+1             ;;----|942B/----\----;
                      LDA.B !_C                           ;;----|942D/----\----;
                      STA.B !TouchBlockYPos               ;;----|942F/----\----;
                      LDA.B !_D                           ;;----|9431/----\----;
                      STA.B !TouchBlockYPos+1             ;;----|9433/----\----;
CODE_019435:          LDY.B !_F                           ;;----|9435/----\----;
                      LDA.W !SpriteBlockedDirs,X          ;;----|9437/----\----;
                      ORA.W DATA_019134,Y                 ;;----|943A/----\----;
                      STA.W !SpriteBlockedDirs,X          ;;----|943D/----\----;
                      RTS                                 ;;----|9440/----\----; Return 
                                                          ;;                   ;
CODE_019441:          STY.B !_F                           ;;----|9441/----\----; Can be 00-03 
                      LDA.W !SpriteTweakerA,X             ;;----|9443/----\----; \ Y = $1656,x (Upper 4 bits) + $0F (Lower 2 bits) 
                      AND.B #$0F                          ;;----|9446/----\----;  | 
                      ASL A                               ;;----|9448/----\----;  | 
                      ASL A                               ;;----|9449/----\----;  | 
                      ADC.B !_F                           ;;----|944A/----\----;  | 
                      TAY                                 ;;----|944C/----\----; / 
CODE_01944D:          LDA.W !TileGenerateTrackA           ;;----|944D/----\----;
                      INC A                               ;;----|9450/----\----;
                      AND.B !ScreenMode                   ;;----|9451/----\----;
                      BEQ CODE_0194BF                     ;;----|9453/----\----;
                      LDA.B !SpriteYPosLow,X              ;;----|9455/----\----;
                      CLC                                 ;;----|9457/----\----;
                      ADC.W SpriteObjClippingY,Y          ;;----|9458/----\----;
                      STA.B !_C                           ;;----|945B/----\----;
                      AND.B #$F0                          ;;----|945D/----\----;
                      STA.B !_0                           ;;----|945F/----\----;
                      LDA.W !SpriteXPosHigh,X             ;;----|9461/----\----;
                      ADC.B #$00                          ;;----|9464/----\----;
                      CMP.B !LevelScrLength               ;;----|9466/----\----;
                      BCS CODE_0194B4                     ;;----|9468/----\----;
                      STA.B !_D                           ;;----|946A/----\----;
                      LDA.B !SpriteXPosLow,X              ;;----|946C/----\----;
                      CLC                                 ;;----|946E/----\----;
                      ADC.W SpriteObjClippingX,Y          ;;----|946F/----\----;
                      STA.B !_A                           ;;----|9472/----\----;
                      STA.B !_1                           ;;----|9474/----\----;
                      LDA.W !SpriteYPosHigh,X             ;;----|9476/----\----;
                      ADC.B #$00                          ;;----|9479/----\----;
                      CMP.B #$02                          ;;----|947B/----\----;
                      BCS CODE_0194B4                     ;;----|947D/----\----;
                      STA.B !_B                           ;;----|947F/----\----;
                      LDA.B !_1                           ;;----|9481/----\----;
                      LSR A                               ;;----|9483/----\----;
                      LSR A                               ;;----|9484/----\----;
                      LSR A                               ;;----|9485/----\----;
                      LSR A                               ;;----|9486/----\----;
                      ORA.B !_0                           ;;----|9487/----\----;
                      STA.B !_0                           ;;----|9489/----\----;
                      LDX.B !_D                           ;;----|948B/----\----;
                      LDA.L DATA_00BA80,X                 ;;----|948D/----\----;
                      LDY.W !TileGenerateTrackA           ;;----|9491/----\----;
                      BEQ +                               ;;----|9494/----\----;
                      LDA.L DATA_00BA8E,X                 ;;----|9496/----\----;
                    + CLC                                 ;;----|949A/----\----;
                      ADC.B !_0                           ;;----|949B/----\----;
                      STA.B !_5                           ;;----|949D/----\----;
                      LDA.L DATA_00BABC,X                 ;;----|949F/----\----;
                      LDY.W !TileGenerateTrackA           ;;----|94A3/----\----;
                      BEQ +                               ;;----|94A6/----\----;
                      LDA.L DATA_00BACA,X                 ;;----|94A8/----\----;
                    + ADC.B !_B                           ;;----|94AC/----\----;
                      STA.B !_6                           ;;----|94AE/----\----;
                      JSR CODE_019523                     ;;----|94B0/----\----;
                      RTS                                 ;;----|94B3/----\----; Return 
                                                          ;;                   ;
CODE_0194B4:          LDY.B !_F                           ;;----|94B4/----\----;
                      LDA.B #$00                          ;;----|94B6/----\----;
                      STA.W !Map16TileNumber              ;;----|94B8/----\----;
                      STA.W !SpriteBlockOffset            ;;----|94BB/----\----;
                      RTS                                 ;;----|94BE/----\----; Return 
                                                          ;;                   ;
CODE_0194BF:          LDA.B !SpriteYPosLow,X              ;;----|94BF/----\----;
                      CLC                                 ;;----|94C1/----\----;
                      ADC.W SpriteObjClippingY,Y          ;;----|94C2/----\----;
                      STA.B !_C                           ;;----|94C5/----\----;
                      AND.B #$F0                          ;;----|94C7/----\----;
                      STA.B !_0                           ;;----|94C9/----\----;
                      LDA.W !SpriteXPosHigh,X             ;;----|94CB/----\----;
                      ADC.B #$00                          ;;----|94CE/----\----;
                      STA.B !_D                           ;;----|94D0/----\----;
                      REP #$20                            ;;----|94D2/----\----; Accum (16 bit) 
                      LDA.B !_C                           ;;----|94D4/----\----;
                      CMP.W #$01B0                        ;;----|94D6/----\----;
                      SEP #$20                            ;;----|94D9/----\----; Accum (8 bit) 
                      BCS CODE_0194B4                     ;;----|94DB/----\----;
                      LDA.B !SpriteXPosLow,X              ;;----|94DD/----\----;
                      CLC                                 ;;----|94DF/----\----;
                      ADC.W SpriteObjClippingX,Y          ;;----|94E0/----\----;
                      STA.B !_A                           ;;----|94E3/----\----;
                      STA.B !_1                           ;;----|94E5/----\----;
                      LDA.W !SpriteYPosHigh,X             ;;----|94E7/----\----;
                      ADC.B #$00                          ;;----|94EA/----\----;
                      STA.B !_B                           ;;----|94EC/----\----;
                      BMI CODE_0194B4                     ;;----|94EE/----\----;
                      CMP.B !LevelScrLength               ;;----|94F0/----\----;
                      BCS CODE_0194B4                     ;;----|94F2/----\----;
                      LDA.B !_1                           ;;----|94F4/----\----;
                      LSR A                               ;;----|94F6/----\----;
                      LSR A                               ;;----|94F7/----\----;
                      LSR A                               ;;----|94F8/----\----;
                      LSR A                               ;;----|94F9/----\----;
                      ORA.B !_0                           ;;----|94FA/----\----;
                      STA.B !_0                           ;;----|94FC/----\----;
                      LDX.B !_B                           ;;----|94FE/----\----;
                      LDA.L DATA_00BA60,X                 ;;----|9500/----\----;
                      LDY.W !TileGenerateTrackA           ;;----|9504/----\----;
                      BEQ +                               ;;----|9507/----\----;
                      LDA.L DATA_00BA70,X                 ;;----|9509/----\----;
                    + CLC                                 ;;----|950D/----\----;
                      ADC.B !_0                           ;;----|950E/----\----;
                      STA.B !_5                           ;;----|9510/----\----;
                      LDA.L DATA_00BA9C,X                 ;;----|9512/----\----;
                      LDY.W !TileGenerateTrackA           ;;----|9516/----\----;
                      BEQ +                               ;;----|9519/----\----;
                      LDA.L DATA_00BAAC,X                 ;;----|951B/----\----;
                    + ADC.B !_D                           ;;----|951F/----\----;
                      STA.B !_6                           ;;----|9521/----\----;
CODE_019523:          LDA.B #$7E                          ;;----|9523/----\----;
                      STA.B !_7                           ;;----|9525/----\----;
                      LDX.W !CurSpriteProcess             ;;----|9527/----\----; X = Sprite index 
                      LDA.B [!_5]                         ;;----|952A/----\----;
                      STA.W !Map16TileNumber              ;;----|952C/----\----;
                      INC.B !_7                           ;;----|952F/----\----;
                      LDA.B [!_5]                         ;;----|9531/----\----;
                      JSL CODE_00F545                     ;;----|9533/----\----;
                      LDY.B !_F                           ;;----|9537/----\----;
                      CMP.B #$00                          ;;----|9539/----\----;
                      RTS                                 ;;----|953B/----\----; Return 
                                                          ;;                   ;
HandleSprStunned:     LDA.B !SpriteNumber,X               ;;----|953C/----\----; \ Branch if not Yoshi shell 
                      CMP.B #$2C                          ;;----|953E/----\----; / 
                      BNE CODE_019554                     ;;----|9540/----\----;
                      LDA.B !SpriteTableC2,X              ;;----|9542/----\----;
                      BEQ CODE_01956A                     ;;----|9544/----\----;
CODE_019546:          LDA.B !SpriteProperties             ;;----|9546/----\----; \ Temporarily set $64 = #$10... 
                      PHA                                 ;;----|9548/----\----;  | 
                      LDA.B #$10                          ;;----|9549/----\----;  | 
                      STA.B !SpriteProperties             ;;----|954B/----\----;  | 
                      JSR SubSprGfx2Entry1                ;;----|954D/----\----;  | ...and call gfx routine 
                      PLA                                 ;;----|9550/----\----;  | 
                      STA.B !SpriteProperties             ;;----|9551/----\----; / 
                      RTS                                 ;;----|9553/----\----; Return 
                                                          ;;                   ;
CODE_019554:          CMP.B #$2F                          ;;----|9554/----\----; \ If Spring Board... 
                      BEQ SetNormalStatus2                ;;----|9556/----\----;  | ...Unused Sprite 85... 
                      CMP.B #$85                          ;;----|9558/----\----;  | ...or Balloon, 
                      BEQ SetNormalStatus2                ;;----|955A/----\----;  | Set Status = Normal... 
                      CMP.B #$7D                          ;;----|955C/----\----;  |  ...and jump to $01A187 
                      BNE CODE_01956A                     ;;----|955E/----\----;  | 
                      STZ.B !SpriteYSpeed,X               ;;----|9560/----\----;  | Balloon Y Speed = 0 
SetNormalStatus2:     LDA.B #$08                          ;;----|9562/----\----;  | 
                      STA.W !SpriteStatus,X               ;;----|9564/----\----;  | 
                      JMP CODE_01A187                     ;;----|9567/----\----; / 
                                                          ;;                   ;
CODE_01956A:          LDA.B !SpriteLock                   ;;----|956A/----\----; \ If sprites locked, 
                      BEQ +                               ;;----|956C/----\----;  | jump to $0195F5 
                      JMP CODE_0195F5                     ;;----|956E/----\----; / 
                                                          ;;                   ;
                    + JSR CODE_019624                     ;;----|9571/----\----;
                      JSR SubUpdateSprPos                 ;;----|9574/----\----;
                      JSR IsOnGround                      ;;----|9577/----\----;
                      BEQ CODE_019598                     ;;----|957A/----\----;
                      JSR CODE_0197D5                     ;;----|957C/----\----;
                      LDA.B !SpriteNumber,X               ;;----|957F/----\----;
                      CMP.B #$16                          ;;----|9581/----\----; \ If Vertical or Horizontal Fish, 
                      BEQ ADDR_019589                     ;;----|9583/----\----;  | 
                      CMP.B #$15                          ;;----|9585/----\----;  | jump to $019562 
                      BNE +                               ;;----|9587/----\----;  | 
ADDR_019589:          JMP SetNormalStatus2                ;;----|9589/----\----; / 
                                                          ;;                   ;
                    + CMP.B #$2C                          ;;----|958C/----\----; \ Branch if not Yoshi Egg 
                      BNE CODE_019598                     ;;----|958E/----\----; / 
                      LDA.B #$F0                          ;;----|9590/----\----; \ Set upward speed 
                      STA.B !SpriteYSpeed,X               ;;----|9592/----\----; / 
                      JSL CODE_01F74C                     ;;----|9594/----\----;
CODE_019598:          JSR IsTouchingCeiling               ;;----|9598/----\----;
                      BEQ +                               ;;----|959B/----\----;
                      LDA.B #$10                          ;;----|959D/----\----; \ Set downward speed 
                      STA.B !SpriteYSpeed,X               ;;----|959F/----\----; / 
                      JSR IsTouchingObjSide               ;;----|95A1/----\----;
                      BNE +                               ;;----|95A4/----\----;
                      LDA.B !SpriteXPosLow,X              ;;----|95A6/----\----; \ $9A = Sprite X position + #$08 
                      CLC                                 ;;----|95A8/----\----;  | 
                      ADC.B #$08                          ;;----|95A9/----\----;  | 
                      STA.B !TouchBlockXPos               ;;----|95AB/----\----;  | 
                      LDA.W !SpriteYPosHigh,X             ;;----|95AD/----\----;  | 
                      ADC.B #$00                          ;;----|95B0/----\----;  | 
                      STA.B !TouchBlockXPos+1             ;;----|95B2/----\----; / 
                      LDA.B !SpriteYPosLow,X              ;;----|95B4/----\----; \ $9A = Sprite X position 
                      AND.B #$F0                          ;;----|95B6/----\----;  | (Rounded down to nearest #$10) 
                      STA.B !TouchBlockYPos               ;;----|95B8/----\----;  | 
                      LDA.W !SpriteXPosHigh,X             ;;----|95BA/----\----;  | 
                      STA.B !TouchBlockYPos+1             ;;----|95BD/----\----; / 
                      LDA.W !SpriteBlockedDirs,X          ;;----|95BF/----\----;
                      AND.B #$20                          ;;----|95C2/----\----;
                      ASL A                               ;;----|95C4/----\----;
                      ASL A                               ;;----|95C5/----\----;
                      ASL A                               ;;----|95C6/----\----;
                      ROL A                               ;;----|95C7/----\----;
                      AND.B #$01                          ;;----|95C8/----\----;
                      STA.W !LayerProcessing              ;;----|95CA/----\----;
                      LDY.B #$00                          ;;----|95CD/----\----;
                      LDA.W !Map16TileHittable            ;;----|95CF/----\----;
                      JSL CODE_00F160                     ;;----|95D2/----\----;
                      LDA.B #$08                          ;;----|95D6/----\----;
                      STA.W !SpriteMisc1FE2,X             ;;----|95D8/----\----;
                    + JSR IsTouchingObjSide               ;;----|95DB/----\----;
                      BEQ CODE_0195F2                     ;;----|95DE/----\----;
                      LDA.B !SpriteNumber,X               ;;----|95E0/----\----; \ Call $0195E9 if sprite number < #$0D 
                      CMP.B #$0D                          ;;----|95E2/----\----;  | (Koopa Troopas) 
                      BCC +                               ;;----|95E4/----\----;  | 
                      JSR CODE_01999E                     ;;----|95E6/----\----; / 
                    + LDA.B !SpriteXSpeed,X               ;;----|95E9/----\----;
                      ASL A                               ;;----|95EB/----\----;
                      PHP                                 ;;----|95EC/----\----;
                      ROR.B !SpriteXSpeed,X               ;;----|95ED/----\----;
                      PLP                                 ;;----|95EF/----\----;
                      ROR.B !SpriteXSpeed,X               ;;----|95F0/----\----;
CODE_0195F2:          JSR SubSprSpr_MarioSpr              ;;----|95F2/----\----;
CODE_0195F5:          JSR CODE_01A187                     ;;----|95F5/----\----;
                      JSR SubOffscreen0Bnk1               ;;----|95F8/----\----;
                      RTS                                 ;;----|95FB/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
                      db $00,$00,$00,$00,$04,$05,$06,$07  ;;----|95FC/----\----;
                      db $00,$00,$00,$00,$04,$05,$06,$07  ;;----|9604/----\----;
                      db $00,$00,$00,$00,$04,$05,$06,$07  ;;----|960C/----\----;
                      db $00,$00,$00,$00,$04,$05,$06,$07  ;;----|9614/----\----;
SpriteKoopasSpawn:    db $00,$00,$00,$00,$00,$01,$02,$03  ;;----|961C/----\----;
                                                          ;;                   ;
CODE_019624:          LDA.B !SpriteNumber,X               ;;----|9624/----\----; \ Branch away if sprite isn't a Bob-omb 
                      CMP.B #$0D                          ;;----|9626/----\----;  | 
                      BNE CODE_01965C                     ;;----|9628/----\----; / 
                      LDA.W !SpriteMisc1540,X             ;;----|962A/----\----; \ Branch away if it's not time to explode 
                      CMP.B #$01                          ;;----|962D/----\----;  | 
                      BNE +                               ;;----|962F/----\----; / 
                      LDA.B #$09                          ;;----|9631/----\----; \ Bomb sound effect 
                      STA.W !SPCIO3                       ;;----|9633/----\----; / 
                      LDA.B #$01                          ;;----|9636/----\----;
                      STA.W !SpriteMisc1534,X             ;;----|9638/----\----;
                      LDA.B #$40                          ;;----|963B/----\----; \ Set explosion timer 
                      STA.W !SpriteMisc1540,X             ;;----|963D/----\----; / 
                      LDA.B #$08                          ;;----|9640/----\----; \ Set normal status 
                      STA.W !SpriteStatus,X               ;;----|9642/----\----; / 
                      LDA.W !SpriteTweakerE,X             ;;----|9645/----\----; \ Set to interact with other sprites 
                      AND.B #$F7                          ;;----|9648/----\----;  | 
                      STA.W !SpriteTweakerE,X             ;;----|964A/----\----; / 
                      RTS                                 ;;----|964D/----\----; Return 
                                                          ;;                   ;
                    + CMP.B #$40                          ;;----|964E/----\----;
                      BCS +                               ;;----|9650/----\----;
                      ASL A                               ;;----|9652/----\----;
                      AND.B #$0E                          ;;----|9653/----\----;
                      EOR.W !SpriteOBJAttribute,X         ;;----|9655/----\----;
                      STA.W !SpriteOBJAttribute,X         ;;----|9658/----\----;
                    + RTS                                 ;;----|965B/----\----; Return 
                                                          ;;                   ;
CODE_01965C:          LDA.W !SpriteMisc1540,X             ;;----|965C/----\----;
                      ORA.W !SpriteMisc1558,X             ;;----|965F/----\----;
                      STA.B !SpriteTableC2,X              ;;----|9662/----\----;
                      LDA.W !SpriteMisc1558,X             ;;----|9664/----\----;
                      BEQ CODE_01969C                     ;;----|9667/----\----;
                      CMP.B #$01                          ;;----|9669/----\----;
                      BNE CODE_01969C                     ;;----|966B/----\----;
                      LDY.W !SpriteMisc1594,X             ;;----|966D/----\----;
                      LDA.W !SpriteOnYoshiTongue,Y        ;;----|9670/----\----;
                      BNE CODE_01969C                     ;;----|9673/----\----;
                      JSL LoadSpriteTables                ;;----|9675/----\----;
                      JSR FaceMario                       ;;----|9679/----\----;
                      ASL.W !SpriteOBJAttribute,X         ;;----|967C/----\----;
                      LSR.W !SpriteOBJAttribute,X         ;;----|967F/----\----;
                      LDY.W !SpriteMisc160E,X             ;;----|9682/----\----;
                      LDA.B #$08                          ;;----|9685/----\----;
                      CPY.B #$03                          ;;----|9687/----\----;
                      BNE +                               ;;----|9689/----\----;
                      INC.W !SpriteMisc187B,X             ;;----|968B/----\----;
                      LDA.W !SpriteTweakerC,X             ;;----|968E/----\----; \ Disable fireball/cape killing 
                      ORA.B #$30                          ;;----|9691/----\----;  | 
                      STA.W !SpriteTweakerC,X             ;;----|9693/----\----; / 
                      LDA.B #$0A                          ;;----|9696/----\----; \ Sprite status = Kicked 
                    + STA.W !SpriteStatus,X               ;;----|9698/----\----; / 
                    - RTS                                 ;;----|969B/----\----; Return 
                                                          ;;                   ;
CODE_01969C:          LDA.W !SpriteMisc1540,X             ;;----|969C/----\----; \ Return if stun timer == 0 
                      BEQ -                               ;;----|969F/----\----; / 
                      CMP.B #$03                          ;;----|96A1/----\----; \ If stun timer == 3, un-stun the sprite 
                      BEQ UnstunSprite                    ;;----|96A3/----\----; / 
                      CMP.B #$01                          ;;----|96A5/----\----; \ Every other frame, increment the stall timer 
                      BNE IncrmntStunTimer                ;;----|96A7/----\----; /  to emulates a slower timer 
UnstunSprite:         LDA.B !SpriteNumber,X               ;;----|96A9/----\----; \ Branch if Buzzy Beetle 
                      CMP.B #$11                          ;;----|96AB/----\----;  | 
                      BEQ SetNormalStatus                 ;;----|96AD/----\----; / 
                      CMP.B #$2E                          ;;----|96AF/----\----; \ Branch if Spike Top 
                      BEQ SetNormalStatus                 ;;----|96B1/----\----; / 
                      CMP.B #$2D                          ;;----|96B3/----\----; \ Return if Baby Yoshi 
                      BEQ Return0196CA                    ;;----|96B5/----\----; / 
                      CMP.B #$A2                          ;;----|96B7/----\----; \ Branch if MechaKoopa 
                      BEQ SetNormalStatus                 ;;----|96B9/----\----; / 
                      CMP.B #$0F                          ;;----|96BB/----\----; \ Branch if Goomba 
                      BEQ SetNormalStatus                 ;;----|96BD/----\----; / 
                      CMP.B #$2C                          ;;----|96BF/----\----; \ Branch if Yoshi Egg 
                      BEQ Return0196CA                    ;;----|96C1/----\----; / 
                      CMP.B #$53                          ;;----|96C3/----\----; \ Branch if not Throw Block 
                      BNE GeneralResetSpr                 ;;----|96C5/----\----; / 
                      JSR CODE_019ACB                     ;;----|96C7/----\----; Set throw block to vanish 
Return0196CA:         RTS                                 ;;----|96CA/----\----; Return 
                                                          ;;                   ;
SetNormalStatus:      LDA.B #$08                          ;;----|96CB/----\----; \ Sprite Status = Normal 
                      STA.W !SpriteStatus,X               ;;----|96CD/----\----; / 
                      ASL.W !SpriteOBJAttribute,X         ;;----|96D0/----\----; \ Clear vertical flip bit 
                      LSR.W !SpriteOBJAttribute,X         ;;----|96D3/----\----; / 
                      RTS                                 ;;----|96D6/----\----; Return 
                                                          ;;                   ;
IncrmntStunTimer:     LDA.B !TrueFrame                    ;;----|96D7/----\----; \ Increment timer every other frame 
                      AND.B #$01                          ;;----|96D9/----\----;  | 
                      BNE +                               ;;----|96DB/----\----;  | 
                      INC.W !SpriteMisc1540,X             ;;----|96DD/----\----;  | 
                    + RTS                                 ;;----|96E0/----\----; / 
                                                          ;;                   ;
GeneralResetSpr:      JSL FindFreeSprSlot                 ;;----|96E1/----\----; \ Return if no free sprite slot found 
                      BMI Return0196CA                    ;;----|96E5/----\----; / 
                      LDA.B #$08                          ;;----|96E7/----\----; \ Sprite status = Normal 
                      STA.W !SpriteStatus,Y               ;;----|96E9/----\----; / 
                      LDA.B !SpriteNumber,X               ;;----|96EC/----\----; \ Store sprite number for shelless koopa 
                      TAX                                 ;;----|96EE/----\----;  | 
                      LDA.W SpriteKoopasSpawn,X           ;;----|96EF/----\----;  | 
                      STA.W !SpriteNumber,Y               ;;----|96F2/----\----; / 
                      TYX                                 ;;----|96F5/----\----; \ Reset sprite tables 
                      JSL InitSpriteTables                ;;----|96F6/----\----;  | 
                      LDX.W !CurSpriteProcess             ;;----|96FA/----\----; / 
                      LDA.B !SpriteXPosLow,X              ;;----|96FD/----\----; \ Shelless Koopa position = Koopa position 
                      STA.W !SpriteXPosLow,Y              ;;----|96FF/----\----;  | 
                      LDA.W !SpriteYPosHigh,X             ;;----|9702/----\----;  | 
                      STA.W !SpriteYPosHigh,Y             ;;----|9705/----\----;  | 
                      LDA.B !SpriteYPosLow,X              ;;----|9708/----\----;  | 
                      STA.W !SpriteYPosLow,Y              ;;----|970A/----\----;  | 
                      LDA.W !SpriteXPosHigh,X             ;;----|970D/----\----;  | 
                      STA.W !SpriteXPosHigh,Y             ;;----|9710/----\----; / 
                      LDA.B #$00                          ;;----|9713/----\----; \ Direction = 0 
                      STA.W !SpriteMisc157C,Y             ;;----|9715/----\----; / 
                      LDA.B #$10                          ;;----|9718/----\----;
                      STA.W !SpriteMisc1564,Y             ;;----|971A/----\----;
                      LDA.W !SpriteInLiquid,X             ;;----|971D/----\----;
                      STA.W !SpriteInLiquid,Y             ;;----|9720/----\----;
                      LDA.W !SpriteMisc1540,X             ;;----|9723/----\----;
                      STZ.W !SpriteMisc1540,X             ;;----|9726/----\----;
                      CMP.B #$01                          ;;----|9729/----\----;
                      BEQ +                               ;;----|972B/----\----;
                      LDA.B #$D0                          ;;----|972D/----\----; \ Set upward speed 
                      STA.W !SpriteYSpeed,Y               ;;----|972F/----\----; / 
                      PHY                                 ;;----|9732/----\----; \ Make Shelless Koopa face away from Mario 
                      JSR SubHorizPos                     ;;----|9733/----\----;  | 
                      TYA                                 ;;----|9736/----\----;  | 
                      EOR.B #$01                          ;;----|9737/----\----;  | 
                      PLY                                 ;;----|9739/----\----;  | 
                      STA.W !SpriteMisc157C,Y             ;;----|973A/----\----; / 
                      PHX                                 ;;----|973D/----\----; \ Set Shelless X speed 
                      TAX                                 ;;----|973E/----\----;  | 
                      LDA.W Spr0to13SpeedX,X              ;;----|973F/----\----;  | 
                      STA.W !SpriteXSpeed,Y               ;;----|9742/----\----;  | 
                      PLX                                 ;;----|9745/----\----; / 
                      RTS                                 ;;----|9746/----\----; Return 
                                                          ;;                   ;
                    + PHY                                 ;;----|9747/----\----;
                      JSR SubHorizPos                     ;;----|9748/----\----;
                      LDA.W DATA_0197AD,Y                 ;;----|974B/----\----;
                      STY.B !_0                           ;;----|974E/----\----;
                      PLY                                 ;;----|9750/----\----;
                      STA.W !SpriteXSpeed,Y               ;;----|9751/----\----;
                      LDA.B !_0                           ;;----|9754/----\----;
                      EOR.B #$01                          ;;----|9756/----\----;
                      STA.W !SpriteMisc157C,Y             ;;----|9758/----\----;
                      STA.B !_1                           ;;----|975B/----\----;
                      LDA.B #$10                          ;;----|975D/----\----;
                      STA.W !SpriteMisc154C,Y             ;;----|975F/----\----;
                      STA.W !SpriteMisc1528,Y             ;;----|9762/----\----;
                      LDA.B !SpriteNumber,X               ;;----|9765/----\----; \ If Yellow Koopa... 
                      CMP.B #$07                          ;;----|9767/----\----;  | 
                      BNE Return019775                    ;;----|9769/----\----;  | 
                      LDY.B #$08                          ;;----|976B/----\----;  | ...find free sprite slot... 
CODE_01976D:          LDA.W !SpriteStatus,Y               ;;----|976D/----\----;  | 
                      BEQ SpawnMovingCoin                 ;;----|9770/----\----;  | ...and spawn moving coin 
                      DEY                                 ;;----|9772/----\----;  | 
                      BPL CODE_01976D                     ;;----|9773/----\----; / 
Return019775:         RTS                                 ;;----|9775/----\----; Return 
                                                          ;;                   ;
SpawnMovingCoin:      LDA.B #$08                          ;;----|9776/----\----; \ Sprite status = normal 
                      STA.W !SpriteStatus,Y               ;;----|9778/----\----; / 
                      LDA.B #$21                          ;;----|977B/----\----; \ Sprite = Moving Coin 
                      STA.W !SpriteNumber,Y               ;;----|977D/----\----; / 
                      LDA.B !SpriteXPosLow,X              ;;----|9780/----\----; \ Copy X position to coin 
                      STA.W !SpriteXPosLow,Y              ;;----|9782/----\----;  | 
                      LDA.W !SpriteYPosHigh,X             ;;----|9785/----\----;  | 
                      STA.W !SpriteYPosHigh,Y             ;;----|9788/----\----; / 
                      LDA.B !SpriteYPosLow,X              ;;----|978B/----\----; \ Copy Y position to coin 
                      STA.W !SpriteYPosLow,Y              ;;----|978D/----\----;  | 
                      LDA.W !SpriteXPosHigh,X             ;;----|9790/----\----;  | 
                      STA.W !SpriteXPosHigh,Y             ;;----|9793/----\----; / 
                      PHX                                 ;;----|9796/----\----; \ 
                      TYX                                 ;;----|9797/----\----;  | 
                      JSL InitSpriteTables                ;;----|9798/----\----;  | Clear all sprite tables, and load new values 
                      PLX                                 ;;----|979C/----\----; / 
                      LDA.B #$D0                          ;;----|979D/----\----; \ Set Y speed 
                      STA.W !SpriteYSpeed,Y               ;;----|979F/----\----; / 
                      LDA.B !_1                           ;;----|97A2/----\----; \ Set direction 
                      STA.W !SpriteMisc157C,Y             ;;----|97A4/----\----; / 
                      LDA.B #$20                          ;;----|97A7/----\----;
                      STA.W !SpriteMisc154C,Y             ;;----|97A9/----\----;
                      RTS                                 ;;----|97AC/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
DATA_0197AD:          db $C0,$40                          ;;----|97AD/----\----;
                                                          ;;                   ;
DATA_0197AF:          db $00,$00,$00,$F8,$F8,$F8,$F8,$F8  ;;----|97AF/----\----;
                      db $F8,$F7,$F6,$F5,$F4,$F3,$F2,$E8  ;;----|97B7/----\----;
                      db $E8,$E8,$E8,$00,$00,$00,$00,$FE  ;;----|97BF/----\----;
                      db $FC,$F8,$EC,$EC,$EC,$E8,$E4,$E0  ;;----|97C7/----\----;
                      db $DC,$D8,$D4,$D0,$CC,$C8          ;;----|97CF/----\----;
                                                          ;;                   ;
CODE_0197D5:          LDA.B !SpriteXSpeed,X               ;;----|97D5/----\----;
                      PHP                                 ;;----|97D7/----\----;
                      BPL +                               ;;----|97D8/----\----;
                      JSR InvertAccum                     ;;----|97DA/----\----;
                    + LSR A                               ;;----|97DD/----\----;
                      PLP                                 ;;----|97DE/----\----;
                      BPL +                               ;;----|97DF/----\----;
                      JSR InvertAccum                     ;;----|97E1/----\----;
                    + STA.B !SpriteXSpeed,X               ;;----|97E4/----\----;
                      LDA.B !SpriteYSpeed,X               ;;----|97E6/----\----;
                      PHA                                 ;;----|97E8/----\----;
                      JSR SetSomeYSpeed__                 ;;----|97E9/----\----;
                      PLA                                 ;;----|97EC/----\----;
                      LSR A                               ;;----|97ED/----\----;
                      LSR A                               ;;----|97EE/----\----;
                      TAY                                 ;;----|97EF/----\----;
                      LDA.B !SpriteNumber,X               ;;----|97F0/----\----; \ If Goomba, Y += #$13 
                      CMP.B #$0F                          ;;----|97F2/----\----;  | 
                      BNE +                               ;;----|97F4/----\----;  | 
                      TYA                                 ;;----|97F6/----\----;  | 
                      CLC                                 ;;----|97F7/----\----;  | 
                      ADC.B #$13                          ;;----|97F8/----\----;  | 
                      TAY                                 ;;----|97FA/----\----; / 
                    + LDA.W DATA_0197AF,Y                 ;;----|97FB/----\----;
                      LDY.W !SpriteBlockedDirs,X          ;;----|97FE/----\----;
                      BMI +                               ;;----|9801/----\----;
                      STA.B !SpriteYSpeed,X               ;;----|9803/----\----;
                    + RTS                                 ;;----|9805/----\----; Return 
                                                          ;;                   ;
CODE_019806:          LDA.B #$06                          ;;----|9806/----\----;
                      LDY.W !SpriteOAMIndex,X             ;;----|9808/----\----; Y = Index into sprite OAM 
                      BNE CODE_01980F                     ;;----|980B/----\----;
                      LDA.B #$08                          ;;----|980D/----\----;
CODE_01980F:          STA.W !SpriteMisc1602,X             ;;----|980F/----\----;
                      LDA.W !SpriteOAMIndex,X             ;;----|9812/----\----;
                      PHA                                 ;;----|9815/----\----;
                      BEQ +                               ;;----|9816/----\----;
                      CLC                                 ;;----|9818/----\----;
                      ADC.B #$08                          ;;----|9819/----\----;
                    + STA.W !SpriteOAMIndex,X             ;;----|981B/----\----;
                      JSR SubSprGfx2Entry1                ;;----|981E/----\----;
                      PLA                                 ;;----|9821/----\----;
                      STA.W !SpriteOAMIndex,X             ;;----|9822/----\----;
                      LDA.W !OWLevelTileSettings+$49      ;;----|9825/----\----;
                      BMI Return0198A6                    ;;----|9828/----\----;
                      LDA.W !SpriteMisc1602,X             ;;----|982A/----\----;
                      CMP.B #$06                          ;;----|982D/----\----;
                      BNE Return0198A6                    ;;----|982F/----\----;
                      LDY.W !SpriteOAMIndex,X             ;;----|9831/----\----; Y = Index into sprite OAM 
                      LDA.W !SpriteMisc1558,X             ;;----|9834/----\----;
                      BNE CODE_019842                     ;;----|9837/----\----;
                      LDA.W !SpriteMisc1540,X             ;;----|9839/----\----;
                      BEQ Return0198A6                    ;;----|983C/----\----;
                      CMP.B #$30                          ;;----|983E/----\----;
                      BCS +                               ;;----|9840/----\----;
CODE_019842:          LSR A                               ;;----|9842/----\----;
                      LDA.W !OAMTileXPos+$108,Y           ;;----|9843/----\----;
                      ADC.B #$00                          ;;----|9846/----\----;
                      BCS +                               ;;----|9848/----\----;
                      STA.W !OAMTileXPos+$108,Y           ;;----|984A/----\----;
                    + LDA.B !SpriteNumber,X               ;;----|984D/----\----; \ Branch away if a Buzzy Beetle 
                      CMP.B #$11                          ;;----|984F/----\----;  | 
                      BEQ Return0198A6                    ;;----|9851/----\----; / 
                      JSR IsSprOffScreen                  ;;----|9853/----\----;
                      BNE Return0198A6                    ;;----|9856/----\----;
                      LDA.W !SpriteOBJAttribute,X         ;;----|9858/----\----;
                      ASL A                               ;;----|985B/----\----;
                      LDA.B #$08                          ;;----|985C/----\----;
                      BCC +                               ;;----|985E/----\----;
                      LDA.B #$00                          ;;----|9860/----\----;
                    + STA.B !_0                           ;;----|9862/----\----;
                      LDA.W !OAMTileXPos+$108,Y           ;;----|9864/----\----;
                      CLC                                 ;;----|9867/----\----;
                      ADC.B #$02                          ;;----|9868/----\----;
                      STA.W !OAMTileXPos+$100,Y           ;;----|986A/----\----;
                      CLC                                 ;;----|986D/----\----;
                      ADC.B #$04                          ;;----|986E/----\----;
                      STA.W !OAMTileXPos+$104,Y           ;;----|9870/----\----;
                      LDA.W !OAMTileYPos+$108,Y           ;;----|9873/----\----;
                      CLC                                 ;;----|9876/----\----;
                      ADC.B !_0                           ;;----|9877/----\----;
                      STA.W !OAMTileYPos+$100,Y           ;;----|9879/----\----;
                      STA.W !OAMTileYPos+$104,Y           ;;----|987C/----\----;
                      PHY                                 ;;----|987F/----\----;
                      LDY.B #$64                          ;;----|9880/----\----;
                      LDA.B !EffFrame                     ;;----|9882/----\----;
                      AND.B #$F8                          ;;----|9884/----\----;
                      BNE +                               ;;----|9886/----\----;
                      LDY.B #$4D                          ;;----|9888/----\----;
                    + TYA                                 ;;----|988A/----\----;
                      PLY                                 ;;----|988B/----\----;
                      STA.W !OAMTileNo+$100,Y             ;;----|988C/----\----;
                      STA.W !OAMTileNo+$104,Y             ;;----|988F/----\----;
                      LDA.B !SpriteProperties             ;;----|9892/----\----;
                      STA.W !OAMTileAttr+$100,Y           ;;----|9894/----\----;
                      STA.W !OAMTileAttr+$104,Y           ;;----|9897/----\----;
                      TYA                                 ;;----|989A/----\----;
                      LSR A                               ;;----|989B/----\----;
                      LSR A                               ;;----|989C/----\----;
                      TAY                                 ;;----|989D/----\----;
                      LDA.B #$00                          ;;----|989E/----\----;
                      STA.W !OAMTileSize+$40,Y            ;;----|98A0/----\----;
                      STA.W !OAMTileSize+$41,Y            ;;----|98A3/----\----;
Return0198A6:         RTS                                 ;;----|98A6/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
                      db $E0,$20                          ;;----|98A7/----\----;
                                                          ;;                   ;
CODE_0198A9:          LDA.B !SpriteLock                   ;;----|98A9/----\----;
                      BEQ +                               ;;----|98AB/----\----;
                      JMP CODE_019A2A                     ;;----|98AD/----\----;
                                                          ;;                   ;
                    + JSR SubUpdateSprPos                 ;;----|98B0/----\----;
                      LDA.W !SpriteMisc151C,X             ;;----|98B3/----\----;
                      AND.B #$1F                          ;;----|98B6/----\----;
                      BNE +                               ;;----|98B8/----\----;
                      JSR FaceMario                       ;;----|98BA/----\----;
                    + LDA.B !SpriteXSpeed,X               ;;----|98BD/----\----;
                      LDY.W !SpriteMisc157C,X             ;;----|98BF/----\----;
                      CPY.B #$00                          ;;----|98C2/----\----;
                      BNE CODE_0198D0                     ;;----|98C4/----\----;
                      CMP.B #$20                          ;;----|98C6/----\----;
                      BPL +                               ;;----|98C8/----\----;
                      INC.B !SpriteXSpeed,X               ;;----|98CA/----\----;
                      INC.B !SpriteXSpeed,X               ;;----|98CC/----\----;
                      BRA +                               ;;----|98CE/----\----;
                                                          ;;                   ;
CODE_0198D0:          CMP.B #$E0                          ;;----|98D0/----\----;
                      BMI +                               ;;----|98D2/----\----;
                      DEC.B !SpriteXSpeed,X               ;;----|98D4/----\----;
                      DEC.B !SpriteXSpeed,X               ;;----|98D6/----\----;
                    + JSR IsTouchingObjSide               ;;----|98D8/----\----;
                      BEQ +                               ;;----|98DB/----\----;
                      PHA                                 ;;----|98DD/----\----;
                      JSR CODE_01999E                     ;;----|98DE/----\----;
                      PLA                                 ;;----|98E1/----\----;
                      AND.B #$03                          ;;----|98E2/----\----;
                      TAY                                 ;;----|98E4/----\----;
                      LDA.W Return0198A6,Y                ;;----|98E5/----\----;
                      STA.B !SpriteXSpeed,X               ;;----|98E8/----\----;
                    + JSR IsOnGround                      ;;----|98EA/----\----;
                      BEQ +                               ;;----|98ED/----\----;
                      JSR SetSomeYSpeed__                 ;;----|98EF/----\----;
                      LDA.B #$10                          ;;----|98F2/----\----;
                      STA.B !SpriteYSpeed,X               ;;----|98F4/----\----;
                    + JSR IsTouchingCeiling               ;;----|98F6/----\----;
                      BEQ +                               ;;----|98F9/----\----;
                      STZ.B !SpriteYSpeed,X               ;;----|98FB/----\----; Sprite Y Speed = 0 
                    + LDA.B !TrueFrame                    ;;----|98FD/----\----;
                      AND.B #$01                          ;;----|98FF/----\----;
                      BNE +                               ;;----|9901/----\----;
                      LDA.W !SpriteOBJAttribute,X         ;;----|9903/----\----;
                      INC A                               ;;----|9906/----\----;
                      INC A                               ;;----|9907/----\----;
                      AND.B #$CF                          ;;----|9908/----\----;
                      STA.W !SpriteOBJAttribute,X         ;;----|990A/----\----;
                    + JMP CODE_01998C                     ;;----|990D/----\----;
                                                          ;;                   ;
                                                          ;;                   ;
                      db $F0,$EE,$EC                      ;;----|9910/----\----;
                                                          ;;                   ;
HandleSprKicked:      LDA.W !SpriteMisc187B,X             ;;----|9913/----\----;
                      BEQ +                               ;;----|9916/----\----;
                      JMP CODE_0198A9                     ;;----|9918/----\----;
                                                          ;;                   ;
                    + LDA.W !SpriteTweakerD,X             ;;----|991B/----\----;
                      AND.B #$10                          ;;----|991E/----\----;
                      BEQ +                               ;;----|9920/----\----;
                      JSR CODE_01AA0B                     ;;----|9922/----\----;
                      JMP CODE_01A187                     ;;----|9925/----\----;
                                                          ;;                   ;
                    + LDA.W !SpriteMisc1528,X             ;;----|9928/----\----;
                      BNE +                               ;;----|992B/----\----;
                      LDA.B !SpriteXSpeed,X               ;;----|992D/----\----;
                      CLC                                 ;;----|992F/----\----;
                      ADC.B #$20                          ;;----|9930/----\----;
                      CMP.B #$40                          ;;----|9932/----\----;
                      BCS +                               ;;----|9934/----\----;
                      JSR CODE_01AA0B                     ;;----|9936/----\----;
                    + STZ.W !SpriteMisc1528,X             ;;----|9939/----\----;
                      LDA.B !SpriteLock                   ;;----|993C/----\----;
                      ORA.W !SpriteMisc163E,X             ;;----|993E/----\----;
                      BEQ +                               ;;----|9941/----\----;
                      JMP CODE_01998F                     ;;----|9943/----\----;
                                                          ;;                   ;
                    + JSR UpdateDirection                 ;;----|9946/----\----;
                      LDA.W !SpriteSlope,X                ;;----|9949/----\----;
                      PHA                                 ;;----|994C/----\----;
                      JSR SubUpdateSprPos                 ;;----|994D/----\----;
                      PLA                                 ;;----|9950/----\----;
                      BEQ CODE_019969                     ;;----|9951/----\----;
                      STA.B !_0                           ;;----|9953/----\----;
                      LDY.W !SpriteInLiquid,X             ;;----|9955/----\----;
                      BNE CODE_019969                     ;;----|9958/----\----;
                      CMP.W !SpriteSlope,X                ;;----|995A/----\----;
                      BEQ CODE_019969                     ;;----|995D/----\----;
                      EOR.B !SpriteXSpeed,X               ;;----|995F/----\----;
                      BMI CODE_019969                     ;;----|9961/----\----;
                      LDA.B #$F8                          ;;----|9963/----\----; \ Set upward speed 
                      STA.B !SpriteYSpeed,X               ;;----|9965/----\----; / 
                      BRA CODE_019975                     ;;----|9967/----\----;
                                                          ;;                   ;
CODE_019969:          JSR IsOnGround                      ;;----|9969/----\----;
                      BEQ CODE_019984                     ;;----|996C/----\----;
                      JSR SetSomeYSpeed__                 ;;----|996E/----\----;
                      LDA.B #$10                          ;;----|9971/----\----; \ Set downward speed 
                      STA.B !SpriteYSpeed,X               ;;----|9973/----\----; / 
CODE_019975:          LDA.W !SprMap16TouchHorizLow        ;;----|9975/----\----;
                      CMP.B #$B5                          ;;----|9978/----\----;
                      BEQ CODE_019980                     ;;----|997A/----\----;
                      CMP.B #$B4                          ;;----|997C/----\----;
                      BNE CODE_019984                     ;;----|997E/----\----;
CODE_019980:          LDA.B #$B8                          ;;----|9980/----\----;
                      STA.B !SpriteYSpeed,X               ;;----|9982/----\----;
CODE_019984:          JSR IsTouchingObjSide               ;;----|9984/----\----;
                      BEQ CODE_01998C                     ;;----|9987/----\----;
                      JSR CODE_01999E                     ;;----|9989/----\----;
CODE_01998C:          JSR SubSprSpr_MarioSpr              ;;----|998C/----\----;
CODE_01998F:          JSR SubOffscreen0Bnk1               ;;----|998F/----\----;
                      LDA.B !SpriteNumber,X               ;;----|9992/----\----; \ Branch if throw block sprite 
                      CMP.B #$53                          ;;----|9994/----\----;  | 
                      BEQ +                               ;;----|9996/----\----; / 
                      JMP CODE_019A2A                     ;;----|9998/----\----;
                                                          ;;                   ;
                    + JMP StunThrowBlock                  ;;----|999B/----\----;
                                                          ;;                   ;
CODE_01999E:          LDA.B #$01                          ;;----|999E/----\----;
                      STA.W !SPCIO0                       ;;----|99A0/----\----; / Play sound effect 
                      JSR CODE_0190A2                     ;;----|99A3/----\----;
                      LDA.W !SpriteOffscreenX,X           ;;----|99A6/----\----;
                      BNE +                               ;;----|99A9/----\----;
                      LDA.B !SpriteXPosLow,X              ;;----|99AB/----\----;
                      SEC                                 ;;----|99AD/----\----;
                      SBC.B !Layer1XPos                   ;;----|99AE/----\----;
                      CLC                                 ;;----|99B0/----\----;
                      ADC.B #$14                          ;;----|99B1/----\----;
                      CMP.B #$1C                          ;;----|99B3/----\----;
                      BCC +                               ;;----|99B5/----\----;
                      LDA.W !SpriteBlockedDirs,X          ;;----|99B7/----\----;
                      AND.B #$40                          ;;----|99BA/----\----;
                      ASL A                               ;;----|99BC/----\----;
                      ASL A                               ;;----|99BD/----\----;
                      ROL A                               ;;----|99BE/----\----;
                      AND.B #$01                          ;;----|99BF/----\----;
                      STA.W !LayerProcessing              ;;----|99C1/----\----;
                      LDY.B #$00                          ;;----|99C4/----\----;
                      LDA.W !Map16TileDestroy             ;;----|99C6/----\----;
                      JSL CODE_00F160                     ;;----|99C9/----\----;
                      LDA.B #$05                          ;;----|99CD/----\----;
                      STA.W !SpriteMisc1FE2,X             ;;----|99CF/----\----;
                    + LDA.B !SpriteNumber,X               ;;----|99D2/----\----; \ If Throw Block, break it 
                      CMP.B #$53                          ;;----|99D4/----\----;  | 
                      BNE +                               ;;----|99D6/----\----;  | 
                      JSR BreakThrowBlock                 ;;----|99D8/----\----; / 
                    + RTS                                 ;;----|99DB/----\----; Return 
                                                          ;;                   ;
BreakThrowBlock:      STZ.W !SpriteStatus,X               ;;----|99DC/----\----; Free up sprite slot 
                      LDY.B #$FF                          ;;----|99DF/----\----; Is this for the shatter routine?? 
CODE_0199E1:          JSR IsSprOffScreen                  ;;----|99E1/----\----; \ Return if off screen 
                      BNE +                               ;;----|99E4/----\----; / 
                      LDA.B !SpriteXPosLow,X              ;;----|99E6/----\----; \ Store Y position in $9A-$9B 
                      STA.B !TouchBlockXPos               ;;----|99E8/----\----;  | 
                      LDA.W !SpriteYPosHigh,X             ;;----|99EA/----\----;  | 
                      STA.B !TouchBlockXPos+1             ;;----|99ED/----\----; / 
                      LDA.B !SpriteYPosLow,X              ;;----|99EF/----\----; \ Store X position in $98-$99 
                      STA.B !TouchBlockYPos               ;;----|99F1/----\----;  | 
                      LDA.W !SpriteXPosHigh,X             ;;----|99F3/----\----;  | 
                      STA.B !TouchBlockYPos+1             ;;----|99F6/----\----; / 
                      PHB                                 ;;----|99F8/----\----; \ Shatter the brick 
                      LDA.B #$02                          ;;----|99F9/----\----;  | 
                      PHA                                 ;;----|99FB/----\----;  | 
                      PLB                                 ;;----|99FC/----\----;  | 
                      TYA                                 ;;----|99FD/----\----;  | 
                      JSL ShatterBlock                    ;;----|99FE/----\----;  | 
                      PLB                                 ;;----|9A02/----\----; / 
                    + RTS                                 ;;----|9A03/----\----; Return 
                                                          ;;                   ;
SetSomeYSpeed__:      LDA.W !SpriteBlockedDirs,X          ;;----|9A04/----\----;
                      BMI CODE_019A10                     ;;----|9A07/----\----;
                      LDA.B #$00                          ;;----|9A09/----\----; \ Sprite Y speed = #$00 or #$18 
                      LDY.W !SpriteSlope,X                ;;----|9A0B/----\----;  | Depending on 15B8,x ??? 
                      BEQ +                               ;;----|9A0E/----\----;  | 
CODE_019A10:          LDA.B #$18                          ;;----|9A10/----\----;  | 
                    + STA.B !SpriteYSpeed,X               ;;----|9A12/----\----; / 
                      RTS                                 ;;----|9A14/----\----; Return 
                                                          ;;                   ;
UpdateDirection:      LDA.B #$00                          ;;----|9A15/----\----; \ Subroutine: Set direction from speed value 
                      LDY.B !SpriteXSpeed,X               ;;----|9A17/----\----;  | 
                      BEQ Return019A21                    ;;----|9A19/----\----;  | 
                      BPL +                               ;;----|9A1B/----\----;  | 
                      INC A                               ;;----|9A1D/----\----;  | 
                    + STA.W !SpriteMisc157C,X             ;;----|9A1E/----\----;  | 
Return019A21:         RTS                                 ;;----|9A21/----\----; / 
                                                          ;;                   ;
                                                          ;;                   ;
ShellAniTiles:        db $06,$07,$08,$07                  ;;----|9A22/----\----;
                                                          ;;                   ;
ShellGfxProp:         db $00,$00,$00,$40                  ;;----|9A26/----\----;
                                                          ;;                   ;
CODE_019A2A:          LDA.B !SpriteTableC2,X              ;;----|9A2A/----\----;
                      STA.W !SpriteMisc1558,X             ;;----|9A2C/----\----;
                      LDA.B !EffFrame                     ;;----|9A2F/----\----;
                      LSR A                               ;;----|9A31/----\----;
                      LSR A                               ;;----|9A32/----\----;
                      AND.B #$03                          ;;----|9A33/----\----;
                      TAY                                 ;;----|9A35/----\----;
                      PHY                                 ;;----|9A36/----\----;
                      LDA.W ShellAniTiles,Y               ;;----|9A37/----\----;
                      JSR CODE_01980F                     ;;----|9A3A/----\----;
                      STZ.W !SpriteMisc1558,X             ;;----|9A3D/----\----;
                      PLY                                 ;;----|9A40/----\----;
                      LDA.W ShellGfxProp,Y                ;;----|9A41/----\----;
                      LDY.W !SpriteOAMIndex,X             ;;----|9A44/----\----; Y = Index into sprite OAM 
                      EOR.W !OAMTileAttr+$108,Y           ;;----|9A47/----\----;
                      STA.W !OAMTileAttr+$108,Y           ;;----|9A4A/----\----;
                      RTS                                 ;;----|9A4D/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
SpinJumpSmokeTiles:   db $64,$62,$60,$62                  ;;----|9A4E/----\----;
                                                          ;;                   ;
HandleSprSpinJump:    LDA.W !SpriteMisc1540,X             ;;----|9A52/----\----; \ Erase sprite if time up 
                      BEQ SpinJumpEraseSpr                ;;----|9A55/----\----; / 
                      JSR SubSprGfx2Entry1                ;;----|9A57/----\----; Call generic gfx routine 
                      LDY.W !SpriteOAMIndex,X             ;;----|9A5A/----\----; Y = Index into sprite OAM 
                      LDA.W !SpriteMisc1540,X             ;;----|9A5D/----\----; \ Load tile based on timer 
                      LSR A                               ;;----|9A60/----\----;  | 
                      LSR A                               ;;----|9A61/----\----;  | 
                      LSR A                               ;;----|9A62/----\----;  | 
                      AND.B #$03                          ;;----|9A63/----\----;  | 
                      PHX                                 ;;----|9A65/----\----;  | 
                      TAX                                 ;;----|9A66/----\----;  | 
                      LDA.W SpinJumpSmokeTiles,X          ;;----|9A67/----\----;  | 
                      PLX                                 ;;----|9A6A/----\----;  / 
                      STA.W !OAMTileNo+$100,Y             ;;----|9A6B/----\----; Overwrite tile 
                      STA.W !OAMTileAttr+$100,Y           ;;----|9A6E/----\----; \ Overwrite properties 
                      AND.B #$30                          ;;----|9A71/----\----;  | 
                      STA.W !OAMTileAttr+$100,Y           ;;----|9A73/----\----; / 
                      RTS                                 ;;----|9A76/----\----; Return 
                                                          ;;                   ;
SpinJumpEraseSpr:     JSR OffScrEraseSprite               ;;----|9A77/----\----; Permanently kill the sprite 
                      RTS                                 ;;----|9A7A/----\----; Return 
                                                          ;;                   ;
CODE_019A7B:          LDA.W !SpriteMisc1558,X             ;;----|9A7B/----\----;
                      BEQ SpinJumpEraseSpr                ;;----|9A7E/----\----;
                      LDA.B #$04                          ;;----|9A80/----\----;
                      STA.B !SpriteYSpeed,X               ;;----|9A82/----\----;
                      ASL.W !SpriteTweakerF,X             ;;----|9A84/----\----;
                      LSR.W !SpriteTweakerF,X             ;;----|9A87/----\----;
                      LDA.B !SpriteXSpeed,X               ;;----|9A8A/----\----;
                      BEQ CODE_019A9D                     ;;----|9A8C/----\----;
                      BPL CODE_019A94                     ;;----|9A8E/----\----;
                      INC.B !SpriteXSpeed,X               ;;----|9A90/----\----;
                      BRA CODE_019A9D                     ;;----|9A92/----\----;
                                                          ;;                   ;
CODE_019A94:          DEC.B !SpriteXSpeed,X               ;;----|9A94/----\----;
                      JSR IsTouchingObjSide               ;;----|9A96/----\----;
                      BEQ CODE_019A9D                     ;;----|9A99/----\----;
                      STZ.B !SpriteXSpeed,X               ;;----|9A9B/----\----; Sprite X Speed = 0 
CODE_019A9D:          LDA.B #$01                          ;;----|9A9D/----\----;
                      STA.W !SpriteBehindScene,X          ;;----|9A9F/----\----;
HandleSprKilled:      LDA.B !SpriteNumber,X               ;;----|9AA2/----\----; \ If Wiggler, call main sprite routine 
                      CMP.B #$86                          ;;----|9AA4/----\----;  | 
                      BNE +                               ;;----|9AA6/----\----;  | 
                      JMP CallSpriteMain                  ;;----|9AA8/----\----; / 
                                                          ;;                   ;
                    + CMP.B #$1E                          ;;----|9AAB/----\----; \ If Lakitu, $18E0 = #$FF 
                      BNE +                               ;;----|9AAD/----\----;  | 
                      LDY.B #$FF                          ;;----|9AAF/----\----;  | 
                      STY.W !LakituCloudTimer             ;;----|9AB1/----\----; / 
                    + CMP.B #$53                          ;;----|9AB4/----\----; \ If Throw Block sprite... 
                      BNE +                               ;;----|9AB6/----\----;  | 
                      JSR BreakThrowBlock                 ;;----|9AB8/----\----;  | ...break block... 
                      RTS                                 ;;----|9ABB/----\----; / ...and return 
                                                          ;;                   ;
                    + CMP.B #$4C                          ;;----|9ABC/----\----; \ If Exploding Block Enemy 
                      BNE +                               ;;----|9ABE/----\----;  | 
                      JSL CODE_02E463                     ;;----|9AC0/----\----; / 
                    + LDA.W !SpriteTweakerA,X             ;;----|9AC4/----\----; \ If "disappears in puff of smoke" is set... 
                      AND.B #$80                          ;;----|9AC7/----\----;  | 
                      BEQ +                               ;;----|9AC9/----\----;  | 
CODE_019ACB:          LDA.B #$04                          ;;----|9ACB/----\----;  | ...Sprite status = Spin Jump Killed... 
                      STA.W !SpriteStatus,X               ;;----|9ACD/----\----;  | 
                      LDA.B #$1F                          ;;----|9AD0/----\----;  | ...Set Time to show smoke cloud... 
                      STA.W !SpriteMisc1540,X             ;;----|9AD2/----\----;  | 
                      RTS                                 ;;----|9AD5/----\----; / ... and return 
                                                          ;;                   ;
                    + LDA.B !SpriteLock                   ;;----|9AD6/----\----; \ Branch if sprites locked 
                      BNE +                               ;;----|9AD8/----\----; / 
                      JSR SubUpdateSprPos                 ;;----|9ADA/----\----;
                    + JSR SubOffscreen0Bnk1               ;;----|9ADD/----\----;
                      JSR HandleSpriteDeath               ;;----|9AE0/----\----;
                      RTS                                 ;;----|9AE3/----\----; Return 
                                                          ;;                   ;
HandleSprSmushed:     LDA.B !SpriteLock                   ;;----|9AE4/----\----; \ Branch if sprites locked 
                      BNE CODE_019AFE                     ;;----|9AE6/----\----; / 
                      LDA.W !SpriteMisc1540,X             ;;----|9AE8/----\----; \ Free sprite slot when timer runs out 
                      BNE +                               ;;----|9AEB/----\----;  | 
                      STZ.W !SpriteStatus,X               ;;----|9AED/----\----; / 
                      RTS                                 ;;----|9AF0/----\----; Return 
                                                          ;;                   ;
                    + JSR SubUpdateSprPos                 ;;----|9AF1/----\----;
                      JSR IsOnGround                      ;;----|9AF4/----\----;
                      BEQ CODE_019AFE                     ;;----|9AF7/----\----;
                      JSR SetSomeYSpeed__                 ;;----|9AF9/----\----;
                      STZ.B !SpriteXSpeed,X               ;;----|9AFC/----\----; Sprite X Speed = 0 
CODE_019AFE:          LDA.B !SpriteNumber,X               ;;----|9AFE/----\----; \ If Dino Torch... 
                      CMP.B #$6F                          ;;----|9B00/----\----;  | 
                      BNE +                               ;;----|9B02/----\----;  | 
                      JSR SubSprGfx2Entry1                ;;----|9B04/----\----;  | ...call standard gfx routine... 
                      LDY.W !SpriteOAMIndex,X             ;;----|9B07/----\----;  | 
                      LDA.B #$AC                          ;;----|9B0A/----\----;  | ...and replace the tile with #$AC 
                      STA.W !OAMTileNo+$100,Y             ;;----|9B0C/----\----;  | 
                      RTS                                 ;;----|9B0F/----\----; / Return 
                                                          ;;                   ;
                    + JMP SmushedGfxRt                    ;;----|9B10/----\----; Call smushed gfx routine 
                                                          ;;                   ;
HandleSpriteDeath:    LDA.W !SpriteTweakerD,X             ;;----|9B13/----\----; \ If the main routine handles the death state... 
                      AND.B #$01                          ;;----|9B16/----\----;  | 
                      BEQ +                               ;;----|9B18/----\----;  | 
                      JMP CallSpriteMain                  ;;----|9B1A/----\----; / ...jump to the main routine 
                                                          ;;                   ;
                    + STZ.W !SpriteMisc1602,X             ;;----|9B1D/----\----;
                      LDA.W !SpriteTweakerF,X             ;;----|9B20/----\----; \ Branch if "Death frame 2 tiles high" 
                      AND.B #$20                          ;;----|9B23/----\----;  | is NOT set 
                      BEQ CODE_019B64                     ;;----|9B25/----\----; / 
                      LDA.W !SpriteTweakerB,X             ;;----|9B27/----\----; \ Branch if "Use shell as death frame" 
                      AND.B #$40                          ;;----|9B2A/----\----;  | is set 
                      BNE CODE_019B5F                     ;;----|9B2C/----\----; / 
                      LDA.B !SpriteNumber,X               ;;----|9B2E/----\----; \ Branch if Lakitu 
                      CMP.B #$1E                          ;;----|9B30/----\----;  | 
                      BEQ CODE_019B3D                     ;;----|9B32/----\----; / 
                      CMP.B #$4B                          ;;----|9B34/----\----; \ If Pipe Lakitu, 
                      BNE CODE_019B44                     ;;----|9B36/----\----;  | 
                      LDA.B #$01                          ;;----|9B38/----\----;  | set behind scenery flag 
                      STA.W !SpriteBehindScene,X          ;;----|9B3A/----\----; / 
CODE_019B3D:          LDA.B #$01                          ;;----|9B3D/----\----;
                      STA.W !SpriteMisc1602,X             ;;----|9B3F/----\----;
                      BRA +                               ;;----|9B42/----\----;
                                                          ;;                   ;
CODE_019B44:          LDA.W !SpriteOBJAttribute,X         ;;----|9B44/----\----; \ Set to flip tiles vertically 
                      ORA.B #$80                          ;;----|9B47/----\----;  | 
                      STA.W !SpriteOBJAttribute,X         ;;----|9B49/----\----; / 
                    + LDA.B !SpriteProperties             ;;----|9B4C/----\----; \ If sprite is behind scenery, 
                      PHA                                 ;;----|9B4E/----\----;  | 
                      LDY.W !SpriteBehindScene,X          ;;----|9B4F/----\----;  | 
                      BEQ +                               ;;----|9B52/----\----;  | 
                      LDA.B #$10                          ;;----|9B54/----\----;  | temorarily set layer priority for gfx routine 
                    + STA.B !SpriteProperties             ;;----|9B56/----\----;  | 
                      JSR SubSprGfx1                      ;;----|9B58/----\----;  | Draw sprite 
                      PLA                                 ;;----|9B5B/----\----;  | 
                      STA.B !SpriteProperties             ;;----|9B5C/----\----; / 
                      RTS                                 ;;----|9B5E/----\----; Return 
                                                          ;;                   ;
CODE_019B5F:          LDA.B #$06                          ;;----|9B5F/----\----;
                      STA.W !SpriteMisc1602,X             ;;----|9B61/----\----;
CODE_019B64:          LDA.B #$00                          ;;----|9B64/----\----;
                      CPY.B #$1C                          ;;----|9B66/----\----;
                      BEQ +                               ;;----|9B68/----\----;
                      LDA.B #$80                          ;;----|9B6A/----\----;
                    + STA.B !_0                           ;;----|9B6C/----\----;
                      LDA.B !SpriteProperties             ;;----|9B6E/----\----; \ If sprite is behind scenery, 
                      PHA                                 ;;----|9B70/----\----;  | 
                      LDY.W !SpriteBehindScene,X          ;;----|9B71/----\----;  | 
                      BEQ +                               ;;----|9B74/----\----;  | 
                      LDA.B #$10                          ;;----|9B76/----\----;  | temorarily set layer priority for gfx routine 
                    + STA.B !SpriteProperties             ;;----|9B78/----\----;  | 
                      LDA.B !_0                           ;;----|9B7A/----\----;
                      JSR SubSprGfx2Entry0                ;;----|9B7C/----\----;  | Draw sprite 
                      PLA                                 ;;----|9B7F/----\----;  | 
                      STA.B !SpriteProperties             ;;----|9B80/----\----; / 
                      RTS                                 ;;----|9B82/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
SprTilemap:           db $82,$A0,$82,$A2,$84,$A4,$8C,$8A  ;;----|9B83/----\----;
                      db $8E,$C8,$CA,$CA,$CE,$CC,$86,$4E  ;;----|9B8B/----\----;
                      db $E0,$E2,$E2,$CE,$E4,$E0,$E0,$A3  ;;----|9B93/----\----;
                      db $A3,$B3,$B3,$E9,$E8,$F9,$F8,$E8  ;;----|9B9B/----\----;
                      db $E9,$F8,$F9,$E2,$E6,$AA,$A8,$A8  ;;----|9BA3/----\----;
                      db $AA,$A2,$A2,$B2,$B2,$C3,$C2,$D3  ;;----|9BAB/----\----;
                      db $D2,$C2,$C3,$D2,$D3,$E2,$E6,$CA  ;;----|9BB3/----\----;
                      db $CC,$CA,$AC,$CE,$AE,$CE,$83,$83  ;;----|9BBB/----\----;
                      db $C4,$C4,$83,$83,$C5,$C5,$8A,$A6  ;;----|9BC3/----\----;
                      db $A4,$A6,$A8,$80,$82,$80,$84,$84  ;;----|9BCB/----\----;
                      db $84,$84,$94,$94,$94,$94,$A0,$B0  ;;----|9BD3/----\----;
                      db $A0,$D0,$82,$80,$82,$00,$00,$00  ;;----|9BDB/----\----;
                      db $86,$84,$88,$EC,$8C,$A8,$AA,$8E  ;;----|9BE3/----\----;
                      db $AC,$AE,$8E,$EC,$EE,$CE,$EE,$A8  ;;----|9BEB/----\----;
                      db $EE,$40,$40,$A0,$C0,$A0,$C0,$A4  ;;----|9BF3/----\----;
                      db $C4,$A4,$C4,$A0,$C0,$A0,$C0,$40  ;;----|9BFB/----\----;
                      db $07,$27,$4C,$29,$4E,$2B,$82,$A0  ;;----|9C03/----\----;
                      db $84,$A4,$67,$69,$88,$CE,$8E,$AE  ;;----|9C0B/----\----;
                      db $A2,$A2,$B2,$B2,$00,$40,$44,$42  ;;----|9C13/----\----;
                      db $2C,$42,$28,$28,$28,$28,$4C,$4C  ;;----|9C1B/----\----;
                      db $4C,$4C,$83,$83,$6F,$6F,$AC,$BC  ;;----|9C23/----\----;
                      db $AC,$A6,$8C,$AA,$86,$84,$DC,$EC  ;;----|9C2B/----\----;
                      db $DE,$EE,$06,$06,$16,$16,$07,$07  ;;----|9C33/----\----;
                      db $17,$17,$16,$16,$06,$06,$17,$17  ;;----|9C3B/----\----;
                      db $07,$07,$84,$86,$00,$00,$00,$0E  ;;----|9C43/----\----;
                      db $2A,$24,$02,$06,$0A,$20,$22,$28  ;;----|9C4B/----\----;
                      db $26,$2E,$40,$42,$0C,$04,$2B,$6A  ;;----|9C53/----\----;
                      db $ED,$88,$8C,$A8,$8E,$AA,$AE,$8C  ;;----|9C5B/----\----;
                      db $88,$A8,$AE,$AC,$8C,$8E,$CE,$EE  ;;----|9C63/----\----;
                      db $C4,$C6,$82,$84,$86,$8C,$CE,$CE  ;;----|9C6B/----\----;
                      db $88,$89,$CE,$CE,$89,$88,$F3,$CE  ;;----|9C73/----\----;
                      db $F3,$CE,$A7,$A9                  ;;----|9C7B/----\----;
                                                          ;;                   ;
SprTilemapOffset:     db $09,$09,$10,$09,$00,$00,$00,$00  ;;----|9C7F/----\----;
                      db $00,$00,$00,$00,$00,$37,$00,$25  ;;----|9C87/----\----;
                      db $25,$5A,$00,$4B,$4E,$8A,$8A,$8A  ;;----|9C8F/----\----;
                      db $8A,$56,$3A,$46,$47,$69,$6B,$73  ;;----|9C97/----\----;
                      db $00,$00,$80,$80,$80,$80,$8E,$90  ;;----|9C9F/----\----;
                      db $00,$00,$3A,$F6,$94,$95,$63,$9A  ;;----|9CA7/----\----;
                      db $A6,$AA,$AE,$B2,$C2,$C4,$D5,$D9  ;;----|9CAF/----\----;
                      db $D7,$D7,$E6,$E6,$E6,$E2,$99,$17  ;;----|9CB7/----\----;
                      db $29,$E6,$E6,$E6,$00,$E8,$00,$8A  ;;----|9CBF/----\----;
                      db $E8,$00,$ED,$EA,$7F,$EA,$EA,$3A  ;;----|9CC7/----\----;
                      db $3A,$FA,$71,$7F                  ;;----|9CCF/----\----;
                                                          ;;                   ;
GeneralSprDispX:      db $00,$08,$00,$08                  ;;----|9CD3/----\----;
                                                          ;;                   ;
GeneralSprDispY:      db $00,$00,$08,$08                  ;;----|9CD7/----\----;
                                                          ;;                   ;
GeneralSprGfxProp:    db $00,$00,$00,$00,$00,$40,$00,$40  ;;----|9CDB/----\----;
                      db $00,$40,$80,$C0,$40,$40,$00,$00  ;;----|9CE3/----\----;
                      db $40,$00,$C0,$80,$40,$40,$40,$40  ;;----|9CEB/----\----;
                                                          ;;                   ;
SubSprGfx0Entry0:     LDY.B #$00                          ;;----|9CF3/----\----;
SubSprGfx0Entry1:     STA.B !_5                           ;;----|9CF5/----\----;
                      STY.B !_F                           ;;----|9CF7/----\----;
                      JSR GetDrawInfoBnk1                 ;;----|9CF9/----\----;
                      LDY.B !_F                           ;;----|9CFC/----\----;
                      TYA                                 ;;----|9CFE/----\----;
                      CLC                                 ;;----|9CFF/----\----;
                      ADC.B !_1                           ;;----|9D00/----\----;
                      STA.B !_1                           ;;----|9D02/----\----;
                      LDY.B !SpriteNumber,X               ;;----|9D04/----\----;
                      LDA.W !SpriteMisc1602,X             ;;----|9D06/----\----;
                      ASL A                               ;;----|9D09/----\----;
                      ASL A                               ;;----|9D0A/----\----;
                      ADC.W SprTilemapOffset,Y            ;;----|9D0B/----\----;
                      STA.B !_2                           ;;----|9D0E/----\----;
                      LDA.W !SpriteOBJAttribute,X         ;;----|9D10/----\----;
                      ORA.B !SpriteProperties             ;;----|9D13/----\----;
                      STA.B !_3                           ;;----|9D15/----\----;
                      LDY.W !SpriteOAMIndex,X             ;;----|9D17/----\----; Y = Index into sprite OAM 
                      LDA.B #$03                          ;;----|9D1A/----\----;
                      STA.B !_4                           ;;----|9D1C/----\----;
                      PHX                                 ;;----|9D1E/----\----;
                    - LDX.B !_4                           ;;----|9D1F/----\----;
                      LDA.B !_0                           ;;----|9D21/----\----;
                      CLC                                 ;;----|9D23/----\----;
                      ADC.W GeneralSprDispX,X             ;;----|9D24/----\----;
                      STA.W !OAMTileXPos+$100,Y           ;;----|9D27/----\----;
                      LDA.B !_1                           ;;----|9D2A/----\----;
                      CLC                                 ;;----|9D2C/----\----;
                      ADC.W GeneralSprDispY,X             ;;----|9D2D/----\----;
                      STA.W !OAMTileYPos+$100,Y           ;;----|9D30/----\----;
                      LDA.B !_2                           ;;----|9D33/----\----;
                      CLC                                 ;;----|9D35/----\----;
                      ADC.B !_4                           ;;----|9D36/----\----;
                      TAX                                 ;;----|9D38/----\----;
                      LDA.W SprTilemap,X                  ;;----|9D39/----\----;
                      STA.W !OAMTileNo+$100,Y             ;;----|9D3C/----\----;
                      LDA.B !_5                           ;;----|9D3F/----\----;
                      ASL A                               ;;----|9D41/----\----;
                      ASL A                               ;;----|9D42/----\----;
                      ADC.B !_4                           ;;----|9D43/----\----;
                      TAX                                 ;;----|9D45/----\----;
                      LDA.W GeneralSprGfxProp,X           ;;----|9D46/----\----;
                      ORA.B !_3                           ;;----|9D49/----\----;
                      STA.W !OAMTileAttr+$100,Y           ;;----|9D4B/----\----;
                      INY                                 ;;----|9D4E/----\----;
                      INY                                 ;;----|9D4F/----\----;
                      INY                                 ;;----|9D50/----\----;
                      INY                                 ;;----|9D51/----\----;
                      DEC.B !_4                           ;;----|9D52/----\----;
                      BPL -                               ;;----|9D54/----\----;
                      PLX                                 ;;----|9D56/----\----;
                      LDA.B #$03                          ;;----|9D57/----\----;
                      LDY.B #$00                          ;;----|9D59/----\----;
                      JSR FinishOAMWriteRt                ;;----|9D5B/----\----;
                      RTS                                 ;;----|9D5E/----\----; Return 
                                                          ;;                   ;
GenericSprGfxRt1:     PHB                                 ;;----|9D5F/----\----;
                      PHK                                 ;;----|9D60/----\----;
                      PLB                                 ;;----|9D61/----\----;
                      JSR SubSprGfx1                      ;;----|9D62/----\----;
                      PLB                                 ;;----|9D65/----\----;
                      RTL                                 ;;----|9D66/----\----; Return 
                                                          ;;                   ;
SubSprGfx1:           LDA.W !SpriteOBJAttribute,X         ;;----|9D67/----\----;
                      BPL +                               ;;----|9D6A/----\----;
                      JSR SubSprGfx1Hlpr1                 ;;----|9D6C/----\----;
                      RTS                                 ;;----|9D6F/----\----; Return 
                                                          ;;                   ;
                    + JSR GetDrawInfoBnk1                 ;;----|9D70/----\----;
                      LDA.W !SpriteMisc157C,X             ;;----|9D73/----\----;
                      STA.B !_2                           ;;----|9D76/----\----;
                      TYA                                 ;;----|9D78/----\----;
                      LDY.B !SpriteNumber,X               ;;----|9D79/----\----;
                      CPY.B #$0F                          ;;----|9D7B/----\----;
                      BCS +                               ;;----|9D7D/----\----;
                      ADC.B #$04                          ;;----|9D7F/----\----;
                    + TAY                                 ;;----|9D81/----\----;
                      PHY                                 ;;----|9D82/----\----;
                      LDY.B !SpriteNumber,X               ;;----|9D83/----\----;
                      LDA.W !SpriteMisc1602,X             ;;----|9D85/----\----;
                      ASL A                               ;;----|9D88/----\----;
                      CLC                                 ;;----|9D89/----\----;
                      ADC.W SprTilemapOffset,Y            ;;----|9D8A/----\----;
                      TAX                                 ;;----|9D8D/----\----;
                      PLY                                 ;;----|9D8E/----\----;
                      LDA.W SprTilemap,X                  ;;----|9D8F/----\----;
                      STA.W !OAMTileNo+$100,Y             ;;----|9D92/----\----;
                      LDA.W SprTilemap+1,X                ;;----|9D95/----\----;
                      STA.W !OAMTileNo+$104,Y             ;;----|9D98/----\----;
                      LDX.W !CurSpriteProcess             ;;----|9D9B/----\----; X = Sprite index 
                      LDA.B !_1                           ;;----|9D9E/----\----;
                      STA.W !OAMTileYPos+$100,Y           ;;----|9DA0/----\----;
                      CLC                                 ;;----|9DA3/----\----;
                      ADC.B #$10                          ;;----|9DA4/----\----;
                      STA.W !OAMTileYPos+$104,Y           ;;----|9DA6/----\----;
CODE_019DA9:          LDA.B !_0                           ;;----|9DA9/----\----;
                      STA.W !OAMTileXPos+$100,Y           ;;----|9DAB/----\----;
                      STA.W !OAMTileXPos+$104,Y           ;;----|9DAE/----\----;
                      LDA.W !SpriteMisc157C,X             ;;----|9DB1/----\----;
                      LSR A                               ;;----|9DB4/----\----;
                      LDA.B #$00                          ;;----|9DB5/----\----;
                      ORA.W !SpriteOBJAttribute,X         ;;----|9DB7/----\----;
                      BCS +                               ;;----|9DBA/----\----;
                      ORA.B #$40                          ;;----|9DBC/----\----;
                    + ORA.B !SpriteProperties             ;;----|9DBE/----\----;
                      STA.W !OAMTileAttr+$100,Y           ;;----|9DC0/----\----;
                      STA.W !OAMTileAttr+$104,Y           ;;----|9DC3/----\----;
                      TYA                                 ;;----|9DC6/----\----;
                      LSR A                               ;;----|9DC7/----\----;
                      LSR A                               ;;----|9DC8/----\----;
                      TAY                                 ;;----|9DC9/----\----;
                      LDA.B #$02                          ;;----|9DCA/----\----;
                      ORA.W !SpriteOffscreenX,X           ;;----|9DCC/----\----;
                      STA.W !OAMTileSize+$40,Y            ;;----|9DCF/----\----;
                      STA.W !OAMTileSize+$41,Y            ;;----|9DD2/----\----;
                      JSR CODE_01A3DF                     ;;----|9DD5/----\----;
                      RTS                                 ;;----|9DD8/----\----; Return 
                                                          ;;                   ;
SubSprGfx1Hlpr1:      JSR GetDrawInfoBnk1                 ;;----|9DD9/----\----;
                      LDA.W !SpriteMisc157C,X             ;;----|9DDC/----\----;
                      STA.B !_2                           ;;----|9DDF/----\----;
                      TYA                                 ;;----|9DE1/----\----;
                      CLC                                 ;;----|9DE2/----\----;
                      ADC.B #$08                          ;;----|9DE3/----\----;
                      TAY                                 ;;----|9DE5/----\----;
                      PHY                                 ;;----|9DE6/----\----;
                      LDY.B !SpriteNumber,X               ;;----|9DE7/----\----;
                      LDA.W !SpriteMisc1602,X             ;;----|9DE9/----\----;
                      ASL A                               ;;----|9DEC/----\----;
                      CLC                                 ;;----|9DED/----\----;
                      ADC.W SprTilemapOffset,Y            ;;----|9DEE/----\----;
                      TAX                                 ;;----|9DF1/----\----;
                      PLY                                 ;;----|9DF2/----\----;
                      LDA.W SprTilemap,X                  ;;----|9DF3/----\----;
                      STA.W !OAMTileNo+$104,Y             ;;----|9DF6/----\----;
                      LDA.W SprTilemap+1,X                ;;----|9DF9/----\----;
                      STA.W !OAMTileNo+$100,Y             ;;----|9DFC/----\----;
                      LDX.W !CurSpriteProcess             ;;----|9DFF/----\----; X = Sprite index 
                      LDA.B !_1                           ;;----|9E02/----\----;
                      STA.W !OAMTileYPos+$100,Y           ;;----|9E04/----\----;
                      CLC                                 ;;----|9E07/----\----;
                      ADC.B #$10                          ;;----|9E08/----\----;
                      STA.W !OAMTileYPos+$104,Y           ;;----|9E0A/----\----;
                      JMP CODE_019DA9                     ;;----|9E0D/----\----;
                                                          ;;                   ;
                                                          ;;                   ;
KoopaWingDispXLo:     db $FF,$F7,$09,$09                  ;;----|9E10/----\----;
                                                          ;;                   ;
KoopaWingDispXHi:     db $FF,$FF,$00,$00                  ;;----|9E14/----\----;
                                                          ;;                   ;
KoopaWingDispY:       db $FC,$F4,$FC,$F4                  ;;----|9E18/----\----;
                                                          ;;                   ;
KoopaWingTiles:       db $5D,$C6,$5D,$C6                  ;;----|9E1C/----\----;
                                                          ;;                   ;
KoopaWingGfxProp:     db $46,$46,$06,$06                  ;;----|9E20/----\----;
                                                          ;;                   ;
KoopaWingTileSize:    db $00,$02,$00,$02                  ;;----|9E24/----\----;
                                                          ;;                   ;
KoopaWingGfxRt:       LDY.B #$00                          ;;----|9E28/----\----; \ If not on ground, $02 = animation frame (00 or 01) 
                      JSR IsOnGround                      ;;----|9E2A/----\----;  | else, $02 = 0 
                      BNE CODE_019E35                     ;;----|9E2D/----\----;  | 
                      LDA.W !SpriteMisc1602,X             ;;----|9E2F/----\----;  | 
                      AND.B #$01                          ;;----|9E32/----\----;  | 
                      TAY                                 ;;----|9E34/----\----;  | 
CODE_019E35:          STY.B !_2                           ;;----|9E35/----\----; / 
CODE_019E37:          LDA.W !SpriteOffscreenVert,X        ;;----|9E37/----\----; \ Return if offscreen vertically 
                      BNE Return019E94                    ;;----|9E3A/----\----; / 
                      LDA.B !SpriteXPosLow,X              ;;----|9E3C/----\----; \ $00 = X position low 
                      STA.B !_0                           ;;----|9E3E/----\----; / 
                      LDA.W !SpriteYPosHigh,X             ;;----|9E40/----\----; \ $04 = X position high 
                      STA.B !_4                           ;;----|9E43/----\----; / 
                      LDA.B !SpriteYPosLow,X              ;;----|9E45/----\----; \ $01 = Y position low 
                      STA.B !_1                           ;;----|9E47/----\----; / 
                      LDY.W !SpriteOAMIndex,X             ;;----|9E49/----\----; Y = index to OAM 
                      PHX                                 ;;----|9E4C/----\----;
                      LDA.W !SpriteMisc157C,X             ;;----|9E4D/----\----; \ X = index into tables 
                      ASL A                               ;;----|9E50/----\----;  | 
                      ADC.B !_2                           ;;----|9E51/----\----;  | 
                      TAX                                 ;;----|9E53/----\----; / 
                      LDA.B !_0                           ;;----|9E54/----\----; \ Store X position (relative to screen) 
                      CLC                                 ;;----|9E56/----\----;  | 
                      ADC.W KoopaWingDispXLo,X            ;;----|9E57/----\----;  | 
                      STA.B !_0                           ;;----|9E5A/----\----;  | 
                      LDA.B !_4                           ;;----|9E5C/----\----;  | 
                      ADC.W KoopaWingDispXHi,X            ;;----|9E5E/----\----;  | 
                      PHA                                 ;;----|9E61/----\----;  | 
                      LDA.B !_0                           ;;----|9E62/----\----;  | 
                      SEC                                 ;;----|9E64/----\----;  | 
                      SBC.B !Layer1XPos                   ;;----|9E65/----\----;  | 
                      STA.W !OAMTileXPos+$100,Y           ;;----|9E67/----\----; / 
                      PLA                                 ;;----|9E6A/----\----; \ Return if off screen horizontally 
                      SBC.B !Layer1XPos+1                 ;;----|9E6B/----\----;  | 
                      BNE +                               ;;----|9E6D/----\----; / 
                      LDA.B !_1                           ;;----|9E6F/----\----; \ Store Y position (relative to screen) 
                      SEC                                 ;;----|9E71/----\----;  | 
                      SBC.B !Layer1YPos                   ;;----|9E72/----\----;  | 
                      CLC                                 ;;----|9E74/----\----;  | 
                      ADC.W KoopaWingDispY,X              ;;----|9E75/----\----;  | 
                      STA.W !OAMTileYPos+$100,Y           ;;----|9E78/----\----; / 
                      LDA.W KoopaWingTiles,X              ;;----|9E7B/----\----; \ Store tile 
                      STA.W !OAMTileNo+$100,Y             ;;----|9E7E/----\----; / 
                      LDA.B !SpriteProperties             ;;----|9E81/----\----; \ Store tile properties 
                      ORA.W KoopaWingGfxProp,X            ;;----|9E83/----\----;  | 
                      STA.W !OAMTileAttr+$100,Y           ;;----|9E86/----\----; / 
                      TYA                                 ;;----|9E89/----\----;
                      LSR A                               ;;----|9E8A/----\----;
                      LSR A                               ;;----|9E8B/----\----;
                      TAY                                 ;;----|9E8C/----\----;
                      LDA.W KoopaWingTileSize,X           ;;----|9E8D/----\----; \ Store tile size 
                      STA.W !OAMTileSize+$40,Y            ;;----|9E90/----\----; / 
                    + PLX                                 ;;----|9E93/----\----;
Return019E94:         RTS                                 ;;----|9E94/----\----; Return 
                                                          ;;                   ;
CODE_019E95:          LDA.B !SpriteYPosLow,X              ;;----|9E95/----\----;
                      PHA                                 ;;----|9E97/----\----;
                      CLC                                 ;;----|9E98/----\----;
                      ADC.B #$02                          ;;----|9E99/----\----;
                      STA.B !SpriteYPosLow,X              ;;----|9E9B/----\----;
                      LDA.W !SpriteXPosHigh,X             ;;----|9E9D/----\----;
                      PHA                                 ;;----|9EA0/----\----;
                      ADC.B #$00                          ;;----|9EA1/----\----;
                      STA.W !SpriteXPosHigh,X             ;;----|9EA3/----\----;
                      LDA.B !SpriteXPosLow,X              ;;----|9EA6/----\----;
                      PHA                                 ;;----|9EA8/----\----;
                      SEC                                 ;;----|9EA9/----\----;
                      SBC.B #$02                          ;;----|9EAA/----\----;
                      STA.B !SpriteXPosLow,X              ;;----|9EAC/----\----;
                      LDA.W !SpriteYPosHigh,X             ;;----|9EAE/----\----;
                      PHA                                 ;;----|9EB1/----\----;
                      SBC.B #$00                          ;;----|9EB2/----\----;
                      STA.W !SpriteYPosHigh,X             ;;----|9EB4/----\----;
                      LDA.W !SpriteOAMIndex,X             ;;----|9EB7/----\----;
                      PHA                                 ;;----|9EBA/----\----;
                      CLC                                 ;;----|9EBB/----\----;
                      ADC.B #$04                          ;;----|9EBC/----\----;
                      STA.W !SpriteOAMIndex,X             ;;----|9EBE/----\----;
                      LDA.W !SpriteMisc157C,X             ;;----|9EC1/----\----;
                      PHA                                 ;;----|9EC4/----\----;
                      STZ.W !SpriteMisc157C,X             ;;----|9EC5/----\----;
                      LDA.W !SpriteMisc1570,X             ;;----|9EC8/----\----;
                      LSR A                               ;;----|9ECB/----\----;
                      LSR A                               ;;----|9ECC/----\----;
                      LSR A                               ;;----|9ECD/----\----;
                      AND.B #$01                          ;;----|9ECE/----\----;
                      TAY                                 ;;----|9ED0/----\----;
                      JSR CODE_019E35                     ;;----|9ED1/----\----;
                      LDA.B !SpriteXPosLow,X              ;;----|9ED4/----\----;
                      CLC                                 ;;----|9ED6/----\----;
                      ADC.B #$04                          ;;----|9ED7/----\----;
                      STA.B !SpriteXPosLow,X              ;;----|9ED9/----\----;
                      LDA.W !SpriteYPosHigh,X             ;;----|9EDB/----\----;
                      ADC.B #$00                          ;;----|9EDE/----\----;
                      STA.W !SpriteYPosHigh,X             ;;----|9EE0/----\----;
                      LDA.W !SpriteOAMIndex,X             ;;----|9EE3/----\----;
                      CLC                                 ;;----|9EE6/----\----;
                      ADC.B #$04                          ;;----|9EE7/----\----;
                      STA.W !SpriteOAMIndex,X             ;;----|9EE9/----\----;
                      INC.W !SpriteMisc157C,X             ;;----|9EEC/----\----;
                      JSR CODE_019E37                     ;;----|9EEF/----\----;
                      PLA                                 ;;----|9EF2/----\----;
                      STA.W !SpriteMisc157C,X             ;;----|9EF3/----\----;
                      PLA                                 ;;----|9EF6/----\----;
                      STA.W !SpriteOAMIndex,X             ;;----|9EF7/----\----;
                      PLA                                 ;;----|9EFA/----\----;
                      STA.W !SpriteYPosHigh,X             ;;----|9EFB/----\----;
                      PLA                                 ;;----|9EFE/----\----;
                      STA.B !SpriteXPosLow,X              ;;----|9EFF/----\----;
                      PLA                                 ;;----|9F01/----\----;
                      STA.W !SpriteXPosHigh,X             ;;----|9F02/----\----;
                      PLA                                 ;;----|9F05/----\----;
                      STA.B !SpriteYPosLow,X              ;;----|9F06/----\----;
                      RTS                                 ;;----|9F08/----\----; Return 
                                                          ;;                   ;
SubSprGfx2Entry0:     STA.B !_4                           ;;----|9F09/----\----;
                      BRA +                               ;;----|9F0B/----\----;
                                                          ;;                   ;
SubSprGfx2Entry1:     STZ.B !_4                           ;;----|9F0D/----\----;
                    + JSR GetDrawInfoBnk1                 ;;----|9F0F/----\----;
                      LDA.W !SpriteMisc157C,X             ;;----|9F12/----\----;
                      STA.B !_2                           ;;----|9F15/----\----;
                      LDY.B !SpriteNumber,X               ;;----|9F17/----\----;
                      LDA.W !SpriteMisc1602,X             ;;----|9F19/----\----;
                      CLC                                 ;;----|9F1C/----\----;
                      ADC.W SprTilemapOffset,Y            ;;----|9F1D/----\----;
                      LDY.W !SpriteOAMIndex,X             ;;----|9F20/----\----; Y = Index into sprite OAM 
                      TAX                                 ;;----|9F23/----\----;
                      LDA.W SprTilemap,X                  ;;----|9F24/----\----;
                      STA.W !OAMTileNo+$100,Y             ;;----|9F27/----\----;
                      LDX.W !CurSpriteProcess             ;;----|9F2A/----\----; X = Sprite index 
                      LDA.B !_0                           ;;----|9F2D/----\----;
                      STA.W !OAMTileXPos+$100,Y           ;;----|9F2F/----\----;
                      LDA.B !_1                           ;;----|9F32/----\----;
                      STA.W !OAMTileYPos+$100,Y           ;;----|9F34/----\----;
                      LDA.W !SpriteMisc157C,X             ;;----|9F37/----\----;
                      LSR A                               ;;----|9F3A/----\----;
                      LDA.B #$00                          ;;----|9F3B/----\----;
                      ORA.W !SpriteOBJAttribute,X         ;;----|9F3D/----\----;
                      BCS +                               ;;----|9F40/----\----;
                      EOR.B #$40                          ;;----|9F42/----\----;
                    + ORA.B !_4                           ;;----|9F44/----\----;
                      ORA.B !SpriteProperties             ;;----|9F46/----\----;
                      STA.W !OAMTileAttr+$100,Y           ;;----|9F48/----\----;
                      TYA                                 ;;----|9F4B/----\----;
                      LSR A                               ;;----|9F4C/----\----;
                      LSR A                               ;;----|9F4D/----\----;
                      TAY                                 ;;----|9F4E/----\----;
                      LDA.B #$02                          ;;----|9F4F/----\----;
                      ORA.W !SpriteOffscreenX,X           ;;----|9F51/----\----;
                      STA.W !OAMTileSize+$40,Y            ;;----|9F54/----\----;
                      JSR CODE_01A3DF                     ;;----|9F57/----\----;
                      RTS                                 ;;----|9F5A/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
DATA_019F5B:          db $0B,$F5,$04,$FC,$04,$00          ;;----|9F5B/----\----;
                                                          ;;                   ;
DATA_019F61:          db $00,$FF,$00,$FF,$00,$00          ;;----|9F61/----\----;
                                                          ;;                   ;
DATA_019F67:          db $F3,$0D                          ;;----|9F67/----\----;
                                                          ;;                   ;
DATA_019F69:          db $FF,$00                          ;;----|9F69/----\----;
                                                          ;;                   ;
                   if !_VER <= 1                ;\   IF   ;;+++++++++++++++++++; J & U
ShellSpeedX:          db $D2,$2E,$CC,$34,$00,$10          ;;----|9F6B          ;
                   else                         ;<  ELSE  ;;-------------------; E0 & E1
ShellSpeedX:          db $C9,$37,$C2,$3E,$00,$10          ;;         /----\----;
                   endif                        ;/ ENDIF  ;;+++++++++++++++++++;
                                                          ;;                   ;
HandleSprCarried:     JSR CODE_019F9B                     ;;----|9F71/----\----;
                      LDA.W !PlayerTurningPose            ;;----|9F74/----\----;
                      BNE CODE_019F83                     ;;----|9F77/----\----;
                      LDA.W !YoshiInPipeSetting           ;;----|9F79/----\----; \ Branch if Yoshi going down pipe 
                      BNE CODE_019F83                     ;;----|9F7C/----\----; / 
                      LDA.W !FaceScreenTimer              ;;----|9F7E/----\----; \ Branch if Mario facing camera 
                      BEQ +                               ;;----|9F81/----\----; / 
CODE_019F83:          STZ.W !SpriteOAMIndex,X             ;;----|9F83/----\----;
                    + LDA.B !SpriteProperties             ;;----|9F86/----\----;
                      PHA                                 ;;----|9F88/----\----;
                      LDA.W !YoshiInPipeSetting           ;;----|9F89/----\----;
                      BEQ +                               ;;----|9F8C/----\----;
                      LDA.B #$10                          ;;----|9F8E/----\----;
                      STA.B !SpriteProperties             ;;----|9F90/----\----;
                    + JSR CODE_01A187                     ;;----|9F92/----\----;
                      PLA                                 ;;----|9F95/----\----;
                      STA.B !SpriteProperties             ;;----|9F96/----\----;
                      RTS                                 ;;----|9F98/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
DATA_019F99:          db $FC,$04                          ;;----|9F99/----\----;
                                                          ;;                   ;
CODE_019F9B:          LDA.B !SpriteNumber,X               ;;----|9F9B/----\----; \ Branch if not Balloon 
                      CMP.B #$7D                          ;;----|9F9D/----\----;  | 
                      BNE CODE_019FE0                     ;;----|9F9F/----\----; / 
                      LDA.B !TrueFrame                    ;;----|9FA1/----\----;
                      AND.B #$03                          ;;----|9FA3/----\----;
                      BNE CODE_019FBE                     ;;----|9FA5/----\----;
                      DEC.W !PBalloonTimer                ;;----|9FA7/----\----;
                      BEQ CODE_019FC4                     ;;----|9FAA/----\----;
                      LDA.W !PBalloonTimer                ;;----|9FAC/----\----;
                      CMP.B #$30                          ;;----|9FAF/----\----;
                      BCS CODE_019FBE                     ;;----|9FB1/----\----;
                      LDY.B #$01                          ;;----|9FB3/----\----;
                      AND.B #$04                          ;;----|9FB5/----\----;
                      BEQ +                               ;;----|9FB7/----\----;
                      LDY.B #$09                          ;;----|9FB9/----\----;
                    + STY.W !PBalloonInflating            ;;----|9FBB/----\----;
CODE_019FBE:          LDA.B !PlayerAnimation              ;;----|9FBE/----\----; \ Branch if no Mario animation sequence in progress 
                      CMP.B #$01                          ;;----|9FC0/----\----;  | 
                      BCC +                               ;;----|9FC2/----\----; / 
CODE_019FC4:          STZ.W !PBalloonInflating            ;;----|9FC4/----\----;
                      JMP OffScrEraseSprite               ;;----|9FC7/----\----;
                                                          ;;                   ;
                    + PHB                                 ;;----|9FCA/----\----;
                      LDA.B #$02                          ;;----|9FCB/----\----;
                      PHA                                 ;;----|9FCD/----\----;
                      PLB                                 ;;----|9FCE/----\----;
                      JSL CODE_02D214                     ;;----|9FCF/----\----;
                      PLB                                 ;;----|9FD3/----\----;
                      JSR CODE_01A0B1                     ;;----|9FD4/----\----;
                      LDY.W !SpriteOAMIndex,X             ;;----|9FD7/----\----; Y = Index into sprite OAM 
                      LDA.B #$F0                          ;;----|9FDA/----\----;
                      STA.W !OAMTileYPos+$100,Y           ;;----|9FDC/----\----;
                      RTS                                 ;;----|9FDF/----\----; Return 
                                                          ;;                   ;
CODE_019FE0:          JSR CODE_019140                     ;;----|9FE0/----\----;
                      LDA.B !PlayerAnimation              ;;----|9FE3/----\----; \ Branch if no Mario animation sequence in progress 
                      CMP.B #$01                          ;;----|9FE5/----\----;  | 
                      BCC +                               ;;----|9FE7/----\----; / 
                      LDA.W !YoshiInPipeSetting           ;;----|9FE9/----\----; \ Branch if in pipe 
                      BNE +                               ;;----|9FEC/----\----; / 
                      LDA.B #$09                          ;;----|9FEE/----\----; \ Sprite status = Stunned 
                      STA.W !SpriteStatus,X               ;;----|9FF0/----\----; / 
                      RTS                                 ;;----|9FF3/----\----; Return 
                                                          ;;                   ;
                    + LDA.W !SpriteStatus,X               ;;----|9FF4/----\----; \ Return if sprite status == Normal 
                      CMP.B #$08                          ;;----|9FF7/----\----;  | 
                      BEQ Return01A014                    ;;----|9FF9/----\----; / 
                      LDA.B !SpriteLock                   ;;----|9FFB/----\----; \ Jump if sprites locked 
                      BEQ +                               ;;----|9FFD/----\----;  | 
                      JMP CODE_01A0B1                     ;;----|9FFF/----\----; / 
                                                          ;;                   ;
                    + JSR CODE_019624                     ;;----|A002/----\----;
                      JSR SubSprSprInteract               ;;----|A005/----\----;
                      LDA.W !YoshiInPipeSetting           ;;----|A008/----\----;
                      BNE CODE_01A011                     ;;----|A00B/----\----;
                      BIT.B !byetudlrHold                 ;;----|A00D/----\----;
                      BVC +                               ;;----|A00F/----\----;
CODE_01A011:          JSR CODE_01A0B1                     ;;----|A011/----\----;
Return01A014:         RTS                                 ;;----|A014/----\----; Return 
                                                          ;;                   ;
                    + STZ.W !SpriteMisc1626,X             ;;----|A015/----\----;
                      LDY.B #$00                          ;;----|A018/----\----;
                      LDA.B !SpriteNumber,X               ;;----|A01A/----\----; \ Branch if not Goomba 
                      CMP.B #$0F                          ;;----|A01C/----\----;  | 
                      BNE +                               ;;----|A01E/----\----; / 
                      LDA.B !PlayerInAir                  ;;----|A020/----\----;
                      BNE +                               ;;----|A022/----\----;
                      LDY.B #$EC                          ;;----|A024/----\----;
                    + STY.B !SpriteYSpeed,X               ;;----|A026/----\----;
                      LDA.B #$09                          ;;----|A028/----\----; \ Sprite status = Carryable 
                      STA.W !SpriteStatus,X               ;;----|A02A/----\----; / 
                      LDA.B !byetudlrHold                 ;;----|A02D/----\----;
                      AND.B #$08                          ;;----|A02F/----\----;
                      BNE CODE_01A068                     ;;----|A031/----\----;
                      LDA.B !SpriteNumber,X               ;;----|A033/----\----; \ Branch if sprite >= #$15 
                      CMP.B #$15                          ;;----|A035/----\----;  | 
                      BCS CODE_01A041                     ;;----|A037/----\----; / 
                      LDA.B !byetudlrHold                 ;;----|A039/----\----;
                      AND.B #$04                          ;;----|A03B/----\----;
                      BEQ CODE_01A079                     ;;----|A03D/----\----;
                      BRA CODE_01A047                     ;;----|A03F/----\----;
                                                          ;;                   ;
CODE_01A041:          LDA.B !byetudlrHold                 ;;----|A041/----\----;
                      AND.B #$03                          ;;----|A043/----\----;
                      BNE CODE_01A079                     ;;----|A045/----\----;
CODE_01A047:          LDY.B !PlayerDirection              ;;----|A047/----\----;
                      LDA.B !PlayerXPosNow                ;;----|A049/----\----;
                      CLC                                 ;;----|A04B/----\----;
                      ADC.W DATA_019F67,Y                 ;;----|A04C/----\----;
                      STA.B !SpriteXPosLow,X              ;;----|A04F/----\----;
                      LDA.B !PlayerXPosNow+1              ;;----|A051/----\----;
                      ADC.W DATA_019F69,Y                 ;;----|A053/----\----;
                      STA.W !SpriteYPosHigh,X             ;;----|A056/----\----;
                      JSR SubHorizPos                     ;;----|A059/----\----;
                      LDA.W DATA_019F99,Y                 ;;----|A05C/----\----;
                      CLC                                 ;;----|A05F/----\----;
                      ADC.B !PlayerXSpeed                 ;;----|A060/----\----;
                      STA.B !SpriteXSpeed,X               ;;----|A062/----\----;
                      STZ.B !SpriteYSpeed,X               ;;----|A064/----\----; Sprite Y Speed = 0 
                      BRA CODE_01A0A6                     ;;----|A066/----\----;
                                                          ;;                   ;
CODE_01A068:          JSL CODE_01AB6F                     ;;----|A068/----\----;
                      LDA.B #$90                          ;;----|A06C/----\----;
                      STA.B !SpriteYSpeed,X               ;;----|A06E/----\----;
                      LDA.B !PlayerXSpeed                 ;;----|A070/----\----;
                      STA.B !SpriteXSpeed,X               ;;----|A072/----\----;
                      ASL A                               ;;----|A074/----\----;
                      ROR.B !SpriteXSpeed,X               ;;----|A075/----\----;
                      BRA CODE_01A0A6                     ;;----|A077/----\----;
                                                          ;;                   ;
CODE_01A079:          JSL CODE_01AB6F                     ;;----|A079/----\----;
                      LDA.W !SpriteMisc1540,X             ;;----|A07D/----\----;
                      STA.B !SpriteTableC2,X              ;;----|A080/----\----;
                      LDA.B #$0A                          ;;----|A082/----\----; \ Sprite status = Kicked 
                      STA.W !SpriteStatus,X               ;;----|A084/----\----; / 
                      LDY.B !PlayerDirection              ;;----|A087/----\----;
                      LDA.W !PlayerRidingYoshi            ;;----|A089/----\----;
                      BEQ +                               ;;----|A08C/----\----;
                      INY                                 ;;----|A08E/----\----;
                      INY                                 ;;----|A08F/----\----;
                    + LDA.W ShellSpeedX,Y                 ;;----|A090/----\----;
                      STA.B !SpriteXSpeed,X               ;;----|A093/----\----;
                      EOR.B !PlayerXSpeed                 ;;----|A095/----\----;
                      BMI CODE_01A0A6                     ;;----|A097/----\----;
                      LDA.B !PlayerXSpeed                 ;;----|A099/----\----;
                      STA.B !_0                           ;;----|A09B/----\----;
                      ASL.B !_0                           ;;----|A09D/----\----;
                      ROR A                               ;;----|A09F/----\----;
                      CLC                                 ;;----|A0A0/----\----;
                      ADC.W ShellSpeedX,Y                 ;;----|A0A1/----\----;
                      STA.B !SpriteXSpeed,X               ;;----|A0A4/----\----;
CODE_01A0A6:          LDA.B #$10                          ;;----|A0A6/----\----;
                      STA.W !SpriteMisc154C,X             ;;----|A0A8/----\----;
                      LDA.B #$0C                          ;;----|A0AB/----\----;
                      STA.W !KickingTimer                 ;;----|A0AD/----\----;
                      RTS                                 ;;----|A0B0/----\----; Return 
                                                          ;;                   ;
CODE_01A0B1:          LDY.B #$00                          ;;----|A0B1/----\----;
                      LDA.B !PlayerDirection              ;;----|A0B3/----\----; \ Y = Mario's direction 
                      BNE +                               ;;----|A0B5/----\----;  | 
                      INY                                 ;;----|A0B7/----\----; / 
                    + LDA.W !FaceScreenTimer              ;;----|A0B8/----\----;
                      BEQ +                               ;;----|A0BB/----\----;
                      INY                                 ;;----|A0BD/----\----;
                      INY                                 ;;----|A0BE/----\----;
                      CMP.B #$05                          ;;----|A0BF/----\----;
                      BCC +                               ;;----|A0C1/----\----;
                      INY                                 ;;----|A0C3/----\----;
                    + LDA.W !YoshiInPipeSetting           ;;----|A0C4/----\----;
                      BEQ CODE_01A0CD                     ;;----|A0C7/----\----;
                      CMP.B #$02                          ;;----|A0C9/----\----;
                      BEQ CODE_01A0D4                     ;;----|A0CB/----\----;
CODE_01A0CD:          LDA.W !PlayerTurningPose            ;;----|A0CD/----\----;
                      ORA.B !PlayerIsClimbing             ;;----|A0D0/----\----;
                      BEQ +                               ;;----|A0D2/----\----;
CODE_01A0D4:          LDY.B #$05                          ;;----|A0D4/----\----;
                    + PHY                                 ;;----|A0D6/----\----;
                      LDY.B #$00                          ;;----|A0D7/----\----;
                      LDA.W !StandOnSolidSprite           ;;----|A0D9/----\----;
                      CMP.B #$03                          ;;----|A0DC/----\----;
                      BEQ +                               ;;----|A0DE/----\----;
                      LDY.B #$3D                          ;;----|A0E0/----\----;
                    + LDA.W !PlayerXPosNext,Y             ;;----|A0E2/----\----; \ $00 = Mario's X position 
                      STA.B !_0                           ;;----|A0E5/----\----;  | 
                      LDA.W !PlayerXPosNext+1,Y           ;;----|A0E7/----\----;  | 
                      STA.B !_1                           ;;----|A0EA/----\----; / 
                      LDA.W !PlayerYPosNext,Y             ;;----|A0EC/----\----; \ $02 = Mario's Y position 
                      STA.B !_2                           ;;----|A0EF/----\----;  | 
                      LDA.W !PlayerYPosNext+1,Y           ;;----|A0F1/----\----;  | 
                      STA.B !_3                           ;;----|A0F4/----\----; / 
                      PLY                                 ;;----|A0F6/----\----;
                      LDA.B !_0                           ;;----|A0F7/----\----;
                      CLC                                 ;;----|A0F9/----\----;
                      ADC.W DATA_019F5B,Y                 ;;----|A0FA/----\----;
                      STA.B !SpriteXPosLow,X              ;;----|A0FD/----\----;
                      LDA.B !_1                           ;;----|A0FF/----\----;
                      ADC.W DATA_019F61,Y                 ;;----|A101/----\----;
                      STA.W !SpriteYPosHigh,X             ;;----|A104/----\----;
                      LDA.B #$0D                          ;;----|A107/----\----;
                      LDY.B !PlayerIsDucking              ;;----|A109/----\----; \ Branch if ducking 
                      BNE CODE_01A111                     ;;----|A10B/----\----; / 
                      LDY.B !Powerup                      ;;----|A10D/----\----; \ Branch if Mario isn't small 
                      BNE +                               ;;----|A10F/----\----; / 
CODE_01A111:          LDA.B #$0F                          ;;----|A111/----\----;
                    + LDY.W !PickUpItemTimer              ;;----|A113/----\----;
                      BEQ +                               ;;----|A116/----\----;
                      LDA.B #$0F                          ;;----|A118/----\----;
                    + CLC                                 ;;----|A11A/----\----;
                      ADC.B !_2                           ;;----|A11B/----\----;
                      STA.B !SpriteYPosLow,X              ;;----|A11D/----\----;
                      LDA.B !_3                           ;;----|A11F/----\----;
                      ADC.B #$00                          ;;----|A121/----\----;
                      STA.W !SpriteXPosHigh,X             ;;----|A123/----\----;
                      LDA.B #$01                          ;;----|A126/----\----;
                      STA.W !IsCarryingItem               ;;----|A128/----\----;
                      STA.W !CarryingFlag                 ;;----|A12B/----\----; Set carrying enemy flag 
                      RTS                                 ;;----|A12E/----\----; Return 
                                                          ;;                   ;
StunGoomba:           LDA.B !EffFrame                     ;;----|A12F/----\----;
                      LSR A                               ;;----|A131/----\----;
                      LSR A                               ;;----|A132/----\----;
                      LDY.W !SpriteMisc1540,X             ;;----|A133/----\----;
                      CPY.B #$30                          ;;----|A136/----\----;
                      BCC +                               ;;----|A138/----\----;
                      LSR A                               ;;----|A13A/----\----;
                    + AND.B #$01                          ;;----|A13B/----\----;
                      STA.W !SpriteMisc1602,X             ;;----|A13D/----\----;
                      CPY.B #$08                          ;;----|A140/----\----;
                      BNE +                               ;;----|A142/----\----;
                      JSR IsOnGround                      ;;----|A144/----\----;
                      BEQ +                               ;;----|A147/----\----;
                      LDA.B #$D8                          ;;----|A149/----\----;
                      STA.B !SpriteYSpeed,X               ;;----|A14B/----\----;
                    + LDA.B #$80                          ;;----|A14D/----\----;
                      JMP SubSprGfx2Entry0                ;;----|A14F/----\----;
                                                          ;;                   ;
StunMechaKoopa:       LDA.B !Layer1XPos                   ;;----|A152/----\----;
                      PHA                                 ;;----|A154/----\----;
                      LDA.W !SpriteMisc1540,X             ;;----|A155/----\----;
                      CMP.B #$30                          ;;----|A158/----\----;
                      BCS +                               ;;----|A15A/----\----;
                      AND.B #$01                          ;;----|A15C/----\----;
                      EOR.B !Layer1XPos                   ;;----|A15E/----\----;
                      STA.B !Layer1XPos                   ;;----|A160/----\----;
                    + JSL CODE_03B307                     ;;----|A162/----\----;
                      PLA                                 ;;----|A166/----\----;
                      STA.B !Layer1XPos                   ;;----|A167/----\----;
CODE_01A169:          LDA.W !SpriteStatus,X               ;;----|A169/----\----; \ If sprite status == Carried, 
                      CMP.B #$0B                          ;;----|A16C/----\----;  | 
                      BNE +                               ;;----|A16E/----\----;  | 
                      LDA.B !PlayerDirection              ;;----|A170/----\----;  | Sprite direction = Opposite direction of Mario 
                      EOR.B #$01                          ;;----|A172/----\----;  | 
                      STA.W !SpriteMisc157C,X             ;;----|A174/----\----; / 
                    + RTS                                 ;;----|A177/----\----; Return 
                                                          ;;                   ;
StunFish:             JSR SetAnimationFrame               ;;----|A178/----\----;
                      LDA.W !SpriteOBJAttribute,X         ;;----|A17B/----\----;
                      ORA.B #$80                          ;;----|A17E/----\----;
                      STA.W !SpriteOBJAttribute,X         ;;----|A180/----\----;
                      JSR SubSprGfx2Entry1                ;;----|A183/----\----;
                      RTS                                 ;;----|A186/----\----; Return 
                                                          ;;                   ;
CODE_01A187:          LDA.W !SpriteTweakerD,X             ;;----|A187/----\----; \ Branch if sprite changes into a shell 
                      AND.B #$08                          ;;----|A18A/----\----;  | 
                      BEQ CODE_01A1D0                     ;;----|A18C/----\----; / 
                      LDA.B !SpriteNumber,X               ;;----|A18E/----\----;
                      CMP.B #$A2                          ;;----|A190/----\----;
                      BEQ StunMechaKoopa                  ;;----|A192/----\----;
                      CMP.B #$15                          ;;----|A194/----\----;
                      BEQ StunFish                        ;;----|A196/----\----;
                      CMP.B #$16                          ;;----|A198/----\----;
                      BEQ StunFish                        ;;----|A19A/----\----;
                      CMP.B #$0F                          ;;----|A19C/----\----;
                      BEQ StunGoomba                      ;;----|A19E/----\----;
                      CMP.B #$53                          ;;----|A1A0/----\----;
                      BEQ StunThrowBlock                  ;;----|A1A2/----\----;
                      CMP.B #$2C                          ;;----|A1A4/----\----;
                      BEQ StunYoshiEgg                    ;;----|A1A6/----\----;
                      CMP.B #$80                          ;;----|A1A8/----\----;
                      BEQ StunKey                         ;;----|A1AA/----\----;
                      CMP.B #$7D                          ;;----|A1AC/----\----;
                      BEQ Return01A1D3                    ;;----|A1AE/----\----;
                      CMP.B #$3E                          ;;----|A1B0/----\----;
                      BEQ StunPow                         ;;----|A1B2/----\----;
                      CMP.B #$2F                          ;;----|A1B4/----\----;
                      BEQ StunSpringBoard                 ;;----|A1B6/----\----;
                      CMP.B #$0D                          ;;----|A1B8/----\----;
                      BEQ StunBomb                        ;;----|A1BA/----\----;
                      CMP.B #$2D                          ;;----|A1BC/----\----;
                      BEQ StunBabyYoshi                   ;;----|A1BE/----\----;
                      CMP.B #$85                          ;;----|A1C0/----\----;
                      BNE CODE_01A1D0                     ;;----|A1C2/----\----;
                      JSR SubSprGfx2Entry1                ;;----|A1C4/----\----; \ Handle unused sprite 85 
                      LDY.W !SpriteOAMIndex,X             ;;----|A1C7/----\----;  | 
                      LDA.B #$47                          ;;----|A1CA/----\----;  | Set OAM with tile #$47 
                      STA.W !OAMTileNo+$100,Y             ;;----|A1CC/----\----; / 
                      RTS                                 ;;----|A1CF/----\----; Return 
                                                          ;;                   ;
CODE_01A1D0:          JSR CODE_019806                     ;;----|A1D0/----\----;
Return01A1D3:         RTS                                 ;;----|A1D3/----\----; Return 
                                                          ;;                   ;
StunThrowBlock:       LDA.W !SpriteMisc1540,X             ;;----|A1D4/----\----;
                      CMP.B #$40                          ;;----|A1D7/----\----;
                      BCS CODE_01A1DE                     ;;----|A1D9/----\----;
                      LSR A                               ;;----|A1DB/----\----;
                      BCS StunYoshiEgg                    ;;----|A1DC/----\----;
CODE_01A1DE:          LDA.W !SpriteOBJAttribute,X         ;;----|A1DE/----\----;
                      INC A                               ;;----|A1E1/----\----;
                      INC A                               ;;----|A1E2/----\----;
                      AND.B #$0F                          ;;----|A1E3/----\----;
                      STA.W !SpriteOBJAttribute,X         ;;----|A1E5/----\----;
StunYoshiEgg:         JSR SubSprGfx2Entry1                ;;----|A1E8/----\----;
                      RTS                                 ;;----|A1EB/----\----; Return 
                                                          ;;                   ;
StunBomb:             JSR SubSprGfx2Entry1                ;;----|A1EC/----\----;
                      LDA.B #$CA                          ;;----|A1EF/----\----;
                      BRA CODE_01A222                     ;;----|A1F1/----\----;
                                                          ;;                   ;
StunKey:              JSR CODE_01A169                     ;;----|A1F3/----\----;
                      JSR SubSprGfx2Entry1                ;;----|A1F6/----\----;
                      LDA.B #$EC                          ;;----|A1F9/----\----;
                      BRA CODE_01A222                     ;;----|A1FB/----\----;
                                                          ;;                   ;
StunPow:              LDY.W !SpriteMisc163E,X             ;;----|A1FD/----\----;
                      BEQ CODE_01A218                     ;;----|A200/----\----;
                      CPY.B #$01                          ;;----|A202/----\----;
                      BNE +                               ;;----|A204/----\----;
                      JMP CODE_019ACB                     ;;----|A206/----\----;
                                                          ;;                   ;
                    + JSR SmushedGfxRt                    ;;----|A209/----\----;
                      LDY.W !SpriteOAMIndex,X             ;;----|A20C/----\----; Y = Index into sprite OAM 
                      LDA.W !OAMTileAttr+$100,Y           ;;----|A20F/----\----;
                      AND.B #$FE                          ;;----|A212/----\----;
                      STA.W !OAMTileAttr+$100,Y           ;;----|A214/----\----;
                      RTS                                 ;;----|A217/----\----; Return 
                                                          ;;                   ;
CODE_01A218:          LDA.B #$01                          ;;----|A218/----\----;
                      STA.W !SpriteMisc157C,X             ;;----|A21A/----\----;
                      JSR SubSprGfx2Entry1                ;;----|A21D/----\----;
                      LDA.B #$42                          ;;----|A220/----\----;
CODE_01A222:          LDY.W !SpriteOAMIndex,X             ;;----|A222/----\----; Y = Index into sprite OAM 
                      STA.W !OAMTileNo+$100,Y             ;;----|A225/----\----;
                      RTS                                 ;;----|A228/----\----; Return 
                                                          ;;                   ;
StunSpringBoard:      JMP CODE_01E6F0                     ;;----|A229/----\----;
                                                          ;;                   ;
StunBabyYoshi:        LDA.B !SpriteLock                   ;;----|A22C/----\----; \ Branch if sprites locked 
                      BNE CODE_01A27B                     ;;----|A22E/----\----; / 
                      LDA.B !SpriteXPosLow,X              ;;----|A230/----\----;
                      CLC                                 ;;----|A232/----\----;
                      ADC.B #$08                          ;;----|A233/----\----;
                      STA.B !_0                           ;;----|A235/----\----;
                      LDA.W !SpriteYPosHigh,X             ;;----|A237/----\----;
                      ADC.B #$00                          ;;----|A23A/----\----;
                      STA.B !_8                           ;;----|A23C/----\----;
                      LDA.B !SpriteYPosLow,X              ;;----|A23E/----\----;
                      CLC                                 ;;----|A240/----\----;
                      ADC.B #$08                          ;;----|A241/----\----;
                      STA.B !_1                           ;;----|A243/----\----;
                      LDA.W !SpriteXPosHigh,X             ;;----|A245/----\----;
                      ADC.B #$00                          ;;----|A248/----\----;
                      STA.B !_9                           ;;----|A24A/----\----;
                      JSL CODE_02B9FA                     ;;----|A24C/----\----;
                      JSL CODE_02EA4E                     ;;----|A250/----\----;
                      LDA.W !SpriteMisc163E,X             ;;----|A254/----\----;
                      BNE CODE_01A27E                     ;;----|A257/----\----;
                      DEC A                               ;;----|A259/----\----;
                      STA.W !SpriteMisc160E,X             ;;----|A25A/----\----;
                      LDA.W !SpriteStatus,X               ;;----|A25D/----\----; \ Branch if sprite status != Stunned 
                      CMP.B #$09                          ;;----|A260/----\----;  | 
                      BNE +                               ;;----|A262/----\----; / 
                      JSR IsOnGround                      ;;----|A264/----\----;
                      BEQ +                               ;;----|A267/----\----;
                      LDA.B #$F0                          ;;----|A269/----\----;
                      STA.B !SpriteYSpeed,X               ;;----|A26B/----\----;
                    + LDY.B #$00                          ;;----|A26D/----\----;
                      LDA.B !EffFrame                     ;;----|A26F/----\----;
                      AND.B #$18                          ;;----|A271/----\----;
                      BNE +                               ;;----|A273/----\----;
                      LDY.B #$03                          ;;----|A275/----\----;
                    + TYA                                 ;;----|A277/----\----;
                      STA.W !SpriteMisc1602,X             ;;----|A278/----\----;
CODE_01A27B:          JMP CODE_01A34F                     ;;----|A27B/----\----;
                                                          ;;                   ;
CODE_01A27E:          STZ.W !SpriteOAMIndex,X             ;;----|A27E/----\----;
                      CMP.B #$20                          ;;----|A281/----\----;
                      BEQ +                               ;;----|A283/----\----;
                      JMP CODE_01A30A                     ;;----|A285/----\----;
                                                          ;;                   ;
                    + LDY.W !SpriteMisc160E,X             ;;----|A288/----\----;
                      LDA.B #$00                          ;;----|A28B/----\----; \ Clear sprite status 
                      STA.W !SpriteStatus,Y               ;;----|A28D/----\----; / 
                      LDA.B #$06                          ;;----|A290/----\----;
                      STA.W !SPCIO0                       ;;----|A292/----\----; / Play sound effect 
                      LDA.W !SpriteMisc160E,Y             ;;----|A295/----\----;
                      BNE CODE_01A2F4                     ;;----|A298/----\----;
                      LDA.W !SpriteNumber,Y               ;;----|A29A/----\----; \ Branch if not Changing power up 
                      CMP.B #$81                          ;;----|A29D/----\----;  | 
                      BNE +                               ;;----|A29F/----\----; / 
                      LDA.B !EffFrame                     ;;----|A2A1/----\----;
                      LSR A                               ;;----|A2A3/----\----;
                      LSR A                               ;;----|A2A4/----\----;
                      LSR A                               ;;----|A2A5/----\----;
                      LSR A                               ;;----|A2A6/----\----;
                      AND.B #$03                          ;;----|A2A7/----\----;
                      TAY                                 ;;----|A2A9/----\----;
                      LDA.W ChangingItemSprite,Y          ;;----|A2AA/----\----;
                    + CMP.B #$74                          ;;----|A2AD/----\----;
                      BCC CODE_01A2F4                     ;;----|A2AF/----\----;
                      CMP.B #$78                          ;;----|A2B1/----\----;
                      BCS CODE_01A2F4                     ;;----|A2B3/----\----;
CODE_01A2B5:          STZ.W !YoshiSwallowTimer            ;;----|A2B5/----\----;
                      STZ.W !YoshiHasWingsEvt             ;;----|A2B8/----\----; No Yoshi wings 
                      LDA.B #$35                          ;;----|A2BB/----\----; \ Sprite = Yoshi 
                      STA.W !SpriteNumber,X               ;;----|A2BD/----\----; / 
                      LDA.B #$08                          ;;----|A2C0/----\----; \ Sprite status = Normal 
                      STA.W !SpriteStatus,X               ;;----|A2C2/----\----; / 
                      LDA.B #$1F                          ;;----|A2C5/----\----;
                      STA.W !SPCIO3                       ;;----|A2C7/----\----; / Play sound effect 
                      LDA.B !SpriteYPosLow,X              ;;----|A2CA/----\----;
                      SBC.B #$10                          ;;----|A2CC/----\----;
                      STA.B !SpriteYPosLow,X              ;;----|A2CE/----\----;
                      LDA.W !SpriteXPosHigh,X             ;;----|A2D0/----\----;
                      SBC.B #$00                          ;;----|A2D3/----\----;
                      STA.W !SpriteXPosHigh,X             ;;----|A2D5/----\----;
                      LDA.W !SpriteOBJAttribute,X         ;;----|A2D8/----\----;
                      PHA                                 ;;----|A2DB/----\----; \ Reset sprite tables 
                      JSL InitSpriteTables                ;;----|A2DC/----\----;  | 
                      PLA                                 ;;----|A2E0/----\----; / 
                      AND.B #$FE                          ;;----|A2E1/----\----;
                      STA.W !SpriteOBJAttribute,X         ;;----|A2E3/----\----;
                      LDA.B #$0C                          ;;----|A2E6/----\----;
                      STA.W !SpriteMisc1602,X             ;;----|A2E8/----\----;
                      DEC.W !SpriteMisc160E,X             ;;----|A2EB/----\----;
                      LDA.B #$40                          ;;----|A2EE/----\----;
                      STA.W !YoshiGrowingTimer            ;;----|A2F0/----\----;
                      RTS                                 ;;----|A2F3/----\----; Return 
                                                          ;;                   ;
CODE_01A2F4:          INC.W !SpriteMisc1570,X             ;;----|A2F4/----\----;
                      LDA.W !SpriteMisc1570,X             ;;----|A2F7/----\----;
                      CMP.B #$05                          ;;----|A2FA/----\----;
                      BNE CODE_01A300                     ;;----|A2FC/----\----;
                      BRA CODE_01A2B5                     ;;----|A2FE/----\----;
                                                          ;;                   ;
CODE_01A300:          JSL CODE_05B34A                     ;;----|A300/----\----;
                      LDA.B #$01                          ;;----|A304/----\----;
                      JSL GivePoints                      ;;----|A306/----\----;
CODE_01A30A:          LDA.W !SpriteMisc163E,X             ;;----|A30A/----\----;
                      LSR A                               ;;----|A30D/----\----;
                      LSR A                               ;;----|A30E/----\----;
                      LSR A                               ;;----|A30F/----\----;
                      TAY                                 ;;----|A310/----\----;
                      LDA.W DATA_01A35A,Y                 ;;----|A311/----\----;
                      STA.W !SpriteMisc1602,X             ;;----|A314/----\----;
                      STZ.B !_1                           ;;----|A317/----\----;
                      LDA.W !SpriteMisc163E,X             ;;----|A319/----\----;
                      CMP.B #$20                          ;;----|A31C/----\----;
                      BCC CODE_01A34F                     ;;----|A31E/----\----;
                      SBC.B #$10                          ;;----|A320/----\----;
                      LSR A                               ;;----|A322/----\----;
                      LSR A                               ;;----|A323/----\----;
                      LDY.W !SpriteMisc157C,X             ;;----|A324/----\----;
                      BEQ +                               ;;----|A327/----\----;
                      EOR.B #$FF                          ;;----|A329/----\----;
                      INC A                               ;;----|A32B/----\----;
                      DEC.B !_1                           ;;----|A32C/----\----;
                    + LDY.W !SpriteMisc160E,X             ;;----|A32E/----\----;
                      CLC                                 ;;----|A331/----\----;
                      ADC.B !SpriteXPosLow,X              ;;----|A332/----\----;
                      STA.W !SpriteXPosLow,Y              ;;----|A334/----\----;
                      LDA.W !SpriteYPosHigh,X             ;;----|A337/----\----;
                      ADC.B !_1                           ;;----|A33A/----\----;
                      STA.W !SpriteYPosHigh,Y             ;;----|A33C/----\----;
                      LDA.B !SpriteYPosLow,X              ;;----|A33F/----\----;
                      SEC                                 ;;----|A341/----\----;
                      SBC.B #$02                          ;;----|A342/----\----;
                      STA.W !SpriteYPosLow,Y              ;;----|A344/----\----;
                      LDA.W !SpriteXPosHigh,X             ;;----|A347/----\----;
                      SBC.B #$00                          ;;----|A34A/----\----;
                      STA.W !SpriteXPosHigh,Y             ;;----|A34C/----\----;
CODE_01A34F:          JSR CODE_01A169                     ;;----|A34F/----\----;
                      JSR SubSprGfx2Entry1                ;;----|A352/----\----;
                      JSL CODE_02EA25                     ;;----|A355/----\----;
                      RTS                                 ;;----|A359/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
DATA_01A35A:          db $00,$03,$02,$02,$01,$01,$01      ;;----|A35A/----\----;
                                                          ;;                   ;
DATA_01A361:          db $10,$20                          ;;----|A361/----\----;
                                                          ;;                   ;
DATA_01A363:          db $01,$02                          ;;----|A363/----\----;
                                                          ;;                   ;
GetDrawInfoBnk1:      STZ.W !SpriteOffscreenVert,X        ;;----|A365/----\----;
                      STZ.W !SpriteOffscreenX,X           ;;----|A368/----\----;
                      LDA.B !SpriteXPosLow,X              ;;----|A36B/----\----;
                      CMP.B !Layer1XPos                   ;;----|A36D/----\----;
                      LDA.W !SpriteYPosHigh,X             ;;----|A36F/----\----;
                      SBC.B !Layer1XPos+1                 ;;----|A372/----\----;
                      BEQ +                               ;;----|A374/----\----;
                      INC.W !SpriteOffscreenX,X           ;;----|A376/----\----;
                    + LDA.W !SpriteYPosHigh,X             ;;----|A379/----\----;
                      XBA                                 ;;----|A37C/----\----;
                      LDA.B !SpriteXPosLow,X              ;;----|A37D/----\----;
                      REP #$20                            ;;----|A37F/----\----; Accum (16 bit) 
                      SEC                                 ;;----|A381/----\----;
                      SBC.B !Layer1XPos                   ;;----|A382/----\----;
                      CLC                                 ;;----|A384/----\----;
                      ADC.W #$0040                        ;;----|A385/----\----;
                      CMP.W #$0180                        ;;----|A388/----\----;
                      SEP #$20                            ;;----|A38B/----\----; Accum (8 bit) 
                      ROL A                               ;;----|A38D/----\----;
                      AND.B #$01                          ;;----|A38E/----\----;
                      STA.W !SpriteWayOffscreenX,X        ;;----|A390/----\----;
                      BNE CODE_01A3CB                     ;;----|A393/----\----;
                      LDY.B #$00                          ;;----|A395/----\----;
                      LDA.W !SpriteStatus,X               ;;----|A397/----\----; \ Branch if sprite status == Stunned 
                      CMP.B #$09                          ;;----|A39A/----\----;  | 
                      BEQ CODE_01A3A6                     ;;----|A39C/----\----; / 
                      LDA.W !SpriteTweakerF,X             ;;----|A39E/----\----; \ Branch if "Death frame 2 tiles high" 
                      AND.B #$20                          ;;----|A3A1/----\----;  | is NOT set 
                      BEQ CODE_01A3A6                     ;;----|A3A3/----\----; / 
                      INY                                 ;;----|A3A5/----\----;
CODE_01A3A6:          LDA.B !SpriteYPosLow,X              ;;----|A3A6/----\----;
                      CLC                                 ;;----|A3A8/----\----;
                      ADC.W DATA_01A361,Y                 ;;----|A3A9/----\----;
                      PHP                                 ;;----|A3AC/----\----;
                      CMP.B !Layer1YPos                   ;;----|A3AD/----\----;
                      ROL.B !_0                           ;;----|A3AF/----\----;
                      PLP                                 ;;----|A3B1/----\----;
                      LDA.W !SpriteXPosHigh,X             ;;----|A3B2/----\----;
                      ADC.B #$00                          ;;----|A3B5/----\----;
                      LSR.B !_0                           ;;----|A3B7/----\----;
                      SBC.B !Layer1YPos+1                 ;;----|A3B9/----\----;
                      BEQ +                               ;;----|A3BB/----\----;
                      LDA.W !SpriteOffscreenVert,X        ;;----|A3BD/----\----;
                      ORA.W DATA_01A363,Y                 ;;----|A3C0/----\----;
                      STA.W !SpriteOffscreenVert,X        ;;----|A3C3/----\----;
                    + DEY                                 ;;----|A3C6/----\----;
                      BPL CODE_01A3A6                     ;;----|A3C7/----\----;
                      BRA +                               ;;----|A3C9/----\----;
                                                          ;;                   ;
CODE_01A3CB:          PLA                                 ;;----|A3CB/----\----;
                      PLA                                 ;;----|A3CC/----\----;
                    + LDY.W !SpriteOAMIndex,X             ;;----|A3CD/----\----; Y = Index into sprite OAM 
                      LDA.B !SpriteXPosLow,X              ;;----|A3D0/----\----;
                      SEC                                 ;;----|A3D2/----\----;
                      SBC.B !Layer1XPos                   ;;----|A3D3/----\----;
                      STA.B !_0                           ;;----|A3D5/----\----;
                      LDA.B !SpriteYPosLow,X              ;;----|A3D7/----\----;
                      SEC                                 ;;----|A3D9/----\----;
                      SBC.B !Layer1YPos                   ;;----|A3DA/----\----;
                      STA.B !_1                           ;;----|A3DC/----\----;
                      RTS                                 ;;----|A3DE/----\----; Return 
                                                          ;;                   ;
CODE_01A3DF:          LDA.W !SpriteOffscreenVert,X        ;;----|A3DF/----\----;
                      BEQ Return01A40A                    ;;----|A3E2/----\----;
                      PHX                                 ;;----|A3E4/----\----;
                      LSR A                               ;;----|A3E5/----\----;
                      BCC +                               ;;----|A3E6/----\----;
                      PHA                                 ;;----|A3E8/----\----;
                      LDA.B #$01                          ;;----|A3E9/----\----;
                      STA.W !OAMTileSize+$40,Y            ;;----|A3EB/----\----;
                      TYA                                 ;;----|A3EE/----\----;
                      ASL A                               ;;----|A3EF/----\----;
                      ASL A                               ;;----|A3F0/----\----;
                      TAX                                 ;;----|A3F1/----\----;
                      LDA.B #$80                          ;;----|A3F2/----\----;
                      STA.W !OAMTileXPos+$100,X           ;;----|A3F4/----\----;
                      PLA                                 ;;----|A3F7/----\----;
                    + LSR A                               ;;----|A3F8/----\----;
                      BCC +                               ;;----|A3F9/----\----;
                      LDA.B #$01                          ;;----|A3FB/----\----;
                      STA.W !OAMTileSize+$41,Y            ;;----|A3FD/----\----;
                      TYA                                 ;;----|A400/----\----;
                      ASL A                               ;;----|A401/----\----;
                      ASL A                               ;;----|A402/----\----;
                      TAX                                 ;;----|A403/----\----;
                      LDA.B #$80                          ;;----|A404/----\----;
                      STA.W !OAMTileXPos+$104,X           ;;----|A406/----\----;
                    + PLX                                 ;;----|A409/----\----;
Return01A40A:         RTS                                 ;;----|A40A/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
DATA_01A40B:          db $02,$0A                          ;;----|A40B/----\----;
                                                          ;;                   ;
SubSprSprInteract:    TXA                                 ;;----|A40D/----\----;
                      BEQ Return01A40A                    ;;----|A40E/----\----;
                      TAY                                 ;;----|A410/----\----;
                      EOR.B !TrueFrame                    ;;----|A411/----\----; \ Return every other frame 
                      LSR A                               ;;----|A413/----\----;  | 
                      BCC Return01A40A                    ;;----|A414/----\----; / 
                      DEX                                 ;;----|A416/----\----;
CODE_01A417:          LDA.W !SpriteStatus,X               ;;----|A417/----\----; \ Jump to $01A4B0 if 
                      CMP.B #$08                          ;;----|A41A/----\----;  | sprite status < 8 
                      BCS +                               ;;----|A41C/----\----;  | 
                      JMP CODE_01A4B0                     ;;----|A41E/----\----; / 
                                                          ;;                   ;
                    + LDA.W !SpriteTweakerE,X             ;;----|A421/----\----;
                      ORA.W !SpriteTweakerE,Y             ;;----|A424/----\----;
                      AND.B #$08                          ;;----|A427/----\----;
                      ORA.W !SpriteMisc1564,X             ;;----|A429/----\----;
                      ORA.W !SpriteMisc1564,Y             ;;----|A42C/----\----;
                      ORA.W !SpriteOnYoshiTongue,X        ;;----|A42F/----\----;
                      ORA.W !SpriteBehindScene,X          ;;----|A432/----\----;
                      EOR.W !SpriteBehindScene,Y          ;;----|A435/----\----;
                      BNE CODE_01A4B0                     ;;----|A438/----\----;
                      STX.W !SpriteInterIndex             ;;----|A43A/----\----;
                      LDA.B !SpriteXPosLow,X              ;;----|A43D/----\----;
                      STA.B !_0                           ;;----|A43F/----\----;
                      LDA.W !SpriteYPosHigh,X             ;;----|A441/----\----;
                      STA.B !_1                           ;;----|A444/----\----;
                      LDA.W !SpriteXPosLow,Y              ;;----|A446/----\----;
                      STA.B !_2                           ;;----|A449/----\----;
                      LDA.W !SpriteYPosHigh,Y             ;;----|A44B/----\----;
                      STA.B !_3                           ;;----|A44E/----\----;
                      REP #$20                            ;;----|A450/----\----; Accum (16 bit) 
                      LDA.B !_0                           ;;----|A452/----\----;
                      SEC                                 ;;----|A454/----\----;
                      SBC.B !_2                           ;;----|A455/----\----;
                      CLC                                 ;;----|A457/----\----;
                      ADC.W #$0010                        ;;----|A458/----\----;
                      CMP.W #$0020                        ;;----|A45B/----\----;
                      SEP #$20                            ;;----|A45E/----\----; Accum (8 bit) 
                      BCS CODE_01A4B0                     ;;----|A460/----\----;
                      LDY.B #$00                          ;;----|A462/----\----;
                      LDA.W !SpriteTweakerB,X             ;;----|A464/----\----;
                      AND.B #$0F                          ;;----|A467/----\----;
                      BEQ +                               ;;----|A469/----\----;
                      INY                                 ;;----|A46B/----\----;
                    + LDA.B !SpriteYPosLow,X              ;;----|A46C/----\----;
                      CLC                                 ;;----|A46E/----\----;
                      ADC.W DATA_01A40B,Y                 ;;----|A46F/----\----;
                      STA.B !_0                           ;;----|A472/----\----;
                      LDA.W !SpriteXPosHigh,X             ;;----|A474/----\----;
                      ADC.B #$00                          ;;----|A477/----\----;
                      STA.B !_1                           ;;----|A479/----\----;
                      LDY.W !CurSpriteProcess             ;;----|A47B/----\----; Y = Sprite index 
                      LDX.B #$00                          ;;----|A47E/----\----;
                      LDA.W !SpriteTweakerB,Y             ;;----|A480/----\----;
                      AND.B #$0F                          ;;----|A483/----\----;
                      BEQ +                               ;;----|A485/----\----;
                      INX                                 ;;----|A487/----\----;
                    + LDA.W !SpriteYPosLow,Y              ;;----|A488/----\----;
                      CLC                                 ;;----|A48B/----\----;
                      %LorW_X(ADC,DATA_01A40B)            ;;----|A48C/----\----;
                      STA.B !_2                           ;;----|A48F/----\----;
                      LDA.W !SpriteXPosHigh,Y             ;;----|A491/----\----;
                      ADC.B #$00                          ;;----|A494/----\----;
                      STA.B !_3                           ;;----|A496/----\----;
                      LDX.W !SpriteInterIndex             ;;----|A498/----\----;
                      REP #$20                            ;;----|A49B/----\----; Accum (16 bit) 
                      LDA.B !_0                           ;;----|A49D/----\----;
                      SEC                                 ;;----|A49F/----\----;
                      SBC.B !_2                           ;;----|A4A0/----\----;
                      CLC                                 ;;----|A4A2/----\----;
                      ADC.W #$000C                        ;;----|A4A3/----\----;
                      CMP.W #$0018                        ;;----|A4A6/----\----;
                      SEP #$20                            ;;----|A4A9/----\----; Accum (8 bit) 
                      BCS CODE_01A4B0                     ;;----|A4AB/----\----;
                      JSR CODE_01A4BA                     ;;----|A4AD/----\----;
CODE_01A4B0:          DEX                                 ;;----|A4B0/----\----;
                      BMI +                               ;;----|A4B1/----\----;
                      JMP CODE_01A417                     ;;----|A4B3/----\----;
                                                          ;;                   ;
                    + LDX.W !CurSpriteProcess             ;;----|A4B6/----\----; X = Sprite index 
                      RTS                                 ;;----|A4B9/----\----; Return 
                                                          ;;                   ;
CODE_01A4BA:          LDA.W !SpriteStatus,Y               ;;----|A4BA/----\----; \ Branch if sprite 2 status == Normal 
                      CMP.B #$08                          ;;----|A4BD/----\----;  | 
                      BEQ CODE_01A4CE                     ;;----|A4BF/----\----; / 
                      CMP.B #$09                          ;;----|A4C1/----\----; \ Branch if sprite 2 status == Carryable 
                      BEQ CODE_01A4E2                     ;;----|A4C3/----\----; / 
                      CMP.B #$0A                          ;;----|A4C5/----\----; \ Branch if sprite 2 status == Kicked 
                      BEQ CODE_01A506                     ;;----|A4C7/----\----; / 
                      CMP.B #$0B                          ;;----|A4C9/----\----; \ Branch if sprite 2 status == Carried 
                      BEQ CODE_01A51A                     ;;----|A4CB/----\----; / 
                      RTS                                 ;;----|A4CD/----\----; Return 
                                                          ;;                   ;
CODE_01A4CE:          LDA.W !SpriteStatus,X               ;;----|A4CE/----\----; \ Branch if sprite status == Normal 
                      CMP.B #$08                          ;;----|A4D1/----\----;  | 
                      BEQ CODE_01A53D                     ;;----|A4D3/----\----; / 
                      CMP.B #$09                          ;;----|A4D5/----\----; \ Branch if sprite status == Carryable 
                      BEQ CODE_01A540                     ;;----|A4D7/----\----; / 
                      CMP.B #$0A                          ;;----|A4D9/----\----; \ Branch if sprite status == Kicked 
                      BEQ CODE_01A537                     ;;----|A4DB/----\----; / 
                      CMP.B #$0B                          ;;----|A4DD/----\----; \ Branch if sprite status == Carried 
                      BEQ CODE_01A534                     ;;----|A4DF/----\----; / 
                      RTS                                 ;;----|A4E1/----\----; Return 
                                                          ;;                   ;
CODE_01A4E2:          LDA.W !SpriteBlockedDirs,Y          ;;----|A4E2/----\----; \ Branch if on ground 
                      AND.B #$04                          ;;----|A4E5/----\----;  | 
                      BNE CODE_01A4F2                     ;;----|A4E7/----\----; / 
                      LDA.W !SpriteNumber,Y               ;;----|A4E9/----\----; \ Branch if Goomba 
                      CMP.B #$0F                          ;;----|A4EC/----\----;  | 
                      BEQ CODE_01A534                     ;;----|A4EE/----\----; / 
                      BRA CODE_01A506                     ;;----|A4F0/----\----;
                                                          ;;                   ;
CODE_01A4F2:          LDA.W !SpriteStatus,X               ;;----|A4F2/----\----; \ Branch if sprite status == Normal 
                      CMP.B #$08                          ;;----|A4F5/----\----;  | 
                      BEQ CODE_01A540                     ;;----|A4F7/----\----; / 
                      CMP.B #$09                          ;;----|A4F9/----\----; \ Branch if sprite status == Carryable 
                      BEQ CODE_01A555                     ;;----|A4FB/----\----; / 
                      CMP.B #$0A                          ;;----|A4FD/----\----; \ Branch if sprite status == Kicked 
                      BEQ ADDR_01A53A                     ;;----|A4FF/----\----; / 
                      CMP.B #$0B                          ;;----|A501/----\----; \ Branch if sprite status == Carried 
                      BEQ CODE_01A534                     ;;----|A503/----\----; / 
                      RTS                                 ;;----|A505/----\----; Return 
                                                          ;;                   ;
CODE_01A506:          LDA.W !SpriteStatus,X               ;;----|A506/----\----; \ Branch if sprite status == Normal 
                      CMP.B #$08                          ;;----|A509/----\----;  | 
                      BEQ CODE_01A52E                     ;;----|A50B/----\----; / 
                      CMP.B #$09                          ;;----|A50D/----\----; \ Branch if sprite status == Carryable 
                      BEQ CODE_01A531                     ;;----|A50F/----\----; / 
                      CMP.B #$0A                          ;;----|A511/----\----; \ Branch if sprite status == Kicked 
                      BEQ CODE_01A534                     ;;----|A513/----\----; / 
                      CMP.B #$0B                          ;;----|A515/----\----; \ Branch if sprite status == Carried 
                      BEQ CODE_01A534                     ;;----|A517/----\----; / 
                      RTS                                 ;;----|A519/----\----; Return 
                                                          ;;                   ;
CODE_01A51A:          LDA.W !SpriteStatus,X               ;;----|A51A/----\----; \ Branch if sprite status == Normal 
                      CMP.B #$08                          ;;----|A51D/----\----;  | 
                      BEQ CODE_01A534                     ;;----|A51F/----\----; / 
                      CMP.B #$09                          ;;----|A521/----\----; \ Branch if sprite status == Carryable 
                      BEQ CODE_01A534                     ;;----|A523/----\----; / 
                      CMP.B #$0A                          ;;----|A525/----\----; \ Branch if sprite status == Kicked 
                      BEQ CODE_01A534                     ;;----|A527/----\----; / 
                      CMP.B #$0B                          ;;----|A529/----\----; \ Branch if sprite status == Carried 
                      BEQ CODE_01A534                     ;;----|A52B/----\----; / 
                      RTS                                 ;;----|A52D/----\----; Return 
                                                          ;;                   ;
CODE_01A52E:          JMP CODE_01A625                     ;;----|A52E/----\----;
                                                          ;;                   ;
CODE_01A531:          JMP CODE_01A642                     ;;----|A531/----\----;
                                                          ;;                   ;
CODE_01A534:          JMP CODE_01A685                     ;;----|A534/----\----;
                                                          ;;                   ;
CODE_01A537:          JMP CODE_01A5C4                     ;;----|A537/----\----;
                                                          ;;                   ;
ADDR_01A53A:          JMP CODE_01A5C4                     ;;----|A53A/----\----;
                                                          ;;                   ;
CODE_01A53D:          JMP CODE_01A56D                     ;;----|A53D/----\----;
                                                          ;;                   ;
CODE_01A540:          JSR CODE_01A6D9                     ;;----|A540/----\----;
                      PHX                                 ;;----|A543/----\----;
                      PHY                                 ;;----|A544/----\----;
                      TYA                                 ;;----|A545/----\----;
                      TXY                                 ;;----|A546/----\----;
                      TAX                                 ;;----|A547/----\----;
                      JSR CODE_01A6D9                     ;;----|A548/----\----;
                      PLY                                 ;;----|A54B/----\----;
                      PLX                                 ;;----|A54C/----\----;
                      LDA.W !SpriteMisc1558,X             ;;----|A54D/----\----;
                      ORA.W !SpriteMisc1558,Y             ;;----|A550/----\----;
                      BNE Return01A5C3                    ;;----|A553/----\----;
CODE_01A555:          LDA.W !SpriteStatus,X               ;;----|A555/----\----;
                      CMP.B #$09                          ;;----|A558/----\----;
                      BNE CODE_01A56D                     ;;----|A55A/----\----;
                      JSR IsOnGround                      ;;----|A55C/----\----;
                      BNE CODE_01A56D                     ;;----|A55F/----\----;
                      LDA.B !SpriteNumber,X               ;;----|A561/----\----; \ Branch if not Goomba 
                      CMP.B #$0F                          ;;----|A563/----\----;  | 
                      BNE +                               ;;----|A565/----\----; / 
                      JMP CODE_01A685                     ;;----|A567/----\----;
                                                          ;;                   ;
                    + JMP CODE_01A5C4                     ;;----|A56A/----\----;
                                                          ;;                   ;
CODE_01A56D:          LDA.B !SpriteXPosLow,X              ;;----|A56D/----\----;
                      SEC                                 ;;----|A56F/----\----;
                      SBC.W !SpriteXPosLow,Y              ;;----|A570/----\----;
                      LDA.W !SpriteYPosHigh,X             ;;----|A573/----\----;
                      SBC.W !SpriteYPosHigh,Y             ;;----|A576/----\----;
                      ROL A                               ;;----|A579/----\----;
                      AND.B #$01                          ;;----|A57A/----\----;
                      STA.B !_0                           ;;----|A57C/----\----;
                      LDA.W !SpriteTweakerE,Y             ;;----|A57E/----\----;
                      AND.B #$10                          ;;----|A581/----\----;
                      BNE +                               ;;----|A583/----\----;
                      LDY.W !CurSpriteProcess             ;;----|A585/----\----; Y = Sprite index 
                      LDA.W !SpriteMisc157C,Y             ;;----|A588/----\----;
                      PHA                                 ;;----|A58B/----\----;
                      LDA.B !_0                           ;;----|A58C/----\----;
                      STA.W !SpriteMisc157C,Y             ;;----|A58E/----\----;
                      PLA                                 ;;----|A591/----\----;
                      CMP.W !SpriteMisc157C,Y             ;;----|A592/----\----;
                      BEQ +                               ;;----|A595/----\----;
                      LDA.W !SpriteMisc15AC,Y             ;;----|A597/----\----;
                      BNE +                               ;;----|A59A/----\----;
                      LDA.B #$08                          ;;----|A59C/----\----; \ Set turning timer 
                      STA.W !SpriteMisc15AC,Y             ;;----|A59E/----\----; / 
                    + LDA.W !SpriteTweakerE,X             ;;----|A5A1/----\----;
                      AND.B #$10                          ;;----|A5A4/----\----;
                      BNE Return01A5C3                    ;;----|A5A6/----\----;
                      LDA.W !SpriteMisc157C,X             ;;----|A5A8/----\----;
                      PHA                                 ;;----|A5AB/----\----;
                      LDA.B !_0                           ;;----|A5AC/----\----;
                      EOR.B #$01                          ;;----|A5AE/----\----;
                      STA.W !SpriteMisc157C,X             ;;----|A5B0/----\----;
                      PLA                                 ;;----|A5B3/----\----;
                      CMP.W !SpriteMisc157C,X             ;;----|A5B4/----\----;
                      BEQ Return01A5C3                    ;;----|A5B7/----\----;
                      LDA.W !SpriteMisc15AC,X             ;;----|A5B9/----\----;
                      BNE Return01A5C3                    ;;----|A5BC/----\----;
                      LDA.B #$08                          ;;----|A5BE/----\----; \ Set turning timer 
                      STA.W !SpriteMisc15AC,X             ;;----|A5C0/----\----; / 
Return01A5C3:         RTS                                 ;;----|A5C3/----\----; Return 
                                                          ;;                   ;
CODE_01A5C4:          LDA.W !SpriteNumber,Y               ;;----|A5C4/----\----;
                      SEC                                 ;;----|A5C7/----\----;
                      SBC.B #$83                          ;;----|A5C8/----\----;
                      CMP.B #$02                          ;;----|A5CA/----\----;
                      BCS +                               ;;----|A5CC/----\----;
                      JSR FlipSpriteDir                   ;;----|A5CE/----\----;
                      STZ.B !SpriteYSpeed,X               ;;----|A5D1/----\----; Sprite Y Speed = 0 
CODE_01A5D3:          PHX                                 ;;----|A5D3/----\----;
                      TYX                                 ;;----|A5D4/----\----;
                      JSR CODE_01B4E2                     ;;----|A5D5/----\----;
                      PLX                                 ;;----|A5D8/----\----;
                      RTS                                 ;;----|A5D9/----\----; Return 
                                                          ;;                   ;
                    + LDX.W !CurSpriteProcess             ;;----|A5DA/----\----; X = Sprite index 
                      LDY.W !SpriteInterIndex             ;;----|A5DD/----\----;
                      JSR CODE_01A77C                     ;;----|A5E0/----\----;
                      LDA.B #$02                          ;;----|A5E3/----\----; \ Sprite status = Killed 
                      STA.W !SpriteStatus,Y               ;;----|A5E5/----\----; / 
                      PHX                                 ;;----|A5E8/----\----;
                      TYX                                 ;;----|A5E9/----\----;
                      JSL CODE_01AB72                     ;;----|A5EA/----\----;
                      PLX                                 ;;----|A5EE/----\----;
                      LDA.B !SpriteXSpeed,X               ;;----|A5EF/----\----;
                      ASL A                               ;;----|A5F1/----\----;
                      LDA.B #$10                          ;;----|A5F2/----\----;
                      BCC +                               ;;----|A5F4/----\----;
                      LDA.B #$F0                          ;;----|A5F6/----\----;
                    + STA.W !SpriteXSpeed,Y               ;;----|A5F8/----\----;
                      LDA.B #$D0                          ;;----|A5FB/----\----;
                      STA.W !SpriteYSpeed,Y               ;;----|A5FD/----\----;
                      PHY                                 ;;----|A600/----\----;
                      INC.W !SpriteMisc1626,X             ;;----|A601/----\----;
                      LDY.W !SpriteMisc1626,X             ;;----|A604/----\----;
                      CPY.B #$08                          ;;----|A607/----\----;
                      BCS +                               ;;----|A609/----\----;
                      LDA.W Return01A61D,Y                ;;----|A60B/----\----;
                      STA.W !SPCIO0                       ;;----|A60E/----\----; / Play sound effect 
                    + TYA                                 ;;----|A611/----\----;
                      CMP.B #$08                          ;;----|A612/----\----;
                      BCC +                               ;;----|A614/----\----;
                      LDA.B #$08                          ;;----|A616/----\----;
                    + PLY                                 ;;----|A618/----\----;
                      JSL CODE_02ACE1                     ;;----|A619/----\----;
Return01A61D:         RTS                                 ;;----|A61D/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
                      db $13,$14,$15,$16,$17,$18,$19      ;;----|A61E/----\----;
                                                          ;;                   ;
CODE_01A625:          LDA.B !SpriteNumber,X               ;;----|A625/----\----;
                      SEC                                 ;;----|A627/----\----;
                      SBC.B #$83                          ;;----|A628/----\----;
                      CMP.B #$02                          ;;----|A62A/----\----;
                      BCS +                               ;;----|A62C/----\----;
                      PHX                                 ;;----|A62E/----\----;
                      TYX                                 ;;----|A62F/----\----;
                      JSR FlipSpriteDir                   ;;----|A630/----\----;
                      PLX                                 ;;----|A633/----\----;
                      LDA.B #$00                          ;;----|A634/----\----;
                      STA.W !SpriteYSpeed,Y               ;;----|A636/----\----;
                      JSR CODE_01B4E2                     ;;----|A639/----\----;
                      RTS                                 ;;----|A63C/----\----; Return 
                                                          ;;                   ;
                    + JSR CODE_01A77C                     ;;----|A63D/----\----;
                      BRA +                               ;;----|A640/----\----;
                                                          ;;                   ;
CODE_01A642:          JSR IsOnGround                      ;;----|A642/----\----;
                      BNE +                               ;;----|A645/----\----;
                      JMP CODE_01A685                     ;;----|A647/----\----;
                                                          ;;                   ;
                    + PHX                                 ;;----|A64A/----\----;
                      LDA.W !SpriteMisc1626,Y             ;;----|A64B/----\----;
                      INC A                               ;;----|A64E/----\----;
                      STA.W !SpriteMisc1626,Y             ;;----|A64F/----\----;
                      LDX.W !SpriteMisc1626,Y             ;;----|A652/----\----;
                      CPX.B #$08                          ;;----|A655/----\----;
                      BCS +                               ;;----|A657/----\----;
                      %LorW_X(LDA,Return01A61D)           ;;----|A659/----\----;
                      STA.W !SPCIO0                       ;;----|A65C/----\----; / Play sound effect 
                    + TXA                                 ;;----|A65F/----\----;
                      CMP.B #$08                          ;;----|A660/----\----;
                      BCC +                               ;;----|A662/----\----;
                      LDA.B #$08                          ;;----|A664/----\----;
                    + PLX                                 ;;----|A666/----\----;
                      JSL GivePoints                      ;;----|A667/----\----;
                      LDA.B #$02                          ;;----|A66B/----\----; \ Sprite status = Killed 
                      STA.W !SpriteStatus,X               ;;----|A66D/----\----; / 
                      JSL CODE_01AB72                     ;;----|A670/----\----;
                      LDA.W !SpriteXSpeed,Y               ;;----|A674/----\----;
                      ASL A                               ;;----|A677/----\----;
                      LDA.B #$10                          ;;----|A678/----\----;
                      BCC +                               ;;----|A67A/----\----;
                      LDA.B #$F0                          ;;----|A67C/----\----;
                    + STA.B !SpriteXSpeed,X               ;;----|A67E/----\----;
                      LDA.B #$D0                          ;;----|A680/----\----;
                      STA.B !SpriteYSpeed,X               ;;----|A682/----\----;
                      RTS                                 ;;----|A684/----\----; Return 
                                                          ;;                   ;
CODE_01A685:          LDA.B !SpriteNumber,X               ;;----|A685/----\----; \ Branch if Flying Question Block 
                      CMP.B #$83                          ;;----|A687/----\----;  | 
                      BEQ ADDR_01A69A                     ;;----|A689/----\----;  | 
                      CMP.B #$84                          ;;----|A68B/----\----;  | 
                      BEQ ADDR_01A69A                     ;;----|A68D/----\----; / 
                      LDA.B #$02                          ;;----|A68F/----\----; \ Sprite status = Killed 
                      STA.W !SpriteStatus,X               ;;----|A691/----\----; / 
                      LDA.B #$D0                          ;;----|A694/----\----;
                      STA.B !SpriteYSpeed,X               ;;----|A696/----\----;
                      BRA +                               ;;----|A698/----\----;
                                                          ;;                   ;
ADDR_01A69A:          JSR CODE_01B4E2                     ;;----|A69A/----\----;
                    + LDA.W !SpriteNumber,Y               ;;----|A69D/----\----; \ Branch if Flying Question Block or Key 
                      CMP.B #$80                          ;;----|A6A0/----\----;  | 
                      BEQ CODE_01A6BB                     ;;----|A6A2/----\----;  | 
                      CMP.B #$83                          ;;----|A6A4/----\----;  | 
                      BEQ ADDR_01A6B8                     ;;----|A6A6/----\----;  | 
                      CMP.B #$84                          ;;----|A6A8/----\----;  | 
                      BEQ ADDR_01A6B8                     ;;----|A6AA/----\----; / 
                      LDA.B #$02                          ;;----|A6AC/----\----; \ Sprite status = Killed 
                      STA.W !SpriteStatus,Y               ;;----|A6AE/----\----; / 
                      LDA.B #$D0                          ;;----|A6B1/----\----;
                      STA.W !SpriteYSpeed,Y               ;;----|A6B3/----\----;
                      BRA CODE_01A6BB                     ;;----|A6B6/----\----;
                                                          ;;                   ;
ADDR_01A6B8:          JSR CODE_01A5D3                     ;;----|A6B8/----\----;
CODE_01A6BB:          JSL CODE_01AB6F                     ;;----|A6BB/----\----;
                      LDA.B #$04                          ;;----|A6BF/----\----;
                      JSL GivePoints                      ;;----|A6C1/----\----;
                      LDA.B !SpriteXSpeed,X               ;;----|A6C5/----\----;
                      ASL A                               ;;----|A6C7/----\----;
                      LDA.B #$10                          ;;----|A6C8/----\----;
                      BCS +                               ;;----|A6CA/----\----;
                      LDA.B #$F0                          ;;----|A6CC/----\----;
                    + STA.B !SpriteXSpeed,X               ;;----|A6CE/----\----;
                      EOR.B #$FF                          ;;----|A6D0/----\----;
                      INC A                               ;;----|A6D2/----\----;
                      STA.W !SpriteXSpeed,Y               ;;----|A6D3/----\----;
                      RTS                                 ;;----|A6D6/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
DATA_01A6D7:          db $30,$D0                          ;;----|A6D7/----\----;
                                                          ;;                   ;
CODE_01A6D9:          STY.B !_0                           ;;----|A6D9/----\----;
                      JSR IsOnGround                      ;;----|A6DB/----\----;
                      BEQ Return01A72D                    ;;----|A6DE/----\----;
                      LDA.W !SpriteBlockedDirs,Y          ;;----|A6E0/----\----; \ Branch if not on ground 
                      AND.B #$04                          ;;----|A6E3/----\----;  | 
                      BEQ Return01A72D                    ;;----|A6E5/----\----; / 
                      LDA.W !SpriteTweakerA,X             ;;----|A6E7/----\----; \ Return if doesn't kick/hop into shells 
                      AND.B #$40                          ;;----|A6EA/----\----;  | 
                      BEQ Return01A72D                    ;;----|A6EC/----\----; / 
                      LDA.W !SpriteMisc1558,Y             ;;----|A6EE/----\----;
                      ORA.W !SpriteMisc1558,X             ;;----|A6F1/----\----;
                      BNE Return01A72D                    ;;----|A6F4/----\----;
                      STZ.B !_2                           ;;----|A6F6/----\----;
                      LDA.B !SpriteXPosLow,X              ;;----|A6F8/----\----;
                      SEC                                 ;;----|A6FA/----\----;
                      SBC.W !SpriteXPosLow,Y              ;;----|A6FB/----\----;
                      BMI +                               ;;----|A6FE/----\----;
                      INC.B !_2                           ;;----|A700/----\----;
                    + CLC                                 ;;----|A702/----\----;
                      ADC.B #$08                          ;;----|A703/----\----;
                      CMP.B #$10                          ;;----|A705/----\----;
                      BCC Return01A72D                    ;;----|A707/----\----;
                      LDA.W !SpriteMisc157C,X             ;;----|A709/----\----;
                      CMP.B !_2                           ;;----|A70C/----\----;
                      BNE Return01A72D                    ;;----|A70E/----\----;
                      LDA.B !SpriteNumber,X               ;;----|A710/----\----; \ Branch if not Blue Shelless 
                      CMP.B #$02                          ;;----|A712/----\----;  | 
                      BNE +                               ;;----|A714/----\----; / 
                      LDA.B #$20                          ;;----|A716/----\----;
                      STA.W !SpriteMisc163E,X             ;;----|A718/----\----;
                      STA.W !SpriteMisc1558,X             ;;----|A71B/----\----;
                      LDA.B #$23                          ;;----|A71E/----\----;
                      STA.W !SpriteMisc1564,X             ;;----|A720/----\----;
                      TYA                                 ;;----|A723/----\----;
                      STA.W !SpriteMisc160E,X             ;;----|A724/----\----;
                      RTS                                 ;;----|A727/----\----; Return 
                                                          ;;                   ;
PlayKickSfx:          LDA.B #$03                          ;;----|A728/----\----; \ Play sound effect 
                      STA.W !SPCIO0                       ;;----|A72A/----\----; / 
Return01A72D:         RTS                                 ;;----|A72D/----\----; Return 
                                                          ;;                   ;
                    + LDA.W !SpriteMisc1540,Y             ;;----|A72E/----\----; \ Return if timer is set 
                      BNE Return01A777                    ;;----|A731/----\----; / 
                      LDA.W !SpriteNumber,Y               ;;----|A733/----\----; \ Return if sprite >= #$0F 
                      CMP.B #$0F                          ;;----|A736/----\----;  | 
                      BCS Return01A777                    ;;----|A738/----\----; / 
                      LDA.W !SpriteBlockedDirs,Y          ;;----|A73A/----\----; \ Return if not on ground 
                      AND.B #$04                          ;;----|A73D/----\----;  | 
                      BEQ Return01A777                    ;;----|A73F/----\----; / 
                      LDA.W !SpriteOBJAttribute,Y         ;;----|A741/----\----; \ Branch if $15F6,y positive... 
                      BPL +                               ;;----|A744/----\----; / 
                      AND.B #$7F                          ;;----|A746/----\----; \ ...otherwise make it positive 
                      STA.W !SpriteOBJAttribute,Y         ;;----|A748/----\----; / 
                      LDA.B #$E0                          ;;----|A74B/----\----; \ Set upward speed 
                      STA.W !SpriteYSpeed,Y               ;;----|A74D/----\----; / 
                      LDA.B #$20                          ;;----|A750/----\----; \ $1564,y = #$20 
                      STA.W !SpriteMisc1564,Y             ;;----|A752/----\----; / 
CODE_01A755:          LDA.B #$20                          ;;----|A755/----\----; \ C2,x and 1558,x = #$20 
                      STA.B !SpriteTableC2,X              ;;----|A757/----\----;  | (These are for the shell sprite) 
                      STA.W !SpriteMisc1558,X             ;;----|A759/----\----; / 
                      RTS                                 ;;----|A75C/----\----; Return 
                                                          ;;                   ;
                    + LDA.B #$E0                          ;;----|A75D/----\----; \ Set upward speed 
                      STA.B !SpriteYSpeed,X               ;;----|A75F/----\----; / 
                      LDA.W !SpriteInLiquid,X             ;;----|A761/----\----;
                      CMP.B #$01                          ;;----|A764/----\----;
                      LDA.B #$18                          ;;----|A766/----\----;
                      BCC +                               ;;----|A768/----\----;
                      LDA.B #$2C                          ;;----|A76A/----\----;
                    + STA.W !SpriteMisc1558,X             ;;----|A76C/----\----;
                      TXA                                 ;;----|A76F/----\----;
                      STA.W !SpriteMisc1594,Y             ;;----|A770/----\----;
                      TYA                                 ;;----|A773/----\----;
                      STA.W !SpriteMisc1594,X             ;;----|A774/----\----;
Return01A777:         RTS                                 ;;----|A777/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
DATA_01A778:          db $10,$F0                          ;;----|A778/----\----;
                                                          ;;                   ;
DATA_01A77A:          db $00,$FF                          ;;----|A77A/----\----;
                                                          ;;                   ;
CODE_01A77C:          LDA.B !SpriteNumber,X               ;;----|A77C/----\----;
                      CMP.B #$02                          ;;----|A77E/----\----;
                      BNE CODE_01A7C2                     ;;----|A780/----\----;
                      LDA.W !SpriteMisc187B,Y             ;;----|A782/----\----;
                      BNE CODE_01A7C2                     ;;----|A785/----\----;
                      LDA.W !SpriteMisc157C,X             ;;----|A787/----\----;
                      CMP.W !SpriteMisc157C,Y             ;;----|A78A/----\----;
                      BEQ CODE_01A7C2                     ;;----|A78D/----\----;
                      STY.B !_1                           ;;----|A78F/----\----;
                      LDY.W !SpriteMisc1534,X             ;;----|A791/----\----;
                      BNE +                               ;;----|A794/----\----;
                      STZ.W !SpriteMisc1528,X             ;;----|A796/----\----;
                      STZ.W !SpriteMisc163E,X             ;;----|A799/----\----;
                      TAY                                 ;;----|A79C/----\----;
                      STY.B !_0                           ;;----|A79D/----\----;
                      LDA.B !SpriteXPosLow,X              ;;----|A79F/----\----;
                      CLC                                 ;;----|A7A1/----\----;
                      ADC.W DATA_01A778,Y                 ;;----|A7A2/----\----;
                      LDY.B !_1                           ;;----|A7A5/----\----;
                      STA.W !SpriteXPosLow,Y              ;;----|A7A7/----\----;
                      LDA.W !SpriteYPosHigh,X             ;;----|A7AA/----\----;
                      LDY.B !_0                           ;;----|A7AD/----\----;
                      ADC.W DATA_01A77A,Y                 ;;----|A7AF/----\----;
                      LDY.B !_1                           ;;----|A7B2/----\----;
                      STA.W !SpriteYPosHigh,Y             ;;----|A7B4/----\----;
                      TYA                                 ;;----|A7B7/----\----;
                      STA.W !SpriteMisc160E,X             ;;----|A7B8/----\----;
                      LDA.B #$01                          ;;----|A7BB/----\----;
                      STA.W !SpriteMisc1534,X             ;;----|A7BD/----\----;
                    + PLA                                 ;;----|A7C0/----\----;
                      PLA                                 ;;----|A7C1/----\----;
CODE_01A7C2:          LDX.W !SpriteInterIndex             ;;----|A7C2/----\----;
                      LDY.W !CurSpriteProcess             ;;----|A7C5/----\----; Y = Sprite index 
                      RTS                                 ;;----|A7C8/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
SpriteToSpawn:        db $00,$01,$02,$03,$04,$05,$06,$07  ;;----|A7C9/----\----;
                      db $04,$04,$05,$05,$07,$00,$00,$0F  ;;----|A7D1/----\----;
                      db $0F,$0F                          ;;----|A7D9/----\----;
                                                          ;;                   ;
SpriteToSpawn2:       db $0D                              ;;----|A7DB/----\----;
                                                          ;;                   ;
MarioSprInteract:     PHB                                 ;;----|A7DC/----\----;
                      PHK                                 ;;----|A7DD/----\----;
                      PLB                                 ;;----|A7DE/----\----;
                      JSR MarioSprInteractRt              ;;----|A7DF/----\----;
                      PLB                                 ;;----|A7E2/----\----;
                      RTL                                 ;;----|A7E3/----\----; Return 
                                                          ;;                   ;
MarioSprInteractRt:   LDA.W !SpriteTweakerD,X             ;;----|A7E4/----\----; \ Branch if "Process interaction every frame" is set 
                      AND.B #$20                          ;;----|A7E7/----\----;  | 
                      BNE ProcessInteract                 ;;----|A7E9/----\----; / 
                      TXA                                 ;;----|A7EB/----\----; \ Otherwise, return every other frame 
                      EOR.B !TrueFrame                    ;;----|A7EC/----\----;  | 
                      AND.B #$01                          ;;----|A7EE/----\----;  | 
                      ORA.W !SpriteOffscreenX,X           ;;----|A7F0/----\----;  | 
                      BEQ ProcessInteract                 ;;----|A7F3/----\----;  | 
                    - CLC                                 ;;----|A7F5/----\----;  | 
                      RTS                                 ;;----|A7F6/----\----; / 
                                                          ;;                   ;
ProcessInteract:      JSR SubHorizPos                     ;;----|A7F7/----\----;
                      LDA.B !_F                           ;;----|A7FA/----\----;
                      CLC                                 ;;----|A7FC/----\----;
                      ADC.B #$50                          ;;----|A7FD/----\----;
                      CMP.B #$A0                          ;;----|A7FF/----\----;
                      BCS -                               ;;----|A801/----\----; No contact, return 
                      JSR CODE_01AD42                     ;;----|A803/----\----;
                      LDA.B !_E                           ;;----|A806/----\----;
                      CLC                                 ;;----|A808/----\----;
                      ADC.B #$60                          ;;----|A809/----\----;
                      CMP.B #$C0                          ;;----|A80B/----\----;
                      BCS -                               ;;----|A80D/----\----; No contact, return 
CODE_01A80F:          LDA.B !PlayerAnimation              ;;----|A80F/----\----; \ If animation sequence activated... 
                      CMP.B #$01                          ;;----|A811/----\----;  | 
                      BCS -                               ;;----|A813/----\----; / ...no contact, return 
                      LDA.B #$00                          ;;----|A815/----\----; \ Branch if bit 6 of $0D9B set? 
                      BIT.W !IRQNMICommand                ;;----|A817/----\----;  | 
                      BVS +                               ;;----|A81A/----\----; / 
                      LDA.W !PlayerBehindNet              ;;----|A81C/----\----; \ If Mario and Sprite not on same side of scenery... 
                      EOR.W !SpriteBehindScene,X          ;;----|A81F/----\----;  | 
                    + BNE ReturnNoContact2                ;;----|A822/----\----; / ...no contact, return 
                      JSL GetMarioClipping                ;;----|A824/----\----;
                      JSL GetSpriteClippingA              ;;----|A828/----\----;
                      JSL CheckForContact                 ;;----|A82C/----\----;
                      BCC ReturnNoContact2                ;;----|A830/----\----; No contact, return 
                      LDA.W !SpriteTweakerD,X             ;;----|A832/----\----; \ Branch if sprite uses default Mario interaction 
                      BPL +                               ;;----|A835/----\----; / 
                      SEC                                 ;;----|A837/----\----; Contact, return 
                      RTS                                 ;;----|A838/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
DATA_01A839:          db $F0,$10                          ;;----|A839/----\----;
                                                          ;;                   ;
                    + LDA.W !InvinsibilityTimer           ;;----|A83B/----\----; \ Branch if Mario doesn't have star 
                      BEQ CODE_01A87E                     ;;----|A83E/----\----; / 
                      LDA.W !SpriteTweakerD,X             ;;----|A840/----\----; \ Branch if "Process interaction every frame" is set 
                      AND.B #$02                          ;;----|A843/----\----;  | 
                      BNE CODE_01A87E                     ;;----|A845/----\----; / 
CODE_01A847:          JSL CODE_01AB6F                     ;;----|A847/----\----;
                      INC.W !StarKillCounter              ;;----|A84B/----\----;
                      LDA.W !StarKillCounter              ;;----|A84E/----\----;
                      CMP.B #$08                          ;;----|A851/----\----;
                      BCC +                               ;;----|A853/----\----;
                      LDA.B #$08                          ;;----|A855/----\----;
                      STA.W !StarKillCounter              ;;----|A857/----\----;
                    + JSL GivePoints                      ;;----|A85A/----\----;
                      LDY.W !StarKillCounter              ;;----|A85E/----\----;
                      CPY.B #$08                          ;;----|A861/----\----;
                      BCS +                               ;;----|A863/----\----;
                      LDA.W Return01A61D,Y                ;;----|A865/----\----;
                      STA.W !SPCIO0                       ;;----|A868/----\----; / Play sound effect 
                    + LDA.B #$02                          ;;----|A86B/----\----; \ Sprite status = Killed 
                      STA.W !SpriteStatus,X               ;;----|A86D/----\----; / 
                      LDA.B #$D0                          ;;----|A870/----\----;
                      STA.B !SpriteYSpeed,X               ;;----|A872/----\----;
                      JSR SubHorizPos                     ;;----|A874/----\----;
                      LDA.W DATA_01A839,Y                 ;;----|A877/----\----;
                      STA.B !SpriteXSpeed,X               ;;----|A87A/----\----;
ReturnNoContact2:     CLC                                 ;;----|A87C/----\----;
                      RTS                                 ;;----|A87D/----\----; Return 
                                                          ;;                   ;
CODE_01A87E:          STZ.W !StarKillCounter              ;;----|A87E/----\----;
                      LDA.W !SpriteMisc154C,X             ;;----|A881/----\----;
                      BNE CODE_01A895                     ;;----|A884/----\----;
                      LDA.B #$08                          ;;----|A886/----\----;
                      STA.W !SpriteMisc154C,X             ;;----|A888/----\----;
                      LDA.W !SpriteStatus,X               ;;----|A88B/----\----;
                      CMP.B #$09                          ;;----|A88E/----\----;
                      BNE +                               ;;----|A890/----\----;
                      JSR CODE_01AA42                     ;;----|A892/----\----;
CODE_01A895:          CLC                                 ;;----|A895/----\----;
                      RTS                                 ;;----|A896/----\----; Return 
                                                          ;;                   ;
                    + LDA.B #$14                          ;;----|A897/----\----;
                      STA.B !_1                           ;;----|A899/----\----;
                      LDA.B !_5                           ;;----|A89B/----\----;
                      SEC                                 ;;----|A89D/----\----;
                      SBC.B !_1                           ;;----|A89E/----\----;
                      ROL.B !_0                           ;;----|A8A0/----\----;
                      CMP.B !PlayerYPosNow                ;;----|A8A2/----\----;
                      PHP                                 ;;----|A8A4/----\----;
                      LSR.B !_0                           ;;----|A8A5/----\----;
                      LDA.B !_B                           ;;----|A8A7/----\----;
                      SBC.B #$00                          ;;----|A8A9/----\----;
                      PLP                                 ;;----|A8AB/----\----;
                      SBC.B !PlayerYPosNow+1              ;;----|A8AC/----\----;
                      BMI CODE_01A8E6                     ;;----|A8AE/----\----;
                      LDA.B !PlayerYSpeed                 ;;----|A8B0/----\----;
                      BPL CODE_01A8C0                     ;;----|A8B2/----\----;
                      LDA.W !SpriteTweakerF,X             ;;----|A8B4/----\----; \ TODO: Branch if Unknown Bit 11 is set 
                      AND.B #$10                          ;;----|A8B7/----\----;  | 
                      BNE CODE_01A8C0                     ;;----|A8B9/----\----; / 
                      LDA.W !SpriteStompCounter           ;;----|A8BB/----\----;
                      BEQ CODE_01A8E6                     ;;----|A8BE/----\----;
CODE_01A8C0:          JSR IsOnGround                      ;;----|A8C0/----\----;
                      BEQ CODE_01A8C9                     ;;----|A8C3/----\----;
                      LDA.B !PlayerInAir                  ;;----|A8C5/----\----;
                      BEQ CODE_01A8E6                     ;;----|A8C7/----\----;
CODE_01A8C9:          LDA.W !SpriteTweakerA,X             ;;----|A8C9/----\----; \ Branch if can be jumped on 
                      AND.B #$10                          ;;----|A8CC/----\----;  | 
                      BNE CODE_01A91C                     ;;----|A8CE/----\----; / 
                      LDA.W !SpinJumpFlag                 ;;----|A8D0/----\----;
                      ORA.W !PlayerRidingYoshi            ;;----|A8D3/----\----;
                      BEQ CODE_01A8E6                     ;;----|A8D6/----\----;
CODE_01A8D8:          LDA.B #$02                          ;;----|A8D8/----\----;
                      STA.W !SPCIO0                       ;;----|A8DA/----\----; / Play sound effect 
                      JSL BoostMarioSpeed                 ;;----|A8DD/----\----;
                      JSL DisplayContactGfx               ;;----|A8E1/----\----;
                      RTS                                 ;;----|A8E5/----\----; Return 
                                                          ;;                   ;
CODE_01A8E6:          LDA.W !PlayerSlopePose              ;;----|A8E6/----\----;
                      BEQ +                               ;;----|A8E9/----\----;
                      LDA.W !SpriteTweakerF,X             ;;----|A8EB/----\----; \ Branch if "Takes 5 fireballs to kill"... 
                      AND.B #$04                          ;;----|A8EE/----\----;  | ...is set 
                      BNE +                               ;;----|A8F0/----\----; / 
                      JSR PlayKickSfx                     ;;----|A8F2/----\----;
                      JSR CODE_01A847                     ;;----|A8F5/----\----;
                      RTS                                 ;;----|A8F8/----\----; Return 
                                                          ;;                   ;
                    + LDA.W !IFrameTimer                  ;;----|A8F9/----\----; \ Return if Mario is invincible 
                      BNE Return01A91B                    ;;----|A8FC/----\----; / 
                      LDA.W !PlayerRidingYoshi            ;;----|A8FE/----\----;
                      BNE Return01A91B                    ;;----|A901/----\----;
                      LDA.W !SpriteTweakerE,X             ;;----|A903/----\----;
                      AND.B #$10                          ;;----|A906/----\----;
                      BNE +                               ;;----|A908/----\----;
                      JSR SubHorizPos                     ;;----|A90A/----\----;
                      TYA                                 ;;----|A90D/----\----;
                      STA.W !SpriteMisc157C,X             ;;----|A90E/----\----;
                    + LDA.B !SpriteNumber,X               ;;----|A911/----\----;
                      CMP.B #$53                          ;;----|A913/----\----;
                      BEQ Return01A91B                    ;;----|A915/----\----;
                      JSL HurtMario                       ;;----|A917/----\----;
Return01A91B:         RTS                                 ;;----|A91B/----\----; Return 
                                                          ;;                   ;
CODE_01A91C:          LDA.W !SpinJumpFlag                 ;;----|A91C/----\----;
                      ORA.W !PlayerRidingYoshi            ;;----|A91F/----\----;
                      BEQ CODE_01A947                     ;;----|A922/----\----;
CODE_01A924:          JSL DisplayContactGfx               ;;----|A924/----\----;
                      LDA.B #$F8                          ;;----|A928/----\----;
                      STA.B !PlayerYSpeed                 ;;----|A92A/----\----;
                      LDA.W !PlayerRidingYoshi            ;;----|A92C/----\----;
                      BEQ +                               ;;----|A92F/----\----;
                      JSL BoostMarioSpeed                 ;;----|A931/----\----;
                    + JSR CODE_019ACB                     ;;----|A935/----\----;
                      JSL CODE_07FC3B                     ;;----|A938/----\----;
                      JSR CODE_01AB46                     ;;----|A93C/----\----;
                      LDA.B #$08                          ;;----|A93F/----\----;
                      STA.W !SPCIO0                       ;;----|A941/----\----; / Play sound effect 
                      JMP CODE_01A9F2                     ;;----|A944/----\----;
                                                          ;;                   ;
CODE_01A947:          JSR CODE_01A8D8                     ;;----|A947/----\----;
                      LDA.W !SpriteMisc187B,X             ;;----|A94A/----\----;
                      BEQ CODE_01A95D                     ;;----|A94D/----\----;
                      JSR SubHorizPos                     ;;----|A94F/----\----;
                      LDA.B #$18                          ;;----|A952/----\----;
                      CPY.B #$00                          ;;----|A954/----\----;
                      BEQ +                               ;;----|A956/----\----;
                      LDA.B #$E8                          ;;----|A958/----\----;
                    + STA.B !PlayerXSpeed                 ;;----|A95A/----\----;
                      RTS                                 ;;----|A95C/----\----; Return 
                                                          ;;                   ;
CODE_01A95D:          JSR CODE_01AB46                     ;;----|A95D/----\----;
                      LDY.B !SpriteNumber,X               ;;----|A960/----\----;
                      LDA.W !SpriteTweakerE,X             ;;----|A962/----\----;
                      AND.B #$40                          ;;----|A965/----\----;
                      BEQ CODE_01A9BE                     ;;----|A967/----\----;
                      CPY.B #$72                          ;;----|A969/----\----;
                      BCC CODE_01A979                     ;;----|A96B/----\----;
                      PHX                                 ;;----|A96D/----\----;
                      PHY                                 ;;----|A96E/----\----;
                      JSL CODE_02EAF2                     ;;----|A96F/----\----;
                      PLY                                 ;;----|A973/----\----;
                      PLX                                 ;;----|A974/----\----;
                      LDA.B #$02                          ;;----|A975/----\----;
                      BRA CODE_01A99B                     ;;----|A977/----\----;
                                                          ;;                   ;
CODE_01A979:          CPY.B #$6E                          ;;----|A979/----\----;
                      BNE CODE_01A98A                     ;;----|A97B/----\----;
                      LDA.B #$02                          ;;----|A97D/----\----;
                      STA.B !SpriteTableC2,X              ;;----|A97F/----\----;
                      LDA.B #$FF                          ;;----|A981/----\----;
                      STA.W !SpriteMisc1540,X             ;;----|A983/----\----;
                      LDA.B #$6F                          ;;----|A986/----\----;DINO TORCH SPRITE NUM                
                      BRA CODE_01A99B                     ;;----|A988/----\----;
                                                          ;;                   ;
CODE_01A98A:          CPY.B #$3F                          ;;----|A98A/----\----;
                      BCC CODE_01A998                     ;;----|A98C/----\----;
                      LDA.B #$80                          ;;----|A98E/----\----;
                      STA.W !SpriteMisc1540,X             ;;----|A990/----\----;
                      LDA.W SpriteToSpawn2-$40,Y          ;;----|A993/----\----; Hey, this label might be wrong!
                      BRA CODE_01A99B                     ;;----|A996/----\----;
                                                          ;;                   ;
CODE_01A998:          LDA.W SpriteToSpawn,Y               ;;----|A998/----\----;
CODE_01A99B:          STA.B !SpriteNumber,X               ;;----|A99B/----\----;
                      LDA.W !SpriteOBJAttribute,X         ;;----|A99D/----\----;
                      AND.B #$0E                          ;;----|A9A0/----\----;
                      STA.B !_F                           ;;----|A9A2/----\----;
                      JSL LoadSpriteTables                ;;----|A9A4/----\----;
                      LDA.W !SpriteOBJAttribute,X         ;;----|A9A8/----\----;
                      AND.B #$F1                          ;;----|A9AB/----\----;
                      ORA.B !_F                           ;;----|A9AD/----\----;
                      STA.W !SpriteOBJAttribute,X         ;;----|A9AF/----\----;
                      STZ.B !SpriteYSpeed,X               ;;----|A9B2/----\----; Sprite Y Speed = 0 
                      LDA.B !SpriteNumber,X               ;;----|A9B4/----\----;
                      CMP.B #$02                          ;;----|A9B6/----\----;
                      BNE +                               ;;----|A9B8/----\----;
                      INC.W !SpriteMisc151C,X             ;;----|A9BA/----\----;
                    + RTS                                 ;;----|A9BD/----\----; Return 
                                                          ;;                   ;
CODE_01A9BE:          LDA.B !SpriteNumber,X               ;;----|A9BE/----\----;
                      SEC                                 ;;----|A9C0/----\----;
                      SBC.B #$04                          ;;----|A9C1/----\----;
                      CMP.B #$0D                          ;;----|A9C3/----\----;
                      BCS CODE_01A9CC                     ;;----|A9C5/----\----;
                      LDA.W !FlightPhase                  ;;----|A9C7/----\----;
                      BNE CODE_01A9D3                     ;;----|A9CA/----\----;
CODE_01A9CC:          LDA.W !SpriteTweakerA,X             ;;----|A9CC/----\----; \ Branch if doesn't die when jumped on 
                      AND.B #$20                          ;;----|A9CF/----\----;  | 
                      BEQ +                               ;;----|A9D1/----\----; / 
CODE_01A9D3:          LDA.B #$03                          ;;----|A9D3/----\----; \ Sprite status = Smushed 
                      STA.W !SpriteStatus,X               ;;----|A9D5/----\----; / 
                      LDA.B #$20                          ;;----|A9D8/----\----;
                      STA.W !SpriteMisc1540,X             ;;----|A9DA/----\----;
                      STZ.B !SpriteXSpeed,X               ;;----|A9DD/----\----; \ Sprite Speed = 0 
                      STZ.B !SpriteYSpeed,X               ;;----|A9DF/----\----; / 
                      RTS                                 ;;----|A9E1/----\----; Return 
                                                          ;;                   ;
                    + LDA.W !SpriteTweakerB,X             ;;----|A9E2/----\----; \ Branch if Tweaker bit... 
                      AND.B #$80                          ;;----|A9E5/----\----;  | ..."Falls straight down when killed"... 
                      BEQ CODE_01AA01                     ;;----|A9E7/----\----; / ...is NOT set. 
                      LDA.B #$02                          ;;----|A9E9/----\----; \ Sprite status = Falling off screen 
                      STA.W !SpriteStatus,X               ;;----|A9EB/----\----; / 
                      STZ.B !SpriteXSpeed,X               ;;----|A9EE/----\----; \ Sprite Speed = 0 
                      STZ.B !SpriteYSpeed,X               ;;----|A9F0/----\----; / 
CODE_01A9F2:          LDA.B !SpriteNumber,X               ;;----|A9F2/----\----; \ Return if NOT Lakitu 
                      CMP.B #$1E                          ;;----|A9F4/----\----;  | 
                      BNE +                               ;;----|A9F6/----\----; / 
                      LDY.W !LakituCloudSlot              ;;----|A9F8/----\----;
                      LDA.B #$1F                          ;;----|A9FB/----\----;
                      STA.W !SpriteMisc1540,Y             ;;----|A9FD/----\----;
                    + RTS                                 ;;----|AA00/----\----; Return 
                                                          ;;                   ;
CODE_01AA01:          LDY.W !SpriteStatus,X               ;;----|AA01/----\----;
                      STZ.W !SpriteMisc1626,X             ;;----|AA04/----\----;
                      CPY.B #$08                          ;;----|AA07/----\----;
                      BEQ SetStunnedTimer                 ;;----|AA09/----\----;
CODE_01AA0B:          LDA.B !SpriteTableC2,X              ;;----|AA0B/----\----;
                      BNE SetStunnedTimer                 ;;----|AA0D/----\----;
                      STZ.W !SpriteMisc1540,X             ;;----|AA0F/----\----;
                      BRA SetAsStunned                    ;;----|AA12/----\----;
                                                          ;;                   ;
SetStunnedTimer:      LDA.B #$02                          ;;----|AA14/----\----; \ 
                      LDY.B !SpriteNumber,X               ;;----|AA16/----\----;  | 
                      CPY.B #$0F                          ;;----|AA18/----\----;  | Set stunnned timer with: 
                      BEQ CODE_01AA28                     ;;----|AA1A/----\----;  | 
                      CPY.B #$11                          ;;----|AA1C/----\----;  | #$FF for Goomba, Buzzy Beetle, Mechakoopa, or Bob-omb... 
                      BEQ CODE_01AA28                     ;;----|AA1E/----\----;  | #$02 for others 
                      CPY.B #$A2                          ;;----|AA20/----\----;  | 
                      BEQ CODE_01AA28                     ;;----|AA22/----\----;  | 
                      CPY.B #$0D                          ;;----|AA24/----\----;  | 
                      BNE +                               ;;----|AA26/----\----;  | 
CODE_01AA28:          LDA.B #$FF                          ;;----|AA28/----\----;  | 
                    + STA.W !SpriteMisc1540,X             ;;----|AA2A/----\----; / 
SetAsStunned:         LDA.B #$09                          ;;----|AA2D/----\----; \ Status = stunned 
                      STA.W !SpriteStatus,X               ;;----|AA2F/----\----; / 
                      RTS                                 ;;----|AA32/----\----; Return 
                                                          ;;                   ;
BoostMarioSpeed:      LDA.B !PlayerIsClimbing             ;;----|AA33/----\----; \ Return if climbing 
                      BNE Return01AA41                    ;;----|AA35/----\----; / 
                      LDA.B #$D0                          ;;----|AA37/----\----;
                      BIT.B !byetudlrHold                 ;;----|AA39/----\----;
                      BPL +                               ;;----|AA3B/----\----;
                      LDA.B #$A8                          ;;----|AA3D/----\----;
                    + STA.B !PlayerYSpeed                 ;;----|AA3F/----\----;
Return01AA41:         RTL                                 ;;----|AA41/----\----; Return 
                                                          ;;                   ;
CODE_01AA42:          LDA.W !SpinJumpFlag                 ;;----|AA42/----\----;
                      ORA.W !PlayerRidingYoshi            ;;----|AA45/----\----;
                      BEQ +                               ;;----|AA48/----\----;
                      LDA.B !PlayerYSpeed                 ;;----|AA4A/----\----;
                      BMI +                               ;;----|AA4C/----\----;
                      LDA.W !SpriteTweakerA,X             ;;----|AA4E/----\----; \ Branch if can't be jumped on 
                      AND.B #$10                          ;;----|AA51/----\----;  | 
                      BEQ +                               ;;----|AA53/----\----; / 
                      JMP CODE_01A924                     ;;----|AA55/----\----;
                                                          ;;                   ;
                    + %WorB(LDA,!byetudlrHold)            ;;----|AA58/----\----;
                      AND.B #$40                          ;;----|AA5A/----\----;
                      BEQ +                               ;;----|AA5C/----\----;
                      LDA.W !CarryingFlag                 ;;----|AA5E/----\----; \ Branch if carrying an enemy... 
                      ORA.W !PlayerRidingYoshi            ;;----|AA61/----\----;  | ...or on Yoshi 
                      BNE +                               ;;----|AA64/----\----; / 
                      LDA.B #$0B                          ;;----|AA66/----\----; \ Sprite status = Being carried 
                      STA.W !SpriteStatus,X               ;;----|AA68/----\----; / 
                      INC.W !CarryingFlag                 ;;----|AA6B/----\----; Set carrying enemy flag 
                      LDA.B #$08                          ;;----|AA6E/----\----;
                      STA.W !PickUpItemTimer              ;;----|AA70/----\----;
                      RTS                                 ;;----|AA73/----\----; Return 
                                                          ;;                   ;
                    + LDA.B !SpriteNumber,X               ;;----|AA74/----\----; \ Branch if Key 
                      CMP.B #$80                          ;;----|AA76/----\----;  | 
                      BEQ CODE_01AAB7                     ;;----|AA78/----\----; / 
                      CMP.B #$3E                          ;;----|AA7A/----\----; \ Branch if P Switch 
                      BEQ CODE_01AAB2                     ;;----|AA7C/----\----; / 
                      CMP.B #$0D                          ;;----|AA7E/----\----; \ Branch if Bobomb 
                      BEQ CODE_01AA97                     ;;----|AA80/----\----; / 
                      CMP.B #$2D                          ;;----|AA82/----\----; \ Branch if Baby Yoshi 
                      BEQ CODE_01AA97                     ;;----|AA84/----\----; / 
                      CMP.B #$A2                          ;;----|AA86/----\----; \ Branch if MechaKoopa 
                      BEQ CODE_01AA97                     ;;----|AA88/----\----; / 
                      CMP.B #$0F                          ;;----|AA8A/----\----; \ Branch if not Goomba 
                      BNE CODE_01AA94                     ;;----|AA8C/----\----; / 
                      LDA.B #$F0                          ;;----|AA8E/----\----;
                      STA.B !SpriteYSpeed,X               ;;----|AA90/----\----;
                      BRA CODE_01AA97                     ;;----|AA92/----\----;
                                                          ;;                   ;
CODE_01AA94:          JSR CODE_01AB46                     ;;----|AA94/----\----;
CODE_01AA97:          JSR PlayKickSfx                     ;;----|AA97/----\----;
                      LDA.W !SpriteMisc1540,X             ;;----|AA9A/----\----;
                      STA.B !SpriteTableC2,X              ;;----|AA9D/----\----;
                      LDA.B #$0A                          ;;----|AA9F/----\----; \ Sprite status = Kicked 
                      STA.W !SpriteStatus,X               ;;----|AAA1/----\----; / 
                      LDA.B #$10                          ;;----|AAA4/----\----;
                      STA.W !SpriteMisc154C,X             ;;----|AAA6/----\----;
                      JSR SubHorizPos                     ;;----|AAA9/----\----;
                      LDA.W ShellSpeedX,Y                 ;;----|AAAC/----\----;
                      STA.B !SpriteXSpeed,X               ;;----|AAAF/----\----;
                      RTS                                 ;;----|AAB1/----\----; Return 
                                                          ;;                   ;
CODE_01AAB2:          LDA.W !SpriteMisc163E,X             ;;----|AAB2/----\----;
                      BNE Return01AB2C                    ;;----|AAB5/----\----;
CODE_01AAB7:          STZ.W !SpriteMisc154C,X             ;;----|AAB7/----\----;
                      LDA.B !SpriteYPosLow,X              ;;----|AABA/----\----;
                      SEC                                 ;;----|AABC/----\----;
                      SBC.B !PlayerYPosNow                ;;----|AABD/----\----;
                      CLC                                 ;;----|AABF/----\----;
                      ADC.B #$08                          ;;----|AAC0/----\----;
                      CMP.B #$20                          ;;----|AAC2/----\----;
                      BCC CODE_01AB31                     ;;----|AAC4/----\----;
                      BPL +                               ;;----|AAC6/----\----;
                      LDA.B #$10                          ;;----|AAC8/----\----;
                      STA.B !PlayerYSpeed                 ;;----|AACA/----\----;
                      RTS                                 ;;----|AACC/----\----; Return 
                                                          ;;                   ;
                    + LDA.B !PlayerYSpeed                 ;;----|AACD/----\----;
                      BMI Return01AB2C                    ;;----|AACF/----\----;
                      STZ.B !PlayerYSpeed                 ;;----|AAD1/----\----;
                      STZ.B !PlayerInAir                  ;;----|AAD3/----\----;
                      INC.W !StandOnSolidSprite           ;;----|AAD5/----\----;
                      LDA.B #$1F                          ;;----|AAD8/----\----;
                      LDY.W !PlayerRidingYoshi            ;;----|AADA/----\----;
                      BEQ +                               ;;----|AADD/----\----;
                      LDA.B #$2F                          ;;----|AADF/----\----;
                    + STA.B !_0                           ;;----|AAE1/----\----;
                      LDA.B !SpriteYPosLow,X              ;;----|AAE3/----\----;
                      SEC                                 ;;----|AAE5/----\----;
                      SBC.B !_0                           ;;----|AAE6/----\----;
                      STA.B !PlayerYPosNext               ;;----|AAE8/----\----;
                      LDA.W !SpriteXPosHigh,X             ;;----|AAEA/----\----;
                      SBC.B #$00                          ;;----|AAED/----\----;
                      STA.B !PlayerYPosNext+1             ;;----|AAEF/----\----;
                      LDA.B !SpriteNumber,X               ;;----|AAF1/----\----;
                      CMP.B #$3E                          ;;----|AAF3/----\----;
                      BNE Return01AB2C                    ;;----|AAF5/----\----;
                      ASL.W !SpriteTweakerD,X             ;;----|AAF7/----\----;
                      LSR.W !SpriteTweakerD,X             ;;----|AAFA/----\----;
                      LDA.B #$0B                          ;;----|AAFD/----\----;
                      STA.W !SPCIO0                       ;;----|AAFF/----\----; / Play sound effect 
                      LDA.W !MusicBackup                  ;;----|AB02/----\----;
                      BMI +                               ;;----|AB05/----\----;
                      LDA.B #$0E                          ;;----|AB07/----\----;
                      STA.W !SPCIO2                       ;;----|AB09/----\----; / Change music 
                    + LDA.B #$20                          ;;----|AB0C/----\----;
                      STA.W !SpriteMisc163E,X             ;;----|AB0E/----\----;
                      LSR.W !SpriteOBJAttribute,X         ;;----|AB11/----\----;
                      ASL.W !SpriteOBJAttribute,X         ;;----|AB14/----\----;
                      LDY.W !SpriteMisc151C,X             ;;----|AB17/----\----;
                      LDA.B #$B0                          ;;----|AB1A/----\----;
                      STA.W !BluePSwitchTimer,Y           ;;----|AB1C/----\----;
                      LDA.B #$20                          ;;----|AB1F/----\----; \ Set ground shake timer 
                      STA.W !ScreenShakeTimer             ;;----|AB21/----\----; / 
                      CPY.B #$01                          ;;----|AB24/----\----;
                      BNE Return01AB2C                    ;;----|AB26/----\----;
                      JSL CODE_02B9BD                     ;;----|AB28/----\----;
Return01AB2C:         RTS                                 ;;----|AB2C/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
DATA_01AB2D:          db $01,$00,$FF,$FF                  ;;----|AB2D/----\----;
                                                          ;;                   ;
CODE_01AB31:          STZ.B !PlayerXSpeed                 ;;----|AB31/----\----;
                      JSR SubHorizPos                     ;;----|AB33/----\----;
                      TYA                                 ;;----|AB36/----\----;
                      ASL A                               ;;----|AB37/----\----;
                      TAY                                 ;;----|AB38/----\----;
                      REP #$20                            ;;----|AB39/----\----; Accum (16 bit) 
                      LDA.B !PlayerXPosNext               ;;----|AB3B/----\----;
                      CLC                                 ;;----|AB3D/----\----;
                      ADC.W DATA_01AB2D,Y                 ;;----|AB3E/----\----;
                      STA.B !PlayerXPosNext               ;;----|AB41/----\----;
                      SEP #$20                            ;;----|AB43/----\----; Accum (8 bit) 
                      RTS                                 ;;----|AB45/----\----; Return 
                                                          ;;                   ;
CODE_01AB46:          PHY                                 ;;----|AB46/----\----;
                      LDA.W !SpriteStompCounter           ;;----|AB47/----\----;
                      CLC                                 ;;----|AB4A/----\----;
                      ADC.W !SpriteMisc1626,X             ;;----|AB4B/----\----;
                      INC.W !SpriteStompCounter           ;;----|AB4E/----\----;
                      TAY                                 ;;----|AB51/----\----;
                      INY                                 ;;----|AB52/----\----;
                      CPY.B #$08                          ;;----|AB53/----\----;
                      BCS +                               ;;----|AB55/----\----;
                      LDA.W Return01A61D,Y                ;;----|AB57/----\----;
                      STA.W !SPCIO0                       ;;----|AB5A/----\----; / Play sound effect 
                    + TYA                                 ;;----|AB5D/----\----;
                      CMP.B #$08                          ;;----|AB5E/----\----;
                      BCC +                               ;;----|AB60/----\----;
                      LDA.B #$08                          ;;----|AB62/----\----;
                    + JSL GivePoints                      ;;----|AB64/----\----;
                      PLY                                 ;;----|AB68/----\----;
                      RTS                                 ;;----|AB69/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
                      db $0C,$FC,$EC,$DC,$CC              ;;----|AB6A/----\----;
                                                          ;;                   ;
CODE_01AB6F:          JSR PlayKickSfx                     ;;----|AB6F/----\----;
CODE_01AB72:          JSR IsSprOffScreen                  ;;----|AB72/----\----;
                      BNE Return01AB98                    ;;----|AB75/----\----;
                      PHY                                 ;;----|AB77/----\----;
                      LDY.B #$03                          ;;----|AB78/----\----;
CODE_01AB7A:          LDA.W !SmokeSpriteNumber,Y          ;;----|AB7A/----\----;
                      BEQ CODE_01AB83                     ;;----|AB7D/----\----;
                      DEY                                 ;;----|AB7F/----\----;
                      BPL CODE_01AB7A                     ;;----|AB80/----\----;
                      INY                                 ;;----|AB82/----\----;
CODE_01AB83:          LDA.B #$02                          ;;----|AB83/----\----;
                      STA.W !SmokeSpriteNumber,Y          ;;----|AB85/----\----;
                      LDA.B !SpriteXPosLow,X              ;;----|AB88/----\----;
                      STA.W !SmokeSpriteXPos,Y            ;;----|AB8A/----\----;
                      LDA.B !SpriteYPosLow,X              ;;----|AB8D/----\----;
                      STA.W !SmokeSpriteYPos,Y            ;;----|AB8F/----\----;
                      LDA.B #$08                          ;;----|AB92/----\----;
                      STA.W !SmokeSpriteTimer,Y           ;;----|AB94/----\----;
                      PLY                                 ;;----|AB97/----\----;
Return01AB98:         RTL                                 ;;----|AB98/----\----; Return 
                                                          ;;                   ;
DisplayContactGfx:    JSR IsSprOffScreen                  ;;----|AB99/----\----;
                      BNE Return01ABCB                    ;;----|AB9C/----\----;
                      PHY                                 ;;----|AB9E/----\----;
                      LDY.B #$03                          ;;----|AB9F/----\----;
CODE_01ABA1:          LDA.W !SmokeSpriteNumber,Y          ;;----|ABA1/----\----;
                      BEQ CODE_01ABAA                     ;;----|ABA4/----\----;
                      DEY                                 ;;----|ABA6/----\----;
                      BPL CODE_01ABA1                     ;;----|ABA7/----\----;
                      INY                                 ;;----|ABA9/----\----;
CODE_01ABAA:          LDA.B #$02                          ;;----|ABAA/----\----;
                      STA.W !SmokeSpriteNumber,Y          ;;----|ABAC/----\----;
                      LDA.B !PlayerXPosNext               ;;----|ABAF/----\----;
                      STA.W !SmokeSpriteXPos,Y            ;;----|ABB1/----\----;
                      LDA.W !PlayerRidingYoshi            ;;----|ABB4/----\----;
                      CMP.B #$01                          ;;----|ABB7/----\----;
                      LDA.B #$14                          ;;----|ABB9/----\----;
                      BCC +                               ;;----|ABBB/----\----;
                      LDA.B #$1E                          ;;----|ABBD/----\----;
                    + CLC                                 ;;----|ABBF/----\----;
                      ADC.B !PlayerYPosNext               ;;----|ABC0/----\----;
                      STA.W !SmokeSpriteYPos,Y            ;;----|ABC2/----\----;
                      LDA.B #$08                          ;;----|ABC5/----\----;
                      STA.W !SmokeSpriteTimer,Y           ;;----|ABC7/----\----;
                      PLY                                 ;;----|ABCA/----\----;
Return01ABCB:         RTL                                 ;;----|ABCB/----\----; Return 
                                                          ;;                   ;
SubSprXPosNoGrvty:    TXA                                 ;;----|ABCC/----\----;
                      CLC                                 ;;----|ABCD/----\----;
                      ADC.B #$0C                          ;;----|ABCE/----\----;
                      TAX                                 ;;----|ABD0/----\----;
                      JSR SubSprYPosNoGrvty               ;;----|ABD1/----\----;
                      LDX.W !CurSpriteProcess             ;;----|ABD4/----\----; X = Sprite index 
                      RTS                                 ;;----|ABD7/----\----; Return 
                                                          ;;                   ;
SubSprYPosNoGrvty:    LDA.B !SpriteYSpeed,X               ;;----|ABD8/----\----; Load current sprite's Y speed 
                      BEQ CODE_01AC09                     ;;----|ABDA/----\----; If speed is 0, branch to $AC09 
                      ASL A                               ;;----|ABDC/----\----; \  
                      ASL A                               ;;----|ABDD/----\----;  |Multiply speed by 16 
                      ASL A                               ;;----|ABDE/----\----;  | 
                      ASL A                               ;;----|ABDF/----\----; /  
                      CLC                                 ;;----|ABE0/----\----; \  
                      ADC.W !SpriteYPosSpx,X              ;;----|ABE1/----\----;  |Increase (unknown sprite table) by that value 
                      STA.W !SpriteYPosSpx,X              ;;----|ABE4/----\----; /  
                      PHP                                 ;;----|ABE7/----\----;
                      PHP                                 ;;----|ABE8/----\----;
                      LDY.B #$00                          ;;----|ABE9/----\----;
                      LDA.B !SpriteYSpeed,X               ;;----|ABEB/----\----; Load current sprite's Y speed 
                      LSR A                               ;;----|ABED/----\----; \  
                      LSR A                               ;;----|ABEE/----\----;  |Multiply speed by 16 
                      LSR A                               ;;----|ABEF/----\----;  | 
                      LSR A                               ;;----|ABF0/----\----; /  
                      CMP.B #$08                          ;;----|ABF1/----\----;
                      BCC +                               ;;----|ABF3/----\----;
                      ORA.B #$F0                          ;;----|ABF5/----\----;
                      DEY                                 ;;----|ABF7/----\----;
                    + PLP                                 ;;----|ABF8/----\----;
                      PHA                                 ;;----|ABF9/----\----;
                      ADC.B !SpriteYPosLow,X              ;;----|ABFA/----\----; \ Add value to current sprite's Y position 
                      STA.B !SpriteYPosLow,X              ;;----|ABFC/----\----; /  
                      TYA                                 ;;----|ABFE/----\----;
                      ADC.W !SpriteXPosHigh,X             ;;----|ABFF/----\----;
                      STA.W !SpriteXPosHigh,X             ;;----|AC02/----\----;
                      PLA                                 ;;----|AC05/----\----;
                      PLP                                 ;;----|AC06/----\----;
                      ADC.B #$00                          ;;----|AC07/----\----;
CODE_01AC09:          STA.W !SpriteXMovement              ;;----|AC09/----\----;
                      RTS                                 ;;----|AC0C/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
SpriteOffScreen1:     db $40,$B0                          ;;----|AC0D/----\----;
                                                          ;;                   ;
SpriteOffScreen2:     db $01,$FF                          ;;----|AC0F/----\----;
                                                          ;;                   ;
SpriteOffScreen3:     db $30,$C0,$A0,$C0,$A0,$F0,$60,$90  ;;----|AC11/----\----;
SpriteOffScreen4:     db $01,$FF,$01,$FF,$01,$FF,$01,$FF  ;;----|AC19/----\----;
                                                          ;;                   ;
SubOffscreen3Bnk1:    LDA.B #$06                          ;;----|AC21/----\----; \ Entry point of routine determines value of $03 
                      STA.B !_3                           ;;----|AC23/----\----;  | 
                      BRA +                               ;;----|AC25/----\----;  | 
                                                          ;;                   ;
SubOffscreen2Bnk1:    LDA.B #$04                          ;;----|AC27/----\----;  | 
                      BRA +                               ;;----|AC29/----\----;  | 
                                                          ;;                   ;
SubOffscreen1Bnk1:    LDA.B #$02                          ;;----|AC2B/----\----;  | 
                    + STA.B !_3                           ;;----|AC2D/----\----;  | 
                      BRA +                               ;;----|AC2F/----\----;  | 
                                                          ;;                   ;
SubOffscreen0Bnk1:    STZ.B !_3                           ;;----|AC31/----\----; / 
                    + JSR IsSprOffScreen                  ;;----|AC33/----\----; \ if sprite is not off screen, return                                       
                      BEQ Return01ACA4                    ;;----|AC36/----\----; /                                                                           
                      LDA.B !ScreenMode                   ;;----|AC38/----\----; \  vertical level                                    
                      AND.B #$01                          ;;----|AC3A/----\----;  | 
                      BNE VerticalLevel                   ;;----|AC3C/----\----; /                                                                           
                      LDA.B !SpriteYPosLow,X              ;;----|AC3E/----\----; \                                                                           
                      CLC                                 ;;----|AC40/----\----;  | 
                      ADC.B #$50                          ;;----|AC41/----\----;  | if the sprite has gone off the bottom of the level... 
                      LDA.W !SpriteXPosHigh,X             ;;----|AC43/----\----;  | (if adding 0x50 to the sprite y position would make the high byte >= 2) 
                      ADC.B #$00                          ;;----|AC46/----\----;  | 
                      CMP.B #$02                          ;;----|AC48/----\----;  | 
                      BPL OffScrEraseSprite               ;;----|AC4A/----\----; /    ...erase the sprite                                                    
                      LDA.W !SpriteTweakerD,X             ;;----|AC4C/----\----; \ if "process offscreen" flag is set, return                                
                      AND.B #$04                          ;;----|AC4F/----\----;  | 
                      BNE Return01ACA4                    ;;----|AC51/----\----; /                                                                           
                      LDA.B !TrueFrame                    ;;----|AC53/----\----;
                      AND.B #$01                          ;;----|AC55/----\----;
                      ORA.B !_3                           ;;----|AC57/----\----;
                      STA.B !_1                           ;;----|AC59/----\----;
                      TAY                                 ;;----|AC5B/----\----;
                      LDA.B !Layer1XPos                   ;;----|AC5C/----\----;
                      CLC                                 ;;----|AC5E/----\----;
                      ADC.W SpriteOffScreen3,Y            ;;----|AC5F/----\----;
                      ROL.B !_0                           ;;----|AC62/----\----;
                      CMP.B !SpriteXPosLow,X              ;;----|AC64/----\----;
                      PHP                                 ;;----|AC66/----\----;
                      LDA.B !Layer1XPos+1                 ;;----|AC67/----\----;
                      LSR.B !_0                           ;;----|AC69/----\----;
                      ADC.W SpriteOffScreen4,Y            ;;----|AC6B/----\----;
                      PLP                                 ;;----|AC6E/----\----;
                      SBC.W !SpriteYPosHigh,X             ;;----|AC6F/----\----;
                      STA.B !_0                           ;;----|AC72/----\----;
                      LSR.B !_1                           ;;----|AC74/----\----;
                      BCC +                               ;;----|AC76/----\----;
                      EOR.B #$80                          ;;----|AC78/----\----;
                      STA.B !_0                           ;;----|AC7A/----\----;
                    + LDA.B !_0                           ;;----|AC7C/----\----;
                      BPL Return01ACA4                    ;;----|AC7E/----\----;
OffScrEraseSprite:    LDA.B !SpriteNumber,X               ;;----|AC80/----\----; \ If MagiKoopa... 
                      CMP.B #$1F                          ;;----|AC82/----\----;  | 
                      BNE +                               ;;----|AC84/----\----;  | Sprite to respawn = MagiKoopa 
                      STA.W !SpriteRespawnNumber          ;;----|AC86/----\----;  | 
                      LDA.B #$FF                          ;;----|AC89/----\----;  | Set timer until respawn 
                      STA.W !SpriteRespawnTimer           ;;----|AC8B/----\----; / 
                    + LDA.W !SpriteStatus,X               ;;----|AC8E/----\----; \ If sprite status < 8, permanently erase sprite 
                      CMP.B #$08                          ;;----|AC91/----\----;  | 
                      BCC +                               ;;----|AC93/----\----; / 
                      LDY.W !SpriteLoadIndex,X            ;;----|AC95/----\----; \ Branch if should permanently erase sprite 
                      CPY.B #$FF                          ;;----|AC98/----\----;  | 
                      BEQ +                               ;;----|AC9A/----\----; / 
                      LDA.B #$00                          ;;----|AC9C/----\----; \ Allow sprite to be reloaded by level loading routine 
                      STA.W !SpriteLoadStatus,Y           ;;----|AC9E/----\----; / 
                    + STZ.W !SpriteStatus,X               ;;----|ACA1/----\----; Erase sprite 
Return01ACA4:         RTS                                 ;;----|ACA4/----\----;
                                                          ;;                   ;
VerticalLevel:        LDA.W !SpriteTweakerD,X             ;;----|ACA5/----\----; \ If "process offscreen" flag is set, return                
                      AND.B #$04                          ;;----|ACA8/----\----;  | 
                      BNE Return01ACA4                    ;;----|ACAA/----\----; /                                                           
                      LDA.B !TrueFrame                    ;;----|ACAC/----\----; \ Return every other frame 
                      LSR A                               ;;----|ACAE/----\----;  | 
                      BCS Return01ACA4                    ;;----|ACAF/----\----; /                                                           
                      LDA.B !SpriteXPosLow,X              ;;----|ACB1/----\----; \                                                           
                      CMP.B #$00                          ;;----|ACB3/----\----;  | If the sprite has gone off the side of the level...      
                      LDA.W !SpriteYPosHigh,X             ;;----|ACB5/----\----;  |                                                          
                      SBC.B #$00                          ;;----|ACB8/----\----;  |                                                          
                      CMP.B #$02                          ;;----|ACBA/----\----;  |                                                          
                      BCS OffScrEraseSprite               ;;----|ACBC/----\----; /  ...erase the sprite      
                      LDA.B !TrueFrame                    ;;----|ACBE/----\----;
                      LSR A                               ;;----|ACC0/----\----;
                      AND.B #$01                          ;;----|ACC1/----\----;
                      STA.B !_1                           ;;----|ACC3/----\----;
                      TAY                                 ;;----|ACC5/----\----;
                      BEQ CODE_01ACD2                     ;;----|ACC6/----\----;
                      LDA.B !SpriteNumber,X               ;;----|ACC8/----\----; \ Return if Green Net Koopa 
                      CMP.B #$22                          ;;----|ACCA/----\----;  | 
                      BEQ Return01ACA4                    ;;----|ACCC/----\----;  | 
                      CMP.B #$24                          ;;----|ACCE/----\----;  | 
                      BEQ Return01ACA4                    ;;----|ACD0/----\----; / 
CODE_01ACD2:          LDA.B !Layer1YPos                   ;;----|ACD2/----\----;
                      CLC                                 ;;----|ACD4/----\----;
                      ADC.W SpriteOffScreen1,Y            ;;----|ACD5/----\----;
                      ROL.B !_0                           ;;----|ACD8/----\----;
                      CMP.B !SpriteYPosLow,X              ;;----|ACDA/----\----;
                      PHP                                 ;;----|ACDC/----\----;
                      LDA.W !Layer1YPos+1                 ;;----|ACDD/----\----;
                      LSR.B !_0                           ;;----|ACE0/----\----;
                      ADC.W SpriteOffScreen2,Y            ;;----|ACE2/----\----;
                      PLP                                 ;;----|ACE5/----\----;
                      SBC.W !SpriteXPosHigh,X             ;;----|ACE6/----\----;
                      STA.B !_0                           ;;----|ACE9/----\----;
                      LDY.B !_1                           ;;----|ACEB/----\----;
                      BEQ +                               ;;----|ACED/----\----;
                      EOR.B #$80                          ;;----|ACEF/----\----;
                      STA.B !_0                           ;;----|ACF1/----\----;
                    + LDA.B !_0                           ;;----|ACF3/----\----;
                      BPL Return01ACA4                    ;;----|ACF5/----\----;
                      BMI OffScrEraseSprite               ;;----|ACF7/----\----;
GetRand:              PHY                                 ;;----|ACF9/----\----;
                      LDY.B #$01                          ;;----|ACFA/----\----;
                      JSL CODE_01AD07                     ;;----|ACFC/----\----;
                      DEY                                 ;;----|AD00/----\----;
                      JSL CODE_01AD07                     ;;----|AD01/----\----;
                      PLY                                 ;;----|AD05/----\----;
                      RTL                                 ;;----|AD06/----\----; Return 
                                                          ;;                   ;
CODE_01AD07:          LDA.W !RNGCalc                      ;;----|AD07/----\----;
                      ASL A                               ;;----|AD0A/----\----;
                      ASL A                               ;;----|AD0B/----\----;
                      SEC                                 ;;----|AD0C/----\----;
                      ADC.W !RNGCalc                      ;;----|AD0D/----\----;
                      STA.W !RNGCalc                      ;;----|AD10/----\----;
                      ASL.W !RNGCalc+1                    ;;----|AD13/----\----;
                      LDA.B #$20                          ;;----|AD16/----\----;
                      BIT.W !RNGCalc+1                    ;;----|AD18/----\----;
                      BCC CODE_01AD21                     ;;----|AD1B/----\----;
                      BEQ CODE_01AD26                     ;;----|AD1D/----\----;
                      BNE CODE_01AD23                     ;;----|AD1F/----\----;
CODE_01AD21:          BNE CODE_01AD26                     ;;----|AD21/----\----;
CODE_01AD23:          INC.W !RNGCalc+1                    ;;----|AD23/----\----;
CODE_01AD26:          LDA.W !RNGCalc+1                    ;;----|AD26/----\----;
                      EOR.W !RNGCalc                      ;;----|AD29/----\----;
                      STA.W !RandomNumber,Y               ;;----|AD2C/----\----;
                      RTL                                 ;;----|AD2F/----\----; Return 
                                                          ;;                   ;
SubHorizPos:          LDY.B #$00                          ;;----|AD30/----\----;
                      LDA.B !PlayerXPosNow                ;;----|AD32/----\----;
                      SEC                                 ;;----|AD34/----\----;
                      SBC.B !SpriteXPosLow,X              ;;----|AD35/----\----;
                      STA.B !_F                           ;;----|AD37/----\----;
                      LDA.B !PlayerXPosNow+1              ;;----|AD39/----\----;
                      SBC.W !SpriteYPosHigh,X             ;;----|AD3B/----\----;
                      BPL +                               ;;----|AD3E/----\----;
                      INY                                 ;;----|AD40/----\----;
                    + RTS                                 ;;----|AD41/----\----; Return 
                                                          ;;                   ;
CODE_01AD42:          LDY.B #$00                          ;;----|AD42/----\----;
                      LDA.B !PlayerYPosNow                ;;----|AD44/----\----;
                      SEC                                 ;;----|AD46/----\----;
                      SBC.B !SpriteYPosLow,X              ;;----|AD47/----\----;
                      STA.B !_E                           ;;----|AD49/----\----;
                      LDA.B !PlayerYPosNow+1              ;;----|AD4B/----\----;
                      SBC.W !SpriteXPosHigh,X             ;;----|AD4D/----\----;
                      BPL +                               ;;----|AD50/----\----;
                      INY                                 ;;----|AD52/----\----;
                    + RTS                                 ;;----|AD53/----\----; Return 
                                                          ;;                   ;
                      %insert_empty($02,$05,$05,$00)      ;;----|AD54/----\----;
                                                          ;;                   ;
InitFlying_Block:     LDA.B !SpriteXPosLow,X              ;;----|AD59/----\----;
                      LSR A                               ;;----|AD5B/----\----;
                      LSR A                               ;;----|AD5C/----\----;
                      LSR A                               ;;----|AD5D/----\----;
                      LSR A                               ;;----|AD5E/----\----;
                      AND.B #$03                          ;;----|AD5F/----\----;
                      STA.W !SpriteMisc151C,X             ;;----|AD61/----\----;
                      INC.W !SpriteMisc157C,X             ;;----|AD64/----\----;
                      RTS                                 ;;----|AD67/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
DATA_01AD68:          db $FF,$01                          ;;----|AD68/----\----;
                                                          ;;                   ;
DATA_01AD6A:          db $F4,$0C                          ;;----|AD6A/----\----;
                                                          ;;                   ;
DATA_01AD6C:          db $F0,$10                          ;;----|AD6C/----\----;
                                                          ;;                   ;
Flying_Block:         LDA.W !SpriteMisc163E,X             ;;----|AD6E/----\----;
                      BEQ +                               ;;----|AD71/----\----;
                      STZ.W !SpriteOAMIndex,X             ;;----|AD73/----\----;
                      LDA.W !PlayerRidingYoshi            ;;----|AD76/----\----;
                      BNE +                               ;;----|AD79/----\----;
                      LDA.B #$04                          ;;----|AD7B/----\----;
                      STA.W !SpriteOAMIndex,X             ;;----|AD7D/----\----;
                    + JSR SubSprGfx2Entry1                ;;----|AD80/----\----;
                      LDY.W !SpriteOAMIndex,X             ;;----|AD83/----\----; Y = Index into sprite OAM 
                      LDA.W !OAMTileYPos+$100,Y           ;;----|AD86/----\----;
                      DEC A                               ;;----|AD89/----\----;
                      STA.W !OAMTileYPos+$100,Y           ;;----|AD8A/----\----;
                      STZ.W !SpriteMisc1528,X             ;;----|AD8D/----\----;
                      LDA.B !SpriteTableC2,X              ;;----|AD90/----\----;
                      BNE CODE_01ADF8                     ;;----|AD92/----\----;
                      JSR CODE_019E95                     ;;----|AD94/----\----;
                      LDA.B !SpriteLock                   ;;----|AD97/----\----; \ Branch if sprites locked 
                      BNE CODE_01ADF8                     ;;----|AD99/----\----; / 
                      LDA.B !TrueFrame                    ;;----|AD9B/----\----;
                      AND.B #$01                          ;;----|AD9D/----\----;
                      BNE +                               ;;----|AD9F/----\----;
                      LDA.W !SpriteMisc1594,X             ;;----|ADA1/----\----;
                      AND.B #$01                          ;;----|ADA4/----\----;
                      TAY                                 ;;----|ADA6/----\----;
                      LDA.B !SpriteYSpeed,X               ;;----|ADA7/----\----;
                      CLC                                 ;;----|ADA9/----\----;
                      ADC.W DATA_01AD68,Y                 ;;----|ADAA/----\----;
                      STA.B !SpriteYSpeed,X               ;;----|ADAD/----\----;
                      CMP.W DATA_01AD6A,Y                 ;;----|ADAF/----\----;
                      BNE +                               ;;----|ADB2/----\----;
                      INC.W !SpriteMisc1594,X             ;;----|ADB4/----\----;
                    + JSR SubSprYPosNoGrvty               ;;----|ADB7/----\----;
                      LDA.B !SpriteNumber,X               ;;----|ADBA/----\----;
                      CMP.B #$83                          ;;----|ADBC/----\----;
                      BEQ CODE_01ADE8                     ;;----|ADBE/----\----;
                      LDA.W !SpriteMisc1540,X             ;;----|ADC0/----\----;
                      BNE +                               ;;----|ADC3/----\----;
                      LDA.B !TrueFrame                    ;;----|ADC5/----\----;
                      AND.B #$03                          ;;----|ADC7/----\----;
                      BNE +                               ;;----|ADC9/----\----;
                      LDA.W !SpriteMisc1534,X             ;;----|ADCB/----\----;
                      AND.B #$01                          ;;----|ADCE/----\----;
                      TAY                                 ;;----|ADD0/----\----;
                      LDA.B !SpriteXSpeed,X               ;;----|ADD1/----\----;
                      CLC                                 ;;----|ADD3/----\----;
                      ADC.W DATA_01AD68,Y                 ;;----|ADD4/----\----;
                      STA.B !SpriteXSpeed,X               ;;----|ADD7/----\----;
                      CMP.W DATA_01AD6C,Y                 ;;----|ADD9/----\----;
                      BNE +                               ;;----|ADDC/----\----;
                      INC.W !SpriteMisc1534,X             ;;----|ADDE/----\----;
                      LDA.B #$20                          ;;----|ADE1/----\----;
                      STA.W !SpriteMisc1540,X             ;;----|ADE3/----\----;
                    + BRA +                               ;;----|ADE6/----\----;
                                                          ;;                   ;
CODE_01ADE8:          LDA.B #$F4                          ;;----|ADE8/----\----;
                      STA.B !SpriteXSpeed,X               ;;----|ADEA/----\----;
                    + JSR SubSprXPosNoGrvty               ;;----|ADEC/----\----;
                      LDA.W !SpriteXMovement              ;;----|ADEF/----\----;
                      STA.W !SpriteMisc1528,X             ;;----|ADF2/----\----;
                      INC.W !SpriteMisc1570,X             ;;----|ADF5/----\----;
CODE_01ADF8:          JSR SubSprSprInteract               ;;----|ADF8/----\----;
                      JSR CODE_01B457                     ;;----|ADFB/----\----;
                      JSR SubOffscreen0Bnk1               ;;----|ADFE/----\----;
                      LDA.W !SpriteMisc1558,X             ;;----|AE01/----\----;
                      CMP.B #$08                          ;;----|AE04/----\----;
                      BNE CODE_01AE5E                     ;;----|AE06/----\----;
                      LDY.B !SpriteTableC2,X              ;;----|AE08/----\----;
                      CPY.B #$02                          ;;----|AE0A/----\----;
                      BEQ CODE_01AE5E                     ;;----|AE0C/----\----;
                      PHA                                 ;;----|AE0E/----\----;
                      INC.B !SpriteTableC2,X              ;;----|AE0F/----\----;
                      LDA.B #$50                          ;;----|AE11/----\----;
                      STA.W !SpriteMisc163E,X             ;;----|AE13/----\----;
                      LDA.B !SpriteXPosLow,X              ;;----|AE16/----\----;
                      STA.B !TouchBlockXPos               ;;----|AE18/----\----;
                      LDA.W !SpriteYPosHigh,X             ;;----|AE1A/----\----;
                      STA.B !TouchBlockXPos+1             ;;----|AE1D/----\----;
                      LDA.B !SpriteYPosLow,X              ;;----|AE1F/----\----;
                      STA.B !TouchBlockYPos               ;;----|AE21/----\----;
                      LDA.W !SpriteXPosHigh,X             ;;----|AE23/----\----;
                      STA.B !TouchBlockYPos+1             ;;----|AE26/----\----;
                      LDA.B #$FF                          ;;----|AE28/----\----; \ Set to permanently erase sprite 
                      STA.W !SpriteLoadIndex,X            ;;----|AE2A/----\----; / 
                      LDY.W !SpriteMisc151C,X             ;;----|AE2D/----\----;
                      LDA.B !Powerup                      ;;----|AE30/----\----;
                      BNE +                               ;;----|AE32/----\----;
                      INY                                 ;;----|AE34/----\----;
                      INY                                 ;;----|AE35/----\----;
                      INY                                 ;;----|AE36/----\----;
                      INY                                 ;;----|AE37/----\----;
                    + LDA.W DATA_01AE88,Y                 ;;----|AE38/----\----;
                      STA.B !_5                           ;;----|AE3B/----\----;
                      PHB                                 ;;----|AE3D/----\----;
                      LDA.B #$02                          ;;----|AE3E/----\----;
                      PHA                                 ;;----|AE40/----\----;
                      PLB                                 ;;----|AE41/----\----;
                      PHX                                 ;;----|AE42/----\----;
                      JSL CODE_02887D                     ;;----|AE43/----\----;
                      PLX                                 ;;----|AE47/----\----;
                      LDY.W !TileGenerateTrackA           ;;----|AE48/----\----;
                      LDA.B #$01                          ;;----|AE4B/----\----;
                      STA.W !SpriteMisc1528,Y             ;;----|AE4D/----\----;
                      LDA.W !SpriteNumber,Y               ;;----|AE50/----\----;
                      CMP.B #$75                          ;;----|AE53/----\----;
                      BNE +                               ;;----|AE55/----\----;
                      LDA.B #$FF                          ;;----|AE57/----\----;
                      STA.W !SpriteTableC2,Y              ;;----|AE59/----\----;
                    + PLB                                 ;;----|AE5C/----\----;
                      PLA                                 ;;----|AE5D/----\----;
CODE_01AE5E:          LSR A                               ;;----|AE5E/----\----;
                      TAY                                 ;;----|AE5F/----\----;
                      LDA.W DATA_01AE7F,Y                 ;;----|AE60/----\----;
                      STA.B !_0                           ;;----|AE63/----\----;
                      LDY.W !SpriteOAMIndex,X             ;;----|AE65/----\----; Y = Index into sprite OAM 
                      LDA.W !OAMTileYPos+$100,Y           ;;----|AE68/----\----;
                      SEC                                 ;;----|AE6B/----\----;
                      SBC.B !_0                           ;;----|AE6C/----\----;
                      STA.W !OAMTileYPos+$100,Y           ;;----|AE6E/----\----;
                      LDA.B !SpriteTableC2,X              ;;----|AE71/----\----;
                      CMP.B #$01                          ;;----|AE73/----\----;
                      LDA.B #$2A                          ;;----|AE75/----\----;
                      BCC +                               ;;----|AE77/----\----;
                      LDA.B #$2E                          ;;----|AE79/----\----;
                    + STA.W !OAMTileNo+$100,Y             ;;----|AE7B/----\----;
                      RTS                                 ;;----|AE7E/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
DATA_01AE7F:          db $00,$03,$05,$07,$08,$08,$07,$05  ;;----|AE7F/----\----;
                      db $03                              ;;----|AE87/----\----;
                                                          ;;                   ;
DATA_01AE88:          db $06,$02,$04,$05,$06,$01,$01,$05  ;;----|AE88/----\----;
                                                          ;;                   ;
Return01AE90:         RTS                                 ;;----|AE90/----\----;
                                                          ;;                   ;
PalaceSwitch:         JSL CODE_02CD2D                     ;;----|AE91/----\----;
                      RTS                                 ;;----|AE95/----\----; Return 
                                                          ;;                   ;
InitThwomp:           LDA.B !SpriteYPosLow,X              ;;----|AE96/----\----;
                      STA.W !SpriteMisc151C,X             ;;----|AE98/----\----;
                      LDA.B !SpriteXPosLow,X              ;;----|AE9B/----\----;
                      CLC                                 ;;----|AE9D/----\----;
                      ADC.B #$08                          ;;----|AE9E/----\----;
                      STA.B !SpriteXPosLow,X              ;;----|AEA0/----\----;
Return01AEA2:         RTS                                 ;;----|AEA2/----\----;
                                                          ;;                   ;
Thwomp:               JSR ThwompGfx                       ;;----|AEA3/----\----;
                      LDA.W !SpriteStatus,X               ;;----|AEA6/----\----;
                      CMP.B #$08                          ;;----|AEA9/----\----;
                      BNE Return01AEA2                    ;;----|AEAB/----\----;
                      LDA.B !SpriteLock                   ;;----|AEAD/----\----; \ Branch if sprites locked 
                      BNE Return01AEA2                    ;;----|AEAF/----\----; / 
                      JSR SubOffscreen0Bnk1               ;;----|AEB1/----\----;
                      JSR MarioSprInteractRt              ;;----|AEB4/----\----;
                      LDA.B !SpriteTableC2,X              ;;----|AEB7/----\----;
                      JSL ExecutePtr                      ;;----|AEB9/----\----;
                                                          ;;                   ;
                      dw CODE_01AEC3                      ;;----|AEBD/----\----;
                      dw CODE_01AEFA                      ;;----|AEBF/----\----;
                      dw CODE_01AF24                      ;;----|AEC1/----\----;
                                                          ;;                   ;
CODE_01AEC3:          LDA.W !SpriteOffscreenVert,X        ;;----|AEC3/----\----;
                      BNE CODE_01AEEE                     ;;----|AEC6/----\----;
                      LDA.W !SpriteOffscreenX,X           ;;----|AEC8/----\----;
                      BNE Return01AEF9                    ;;----|AECB/----\----;
                      JSR SubHorizPos                     ;;----|AECD/----\----;
                      TYA                                 ;;----|AED0/----\----;
                      STA.W !SpriteMisc157C,X             ;;----|AED1/----\----;
                      STZ.W !SpriteMisc1528,X             ;;----|AED4/----\----;
                      LDA.B !_F                           ;;----|AED7/----\----;
                      CLC                                 ;;----|AED9/----\----;
                      ADC.B #$40                          ;;----|AEDA/----\----;
                      CMP.B #$80                          ;;----|AEDC/----\----;
                      BCS +                               ;;----|AEDE/----\----;
                      LDA.B #$01                          ;;----|AEE0/----\----;
                      STA.W !SpriteMisc1528,X             ;;----|AEE2/----\----;
                    + LDA.B !_F                           ;;----|AEE5/----\----;
                      CLC                                 ;;----|AEE7/----\----;
                      ADC.B #$24                          ;;----|AEE8/----\----;
                      CMP.B #$50                          ;;----|AEEA/----\----;
                      BCS Return01AEF9                    ;;----|AEEC/----\----;
CODE_01AEEE:          LDA.B #$02                          ;;----|AEEE/----\----;
                      STA.W !SpriteMisc1528,X             ;;----|AEF0/----\----;
                      INC.B !SpriteTableC2,X              ;;----|AEF3/----\----;
                      LDA.B #$00                          ;;----|AEF5/----\----;
                      STA.B !SpriteYSpeed,X               ;;----|AEF7/----\----;
Return01AEF9:         RTS                                 ;;----|AEF9/----\----; Return 
                                                          ;;                   ;
CODE_01AEFA:          JSR SubSprYPosNoGrvty               ;;----|AEFA/----\----;
                      LDA.B !SpriteYSpeed,X               ;;----|AEFD/----\----;
                      CMP.B #$3E                          ;;----|AEFF/----\----;
                      BCS +                               ;;----|AF01/----\----;
                      ADC.B #$04                          ;;----|AF03/----\----;
                      STA.B !SpriteYSpeed,X               ;;----|AF05/----\----;
                    + JSR CODE_019140                     ;;----|AF07/----\----;
                      JSR IsOnGround                      ;;----|AF0A/----\----;
                      BEQ +                               ;;----|AF0D/----\----;
                      JSR SetSomeYSpeed__                 ;;----|AF0F/----\----;
                      LDA.B #$18                          ;;----|AF12/----\----; \ Set ground shake timer 
                      STA.W !ScreenShakeTimer             ;;----|AF14/----\----; / 
                      LDA.B #$09                          ;;----|AF17/----\----;
                      STA.W !SPCIO3                       ;;----|AF19/----\----; / Play sound effect 
                      LDA.B #$40                          ;;----|AF1C/----\----;
                      STA.W !SpriteMisc1540,X             ;;----|AF1E/----\----;
                      INC.B !SpriteTableC2,X              ;;----|AF21/----\----;
                    + RTS                                 ;;----|AF23/----\----; Return 
                                                          ;;                   ;
CODE_01AF24:          LDA.W !SpriteMisc1540,X             ;;----|AF24/----\----;
                      BNE Return01AF3F                    ;;----|AF27/----\----;
                      STZ.W !SpriteMisc1528,X             ;;----|AF29/----\----;
                      LDA.B !SpriteYPosLow,X              ;;----|AF2C/----\----;
                      CMP.W !SpriteMisc151C,X             ;;----|AF2E/----\----;
                      BNE +                               ;;----|AF31/----\----;
                      LDA.B #$00                          ;;----|AF33/----\----;
                      STA.B !SpriteTableC2,X              ;;----|AF35/----\----;
                      RTS                                 ;;----|AF37/----\----; Return 
                                                          ;;                   ;
                    + LDA.B #$F0                          ;;----|AF38/----\----;
                      STA.B !SpriteYSpeed,X               ;;----|AF3A/----\----;
                      JSR SubSprYPosNoGrvty               ;;----|AF3C/----\----;
Return01AF3F:         RTS                                 ;;----|AF3F/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
ThwompDispX:          db $FC,$04,$FC,$04,$00              ;;----|AF40/----\----;
                                                          ;;                   ;
ThwompDispY:          db $00,$00,$10,$10,$08              ;;----|AF45/----\----;
                                                          ;;                   ;
ThwompTiles:          db $8E,$8E,$AE,$AE,$C8              ;;----|AF4A/----\----;
                                                          ;;                   ;
ThwompGfxProp:        db $03,$43,$03,$43,$03              ;;----|AF4F/----\----;
                                                          ;;                   ;
ThwompGfx:            JSR GetDrawInfoBnk1                 ;;----|AF54/----\----;
                      LDA.W !SpriteMisc1528,X             ;;----|AF57/----\----;
                      STA.B !_2                           ;;----|AF5A/----\----;
                      PHX                                 ;;----|AF5C/----\----;
                      LDX.B #$03                          ;;----|AF5D/----\----;
                      CMP.B #$00                          ;;----|AF5F/----\----;
                      BEQ CODE_01AF64                     ;;----|AF61/----\----;
                      INX                                 ;;----|AF63/----\----;
CODE_01AF64:          LDA.B !_0                           ;;----|AF64/----\----;
                      CLC                                 ;;----|AF66/----\----;
                      ADC.W ThwompDispX,X                 ;;----|AF67/----\----;
                      STA.W !OAMTileXPos+$100,Y           ;;----|AF6A/----\----;
                      LDA.B !_1                           ;;----|AF6D/----\----;
                      CLC                                 ;;----|AF6F/----\----;
                      ADC.W ThwompDispY,X                 ;;----|AF70/----\----;
                      STA.W !OAMTileYPos+$100,Y           ;;----|AF73/----\----;
                      LDA.W ThwompGfxProp,X               ;;----|AF76/----\----;
                      ORA.B !SpriteProperties             ;;----|AF79/----\----;
                      STA.W !OAMTileAttr+$100,Y           ;;----|AF7B/----\----;
                      LDA.W ThwompTiles,X                 ;;----|AF7E/----\----;
                      CPX.B #$04                          ;;----|AF81/----\----;
                      BNE CODE_01AF8F                     ;;----|AF83/----\----;
                      PHX                                 ;;----|AF85/----\----;
                      LDX.B !_2                           ;;----|AF86/----\----;
                      CPX.B #$02                          ;;----|AF88/----\----;
                      BNE +                               ;;----|AF8A/----\----;
                      LDA.B #$CA                          ;;----|AF8C/----\----;
                    + PLX                                 ;;----|AF8E/----\----;
CODE_01AF8F:          STA.W !OAMTileNo+$100,Y             ;;----|AF8F/----\----;
                      INY                                 ;;----|AF92/----\----;
                      INY                                 ;;----|AF93/----\----;
                      INY                                 ;;----|AF94/----\----;
                      INY                                 ;;----|AF95/----\----;
                      DEX                                 ;;----|AF96/----\----;
                      BPL CODE_01AF64                     ;;----|AF97/----\----;
                      PLX                                 ;;----|AF99/----\----;
                      LDA.B #$04                          ;;----|AF9A/----\----;
                      JMP CODE_01B37E                     ;;----|AF9C/----\----;
                                                          ;;                   ;
Thwimp:               LDA.W !SpriteStatus,X               ;;----|AF9F/----\----;
                      CMP.B #$08                          ;;----|AFA2/----\----;
                      BNE CODE_01B006                     ;;----|AFA4/----\----;
                      LDA.B !SpriteLock                   ;;----|AFA6/----\----; \ Branch if sprites locked 
                      BNE CODE_01B006                     ;;----|AFA8/----\----; / 
                      JSR SubOffscreen0Bnk1               ;;----|AFAA/----\----;
                      JSR MarioSprInteractRt              ;;----|AFAD/----\----;
                      JSR SubSprXPosNoGrvty               ;;----|AFB0/----\----;
                      JSR SubSprYPosNoGrvty               ;;----|AFB3/----\----;
                      JSR CODE_019140                     ;;----|AFB6/----\----;
                      LDA.B !SpriteYSpeed,X               ;;----|AFB9/----\----;
                      BMI CODE_01AFC3                     ;;----|AFBB/----\----;
                      CMP.B #$40                          ;;----|AFBD/----\----;
                      BCS CODE_01AFC8                     ;;----|AFBF/----\----;
                      ADC.B #$05                          ;;----|AFC1/----\----;
CODE_01AFC3:          CLC                                 ;;----|AFC3/----\----;
                      ADC.B #$03                          ;;----|AFC4/----\----;
                      BRA +                               ;;----|AFC6/----\----;
                                                          ;;                   ;
CODE_01AFC8:          LDA.B #$40                          ;;----|AFC8/----\----;
                    + STA.B !SpriteYSpeed,X               ;;----|AFCA/----\----;
                      JSR IsTouchingCeiling               ;;----|AFCC/----\----; \ If touching ceiling, 
                      BEQ +                               ;;----|AFCF/----\----;  | 
                      LDA.B #$10                          ;;----|AFD1/----\----;  | Y speed = #$10 
                      STA.B !SpriteYSpeed,X               ;;----|AFD3/----\----; / 
                    + JSR IsOnGround                      ;;----|AFD5/----\----;
                      BEQ CODE_01B006                     ;;----|AFD8/----\----;
                      JSR SetSomeYSpeed__                 ;;----|AFDA/----\----;
                      STZ.B !SpriteXSpeed,X               ;;----|AFDD/----\----; \ Sprite Speed = 0 
                      STZ.B !SpriteYSpeed,X               ;;----|AFDF/----\----; / 
                      LDA.W !SpriteMisc1540,X             ;;----|AFE1/----\----;
                      BEQ CODE_01AFFC                     ;;----|AFE4/----\----;
                      DEC A                               ;;----|AFE6/----\----;
                      BNE CODE_01B006                     ;;----|AFE7/----\----;
                      LDA.B #$A0                          ;;----|AFE9/----\----;
                      STA.B !SpriteYSpeed,X               ;;----|AFEB/----\----;
                      INC.B !SpriteTableC2,X              ;;----|AFED/----\----;
                      LDA.B !SpriteTableC2,X              ;;----|AFEF/----\----;
                      LSR A                               ;;----|AFF1/----\----;
                      LDA.B #$10                          ;;----|AFF2/----\----;
                      BCC +                               ;;----|AFF4/----\----;
                      LDA.B #$F0                          ;;----|AFF6/----\----;
                    + STA.B !SpriteXSpeed,X               ;;----|AFF8/----\----;
                      BRA CODE_01B006                     ;;----|AFFA/----\----;
                                                          ;;                   ;
CODE_01AFFC:          LDA.B #$01                          ;;----|AFFC/----\----;
                      STA.W !SPCIO0                       ;;----|AFFE/----\----; / Play sound effect 
                      LDA.B #$40                          ;;----|B001/----\----;
                      STA.W !SpriteMisc1540,X             ;;----|B003/----\----;
CODE_01B006:          LDA.B #$01                          ;;----|B006/----\----;
                      JMP SubSprGfx0Entry0                ;;----|B008/----\----;
                                                          ;;                   ;
InitVerticalFish:     JSR FaceMario                       ;;----|B00B/----\----;
                      INC.W !SpriteMisc151C,X             ;;----|B00E/----\----;
Return01B011:         RTS                                 ;;----|B011/----\----;
                                                          ;;                   ;
                                                          ;;                   ;
DATA_01B012:          db $10,$F0                          ;;----|B012/----\----;
                                                          ;;                   ;
InitFish:             JSR SubHorizPos                     ;;----|B014/----\----;
                      LDA.W DATA_01B012,Y                 ;;----|B017/----\----;
                      STA.B !SpriteXSpeed,X               ;;----|B01A/----\----;
                      RTS                                 ;;----|B01C/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
DATA_01B01D:          db $08,$F8                          ;;----|B01D/----\----;
                                                          ;;                   ;
DATA_01B01F:          db $00,$00,$08,$F8                  ;;----|B01F/----\----;
                                                          ;;                   ;
DATA_01B023:          db $F0,$10                          ;;----|B023/----\----;
                                                          ;;                   ;
DATA_01B025:          db $E0,$E8,$D0,$D8                  ;;----|B025/----\----;
                                                          ;;                   ;
DATA_01B029:          db $08,$F8,$10,$F0,$04,$FC,$14,$EC  ;;----|B029/----\----;
DATA_01B031:          db $03,$0C                          ;;----|B031/----\----;
                                                          ;;                   ;
Fish:                 LDA.W !SpriteStatus,X               ;;----|B033/----\----;
                      CMP.B #$08                          ;;----|B036/----\----;
                      BNE CODE_01B03E                     ;;----|B038/----\----;
                      LDA.B !SpriteLock                   ;;----|B03A/----\----;
                      BEQ +                               ;;----|B03C/----\----;
CODE_01B03E:          JMP CODE_01B10A                     ;;----|B03E/----\----;
                                                          ;;                   ;
                    + JSR SetAnimationFrame               ;;----|B041/----\----;
                      LDA.W !SpriteInLiquid,X             ;;----|B044/----\----;
                      BNE CODE_01B0A7                     ;;----|B047/----\----;
                      JSR SubUpdateSprPos                 ;;----|B049/----\----;
                      JSR IsTouchingObjSide               ;;----|B04C/----\----;
                      BEQ +                               ;;----|B04F/----\----;
                      JSR FlipSpriteDir                   ;;----|B051/----\----;
                    + JSR IsOnGround                      ;;----|B054/----\----;
                      BEQ CODE_01B09C                     ;;----|B057/----\----;
                      LDA.W !SpriteBuoyancy               ;;----|B059/----\----;
                      BEQ +                               ;;----|B05C/----\----;
                      JSL CODE_0284BC                     ;;----|B05E/----\----;
                    + JSL GetRand                         ;;----|B062/----\----;
                      ADC.B !TrueFrame                    ;;----|B066/----\----;
                      AND.B #$07                          ;;----|B068/----\----;
                      TAY                                 ;;----|B06A/----\----;
                      LDA.W DATA_01B029,Y                 ;;----|B06B/----\----;
                      STA.B !SpriteXSpeed,X               ;;----|B06E/----\----;
                      JSL GetRand                         ;;----|B070/----\----;
                      LDA.W !RandomNumber+1               ;;----|B074/----\----;
                      AND.B #$03                          ;;----|B077/----\----;
                      TAY                                 ;;----|B079/----\----;
                      LDA.W DATA_01B025,Y                 ;;----|B07A/----\----;
                      STA.B !SpriteYSpeed,X               ;;----|B07D/----\----;
                      LDA.W !RandomNumber                 ;;----|B07F/----\----;
                      AND.B #$40                          ;;----|B082/----\----;
                      BNE +                               ;;----|B084/----\----;
                      LDA.W !SpriteOBJAttribute,X         ;;----|B086/----\----;
                      EOR.B #$80                          ;;----|B089/----\----;
                      STA.W !SpriteOBJAttribute,X         ;;----|B08B/----\----;
                    + JSL GetRand                         ;;----|B08E/----\----;
                      LDA.W !RandomNumber                 ;;----|B092/----\----;
                      AND.B #$80                          ;;----|B095/----\----;
                      BNE CODE_01B09C                     ;;----|B097/----\----;
                      JSR UpdateDirection                 ;;----|B099/----\----;
CODE_01B09C:          LDA.W !SpriteMisc1602,X             ;;----|B09C/----\----;
                      CLC                                 ;;----|B09F/----\----;
                      ADC.B #$02                          ;;----|B0A0/----\----;
                      STA.W !SpriteMisc1602,X             ;;----|B0A2/----\----;
                      BRA CODE_01B0EA                     ;;----|B0A5/----\----;
                                                          ;;                   ;
CODE_01B0A7:          JSR CODE_019140                     ;;----|B0A7/----\----;
                      JSR UpdateDirection                 ;;----|B0AA/----\----;
                      ASL.W !SpriteOBJAttribute,X         ;;----|B0AD/----\----;
                      LSR.W !SpriteOBJAttribute,X         ;;----|B0B0/----\----;
                      LDA.W !SpriteBlockedDirs,X          ;;----|B0B3/----\----;
                      LDY.W !SpriteMisc151C,X             ;;----|B0B6/----\----;
                      AND.W DATA_01B031,Y                 ;;----|B0B9/----\----;
                      BNE CODE_01B0C3                     ;;----|B0BC/----\----;
                      LDA.W !SpriteMisc1540,X             ;;----|B0BE/----\----;
                      BNE +                               ;;----|B0C1/----\----;
CODE_01B0C3:          LDA.B #$80                          ;;----|B0C3/----\----;
                      STA.W !SpriteMisc1540,X             ;;----|B0C5/----\----;
                      INC.B !SpriteTableC2,X              ;;----|B0C8/----\----;
                    + LDA.B !SpriteTableC2,X              ;;----|B0CA/----\----;
                      AND.B #$01                          ;;----|B0CC/----\----;
                      TAY                                 ;;----|B0CE/----\----;
                      LDA.W !SpriteMisc151C,X             ;;----|B0CF/----\----;
                      BEQ +                               ;;----|B0D2/----\----;
                      INY                                 ;;----|B0D4/----\----;
                      INY                                 ;;----|B0D5/----\----;
                    + LDA.W DATA_01B01D,Y                 ;;----|B0D6/----\----;
                      STA.B !SpriteXSpeed,X               ;;----|B0D9/----\----;
                      LDA.W DATA_01B01F,Y                 ;;----|B0DB/----\----;
                      STA.B !SpriteYSpeed,X               ;;----|B0DE/----\----;
                      JSR SubSprXPosNoGrvty               ;;----|B0E0/----\----;
                      AND.B #$0C                          ;;----|B0E3/----\----;
                      BNE CODE_01B0EA                     ;;----|B0E5/----\----;
                      JSR SubSprYPosNoGrvty               ;;----|B0E7/----\----;
CODE_01B0EA:          JSR SubSprSprInteract               ;;----|B0EA/----\----;
                      JSR MarioSprInteractRt              ;;----|B0ED/----\----;
                      BCC CODE_01B10A                     ;;----|B0F0/----\----;
                      LDA.W !SpriteInLiquid,X             ;;----|B0F2/----\----;
                      BEQ CODE_01B107                     ;;----|B0F5/----\----;
                      LDA.W !InvinsibilityTimer           ;;----|B0F7/----\----; \ Branch if Mario has star 
                      BNE CODE_01B107                     ;;----|B0FA/----\----; / 
                      LDA.W !PlayerRidingYoshi            ;;----|B0FC/----\----;
                      BNE CODE_01B10A                     ;;----|B0FF/----\----;
                      JSL HurtMario                       ;;----|B101/----\----;
                      BRA CODE_01B10A                     ;;----|B105/----\----;
                                                          ;;                   ;
CODE_01B107:          JSR CODE_01B12A                     ;;----|B107/----\----;
CODE_01B10A:          LDA.W !SpriteMisc1602,X             ;;----|B10A/----\----;
                      LSR A                               ;;----|B10D/----\----;
                      EOR.B #$01                          ;;----|B10E/----\----;
                      STA.B !_0                           ;;----|B110/----\----;
                      LDA.W !SpriteOBJAttribute,X         ;;----|B112/----\----;
                      AND.B #$FE                          ;;----|B115/----\----;
                      ORA.B !_0                           ;;----|B117/----\----;
                      STA.W !SpriteOBJAttribute,X         ;;----|B119/----\----;
                      JSR SubSprGfx2Entry1                ;;----|B11C/----\----;
                      JSR SubOffscreen0Bnk1               ;;----|B11F/----\----;
                      LSR.W !SpriteOBJAttribute,X         ;;----|B122/----\----;
                      SEC                                 ;;----|B125/----\----;
                      ROL.W !SpriteOBJAttribute,X         ;;----|B126/----\----;
                      RTS                                 ;;----|B129/----\----; Return 
                                                          ;;                   ;
CODE_01B12A:          LDA.B #$10                          ;;----|B12A/----\----;
                      STA.W !KickingTimer                 ;;----|B12C/----\----;
                      LDA.B #$03                          ;;----|B12F/----\----;
                      STA.W !SPCIO0                       ;;----|B131/----\----; / Play sound effect 
                      JSR SubHorizPos                     ;;----|B134/----\----;
                      LDA.W DATA_01B023,Y                 ;;----|B137/----\----;
                      STA.B !SpriteXSpeed,X               ;;----|B13A/----\----;
                      LDA.B #$E0                          ;;----|B13C/----\----;
                      STA.B !SpriteYSpeed,X               ;;----|B13E/----\----;
                      LDA.B #$02                          ;;----|B140/----\----; \ Sprite status = Killed 
                      STA.W !SpriteStatus,X               ;;----|B142/----\----; / 
                      STY.B !PlayerDirection              ;;----|B145/----\----;
                      LDA.B #$01                          ;;----|B147/----\----;
                      JSL GivePoints                      ;;----|B149/----\----;
                      RTS                                 ;;----|B14D/----\----; Return 
                                                          ;;                   ;
CODE_01B14E:          LDA.B !TrueFrame                    ;;----|B14E/----\----;
                      AND.B #$03                          ;;----|B150/----\----;
CODE_01B152:          ORA.W !SpriteOffscreenVert,X        ;;----|B152/----\----;
                      ORA.B !SpriteLock                   ;;----|B155/----\----;
                      BNE Return01B191                    ;;----|B157/----\----;
                      JSL GetRand                         ;;----|B159/----\----;
                      AND.B #$0F                          ;;----|B15D/----\----;
                      CLC                                 ;;----|B15F/----\----;
                      LDY.B #$00                          ;;----|B160/----\----;
                      ADC.B #$FC                          ;;----|B162/----\----;
                      BPL +                               ;;----|B164/----\----;
                      DEY                                 ;;----|B166/----\----;
                    + CLC                                 ;;----|B167/----\----;
                      ADC.B !SpriteXPosLow,X              ;;----|B168/----\----;
                      STA.B !_2                           ;;----|B16A/----\----;
                      TYA                                 ;;----|B16C/----\----;
                      ADC.W !SpriteYPosHigh,X             ;;----|B16D/----\----;
                      PHA                                 ;;----|B170/----\----;
                      LDA.B !_2                           ;;----|B171/----\----;
                      CMP.B !Layer1XPos                   ;;----|B173/----\----;
                      PLA                                 ;;----|B175/----\----;
                      SBC.B !Layer1XPos+1                 ;;----|B176/----\----;
                      BNE Return01B191                    ;;----|B178/----\----;
                      LDA.W !RandomNumber+1               ;;----|B17A/----\----;
                      AND.B #$0F                          ;;----|B17D/----\----;
                      CLC                                 ;;----|B17F/----\----;
                      ADC.B #$FE                          ;;----|B180/----\----;
                      ADC.B !SpriteYPosLow,X              ;;----|B182/----\----;
                      STA.B !_0                           ;;----|B184/----\----;
                      LDA.W !SpriteXPosHigh,X             ;;----|B186/----\----;
                      ADC.B #$00                          ;;----|B189/----\----;
                      STA.B !_1                           ;;----|B18B/----\----;
                      JSL CODE_0285BA                     ;;----|B18D/----\----;
Return01B191:         RTS                                 ;;----|B191/----\----; Return 
                                                          ;;                   ;
GeneratedFish:        JSR CODE_01B209                     ;;----|B192/----\----;
                      LDA.B !SpriteLock                   ;;----|B195/----\----; \ Branch if sprites locked 
                      BNE Return01B1B0                    ;;----|B197/----\----; / 
                      JSR SetAnimationFrame               ;;----|B199/----\----;
                      JSR SubSprXPosNoGrvty               ;;----|B19C/----\----;
                      JSR SubSprYPosNoGrvty               ;;----|B19F/----\----;
                      JSR CODE_019140                     ;;----|B1A2/----\----;
                      LDA.B !SpriteYSpeed,X               ;;----|B1A5/----\----;
                      CMP.B #$20                          ;;----|B1A7/----\----;
                      BPL +                               ;;----|B1A9/----\----;
                      CLC                                 ;;----|B1AB/----\----;
                      ADC.B #$01                          ;;----|B1AC/----\----;
                    + STA.B !SpriteYSpeed,X               ;;----|B1AE/----\----;
Return01B1B0:         RTS                                 ;;----|B1B0/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
DATA_01B1B1:          db $D0,$D0,$B0                      ;;----|B1B1/----\----;
                                                          ;;                   ;
JumpingFish:          LDA.B !SpriteLock                   ;;----|B1B4/----\----; \ Branch if sprites locked 
                      BNE CODE_01B209                     ;;----|B1B6/----\----; / 
                      LDA.W !SpriteInLiquid,X             ;;----|B1B8/----\----;
                      STA.W !SpriteMisc151C,X             ;;----|B1BB/----\----;
                      JSR SubUpdateSprPos                 ;;----|B1BE/----\----;
                      LDA.W !SpriteInLiquid,X             ;;----|B1C1/----\----;
                      BEQ CODE_01B1EA                     ;;----|B1C4/----\----;
                      LDA.B !SpriteTableC2,X              ;;----|B1C6/----\----;
                      CMP.B #$03                          ;;----|B1C8/----\----;
                      BEQ CODE_01B1DE                     ;;----|B1CA/----\----;
                      INC.B !SpriteTableC2,X              ;;----|B1CC/----\----;
                      TAY                                 ;;----|B1CE/----\----;
                      LDA.W DATA_01B1B1,Y                 ;;----|B1CF/----\----;
                      STA.B !SpriteYSpeed,X               ;;----|B1D2/----\----;
                      LDA.B #$10                          ;;----|B1D4/----\----;
                      STA.W !SpriteMisc1540,X             ;;----|B1D6/----\----;
                      STZ.W !SpriteInLiquid,X             ;;----|B1D9/----\----;
                      BRA CODE_01B206                     ;;----|B1DC/----\----;
                                                          ;;                   ;
CODE_01B1DE:          DEC.B !SpriteYSpeed,X               ;;----|B1DE/----\----;
                      LDA.B !TrueFrame                    ;;----|B1E0/----\----;
                      AND.B #$03                          ;;----|B1E2/----\----;
                      BNE +                               ;;----|B1E4/----\----;
                      DEC.B !SpriteYSpeed,X               ;;----|B1E6/----\----;
                    + BRA CODE_01B206                     ;;----|B1E8/----\----;
                                                          ;;                   ;
CODE_01B1EA:          INC.W !SpriteMisc1570,X             ;;----|B1EA/----\----;
                      INC.W !SpriteMisc1570,X             ;;----|B1ED/----\----;
                      CMP.W !SpriteMisc151C,X             ;;----|B1F0/----\----;
                      BEQ CODE_01B206                     ;;----|B1F3/----\----;
                      LDA.B #$10                          ;;----|B1F5/----\----;
                      STA.W !SpriteMisc1540,X             ;;----|B1F7/----\----;
                      LDA.B !SpriteTableC2,X              ;;----|B1FA/----\----;
                      CMP.B #$03                          ;;----|B1FC/----\----;
                      BNE CODE_01B206                     ;;----|B1FE/----\----;
                      STZ.B !SpriteTableC2,X              ;;----|B200/----\----;
                      LDA.B #$D0                          ;;----|B202/----\----;
                      STA.B !SpriteYSpeed,X               ;;----|B204/----\----;
CODE_01B206:          JSR SetAnimationFrame               ;;----|B206/----\----;
CODE_01B209:          JSR SubSprSpr_MarioSpr              ;;----|B209/----\----;
                      JSR UpdateDirection                 ;;----|B20C/----\----;
                      JMP CODE_01B10A                     ;;----|B20F/----\----;
                                                          ;;                   ;
                                                          ;;                   ;
DATA_01B212:          db $08,$F8,$10,$F0                  ;;----|B212/----\----;
                                                          ;;                   ;
InitFloatSpkBall:     JSR FaceMario                       ;;----|B216/----\----;
                      LDY.W !SpriteMisc157C,X             ;;----|B219/----\----;
                      LDA.B !SpriteXPosLow,X              ;;----|B21C/----\----;
                      AND.B #$10                          ;;----|B21E/----\----;
                      BEQ +                               ;;----|B220/----\----;
                      INY                                 ;;----|B222/----\----;
                      INY                                 ;;----|B223/----\----;
                    + LDA.W DATA_01B212,Y                 ;;----|B224/----\----;
                      STA.B !SpriteXSpeed,X               ;;----|B227/----\----;
                      BRA InitFloatingPlat                ;;----|B229/----\----;
                                                          ;;                   ;
InitFallingPlat:      INC.W !SpriteMisc1602,X             ;;----|B22B/----\----;
InitOrangePlat:       LDA.W !SpriteBuoyancy               ;;----|B22E/----\----;
                      BNE InitFloatingPlat                ;;----|B231/----\----;
                      INC.B !SpriteTableC2,X              ;;----|B233/----\----;
                      RTS                                 ;;----|B235/----\----; Return 
                                                          ;;                   ;
InitFloatingPlat:     LDA.B #$03                          ;;----|B236/----\----;
                      STA.W !SpriteMisc151C,X             ;;----|B238/----\----;
CODE_01B23B:          JSR CODE_019140                     ;;----|B23B/----\----;
                      LDA.W !SpriteInLiquid,X             ;;----|B23E/----\----;
                      BNE Return01B25D                    ;;----|B241/----\----;
                      DEC.W !SpriteMisc151C,X             ;;----|B243/----\----;
                      BMI CODE_01B262                     ;;----|B246/----\----;
                      LDA.B !SpriteYPosLow,X              ;;----|B248/----\----;
                      CLC                                 ;;----|B24A/----\----;
                      ADC.B #$08                          ;;----|B24B/----\----;
                      STA.B !SpriteYPosLow,X              ;;----|B24D/----\----;
                      LDA.W !SpriteXPosHigh,X             ;;----|B24F/----\----;
                      ADC.B #$00                          ;;----|B252/----\----;
                      STA.W !SpriteXPosHigh,X             ;;----|B254/----\----;
                      CMP.B #$02                          ;;----|B257/----\----;
                      BCS Return01B25D                    ;;----|B259/----\----;
                      BRA CODE_01B23B                     ;;----|B25B/----\----;
                                                          ;;                   ;
Return01B25D:         RTS                                 ;;----|B25D/----\----;
                                                          ;;                   ;
InitChckbrdPlat:      INC.W !SpriteMisc1602,X             ;;----|B25E/----\----;
                      RTS                                 ;;----|B261/----\----; Return 
                                                          ;;                   ;
CODE_01B262:          LDA.B #$01                          ;;----|B262/----\----; \ Sprite status = Initialization 
                      STA.W !SpriteStatus,X               ;;----|B264/----\----; / 
Return01B267:         RTS                                 ;;----|B267/----\----;
                                                          ;;                   ;
                                                          ;;                   ;
DATA_01B268:          db $FF,$01                          ;;----|B268/----\----;
                                                          ;;                   ;
DATA_01B26A:          db $F0,$10                          ;;----|B26A/----\----;
                                                          ;;                   ;
Platforms:            JSR CODE_01B2D1                     ;;----|B26C/----\----;
                      LDA.B !SpriteLock                   ;;----|B26F/----\----; \ Branch if sprites locked 
                      BNE Return01B2C2                    ;;----|B271/----\----; / 
                      LDA.W !SpriteMisc1540,X             ;;----|B273/----\----;
                      BNE CODE_01B2A5                     ;;----|B276/----\----;
                      INC.B !SpriteTableC2,X              ;;----|B278/----\----;
                      LDA.B !SpriteTableC2,X              ;;----|B27A/----\----;
                      AND.B #$03                          ;;----|B27C/----\----;
                      BNE CODE_01B2A5                     ;;----|B27E/----\----;
                      LDA.W !SpriteMisc151C,X             ;;----|B280/----\----;
                      AND.B #$01                          ;;----|B283/----\----;
                      TAY                                 ;;----|B285/----\----;
                      LDA.B !SpriteYSpeed,X               ;;----|B286/----\----;
                      CLC                                 ;;----|B288/----\----;
                      ADC.W DATA_01B268,Y                 ;;----|B289/----\----;
                      STA.B !SpriteYSpeed,X               ;;----|B28C/----\----;
                      STA.B !SpriteXSpeed,X               ;;----|B28E/----\----;
                      CMP.W DATA_01B26A,Y                 ;;----|B290/----\----;
                      BNE CODE_01B2A5                     ;;----|B293/----\----;
                      INC.W !SpriteMisc151C,X             ;;----|B295/----\----;
                      LDA.B #$18                          ;;----|B298/----\----;
                      LDY.B !SpriteNumber,X               ;;----|B29A/----\----;
                      CPY.B #$55                          ;;----|B29C/----\----;
                      BNE +                               ;;----|B29E/----\----;
                      LDA.B #$08                          ;;----|B2A0/----\----;
                    + STA.W !SpriteMisc1540,X             ;;----|B2A2/----\----;
CODE_01B2A5:          LDA.B !SpriteNumber,X               ;;----|B2A5/----\----;
                      CMP.B #$57                          ;;----|B2A7/----\----;
                      BCS CODE_01B2B0                     ;;----|B2A9/----\----;
                      JSR SubSprXPosNoGrvty               ;;----|B2AB/----\----;
                      BRA +                               ;;----|B2AE/----\----;
                                                          ;;                   ;
CODE_01B2B0:          JSR SubSprYPosNoGrvty               ;;----|B2B0/----\----;
                      STZ.W !SpriteXMovement              ;;----|B2B3/----\----;
                    + LDA.W !SpriteXMovement              ;;----|B2B6/----\----;
                      STA.W !SpriteMisc1528,X             ;;----|B2B9/----\----;
                      JSR CODE_01B457                     ;;----|B2BC/----\----;
                      JSR SubOffscreen1Bnk1               ;;----|B2BF/----\----;
Return01B2C2:         RTS                                 ;;----|B2C2/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
DATA_01B2C3:          db $00,$01,$00,$01,$00,$00,$00,$00  ;;----|B2C3/----\----;
                      db $01,$01,$00,$00,$00,$00          ;;----|B2CB/----\----;
                                                          ;;                   ;
CODE_01B2D1:          LDA.B !SpriteNumber,X               ;;----|B2D1/----\----;
                      SEC                                 ;;----|B2D3/----\----;
                      SBC.B #$55                          ;;----|B2D4/----\----;
                      TAY                                 ;;----|B2D6/----\----;
                      LDA.W DATA_01B2C3,Y                 ;;----|B2D7/----\----;
                      BEQ CODE_01B2DF                     ;;----|B2DA/----\----;
                      JMP CODE_01B395                     ;;----|B2DC/----\----;
                                                          ;;                   ;
CODE_01B2DF:          JSR GetDrawInfoBnk1                 ;;----|B2DF/----\----;
                      LDA.W !SpriteMisc1602,X             ;;----|B2E2/----\----;
                      STA.B !_1                           ;;----|B2E5/----\----;
                      LDA.B !SpriteYPosLow,X              ;;----|B2E7/----\----;
                      SEC                                 ;;----|B2E9/----\----;
                      SBC.B !Layer1YPos                   ;;----|B2EA/----\----;
                      STA.W !OAMTileYPos+$100,Y           ;;----|B2EC/----\----;
                      STA.W !OAMTileYPos+$104,Y           ;;----|B2EF/----\----;
                      STA.W !OAMTileYPos+$108,Y           ;;----|B2F2/----\----;
                      LDX.B !_1                           ;;----|B2F5/----\----;
                      BEQ +                               ;;----|B2F7/----\----;
                      STA.W !OAMTileYPos+$10C,Y           ;;----|B2F9/----\----;
                      STA.W !OAMTileYPos+$110,Y           ;;----|B2FC/----\----;
                    + LDX.W !CurSpriteProcess             ;;----|B2FF/----\----; X = Sprite index 
                      LDA.B !SpriteXPosLow,X              ;;----|B302/----\----;
                      SEC                                 ;;----|B304/----\----;
                      SBC.B !Layer1XPos                   ;;----|B305/----\----;
                      STA.W !OAMTileXPos+$100,Y           ;;----|B307/----\----;
                      CLC                                 ;;----|B30A/----\----;
                      ADC.B #$10                          ;;----|B30B/----\----;
                      STA.W !OAMTileXPos+$104,Y           ;;----|B30D/----\----;
                      CLC                                 ;;----|B310/----\----;
                      ADC.B #$10                          ;;----|B311/----\----;
                      STA.W !OAMTileXPos+$108,Y           ;;----|B313/----\----;
                      LDX.B !_1                           ;;----|B316/----\----;
                      BEQ +                               ;;----|B318/----\----;
                      CLC                                 ;;----|B31A/----\----;
                      ADC.B #$10                          ;;----|B31B/----\----;
                      STA.W !OAMTileXPos+$10C,Y           ;;----|B31D/----\----;
                      CLC                                 ;;----|B320/----\----;
                      ADC.B #$10                          ;;----|B321/----\----;
                      STA.W !OAMTileXPos+$110,Y           ;;----|B323/----\----;
                    + LDX.W !CurSpriteProcess             ;;----|B326/----\----; X = Sprite index 
                      LDA.B !_1                           ;;----|B329/----\----;
                      BEQ CODE_01B344                     ;;----|B32B/----\----;
                      LDA.B #$EA                          ;;----|B32D/----\----;
                      STA.W !OAMTileNo+$100,Y             ;;----|B32F/----\----;
                      LDA.B #$EB                          ;;----|B332/----\----;
                      STA.W !OAMTileNo+$104,Y             ;;----|B334/----\----;
                      STA.W !OAMTileNo+$108,Y             ;;----|B337/----\----;
                      STA.W !OAMTileNo+$10C,Y             ;;----|B33A/----\----;
                      LDA.B #$EC                          ;;----|B33D/----\----;
                      STA.W !OAMTileNo+$110,Y             ;;----|B33F/----\----;
                      BRA +                               ;;----|B342/----\----;
                                                          ;;                   ;
CODE_01B344:          LDA.B #$60                          ;;----|B344/----\----;
                      STA.W !OAMTileNo+$100,Y             ;;----|B346/----\----;
                      LDA.B #$61                          ;;----|B349/----\----;
                      STA.W !OAMTileNo+$104,Y             ;;----|B34B/----\----;
                      STA.W !OAMTileNo+$108,Y             ;;----|B34E/----\----;
                      STA.W !OAMTileNo+$10C,Y             ;;----|B351/----\----;
                      LDA.B #$62                          ;;----|B354/----\----;
                      STA.W !OAMTileNo+$110,Y             ;;----|B356/----\----;
                    + LDA.B !SpriteProperties             ;;----|B359/----\----;
                      ORA.W !SpriteOBJAttribute,X         ;;----|B35B/----\----;
                      STA.W !OAMTileAttr+$100,Y           ;;----|B35E/----\----;
                      STA.W !OAMTileAttr+$104,Y           ;;----|B361/----\----;
                      STA.W !OAMTileAttr+$108,Y           ;;----|B364/----\----;
                      STA.W !OAMTileAttr+$10C,Y           ;;----|B367/----\----;
                      STA.W !OAMTileAttr+$110,Y           ;;----|B36A/----\----;
                      LDA.B !_1                           ;;----|B36D/----\----;
                      BNE +                               ;;----|B36F/----\----;
                      LDA.B #$62                          ;;----|B371/----\----;
                      STA.W !OAMTileNo+$108,Y             ;;----|B373/----\----;
                    + LDA.B #$04                          ;;----|B376/----\----;
                      LDY.B !_1                           ;;----|B378/----\----;
                      BNE CODE_01B37E                     ;;----|B37A/----\----;
                      LDA.B #$02                          ;;----|B37C/----\----;
CODE_01B37E:          LDY.B #$02                          ;;----|B37E/----\----;
                      JMP FinishOAMWriteRt                ;;----|B380/----\----;
                                                          ;;                   ;
                                                          ;;                   ;
DiagPlatTiles:        db $CB,$E4,$CC,$E5,$CC,$E5,$CC,$E4  ;;----|B383/----\----;
                      db $CB                              ;;----|B38B/----\----;
                                                          ;;                   ;
                      db $85,$88,$86,$89,$86,$89,$86,$88  ;;----|B38C/----\----;
                      db $85                              ;;----|B394/----\----;
                                                          ;;                   ;
CODE_01B395:          JSR GetDrawInfoBnk1                 ;;----|B395/----\----;
                      PHY                                 ;;----|B398/----\----;
                      LDY.B #$00                          ;;----|B399/----\----;
                      LDA.B !SpriteNumber,X               ;;----|B39B/----\----;
                      CMP.B #$5E                          ;;----|B39D/----\----;
                      BNE +                               ;;----|B39F/----\----;
                      INY                                 ;;----|B3A1/----\----;
                    + STY.B !_0                           ;;----|B3A2/----\----;
                      PLY                                 ;;----|B3A4/----\----;
                      LDA.B !SpriteYPosLow,X              ;;----|B3A5/----\----;
                      SEC                                 ;;----|B3A7/----\----;
                      SBC.B !Layer1YPos                   ;;----|B3A8/----\----;
                      STA.W !OAMTileYPos+$100,Y           ;;----|B3AA/----\----;
                      STA.W !OAMTileYPos+$108,Y           ;;----|B3AD/----\----;
                      STA.W !OAMTileYPos+$110,Y           ;;----|B3B0/----\----;
                      LDX.B !_0                           ;;----|B3B3/----\----;
                      BEQ +                               ;;----|B3B5/----\----;
                      STA.W !OAMTileYPos+$118,Y           ;;----|B3B7/----\----;
                      STA.W !OAMTileYPos+$120,Y           ;;----|B3BA/----\----;
                    + CLC                                 ;;----|B3BD/----\----;
                      ADC.B #$10                          ;;----|B3BE/----\----;
                      STA.W !OAMTileYPos+$104,Y           ;;----|B3C0/----\----;
                      STA.W !OAMTileYPos+$10C,Y           ;;----|B3C3/----\----;
                      LDX.B !_0                           ;;----|B3C6/----\----;
                      BEQ +                               ;;----|B3C8/----\----;
                      STA.W !OAMTileYPos+$114,Y           ;;----|B3CA/----\----;
                      STA.W !OAMTileYPos+$11C,Y           ;;----|B3CD/----\----;
                    + LDA.B #$08                          ;;----|B3D0/----\----;
                      LDX.B !_0                           ;;----|B3D2/----\----;
                      BNE +                               ;;----|B3D4/----\----;
                      LDA.B #$04                          ;;----|B3D6/----\----;
                    + STA.B !_1                           ;;----|B3D8/----\----;
                      DEC A                               ;;----|B3DA/----\----;
                      STA.B !_2                           ;;----|B3DB/----\----;
                      LDX.W !CurSpriteProcess             ;;----|B3DD/----\----; X = Sprite index 
                      LDA.W !SpriteOBJAttribute,X         ;;----|B3E0/----\----;
                      STA.B !_3                           ;;----|B3E3/----\----;
                      LDA.B !SpriteNumber,X               ;;----|B3E5/----\----;
                      CMP.B #$5B                          ;;----|B3E7/----\----;
                      LDA.B #$00                          ;;----|B3E9/----\----;
                      BCS +                               ;;----|B3EB/----\----;
                      LDA.B #$09                          ;;----|B3ED/----\----;
                    + PHA                                 ;;----|B3EF/----\----;
                      LDA.B !SpriteXPosLow,X              ;;----|B3F0/----\----;
                      SEC                                 ;;----|B3F2/----\----;
                      SBC.B !Layer1XPos                   ;;----|B3F3/----\----;
                      PLX                                 ;;----|B3F5/----\----;
CODE_01B3F6:          STA.W !OAMTileXPos+$100,Y           ;;----|B3F6/----\----;
                      CLC                                 ;;----|B3F9/----\----;
                      ADC.B #$08                          ;;----|B3FA/----\----;
                      PHA                                 ;;----|B3FC/----\----;
                      %LorW_X(LDA,DiagPlatTiles)          ;;----|B3FD/----\----;
                      STA.W !OAMTileNo+$100,Y             ;;----|B400/----\----;
                      LDA.B !SpriteProperties             ;;----|B403/----\----;
                      ORA.B !_3                           ;;----|B405/----\----;
                      PHX                                 ;;----|B407/----\----;
                      LDX.B !_1                           ;;----|B408/----\----;
                      CPX.B !_2                           ;;----|B40A/----\----;
                      PLX                                 ;;----|B40C/----\----;
                      BCS +                               ;;----|B40D/----\----;
                      ORA.B #$40                          ;;----|B40F/----\----;
                    + STA.W !OAMTileAttr+$100,Y           ;;----|B411/----\----;
                      PLA                                 ;;----|B414/----\----;
                      INY                                 ;;----|B415/----\----;
                      INY                                 ;;----|B416/----\----;
                      INY                                 ;;----|B417/----\----;
                      INY                                 ;;----|B418/----\----;
                      INX                                 ;;----|B419/----\----;
                      DEC.B !_1                           ;;----|B41A/----\----;
                      BPL CODE_01B3F6                     ;;----|B41C/----\----;
                      LDX.W !CurSpriteProcess             ;;----|B41E/----\----; X = Sprite index 
                      LDY.W !SpriteOAMIndex,X             ;;----|B421/----\----; Y = Index into sprite OAM 
                      LDA.B !_0                           ;;----|B424/----\----;
                      BNE CODE_01B444                     ;;----|B426/----\----;
                      LDA.B !SpriteNumber,X               ;;----|B428/----\----;
                      CMP.B #$5B                          ;;----|B42A/----\----;
                      BCS CODE_01B43A                     ;;----|B42C/----\----;
                      LDA.B #$85                          ;;----|B42E/----\----;
                      STA.W !OAMTileNo+$110,Y             ;;----|B430/----\----;
                      LDA.B #$88                          ;;----|B433/----\----;
                      STA.W !OAMTileNo+$10C,Y             ;;----|B435/----\----;
                      BRA CODE_01B444                     ;;----|B438/----\----;
                                                          ;;                   ;
CODE_01B43A:          LDA.B #$CB                          ;;----|B43A/----\----;
                      STA.W !OAMTileNo+$110,Y             ;;----|B43C/----\----;
                      LDA.B #$E4                          ;;----|B43F/----\----;
                      STA.W !OAMTileNo+$10C,Y             ;;----|B441/----\----;
CODE_01B444:          LDA.B #$08                          ;;----|B444/----\----;
                      LDY.B !_0                           ;;----|B446/----\----;
                      BNE +                               ;;----|B448/----\----;
                      LDA.B #$04                          ;;----|B44A/----\----;
                    + JMP CODE_01B37E                     ;;----|B44C/----\----;
                                                          ;;                   ;
InvisBlkMainRt:       PHB                                 ;;----|B44F/----\----;
                      PHK                                 ;;----|B450/----\----;
                      PLB                                 ;;----|B451/----\----;
                      JSR CODE_01B457                     ;;----|B452/----\----;
                      PLB                                 ;;----|B455/----\----;
                      RTL                                 ;;----|B456/----\----; Return 
                                                          ;;                   ;
CODE_01B457:          JSR ProcessInteract                 ;;----|B457/----\----;
                      BCC CODE_01B4B2                     ;;----|B45A/----\----;
                      LDA.B !SpriteYPosLow,X              ;;----|B45C/----\----;
                      SEC                                 ;;----|B45E/----\----;
                      SBC.B !Layer1YPos                   ;;----|B45F/----\----;
                      STA.B !_0                           ;;----|B461/----\----;
                      LDA.B !PlayerYPosScrRel             ;;----|B463/----\----;
                      CLC                                 ;;----|B465/----\----;
                      ADC.B #$18                          ;;----|B466/----\----;
                      CMP.B !_0                           ;;----|B468/----\----;
                      BPL CODE_01B4B4                     ;;----|B46A/----\----;
                      LDA.B !PlayerYSpeed                 ;;----|B46C/----\----;
                      BMI CODE_01B4B2                     ;;----|B46E/----\----;
                      LDA.B !PlayerBlockedDir             ;;----|B470/----\----;
                      AND.B #$08                          ;;----|B472/----\----;
                      BNE CODE_01B4B2                     ;;----|B474/----\----;
                      LDA.B #$10                          ;;----|B476/----\----;
                      STA.B !PlayerYSpeed                 ;;----|B478/----\----;
                      LDA.B #$01                          ;;----|B47A/----\----;
                      STA.W !StandOnSolidSprite           ;;----|B47C/----\----;
                      LDA.B #$1F                          ;;----|B47F/----\----;
                      LDY.W !PlayerRidingYoshi            ;;----|B481/----\----;
                      BEQ +                               ;;----|B484/----\----;
                      LDA.B #$2F                          ;;----|B486/----\----;
                    + STA.B !_1                           ;;----|B488/----\----;
                      LDA.B !SpriteYPosLow,X              ;;----|B48A/----\----;
                      SEC                                 ;;----|B48C/----\----;
                      SBC.B !_1                           ;;----|B48D/----\----;
                      STA.B !PlayerYPosNext               ;;----|B48F/----\----;
                      LDA.W !SpriteXPosHigh,X             ;;----|B491/----\----;
                      SBC.B #$00                          ;;----|B494/----\----;
                      STA.B !PlayerYPosNext+1             ;;----|B496/----\----;
                      LDA.B !PlayerBlockedDir             ;;----|B498/----\----;
                      AND.B #$03                          ;;----|B49A/----\----;
                      BNE CODE_01B4B0                     ;;----|B49C/----\----;
                      LDY.B #$00                          ;;----|B49E/----\----;
                      LDA.W !SpriteMisc1528,X             ;;----|B4A0/----\----;
                      BPL +                               ;;----|B4A3/----\----;
                      DEY                                 ;;----|B4A5/----\----;
                    + CLC                                 ;;----|B4A6/----\----;
                      ADC.B !PlayerXPosNext               ;;----|B4A7/----\----;
                      STA.B !PlayerXPosNext               ;;----|B4A9/----\----;
                      TYA                                 ;;----|B4AB/----\----;
                      ADC.B !PlayerXPosNext+1             ;;----|B4AC/----\----;
                      STA.B !PlayerXPosNext+1             ;;----|B4AE/----\----;
CODE_01B4B0:          SEC                                 ;;----|B4B0/----\----;
                      RTS                                 ;;----|B4B1/----\----; Return 
                                                          ;;                   ;
CODE_01B4B2:          CLC                                 ;;----|B4B2/----\----;
                      RTS                                 ;;----|B4B3/----\----; Return 
                                                          ;;                   ;
CODE_01B4B4:          LDA.W !SpriteTweakerF,X             ;;----|B4B4/----\----; \ Branch if "Make Platform Passable" is set 
                      LSR A                               ;;----|B4B7/----\----;  | 
                      BCS CODE_01B4B2                     ;;----|B4B8/----\----; / 
                      LDA.B #$00                          ;;----|B4BA/----\----;
                      LDY.B !PlayerIsDucking              ;;----|B4BC/----\----;
                      BNE CODE_01B4C4                     ;;----|B4BE/----\----;
                      LDY.B !Powerup                      ;;----|B4C0/----\----;
                      BNE +                               ;;----|B4C2/----\----;
CODE_01B4C4:          LDA.B #$08                          ;;----|B4C4/----\----;
                    + LDY.W !PlayerRidingYoshi            ;;----|B4C6/----\----;
                      BEQ +                               ;;----|B4C9/----\----;
                      ADC.B #$08                          ;;----|B4CB/----\----;
                    + CLC                                 ;;----|B4CD/----\----;
                      ADC.B !PlayerYPosScrRel             ;;----|B4CE/----\----;
                      CMP.B !_0                           ;;----|B4D0/----\----;
                      BCC CODE_01B505                     ;;----|B4D2/----\----;
                      LDA.B !PlayerYSpeed                 ;;----|B4D4/----\----;
                      BPL CODE_01B4F7                     ;;----|B4D6/----\----;
                      LDA.B #$10                          ;;----|B4D8/----\----;
                      STA.B !PlayerYSpeed                 ;;----|B4DA/----\----;
                      LDA.B !SpriteNumber,X               ;;----|B4DC/----\----;
                      CMP.B #$83                          ;;----|B4DE/----\----;
                      BCC +                               ;;----|B4E0/----\----;
CODE_01B4E2:          LDA.B #$0F                          ;;----|B4E2/----\----;
                      STA.W !SpriteMisc1564,X             ;;----|B4E4/----\----;
                      LDA.B !SpriteTableC2,X              ;;----|B4E7/----\----;
                      BNE +                               ;;----|B4E9/----\----;
                      INC.B !SpriteTableC2,X              ;;----|B4EB/----\----;
                      LDA.B #$10                          ;;----|B4ED/----\----;
                      STA.W !SpriteMisc1558,X             ;;----|B4EF/----\----;
                    + LDA.B #$01                          ;;----|B4F2/----\----;
                      STA.W !SPCIO0                       ;;----|B4F4/----\----; / Play sound effect 
CODE_01B4F7:          CLC                                 ;;----|B4F7/----\----;
                      RTS                                 ;;----|B4F8/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
DATA_01B4F9:          db $0E,$F1,$10,$E0,$1F,$F1          ;;----|B4F9/----\----;
                                                          ;;                   ;
DATA_01B4FF:          db $00,$FF,$00,$FF,$00,$FF          ;;----|B4FF/----\----;
                                                          ;;                   ;
CODE_01B505:          JSR SubHorizPos                     ;;----|B505/----\----;
                      LDA.B !SpriteNumber,X               ;;----|B508/----\----;
                      CMP.B #$A9                          ;;----|B50A/----\----;
                      BEQ CODE_01B520                     ;;----|B50C/----\----;
                      CMP.B #$9C                          ;;----|B50E/----\----;
                      BEQ CODE_01B51E                     ;;----|B510/----\----;
                      CMP.B #$BB                          ;;----|B512/----\----;
                      BEQ CODE_01B51E                     ;;----|B514/----\----;
                      CMP.B #$60                          ;;----|B516/----\----;
                      BEQ CODE_01B51E                     ;;----|B518/----\----;
                      CMP.B #$49                          ;;----|B51A/----\----;
                      BNE +                               ;;----|B51C/----\----;
CODE_01B51E:          INY                                 ;;----|B51E/----\----;
                      INY                                 ;;----|B51F/----\----;
CODE_01B520:          INY                                 ;;----|B520/----\----;
                      INY                                 ;;----|B521/----\----;
                    + LDA.W DATA_01B4F9,Y                 ;;----|B522/----\----;
                      CLC                                 ;;----|B525/----\----;
                      ADC.B !SpriteXPosLow,X              ;;----|B526/----\----;
                      STA.B !PlayerXPosNext               ;;----|B528/----\----;
                      LDA.W DATA_01B4FF,Y                 ;;----|B52A/----\----;
                      ADC.W !SpriteYPosHigh,X             ;;----|B52D/----\----;
                      STA.B !PlayerXPosNext+1             ;;----|B530/----\----;
                      STZ.B !PlayerXSpeed                 ;;----|B532/----\----;
                      CLC                                 ;;----|B534/----\----;
                      RTS                                 ;;----|B535/----\----; Return 
                                                          ;;                   ;
OrangePlatform:       LDA.B !SpriteTableC2,X              ;;----|B536/----\----;
                      BEQ Platforms2                      ;;----|B538/----\----;
                      JSR CODE_01B2D1                     ;;----|B53A/----\----;
                      LDA.B !SpriteLock                   ;;----|B53D/----\----; \ Branch if sprites locked 
                      BNE +                               ;;----|B53F/----\----; / 
                      JSR SubSprXPosNoGrvty               ;;----|B541/----\----;
                      LDA.W !SpriteXMovement              ;;----|B544/----\----;
                      STA.W !SpriteMisc1528,X             ;;----|B547/----\----;
                      JSR CODE_01B457                     ;;----|B54A/----\----;
                      BCC +                               ;;----|B54D/----\----;
                      LDA.B #$01                          ;;----|B54F/----\----;
                      STA.W !BGFastScrollActive           ;;----|B551/----\----;
                      LDA.B #$08                          ;;----|B554/----\----;
                      STA.B !SpriteXSpeed,X               ;;----|B556/----\----;
                    + RTS                                 ;;----|B558/----\----; Return 
                                                          ;;                   ;
FloatingSpikeBall:    LDA.W !SpriteStatus,X               ;;----|B559/----\----;
                      CMP.B #$08                          ;;----|B55C/----\----;
                      BEQ Platforms2                      ;;----|B55E/----\----;
                      JMP CODE_01B666                     ;;----|B560/----\----;
                                                          ;;                   ;
Platforms2:           LDA.B !SpriteLock                   ;;----|B563/----\----;
                      BEQ +                               ;;----|B565/----\----;
                      JMP CODE_01B64E                     ;;----|B567/----\----;
                                                          ;;                   ;
                    + LDA.W !SpriteBlockedDirs,X          ;;----|B56A/----\----;
                      AND.B #$0C                          ;;----|B56D/----\----;
                      BNE +                               ;;----|B56F/----\----;
                      JSR SubSprYPosNoGrvty               ;;----|B571/----\----;
                    + STZ.W !SpriteXMovement              ;;----|B574/----\----;
                      LDA.B !SpriteNumber,X               ;;----|B577/----\----;
                      CMP.B #$A4                          ;;----|B579/----\----;
                      BNE +                               ;;----|B57B/----\----;
                      JSR SubSprXPosNoGrvty               ;;----|B57D/----\----;
                    + LDA.B !SpriteYSpeed,X               ;;----|B580/----\----;
                      CMP.B #$40                          ;;----|B582/----\----;
                      BPL +                               ;;----|B584/----\----;
                      INC.B !SpriteYSpeed,X               ;;----|B586/----\----;
                    + LDA.W !SpriteInLiquid,X             ;;----|B588/----\----;
                      BEQ CODE_01B5A6                     ;;----|B58B/----\----;
                      LDY.B #$F8                          ;;----|B58D/----\----;
                      LDA.B !SpriteNumber,X               ;;----|B58F/----\----;
                      CMP.B #$5D                          ;;----|B591/----\----;
                      BCC +                               ;;----|B593/----\----;
                      LDY.B #$FC                          ;;----|B595/----\----;
                    + STY.B !_0                           ;;----|B597/----\----;
                      LDA.B !SpriteYSpeed,X               ;;----|B599/----\----;
                      BPL CODE_01B5A1                     ;;----|B59B/----\----;
                      CMP.B !_0                           ;;----|B59D/----\----;
                      BCC CODE_01B5A6                     ;;----|B59F/----\----;
CODE_01B5A1:          SEC                                 ;;----|B5A1/----\----;
                      SBC.B #$02                          ;;----|B5A2/----\----;
                      STA.B !SpriteYSpeed,X               ;;----|B5A4/----\----;
CODE_01B5A6:          LDA.B !PlayerYSpeed                 ;;----|B5A6/----\----;
                      PHA                                 ;;----|B5A8/----\----;
                      LDA.B !SpriteNumber,X               ;;----|B5A9/----\----;
                      CMP.B #$A4                          ;;----|B5AB/----\----;
                      BNE CODE_01B5B5                     ;;----|B5AD/----\----;
                      JSR MarioSprInteractRt              ;;----|B5AF/----\----;
                      CLC                                 ;;----|B5B2/----\----;
                      BRA +                               ;;----|B5B3/----\----;
                                                          ;;                   ;
CODE_01B5B5:          JSR CODE_01B457                     ;;----|B5B5/----\----;
                    + PLA                                 ;;----|B5B8/----\----;
                      STA.B !_0                           ;;----|B5B9/----\----;
                      STZ.W !TileGenerateTrackA           ;;----|B5BB/----\----;
                      BCC CODE_01B5E7                     ;;----|B5BE/----\----;
                      LDA.B !SpriteNumber,X               ;;----|B5C0/----\----;
                      CMP.B #$5D                          ;;----|B5C2/----\----;
                      BCC CODE_01B5DA                     ;;----|B5C4/----\----;
                      LDY.B #$03                          ;;----|B5C6/----\----;
                      LDA.B !Powerup                      ;;----|B5C8/----\----;
                      BNE +                               ;;----|B5CA/----\----;
                      DEY                                 ;;----|B5CC/----\----;
                    + STY.B !_0                           ;;----|B5CD/----\----;
                      LDA.B !SpriteYSpeed,X               ;;----|B5CF/----\----;
                      CMP.B !_0                           ;;----|B5D1/----\----;
                      BPL CODE_01B5DA                     ;;----|B5D3/----\----;
                      CLC                                 ;;----|B5D5/----\----;
                      ADC.B #$02                          ;;----|B5D6/----\----;
                      STA.B !SpriteYSpeed,X               ;;----|B5D8/----\----;
CODE_01B5DA:          INC.W !TileGenerateTrackA           ;;----|B5DA/----\----;
                      LDA.B !_0                           ;;----|B5DD/----\----;
                      CMP.B #$20                          ;;----|B5DF/----\----;
                      BCC CODE_01B5E7                     ;;----|B5E1/----\----;
                      LSR A                               ;;----|B5E3/----\----;
                      LSR A                               ;;----|B5E4/----\----;
                      STA.B !SpriteYSpeed,X               ;;----|B5E5/----\----;
CODE_01B5E7:          LDA.W !TileGenerateTrackA           ;;----|B5E7/----\----;
                      CMP.W !SpriteMisc151C,X             ;;----|B5EA/----\----;
                      STA.W !SpriteMisc151C,X             ;;----|B5ED/----\----;
                      BEQ CODE_01B610                     ;;----|B5F0/----\----;
                      LDA.W !TileGenerateTrackA           ;;----|B5F2/----\----;
                      BNE CODE_01B610                     ;;----|B5F5/----\----;
                      LDA.B !PlayerYSpeed                 ;;----|B5F7/----\----;
                      BPL CODE_01B610                     ;;----|B5F9/----\----;
                      LDY.B #$08                          ;;----|B5FB/----\----;
                      LDA.B !Powerup                      ;;----|B5FD/----\----;
                      BNE +                               ;;----|B5FF/----\----;
                      LDY.B #$06                          ;;----|B601/----\----;
                    + STY.B !_0                           ;;----|B603/----\----;
                      LDA.B !SpriteYSpeed,X               ;;----|B605/----\----;
                      CMP.B #$20                          ;;----|B607/----\----;
                      BPL CODE_01B610                     ;;----|B609/----\----;
                      CLC                                 ;;----|B60B/----\----;
                      ADC.B !_0                           ;;----|B60C/----\----;
                      STA.B !SpriteYSpeed,X               ;;----|B60E/----\----;
CODE_01B610:          LDA.B #$01                          ;;----|B610/----\----;
                      AND.B !TrueFrame                    ;;----|B612/----\----;
                      BNE CODE_01B64E                     ;;----|B614/----\----;
                      LDA.B !SpriteYSpeed,X               ;;----|B616/----\----;
                      BEQ CODE_01B624                     ;;----|B618/----\----;
                      BPL +                               ;;----|B61A/----\----;
                      CLC                                 ;;----|B61C/----\----;
                      ADC.B #$02                          ;;----|B61D/----\----;
                    + SEC                                 ;;----|B61F/----\----;
                      SBC.B #$01                          ;;----|B620/----\----;
                      STA.B !SpriteYSpeed,X               ;;----|B622/----\----;
CODE_01B624:          LDY.W !TileGenerateTrackA           ;;----|B624/----\----;
                      BEQ +                               ;;----|B627/----\----;
                      LDY.B #$05                          ;;----|B629/----\----;
                      LDA.B !Powerup                      ;;----|B62B/----\----;
                      BNE +                               ;;----|B62D/----\----;
                      LDY.B #$02                          ;;----|B62F/----\----;
                    + STY.B !_0                           ;;----|B631/----\----;
                      LDA.B !SpriteYPosLow,X              ;;----|B633/----\----;
                      PHA                                 ;;----|B635/----\----;
                      SEC                                 ;;----|B636/----\----;
                      SBC.B !_0                           ;;----|B637/----\----;
                      STA.B !SpriteYPosLow,X              ;;----|B639/----\----;
                      LDA.W !SpriteXPosHigh,X             ;;----|B63B/----\----;
                      PHA                                 ;;----|B63E/----\----;
                      SBC.B #$00                          ;;----|B63F/----\----;
                      STA.W !SpriteXPosHigh,X             ;;----|B641/----\----;
                      JSR CODE_019140                     ;;----|B644/----\----;
                      PLA                                 ;;----|B647/----\----;
                      STA.W !SpriteXPosHigh,X             ;;----|B648/----\----;
                      PLA                                 ;;----|B64B/----\----;
                      STA.B !SpriteYPosLow,X              ;;----|B64C/----\----;
CODE_01B64E:          JSR SubOffscreen0Bnk1               ;;----|B64E/----\----;
                      LDA.B !SpriteNumber,X               ;;----|B651/----\----;
                      CMP.B #$A4                          ;;----|B653/----\----;
                      BEQ CODE_01B666                     ;;----|B655/----\----;
                      JMP CODE_01B2D1                     ;;----|B657/----\----;
                                                          ;;                   ;
                                                          ;;                   ;
DATA_01B65A:          db $F8,$08,$F8,$08                  ;;----|B65A/----\----;
                                                          ;;                   ;
DATA_01B65E:          db $F8,$F8,$08,$08                  ;;----|B65E/----\----;
                                                          ;;                   ;
FloatMineGfxProp:     db $31,$71,$A1,$F1                  ;;----|B662/----\----;
                                                          ;;                   ;
CODE_01B666:          JSR GetDrawInfoBnk1                 ;;----|B666/----\----;
                      PHX                                 ;;----|B669/----\----;
                      LDX.B #$03                          ;;----|B66A/----\----;
                    - LDA.B !_0                           ;;----|B66C/----\----;
                      CLC                                 ;;----|B66E/----\----;
                      ADC.W DATA_01B65A,X                 ;;----|B66F/----\----;
                      STA.W !OAMTileXPos+$100,Y           ;;----|B672/----\----;
                      LDA.B !_1                           ;;----|B675/----\----;
                      CLC                                 ;;----|B677/----\----;
                      ADC.W DATA_01B65E,X                 ;;----|B678/----\----;
                      STA.W !OAMTileYPos+$100,Y           ;;----|B67B/----\----;
                      LDA.B !EffFrame                     ;;----|B67E/----\----;
                      LSR A                               ;;----|B680/----\----;
                      LSR A                               ;;----|B681/----\----;
                      AND.B #$04                          ;;----|B682/----\----;
                      LSR A                               ;;----|B684/----\----;
                      ADC.B #$AA                          ;;----|B685/----\----;
                      STA.W !OAMTileNo+$100,Y             ;;----|B687/----\----;
                      LDA.W FloatMineGfxProp,X            ;;----|B68A/----\----;
                      STA.W !OAMTileAttr+$100,Y           ;;----|B68D/----\----;
                      INY                                 ;;----|B690/----\----;
                      INY                                 ;;----|B691/----\----;
                      INY                                 ;;----|B692/----\----;
                      INY                                 ;;----|B693/----\----;
                      DEX                                 ;;----|B694/----\----;
                      BPL -                               ;;----|B695/----\----;
                      PLX                                 ;;----|B697/----\----;
                      LDY.B #$02                          ;;----|B698/----\----;
                      LDA.B #$03                          ;;----|B69A/----\----;
                      JMP FinishOAMWriteRt                ;;----|B69C/----\----;
                                                          ;;                   ;
                                                          ;;                   ;
BlkBridgeLength:      db $20,$00                          ;;----|B69F/----\----;
                                                          ;;                   ;
TurnBlkBridgeSpeed:   db $01,$FF                          ;;----|B6A1/----\----;
                                                          ;;                   ;
BlkBridgeTiming:      db $40,$40                          ;;----|B6A3/----\----;
                                                          ;;                   ;
TurnBlockBridge:      JSR SubOffscreen0Bnk1               ;;----|B6A5/----\----;
                      JSR CODE_01B710                     ;;----|B6A8/----\----;
                      JSR CODE_01B852                     ;;----|B6AB/----\----;
                      JSR CODE_01B6B2                     ;;----|B6AE/----\----;
                      RTS                                 ;;----|B6B1/----\----; Return 
                                                          ;;                   ;
CODE_01B6B2:          LDA.B !SpriteTableC2,X              ;;----|B6B2/----\----;
                      AND.B #$01                          ;;----|B6B4/----\----;
                      TAY                                 ;;----|B6B6/----\----;
                      LDA.W !SpriteMisc151C,X             ;;----|B6B7/----\----;
                      CMP.W BlkBridgeLength,Y             ;;----|B6BA/----\----;
                      BEQ CODE_01B6D1                     ;;----|B6BD/----\----;
                      LDA.W !SpriteMisc1540,X             ;;----|B6BF/----\----;
                      ORA.B !SpriteLock                   ;;----|B6C2/----\----;
                      BNE +                               ;;----|B6C4/----\----;
                      LDA.W !SpriteMisc151C,X             ;;----|B6C6/----\----;
                      CLC                                 ;;----|B6C9/----\----;
                      ADC.W TurnBlkBridgeSpeed,Y          ;;----|B6CA/----\----;
                      STA.W !SpriteMisc151C,X             ;;----|B6CD/----\----;
                    + RTS                                 ;;----|B6D0/----\----; Return 
                                                          ;;                   ;
CODE_01B6D1:          LDA.W BlkBridgeTiming,Y             ;;----|B6D1/----\----;
                      STA.W !SpriteMisc1540,X             ;;----|B6D4/----\----;
                      INC.B !SpriteTableC2,X              ;;----|B6D7/----\----;
                      RTS                                 ;;----|B6D9/----\----; Return 
                                                          ;;                   ;
HorzTurnBlkBridge:    JSR SubOffscreen0Bnk1               ;;----|B6DA/----\----;
                      JSR CODE_01B710                     ;;----|B6DD/----\----;
                      JSR CODE_01B852                     ;;----|B6E0/----\----;
                      JSR CODE_01B6E7                     ;;----|B6E3/----\----;
                      RTS                                 ;;----|B6E6/----\----; Return 
                                                          ;;                   ;
CODE_01B6E7:          LDY.B !SpriteTableC2,X              ;;----|B6E7/----\----;
                      LDA.W !SpriteMisc151C,X             ;;----|B6E9/----\----;
                      CMP.W BlkBridgeLength,Y             ;;----|B6EC/----\----;
                      BEQ CODE_01B703                     ;;----|B6EF/----\----;
                      LDA.W !SpriteMisc1540,X             ;;----|B6F1/----\----;
                      ORA.B !SpriteLock                   ;;----|B6F4/----\----;
                      BNE +                               ;;----|B6F6/----\----;
                      LDA.W !SpriteMisc151C,X             ;;----|B6F8/----\----;
                      CLC                                 ;;----|B6FB/----\----;
                      ADC.W TurnBlkBridgeSpeed,Y          ;;----|B6FC/----\----;
                      STA.W !SpriteMisc151C,X             ;;----|B6FF/----\----;
                    + RTS                                 ;;----|B702/----\----; Return 
                                                          ;;                   ;
CODE_01B703:          LDA.W BlkBridgeTiming,Y             ;;----|B703/----\----;
                      STA.W !SpriteMisc1540,X             ;;----|B706/----\----;
                      LDA.B !SpriteTableC2,X              ;;----|B709/----\----;
                      EOR.B #$01                          ;;----|B70B/----\----;
                      STA.B !SpriteTableC2,X              ;;----|B70D/----\----;
                      RTS                                 ;;----|B70F/----\----; Return 
                                                          ;;                   ;
CODE_01B710:          JSR GetDrawInfoBnk1                 ;;----|B710/----\----;
                      STZ.B !_0                           ;;----|B713/----\----;
                      STZ.B !_1                           ;;----|B715/----\----;
                      STZ.B !_2                           ;;----|B717/----\----;
                      STZ.B !_3                           ;;----|B719/----\----;
                      LDA.B !SpriteTableC2,X              ;;----|B71B/----\----;
                      AND.B #$02                          ;;----|B71D/----\----;
                      TAY                                 ;;----|B71F/----\----;
                      LDA.W !SpriteMisc151C,X             ;;----|B720/----\----;
                      STA.W !_0,Y                         ;;----|B723/----\----;
                      LSR A                               ;;----|B726/----\----;
                      STA.W !_1,Y                         ;;----|B727/----\----;
                      LDY.W !SpriteOAMIndex,X             ;;----|B72A/----\----; Y = Index into sprite OAM 
                      LDA.B !SpriteYPosLow,X              ;;----|B72D/----\----;
                      SEC                                 ;;----|B72F/----\----;
                      SBC.B !Layer1YPos                   ;;----|B730/----\----;
                      STA.W !OAMTileYPos+$110,Y           ;;----|B732/----\----;
                      PHA                                 ;;----|B735/----\----;
                      PHA                                 ;;----|B736/----\----;
                      PHA                                 ;;----|B737/----\----;
                      SEC                                 ;;----|B738/----\----;
                      SBC.B !_2                           ;;----|B739/----\----;
                      STA.W !OAMTileYPos+$108,Y           ;;----|B73B/----\----;
                      PLA                                 ;;----|B73E/----\----;
                      SEC                                 ;;----|B73F/----\----;
                      SBC.B !_3                           ;;----|B740/----\----;
                      STA.W !OAMTileYPos+$10C,Y           ;;----|B742/----\----;
                      PLA                                 ;;----|B745/----\----;
                      CLC                                 ;;----|B746/----\----;
                      ADC.B !_2                           ;;----|B747/----\----;
                      STA.W !OAMTileYPos+$100,Y           ;;----|B749/----\----;
                      PLA                                 ;;----|B74C/----\----;
                      CLC                                 ;;----|B74D/----\----;
                      ADC.B !_3                           ;;----|B74E/----\----;
                      STA.W !OAMTileYPos+$104,Y           ;;----|B750/----\----;
                      LDA.B !SpriteXPosLow,X              ;;----|B753/----\----;
                      SEC                                 ;;----|B755/----\----;
                      SBC.B !Layer1XPos                   ;;----|B756/----\----;
                      STA.W !OAMTileXPos+$110,Y           ;;----|B758/----\----;
                      PHA                                 ;;----|B75B/----\----;
                      PHA                                 ;;----|B75C/----\----;
                      PHA                                 ;;----|B75D/----\----;
                      SEC                                 ;;----|B75E/----\----;
                      SBC.B !_0                           ;;----|B75F/----\----;
                      STA.W !OAMTileXPos+$108,Y           ;;----|B761/----\----;
                      PLA                                 ;;----|B764/----\----;
                      SEC                                 ;;----|B765/----\----;
                      SBC.B !_1                           ;;----|B766/----\----;
                      STA.W !OAMTileXPos+$10C,Y           ;;----|B768/----\----;
                      PLA                                 ;;----|B76B/----\----;
                      CLC                                 ;;----|B76C/----\----;
                      ADC.B !_0                           ;;----|B76D/----\----;
                      STA.W !OAMTileXPos+$100,Y           ;;----|B76F/----\----;
                      PLA                                 ;;----|B772/----\----;
                      CLC                                 ;;----|B773/----\----;
                      ADC.B !_1                           ;;----|B774/----\----;
                      STA.W !OAMTileXPos+$104,Y           ;;----|B776/----\----;
                      LDA.B !SpriteTableC2,X              ;;----|B779/----\----;
                      LSR A                               ;;----|B77B/----\----;
                      LSR A                               ;;----|B77C/----\----;
                      LDA.B #$40                          ;;----|B77D/----\----;
                      STA.W !OAMTileNo+$104,Y             ;;----|B77F/----\----;
                      STA.W !OAMTileNo+$10C,Y             ;;----|B782/----\----;
                      STA.W !OAMTileNo+$110,Y             ;;----|B785/----\----;
                      STA.W !OAMTileNo+$108,Y             ;;----|B788/----\----;
                      STA.W !OAMTileNo+$100,Y             ;;----|B78B/----\----;
                      LDA.B !SpriteProperties             ;;----|B78E/----\----;
                      STA.W !OAMTileAttr+$10C,Y           ;;----|B790/----\----;
                      STA.W !OAMTileAttr+$104,Y           ;;----|B793/----\----;
                      STA.W !OAMTileAttr+$108,Y           ;;----|B796/----\----;
                      STA.W !OAMTileAttr+$110,Y           ;;----|B799/----\----;
                      ORA.B #$60                          ;;----|B79C/----\----;
                      STA.W !OAMTileAttr+$100,Y           ;;----|B79E/----\----;
                      LDA.B !_0                           ;;----|B7A1/----\----;
                      PHA                                 ;;----|B7A3/----\----;
                      LDA.B !_2                           ;;----|B7A4/----\----;
                      PHA                                 ;;----|B7A6/----\----;
                      LDA.B #$04                          ;;----|B7A7/----\----;
                      JSR CODE_01B37E                     ;;----|B7A9/----\----;
                      PLA                                 ;;----|B7AC/----\----;
                      STA.B !_2                           ;;----|B7AD/----\----;
                      PLA                                 ;;----|B7AF/----\----;
                      STA.B !_0                           ;;----|B7B0/----\----;
                      RTS                                 ;;----|B7B2/----\----; Return 
                                                          ;;                   ;
FinishOAMWrite:       PHB                                 ;;----|B7B3/----\----; Wrapper 
                      PHK                                 ;;----|B7B4/----\----;
                      PLB                                 ;;----|B7B5/----\----;
                      JSR FinishOAMWriteRt                ;;----|B7B6/----\----;
                      PLB                                 ;;----|B7B9/----\----;
                      RTL                                 ;;----|B7BA/----\----; Return 
                                                          ;;                   ;
FinishOAMWriteRt:     STY.B !_B                           ;;----|B7BB/----\----;
                      STA.B !_8                           ;;----|B7BD/----\----;
                      LDY.W !SpriteOAMIndex,X             ;;----|B7BF/----\----; Y = Index into sprite OAM 
                      LDA.B !SpriteYPosLow,X              ;;----|B7C2/----\----;
                      STA.B !_0                           ;;----|B7C4/----\----;
                      SEC                                 ;;----|B7C6/----\----;
                      SBC.B !Layer1YPos                   ;;----|B7C7/----\----;
                      STA.B !_6                           ;;----|B7C9/----\----;
                      LDA.W !SpriteXPosHigh,X             ;;----|B7CB/----\----;
                      STA.B !_1                           ;;----|B7CE/----\----;
                      LDA.B !SpriteXPosLow,X              ;;----|B7D0/----\----;
                      STA.B !_2                           ;;----|B7D2/----\----;
                      SEC                                 ;;----|B7D4/----\----;
                      SBC.B !Layer1XPos                   ;;----|B7D5/----\----;
                      STA.B !_7                           ;;----|B7D7/----\----;
                      LDA.W !SpriteYPosHigh,X             ;;----|B7D9/----\----;
                      STA.B !_3                           ;;----|B7DC/----\----;
CODE_01B7DE:          TYA                                 ;;----|B7DE/----\----;
                      LSR A                               ;;----|B7DF/----\----;
                      LSR A                               ;;----|B7E0/----\----;
                      TAX                                 ;;----|B7E1/----\----;
                      LDA.B !_B                           ;;----|B7E2/----\----;
                      BPL CODE_01B7F0                     ;;----|B7E4/----\----;
                      LDA.W !OAMTileSize+$40,X            ;;----|B7E6/----\----;
                      AND.B #$02                          ;;----|B7E9/----\----;
                      STA.W !OAMTileSize+$40,X            ;;----|B7EB/----\----;
                      BRA +                               ;;----|B7EE/----\----;
                                                          ;;                   ;
CODE_01B7F0:          STA.W !OAMTileSize+$40,X            ;;----|B7F0/----\----;
                    + LDX.B #$00                          ;;----|B7F3/----\----;
                      LDA.W !OAMTileXPos+$100,Y           ;;----|B7F5/----\----;
                      SEC                                 ;;----|B7F8/----\----;
                      SBC.B !_7                           ;;----|B7F9/----\----;
                      BPL +                               ;;----|B7FB/----\----;
                      DEX                                 ;;----|B7FD/----\----;
                    + CLC                                 ;;----|B7FE/----\----;
                      ADC.B !_2                           ;;----|B7FF/----\----;
                      STA.B !_4                           ;;----|B801/----\----;
                      TXA                                 ;;----|B803/----\----;
                      ADC.B !_3                           ;;----|B804/----\----;
                      STA.B !_5                           ;;----|B806/----\----;
                      JSR CODE_01B844                     ;;----|B808/----\----;
                      BCC +                               ;;----|B80B/----\----;
                      TYA                                 ;;----|B80D/----\----;
                      LSR A                               ;;----|B80E/----\----;
                      LSR A                               ;;----|B80F/----\----;
                      TAX                                 ;;----|B810/----\----;
                      LDA.W !OAMTileSize+$40,X            ;;----|B811/----\----;
                      ORA.B #$01                          ;;----|B814/----\----;
                      STA.W !OAMTileSize+$40,X            ;;----|B816/----\----;
                    + LDX.B #$00                          ;;----|B819/----\----;
                      LDA.W !OAMTileYPos+$100,Y           ;;----|B81B/----\----;
                      SEC                                 ;;----|B81E/----\----;
                      SBC.B !_6                           ;;----|B81F/----\----;
                      BPL +                               ;;----|B821/----\----;
                      DEX                                 ;;----|B823/----\----;
                    + CLC                                 ;;----|B824/----\----;
                      ADC.B !_0                           ;;----|B825/----\----;
                      STA.B !_9                           ;;----|B827/----\----;
                      TXA                                 ;;----|B829/----\----;
                      ADC.B !_1                           ;;----|B82A/----\----;
                      STA.B !_A                           ;;----|B82C/----\----;
                      JSR CODE_01C9BF                     ;;----|B82E/----\----;
                      BCC +                               ;;----|B831/----\----;
                      LDA.B #$F0                          ;;----|B833/----\----;
                      STA.W !OAMTileYPos+$100,Y           ;;----|B835/----\----;
                    + INY                                 ;;----|B838/----\----;
                      INY                                 ;;----|B839/----\----;
                      INY                                 ;;----|B83A/----\----;
                      INY                                 ;;----|B83B/----\----;
                      DEC.B !_8                           ;;----|B83C/----\----;
                      BPL CODE_01B7DE                     ;;----|B83E/----\----;
                      LDX.W !CurSpriteProcess             ;;----|B840/----\----; X = Sprite index 
                      RTS                                 ;;----|B843/----\----; Return 
                                                          ;;                   ;
CODE_01B844:          REP #$20                            ;;----|B844/----\----; Accum (16 bit) 
                      LDA.B !_4                           ;;----|B846/----\----;
                      SEC                                 ;;----|B848/----\----;
                      SBC.B !Layer1XPos                   ;;----|B849/----\----;
                      CMP.W #$0100                        ;;----|B84B/----\----;
                      SEP #$20                            ;;----|B84E/----\----; Accum (8 bit) 
                      RTS                                 ;;----|B850/----\----; Return 
                                                          ;;                   ;
                      RTS                                 ;;----|B851/----\----;
                                                          ;;                   ;
CODE_01B852:          LDA.W !SpriteWayOffscreenX,X        ;;----|B852/----\----;
                      BNE Return01B8B1                    ;;----|B855/----\----;
                      LDA.B !PlayerAnimation              ;;----|B857/----\----;
                      CMP.B #$01                          ;;----|B859/----\----;
                      BCS Return01B8B1                    ;;----|B85B/----\----;
                      JSR CODE_01B8FF                     ;;----|B85D/----\----;
                      BCC Return01B8B1                    ;;----|B860/----\----;
                      LDA.B !SpriteYPosLow,X              ;;----|B862/----\----;
                      SEC                                 ;;----|B864/----\----;
                      SBC.B !Layer1YPos                   ;;----|B865/----\----;
                      STA.B !_2                           ;;----|B867/----\----;
                      SEC                                 ;;----|B869/----\----;
                      SBC.B !_D                           ;;----|B86A/----\----;
                      STA.B !_9                           ;;----|B86C/----\----;
                      LDA.B !PlayerYPosScrRel             ;;----|B86E/----\----;
                      CLC                                 ;;----|B870/----\----;
                      ADC.B #$18                          ;;----|B871/----\----;
                      CMP.B !_9                           ;;----|B873/----\----;
                      BCS ADDR_01B8B2                     ;;----|B875/----\----;
                      LDA.B !PlayerYSpeed                 ;;----|B877/----\----;
                      BMI Return01B8B1                    ;;----|B879/----\----;
                      STZ.B !PlayerYSpeed                 ;;----|B87B/----\----;
                      LDA.B #$01                          ;;----|B87D/----\----;
                      STA.W !StandOnSolidSprite           ;;----|B87F/----\----;
                      LDA.B !_D                           ;;----|B882/----\----;
                      CLC                                 ;;----|B884/----\----;
                      ADC.B #$1F                          ;;----|B885/----\----;
                      LDY.W !PlayerRidingYoshi            ;;----|B887/----\----;
                      BEQ +                               ;;----|B88A/----\----;
                      CLC                                 ;;----|B88C/----\----;
                      ADC.B #$10                          ;;----|B88D/----\----;
                    + STA.B !_0                           ;;----|B88F/----\----;
                      LDA.B !SpriteYPosLow,X              ;;----|B891/----\----;
                      SEC                                 ;;----|B893/----\----;
                      SBC.B !_0                           ;;----|B894/----\----;
                      STA.B !PlayerYPosNext               ;;----|B896/----\----;
                      LDA.W !SpriteXPosHigh,X             ;;----|B898/----\----;
                      SBC.B #$00                          ;;----|B89B/----\----;
                      STA.B !PlayerYPosNext+1             ;;----|B89D/----\----;
                      LDY.B #$00                          ;;----|B89F/----\----;
                      LDA.W !SpriteXMovement              ;;----|B8A1/----\----;
                      BPL +                               ;;----|B8A4/----\----;
                      DEY                                 ;;----|B8A6/----\----;
                    + CLC                                 ;;----|B8A7/----\----;
                      ADC.B !PlayerXPosNext               ;;----|B8A8/----\----;
                      STA.B !PlayerXPosNext               ;;----|B8AA/----\----;
                      TYA                                 ;;----|B8AC/----\----;
                      ADC.B !PlayerXPosNext+1             ;;----|B8AD/----\----;
                      STA.B !PlayerXPosNext+1             ;;----|B8AF/----\----;
Return01B8B1:         RTS                                 ;;----|B8B1/----\----; Return 
                                                          ;;                   ;
ADDR_01B8B2:          LDA.B !_2                           ;;----|B8B2/----\----;
                      CLC                                 ;;----|B8B4/----\----;
                      ADC.B !_D                           ;;----|B8B5/----\----;
                      STA.B !_2                           ;;----|B8B7/----\----;
                      LDA.B #$FF                          ;;----|B8B9/----\----;
                      LDY.B !PlayerIsDucking              ;;----|B8BB/----\----;
                      BNE ADDR_01B8C3                     ;;----|B8BD/----\----;
                      LDY.B !Powerup                      ;;----|B8BF/----\----;
                      BNE +                               ;;----|B8C1/----\----;
ADDR_01B8C3:          LDA.B #$08                          ;;----|B8C3/----\----;
                    + CLC                                 ;;----|B8C5/----\----;
                      ADC.B !PlayerYPosScrRel             ;;----|B8C6/----\----;
                      CMP.B !_2                           ;;----|B8C8/----\----;
                      BCC ADDR_01B8D5                     ;;----|B8CA/----\----;
                      LDA.B !PlayerYSpeed                 ;;----|B8CC/----\----;
                      BPL +                               ;;----|B8CE/----\----;
                      LDA.B #$10                          ;;----|B8D0/----\----;
                      STA.B !PlayerYSpeed                 ;;----|B8D2/----\----;
                    + RTS                                 ;;----|B8D4/----\----; Return 
                                                          ;;                   ;
ADDR_01B8D5:          LDA.B !_E                           ;;----|B8D5/----\----;
                      CLC                                 ;;----|B8D7/----\----;
                      ADC.B #$10                          ;;----|B8D8/----\----;
                      STA.B !_0                           ;;----|B8DA/----\----;
                      LDY.B #$00                          ;;----|B8DC/----\----;
                      LDA.B !SpriteXPosLow,X              ;;----|B8DE/----\----;
                      SEC                                 ;;----|B8E0/----\----;
                      SBC.B !Layer1XPos                   ;;----|B8E1/----\----;
                      CMP.B !PlayerXPosScrRel             ;;----|B8E3/----\----;
                      BCC +                               ;;----|B8E5/----\----;
                      LDA.B !_0                           ;;----|B8E7/----\----;
                      EOR.B #$FF                          ;;----|B8E9/----\----;
                      INC A                               ;;----|B8EB/----\----;
                      STA.B !_0                           ;;----|B8EC/----\----;
                      DEY                                 ;;----|B8EE/----\----;
                    + LDA.B !SpriteXPosLow,X              ;;----|B8EF/----\----;
                      CLC                                 ;;----|B8F1/----\----;
                      ADC.B !_0                           ;;----|B8F2/----\----;
                      STA.B !PlayerXPosNext               ;;----|B8F4/----\----;
                      TYA                                 ;;----|B8F6/----\----;
                      ADC.W !SpriteYPosHigh,X             ;;----|B8F7/----\----;
                      STA.B !PlayerXPosNext+1             ;;----|B8FA/----\----;
                      STZ.B !PlayerXSpeed                 ;;----|B8FC/----\----;
                      RTS                                 ;;----|B8FE/----\----; Return 
                                                          ;;                   ;
CODE_01B8FF:          LDA.B !_0                           ;;----|B8FF/----\----;
                      STA.B !_E                           ;;----|B901/----\----;
                      LDA.B !_2                           ;;----|B903/----\----;
                      STA.B !_D                           ;;----|B905/----\----;
                      LDA.B !SpriteXPosLow,X              ;;----|B907/----\----;
                      SEC                                 ;;----|B909/----\----;
                      SBC.B !_0                           ;;----|B90A/----\----;
                      STA.B !_4                           ;;----|B90C/----\----;
                      LDA.W !SpriteYPosHigh,X             ;;----|B90E/----\----;
                      SBC.B #$00                          ;;----|B911/----\----;
                      STA.B !_A                           ;;----|B913/----\----;
                      LDA.B !_0                           ;;----|B915/----\----;
                      ASL A                               ;;----|B917/----\----;
                      CLC                                 ;;----|B918/----\----;
                      ADC.B #$10                          ;;----|B919/----\----;
                      STA.B !_6                           ;;----|B91B/----\----;
                      LDA.B !SpriteYPosLow,X              ;;----|B91D/----\----;
                      SEC                                 ;;----|B91F/----\----;
                      SBC.B !_2                           ;;----|B920/----\----;
                      STA.B !_5                           ;;----|B922/----\----;
                      LDA.W !SpriteXPosHigh,X             ;;----|B924/----\----;
                      SBC.B #$00                          ;;----|B927/----\----;
                      STA.B !_B                           ;;----|B929/----\----;
                      LDA.B !_2                           ;;----|B92B/----\----;
                      ASL A                               ;;----|B92D/----\----;
                      CLC                                 ;;----|B92E/----\----;
                      ADC.B #$10                          ;;----|B92F/----\----;
                      STA.B !_7                           ;;----|B931/----\----;
                      JSL GetMarioClipping                ;;----|B933/----\----;
                      JSL CheckForContact                 ;;----|B937/----\----;
                      RTS                                 ;;----|B93B/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
HorzNetKoopaSpeed:    db $08,$F8                          ;;----|B93C/----\----;
                                                          ;;                   ;
InitHorzNetKoopa:     JSR SubHorizPos                     ;;----|B93E/----\----;
                      LDA.W HorzNetKoopaSpeed,Y           ;;----|B941/----\----;
                      STA.B !SpriteXSpeed,X               ;;----|B944/----\----;
                      BRA +                               ;;----|B946/----\----;
                                                          ;;                   ;
InitVertNetKoopa:     INC.B !SpriteTableC2,X              ;;----|B948/----\----;
                      INC.B !SpriteXSpeed,X               ;;----|B94A/----\----;
                      LDA.B #$F8                          ;;----|B94C/----\----;
                      STA.B !SpriteYSpeed,X               ;;----|B94E/----\----;
                    + LDA.B !SpriteXPosLow,X              ;;----|B950/----\----;
                      LDY.B #$00                          ;;----|B952/----\----;
                      AND.B #$10                          ;;----|B954/----\----;
                      BNE +                               ;;----|B956/----\----;
                      INY                                 ;;----|B958/----\----;
                    + TYA                                 ;;----|B959/----\----;
                      STA.W !SpriteBehindScene,X          ;;----|B95A/----\----;
                      LDA.W !SpriteOBJAttribute,X         ;;----|B95D/----\----;
                      AND.B #$02                          ;;----|B960/----\----;
                      BNE +                               ;;----|B962/----\----;
                      ASL.B !SpriteXSpeed,X               ;;----|B964/----\----;
                      ASL.B !SpriteYSpeed,X               ;;----|B966/----\----;
                    + RTS                                 ;;----|B968/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
DATA_01B969:          db $02,$02,$03,$04,$03,$02,$02,$02  ;;----|B969/----\----;
                      db $01,$02                          ;;----|B971/----\----;
                                                          ;;                   ;
DATA_01B973:          db $01,$01,$00,$00,$00,$01,$01,$01  ;;----|B973/----\----;
                      db $01,$01                          ;;----|B97B/----\----;
                                                          ;;                   ;
DATA_01B97D:          db $03,$0C                          ;;----|B97D/----\----;
                                                          ;;                   ;
ClimbingKoopa:        LDA.W !SpriteMisc1540,X             ;;----|B97F/----\----;
                      BEQ CODE_01B9FB                     ;;----|B982/----\----;
                      CMP.B #$30                          ;;----|B984/----\----;
                      BCC CODE_01B9A0                     ;;----|B986/----\----;
                      CMP.B #$40                          ;;----|B988/----\----;
                      BCC CODE_01B9A3                     ;;----|B98A/----\----;
                      BNE CODE_01B9A0                     ;;----|B98C/----\----;
                      LDY.B !SpriteLock                   ;;----|B98E/----\----;
                      BNE CODE_01B9A0                     ;;----|B990/----\----;
                      LDA.W !SpriteBehindScene,X          ;;----|B992/----\----;
                      EOR.B #$01                          ;;----|B995/----\----;
                      STA.W !SpriteBehindScene,X          ;;----|B997/----\----;
                      JSR FlipSpriteDir                   ;;----|B99A/----\----;
                      JSR CODE_01BA7F                     ;;----|B99D/----\----;
CODE_01B9A0:          JMP CODE_01BA37                     ;;----|B9A0/----\----;
                                                          ;;                   ;
CODE_01B9A3:          LDY.B !SpriteYPosLow,X              ;;----|B9A3/----\----;
                      PHY                                 ;;----|B9A5/----\----;
                      LDY.W !SpriteXPosHigh,X             ;;----|B9A6/----\----;
                      PHY                                 ;;----|B9A9/----\----;
                      LDY.B #$00                          ;;----|B9AA/----\----;
                      CMP.B #$38                          ;;----|B9AC/----\----;
                      BCC +                               ;;----|B9AE/----\----;
                      INY                                 ;;----|B9B0/----\----;
                    + LDA.B !SpriteTableC2,X              ;;----|B9B1/----\----;
                      BEQ +                               ;;----|B9B3/----\----;
                      INY                                 ;;----|B9B5/----\----;
                      INY                                 ;;----|B9B6/----\----;
                      LDA.B !SpriteYPosLow,X              ;;----|B9B7/----\----;
                      SEC                                 ;;----|B9B9/----\----;
                      SBC.B #$0C                          ;;----|B9BA/----\----;
                      STA.B !SpriteYPosLow,X              ;;----|B9BC/----\----;
                      LDA.W !SpriteXPosHigh,X             ;;----|B9BE/----\----;
                      SBC.B #$00                          ;;----|B9C1/----\----;
                      STA.W !SpriteXPosHigh,X             ;;----|B9C3/----\----;
                      LDA.W !SpriteBehindScene,X          ;;----|B9C6/----\----;
                      BEQ +                               ;;----|B9C9/----\----;
                      INY                                 ;;----|B9CB/----\----;
                    + LDA.W !OWLevelTileSettings+$49      ;;----|B9CC/----\----;
                      BPL +                               ;;----|B9CF/----\----;
                      INY                                 ;;----|B9D1/----\----;
                      INY                                 ;;----|B9D2/----\----;
                      INY                                 ;;----|B9D3/----\----;
                      INY                                 ;;----|B9D4/----\----;
                      INY                                 ;;----|B9D5/----\----;
                    + LDA.W DATA_01B969,Y                 ;;----|B9D6/----\----;
                      STA.W !SpriteMisc1602,X             ;;----|B9D9/----\----;
                      LDA.W DATA_01B973,Y                 ;;----|B9DC/----\----;
                      STA.B !_0                           ;;----|B9DF/----\----;
                      LDA.W !SpriteOBJAttribute,X         ;;----|B9E1/----\----;
                      PHA                                 ;;----|B9E4/----\----;
                      AND.B #$FE                          ;;----|B9E5/----\----;
                      ORA.B !_0                           ;;----|B9E7/----\----;
                      STA.W !SpriteOBJAttribute,X         ;;----|B9E9/----\----;
                      JSR SubSprGfx1                      ;;----|B9EC/----\----;
                      PLA                                 ;;----|B9EF/----\----;
                      STA.W !SpriteOBJAttribute,X         ;;----|B9F0/----\----;
                      PLA                                 ;;----|B9F3/----\----;
                      STA.W !SpriteXPosHigh,X             ;;----|B9F4/----\----;
                      PLA                                 ;;----|B9F7/----\----;
                      STA.B !SpriteYPosLow,X              ;;----|B9F8/----\----;
                      RTS                                 ;;----|B9FA/----\----; Return 
                                                          ;;                   ;
CODE_01B9FB:          LDA.B !SpriteLock                   ;;----|B9FB/----\----; \ Branch if sprites locked 
                      BNE CODE_01BA53                     ;;----|B9FD/----\----; / 
                      JSR CODE_019140                     ;;----|B9FF/----\----;
                      LDY.B !SpriteTableC2,X              ;;----|BA02/----\----;
                      LDA.W !SpriteBlockedDirs,X          ;;----|BA04/----\----;
                      AND.W DATA_01B97D,Y                 ;;----|BA07/----\----;
                      BEQ CODE_01BA14                     ;;----|BA0A/----\----;
CODE_01BA0C:          JSR FlipSpriteDir                   ;;----|BA0C/----\----;
                      JSR CODE_01BA7F                     ;;----|BA0F/----\----;
                      BRA CODE_01BA37                     ;;----|BA12/----\----;
                                                          ;;                   ;
CODE_01BA14:          LDA.W !SprMap16TouchVertLow         ;;----|BA14/----\----;
                      LDY.B !SpriteYSpeed,X               ;;----|BA17/----\----;
                      BEQ CODE_01BA27                     ;;----|BA19/----\----;
                      BPL CODE_01BA1F                     ;;----|BA1B/----\----;
                      BMI CODE_01BA2A                     ;;----|BA1D/----\----;
CODE_01BA1F:          CMP.B #$07                          ;;----|BA1F/----\----;
                      BCC CODE_01BA0C                     ;;----|BA21/----\----;
                      CMP.B #$1D                          ;;----|BA23/----\----;
                      BCS CODE_01BA0C                     ;;----|BA25/----\----;
CODE_01BA27:          LDA.W !SprMap16TouchHorizLow        ;;----|BA27/----\----;
CODE_01BA2A:          CMP.B #$07                          ;;----|BA2A/----\----;
                      BCC CODE_01BA32                     ;;----|BA2C/----\----;
                      CMP.B #$1D                          ;;----|BA2E/----\----;
                      BCC CODE_01BA37                     ;;----|BA30/----\----;
CODE_01BA32:          LDA.B #$50                          ;;----|BA32/----\----;
                      STA.W !SpriteMisc1540,X             ;;----|BA34/----\----;
CODE_01BA37:          LDA.B !SpriteLock                   ;;----|BA37/----\----; \ Branch if sprites locked 
                      BNE CODE_01BA53                     ;;----|BA39/----\----; / 
                      INC.W !SpriteMisc1570,X             ;;----|BA3B/----\----;
                      JSR UpdateDirection                 ;;----|BA3E/----\----;
                      LDA.B !SpriteTableC2,X              ;;----|BA41/----\----;
                      BNE CODE_01BA4A                     ;;----|BA43/----\----;
                      JSR SubSprXPosNoGrvty               ;;----|BA45/----\----;
                      BRA +                               ;;----|BA48/----\----;
                                                          ;;                   ;
CODE_01BA4A:          JSR SubSprYPosNoGrvty               ;;----|BA4A/----\----;
                    + JSR MarioSprInteractRt              ;;----|BA4D/----\----;
                      JSR SubOffscreen0Bnk1               ;;----|BA50/----\----;
CODE_01BA53:          LDA.W !SpriteMisc157C,X             ;;----|BA53/----\----;
                      PHA                                 ;;----|BA56/----\----;
                      LDA.W !SpriteMisc1570,X             ;;----|BA57/----\----;
                      AND.B #$08                          ;;----|BA5A/----\----;
                      LSR A                               ;;----|BA5C/----\----;
                      LSR A                               ;;----|BA5D/----\----;
                      LSR A                               ;;----|BA5E/----\----;
                      STA.W !SpriteMisc157C,X             ;;----|BA5F/----\----;
                      LDA.B !SpriteProperties             ;;----|BA62/----\----;
                      PHA                                 ;;----|BA64/----\----;
                      LDA.W !SpriteBehindScene,X          ;;----|BA65/----\----;
                      STA.W !SpriteMisc1602,X             ;;----|BA68/----\----;
                      LDA.W !SpriteBehindScene,X          ;;----|BA6B/----\----;
                      BEQ +                               ;;----|BA6E/----\----;
                      LDA.B #$10                          ;;----|BA70/----\----;
                      STA.B !SpriteProperties             ;;----|BA72/----\----;
                    + JSR SubSprGfx1                      ;;----|BA74/----\----;
                      PLA                                 ;;----|BA77/----\----;
                      STA.B !SpriteProperties             ;;----|BA78/----\----;
                      PLA                                 ;;----|BA7A/----\----;
                      STA.W !SpriteMisc157C,X             ;;----|BA7B/----\----;
                      RTS                                 ;;----|BA7E/----\----; Return 
                                                          ;;                   ;
CODE_01BA7F:          LDA.B !SpriteYSpeed,X               ;;----|BA7F/----\----;
                      EOR.B #$FF                          ;;----|BA81/----\----;
                      INC A                               ;;----|BA83/----\----;
                      STA.B !SpriteYSpeed,X               ;;----|BA84/----\----;
                      RTS                                 ;;----|BA86/----\----; Return 
                                                          ;;                   ;
InitClimbingDoor:     LDA.B !SpriteXPosLow,X              ;;----|BA87/----\----;
                      CLC                                 ;;----|BA89/----\----;
                      ADC.B #$08                          ;;----|BA8A/----\----;
                      STA.B !SpriteXPosLow,X              ;;----|BA8C/----\----;
                      LDA.B !SpriteYPosLow,X              ;;----|BA8E/----\----;
                      ADC.B #$07                          ;;----|BA90/----\----;
                      STA.B !SpriteYPosLow,X              ;;----|BA92/----\----;
                      RTS                                 ;;----|BA94/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
                      db $30,$54                          ;;----|BA95/----\----;
                                                          ;;                   ;
DATA_01BA97:          db $00,$01,$02,$04,$06,$09,$0C,$0D  ;;----|BA97/----\----;
                      db $14,$0D,$0C,$09,$06,$04,$02,$01  ;;----|BA9F/----\----;
DATA_01BAA7:          db $00,$00,$00,$00,$00,$01,$01,$01  ;;----|BAA7/----\----;
                      db $02,$01,$01,$01,$00,$00,$00,$00  ;;----|BAAF/----\----;
DATA_01BAB7:          db $00,$10,$00,$00,$10,$00,$01,$11  ;;----|BAB7/----\----;
                      db $01,$05,$15,$05,$05,$15,$05,$00  ;;----|BABF/----\----;
                      db $00,$00,$03,$13,$03              ;;----|BAC7/----\----;
                                                          ;;                   ;
Return01BACC:         RTS                                 ;;----|BACC/----\----; Return 
                                                          ;;                   ;
ClimbingDoor:         JSR SubOffscreen0Bnk1               ;;----|BACD/----\----;
                      LDA.W !SpriteMisc154C,X             ;;----|BAD0/----\----;
                      CMP.B #$01                          ;;----|BAD3/----\----;
                      BNE +                               ;;----|BAD5/----\----;
                      LDA.B #$0F                          ;;----|BAD7/----\----; \ Play sound effect 
                      STA.W !SPCIO0                       ;;----|BAD9/----\----; / 
                      LDA.B #$19                          ;;----|BADC/----\----;
                      JSL GenTileFromSpr2                 ;;----|BADE/----\----;
                      LDA.B #$1F                          ;;----|BAE2/----\----;
                      STA.W !SpriteMisc1540,X             ;;----|BAE4/----\----;
                      STA.W !NetDoorTimer                 ;;----|BAE7/----\----;
                      LDA.B !PlayerXPosNext               ;;----|BAEA/----\----;
                      SEC                                 ;;----|BAEC/----\----;
                      SBC.B #$10                          ;;----|BAED/----\----;
                      SEC                                 ;;----|BAEF/----\----;
                      SBC.B !SpriteXPosLow,X              ;;----|BAF0/----\----;
                      STA.W !NetDoorPlayerXOffset         ;;----|BAF2/----\----;
                    + LDA.W !SpriteMisc1540,X             ;;----|BAF5/----\----;
                      ORA.W !SpriteMisc154C,X             ;;----|BAF8/----\----;
                      BNE +                               ;;----|BAFB/----\----;
                      JSL GetSpriteClippingA              ;;----|BAFD/----\----;
                      JSR CODE_01BC1D                     ;;----|BB01/----\----;
                      JSL CheckForContact                 ;;----|BB04/----\----;
                      BCC +                               ;;----|BB08/----\----;
                      LDA.W !PunchNetTimer                ;;----|BB0A/----\----;
                      CMP.B #$01                          ;;----|BB0D/----\----;
                      BNE +                               ;;----|BB0F/----\----;
                      LDA.B #$06                          ;;----|BB11/----\----;
                      STA.W !SpriteMisc154C,X             ;;----|BB13/----\----;
                    + LDA.W !SpriteMisc1540,X             ;;----|BB16/----\----;
                      BEQ Return01BACC                    ;;----|BB19/----\----;
                      CMP.B #$01                          ;;----|BB1B/----\----;
                      BNE +                               ;;----|BB1D/----\----;
                      PHA                                 ;;----|BB1F/----\----;
                      LDA.B #$1A                          ;;----|BB20/----\----;
                      JSL GenTileFromSpr2                 ;;----|BB22/----\----;
                      PLA                                 ;;----|BB26/----\----;
                    + CMP.B #$10                          ;;----|BB27/----\----;
                      BNE +                               ;;----|BB29/----\----;
                      LDA.W !PlayerBehindNet              ;;----|BB2B/----\----;
                      EOR.B #$01                          ;;----|BB2E/----\----;
                      STA.W !PlayerBehindNet              ;;----|BB30/----\----;
                    + LDA.B #$30                          ;;----|BB33/----\----;
                      STA.W !SpriteOAMIndex,X             ;;----|BB35/----\----;
                      STA.B !_3                           ;;----|BB38/----\----;
                      TAY                                 ;;----|BB3A/----\----;
                      LDA.B !SpriteXPosLow,X              ;;----|BB3B/----\----;
                      SEC                                 ;;----|BB3D/----\----;
                      SBC.B !Layer1XPos                   ;;----|BB3E/----\----;
                      STA.B !_0                           ;;----|BB40/----\----;
                      LDA.B !SpriteYPosLow,X              ;;----|BB42/----\----;
                      SEC                                 ;;----|BB44/----\----;
                      SBC.B !Layer1YPos                   ;;----|BB45/----\----;
                      STA.B !_1                           ;;----|BB47/----\----;
                      LDA.W !SpriteMisc1540,X             ;;----|BB49/----\----;
                      LSR A                               ;;----|BB4C/----\----;
                      STA.B !_2                           ;;----|BB4D/----\----;
                      TAX                                 ;;----|BB4F/----\----;
                      %LorW_X(LDA,DATA_01BAA7)            ;;----|BB50/----\----;
                      STA.B !_6                           ;;----|BB53/----\----;
                      LDA.B !_0                           ;;----|BB55/----\----;
                      CLC                                 ;;----|BB57/----\----;
                      %LorW_X(ADC,DATA_01BA97)            ;;----|BB58/----\----;
                      STA.W !OAMTileXPos+$100,Y           ;;----|BB5B/----\----;
                      STA.W !OAMTileXPos+$104,Y           ;;----|BB5E/----\----;
                      STA.W !OAMTileXPos+$108,Y           ;;----|BB61/----\----;
                      LDA.B !_6                           ;;----|BB64/----\----;
                      CMP.B #$02                          ;;----|BB66/----\----;
                      BEQ +                               ;;----|BB68/----\----;
                      LDA.B !_0                           ;;----|BB6A/----\----;
                      CLC                                 ;;----|BB6C/----\----;
                      ADC.B #$20                          ;;----|BB6D/----\----;
                      SEC                                 ;;----|BB6F/----\----;
                      %LorW_X(SBC,DATA_01BA97)            ;;----|BB70/----\----;
                      STA.W !OAMTileXPos+$10C,Y           ;;----|BB73/----\----;
                      STA.W !OAMTileXPos+$110,Y           ;;----|BB76/----\----;
                      STA.W !OAMTileXPos+$114,Y           ;;----|BB79/----\----;
                      LDA.B !_6                           ;;----|BB7C/----\----;
                      BNE +                               ;;----|BB7E/----\----;
                      LDA.B !_0                           ;;----|BB80/----\----;
                      CLC                                 ;;----|BB82/----\----;
                      ADC.B #$10                          ;;----|BB83/----\----;
                      STA.W !OAMTileXPos+$118,Y           ;;----|BB85/----\----;
                      STA.W !OAMTileXPos+$11C,Y           ;;----|BB88/----\----;
                      STA.W !OAMTileXPos+$120,Y           ;;----|BB8B/----\----;
                    + LDA.B !_1                           ;;----|BB8E/----\----;
                      STA.W !OAMTileYPos+$100,Y           ;;----|BB90/----\----;
                      STA.W !OAMTileYPos+$10C,Y           ;;----|BB93/----\----;
                      STA.W !OAMTileYPos+$118,Y           ;;----|BB96/----\----;
                      CLC                                 ;;----|BB99/----\----;
                      ADC.B #$10                          ;;----|BB9A/----\----;
                      STA.W !OAMTileYPos+$104,Y           ;;----|BB9C/----\----;
                      STA.W !OAMTileYPos+$110,Y           ;;----|BB9F/----\----;
                      STA.W !OAMTileYPos+$11C,Y           ;;----|BBA2/----\----;
                      CLC                                 ;;----|BBA5/----\----;
                      ADC.B #$10                          ;;----|BBA6/----\----;
                      STA.W !OAMTileYPos+$108,Y           ;;----|BBA8/----\----;
                      STA.W !OAMTileYPos+$114,Y           ;;----|BBAB/----\----;
                      STA.W !OAMTileYPos+$120,Y           ;;----|BBAE/----\----;
                      LDA.B #$08                          ;;----|BBB1/----\----;
                      STA.B !_7                           ;;----|BBB3/----\----;
                      LDA.B !_6                           ;;----|BBB5/----\----;
                      ASL A                               ;;----|BBB7/----\----;
                      ASL A                               ;;----|BBB8/----\----;
                      ASL A                               ;;----|BBB9/----\----;
                      ADC.B !_6                           ;;----|BBBA/----\----;
                      TAX                                 ;;----|BBBC/----\----;
                    - %LorW_X(LDA,DATA_01BAB7)            ;;----|BBBD/----\----;
                      STA.W !OAMTileNo+$100,Y             ;;----|BBC0/----\----;
                      INY                                 ;;----|BBC3/----\----;
                      INY                                 ;;----|BBC4/----\----;
                      INY                                 ;;----|BBC5/----\----;
                      INY                                 ;;----|BBC6/----\----;
                      INX                                 ;;----|BBC7/----\----;
                      DEC.B !_7                           ;;----|BBC8/----\----;
                      BPL -                               ;;----|BBCA/----\----;
                      LDY.B !_3                           ;;----|BBCC/----\----;
                      LDX.B #$08                          ;;----|BBCE/----\----;
CODE_01BBD0:          LDA.B !SpriteProperties             ;;----|BBD0/----\----;
                      ORA.B #$09                          ;;----|BBD2/----\----;
                      CPX.B #$06                          ;;----|BBD4/----\----;
                      BCS +                               ;;----|BBD6/----\----;
                      ORA.B #$40                          ;;----|BBD8/----\----;
                    + CPX.B #$00                          ;;----|BBDA/----\----;
                      BEQ CODE_01BBE6                     ;;----|BBDC/----\----;
                      CPX.B #$03                          ;;----|BBDE/----\----;
                      BEQ CODE_01BBE6                     ;;----|BBE0/----\----;
                      CPX.B #$06                          ;;----|BBE2/----\----;
                      BNE +                               ;;----|BBE4/----\----;
CODE_01BBE6:          ORA.B #$80                          ;;----|BBE6/----\----;
                    + STA.W !OAMTileAttr+$100,Y           ;;----|BBE8/----\----;
                      INY                                 ;;----|BBEB/----\----;
                      INY                                 ;;----|BBEC/----\----;
                      INY                                 ;;----|BBED/----\----;
                      INY                                 ;;----|BBEE/----\----;
                      DEX                                 ;;----|BBEF/----\----;
                      BPL CODE_01BBD0                     ;;----|BBF0/----\----;
                      LDA.B !_6                           ;;----|BBF2/----\----;
                      PHA                                 ;;----|BBF4/----\----;
                      LDX.W !CurSpriteProcess             ;;----|BBF5/----\----; X = Sprite index 
                      LDA.B #$08                          ;;----|BBF8/----\----;
                      JSR CODE_01B37E                     ;;----|BBFA/----\----;
                      LDY.B #$0C                          ;;----|BBFD/----\----;
                      PLA                                 ;;----|BBFF/----\----;
                      BEQ Return01BC1C                    ;;----|BC00/----\----;
                      CMP.B #$02                          ;;----|BC02/----\----;
                      BNE +                               ;;----|BC04/----\----;
                      LDA.B #$03                          ;;----|BC06/----\----;
                      STA.W !OAMTileSize+$43,Y            ;;----|BC08/----\----;
                      STA.W !OAMTileSize+$44,Y            ;;----|BC0B/----\----;
                      STA.W !OAMTileSize+$45,Y            ;;----|BC0E/----\----;
                    + LDA.B #$03                          ;;----|BC11/----\----;
                      STA.W !OAMTileSize+$46,Y            ;;----|BC13/----\----;
                      STA.W !OAMTileSize+$47,Y            ;;----|BC16/----\----;
                      STA.W !OAMTileSize+$48,Y            ;;----|BC19/----\----;
Return01BC1C:         RTS                                 ;;----|BC1C/----\----; Return 
                                                          ;;                   ;
CODE_01BC1D:          LDA.B !PlayerXPosNext               ;;----|BC1D/----\----; \ $00 = Mario X Low 
                      STA.B !_0                           ;;----|BC1F/----\----; / 
                      LDA.B !PlayerYPosNext               ;;----|BC21/----\----; \ $01 = Mario Y Low 
                      STA.B !_1                           ;;----|BC23/----\----; / 
                      LDA.B #$10                          ;;----|BC25/----\----; \ $02 = $03 = #$10 
                      STA.B !_2                           ;;----|BC27/----\----;  | 
                      STA.B !_3                           ;;----|BC29/----\----; / 
                      LDA.B !PlayerXPosNext+1             ;;----|BC2B/----\----; \ $08 = Mario X High 
                      STA.B !_8                           ;;----|BC2D/----\----; / 
                      LDA.B !PlayerYPosNext+1             ;;----|BC2F/----\----; \ $09 = Mario Y High 
                      STA.B !_9                           ;;----|BC31/----\----; / 
                      RTS                                 ;;----|BC33/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
MagiKoopasMagicPals:  db $05,$07,$09,$0B                  ;;----|BC34/----\----;
                                                          ;;                   ;
MagikoopasMagic:      LDA.B !SpriteLock                   ;;----|BC38/----\----;
                      BEQ +                               ;;----|BC3A/----\----;
                      JMP CODE_01BCBD                     ;;----|BC3C/----\----;
                                                          ;;                   ;
                    + JSR CODE_01B14E                     ;;----|BC3F/----\----;
                      JSR SubSprYPosNoGrvty               ;;----|BC42/----\----;
                      JSR SubSprXPosNoGrvty               ;;----|BC45/----\----;
                      LDA.B !SpriteYSpeed,X               ;;----|BC48/----\----;
                      PHA                                 ;;----|BC4A/----\----;
                      LDA.B #$FF                          ;;----|BC4B/----\----;
                      STA.B !SpriteYSpeed,X               ;;----|BC4D/----\----;
                      JSR CODE_019140                     ;;----|BC4F/----\----;
                      PLA                                 ;;----|BC52/----\----;
                      STA.B !SpriteYSpeed,X               ;;----|BC53/----\----;
                      JSR IsTouchingCeiling               ;;----|BC55/----\----;
                      BEQ CODE_01BCBD                     ;;----|BC58/----\----;
                      LDA.W !SpriteOffscreenX,X           ;;----|BC5A/----\----;
                      BNE CODE_01BCBD                     ;;----|BC5D/----\----;
                      LDA.B #$01                          ;;----|BC5F/----\----; \ Play sound effect 
                      STA.W !SPCIO0                       ;;----|BC61/----\----; / 
                      STZ.W !SpriteStatus,X               ;;----|BC64/----\----;
                      LDA.W !SprMap16TouchVertLow         ;;----|BC67/----\----;
                      SEC                                 ;;----|BC6A/----\----;
                      SBC.B #$11                          ;;----|BC6B/----\----;
                      CMP.B #$1D                          ;;----|BC6D/----\----;
                      BCS CODE_01BCB9                     ;;----|BC6F/----\----;
                      JSL GetRand                         ;;----|BC71/----\----;
                      ADC.W !RandomNumber+1               ;;----|BC75/----\----;
                      ADC.B !PlayerXSpeed                 ;;----|BC78/----\----;
                      ADC.B !TrueFrame                    ;;----|BC7A/----\----;
                      LDY.B #$78                          ;;----|BC7C/----\----;
                      CMP.B #$35                          ;;----|BC7E/----\----;
                      BEQ +                               ;;----|BC80/----\----;
                      LDY.B #$21                          ;;----|BC82/----\----;
                      CMP.B #$08                          ;;----|BC84/----\----;
                      BCC +                               ;;----|BC86/----\----;
                      LDY.B #$27                          ;;----|BC88/----\----;
                      CMP.B #$F7                          ;;----|BC8A/----\----;
                      BCS +                               ;;----|BC8C/----\----;
                      LDY.B #$07                          ;;----|BC8E/----\----;
                    + STY.B !SpriteNumber,X               ;;----|BC90/----\----;
                      LDA.B #$08                          ;;----|BC92/----\----; \ Sprite status = Normal 
                      STA.W !SpriteStatus,X               ;;----|BC94/----\----; / 
                      JSL InitSpriteTables                ;;----|BC97/----\----;
                      LDA.B !TouchBlockXPos+1             ;;----|BC9B/----\----; \ Sprite X position = block X position 
                      STA.W !SpriteYPosHigh,X             ;;----|BC9D/----\----;  | 
                      LDA.B !TouchBlockXPos               ;;----|BCA0/----\----;  | 
                      AND.B #$F0                          ;;----|BCA2/----\----;  | 
                      STA.B !SpriteXPosLow,X              ;;----|BCA4/----\----;  | 
                      LDA.B !TouchBlockYPos+1             ;;----|BCA6/----\----; / 
                      STA.W !SpriteXPosHigh,X             ;;----|BCA8/----\----; \ Sprite Y position = block Y position 
                      LDA.B !TouchBlockYPos               ;;----|BCAB/----\----;  | 
                      AND.B #$F0                          ;;----|BCAD/----\----;  | 
                      STA.B !SpriteYPosLow,X              ;;----|BCAF/----\----; / 
                      LDA.B #$02                          ;;----|BCB1/----\----; \ Block to generate = #$02 
                      STA.B !Map16TileGenerate            ;;----|BCB3/----\----; / 
                      JSL GenerateTile                    ;;----|BCB5/----\----;
CODE_01BCB9:          JSR CODE_01BD98                     ;;----|BCB9/----\----;
                      RTS                                 ;;----|BCBC/----\----; Return 
                                                          ;;                   ;
CODE_01BCBD:          JSR SubSprSpr_MarioSpr              ;;----|BCBD/----\----;
                      LDA.B !TrueFrame                    ;;----|BCC0/----\----;
                      LSR A                               ;;----|BCC2/----\----;
                      LSR A                               ;;----|BCC3/----\----;
                      AND.B #$03                          ;;----|BCC4/----\----;
                      TAY                                 ;;----|BCC6/----\----;
                      LDA.W MagiKoopasMagicPals,Y         ;;----|BCC7/----\----;
                      STA.W !SpriteOBJAttribute,X         ;;----|BCCA/----\----;
                      JSR MagiKoopasMagicGfx              ;;----|BCCD/----\----;
                      JSR SubOffscreen0Bnk1               ;;----|BCD0/----\----;
                      LDA.B !SpriteYPosLow,X              ;;----|BCD3/----\----;
                      SEC                                 ;;----|BCD5/----\----;
                      SBC.B !Layer1YPos                   ;;----|BCD6/----\----;
                      CMP.B #$E0                          ;;----|BCD8/----\----;
                      BCC +                               ;;----|BCDA/----\----;
                      STZ.W !SpriteStatus,X               ;;----|BCDC/----\----;
                    + RTS                                 ;;----|BCDF/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
MagiKoopasMagicDisp:  db $00,$01,$02,$05,$08,$0B,$0E,$0F  ;;----|BCE0/----\----;
                      db $10,$0F,$0E,$0B,$08,$05,$02,$01  ;;----|BCE8/----\----;
                                                          ;;                   ;
MagiKoopasMagicGfx:   JSR GetDrawInfoBnk1                 ;;----|BCF0/----\----;
                      LDA.B !EffFrame                     ;;----|BCF3/----\----;
                      LSR A                               ;;----|BCF5/----\----;
                      AND.B #$0F                          ;;----|BCF6/----\----;
                      STA.B !_3                           ;;----|BCF8/----\----;
                      CLC                                 ;;----|BCFA/----\----;
                      ADC.B #$0C                          ;;----|BCFB/----\----;
                      AND.B #$0F                          ;;----|BCFD/----\----;
                      STA.B !_2                           ;;----|BCFF/----\----;
                      LDA.B !_1                           ;;----|BD01/----\----;
                      SEC                                 ;;----|BD03/----\----;
                      SBC.B #$04                          ;;----|BD04/----\----;
                      STA.B !_1                           ;;----|BD06/----\----;
                      LDA.B !_0                           ;;----|BD08/----\----;
                      SEC                                 ;;----|BD0A/----\----;
                      SBC.B #$04                          ;;----|BD0B/----\----;
                      STA.B !_0                           ;;----|BD0D/----\----;
                      LDX.B !_2                           ;;----|BD0F/----\----;
                      LDA.B !_1                           ;;----|BD11/----\----;
                      CLC                                 ;;----|BD13/----\----;
                      %LorW_X(ADC,MagiKoopasMagicDisp)    ;;----|BD14/----\----;
                      STA.W !OAMTileYPos+$100,Y           ;;----|BD17/----\----;
                      LDX.B !_3                           ;;----|BD1A/----\----;
                      LDA.B !_0                           ;;----|BD1C/----\----;
                      CLC                                 ;;----|BD1E/----\----;
                      %LorW_X(ADC,MagiKoopasMagicDisp)    ;;----|BD1F/----\----;
                      STA.W !OAMTileXPos+$100,Y           ;;----|BD22/----\----;
                      LDA.B !_2                           ;;----|BD25/----\----;
                      CLC                                 ;;----|BD27/----\----;
                      ADC.B #$05                          ;;----|BD28/----\----;
                      AND.B #$0F                          ;;----|BD2A/----\----;
                      STA.B !_2                           ;;----|BD2C/----\----;
                      TAX                                 ;;----|BD2E/----\----;
                      LDA.B !_1                           ;;----|BD2F/----\----;
                      CLC                                 ;;----|BD31/----\----;
                      %LorW_X(ADC,MagiKoopasMagicDisp)    ;;----|BD32/----\----;
                      STA.W !OAMTileYPos+$104,Y           ;;----|BD35/----\----;
                      LDA.B !_3                           ;;----|BD38/----\----;
                      CLC                                 ;;----|BD3A/----\----;
                      ADC.B #$05                          ;;----|BD3B/----\----;
                      AND.B #$0F                          ;;----|BD3D/----\----;
                      STA.B !_3                           ;;----|BD3F/----\----;
                      TAX                                 ;;----|BD41/----\----;
                      LDA.B !_0                           ;;----|BD42/----\----;
                      CLC                                 ;;----|BD44/----\----;
                      %LorW_X(ADC,MagiKoopasMagicDisp)    ;;----|BD45/----\----;
                      STA.W !OAMTileXPos+$104,Y           ;;----|BD48/----\----;
                      LDA.B !_2                           ;;----|BD4B/----\----;
                      CLC                                 ;;----|BD4D/----\----;
                      ADC.B #$05                          ;;----|BD4E/----\----;
                      AND.B #$0F                          ;;----|BD50/----\----;
                      STA.B !_2                           ;;----|BD52/----\----;
                      TAX                                 ;;----|BD54/----\----;
                      LDA.B !_1                           ;;----|BD55/----\----;
                      CLC                                 ;;----|BD57/----\----;
                      %LorW_X(ADC,MagiKoopasMagicDisp)    ;;----|BD58/----\----;
                      STA.W !OAMTileYPos+$108,Y           ;;----|BD5B/----\----;
                      LDA.B !_3                           ;;----|BD5E/----\----;
                      CLC                                 ;;----|BD60/----\----;
                      ADC.B #$05                          ;;----|BD61/----\----;
                      AND.B #$0F                          ;;----|BD63/----\----;
                      STA.B !_3                           ;;----|BD65/----\----;
                      TAX                                 ;;----|BD67/----\----;
                      LDA.B !_0                           ;;----|BD68/----\----;
                      CLC                                 ;;----|BD6A/----\----;
                      %LorW_X(ADC,MagiKoopasMagicDisp)    ;;----|BD6B/----\----;
                      STA.W !OAMTileXPos+$108,Y           ;;----|BD6E/----\----;
                      LDX.W !CurSpriteProcess             ;;----|BD71/----\----; X = Sprite index 
                      LDA.W !SpriteOBJAttribute,X         ;;----|BD74/----\----;
                      ORA.B !SpriteProperties             ;;----|BD77/----\----;
                      STA.W !OAMTileAttr+$100,Y           ;;----|BD79/----\----;
                      STA.W !OAMTileAttr+$104,Y           ;;----|BD7C/----\----;
                      STA.W !OAMTileAttr+$108,Y           ;;----|BD7F/----\----;
                      LDA.B #$88                          ;;----|BD82/----\----;
                      STA.W !OAMTileNo+$100,Y             ;;----|BD84/----\----;
                      LDA.B #$89                          ;;----|BD87/----\----;
                      STA.W !OAMTileNo+$104,Y             ;;----|BD89/----\----;
                      LDA.B #$98                          ;;----|BD8C/----\----;
                      STA.W !OAMTileNo+$108,Y             ;;----|BD8E/----\----;
                      LDY.B #$00                          ;;----|BD91/----\----; \ 3 8x8 tiles 
                      LDA.B #$02                          ;;----|BD93/----\----;  | 
                      JMP FinishOAMWriteRt                ;;----|BD95/----\----;
                                                          ;;                   ;
CODE_01BD98:          LDY.B #$03                          ;;----|BD98/----\----;
CODE_01BD9A:          LDA.W !SmokeSpriteNumber,Y          ;;----|BD9A/----\----;
                      BEQ CODE_01BDA3                     ;;----|BD9D/----\----;
                      DEY                                 ;;----|BD9F/----\----;
                      BPL CODE_01BD9A                     ;;----|BDA0/----\----;
                      RTS                                 ;;----|BDA2/----\----; Return 
                                                          ;;                   ;
CODE_01BDA3:          LDA.B #$01                          ;;----|BDA3/----\----;
                      STA.W !SmokeSpriteNumber,Y          ;;----|BDA5/----\----;
                      LDA.B !SpriteXPosLow,X              ;;----|BDA8/----\----;
                      STA.W !SmokeSpriteXPos,Y            ;;----|BDAA/----\----;
                      LDA.B !SpriteYPosLow,X              ;;----|BDAD/----\----;
                      STA.W !SmokeSpriteYPos,Y            ;;----|BDAF/----\----;
                      LDA.B #$1B                          ;;----|BDB2/----\----;
                      STA.W !SmokeSpriteTimer,Y           ;;----|BDB4/----\----;
                      RTS                                 ;;----|BDB7/----\----; Return 
                                                          ;;                   ;
InitMagikoopa:        LDY.B #$09                          ;;----|BDB8/----\----;
CODE_01BDBA:          CPY.W !CurSpriteProcess             ;;----|BDBA/----\----;
                      BEQ +                               ;;----|BDBD/----\----;
                      LDA.W !SpriteStatus,Y               ;;----|BDBF/----\----;
                      BEQ +                               ;;----|BDC2/----\----;
                      LDA.W !SpriteNumber,Y               ;;----|BDC4/----\----;
                      CMP.B #$1F                          ;;----|BDC7/----\----;
                      BNE +                               ;;----|BDC9/----\----;
                      STZ.W !SpriteStatus,X               ;;----|BDCB/----\----;
                      RTS                                 ;;----|BDCE/----\----; Return 
                                                          ;;                   ;
                    + DEY                                 ;;----|BDCF/----\----;
                      BPL CODE_01BDBA                     ;;----|BDD0/----\----;
                      STZ.W !SpriteWillAppear             ;;----|BDD2/----\----;
                      RTS                                 ;;----|BDD5/----\----; Return 
                                                          ;;                   ;
Magikoopa:            LDA.B #$01                          ;;----|BDD6/----\----;
                      STA.W !SpriteOnYoshiTongue,X        ;;----|BDD8/----\----;
                      LDA.W !SpriteOffscreenX,X           ;;----|BDDB/----\----;
                      BEQ +                               ;;----|BDDE/----\----;
                      STZ.B !SpriteTableC2,X              ;;----|BDE0/----\----;
                    + LDA.B !SpriteTableC2,X              ;;----|BDE2/----\----;
                      AND.B #$03                          ;;----|BDE4/----\----;
                      JSL ExecutePtr                      ;;----|BDE6/----\----;
                                                          ;;                   ;
                      dw CODE_01BDF2                      ;;----|BDEA/----\----;
                      dw CODE_01BE5F                      ;;----|BDEC/----\----;
                      dw CODE_01BE6E                      ;;----|BDEE/----\----;
                      dw CODE_01BF16                      ;;----|BDF0/----\----;
                                                          ;;                   ;
CODE_01BDF2:          LDA.W !SpriteWillAppear             ;;----|BDF2/----\----;
                      BEQ +                               ;;----|BDF5/----\----;
                      STZ.W !SpriteStatus,X               ;;----|BDF7/----\----;
                      RTS                                 ;;----|BDFA/----\----; Return 
                                                          ;;                   ;
                    + LDA.B !SpriteLock                   ;;----|BDFB/----\----; \ Branch if sprites locked 
                      BNE +                               ;;----|BDFD/----\----; / 
                      LDY.B #$24                          ;;----|BDFF/----\----;
                      STY.B !ColorSettings                ;;----|BE01/----\----;
                      LDA.W !SpriteMisc1540,X             ;;----|BE03/----\----;
                      BNE +                               ;;----|BE06/----\----;
                      JSL GetRand                         ;;----|BE08/----\----;
                      CMP.B #$D1                          ;;----|BE0C/----\----;
                      BCS +                               ;;----|BE0E/----\----;
                      CLC                                 ;;----|BE10/----\----;
                      ADC.B !Layer1YPos                   ;;----|BE11/----\----;
                      AND.B #$F0                          ;;----|BE13/----\----;
                      STA.B !SpriteYPosLow,X              ;;----|BE15/----\----;
                      LDA.B !Layer1YPos+1                 ;;----|BE17/----\----;
                      ADC.B #$00                          ;;----|BE19/----\----;
                      STA.W !SpriteXPosHigh,X             ;;----|BE1B/----\----;
                      JSL GetRand                         ;;----|BE1E/----\----;
                      CLC                                 ;;----|BE22/----\----;
                      ADC.B !Layer1XPos                   ;;----|BE23/----\----;
                      AND.B #$F0                          ;;----|BE25/----\----;
                      STA.B !SpriteXPosLow,X              ;;----|BE27/----\----;
                      LDA.B !Layer1XPos+1                 ;;----|BE29/----\----;
                      ADC.B #$00                          ;;----|BE2B/----\----;
                      STA.W !SpriteYPosHigh,X             ;;----|BE2D/----\----;
                      JSR SubHorizPos                     ;;----|BE30/----\----;
                      LDA.B !_F                           ;;----|BE33/----\----;
                      CLC                                 ;;----|BE35/----\----;
                      ADC.B #$20                          ;;----|BE36/----\----;
                      CMP.B #$40                          ;;----|BE38/----\----;
                      BCC +                               ;;----|BE3A/----\----;
                      STZ.B !SpriteYSpeed,X               ;;----|BE3C/----\----; Sprite Y Speed = 0 
                      LDA.B #$01                          ;;----|BE3E/----\----;
                      STA.B !SpriteXSpeed,X               ;;----|BE40/----\----;
                      JSR CODE_019140                     ;;----|BE42/----\----;
                      JSR IsOnGround                      ;;----|BE45/----\----;
                      BEQ +                               ;;----|BE48/----\----;
                      LDA.W !SprMap16TouchHorizHigh       ;;----|BE4A/----\----;
                      BNE +                               ;;----|BE4D/----\----;
                      INC.B !SpriteTableC2,X              ;;----|BE4F/----\----;
                      STZ.W !SpriteMisc1570,X             ;;----|BE51/----\----;
                      JSR CODE_01BE82                     ;;----|BE54/----\----;
                      JSR SubHorizPos                     ;;----|BE57/----\----;
                      TYA                                 ;;----|BE5A/----\----;
                      STA.W !SpriteMisc157C,X             ;;----|BE5B/----\----;
                    + RTS                                 ;;----|BE5E/----\----; Return 
                                                          ;;                   ;
CODE_01BE5F:          JSR CODE_01C004                     ;;----|BE5F/----\----;
                      STZ.W !SpriteMisc1602,X             ;;----|BE62/----\----;
                      JSR SubSprGfx1                      ;;----|BE65/----\----;
                      RTS                                 ;;----|BE68/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
DATA_01BE69:          db $04,$02,$00                      ;;----|BE69/----\----;
                                                          ;;                   ;
DATA_01BE6C:          db $10,$F8                          ;;----|BE6C/----\----;
                                                          ;;                   ;
CODE_01BE6E:          STZ.W !SpriteOnYoshiTongue,X        ;;----|BE6E/----\----;
                      JSR SubSprSpr_MarioSpr              ;;----|BE71/----\----;
                      JSR SubHorizPos                     ;;----|BE74/----\----;
                      TYA                                 ;;----|BE77/----\----;
                      STA.W !SpriteMisc157C,X             ;;----|BE78/----\----;
                      LDA.W !SpriteMisc1540,X             ;;----|BE7B/----\----;
                      BNE +                               ;;----|BE7E/----\----;
                      INC.B !SpriteTableC2,X              ;;----|BE80/----\----;
CODE_01BE82:          LDY.B #$34                          ;;----|BE82/----\----;
                      STY.B !ColorSettings                ;;----|BE84/----\----;
                    + CMP.B #$40                          ;;----|BE86/----\----;
                      BNE CODE_01BE96                     ;;----|BE88/----\----;
                      PHA                                 ;;----|BE8A/----\----;
                      LDA.B !SpriteLock                   ;;----|BE8B/----\----;
                      ORA.W !SpriteOffscreenX,X           ;;----|BE8D/----\----;
                      BNE +                               ;;----|BE90/----\----;
                      JSR CODE_01BF1D                     ;;----|BE92/----\----;JUMP TO GENERATE MAGIC         
                    + PLA                                 ;;----|BE95/----\----;
CODE_01BE96:          LSR A                               ;;----|BE96/----\----;
                      LSR A                               ;;----|BE97/----\----;
                      LSR A                               ;;----|BE98/----\----;
                      LSR A                               ;;----|BE99/----\----;
                      LSR A                               ;;----|BE9A/----\----;
                      LSR A                               ;;----|BE9B/----\----;
                      TAY                                 ;;----|BE9C/----\----;
                      PHY                                 ;;----|BE9D/----\----;
                      LDA.W !SpriteMisc1540,X             ;;----|BE9E/----\----;
                      LSR A                               ;;----|BEA1/----\----;
                      LSR A                               ;;----|BEA2/----\----;
                      LSR A                               ;;----|BEA3/----\----;
                      AND.B #$01                          ;;----|BEA4/----\----;
                      ORA.W DATA_01BE69,Y                 ;;----|BEA6/----\----;
                      STA.W !SpriteMisc1602,X             ;;----|BEA9/----\----;
                      JSR SubSprGfx1                      ;;----|BEAC/----\----;
                      LDA.W !SpriteMisc1602,X             ;;----|BEAF/----\----;
                      SEC                                 ;;----|BEB2/----\----;
                      SBC.B #$02                          ;;----|BEB3/----\----;
                      CMP.B #$02                          ;;----|BEB5/----\----;
                      BCC +                               ;;----|BEB7/----\----;
                      LSR A                               ;;----|BEB9/----\----;
                      BCC +                               ;;----|BEBA/----\----;
                      LDA.W !SpriteOAMIndex,X             ;;----|BEBC/----\----;
                      TAX                                 ;;----|BEBF/----\----;
                      INC.W !OAMTileYPos+$100,X           ;;----|BEC0/----\----;
                      LDX.W !CurSpriteProcess             ;;----|BEC3/----\----; X = Sprite index 
                    + PLY                                 ;;----|BEC6/----\----;
                      CPY.B #$01                          ;;----|BEC7/----\----;
                      BNE +                               ;;----|BEC9/----\----;
                      JSR CODE_01B14E                     ;;----|BECB/----\----;
                    + LDA.W !SpriteMisc1602,X             ;;----|BECE/----\----;
                      CMP.B #$04                          ;;----|BED1/----\----;
                      BCC Return01BF15                    ;;----|BED3/----\----;
                      LDY.W !SpriteMisc157C,X             ;;----|BED5/----\----;
                      LDA.B !SpriteXPosLow,X              ;;----|BED8/----\----;
                      CLC                                 ;;----|BEDA/----\----;
                      ADC.W DATA_01BE6C,Y                 ;;----|BEDB/----\----;
                      SEC                                 ;;----|BEDE/----\----;
                      SBC.B !Layer1XPos                   ;;----|BEDF/----\----;
                      LDY.W !SpriteOAMIndex,X             ;;----|BEE1/----\----; Y = Index into sprite OAM 
                      STA.W !OAMTileXPos+$108,Y           ;;----|BEE4/----\----;
                      LDA.B !SpriteYPosLow,X              ;;----|BEE7/----\----;
                      SEC                                 ;;----|BEE9/----\----;
                      SBC.B !Layer1YPos                   ;;----|BEEA/----\----;
                      CLC                                 ;;----|BEEC/----\----;
                      ADC.B #$10                          ;;----|BEED/----\----;
                      STA.W !OAMTileYPos+$108,Y           ;;----|BEEF/----\----;
                      LDA.W !SpriteMisc157C,X             ;;----|BEF2/----\----;
                      LSR A                               ;;----|BEF5/----\----;
                      LDA.B #$00                          ;;----|BEF6/----\----;
                      BCS +                               ;;----|BEF8/----\----;
                      ORA.B #$40                          ;;----|BEFA/----\----;
                    + ORA.B !SpriteProperties             ;;----|BEFC/----\----;
                      ORA.W !SpriteOBJAttribute,X         ;;----|BEFE/----\----;
                      STA.W !OAMTileAttr+$108,Y           ;;----|BF01/----\----;
                      LDA.B #$99                          ;;----|BF04/----\----;
                      STA.W !OAMTileNo+$108,Y             ;;----|BF06/----\----;
                      TYA                                 ;;----|BF09/----\----;
                      LSR A                               ;;----|BF0A/----\----;
                      LSR A                               ;;----|BF0B/----\----;
                      TAY                                 ;;----|BF0C/----\----;
                      LDA.B #$00                          ;;----|BF0D/----\----;
                      ORA.W !SpriteOffscreenX,X           ;;----|BF0F/----\----;
                      STA.W !OAMTileSize+$42,Y            ;;----|BF12/----\----;
Return01BF15:         RTS                                 ;;----|BF15/----\----; Return 
                                                          ;;                   ;
CODE_01BF16:          JSR CODE_01BFE3                     ;;----|BF16/----\----;
                      JSR SubSprGfx1                      ;;----|BF19/----\----;
                      RTS                                 ;;----|BF1C/----\----; Return 
                                                          ;;                   ;
CODE_01BF1D:          LDY.B #$09                          ;;----|BF1D/----\----;
CODE_01BF1F:          LDA.W !SpriteStatus,Y               ;;----|BF1F/----\----;
                      BEQ CODE_01BF28                     ;;----|BF22/----\----;
                      DEY                                 ;;----|BF24/----\----;
                      BPL CODE_01BF1F                     ;;----|BF25/----\----;
                      RTS                                 ;;----|BF27/----\----; Return 
                                                          ;;                   ;
CODE_01BF28:          LDA.B #$10                          ;;----|BF28/----\----; \ Play sound effect 
                      STA.W !SPCIO0                       ;;----|BF2A/----\----; / 
                      LDA.B #$08                          ;;----|BF2D/----\----; \ Sprite status = Normal 
                      STA.W !SpriteStatus,Y               ;;----|BF2F/----\----; / 
                      LDA.B #$20                          ;;----|BF32/----\----;GENERATES MAGIC HERE!   !@#            
                      STA.W !SpriteNumber,Y               ;;----|BF34/----\----;
                      LDA.B !SpriteXPosLow,X              ;;----|BF37/----\----;
                      STA.W !SpriteXPosLow,Y              ;;----|BF39/----\----;
                      LDA.W !SpriteYPosHigh,X             ;;----|BF3C/----\----;
                      STA.W !SpriteYPosHigh,Y             ;;----|BF3F/----\----;
                      LDA.B !SpriteYPosLow,X              ;;----|BF42/----\----;
                      CLC                                 ;;----|BF44/----\----;
                      ADC.B #$0A                          ;;----|BF45/----\----;
                      STA.W !SpriteYPosLow,Y              ;;----|BF47/----\----;
                      LDA.W !SpriteXPosHigh,X             ;;----|BF4A/----\----;
                      ADC.B #$00                          ;;----|BF4D/----\----;
                      STA.W !SpriteXPosHigh,Y             ;;----|BF4F/----\----;
                      TYX                                 ;;----|BF52/----\----;
                      JSL InitSpriteTables                ;;----|BF53/----\----;
                      LDA.B #$20                          ;;----|BF57/----\----;
                      JSR CODE_01BF6A                     ;;----|BF59/----\----;
                      LDX.W !CurSpriteProcess             ;;----|BF5C/----\----; X = Sprite index 
                      LDA.B !_0                           ;;----|BF5F/----\----;PULLS SPEED FROM RAM HERE?                   
                      STA.W !SpriteYSpeed,Y               ;;----|BF61/----\----;
                      LDA.B !_1                           ;;----|BF64/----\----;
                      STA.W !SpriteXSpeed,Y               ;;----|BF66/----\----;
                      RTS                                 ;;----|BF69/----\----; Return 
                                                          ;;                   ;
CODE_01BF6A:          STA.B !_1                           ;;----|BF6A/----\----;FILLS OUT RAM TO USE FOR SPEED?                   
                      PHX                                 ;;----|BF6C/----\----;
                      PHY                                 ;;----|BF6D/----\----;
                      JSR CODE_01AD42                     ;;----|BF6E/----\----;
                      STY.B !_2                           ;;----|BF71/----\----;
                      LDA.B !_E                           ;;----|BF73/----\----;
                      BPL +                               ;;----|BF75/----\----;
                      EOR.B #$FF                          ;;----|BF77/----\----;
                      CLC                                 ;;----|BF79/----\----;
                      ADC.B #$01                          ;;----|BF7A/----\----;
                    + STA.B !_C                           ;;----|BF7C/----\----;
                      JSR SubHorizPos                     ;;----|BF7E/----\----;
                      STY.B !_3                           ;;----|BF81/----\----;
                      LDA.B !_F                           ;;----|BF83/----\----;
                      BPL +                               ;;----|BF85/----\----;
                      EOR.B #$FF                          ;;----|BF87/----\----;
                      CLC                                 ;;----|BF89/----\----;
                      ADC.B #$01                          ;;----|BF8A/----\----;
                    + STA.B !_D                           ;;----|BF8C/----\----;
                      LDY.B #$00                          ;;----|BF8E/----\----;
                      LDA.B !_D                           ;;----|BF90/----\----;
                      CMP.B !_C                           ;;----|BF92/----\----;
                      BCS +                               ;;----|BF94/----\----;
                      INY                                 ;;----|BF96/----\----;
                      PHA                                 ;;----|BF97/----\----;
                      LDA.B !_C                           ;;----|BF98/----\----;
                      STA.B !_D                           ;;----|BF9A/----\----;
                      PLA                                 ;;----|BF9C/----\----;
                      STA.B !_C                           ;;----|BF9D/----\----;
                    + LDA.B #$00                          ;;----|BF9F/----\----;
                      STA.B !_B                           ;;----|BFA1/----\----;
                      STA.B !_0                           ;;----|BFA3/----\----;
                      LDX.B !_1                           ;;----|BFA5/----\----;
CODE_01BFA7:          LDA.B !_B                           ;;----|BFA7/----\----;
                      CLC                                 ;;----|BFA9/----\----;
                      ADC.B !_C                           ;;----|BFAA/----\----;
                      CMP.B !_D                           ;;----|BFAC/----\----;
                      BCC +                               ;;----|BFAE/----\----;
                      SBC.B !_D                           ;;----|BFB0/----\----;
                      INC.B !_0                           ;;----|BFB2/----\----;
                    + STA.B !_B                           ;;----|BFB4/----\----;
                      DEX                                 ;;----|BFB6/----\----;
                      BNE CODE_01BFA7                     ;;----|BFB7/----\----;
                      TYA                                 ;;----|BFB9/----\----;
                      BEQ +                               ;;----|BFBA/----\----;
                      LDA.B !_0                           ;;----|BFBC/----\----;
                      PHA                                 ;;----|BFBE/----\----;
                      LDA.B !_1                           ;;----|BFBF/----\----;
                      STA.B !_0                           ;;----|BFC1/----\----;
                      PLA                                 ;;----|BFC3/----\----;
                      STA.B !_1                           ;;----|BFC4/----\----;
                    + LDA.B !_0                           ;;----|BFC6/----\----;
                      LDY.B !_2                           ;;----|BFC8/----\----;
                      BEQ +                               ;;----|BFCA/----\----;
                      EOR.B #$FF                          ;;----|BFCC/----\----;
                      CLC                                 ;;----|BFCE/----\----;
                      ADC.B #$01                          ;;----|BFCF/----\----;
                      STA.B !_0                           ;;----|BFD1/----\----;
                    + LDA.B !_1                           ;;----|BFD3/----\----;
                      LDY.B !_3                           ;;----|BFD5/----\----;
                      BEQ +                               ;;----|BFD7/----\----;
                      EOR.B #$FF                          ;;----|BFD9/----\----;
                      CLC                                 ;;----|BFDB/----\----;
                      ADC.B #$01                          ;;----|BFDC/----\----;
                      STA.B !_1                           ;;----|BFDE/----\----;
                    + PLY                                 ;;----|BFE0/----\----;
                      PLX                                 ;;----|BFE1/----\----;
                      RTS                                 ;;----|BFE2/----\----; Return 
                                                          ;;                   ;
CODE_01BFE3:          LDA.W !SpriteMisc1540,X             ;;----|BFE3/----\----;
                      BNE Return01C000                    ;;----|BFE6/----\----;
                      LDA.B #$02                          ;;----|BFE8/----\----;
                      STA.W !SpriteMisc1540,X             ;;----|BFEA/----\----;
                      DEC.W !SpriteMisc1570,X             ;;----|BFED/----\----;
                      LDA.W !SpriteMisc1570,X             ;;----|BFF0/----\----;
                      CMP.B #$00                          ;;----|BFF3/----\----;
                      BNE +                               ;;----|BFF5/----\----;
                      INC.B !SpriteTableC2,X              ;;----|BFF7/----\----;
                      LDA.B #$10                          ;;----|BFF9/----\----;
                      STA.W !SpriteMisc1540,X             ;;----|BFFB/----\----;
                      PLA                                 ;;----|BFFE/----\----;
                      PLA                                 ;;----|BFFF/----\----;
Return01C000:         RTS                                 ;;----|C000/----\----; Return 
                                                          ;;                   ;
                    + JMP CODE_01C028                     ;;----|C001/----\----;
                                                          ;;                   ;
CODE_01C004:          LDA.W !SpriteMisc1540,X             ;;----|C004/----\----;
                      BNE CODE_01C05E                     ;;----|C007/----\----;
                      LDA.B #$04                          ;;----|C009/----\----;
                      STA.W !SpriteMisc1540,X             ;;----|C00B/----\----;
                      INC.W !SpriteMisc1570,X             ;;----|C00E/----\----;
                      LDA.W !SpriteMisc1570,X             ;;----|C011/----\----;
                      CMP.B #$09                          ;;----|C014/----\----;
                      BNE +                               ;;----|C016/----\----;
                      LDY.B #$24                          ;;----|C018/----\----;
                      STY.B !ColorSettings                ;;----|C01A/----\----;
                    + CMP.B #$09                          ;;----|C01C/----\----;
                      BNE CODE_01C028                     ;;----|C01E/----\----;
                      INC.B !SpriteTableC2,X              ;;----|C020/----\----;
                      LDA.B #$70                          ;;----|C022/----\----;
                      STA.W !SpriteMisc1540,X             ;;----|C024/----\----;
                      RTS                                 ;;----|C027/----\----; Return 
                                                          ;;                   ;
CODE_01C028:          LDA.W !SpriteMisc1570,X             ;;----|C028/----\----;
                      DEC A                               ;;----|C02B/----\----;
                      ASL A                               ;;----|C02C/----\----;
                      ASL A                               ;;----|C02D/----\----;
                      ASL A                               ;;----|C02E/----\----;
                      ASL A                               ;;----|C02F/----\----;
                      TAX                                 ;;----|C030/----\----;
                      STZ.B !_0                           ;;----|C031/----\----;
                      LDY.W !DynPaletteIndex              ;;----|C033/----\----;
                    - LDA.L MagiKoopaPals,X               ;;----|C036/----\----;
                      STA.W !DynPaletteTable+2,Y          ;;----|C03A/----\----;
                      INY                                 ;;----|C03D/----\----;
                      INX                                 ;;----|C03E/----\----;
                      INC.B !_0                           ;;----|C03F/----\----;
                      LDA.B !_0                           ;;----|C041/----\----;
                      CMP.B #$10                          ;;----|C043/----\----;
                      BNE -                               ;;----|C045/----\----;
                      LDX.W !DynPaletteIndex              ;;----|C047/----\----;
                      LDA.B #$10                          ;;----|C04A/----\----;
                      STA.W !DynPaletteTable,X            ;;----|C04C/----\----;
                      LDA.B #$F0                          ;;----|C04F/----\----;
                      STA.W !DynPaletteTable+1,X          ;;----|C051/----\----;
                      STZ.W !DynPaletteTable+$12,X        ;;----|C054/----\----;
                      TXA                                 ;;----|C057/----\----;
                      CLC                                 ;;----|C058/----\----;
                      ADC.B #$12                          ;;----|C059/----\----;
                      STA.W !DynPaletteIndex              ;;----|C05B/----\----;
CODE_01C05E:          LDX.W !CurSpriteProcess             ;;----|C05E/----\----; X = Sprite index 
                      RTS                                 ;;----|C061/----\----; Return 
                                                          ;;                   ;
                      JSR InitGoalTape                    ;;----|C062/----\----; \ Unreachable 
                      LDA.B !SpriteYPosLow,X              ;;----|C065/----\----;  | Call Goal Tape INIT, then 
                      SEC                                 ;;----|C067/----\----;  | Sprite Y position -= #$4C 
                      SBC.B #$4C                          ;;----|C068/----\----;  | 
                      STA.B !SpriteYPosLow,X              ;;----|C06A/----\----;  | 
                      LDA.W !SpriteXPosHigh,X             ;;----|C06C/----\----;  | 
                      SBC.B #$00                          ;;----|C06F/----\----;  | 
                      STA.W !SpriteXPosHigh,X             ;;----|C071/----\----;  | 
                      RTS                                 ;;----|C074/----\----; / 
                                                          ;;                   ;
InitGoalTape:         LDA.B !SpriteXPosLow,X              ;;----|C075/----\----;
                      SEC                                 ;;----|C077/----\----;
                      SBC.B #$08                          ;;----|C078/----\----;
                      STA.B !SpriteTableC2,X              ;;----|C07A/----\----;
                      LDA.W !SpriteYPosHigh,X             ;;----|C07C/----\----;
                      SBC.B #$00                          ;;----|C07F/----\----;
                      STA.W !SpriteMisc151C,X             ;;----|C081/----\----;
                      LDA.B !SpriteYPosLow,X              ;;----|C084/----\----;
                      STA.W !SpriteMisc1528,X             ;;----|C086/----\----;
                      LDA.W !SpriteXPosHigh,X             ;;----|C089/----\----; \ Save extra bits into $187B,x 
                      STA.W !SpriteMisc187B,X             ;;----|C08C/----\----; / 
                      AND.B #$01                          ;;----|C08F/----\----; \ Clear extra bits out of position 
                      STA.W !SpriteXPosHigh,X             ;;----|C091/----\----; / 
                      STA.W !SpriteMisc1534,X             ;;----|C094/----\----;
                      RTS                                 ;;----|C097/----\----; Return 
                                                          ;;                   ;
GoalTape:             JSR CODE_01C12D                     ;;----|C098/----\----;
                      LDA.B !SpriteLock                   ;;----|C09B/----\----; \ Branch if sprites locked 
                      BNE Return01C0A4                    ;;----|C09D/----\----; / 
                      LDA.W !SpriteMisc1602,X             ;;----|C09F/----\----;
                      BEQ +                               ;;----|C0A2/----\----;
Return01C0A4:         RTS                                 ;;----|C0A4/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
DATA_01C0A5:          db $10,$F0                          ;;----|C0A5/----\----;
                                                          ;;                   ;
                    + LDA.W !SpriteMisc1540,X             ;;----|C0A7/----\----;
                      BNE +                               ;;----|C0AA/----\----;
                      LDA.B #$7C                          ;;----|C0AC/----\----;
                      STA.W !SpriteMisc1540,X             ;;----|C0AE/----\----;
                      INC.W !SpriteBlockedDirs,X          ;;----|C0B1/----\----;
                    + LDA.W !SpriteBlockedDirs,X          ;;----|C0B4/----\----;
                      AND.B #$01                          ;;----|C0B7/----\----;
                      TAY                                 ;;----|C0B9/----\----;
                      LDA.W DATA_01C0A5,Y                 ;;----|C0BA/----\----;
                      STA.B !SpriteYSpeed,X               ;;----|C0BD/----\----;
                      JSR SubSprYPosNoGrvty               ;;----|C0BF/----\----;
                      LDA.B !SpriteTableC2,X              ;;----|C0C2/----\----;
                      STA.B !_0                           ;;----|C0C4/----\----;
                      LDA.W !SpriteMisc151C,X             ;;----|C0C6/----\----;
                      STA.B !_1                           ;;----|C0C9/----\----;
                      REP #$20                            ;;----|C0CB/----\----; Accum (16 bit) 
                      LDA.B !PlayerXPosNext               ;;----|C0CD/----\----;
                      SEC                                 ;;----|C0CF/----\----;
                      SBC.B !_0                           ;;----|C0D0/----\----;
                      CMP.W #$0010                        ;;----|C0D2/----\----;
                      SEP #$20                            ;;----|C0D5/----\----; Accum (8 bit) 
                      BCS Return01C12C                    ;;----|C0D7/----\----;
                      LDA.W !SpriteMisc1528,X             ;;----|C0D9/----\----;
                      CMP.B !PlayerYPosNext               ;;----|C0DC/----\----;
                      LDA.W !SpriteMisc1534,X             ;;----|C0DE/----\----;
                      AND.B #$01                          ;;----|C0E1/----\----;
                      SBC.B !PlayerYPosNext+1             ;;----|C0E3/----\----;
                      BCC Return01C12C                    ;;----|C0E5/----\----;
                      LDA.W !SpriteMisc187B,X             ;;----|C0E7/----\----; \ $141C = #01 if Goal Tape triggers secret exit 
                      LSR A                               ;;----|C0EA/----\----;  | 
                      LSR A                               ;;----|C0EB/----\----;  | 
                      STA.W !SecretGoalTape               ;;----|C0EC/----\----; / 
                      LDA.B #$0C                          ;;----|C0EF/----\----;
                      STA.W !SPCIO2                       ;;----|C0F1/----\----; / Change music 
                      LDA.B #$FF                          ;;----|C0F4/----\----;
                      STA.W !MusicBackup                  ;;----|C0F6/----\----;
                      LDA.B #$FF                          ;;----|C0F9/----\----;
                      STA.W !EndLevelTimer                ;;----|C0FB/----\----;
                      STZ.W !InvinsibilityTimer           ;;----|C0FE/----\----; Zero out star timer 
                      INC.W !SpriteMisc1602,X             ;;----|C101/----\----;
                      JSR MarioSprInteractRt              ;;----|C104/----\----;
                      BCC CODE_01C125                     ;;----|C107/----\----;
                      LDA.B #$09                          ;;----|C109/----\----; \ Play sound effect 
                      STA.W !SPCIO3                       ;;----|C10B/----\----; / 
                      INC.W !SpriteMisc160E,X             ;;----|C10E/----\----;
                      LDA.W !SpriteMisc1528,X             ;;----|C111/----\----;
                      SEC                                 ;;----|C114/----\----;
                      SBC.B !SpriteYPosLow,X              ;;----|C115/----\----;
                      STA.W !SpriteMisc1594,X             ;;----|C117/----\----;
                      LDA.B #$80                          ;;----|C11A/----\----;
                      STA.W !SpriteMisc1540,X             ;;----|C11C/----\----;
                      JSL CODE_07F252                     ;;----|C11F/----\----;
                      BRA +                               ;;----|C123/----\----;
                                                          ;;                   ;
CODE_01C125:          STZ.W !SpriteTweakerE,X             ;;----|C125/----\----;
                    + JSL TriggerGoalTape                 ;;----|C128/----\----;
Return01C12C:         RTS                                 ;;----|C12C/----\----; Return 
                                                          ;;                   ;
CODE_01C12D:          LDA.W !SpriteMisc160E,X             ;;----|C12D/----\----;
                      BNE +                               ;;----|C130/----\----;
                      JSR GetDrawInfoBnk1                 ;;----|C132/----\----;
                      LDA.B !_0                           ;;----|C135/----\----;
                      SEC                                 ;;----|C137/----\----;
                      SBC.B #$08                          ;;----|C138/----\----;
                      STA.W !OAMTileXPos+$100,Y           ;;----|C13A/----\----;
                      CLC                                 ;;----|C13D/----\----;
                      ADC.B #$08                          ;;----|C13E/----\----;
                      STA.W !OAMTileXPos+$104,Y           ;;----|C140/----\----;
                      CLC                                 ;;----|C143/----\----;
                      ADC.B #$08                          ;;----|C144/----\----;
                      STA.W !OAMTileXPos+$108,Y           ;;----|C146/----\----;
                      LDA.B !_1                           ;;----|C149/----\----;
                      CLC                                 ;;----|C14B/----\----;
                      ADC.B #$08                          ;;----|C14C/----\----;
                      STA.W !OAMTileYPos+$100,Y           ;;----|C14E/----\----;
                      STA.W !OAMTileYPos+$104,Y           ;;----|C151/----\----;
                      STA.W !OAMTileYPos+$108,Y           ;;----|C154/----\----;
                      LDA.B #$D4                          ;;----|C157/----\----;
                      STA.W !OAMTileNo+$100,Y             ;;----|C159/----\----;
                      INC A                               ;;----|C15C/----\----;
                      STA.W !OAMTileNo+$104,Y             ;;----|C15D/----\----;
                      STA.W !OAMTileNo+$108,Y             ;;----|C160/----\----;
                      LDA.B #$32                          ;;----|C163/----\----;
                      STA.W !OAMTileAttr+$100,Y           ;;----|C165/----\----;
                      STA.W !OAMTileAttr+$104,Y           ;;----|C168/----\----;
                      STA.W !OAMTileAttr+$108,Y           ;;----|C16B/----\----;
                      LDY.B #$00                          ;;----|C16E/----\----;
                      LDA.B #$02                          ;;----|C170/----\----;
                      JMP FinishOAMWriteRt                ;;----|C172/----\----;
                                                          ;;                   ;
                    + LDA.W !SpriteMisc1540,X             ;;----|C175/----\----;
                      BEQ +                               ;;----|C178/----\----;
                      JSL CODE_07F1CA                     ;;----|C17A/----\----;
                      RTS                                 ;;----|C17E/----\----; Return 
                                                          ;;                   ;
                    + STZ.W !SpriteStatus,X               ;;----|C17F/----\----;
                      RTS                                 ;;----|C182/----\----; Return 
                                                          ;;                   ;
GrowingVine:          LDA.B !SpriteProperties             ;;----|C183/----\----;
                      PHA                                 ;;----|C185/----\----;
                      LDA.W !SpriteMisc1540,X             ;;----|C186/----\----;
                      CMP.B #$20                          ;;----|C189/----\----;
                      BCC +                               ;;----|C18B/----\----;
                      LDA.B #$10                          ;;----|C18D/----\----;
                      STA.B !SpriteProperties             ;;----|C18F/----\----;
                    + JSR SubSprGfx2Entry1                ;;----|C191/----\----;
                      LDY.W !SpriteOAMIndex,X             ;;----|C194/----\----; Y = Index into sprite OAM 
                      LDA.B !EffFrame                     ;;----|C197/----\----;
                      LSR A                               ;;----|C199/----\----;
                      LSR A                               ;;----|C19A/----\----;
                      LSR A                               ;;----|C19B/----\----;
                      LSR A                               ;;----|C19C/----\----;
                      LDA.B #$AC                          ;;----|C19D/----\----;
                      BCC +                               ;;----|C19F/----\----;
                      LDA.B #$AE                          ;;----|C1A1/----\----;
                    + STA.W !OAMTileNo+$100,Y             ;;----|C1A3/----\----;
                      PLA                                 ;;----|C1A6/----\----;
                      STA.B !SpriteProperties             ;;----|C1A7/----\----;
                      LDA.B !SpriteLock                   ;;----|C1A9/----\----; \ Branch if sprites locked 
                      BNE Return01C1ED                    ;;----|C1AB/----\----; / 
                      LDA.B #$F0                          ;;----|C1AD/----\----;
                      STA.B !SpriteYSpeed,X               ;;----|C1AF/----\----;
                      JSR SubSprYPosNoGrvty               ;;----|C1B1/----\----;
                      LDA.W !SpriteMisc1540,X             ;;----|C1B4/----\----;
                      CMP.B #$20                          ;;----|C1B7/----\----;
                      BCS CODE_01C1CB                     ;;----|C1B9/----\----;
                      JSR CODE_019140                     ;;----|C1BB/----\----;
                      LDA.W !SpriteBlockedDirs,X          ;;----|C1BE/----\----;
                      BNE CODE_01C1C8                     ;;----|C1C1/----\----;
                      LDA.W !SpriteXPosHigh,X             ;;----|C1C3/----\----;
                      BPL CODE_01C1CB                     ;;----|C1C6/----\----;
CODE_01C1C8:          JMP OffScrEraseSprite               ;;----|C1C8/----\----;
                                                          ;;                   ;
CODE_01C1CB:          LDA.B !SpriteYPosLow,X              ;;----|C1CB/----\----;
                      AND.B #$0F                          ;;----|C1CD/----\----;
                      CMP.B #$00                          ;;----|C1CF/----\----;
                      BNE Return01C1ED                    ;;----|C1D1/----\----;
                      LDA.B !SpriteXPosLow,X              ;;----|C1D3/----\----; \ $9A = Sprite X position 
                      STA.B !TouchBlockXPos               ;;----|C1D5/----\----;  | for block creation 
                      LDA.W !SpriteYPosHigh,X             ;;----|C1D7/----\----;  | 
                      STA.B !TouchBlockXPos+1             ;;----|C1DA/----\----; / 
                      LDA.B !SpriteYPosLow,X              ;;----|C1DC/----\----; \ $98 = Sprite Y position 
                      STA.B !TouchBlockYPos               ;;----|C1DE/----\----;  | for block creation 
                      LDA.W !SpriteXPosHigh,X             ;;----|C1E0/----\----;  | 
                      STA.B !TouchBlockYPos+1             ;;----|C1E3/----\----; / 
                      LDA.B #$03                          ;;----|C1E5/----\----; \ Block to generate = Vine 
                      STA.B !Map16TileGenerate            ;;----|C1E7/----\----; / 
                      JSL GenerateTile                    ;;----|C1E9/----\----; Generate the tile 
Return01C1ED:         RTS                                 ;;----|C1ED/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
DATA_01C1EE:          db $FF,$01                          ;;----|C1EE/----\----;
                                                          ;;                   ;
DATA_01C1F0:          db $F0,$10                          ;;----|C1F0/----\----;
                                                          ;;                   ;
BalloonKeyFlyObjs:    LDA.W !SpriteStatus,X               ;;----|C1F2/----\----;
                      CMP.B #$0C                          ;;----|C1F5/----\----;
                      BEQ CODE_01C255                     ;;----|C1F7/----\----;
                      LDA.B !SpriteLock                   ;;----|C1F9/----\----; \ Branch if sprites locked 
                      BNE CODE_01C255                     ;;----|C1FB/----\----; / 
                      LDA.B !SpriteNumber,X               ;;----|C1FD/----\----;
                      CMP.B #$7D                          ;;----|C1FF/----\----;
                      BNE +                               ;;----|C201/----\----;
                      LDA.W !SpriteMisc1540,X             ;;----|C203/----\----;
                      BEQ +                               ;;----|C206/----\----;
                      LDA.B !SpriteProperties             ;;----|C208/----\----;
                      PHA                                 ;;----|C20A/----\----;
                      LDA.B #$10                          ;;----|C20B/----\----;
                      STA.B !SpriteProperties             ;;----|C20D/----\----;
                      JSR CODE_01C61A                     ;;----|C20F/----\----;
                      PLA                                 ;;----|C212/----\----;
                      STA.B !SpriteProperties             ;;----|C213/----\----;
                      LDA.B #$F8                          ;;----|C215/----\----;
                      STA.B !SpriteYSpeed,X               ;;----|C217/----\----;
                      JSR SubSprYPosNoGrvty               ;;----|C219/----\----;
                      RTS                                 ;;----|C21C/----\----; Return 
                                                          ;;                   ;
                    + LDA.B !TrueFrame                    ;;----|C21D/----\----;
                      AND.B #$01                          ;;----|C21F/----\----;
                      BNE +                               ;;----|C221/----\----;
                      LDA.W !SpriteMisc151C,X             ;;----|C223/----\----;
                      AND.B #$01                          ;;----|C226/----\----;
                      TAY                                 ;;----|C228/----\----;
                      LDA.B !SpriteYSpeed,X               ;;----|C229/----\----;
                      CLC                                 ;;----|C22B/----\----;
                      ADC.W DATA_01C1EE,Y                 ;;----|C22C/----\----;
                      STA.B !SpriteYSpeed,X               ;;----|C22F/----\----;
                      CMP.W DATA_01C1F0,Y                 ;;----|C231/----\----;
                      BNE +                               ;;----|C234/----\----;
                      INC.W !SpriteMisc151C,X             ;;----|C236/----\----;
                    + LDA.B #$0C                          ;;----|C239/----\----;
                      STA.B !SpriteXSpeed,X               ;;----|C23B/----\----;
                      JSR SubSprXPosNoGrvty               ;;----|C23D/----\----;
                      LDA.B !SpriteYSpeed,X               ;;----|C240/----\----;
                      PHA                                 ;;----|C242/----\----;
                      CLC                                 ;;----|C243/----\----;
                      SEC                                 ;;----|C244/----\----;
                      SBC.B #$02                          ;;----|C245/----\----;
                      STA.B !SpriteYSpeed,X               ;;----|C247/----\----;
                      JSR SubSprYPosNoGrvty               ;;----|C249/----\----;
                      PLA                                 ;;----|C24C/----\----;
                      STA.B !SpriteYSpeed,X               ;;----|C24D/----\----;
                      JSR SubOffscreen0Bnk1               ;;----|C24F/----\----;
                      INC.W !SpriteMisc1570,X             ;;----|C252/----\----;
CODE_01C255:          LDA.B !SpriteNumber,X               ;;----|C255/----\----;
                      CMP.B #$7D                          ;;----|C257/----\----;
                      BNE CODE_01C262                     ;;----|C259/----\----;
                      LDA.B #$01                          ;;----|C25B/----\----;
                      STA.W !SpriteMisc157C,X             ;;----|C25D/----\----;
                      BRA CODE_01C27F                     ;;----|C260/----\----;
                                                          ;;                   ;
CODE_01C262:          LDA.B !SpriteTableC2,X              ;;----|C262/----\----;
                      CMP.B #$02                          ;;----|C264/----\----;
                      BNE CODE_01C27C                     ;;----|C266/----\----;
                      LDA.B !TrueFrame                    ;;----|C268/----\----;
                      AND.B #$03                          ;;----|C26A/----\----;
                      BNE +                               ;;----|C26C/----\----;
                      JSR CODE_01B14E                     ;;----|C26E/----\----;
                    + LDA.B !EffFrame                     ;;----|C271/----\----;
                      LSR A                               ;;----|C273/----\----;
                      AND.B #$0E                          ;;----|C274/----\----;
                      EOR.W !SpriteOBJAttribute,X         ;;----|C276/----\----;
                      STA.W !SpriteOBJAttribute,X         ;;----|C279/----\----;
CODE_01C27C:          JSR CODE_019E95                     ;;----|C27C/----\----;
CODE_01C27F:          LDA.B !SpriteTableC2,X              ;;----|C27F/----\----;
                      BEQ +                               ;;----|C281/----\----;
                      JSR GetDrawInfoBnk1                 ;;----|C283/----\----;
                      RTS                                 ;;----|C286/----\----; Return 
                                                          ;;                   ;
                    + JSR CODE_01C61A                     ;;----|C287/----\----;
                      JSR MarioSprInteractRt              ;;----|C28A/----\----;
                      BCC Return01C2D2                    ;;----|C28D/----\----;
                      LDA.B !SpriteNumber,X               ;;----|C28F/----\----;
                      CMP.B #$7E                          ;;----|C291/----\----;
                      BNE CODE_01C2A6                     ;;----|C293/----\----;
                      JSR CODE_01C4F0                     ;;----|C295/----\----;
                      LDA.B #$05                          ;;----|C298/----\----;
                      JSL ADDR_05B329                     ;;----|C29A/----\----;
                      LDA.B #$03                          ;;----|C29E/----\----;
                      JSL GivePoints                      ;;----|C2A0/----\----;
                      BRA ADDR_01C30F                     ;;----|C2A4/----\----;
                                                          ;;                   ;
CODE_01C2A6:          CMP.B #$7F                          ;;----|C2A6/----\----;
                      BNE CODE_01C2AF                     ;;----|C2A8/----\----;
                      JSR GiveMario1Up                    ;;----|C2AA/----\----;
                      BRA ADDR_01C30F                     ;;----|C2AD/----\----;
                                                          ;;                   ;
CODE_01C2AF:          CMP.B #$80                          ;;----|C2AF/----\----;
                      BNE CODE_01C2CE                     ;;----|C2B1/----\----;
                      LDA.B !PlayerYSpeed                 ;;----|C2B3/----\----;
                      BMI Return01C2D2                    ;;----|C2B5/----\----;
                      LDA.B #$09                          ;;----|C2B7/----\----; \ Sprite status = Carryable 
                      STA.W !SpriteStatus,X               ;;----|C2B9/----\----; / 
                      LDA.B #$D0                          ;;----|C2BC/----\----;
                      STA.B !PlayerYSpeed                 ;;----|C2BE/----\----;
                      STZ.B !SpriteYSpeed,X               ;;----|C2C0/----\----; Sprite Y Speed = 0 
                      STZ.W !SpriteMisc1540,X             ;;----|C2C2/----\----;
                      LDA.W !SpriteTweakerD,X             ;;----|C2C5/----\----; \ Use default interation with Mario 
                      AND.B #$7F                          ;;----|C2C8/----\----;  | 
                      STA.W !SpriteTweakerD,X             ;;----|C2CA/----\----; / 
                      RTS                                 ;;----|C2CD/----\----; Return 
                                                          ;;                   ;
CODE_01C2CE:          CMP.B #$7D                          ;;----|C2CE/----\----;
                      BEQ +                               ;;----|C2D0/----\----;
Return01C2D2:         RTS                                 ;;----|C2D2/----\----; Return 
                                                          ;;                   ;
                    + LDY.B #$0B                          ;;----|C2D3/----\----;
CODE_01C2D5:          LDA.W !SpriteStatus,Y               ;;----|C2D5/----\----;
                      CMP.B #$0B                          ;;----|C2D8/----\----;
                      BNE +                               ;;----|C2DA/----\----;
                      LDA.W !SpriteNumber,Y               ;;----|C2DC/----\----;
                      CMP.B #$7D                          ;;----|C2DF/----\----;
                      BEQ +                               ;;----|C2E1/----\----;
                      LDA.B #$09                          ;;----|C2E3/----\----; \ Sprite status = Carryable 
                      STA.W !SpriteStatus,Y               ;;----|C2E5/----\----; / 
                    + DEY                                 ;;----|C2E8/----\----;
                      BPL CODE_01C2D5                     ;;----|C2E9/----\----;
                      LDA.B #$00                          ;;----|C2EB/----\----;
                      LDY.W !PBalloonInflating            ;;----|C2ED/----\----;
                      BNE +                               ;;----|C2F0/----\----;
                      LDA.B #$0B                          ;;----|C2F2/----\----; \ Sprite status = Being carried 
                    + STA.W !SpriteStatus,X               ;;----|C2F4/----\----; / 
                      LDA.B !PlayerYSpeed                 ;;----|C2F7/----\----;
                      STA.B !SpriteYSpeed,X               ;;----|C2F9/----\----;
                      LDA.B !PlayerXSpeed                 ;;----|C2FB/----\----;
                      STA.B !SpriteXSpeed,X               ;;----|C2FD/----\----;
                      LDA.B #$09                          ;;----|C2FF/----\----;
                      STA.W !PBalloonInflating            ;;----|C301/----\----;
                      LDA.B #$FF                          ;;----|C304/----\----;
                      STA.W !PBalloonTimer                ;;----|C306/----\----;
                      LDA.B #$1E                          ;;----|C309/----\----; \ Play sound effect 
                      STA.W !SPCIO0                       ;;----|C30B/----\----; / 
                      RTS                                 ;;----|C30E/----\----; Return 
                                                          ;;                   ;
ADDR_01C30F:          STZ.W !SpriteStatus,X               ;;----|C30F/----\----;
                      RTS                                 ;;----|C312/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
ChangingItemSprite:   db $74,$75,$77,$76                  ;;----|C313/----\----;
                                                          ;;                   ;
ChangingItem:         LDA.B #$01                          ;;----|C317/----\----;
                      STA.W !SpriteMisc151C,X             ;;----|C319/----\----;
                      LDA.W !SpriteOnYoshiTongue,X        ;;----|C31C/----\----;
                      BNE +                               ;;----|C31F/----\----;
                   if !_VER > 1                 ;\   IF   ;;+++++++++++++++++++; E0 & E1
                      INC.W !SpriteMisc187B,X             ;;         /----\----;
                   endif                        ;/ ENDIF  ;;+++++++++++++++++++;
                      INC.W !SpriteMisc187B,X             ;;----|C321/----\----;
                    + LDA.W !SpriteMisc187B,X             ;;----|C324/----\----; \ Determine which power-up to act like 
                      LSR A                               ;;----|C327/----\----;  | 
                      LSR A                               ;;----|C328/----\----;  | 
                      LSR A                               ;;----|C329/----\----;  | 
                      LSR A                               ;;----|C32A/----\----;  | 
                      LSR A                               ;;----|C32B/----\----;  | 
                      LSR A                               ;;----|C32C/----\----;  | 
                      AND.B #$03                          ;;----|C32D/----\----;  | 
                      TAY                                 ;;----|C32F/----\----;  | 
                      LDA.W ChangingItemSprite,Y          ;;----|C330/----\----;  / 
                      STA.B !SpriteNumber,X               ;;----|C333/----\----; \ Change into the appropriate power up 
                      JSL LoadSpriteTables                ;;----|C335/----\----; / 
                      JSR PowerUpRt                       ;;----|C339/----\----; Run the power up code 
                      LDA.B #$81                          ;;----|C33C/----\----; \ Change it back to the turning item 
                      STA.B !SpriteNumber,X               ;;----|C33E/----\----;  | 
                      JSL LoadSpriteTables                ;;----|C340/----\----; / 
                      RTS                                 ;;----|C344/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
EatenBerryGfxProp:    db $02,$02,$04,$06                  ;;----|C345/----\----;
                                                          ;;                   ;
FireFlower:           LDA.B !EffFrame                     ;;----|C349/----\----; \ Flip flower every 8 frames 
                      AND.B #$08                          ;;----|C34B/----\----;  | 
                      LSR A                               ;;----|C34D/----\----;  | 
                      LSR A                               ;;----|C34E/----\----;  | 
                      LSR A                               ;;----|C34F/----\----;  | ($157C,x = 0 or 1) 
                      STA.W !SpriteMisc157C,X             ;;----|C350/----\----; / 
PowerUpRt:            LDA.W !SpriteMisc160E,X             ;;----|C353/----\----;
                      BEQ +                               ;;----|C356/----\----;
                      JSR SubSprGfx2Entry1                ;;----|C358/----\----;
                      LDY.W !SpriteOAMIndex,X             ;;----|C35B/----\----; Y = Index into sprite OAM 
                      LDA.B #$80                          ;;----|C35E/----\----; \ Set berry tile to OAM 
                      STA.W !OAMTileNo+$100,Y             ;;----|C360/----\----; / 
                      PHX                                 ;;----|C363/----\----; \ Set gfx properties of berry 
                      LDX.W !EatenBerryType               ;;----|C364/----\----;  | X = type of berry being eaten 
                      %LorW_X(LDA,EatenBerryGfxProp)      ;;----|C367/----\----;  | 
                      ORA.B !SpriteProperties             ;;----|C36A/----\----;  | 
                      STA.W !OAMTileAttr+$100,Y           ;;----|C36C/----\----; / 
                      PLX                                 ;;----|C36F/----\----; X = sprite index 
                      RTS                                 ;;----|C370/----\----; Return 
                                                          ;;                   ;
                    + LDA.B !SpriteProperties             ;;----|C371/----\----;
                      PHA                                 ;;----|C373/----\----;
                      JSR CODE_01C4AC                     ;;----|C374/----\----;
                      LDA.W !SpriteMisc1534,X             ;;----|C377/----\----;
                      BEQ CODE_01C38F                     ;;----|C37A/----\----;
                      LDA.B !SpriteLock                   ;;----|C37C/----\----; \ Branch if sprites locked 
                      BNE +                               ;;----|C37E/----\----; / 
                      LDA.B #$10                          ;;----|C380/----\----;
                      STA.B !SpriteYSpeed,X               ;;----|C382/----\----;
                      JSR SubSprYPosNoGrvty               ;;----|C384/----\----;
                    + LDA.B !EffFrame                     ;;----|C387/----\----;
                      AND.B #$0C                          ;;----|C389/----\----;
                      BNE CODE_01C3AB                     ;;----|C38B/----\----;
                      PLA                                 ;;----|C38D/----\----;
                      RTS                                 ;;----|C38E/----\----; Return 
                                                          ;;                   ;
CODE_01C38F:          LDA.W !SpriteMisc1540,X             ;;----|C38F/----\----;
                      BEQ CODE_01C3AE                     ;;----|C392/----\----;
                      JSR CODE_019140                     ;;----|C394/----\----;
                      LDA.W !SpriteMisc1528,X             ;;----|C397/----\----;
                      BNE +                               ;;----|C39A/----\----;
                      LDA.B #$10                          ;;----|C39C/----\----;
                      STA.B !SpriteProperties             ;;----|C39E/----\----;
                    + LDA.B !SpriteLock                   ;;----|C3A0/----\----; \ Branch if sprites locked 
                      BNE CODE_01C3AB                     ;;----|C3A2/----\----; / 
                      LDA.B #$FC                          ;;----|C3A4/----\----;
                      STA.B !SpriteYSpeed,X               ;;----|C3A6/----\----;
                      JSR SubSprYPosNoGrvty               ;;----|C3A8/----\----;
CODE_01C3AB:          JMP CODE_01C48D                     ;;----|C3AB/----\----;
                                                          ;;                   ;
CODE_01C3AE:          LDA.B !SpriteLock                   ;;----|C3AE/----\----; \ Branch if sprites locked 
                      BNE CODE_01C3AB                     ;;----|C3B0/----\----; / 
                      LDA.W !SpriteStatus,X               ;;----|C3B2/----\----;
                      CMP.B #$0C                          ;;----|C3B5/----\----;
                      BEQ CODE_01C3AB                     ;;----|C3B7/----\----;
                      LDA.B !SpriteNumber,X               ;;----|C3B9/----\----;
                      CMP.B #$76                          ;;----|C3BB/----\----; \ Useless code, branch nowhere if not a star 
                      BNE +                               ;;----|C3BD/----\----; / 
                    + INC.W !SpriteMisc1570,X             ;;----|C3BF/----\----;
                      JSR CODE_018DBB                     ;;----|C3C2/----\----;
                      LDA.B !SpriteNumber,X               ;;----|C3C5/----\----;
                      CMP.B #$75                          ;;----|C3C7/----\----; flower 
                      BNE +                               ;;----|C3C9/----\----;
                      LDA.W !SpriteMisc151C,X             ;;----|C3CB/----\----;
                      BNE +                               ;;----|C3CE/----\----;
                      STZ.B !SpriteXSpeed,X               ;;----|C3D0/----\----; Sprite X Speed = 0 
                    + CMP.B #$76                          ;;----|C3D2/----\----; star 
                      BEQ +                               ;;----|C3D4/----\----;
                      CMP.B #$21                          ;;----|C3D6/----\----; sprite coin 
                      BEQ +                               ;;----|C3D8/----\----;
                      LDA.W !SpriteMisc151C,X             ;;----|C3DA/----\----;
                      BNE +                               ;;----|C3DD/----\----;
                      ASL.B !SpriteXSpeed,X               ;;----|C3DF/----\----;
                    + LDA.B !SpriteTableC2,X              ;;----|C3E1/----\----;
                      BEQ CODE_01C3F3                     ;;----|C3E3/----\----;
                      BMI +                               ;;----|C3E5/----\----;
                      JSR CODE_019140                     ;;----|C3E7/----\----;
                      LDA.W !SpriteBlockedDirs,X          ;;----|C3EA/----\----;
                      BNE +                               ;;----|C3ED/----\----;
                      STZ.B !SpriteTableC2,X              ;;----|C3EF/----\----;
                    + BRA CODE_01C437                     ;;----|C3F1/----\----;
                                                          ;;                   ;
CODE_01C3F3:          LDA.W !IRQNMICommand                ;;----|C3F3/----\----;
                      CMP.B #$C1                          ;;----|C3F6/----\----;
                      BEQ CODE_01C42C                     ;;----|C3F8/----\----;
                      BIT.W !IRQNMICommand                ;;----|C3FA/----\----;
                      BVC CODE_01C42C                     ;;----|C3FD/----\----;
                      STZ.W !SpriteBlockedDirs,X          ;;----|C3FF/----\----;
                      STZ.B !SpriteXSpeed,X               ;;----|C402/----\----; Sprite X Speed = 0 
                      LDA.W !SpriteXPosHigh,X             ;;----|C404/----\----;
                      BNE +                               ;;----|C407/----\----;
                      LDA.B !SpriteYPosLow,X              ;;----|C409/----\----;
                      CMP.B #$A0                          ;;----|C40B/----\----;
                      BCC +                               ;;----|C40D/----\----;
                      AND.B #$F0                          ;;----|C40F/----\----;
                      STA.B !SpriteYPosLow,X              ;;----|C411/----\----;
                      LDA.W !SpriteBlockedDirs,X          ;;----|C413/----\----;
                      ORA.B #$04                          ;;----|C416/----\----;
                      STA.W !SpriteBlockedDirs,X          ;;----|C418/----\----;
                      JSR CODE_018DBB                     ;;----|C41B/----\----;
                    + JSR SubSprXPosNoGrvty               ;;----|C41E/----\----;
                      JSR SubSprYPosNoGrvty               ;;----|C421/----\----;
                      INC.B !SpriteYSpeed,X               ;;----|C424/----\----;
                      INC.B !SpriteYSpeed,X               ;;----|C426/----\----;
                      INC.B !SpriteYSpeed,X               ;;----|C428/----\----;
                      BRA +                               ;;----|C42A/----\----;
                                                          ;;                   ;
CODE_01C42C:          JSR SubUpdateSprPos                 ;;----|C42C/----\----;
                    + LDA.B !TrueFrame                    ;;----|C42F/----\----;
                      AND.B #$03                          ;;----|C431/----\----;
                      BEQ CODE_01C437                     ;;----|C433/----\----;
                      DEC.B !SpriteYSpeed,X               ;;----|C435/----\----;
CODE_01C437:          JSR SubOffscreen0Bnk1               ;;----|C437/----\----;
                      JSR IsTouchingCeiling               ;;----|C43A/----\----;
                      BEQ +                               ;;----|C43D/----\----;
                      LDA.B #$00                          ;;----|C43F/----\----;
                      STA.B !SpriteYSpeed,X               ;;----|C441/----\----;
                    + JSR IsOnGround                      ;;----|C443/----\----;
                      BNE CODE_01C44A                     ;;----|C446/----\----;
                      BRA CODE_01C47E                     ;;----|C448/----\----;
                                                          ;;                   ;
CODE_01C44A:          LDA.B !SpriteNumber,X               ;;----|C44A/----\----;
                      CMP.B #$21                          ;;----|C44C/----\----; sprite coin 
                      BNE CODE_01C46C                     ;;----|C44E/----\----;
                      JSR CODE_018DBB                     ;;----|C450/----\----;
                      LDA.B !SpriteYSpeed,X               ;;----|C453/----\----;
                      INC A                               ;;----|C455/----\----;
                      PHA                                 ;;----|C456/----\----;
                      JSR SetSomeYSpeed__                 ;;----|C457/----\----;
                      PLA                                 ;;----|C45A/----\----;
                      LSR A                               ;;----|C45B/----\----;
                      JSR CODE_01CCEC                     ;;----|C45C/----\----;
                      CMP.B #$FC                          ;;----|C45F/----\----;
                      BCS +                               ;;----|C461/----\----;
                      LDY.W !SpriteBlockedDirs,X          ;;----|C463/----\----;
                      BMI +                               ;;----|C466/----\----;
                      STA.B !SpriteYSpeed,X               ;;----|C468/----\----;
                    + BRA CODE_01C47E                     ;;----|C46A/----\----;
                                                          ;;                   ;
CODE_01C46C:          JSR SetSomeYSpeed__                 ;;----|C46C/----\----;
                      LDA.W !SpriteMisc151C,X             ;;----|C46F/----\----;
                      BNE CODE_01C47A                     ;;----|C472/----\----;
                      LDA.B !SpriteNumber,X               ;;----|C474/----\----;
                      CMP.B #$76                          ;;----|C476/----\----; star 
                      BNE CODE_01C47E                     ;;----|C478/----\----;
CODE_01C47A:          LDA.B #$C8                          ;;----|C47A/----\----;
                      STA.B !SpriteYSpeed,X               ;;----|C47C/----\----;
CODE_01C47E:          LDA.W !SpriteMisc1558,X             ;;----|C47E/----\----;
                      ORA.B !SpriteTableC2,X              ;;----|C481/----\----;
                      BNE CODE_01C48D                     ;;----|C483/----\----;
                      JSR IsTouchingObjSide               ;;----|C485/----\----;
                      BEQ CODE_01C48D                     ;;----|C488/----\----;
                      JSR FlipSpriteDir                   ;;----|C48A/----\----;
CODE_01C48D:          LDA.W !SpriteMisc1540,X             ;;----|C48D/----\----;
                      CMP.B #$36                          ;;----|C490/----\----;
                      BCS CODE_01C4A8                     ;;----|C492/----\----;
                      LDA.B !SpriteTableC2,X              ;;----|C494/----\----;
                      BEQ CODE_01C49C                     ;;----|C496/----\----;
                      CMP.B #$FF                          ;;----|C498/----\----;
                      BNE CODE_01C4A1                     ;;----|C49A/----\----;
CODE_01C49C:          LDA.W !SpriteBehindScene,X          ;;----|C49C/----\----;
                      BEQ +                               ;;----|C49F/----\----;
CODE_01C4A1:          LDA.B #$10                          ;;----|C4A1/----\----;
                      STA.B !SpriteProperties             ;;----|C4A3/----\----;
                    + JSR CODE_01C61A                     ;;----|C4A5/----\----;
CODE_01C4A8:          PLA                                 ;;----|C4A8/----\----;
                      STA.B !SpriteProperties             ;;----|C4A9/----\----;
                    - RTS                                 ;;----|C4AB/----\----; Return 
                                                          ;;                   ;
CODE_01C4AC:          JSR CODE_01A80F                     ;;----|C4AC/----\----;
                      BCC -                               ;;----|C4AF/----\----;
                      LDA.W !SpriteMisc151C,X             ;;----|C4B1/----\----;
                      BEQ CODE_01C4BA                     ;;----|C4B4/----\----;
                      LDA.B !SpriteTableC2,X              ;;----|C4B6/----\----;
                      BNE Return01C4FA                    ;;----|C4B8/----\----;
CODE_01C4BA:          LDA.W !SpriteMisc154C,X             ;;----|C4BA/----\----;
                      BNE Return01C4FA                    ;;----|C4BD/----\----;
CODE_01C4BF:          LDA.W !SpriteMisc1540,X             ;;----|C4BF/----\----;
                      CMP.B #$18                          ;;----|C4C2/----\----;
                      BCS Return01C4FA                    ;;----|C4C4/----\----;
                      STZ.W !SpriteStatus,X               ;;----|C4C6/----\----;
                      LDA.B !SpriteNumber,X               ;;----|C4C9/----\----;
                      CMP.B #$21                          ;;----|C4CB/----\----;
                      BNE TouchedPowerUp                  ;;----|C4CD/----\----;
                      JSL CODE_05B34A                     ;;----|C4CF/----\----;
                      LDA.W !SpriteOBJAttribute,X         ;;----|C4D3/----\----;
                      AND.B #$0E                          ;;----|C4D6/----\----;
                      CMP.B #$02                          ;;----|C4D8/----\----;
                      BEQ CODE_01C4E0                     ;;----|C4DA/----\----;
                      LDA.B #$01                          ;;----|C4DC/----\----;
                      BRA +                               ;;----|C4DE/----\----;
                                                          ;;                   ;
CODE_01C4E0:          LDA.W !SilverCoinsCollected         ;;----|C4E0/----\----;
                      INC.W !SilverCoinsCollected         ;;----|C4E3/----\----;
                      CMP.B #$0A                          ;;----|C4E6/----\----;
                      BCC +                               ;;----|C4E8/----\----;
                      LDA.B #$0A                          ;;----|C4EA/----\----;
                    + JSL GivePoints                      ;;----|C4EC/----\----;
CODE_01C4F0:          LDY.B #$03                          ;;----|C4F0/----\----;
CODE_01C4F2:          LDA.W !SmokeSpriteNumber,Y          ;;----|C4F2/----\----;
                      BEQ CODE_01C4FB                     ;;----|C4F5/----\----;
                      DEY                                 ;;----|C4F7/----\----;
                      BPL CODE_01C4F2                     ;;----|C4F8/----\----;
Return01C4FA:         RTS                                 ;;----|C4FA/----\----; Return 
                                                          ;;                   ;
CODE_01C4FB:          LDA.B #$05                          ;;----|C4FB/----\----;
                      STA.W !SmokeSpriteNumber,Y          ;;----|C4FD/----\----;
                      LDA.B !SpriteXPosLow,X              ;;----|C500/----\----;
                      STA.W !SmokeSpriteXPos,Y            ;;----|C502/----\----;
                      LDA.B !SpriteYPosLow,X              ;;----|C505/----\----;
                      STA.W !SmokeSpriteYPos,Y            ;;----|C507/----\----;
                      LDA.B #$10                          ;;----|C50A/----\----;
                      STA.W !SmokeSpriteTimer,Y           ;;----|C50C/----\----;
                      RTS                                 ;;----|C50F/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
ItemBoxSprite:        db $00,$01,$01,$01,$00,$01,$04,$02  ;;----|C510/----\----;
                      db $00,$00,$00,$00,$00,$01,$04,$02  ;;----|C518/----\----;
                      db $00,$00,$00,$00                  ;;----|C520/----\----;
                                                          ;;                   ;
GivePowerPtrIndex:    db $00,$01,$01,$01,$04,$04,$04,$01  ;;----|C524/----\----;
                      db $02,$02,$02,$02,$03,$03,$01,$03  ;;----|C52C/----\----;
                      db $05,$05,$05,$05                  ;;----|C534/----\----;
                                                          ;;                   ;
TouchedPowerUp:       SEC                                 ;;----|C538/----\----; \ Index created from... 
                      SBC.B #$74                          ;;----|C539/----\----;  | ... powerup touched (upper 2 bits)  
                      ASL A                               ;;----|C53B/----\----;  | 
                      ASL A                               ;;----|C53C/----\----;  | 
                      ORA.B !Powerup                      ;;----|C53D/----\----;  | ... Mario's status (lower 3 bits) 
                      TAY                                 ;;----|C53F/----\----; / 
                      LDA.W ItemBoxSprite,Y               ;;----|C540/----\----; \ Put appropriate item in item box 
                      BEQ +                               ;;----|C543/----\----;  | 
                      STA.W !PlayerItembox                ;;----|C545/----\----; / 
                      LDA.B #$0B                          ;;----|C548/----\----; \  
                      STA.W !SPCIO3                       ;;----|C54A/----\----; / Play sound effect 
                    + LDA.W GivePowerPtrIndex,Y           ;;----|C54D/----\----; \ Call routine to change Mario's status 
                      JSL ExecutePtr                      ;;----|C550/----\----; / 
                                                          ;;                   ;
                      dw GiveMarioMushroom                ;;----|C554/----\----; 0 - Big 
                      dw CODE_01C56F                      ;;----|C556/----\----; 1 - No change 
                      dw GiveMarioStar                    ;;----|C558/----\----; 2 - Star 
                      dw GiveMarioCape                    ;;----|C55A/----\----; 3 - Cape 
                      dw GiveMarioFire                    ;;----|C55C/----\----; 4 - Fire 
                      dw GiveMario1Up                     ;;----|C55E/----\----; 5 - 1Up 13
                                                          ;;                   ;
                      RTS                                 ;;----|C560/----\----;
                                                          ;;                   ;
GiveMarioMushroom:    LDA.B #$02                          ;;----|C561/----\----; \ Set growing action 
                      STA.B !PlayerAnimation              ;;----|C563/----\----; / 
                      LDA.B #$2F                          ;;----|C565/----\----; \  
                   if !_VER == 0                ;\   IF   ;;+++++++++++++++++++; J
                      STA.W !PlayerAniTimer               ;;----|              ;  | Set animation timer 
                   else                         ;<  ELSE  ;;-------------------; U, E0, & E1
                      STA.W !PlayerAniTimer,Y             ;;    |C567/----\----;  | Set animation timer 
                   endif                        ;/ ENDIF  ;;+++++++++++++++++++;
                      STA.B !SpriteLock                   ;;----|C56A/----\----; / Set lock sprites timer 
                      JMP CODE_01C56F                     ;;----|C56C/----\----; JMP to next instruction? 
                                                          ;;                   ;
CODE_01C56F:          LDA.B #$04                          ;;----|C56F/----\----;
                      LDY.W !SpriteMisc1534,X             ;;----|C571/----\----;
                      BNE +                               ;;----|C574/----\----;
                      JSL GivePoints                      ;;----|C576/----\----;
                    + LDA.B #$0A                          ;;----|C57A/----\----; \ 
                      STA.W !SPCIO0                       ;;----|C57C/----\----; / 
                      RTS                                 ;;----|C57F/----\----; Return 
                                                          ;;                   ;
CODE_01C580:          LDA.B #$FF                          ;;----|C580/----\----; \ Set star timer 
                      STA.W !InvinsibilityTimer           ;;----|C582/----\----; / 
                      LDA.B #$0D                          ;;----|C585/----\----;
                      STA.W !SPCIO2                       ;;----|C587/----\----; / Change music 
                      ASL.W !MusicBackup                  ;;----|C58A/----\----;
                      SEC                                 ;;----|C58D/----\----;
                      ROR.W !MusicBackup                  ;;----|C58E/----\----;
                      RTL                                 ;;----|C591/----\----; Return 
                                                          ;;                   ;
GiveMarioStar:        JSL CODE_01C580                     ;;----|C592/----\----;
                      BRA CODE_01C56F                     ;;----|C596/----\----;
                                                          ;;                   ;
GiveMarioCape:        LDA.B #$02                          ;;----|C598/----\----;
                      STA.B !Powerup                      ;;----|C59A/----\----;
                      LDA.B #$0D                          ;;----|C59C/----\----; \ Play sound effect 
                      STA.W !SPCIO0                       ;;----|C59E/----\----; / 
                      LDA.B #$04                          ;;----|C5A1/----\----;
                      JSL GivePoints                      ;;----|C5A3/----\----;
                      JSL CODE_01C5AE                     ;;----|C5A7/----\----;
                      INC.B !SpriteLock                   ;;----|C5AB/----\----;
                      RTS                                 ;;----|C5AD/----\----; Return 
                                                          ;;                   ;
CODE_01C5AE:          LDA.B !PlayerYPosScrRel+1           ;;----|C5AE/----\----;
                      ORA.B !PlayerXPosScrRel+1           ;;----|C5B0/----\----;
                      BNE Return01C5EB                    ;;----|C5B2/----\----;
                      LDA.B #$03                          ;;----|C5B4/----\----;
                      STA.B !PlayerAnimation              ;;----|C5B6/----\----;
                      LDA.B #$18                          ;;----|C5B8/----\----;
                      STA.W !PlayerAniTimer               ;;----|C5BA/----\----;
                      LDY.B #$03                          ;;----|C5BD/----\----;
CODE_01C5BF:          LDA.W !SmokeSpriteNumber,Y          ;;----|C5BF/----\----;
                      BEQ CODE_01C5D4                     ;;----|C5C2/----\----;
                      DEY                                 ;;----|C5C4/----\----;
                      BPL CODE_01C5BF                     ;;----|C5C5/----\----;
                      DEC.W !SmokeSpriteSlotIdx           ;;----|C5C7/----\----;
                      BPL +                               ;;----|C5CA/----\----;
                      LDA.B #$03                          ;;----|C5CC/----\----;
                      STA.W !SmokeSpriteSlotIdx           ;;----|C5CE/----\----;
                    + LDY.W !SmokeSpriteSlotIdx           ;;----|C5D1/----\----;
CODE_01C5D4:          LDA.B #$81                          ;;----|C5D4/----\----;
                      STA.W !SmokeSpriteNumber,Y          ;;----|C5D6/----\----;
                      LDA.B #$1B                          ;;----|C5D9/----\----;
                      STA.W !SmokeSpriteTimer,Y           ;;----|C5DB/----\----;
                      LDA.B !PlayerYPosNext               ;;----|C5DE/----\----;
                      CLC                                 ;;----|C5E0/----\----;
                      ADC.B #$08                          ;;----|C5E1/----\----;
                      STA.W !SmokeSpriteYPos,Y            ;;----|C5E3/----\----;
                      LDA.B !PlayerXPosNext               ;;----|C5E6/----\----;
                      STA.W !SmokeSpriteXPos,Y            ;;----|C5E8/----\----;
Return01C5EB:         RTL                                 ;;----|C5EB/----\----; Return 
                                                          ;;                   ;
GiveMarioFire:        LDA.B #$20                          ;;----|C5EC/----\----;
                      STA.W !CyclePaletteTimer            ;;----|C5EE/----\----;
                      STA.B !SpriteLock                   ;;----|C5F1/----\----;
                      LDA.B #$04                          ;;----|C5F3/----\----;
                      STA.B !PlayerAnimation              ;;----|C5F5/----\----;
                      LDA.B #$03                          ;;----|C5F7/----\----;
                      STA.B !Powerup                      ;;----|C5F9/----\----;
                      JMP CODE_01C56F                     ;;----|C5FB/----\----;
                                                          ;;                   ;
GiveMario1Up:         LDA.B #$08                          ;;----|C5FE/----\----;
                      CLC                                 ;;----|C600/----\----;
                      ADC.W !SpriteMisc1594,X             ;;----|C601/----\----;
                      JSL GivePoints                      ;;----|C604/----\----;
                      RTS                                 ;;----|C608/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
PowerUpTiles:         db $24,$26,$48,$0E,$24,$00,$00,$00  ;;----|C609/----\----;
                      db $00,$E4,$E8,$24,$EC              ;;----|C611/----\----;
                                                          ;;                   ;
StarPalValues:        db $00,$04,$08,$04                  ;;----|C616/----\----;
                                                          ;;                   ;
CODE_01C61A:          JSR GetDrawInfoBnk1                 ;;----|C61A/----\----;
                      STZ.B !_A                           ;;----|C61D/----\----;
                      LDA.W !ReznorOAMIndex               ;;----|C61F/----\----;
                      BNE +                               ;;----|C622/----\----;
                      LDA.W !IRQNMICommand                ;;----|C624/----\----;
                      CMP.B #$C1                          ;;----|C627/----\----;
                      BEQ +                               ;;----|C629/----\----;
                      BIT.W !IRQNMICommand                ;;----|C62B/----\----;
                      BVC +                               ;;----|C62E/----\----;
                      LDA.B #$D8                          ;;----|C630/----\----;
                      STA.W !SpriteOAMIndex,X             ;;----|C632/----\----;
                      TAY                                 ;;----|C635/----\----;
                    + LDA.B !SpriteNumber,X               ;;----|C636/----\----;
                      CMP.B #$21                          ;;----|C638/----\----; sprite coin 
                      BNE PowerUpGfxRt                    ;;----|C63A/----\----;
                      JSL CoinSprGfx                      ;;----|C63C/----\----;
                      RTS                                 ;;----|C640/----\----; Return 
                                                          ;;                   ;
CoinSprGfx:           JSR CoinSprGfxSub                   ;;----|C641/----\----;
                      RTL                                 ;;----|C644/----\----; Return 
                                                          ;;                   ;
CoinSprGfxSub:        JSR GetDrawInfoBnk1                 ;;----|C645/----\----;
                      LDA.B !_0                           ;;----|C648/----\----;
                      STA.W !OAMTileXPos+$100,Y           ;;----|C64A/----\----;
                      LDA.B !_1                           ;;----|C64D/----\----;
                      STA.W !OAMTileYPos+$100,Y           ;;----|C64F/----\----;
                      LDA.B #$E8                          ;;----|C652/----\----;
                      STA.W !OAMTileNo+$100,Y             ;;----|C654/----\----;
                      LDA.W !SpriteOBJAttribute,X         ;;----|C657/----\----;
                      ORA.B !SpriteProperties             ;;----|C65A/----\----;
                      STA.W !OAMTileAttr+$100,Y           ;;----|C65C/----\----;
                      TXA                                 ;;----|C65F/----\----;
                      CLC                                 ;;----|C660/----\----;
                      ADC.B !EffFrame                     ;;----|C661/----\----;
                      LSR A                               ;;----|C663/----\----;
                      LSR A                               ;;----|C664/----\----;
                      AND.B #$03                          ;;----|C665/----\----;
                      BNE CODE_01C670                     ;;----|C667/----\----;
                      LDY.B #$02                          ;;----|C669/----\----;
                      BRA +                               ;;----|C66B/----\----;
                                                          ;;                   ;
                                                          ;;                   ;
MovingCoinTiles:      db $EA,$FA,$EA                      ;;----|C66D/----\----;
                                                          ;;                   ;
CODE_01C670:          PHX                                 ;;----|C670/----\----;
                      TAX                                 ;;----|C671/----\----;
                      LDA.B !_0                           ;;----|C672/----\----;
                      CLC                                 ;;----|C674/----\----;
                      ADC.B #$04                          ;;----|C675/----\----;
                      STA.W !OAMTileXPos+$100,Y           ;;----|C677/----\----;
                      STA.W !OAMTileXPos+$104,Y           ;;----|C67A/----\----;
                      LDA.B !_1                           ;;----|C67D/----\----;
                      CLC                                 ;;----|C67F/----\----;
                      ADC.B #$08                          ;;----|C680/----\----;
                      STA.W !OAMTileYPos+$104,Y           ;;----|C682/----\----;
                      LDA.L MovingCoinTiles-1,X           ;;----|C685/----\----;
                      STA.W !OAMTileNo+$100,Y             ;;----|C689/----\----;
                      STA.W !OAMTileNo+$104,Y             ;;----|C68C/----\----;
                      LDA.W !OAMTileAttr+$100,Y           ;;----|C68F/----\----;
                      ORA.B #$80                          ;;----|C692/----\----;
                      STA.W !OAMTileAttr+$104,Y           ;;----|C694/----\----;
                      PLX                                 ;;----|C697/----\----;
                      LDY.B #$00                          ;;----|C698/----\----;
                    + LDA.B #$01                          ;;----|C69A/----\----;
                      JSL FinishOAMWrite                  ;;----|C69C/----\----;
                      RTS                                 ;;----|C6A0/----\----; Return 
                                                          ;;                   ;
PowerUpGfxRt:         CMP.B #$76                          ;;----|C6A1/----\----; \ Setup flashing palette for star 
                      BNE +                               ;;----|C6A3/----\----;  | 
                      LDA.B !TrueFrame                    ;;----|C6A5/----\----;  |  
                      LSR A                               ;;----|C6A7/----\----;  | 
                      AND.B #$03                          ;;----|C6A8/----\----;  | 
                      PHY                                 ;;----|C6AA/----\----;  | 
                      TAY                                 ;;----|C6AB/----\----;  | 
                      LDA.W StarPalValues,Y               ;;----|C6AC/----\----;  | 
                      PLY                                 ;;----|C6AF/----\----;  | 
                      STA.B !_A                           ;;----|C6B0/----\----; / $0A contains palette info, will be applied later 
                    + LDA.B !_0                           ;;----|C6B2/----\----; \ Set tile x position 
                      STA.W !OAMTileXPos+$100,Y           ;;----|C6B4/----\----; / 
                      LDA.B !_1                           ;;----|C6B7/----\----; \ Set tile y position 
                      DEC A                               ;;----|C6B9/----\----;  | 
                      STA.W !OAMTileYPos+$100,Y           ;;----|C6BA/----\----; / 
                      LDA.W !SpriteMisc157C,X             ;;----|C6BD/----\----; \ Flip flower/cape if 157C,x is set 
                      LSR A                               ;;----|C6C0/----\----;  | 
                      LDA.B #$00                          ;;----|C6C1/----\----;  | 
                      BCS +                               ;;----|C6C3/----\----;  | 
                      ORA.B #$40                          ;;----|C6C5/----\----; / 
                    + ORA.B !SpriteProperties             ;;----|C6C7/----\----; \ Add in level priority information 
                      ORA.W !SpriteOBJAttribute,X         ;;----|C6C9/----\----;  | Add in palette/gfx page 
                      EOR.B !_A                           ;;----|C6CC/----\----;  | Adjust palette for star 
                      STA.W !OAMTileAttr+$100,Y           ;;----|C6CE/----\----; / Set property byte 
                      LDA.B !SpriteNumber,X               ;;----|C6D1/----\----; \ Set powerup tile 
                      SEC                                 ;;----|C6D3/----\----;  | 
                      SBC.B #$74                          ;;----|C6D4/----\----;  | 
                      TAX                                 ;;----|C6D6/----\----;  | X = Sprite number - #$74 
                      LDA.W PowerUpTiles,X                ;;----|C6D7/----\----;  | 
                      STA.W !OAMTileNo+$100,Y             ;;----|C6DA/----\----; / 
                      LDX.W !CurSpriteProcess             ;;----|C6DD/----\----; X = sprite index 
                      LDA.B #$00                          ;;----|C6E0/----\----;
                      JSR CODE_01B37E                     ;;----|C6E2/----\----;
                      RTS                                 ;;----|C6E5/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
DATA_01C6E6:          db $02,$FE                          ;;----|C6E6/----\----;
                                                          ;;                   ;
DATA_01C6E8:          db $20,$E0                          ;;----|C6E8/----\----;
                                                          ;;                   ;
DATA_01C6EA:          db $0A,$F6,$08                      ;;----|C6EA/----\----;
                                                          ;;                   ;
Feather:              LDA.B !SpriteLock                   ;;----|C6ED/----\----; \ Branch if sprites locked 
                      BNE CODE_01C744                     ;;----|C6EF/----\----; / 
                      LDA.B !SpriteTableC2,X              ;;----|C6F1/----\----;
                      BEQ CODE_01C701                     ;;----|C6F3/----\----;
                      JSR CODE_019140                     ;;----|C6F5/----\----;
                      LDA.W !SpriteBlockedDirs,X          ;;----|C6F8/----\----;
                      BNE +                               ;;----|C6FB/----\----;
                      STZ.B !SpriteTableC2,X              ;;----|C6FD/----\----;
                    + BRA CODE_01C741                     ;;----|C6FF/----\----;
                                                          ;;                   ;
CODE_01C701:          LDA.W !SpriteStatus,X               ;;----|C701/----\----;
                      CMP.B #$0C                          ;;----|C704/----\----;
                      BEQ CODE_01C744                     ;;----|C706/----\----;
                      LDA.W !SpriteMisc154C,X             ;;----|C708/----\----;
                      BEQ +                               ;;----|C70B/----\----;
                      JSR SubSprYPosNoGrvty               ;;----|C70D/----\----;
                      INC.B !SpriteYSpeed,X               ;;----|C710/----\----;
                      JMP CODE_01C741                     ;;----|C712/----\----;
                                                          ;;                   ;
                    + LDA.W !SpriteMisc1528,X             ;;----|C715/----\----;
                      AND.B #$01                          ;;----|C718/----\----;
                      TAY                                 ;;----|C71A/----\----;
                      LDA.B !SpriteXSpeed,X               ;;----|C71B/----\----;
                      CLC                                 ;;----|C71D/----\----;
                      ADC.W DATA_01C6E6,Y                 ;;----|C71E/----\----;
                      STA.B !SpriteXSpeed,X               ;;----|C721/----\----;
                      CMP.W DATA_01C6E8,Y                 ;;----|C723/----\----;
                      BNE +                               ;;----|C726/----\----;
                      INC.W !SpriteMisc1528,X             ;;----|C728/----\----;
                    + LDA.B !SpriteXSpeed,X               ;;----|C72B/----\----;
                      BPL +                               ;;----|C72D/----\----;
                      INY                                 ;;----|C72F/----\----;
                    + LDA.W DATA_01C6EA,Y                 ;;----|C730/----\----;
                      CLC                                 ;;----|C733/----\----;
                      ADC.B #$06                          ;;----|C734/----\----;
                      STA.B !SpriteYSpeed,X               ;;----|C736/----\----;
                      JSR SubOffscreen0Bnk1               ;;----|C738/----\----;
                      JSR SubSprXPosNoGrvty               ;;----|C73B/----\----;
                      JSR SubSprYPosNoGrvty               ;;----|C73E/----\----;
CODE_01C741:          JSR UpdateDirection                 ;;----|C741/----\----;
CODE_01C744:          JSR CODE_01C4AC                     ;;----|C744/----\----;
                      JMP CODE_01C61A                     ;;----|C747/----\----;
                                                          ;;                   ;
InitBrwnChainPlat:    LDA.B #$80                          ;;----|C74A/----\----;
                      STA.W !SpriteMisc151C,X             ;;----|C74C/----\----;
                      LDA.B #$01                          ;;----|C74F/----\----;
                      STA.W !SpriteMisc1528,X             ;;----|C751/----\----;
                      LDA.B !SpriteXPosLow,X              ;;----|C754/----\----;
                      CLC                                 ;;----|C756/----\----;
                      ADC.B #$78                          ;;----|C757/----\----;
                      STA.B !SpriteXPosLow,X              ;;----|C759/----\----;
                      LDA.W !SpriteYPosHigh,X             ;;----|C75B/----\----;
                      ADC.B #$00                          ;;----|C75E/----\----;
                      STA.W !SpriteYPosHigh,X             ;;----|C760/----\----;
                      LDA.B !SpriteYPosLow,X              ;;----|C763/----\----;
                      CLC                                 ;;----|C765/----\----;
                      ADC.B #$68                          ;;----|C766/----\----;
                      STA.B !SpriteYPosLow,X              ;;----|C768/----\----;
                      LDA.W !SpriteXPosHigh,X             ;;----|C76A/----\----;
                      ADC.B #$00                          ;;----|C76D/----\----;
                      STA.W !SpriteXPosHigh,X             ;;----|C76F/----\----;
                      RTS                                 ;;----|C772/----\----; Return 
                                                          ;;                   ;
BrownChainedPlat:     JSR SubOffscreen2Bnk1               ;;----|C773/----\----;
                      LDA.B !SpriteLock                   ;;----|C776/----\----; \ Branch if sprites locked 
                      BNE CODE_01C795                     ;;----|C778/----\----; / 
                      LDA.B !TrueFrame                    ;;----|C77A/----\----;
                      AND.B #$03                          ;;----|C77C/----\----;
                      ORA.W !SpriteMisc1602,X             ;;----|C77E/----\----;
                      BNE CODE_01C795                     ;;----|C781/----\----;
                      LDA.B #$01                          ;;----|C783/----\----;
                      LDY.W !SpriteMisc1504,X             ;;----|C785/----\----;
                      BEQ CODE_01C795                     ;;----|C788/----\----;
                      BMI +                               ;;----|C78A/----\----;
                      LDA.B #$FF                          ;;----|C78C/----\----;
                    + CLC                                 ;;----|C78E/----\----;
                      ADC.W !SpriteMisc1504,X             ;;----|C78F/----\----;
                      STA.W !SpriteMisc1504,X             ;;----|C792/----\----;
CODE_01C795:          LDA.W !SpriteMisc151C,X             ;;----|C795/----\----;
                      PHA                                 ;;----|C798/----\----;
                      LDA.W !SpriteMisc1528,X             ;;----|C799/----\----;
                      PHA                                 ;;----|C79C/----\----;
                      LDA.B #$00                          ;;----|C79D/----\----;
                      SEC                                 ;;----|C79F/----\----;
                      SBC.W !SpriteMisc151C,X             ;;----|C7A0/----\----;
                      STA.W !SpriteMisc151C,X             ;;----|C7A3/----\----;
                      LDA.B #$02                          ;;----|C7A6/----\----;
                      SBC.W !SpriteMisc1528,X             ;;----|C7A8/----\----;
                      AND.B #$01                          ;;----|C7AB/----\----;
                      STA.W !SpriteMisc1528,X             ;;----|C7AD/----\----;
                      JSR CODE_01CACB                     ;;----|C7B0/----\----;
                      JSR CODE_01CB20                     ;;----|C7B3/----\----;
                      JSR CODE_01CB53                     ;;----|C7B6/----\----;
                      PLA                                 ;;----|C7B9/----\----;
                      STA.W !SpriteMisc1528,X             ;;----|C7BA/----\----;
                      PLA                                 ;;----|C7BD/----\----;
                      STA.W !SpriteMisc151C,X             ;;----|C7BE/----\----;
                      LDA.W !BrSwingPlatXPos              ;;----|C7C1/----\----;
                      PHA                                 ;;----|C7C4/----\----;
                      SEC                                 ;;----|C7C5/----\----;
                      SBC.B !SpriteTableC2,X              ;;----|C7C6/----\----;
                      STA.W !SpriteXMovement              ;;----|C7C8/----\----;
                      PLA                                 ;;----|C7CB/----\----;
                      STA.B !SpriteTableC2,X              ;;----|C7CC/----\----;
                      LDY.W !SpriteOAMIndex,X             ;;----|C7CE/----\----; Y = Index into sprite OAM 
                      LDA.W !BrSwingPlatYPos              ;;----|C7D1/----\----;
                      SEC                                 ;;----|C7D4/----\----;
                      SBC.B !Layer1YPos                   ;;----|C7D5/----\----;
                      SEC                                 ;;----|C7D7/----\----;
                      SBC.B #$08                          ;;----|C7D8/----\----;
                      STA.W !OAMTileYPos+$100,Y           ;;----|C7DA/----\----;
                      LDA.W !BrSwingPlatXPos              ;;----|C7DD/----\----;
                      SEC                                 ;;----|C7E0/----\----;
                      SBC.B !Layer1XPos                   ;;----|C7E1/----\----;
                      SEC                                 ;;----|C7E3/----\----;
                      SBC.B #$08                          ;;----|C7E4/----\----;
                      STA.W !OAMTileXPos+$100,Y           ;;----|C7E6/----\----;
                      LDA.B #$A2                          ;;----|C7E9/----\----;
                      STA.W !OAMTileNo+$100,Y             ;;----|C7EB/----\----;
                      LDA.B #$31                          ;;----|C7EE/----\----;
                      STA.W !OAMTileAttr+$100,Y           ;;----|C7F0/----\----;
                      LDY.B #$00                          ;;----|C7F3/----\----;
                      LDA.W !BrSwingPlatYPos              ;;----|C7F5/----\----;
                      SEC                                 ;;----|C7F8/----\----;
                      SBC.W !BrSwingCenterYPos            ;;----|C7F9/----\----;
                      BPL +                               ;;----|C7FC/----\----;
                      EOR.B #$FF                          ;;----|C7FE/----\----;
                      INC A                               ;;----|C800/----\----;
                      INY                                 ;;----|C801/----\----;
                    + STY.B !_0                           ;;----|C802/----\----;
                      STA.W !HW_WRDIV+1                   ;;----|C804/----\----; Dividend (High-Byte)
                      STZ.W !HW_WRDIV                     ;;----|C807/----\----; Dividend (Low Byte)
                      LDA.B #$05                          ;;----|C80A/----\----;
                      STA.W !HW_WRDIV+2                   ;;----|C80C/----\----; Divisor B
                      JSR DoNothing                       ;;----|C80F/----\----;
                      LDA.W !HW_RDDIV                     ;;----|C812/----\----; Quotient of Divide Result (Low Byte)
                      STA.B !_2                           ;;----|C815/----\----;
                      STA.B !_6                           ;;----|C817/----\----;
                      LDA.W !HW_RDDIV+1                   ;;----|C819/----\----; Quotient of Divide Result (High Byte)
                      STA.B !_3                           ;;----|C81C/----\----;
                      STA.B !_7                           ;;----|C81E/----\----;
                      LDY.B #$00                          ;;----|C820/----\----;
                      LDA.W !BrSwingPlatXPos              ;;----|C822/----\----;
                      SEC                                 ;;----|C825/----\----;
                      SBC.W !BrSwingCenterXPos            ;;----|C826/----\----;
                      BPL +                               ;;----|C829/----\----;
                      EOR.B #$FF                          ;;----|C82B/----\----;
                      INC A                               ;;----|C82D/----\----;
                      INY                                 ;;----|C82E/----\----;
                    + STY.B !_1                           ;;----|C82F/----\----;
                      STA.W !HW_WRDIV+1                   ;;----|C831/----\----; Dividend (High-Byte)
                      STZ.W !HW_WRDIV                     ;;----|C834/----\----; Dividend (Low Byte)
                      LDA.B #$05                          ;;----|C837/----\----;
                      STA.W !HW_WRDIV+2                   ;;----|C839/----\----; Divisor B
                      JSR DoNothing                       ;;----|C83C/----\----;
                      LDA.W !HW_RDDIV                     ;;----|C83F/----\----; Quotient of Divide Result (Low Byte)
                      STA.B !_4                           ;;----|C842/----\----;
                      STA.B !_8                           ;;----|C844/----\----;
                      LDA.W !HW_RDDIV+1                   ;;----|C846/----\----; Quotient of Divide Result (High Byte)
                      STA.B !_5                           ;;----|C849/----\----;
                      STA.B !_9                           ;;----|C84B/----\----;
                      LDY.W !SpriteOAMIndex,X             ;;----|C84D/----\----; Y = Index into sprite OAM 
                      INY                                 ;;----|C850/----\----;
                      INY                                 ;;----|C851/----\----;
                      INY                                 ;;----|C852/----\----;
                      INY                                 ;;----|C853/----\----;
                      LDA.W !BrSwingCenterYPos            ;;----|C854/----\----;
                      SEC                                 ;;----|C857/----\----;
                      SBC.B !Layer1YPos                   ;;----|C858/----\----;
                      SEC                                 ;;----|C85A/----\----;
                      SBC.B #$08                          ;;----|C85B/----\----;
                      STA.B !_A                           ;;----|C85D/----\----;
                      STA.W !OAMTileYPos+$100,Y           ;;----|C85F/----\----;
                      LDA.W !BrSwingCenterXPos            ;;----|C862/----\----;
                      SEC                                 ;;----|C865/----\----;
                      SBC.B !Layer1XPos                   ;;----|C866/----\----;
                      SEC                                 ;;----|C868/----\----;
                      SBC.B #$08                          ;;----|C869/----\----;
                      STA.B !_B                           ;;----|C86B/----\----;
                      STA.W !OAMTileXPos+$100,Y           ;;----|C86D/----\----;
                      LDA.B #$A2                          ;;----|C870/----\----;
                      STA.W !OAMTileNo+$100,Y             ;;----|C872/----\----;
                      LDA.B #$31                          ;;----|C875/----\----;
                      STA.W !OAMTileAttr+$100,Y           ;;----|C877/----\----;
                      LDX.B #$03                          ;;----|C87A/----\----;
CODE_01C87C:          INY                                 ;;----|C87C/----\----;
                      INY                                 ;;----|C87D/----\----;
                      INY                                 ;;----|C87E/----\----;
                      INY                                 ;;----|C87F/----\----;
                      LDA.B !_0                           ;;----|C880/----\----;
                      BNE CODE_01C88E                     ;;----|C882/----\----;
                      LDA.B !_A                           ;;----|C884/----\----;
                      CLC                                 ;;----|C886/----\----;
                      ADC.B !_7                           ;;----|C887/----\----;
                      STA.W !OAMTileYPos+$100,Y           ;;----|C889/----\----;
                      BRA +                               ;;----|C88C/----\----;
                                                          ;;                   ;
CODE_01C88E:          LDA.B !_A                           ;;----|C88E/----\----;
                      SEC                                 ;;----|C890/----\----;
                      SBC.B !_7                           ;;----|C891/----\----;
                      STA.W !OAMTileYPos+$100,Y           ;;----|C893/----\----;
                    + LDA.B !_6                           ;;----|C896/----\----;
                      CLC                                 ;;----|C898/----\----;
                      ADC.B !_2                           ;;----|C899/----\----;
                      STA.B !_6                           ;;----|C89B/----\----;
                      LDA.B !_7                           ;;----|C89D/----\----;
                      ADC.B !_3                           ;;----|C89F/----\----;
                      STA.B !_7                           ;;----|C8A1/----\----;
                      LDA.B !_1                           ;;----|C8A3/----\----;
                      BNE CODE_01C8B1                     ;;----|C8A5/----\----;
                      LDA.B !_B                           ;;----|C8A7/----\----;
                      CLC                                 ;;----|C8A9/----\----;
                      ADC.B !_9                           ;;----|C8AA/----\----;
                      STA.W !OAMTileXPos+$100,Y           ;;----|C8AC/----\----;
                      BRA +                               ;;----|C8AF/----\----;
                                                          ;;                   ;
CODE_01C8B1:          LDA.B !_B                           ;;----|C8B1/----\----;
                      SEC                                 ;;----|C8B3/----\----;
                      SBC.B !_9                           ;;----|C8B4/----\----;
                      STA.W !OAMTileXPos+$100,Y           ;;----|C8B6/----\----;
                    + LDA.B !_8                           ;;----|C8B9/----\----;
                      CLC                                 ;;----|C8BB/----\----;
                      ADC.B !_4                           ;;----|C8BC/----\----;
                      STA.B !_8                           ;;----|C8BE/----\----;
                      LDA.B !_9                           ;;----|C8C0/----\----;
                      ADC.B !_5                           ;;----|C8C2/----\----;
                      STA.B !_9                           ;;----|C8C4/----\----;
                      LDA.B #$A2                          ;;----|C8C6/----\----;
                      STA.W !OAMTileNo+$100,Y             ;;----|C8C8/----\----;
                      LDA.B #$31                          ;;----|C8CB/----\----;
                      STA.W !OAMTileAttr+$100,Y           ;;----|C8CD/----\----;
                      DEX                                 ;;----|C8D0/----\----;
                      BPL CODE_01C87C                     ;;----|C8D1/----\----;
                      LDX.B #$03                          ;;----|C8D3/----\----;
                    - STX.B !_2                           ;;----|C8D5/----\----;
                      INY                                 ;;----|C8D7/----\----;
                      INY                                 ;;----|C8D8/----\----;
                      INY                                 ;;----|C8D9/----\----;
                      INY                                 ;;----|C8DA/----\----;
                      LDA.W !BrSwingPlatYPos              ;;----|C8DB/----\----;
                      SEC                                 ;;----|C8DE/----\----;
                      SBC.B !Layer1YPos                   ;;----|C8DF/----\----;
                      SEC                                 ;;----|C8E1/----\----;
                      SBC.B #$10                          ;;----|C8E2/----\----;
                      STA.W !OAMTileYPos+$100,Y           ;;----|C8E4/----\----;
                      LDA.W !BrSwingPlatXPos              ;;----|C8E7/----\----;
                      SEC                                 ;;----|C8EA/----\----;
                      SBC.B !Layer1XPos                   ;;----|C8EB/----\----;
                      CLC                                 ;;----|C8ED/----\----;
                      ADC.W DATA_01C9B7,X                 ;;----|C8EE/----\----;
                      STA.W !OAMTileXPos+$100,Y           ;;----|C8F1/----\----;
                      LDA.W BrwnChainPlatTiles,X          ;;----|C8F4/----\----;
                      STA.W !OAMTileNo+$100,Y             ;;----|C8F7/----\----;
                      LDA.B #$31                          ;;----|C8FA/----\----;
                      STA.W !OAMTileAttr+$100,Y           ;;----|C8FC/----\----;
                      DEX                                 ;;----|C8FF/----\----;
                      BPL -                               ;;----|C900/----\----;
                      LDX.W !CurSpriteProcess             ;;----|C902/----\----; X = Sprite index 
                      LDA.B #$09                          ;;----|C905/----\----;
                      STA.B !_8                           ;;----|C907/----\----;
                      LDA.W !BrSwingCenterYPos            ;;----|C909/----\----;
                      SEC                                 ;;----|C90C/----\----;
                      SBC.B #$08                          ;;----|C90D/----\----;
                      STA.B !_0                           ;;----|C90F/----\----;
                      LDA.W !BrSwingCenterYPos+1          ;;----|C911/----\----;
                      SBC.B #$00                          ;;----|C914/----\----;
                      STA.B !_1                           ;;----|C916/----\----;
                      LDA.W !BrSwingCenterXPos            ;;----|C918/----\----;
                      SEC                                 ;;----|C91B/----\----;
                      SBC.B #$08                          ;;----|C91C/----\----;
                      STA.B !_2                           ;;----|C91E/----\----;
                      LDA.W !BrSwingCenterXPos+1          ;;----|C920/----\----;
                      SBC.B #$00                          ;;----|C923/----\----;
                      STA.B !_3                           ;;----|C925/----\----;
                      LDY.W !SpriteOAMIndex,X             ;;----|C927/----\----; Y = Index into sprite OAM 
                      LDA.W !OAMTileYPos+$104,Y           ;;----|C92A/----\----;
                      STA.B !_6                           ;;----|C92D/----\----;
                      LDA.W !OAMTileXPos+$104,Y           ;;----|C92F/----\----;
                      STA.B !_7                           ;;----|C932/----\----;
CODE_01C934:          TYA                                 ;;----|C934/----\----;
                      LSR A                               ;;----|C935/----\----;
                      LSR A                               ;;----|C936/----\----;
                      TAX                                 ;;----|C937/----\----;
                      LDA.B #$02                          ;;----|C938/----\----;
                      STA.W !OAMTileSize+$40,X            ;;----|C93A/----\----;
                      LDX.B #$00                          ;;----|C93D/----\----;
                      LDA.W !OAMTileXPos+$100,Y           ;;----|C93F/----\----;
                      SEC                                 ;;----|C942/----\----;
                      SBC.B !_7                           ;;----|C943/----\----;
                      BPL +                               ;;----|C945/----\----;
                      DEX                                 ;;----|C947/----\----;
                    + CLC                                 ;;----|C948/----\----;
                      ADC.B !_2                           ;;----|C949/----\----;
                      STA.B !_4                           ;;----|C94B/----\----;
                      TXA                                 ;;----|C94D/----\----;
                      ADC.B !_3                           ;;----|C94E/----\----;
                      STA.B !_5                           ;;----|C950/----\----;
                      JSR CODE_01B844                     ;;----|C952/----\----;
                      BCC +                               ;;----|C955/----\----;
                      TYA                                 ;;----|C957/----\----;
                      LSR A                               ;;----|C958/----\----;
                      LSR A                               ;;----|C959/----\----;
                      TAX                                 ;;----|C95A/----\----;
                      LDA.B #$03                          ;;----|C95B/----\----;
                      STA.W !OAMTileSize+$40,X            ;;----|C95D/----\----;
                    + LDX.B #$00                          ;;----|C960/----\----;
                      LDA.W !OAMTileYPos+$100,Y           ;;----|C962/----\----;
                      SEC                                 ;;----|C965/----\----;
                      SBC.B !_6                           ;;----|C966/----\----;
                      BPL +                               ;;----|C968/----\----;
                      DEX                                 ;;----|C96A/----\----;
                    + CLC                                 ;;----|C96B/----\----;
                      ADC.B !_0                           ;;----|C96C/----\----;
                      STA.B !_9                           ;;----|C96E/----\----;
                      TXA                                 ;;----|C970/----\----;
                      ADC.B !_1                           ;;----|C971/----\----;
                      STA.B !_A                           ;;----|C973/----\----;
                      JSR CODE_01C9BF                     ;;----|C975/----\----;
                      BCC +                               ;;----|C978/----\----;
                      LDA.B #$F0                          ;;----|C97A/----\----;
                      STA.W !OAMTileYPos+$100,Y           ;;----|C97C/----\----;
                    + LDA.B !_8                           ;;----|C97F/----\----;
                      CMP.B #$09                          ;;----|C981/----\----;
                      BNE +                               ;;----|C983/----\----;
                      LDA.B !_4                           ;;----|C985/----\----;
                      STA.W !BrSwingPlatXPos              ;;----|C987/----\----;
                      LDA.B !_5                           ;;----|C98A/----\----;
                      STA.W !BrSwingPlatXPos+1            ;;----|C98C/----\----;
                      LDA.B !_9                           ;;----|C98F/----\----;
                      STA.W !BrSwingPlatYPos              ;;----|C991/----\----;
                      LDA.B !_A                           ;;----|C994/----\----;
                      STA.W !BrSwingPlatYPos+1            ;;----|C996/----\----;
                    + INY                                 ;;----|C999/----\----;
                      INY                                 ;;----|C99A/----\----;
                      INY                                 ;;----|C99B/----\----;
                      INY                                 ;;----|C99C/----\----;
                      DEC.B !_8                           ;;----|C99D/----\----;
                      BPL CODE_01C934                     ;;----|C99F/----\----;
                      LDX.W !CurSpriteProcess             ;;----|C9A1/----\----; X = Sprite index 
                      LDY.W !SpriteOAMIndex,X             ;;----|C9A4/----\----; Y = Index into sprite OAM 
                      LDA.B #$F0                          ;;----|C9A7/----\----;
                      STA.W !OAMTileYPos+$104,Y           ;;----|C9A9/----\----;
                      LDA.B !SpriteLock                   ;;----|C9AC/----\----; \ Branch if sprites locked 
                      BNE +                               ;;----|C9AE/----\----; / 
                      JSR CODE_01CCF0                     ;;----|C9B0/----\----;
                      JMP CODE_01C9EC                     ;;----|C9B3/----\----;
                                                          ;;                   ;
                    + RTS                                 ;;----|C9B6/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
DATA_01C9B7:          db $E0,$F0,$00,$10                  ;;----|C9B7/----\----;
                                                          ;;                   ;
BrwnChainPlatTiles:   db $60,$61,$61,$62                  ;;----|C9BB/----\----;
                                                          ;;                   ;
CODE_01C9BF:          REP #$20                            ;;----|C9BF/----\----; Accum (16 bit) 
                      LDA.B !_9                           ;;----|C9C1/----\----;
                      PHA                                 ;;----|C9C3/----\----;
                      CLC                                 ;;----|C9C4/----\----;
                      ADC.W #$0010                        ;;----|C9C5/----\----;
                      STA.B !_9                           ;;----|C9C8/----\----;
                      SEC                                 ;;----|C9CA/----\----;
                      SBC.B !Layer1YPos                   ;;----|C9CB/----\----;
                      CMP.W #$0100                        ;;----|C9CD/----\----;
                      PLA                                 ;;----|C9D0/----\----;
                      STA.B !_9                           ;;----|C9D1/----\----;
                      SEP #$20                            ;;----|C9D3/----\----; Accum (8 bit) 
Return01C9D5:         RTS                                 ;;----|C9D5/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
DATA_01C9D6:          db $01,$FF                          ;;----|C9D6/----\----;
                                                          ;;                   ;
DATA_01C9D8:          db $40,$C0                          ;;----|C9D8/----\----;
                                                          ;;                   ;
CODE_01C9DA:          LDA.W !SpriteMisc160E,X             ;;----|C9DA/----\----;
                      BEQ +                               ;;----|C9DD/----\----;
                      STZ.W !SpriteMisc160E,X             ;;----|C9DF/----\----;
CODE_01C9E2:          PHX                                 ;;----|C9E2/----\----;
                      JSL CODE_00E2BD                     ;;----|C9E3/----\----;
                      PLX                                 ;;----|C9E7/----\----;
                      STX.W !CurSpriteProcess             ;;----|C9E8/----\----;
                    + RTS                                 ;;----|C9EB/----\----; Return 
                                                          ;;                   ;
CODE_01C9EC:          LDA.W !BrSwingPlatXPos+1            ;;----|C9EC/----\----;
                      XBA                                 ;;----|C9EF/----\----;
                      LDA.W !BrSwingPlatXPos              ;;----|C9F0/----\----;
                      REP #$20                            ;;----|C9F3/----\----; Accum (16 bit) 
                      SEC                                 ;;----|C9F5/----\----;
                      SBC.B !Layer1XPos                   ;;----|C9F6/----\----;
                      CLC                                 ;;----|C9F8/----\----;
                      ADC.W #$0010                        ;;----|C9F9/----\----;
                      CMP.W #$0120                        ;;----|C9FC/----\----;
                      SEP #$20                            ;;----|C9FF/----\----; Accum (8 bit) 
                      ROL A                               ;;----|CA01/----\----;
                      AND.B #$01                          ;;----|CA02/----\----;
                      ORA.B !SpriteLock                   ;;----|CA04/----\----;
                      STA.W !SpriteWayOffscreenX,X        ;;----|CA06/----\----;
                      BNE Return01C9D5                    ;;----|CA09/----\----;
                      JSR CODE_01CA9C                     ;;----|CA0B/----\----;
                      STZ.W !SpriteMisc1602,X             ;;----|CA0E/----\----;
                      BCC CODE_01C9DA                     ;;----|CA11/----\----;
                      LDA.B #$01                          ;;----|CA13/----\----;
                      STA.W !SpriteMisc160E,X             ;;----|CA15/----\----;
                      LDA.W !BrSwingPlatYPos              ;;----|CA18/----\----;
                      SEC                                 ;;----|CA1B/----\----;
                      SBC.B !Layer1YPos                   ;;----|CA1C/----\----;
                      STA.B !_3                           ;;----|CA1E/----\----;
                      SEC                                 ;;----|CA20/----\----;
                      SBC.B #$08                          ;;----|CA21/----\----;
                      STA.B !_E                           ;;----|CA23/----\----;
                      LDA.B !PlayerYPosScrRel             ;;----|CA25/----\----;
                      CLC                                 ;;----|CA27/----\----;
                      ADC.B #$18                          ;;----|CA28/----\----;
                      CMP.B !_E                           ;;----|CA2A/----\----;
                      BCS Return01CA9B                    ;;----|CA2C/----\----;
                      LDA.B !PlayerYSpeed                 ;;----|CA2E/----\----;
                      BMI CODE_01C9E2                     ;;----|CA30/----\----;
                      STZ.B !PlayerYSpeed                 ;;----|CA32/----\----;
                      LDA.B #$03                          ;;----|CA34/----\----;
                      STA.W !StandOnSolidSprite           ;;----|CA36/----\----;
                      STA.W !SpriteMisc1602,X             ;;----|CA39/----\----;
                      LDA.B #$28                          ;;----|CA3C/----\----;
                      LDY.W !PlayerRidingYoshi            ;;----|CA3E/----\----;
                      BEQ +                               ;;----|CA41/----\----;
                      LDA.B #$38                          ;;----|CA43/----\----;
                    + STA.B !_F                           ;;----|CA45/----\----;
                      LDA.W !BrSwingPlatYPos              ;;----|CA47/----\----;
                      SEC                                 ;;----|CA4A/----\----;
                      SBC.B !_F                           ;;----|CA4B/----\----;
                      STA.B !PlayerYPosNext               ;;----|CA4D/----\----;
                      LDA.W !BrSwingPlatYPos+1            ;;----|CA4F/----\----;
                      SBC.B #$00                          ;;----|CA52/----\----;
                      STA.B !PlayerYPosNext+1             ;;----|CA54/----\----;
                      LDA.B !PlayerBlockedDir             ;;----|CA56/----\----;
                      AND.B #$03                          ;;----|CA58/----\----;
                      BNE CODE_01CA6E                     ;;----|CA5A/----\----;
                      LDY.B #$00                          ;;----|CA5C/----\----;
                      LDA.W !SpriteXMovement              ;;----|CA5E/----\----;
                      BPL +                               ;;----|CA61/----\----;
                      DEY                                 ;;----|CA63/----\----;
                    + CLC                                 ;;----|CA64/----\----;
                      ADC.B !PlayerXPosNext               ;;----|CA65/----\----;
                      STA.B !PlayerXPosNext               ;;----|CA67/----\----;
                      TYA                                 ;;----|CA69/----\----;
                      ADC.B !PlayerXPosNext+1             ;;----|CA6A/----\----;
                      STA.B !PlayerXPosNext+1             ;;----|CA6C/----\----;
CODE_01CA6E:          JSR CODE_01C9E2                     ;;----|CA6E/----\----;
                      LDA.B !byetudlrFrame                ;;----|CA71/----\----;
                      BMI +                               ;;----|CA73/----\----;
                      LDA.B #$FF                          ;;----|CA75/----\----;
                      STA.B !PlayerHiddenTiles            ;;----|CA77/----\----;
                   if !_VER <= 1                ;\   IF   ;;+++++++++++++++++++; J & U
                    + LDA.B !TrueFrame                    ;;----|CA79          ;
                      LSR A                               ;;----|CA7B          ;
                      BCC Return01CA9B                    ;;----|CA7C          ;
                      LDA.W !SpriteMisc151C,X             ;;----|CA7E          ;
                      CLC                                 ;;----|CA81          ;
                      ADC.B #$80                          ;;----|CA82          ;
                      LDA.W !SpriteMisc1528,X             ;;----|CA84          ;
                      ADC.B #$00                          ;;----|CA87          ;
                      AND.B #$01                          ;;----|CA89          ;
                      TAY                                 ;;----|CA8B          ;
                   else                         ;<  ELSE  ;;-------------------; E0 & E1
                    + LDA.W !SpriteMisc151C,X             ;;         /----\----;
                      CLC                                 ;;         /----\----;
                      ADC.B #$80                          ;;         /----\----;
                      LDA.W !SpriteMisc1528,X             ;;         /----\----;
                      ADC.B #$00                          ;;         /----\----;
                      AND.B #$01                          ;;         /----\----;
                      TAY                                 ;;         /----\----;
                      LDA.W !SpriteMisc1504,X             ;;         /----\----;
                      BEQ +                               ;;         /----\----;
                      EOR.W DATA_01C9D8,Y                 ;;         /----\----;
                      BPL +                               ;;         /----\----;
                      LDA.B !TrueFrame                    ;;         /----\----;
                      LSR A                               ;;         /----\----;
                      BCC Return01CA9B                    ;;         /----\----;
                   endif                        ;/ ENDIF  ;;+++++++++++++++++++;
                    + LDA.W !SpriteMisc1504,X             ;;----|CA8C/----\----;
                      CMP.W DATA_01C9D8,Y                 ;;----|CA8F/----\----;
                      BEQ Return01CA9B                    ;;----|CA92/----\----;
                      CLC                                 ;;----|CA94/----\----;
                      ADC.W DATA_01C9D6,Y                 ;;----|CA95/----\----;
                      STA.W !SpriteMisc1504,X             ;;----|CA98/----\----;
Return01CA9B:         RTS                                 ;;----|CA9B/----\----; Return 
                                                          ;;                   ;
CODE_01CA9C:          LDA.W !BrSwingPlatXPos              ;;----|CA9C/----\----;
                      SEC                                 ;;----|CA9F/----\----;
                      SBC.B #$18                          ;;----|CAA0/----\----;
                      STA.B !_4                           ;;----|CAA2/----\----;
                      LDA.W !BrSwingPlatXPos+1            ;;----|CAA4/----\----;
                      SBC.B #$00                          ;;----|CAA7/----\----;
                      STA.B !_A                           ;;----|CAA9/----\----;
                      LDA.B #$40                          ;;----|CAAB/----\----;
                      STA.B !_6                           ;;----|CAAD/----\----;
                      LDA.W !BrSwingPlatYPos              ;;----|CAAF/----\----;
                      SEC                                 ;;----|CAB2/----\----;
                      SBC.B #$0C                          ;;----|CAB3/----\----;
                      STA.B !_5                           ;;----|CAB5/----\----;
                      LDA.W !BrSwingPlatYPos+1            ;;----|CAB7/----\----;
                      SBC.B #$00                          ;;----|CABA/----\----;
                      STA.B !_B                           ;;----|CABC/----\----;
                      LDA.B #$13                          ;;----|CABE/----\----;
                      STA.B !_7                           ;;----|CAC0/----\----;
                      JSL GetMarioClipping                ;;----|CAC2/----\----;
                      JSL CheckForContact                 ;;----|CAC6/----\----;
                      RTS                                 ;;----|CACA/----\----; Return 
                                                          ;;                   ;
CODE_01CACB:          LDA.B #$50                          ;;----|CACB/----\----;
                      STA.W !BrSwingRadiusX               ;;----|CACD/----\----;
                      STZ.W !BrSwingRadiusY               ;;----|CAD0/----\----;
                      STZ.W !BrSwingRadiusX+1             ;;----|CAD3/----\----;
                      STZ.W !BrSwingRadiusY+1             ;;----|CAD6/----\----;
                      LDA.B !SpriteXPosLow,X              ;;----|CAD9/----\----;
                      STA.W !BrSwingXDist                 ;;----|CADB/----\----;
                      LDA.W !SpriteYPosHigh,X             ;;----|CADE/----\----;
                      STA.W !BrSwingXDist+1               ;;----|CAE1/----\----;
                      LDA.W !BrSwingXDist                 ;;----|CAE4/----\----;
                      SEC                                 ;;----|CAE7/----\----;
                      SBC.W !BrSwingRadiusX               ;;----|CAE8/----\----;
                      STA.W !BrSwingCenterXPos            ;;----|CAEB/----\----;
                      LDA.W !BrSwingXDist+1               ;;----|CAEE/----\----;
                      SBC.W !BrSwingRadiusX+1             ;;----|CAF1/----\----;
                      STA.W !BrSwingCenterXPos+1          ;;----|CAF4/----\----;
                      LDA.B !SpriteYPosLow,X              ;;----|CAF7/----\----;
                      STA.W !BrSwingYDist                 ;;----|CAF9/----\----;
                      LDA.W !SpriteXPosHigh,X             ;;----|CAFC/----\----;
                      STA.W !BrSwingYDist+1               ;;----|CAFF/----\----;
                      LDA.W !BrSwingYDist                 ;;----|CB02/----\----;
                      SEC                                 ;;----|CB05/----\----;
                      SBC.W !BrSwingRadiusY               ;;----|CB06/----\----;
                      STA.W !BrSwingCenterYPos            ;;----|CB09/----\----;
                      LDA.W !BrSwingYDist+1               ;;----|CB0C/----\----;
                      SBC.W !BrSwingRadiusY+1             ;;----|CB0F/----\----;
                      STA.W !BrSwingCenterYPos+1          ;;----|CB12/----\----;
                      LDA.W !SpriteMisc151C,X             ;;----|CB15/----\----;
                      STA.B !Mode7Angle                   ;;----|CB18/----\----;
                      LDA.W !SpriteMisc1528,X             ;;----|CB1A/----\----;
                      STA.B !Mode7Angle+1                 ;;----|CB1D/----\----;
                      RTS                                 ;;----|CB1F/----\----; Return 
                                                          ;;                   ;
CODE_01CB20:          LDA.B !Mode7Angle+1                 ;;----|CB20/----\----;
                      STA.W !BrSwingAngleParity           ;;----|CB22/----\----;
                      PHX                                 ;;----|CB25/----\----;
                      REP #$30                            ;;----|CB26/----\----; Index (16 bit) Accum (16 bit) 
                      LDA.B !Mode7Angle                   ;;----|CB28/----\----;
                      ASL A                               ;;----|CB2A/----\----;
                      AND.W #$01FF                        ;;----|CB2B/----\----;
                      TAX                                 ;;----|CB2E/----\----;
                      LDA.L CircleCoords,X                ;;----|CB2F/----\----;
                      STA.W !BrSwingSine                  ;;----|CB33/----\----;
                      LDA.B !Mode7Angle                   ;;----|CB36/----\----;
                      CLC                                 ;;----|CB38/----\----;
                      ADC.W #$0080                        ;;----|CB39/----\----;
                      STA.B !_0                           ;;----|CB3C/----\----;
                      ASL A                               ;;----|CB3E/----\----;
                      AND.W #$01FF                        ;;----|CB3F/----\----;
                      TAX                                 ;;----|CB42/----\----;
                      LDA.L CircleCoords,X                ;;----|CB43/----\----;
                      STA.W !BrSwingCosine                ;;----|CB47/----\----;
                      SEP #$30                            ;;----|CB4A/----\----; Index (8 bit) Accum (8 bit) 
                      LDA.B !_1                           ;;----|CB4C/----\----;
                      STA.W !BrSwingAngleParity+1         ;;----|CB4E/----\----;
                      PLX                                 ;;----|CB51/----\----;
                      RTS                                 ;;----|CB52/----\----; Return 
                                                          ;;                   ;
CODE_01CB53:          REP #$20                            ;;----|CB53/----\----; Accum (16 bit) 
                      LDA.W !BrSwingCosine                ;;----|CB55/----\----;
                      STA.B !_2                           ;;----|CB58/----\----;
                      LDA.W !BrSwingRadiusX               ;;----|CB5A/----\----;
                      STA.B !_0                           ;;----|CB5D/----\----;
                      SEP #$20                            ;;----|CB5F/----\----; Accum (8 bit) 
                      JSR CODE_01CC28                     ;;----|CB61/----\----;
                      LDA.W !BrSwingAngleParity+1         ;;----|CB64/----\----;
                      LSR A                               ;;----|CB67/----\----;
                      REP #$20                            ;;----|CB68/----\----; Accum (16 bit) 
                      LDA.B !_4                           ;;----|CB6A/----\----;
                      BCC +                               ;;----|CB6C/----\----;
                      EOR.W #$FFFF                        ;;----|CB6E/----\----;
                      INC A                               ;;----|CB71/----\----;
                    + STA.B !_8                           ;;----|CB72/----\----;
                      LDA.B !_6                           ;;----|CB74/----\----;
                      BCC +                               ;;----|CB76/----\----;
                      EOR.W #$FFFF                        ;;----|CB78/----\----;
                      INC A                               ;;----|CB7B/----\----;
                    + STA.B !_A                           ;;----|CB7C/----\----;
                      LDA.W !BrSwingSine                  ;;----|CB7E/----\----;
                      STA.B !_2                           ;;----|CB81/----\----;
                      LDA.W !BrSwingRadiusY               ;;----|CB83/----\----;
                      STA.B !_0                           ;;----|CB86/----\----;
                      SEP #$20                            ;;----|CB88/----\----; Accum (8 bit) 
                      JSR CODE_01CC28                     ;;----|CB8A/----\----;
                      LDA.W !BrSwingAngleParity           ;;----|CB8D/----\----;
                      LSR A                               ;;----|CB90/----\----;
                      REP #$20                            ;;----|CB91/----\----; Accum (16 bit) 
                      LDA.B !_4                           ;;----|CB93/----\----;
                      BCC +                               ;;----|CB95/----\----;
                      EOR.W #$FFFF                        ;;----|CB97/----\----;
                      INC A                               ;;----|CB9A/----\----;
                    + STA.B !_4                           ;;----|CB9B/----\----;
                      LDA.B !_6                           ;;----|CB9D/----\----;
                      BCC +                               ;;----|CB9F/----\----;
                      EOR.W #$FFFF                        ;;----|CBA1/----\----;
                      INC A                               ;;----|CBA4/----\----;
                    + STA.B !_6                           ;;----|CBA5/----\----;
                      LDA.B !_4                           ;;----|CBA7/----\----;
                      CLC                                 ;;----|CBA9/----\----;
                      ADC.B !_8                           ;;----|CBAA/----\----;
                      STA.B !_4                           ;;----|CBAC/----\----;
                      LDA.B !_6                           ;;----|CBAE/----\----;
                      ADC.B !_A                           ;;----|CBB0/----\----;
                      STA.B !_6                           ;;----|CBB2/----\----;
                      LDA.B !_5                           ;;----|CBB4/----\----;
                      CLC                                 ;;----|CBB6/----\----;
                      ADC.W !BrSwingCenterXPos            ;;----|CBB7/----\----;
                      STA.W !BrSwingPlatXPos              ;;----|CBBA/----\----;
                      LDA.W !BrSwingCosine                ;;----|CBBD/----\----;
                      STA.B !_2                           ;;----|CBC0/----\----;
                      LDA.W !BrSwingRadiusY               ;;----|CBC2/----\----;
                      STA.B !_0                           ;;----|CBC5/----\----;
                      SEP #$20                            ;;----|CBC7/----\----; Accum (8 bit) 
                      JSR CODE_01CC28                     ;;----|CBC9/----\----;
                      LDA.W !BrSwingAngleParity+1         ;;----|CBCC/----\----;
                      LSR A                               ;;----|CBCF/----\----;
                      REP #$20                            ;;----|CBD0/----\----; Accum (16 bit) 
                      LDA.B !_4                           ;;----|CBD2/----\----;
                      BCC +                               ;;----|CBD4/----\----;
                      EOR.W #$FFFF                        ;;----|CBD6/----\----;
                      INC A                               ;;----|CBD9/----\----;
                    + STA.B !_8                           ;;----|CBDA/----\----;
                      LDA.B !_6                           ;;----|CBDC/----\----;
                      BCC +                               ;;----|CBDE/----\----;
                      EOR.W #$FFFF                        ;;----|CBE0/----\----;
                      INC A                               ;;----|CBE3/----\----;
                    + STA.B !_A                           ;;----|CBE4/----\----;
                      LDA.W !BrSwingSine                  ;;----|CBE6/----\----;
                      STA.B !_2                           ;;----|CBE9/----\----;
                      LDA.W !BrSwingRadiusX               ;;----|CBEB/----\----;
                      STA.B !_0                           ;;----|CBEE/----\----;
                      SEP #$20                            ;;----|CBF0/----\----; Accum (8 bit) 
                      JSR CODE_01CC28                     ;;----|CBF2/----\----;
                      LDA.W !BrSwingAngleParity           ;;----|CBF5/----\----;
                      LSR A                               ;;----|CBF8/----\----;
                      REP #$20                            ;;----|CBF9/----\----; Accum (16 bit) 
                      LDA.B !_4                           ;;----|CBFB/----\----;
                      BCC +                               ;;----|CBFD/----\----;
                      EOR.W #$FFFF                        ;;----|CBFF/----\----;
                      INC A                               ;;----|CC02/----\----;
                    + STA.B !_4                           ;;----|CC03/----\----;
                      LDA.B !_6                           ;;----|CC05/----\----;
                      BCC +                               ;;----|CC07/----\----;
                      EOR.W #$FFFF                        ;;----|CC09/----\----;
                      INC A                               ;;----|CC0C/----\----;
                    + STA.B !_6                           ;;----|CC0D/----\----;
                      LDA.B !_4                           ;;----|CC0F/----\----;
                      SEC                                 ;;----|CC11/----\----;
                      SBC.B !_8                           ;;----|CC12/----\----;
                      STA.B !_4                           ;;----|CC14/----\----;
                      LDA.B !_6                           ;;----|CC16/----\----;
                      SBC.B !_A                           ;;----|CC18/----\----;
                      STA.B !_6                           ;;----|CC1A/----\----;
                      LDA.W !BrSwingCenterYPos            ;;----|CC1C/----\----;
                      SEC                                 ;;----|CC1F/----\----;
                      SBC.B !_5                           ;;----|CC20/----\----;
                      STA.W !BrSwingPlatYPos              ;;----|CC22/----\----;
                      SEP #$20                            ;;----|CC25/----\----; Accum (8 bit) 
                      RTS                                 ;;----|CC27/----\----; Return 
                                                          ;;                   ;
CODE_01CC28:          LDA.B !_0                           ;;----|CC28/----\----;
                      STA.W !HW_WRMPYA                    ;;----|CC2A/----\----; Multiplicand A
                      LDA.B !_2                           ;;----|CC2D/----\----;
                      STA.W !HW_WRMPYB                    ;;----|CC2F/----\----; Multplier B
                      JSR DoNothing                       ;;----|CC32/----\----;
                      LDA.W !HW_RDMPY                     ;;----|CC35/----\----; Product/Remainder Result (Low Byte)
                      STA.B !_4                           ;;----|CC38/----\----;
                      LDA.W !HW_RDMPY+1                   ;;----|CC3A/----\----; Product/Remainder Result (High Byte)
                      STA.B !_5                           ;;----|CC3D/----\----;
                      LDA.B !_0                           ;;----|CC3F/----\----;
                      STA.W !HW_WRMPYA                    ;;----|CC41/----\----; Multiplicand A
                      LDA.B !_3                           ;;----|CC44/----\----;
                      STA.W !HW_WRMPYB                    ;;----|CC46/----\----; Multplier B
                      JSR DoNothing                       ;;----|CC49/----\----;
                      LDA.W !HW_RDMPY                     ;;----|CC4C/----\----; Product/Remainder Result (Low Byte)
                      CLC                                 ;;----|CC4F/----\----;
                      ADC.B !_5                           ;;----|CC50/----\----;
                      STA.B !_5                           ;;----|CC52/----\----;
                      LDA.W !HW_RDMPY+1                   ;;----|CC54/----\----; Product/Remainder Result (High Byte)
                      ADC.B #$00                          ;;----|CC57/----\----;
                      STA.B !_6                           ;;----|CC59/----\----;
                      LDA.B !_1                           ;;----|CC5B/----\----;
                      STA.W !HW_WRMPYA                    ;;----|CC5D/----\----; Multiplicand A
                      LDA.B !_2                           ;;----|CC60/----\----;
                      STA.W !HW_WRMPYB                    ;;----|CC62/----\----; Multplier B
                      JSR DoNothing                       ;;----|CC65/----\----;
                      LDA.W !HW_RDMPY                     ;;----|CC68/----\----; Product/Remainder Result (Low Byte)
                      CLC                                 ;;----|CC6B/----\----;
                      ADC.B !_5                           ;;----|CC6C/----\----;
                      STA.B !_5                           ;;----|CC6E/----\----;
                      LDA.W !HW_RDMPY+1                   ;;----|CC70/----\----; Product/Remainder Result (High Byte)
                      ADC.B !_6                           ;;----|CC73/----\----;
                      STA.B !_6                           ;;----|CC75/----\----;
                      LDA.B !_1                           ;;----|CC77/----\----;
                      STA.W !HW_WRMPYA                    ;;----|CC79/----\----; Multiplicand A
                      LDA.B !_3                           ;;----|CC7C/----\----;
                      STA.W !HW_WRMPYB                    ;;----|CC7E/----\----; Multplier B
                      JSR DoNothing                       ;;----|CC81/----\----;
                      LDA.W !HW_RDMPY                     ;;----|CC84/----\----; Product/Remainder Result (Low Byte)
                      CLC                                 ;;----|CC87/----\----;
                      ADC.B !_6                           ;;----|CC88/----\----;
                      STA.B !_6                           ;;----|CC8A/----\----;
                      LDA.W !HW_RDMPY+1                   ;;----|CC8C/----\----; Product/Remainder Result (High Byte)
                      ADC.B #$00                          ;;----|CC8F/----\----;
                      STA.B !_7                           ;;----|CC91/----\----;
                      RTS                                 ;;----|CC93/----\----; Return 
                                                          ;;                   ;
DoNothing:            NOP                                 ;;----|CC94/----\----; \ Do nothing at all 
                      NOP                                 ;;----|CC95/----\----;  | 
                      NOP                                 ;;----|CC96/----\----;  | 
                      NOP                                 ;;----|CC97/----\----;  | 
                      NOP                                 ;;----|CC98/----\----;  | 
                      NOP                                 ;;----|CC99/----\----;  | 
                      NOP                                 ;;----|CC9A/----\----;  | 
                      NOP                                 ;;----|CC9B/----\----;  | 
                      RTS                                 ;;----|CC9C/----\----; / 
                                                          ;;                   ;
CODE_01CC9D:          LDA.W !BrSwingXDist+1               ;;----|CC9D/----\----;
                      ORA.W !BrSwingYDist+1               ;;----|CCA0/----\----;
                      BNE +                               ;;----|CCA3/----\----;
                      JSR CODE_01CCC7                     ;;----|CCA5/----\----;
                      JSR CODE_01CB20                     ;;----|CCA8/----\----;
                      JSR CODE_01CB53                     ;;----|CCAB/----\----;
                      LDA.W !BrSwingPlatYPos              ;;----|CCAE/----\----;
                      AND.B #$F0                          ;;----|CCB1/----\----;
                      STA.B !_0                           ;;----|CCB3/----\----;
                      LDA.W !BrSwingPlatXPos              ;;----|CCB5/----\----;
                      LSR A                               ;;----|CCB8/----\----;
                      LSR A                               ;;----|CCB9/----\----;
                      LSR A                               ;;----|CCBA/----\----;
                      LSR A                               ;;----|CCBB/----\----;
                      ORA.B !_0                           ;;----|CCBC/----\----;
                      TAY                                 ;;----|CCBE/----\----;
                      LDA.W !GfxDecompOWAni,Y             ;;----|CCBF/----\----;
                      CMP.B #$15                          ;;----|CCC2/----\----;
                      RTL                                 ;;----|CCC4/----\----; Return 
                                                          ;;                   ;
                    + CLC                                 ;;----|CCC5/----\----;
                      RTL                                 ;;----|CCC6/----\----; Return 
                                                          ;;                   ;
CODE_01CCC7:          REP #$20                            ;;----|CCC7/----\----; Accum (16 bit) 
                      LDA.B !Mode7CenterX                 ;;----|CCC9/----\----;
                      STA.W !BrSwingCenterXPos            ;;----|CCCB/----\----;
                      LDA.B !Mode7CenterY                 ;;----|CCCE/----\----;
                      STA.W !BrSwingCenterYPos            ;;----|CCD0/----\----;
                      LDA.W !BrSwingXDist                 ;;----|CCD3/----\----;
                      SEC                                 ;;----|CCD6/----\----;
                      SBC.W !BrSwingCenterXPos            ;;----|CCD7/----\----;
                      STA.W !BrSwingRadiusX               ;;----|CCDA/----\----;
                      LDA.W !BrSwingYDist                 ;;----|CCDD/----\----;
                      SEC                                 ;;----|CCE0/----\----;
                      SBC.W !BrSwingCenterYPos            ;;----|CCE1/----\----;
                      STA.W !BrSwingRadiusY               ;;----|CCE4/----\----;
                      SEP #$20                            ;;----|CCE7/----\----; Accum (8 bit) 
                      RTS                                 ;;----|CCE9/----\----; Return 
                                                          ;;                   ;
                      RTS                                 ;;----|CCEA/----\----;
                                                          ;;                   ;
                      RTS                                 ;;----|CCEB/----\----;
                                                          ;;                   ;
CODE_01CCEC:          EOR.B #$FF                          ;;----|CCEC/----\----;
                      INC A                               ;;----|CCEE/----\----;
                      RTS                                 ;;----|CCEF/----\----; Return 
                                                          ;;                   ;
CODE_01CCF0:          LDA.W !SpriteMisc1504,X             ;;----|CCF0/----\----;
                      ASL A                               ;;----|CCF3/----\----;
                      ASL A                               ;;----|CCF4/----\----;
                      ASL A                               ;;----|CCF5/----\----;
                      ASL A                               ;;----|CCF6/----\----;
                      CLC                                 ;;----|CCF7/----\----;
                      ADC.W !SpriteMisc1510,X             ;;----|CCF8/----\----;
                      STA.W !SpriteMisc1510,X             ;;----|CCFB/----\----;
                      PHP                                 ;;----|CCFE/----\----;
                      LDY.B #$00                          ;;----|CCFF/----\----;
                      LDA.W !SpriteMisc1504,X             ;;----|CD01/----\----;
                      LSR A                               ;;----|CD04/----\----;
                      LSR A                               ;;----|CD05/----\----;
                      LSR A                               ;;----|CD06/----\----;
                      LSR A                               ;;----|CD07/----\----;
                      CMP.B #$08                          ;;----|CD08/----\----;
                      BCC +                               ;;----|CD0A/----\----;
                      ORA.B #$F0                          ;;----|CD0C/----\----;
                      DEY                                 ;;----|CD0E/----\----;
                    + PLP                                 ;;----|CD0F/----\----;
                      ADC.W !SpriteMisc151C,X             ;;----|CD10/----\----;
                      STA.W !SpriteMisc151C,X             ;;----|CD13/----\----;
                      TYA                                 ;;----|CD16/----\----;
                      ADC.W !SpriteMisc1528,X             ;;----|CD17/----\----;
                      STA.W !SpriteMisc1528,X             ;;----|CD1A/----\----;
                      RTS                                 ;;----|CD1D/----\----; Return 
                                                          ;;                   ;
                      %insert_empty($00,$0C,$06,$06)      ;;----|CD1E/----\----;
                                                          ;;                   ;
PipeKoopaKids:        JSL CODE_03CC09                     ;;----|CD2A/----\----;
                      RTS                                 ;;----|CD2E/----\----; Return 
                                                          ;;                   ;
InitKoopaKid:         LDA.B !SpriteYPosLow,X              ;;----|CD2F/----\----;
                      LSR A                               ;;----|CD31/----\----;
                      LSR A                               ;;----|CD32/----\----;
                      LSR A                               ;;----|CD33/----\----;
                      LSR A                               ;;----|CD34/----\----;
                      STA.B !SpriteTableC2,X              ;;----|CD35/----\----;
                      CMP.B #$05                          ;;----|CD37/----\----;
                      BCC +                               ;;----|CD39/----\----;
                      LDA.B #$78                          ;;----|CD3B/----\----;
                      STA.B !SpriteXPosLow,X              ;;----|CD3D/----\----;
                      LDA.B #$40                          ;;----|CD3F/----\----;
                      STA.B !SpriteYPosLow,X              ;;----|CD41/----\----;
                      LDA.B #$01                          ;;----|CD43/----\----;
                      STA.W !SpriteXPosHigh,X             ;;----|CD45/----\----;
                      LDA.B #$80                          ;;----|CD48/----\----;
                      STA.W !SpriteMisc1540,X             ;;----|CD4A/----\----;
                      RTS                                 ;;----|CD4D/----\----; Return 
                                                          ;;                   ;
                    + LDY.B #$90                          ;;----|CD4E/----\----;
                      STY.B !SpriteYPosLow,X              ;;----|CD50/----\----;
                      CMP.B #$03                          ;;----|CD52/----\----;
                      BCC +                               ;;----|CD54/----\----;
                      JSL CODE_00FCF5                     ;;----|CD56/----\----;
                      JSR FaceMario                       ;;----|CD5A/----\----;
                      RTS                                 ;;----|CD5D/----\----; Return 
                                                          ;;                   ;
                    + LDA.B #$01                          ;;----|CD5E/----\----;
                      STA.W !SpriteMisc157C,X             ;;----|CD60/----\----;
                      LDA.B #$20                          ;;----|CD63/----\----;
                      STA.B !Mode7XScale                  ;;----|CD65/----\----;
                      STA.B !Mode7YScale                  ;;----|CD67/----\----;
                      JSL CODE_03DD7D                     ;;----|CD69/----\----;
                      LDY.B !SpriteTableC2,X              ;;----|CD6D/----\----;
                      LDA.W DATA_01CD92,Y                 ;;----|CD6F/----\----;
                      STA.W !SpriteMisc187B,X             ;;----|CD72/----\----;
                      CMP.B #$01                          ;;----|CD75/----\----;
                      BEQ CODE_01CD87                     ;;----|CD77/----\----;
                      CMP.B #$00                          ;;----|CD79/----\----;
                      BNE +                               ;;----|CD7B/----\----;
                      LDA.B #$70                          ;;----|CD7D/----\----;
                      STA.B !SpriteXPosLow,X              ;;----|CD7F/----\----;
                    + LDA.B #$01                          ;;----|CD81/----\----;
                      STA.W !SpriteYPosHigh,X             ;;----|CD83/----\----;
                      RTS                                 ;;----|CD86/----\----; Return 
                                                          ;;                   ;
CODE_01CD87:          LDA.B #$26                          ;;----|CD87/----\----;
                      STA.W !SpriteMisc1534,X             ;;----|CD89/----\----;
                      LDA.B #$D8                          ;;----|CD8C/----\----;
                      STA.W !SpriteMisc160E,X             ;;----|CD8E/----\----;
                      RTS                                 ;;----|CD91/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
DATA_01CD92:          db $01,$01,$00,$02,$02,$03,$03      ;;----|CD92/----\----;
                                                          ;;                   ;
DATA_01CD99:          db $00,$09,$12                      ;;----|CD99/----\----;
                                                          ;;                   ;
DATA_01CD9C:          db $00,$01,$02,$03,$04,$05,$06,$07  ;;----|CD9C/----\----;
                      db $08                              ;;----|CDA4/----\----;
                                                          ;;                   ;
DATA_01CDA5:          db $00,$80                          ;;----|CDA5/----\----;
                                                          ;;                   ;
CODE_01CDA7:          JSR GetDrawInfoBnk1                 ;;----|CDA7/----\----;
                      RTS                                 ;;----|CDAA/----\----; Return 
                                                          ;;                   ;
WallKoopaKids:        STZ.W !PlayerIsFrozen               ;;----|CDAB/----\----;
                      LDA.W !SpriteMisc1602,X             ;;----|CDAE/----\----;
                      CMP.B #$1B                          ;;----|CDB1/----\----;
                      BCS CODE_01CDD5                     ;;----|CDB3/----\----;
                      LDA.W !SpriteMisc15AC,X             ;;----|CDB5/----\----;
                      CMP.B #$08                          ;;----|CDB8/----\----;
                      LDY.W !SpriteMisc157C,X             ;;----|CDBA/----\----;
                      LDA.W DATA_01CDA5,Y                 ;;----|CDBD/----\----;
                      BCS +                               ;;----|CDC0/----\----;
                      EOR.B #$80                          ;;----|CDC2/----\----;
                    + STA.B !_0                           ;;----|CDC4/----\----;
                      LDY.B !SpriteTableC2,X              ;;----|CDC6/----\----;
                      LDA.W DATA_01CD99,Y                 ;;----|CDC8/----\----;
                      LDY.W !SpriteMisc1602,X             ;;----|CDCB/----\----;
                      CLC                                 ;;----|CDCE/----\----;
                      ADC.W DATA_01CD9C,Y                 ;;----|CDCF/----\----;
                      CLC                                 ;;----|CDD2/----\----;
                      ADC.B !_0                           ;;----|CDD3/----\----;
CODE_01CDD5:          STA.W !Mode7TileIndex               ;;----|CDD5/----\----;
                      JSL CODE_03DEDF                     ;;----|CDD8/----\----;
                      JSR CODE_01CDA7                     ;;----|CDDC/----\----;
                      LDA.B !SpriteLock                   ;;----|CDDF/----\----; \ Branch if sprites locked 
                      BNE Return01CE3D                    ;;----|CDE1/----\----; / 
                      JSR CODE_01D2A8                     ;;----|CDE3/----\----;
                      JSR CODE_01D3B1                     ;;----|CDE6/----\----;
                      LDA.W !SpriteMisc187B,X             ;;----|CDE9/----\----;
                      CMP.B #$01                          ;;----|CDEC/----\----;
                      BEQ +                               ;;----|CDEE/----\----;
                      LDA.W !SpriteMisc163E,X             ;;----|CDF0/----\----;
                      BNE +                               ;;----|CDF3/----\----;
                      LDA.W !SpriteMisc157C,X             ;;----|CDF5/----\----;
                      PHA                                 ;;----|CDF8/----\----;
                      JSR SubHorizPos                     ;;----|CDF9/----\----;
                      TYA                                 ;;----|CDFC/----\----;
                      STA.W !SpriteMisc157C,X             ;;----|CDFD/----\----;
                      PLA                                 ;;----|CE00/----\----;
                      CMP.W !SpriteMisc157C,X             ;;----|CE01/----\----;
                      BEQ +                               ;;----|CE04/----\----;
                      LDA.B #$10                          ;;----|CE06/----\----; \ Set turning timer 
                      STA.W !SpriteMisc15AC,X             ;;----|CE08/----\----; / 
                    + LDA.W !SpriteMisc151C,X             ;;----|CE0B/----\----;
                      JSL ExecutePtr                      ;;----|CE0E/----\----;
                                                          ;;                   ;
                      dw CODE_01CE1E                      ;;----|CE12/----\----;
                      dw CODE_01CE3E                      ;;----|CE14/----\----;
                      dw CODE_01CE5F                      ;;----|CE16/----\----;
                      dw CODE_01CF7D                      ;;----|CE18/----\----;
                      dw CODE_01CFE0                      ;;----|CE1A/----\----;
                      dw CODE_01D043                      ;;----|CE1C/----\----;
                                                          ;;                   ;
CODE_01CE1E:          LDA.W !SpriteMisc187B,X             ;;----|CE1E/----\----;
                      CMP.B #$01                          ;;----|CE21/----\----;
                      BNE +                               ;;----|CE23/----\----;
                      STZ.W !HorizLayer1Setting           ;;----|CE25/----\----;
                      INC.W !BossPillarFalling            ;;----|CE28/----\----;
                      STZ.W !BossPillarYPos               ;;----|CE2B/----\----;
                      INC.B !SpriteLock                   ;;----|CE2E/----\----;
                      INC.W !SpriteMisc151C,X             ;;----|CE30/----\----;
                      RTS                                 ;;----|CE33/----\----; Return 
                                                          ;;                   ;
                    + LDA.B !Layer1XPos                   ;;----|CE34/----\----;
                      CMP.B #$7E                          ;;----|CE36/----\----;
                      BCC Return01CE3D                    ;;----|CE38/----\----;
                      INC.W !SpriteMisc151C,X             ;;----|CE3A/----\----;
Return01CE3D:         RTS                                 ;;----|CE3D/----\----; Return 
                                                          ;;                   ;
CODE_01CE3E:          STZ.B !PlayerXSpeed                 ;;----|CE3E/----\----;
                      JSR SubSprYPosNoGrvty               ;;----|CE40/----\----;
                      LDA.B !SpriteYSpeed,X               ;;----|CE43/----\----;
                      CMP.B #$40                          ;;----|CE45/----\----;
                      BPL +                               ;;----|CE47/----\----;
                      CLC                                 ;;----|CE49/----\----;
                      ADC.B #$03                          ;;----|CE4A/----\----;
                    + STA.B !SpriteYSpeed,X               ;;----|CE4C/----\----;
                      JSR CODE_01D0C0                     ;;----|CE4E/----\----;
                      BCC Return01CE3D                    ;;----|CE51/----\----;
                      INC.W !SpriteMisc151C,X             ;;----|CE53/----\----;
                      LDA.B !SpriteTableC2,X              ;;----|CE56/----\----;
                      CMP.B #$02                          ;;----|CE58/----\----;
                      BCC Return01CE3D                    ;;----|CE5A/----\----;
                      JMP CODE_01CEA8                     ;;----|CE5C/----\----;
                                                          ;;                   ;
CODE_01CE5F:          LDA.B !SpriteTableC2,X              ;;----|CE5F/----\----;
                      JSL ExecutePtr                      ;;----|CE61/----\----;
                                                          ;;                   ;
                      dw CODE_01D116                      ;;----|CE65/----\----;
                      dw CODE_01D116                      ;;----|CE67/----\----;
                      dw CODE_01CE6B                      ;;----|CE69/----\----;
                                                          ;;                   ;
CODE_01CE6B:          LDA.W !SpriteMisc1528,X             ;;----|CE6B/----\----;
                      JSL ExecutePtr                      ;;----|CE6E/----\----;
                                                          ;;                   ;
                      dw CODE_01CE78                      ;;----|CE72/----\----;
                      dw CODE_01CEB6                      ;;----|CE74/----\----;
                      dw CODE_01CEFD                      ;;----|CE76/----\----;
                                                          ;;                   ;
CODE_01CE78:          STZ.B !Mode7Angle                   ;;----|CE78/----\----;
                      STZ.B !Mode7Angle+1                 ;;----|CE7A/----\----;
                      LDA.W !SpriteMisc1540,X             ;;----|CE7C/----\----;
                      BEQ CODE_01CEA5                     ;;----|CE7F/----\----;
                      LDY.B #$03                          ;;----|CE81/----\----;
                      AND.B #$30                          ;;----|CE83/----\----;
                      BNE +                               ;;----|CE85/----\----;
                      INY                                 ;;----|CE87/----\----;
                    + TYA                                 ;;----|CE88/----\----;
                      LDY.W !SpriteMisc15AC,X             ;;----|CE89/----\----;
                      BEQ +                               ;;----|CE8C/----\----;
                      LDA.B #$05                          ;;----|CE8E/----\----;
                    + STA.W !SpriteMisc1602,X             ;;----|CE90/----\----;
                      LDA.W !SpriteMisc1540,X             ;;----|CE93/----\----;
                      AND.B #$3F                          ;;----|CE96/----\----;
                      CMP.B #$2E                          ;;----|CE98/----\----;
                      BNE +                               ;;----|CE9A/----\----;
                      LDA.B #$30                          ;;----|CE9C/----\----;
                      STA.W !SpriteMisc163E,X             ;;----|CE9E/----\----;
                      JSR CODE_01D059                     ;;----|CEA1/----\----;
                    + RTS                                 ;;----|CEA4/----\----; Return 
                                                          ;;                   ;
CODE_01CEA5:          INC.W !SpriteMisc1528,X             ;;----|CEA5/----\----;
CODE_01CEA8:          LDA.B #$FF                          ;;----|CEA8/----\----;
                      STA.W !SpriteMisc1540,X             ;;----|CEAA/----\----;
                      RTS                                 ;;----|CEAD/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
DATA_01CEAE:          db $30,$D0                          ;;----|CEAE/----\----;
                                                          ;;                   ;
DATA_01CEB0:          db $1B,$1C,$1D,$1B                  ;;----|CEB0/----\----;
                                                          ;;                   ;
DATA_01CEB4:          db $14,$EC                          ;;----|CEB4/----\----;
                                                          ;;                   ;
CODE_01CEB6:          LDA.W !SpriteMisc1540,X             ;;----|CEB6/----\----;
                      BNE +                               ;;----|CEB9/----\----;
                      JSR SubHorizPos                     ;;----|CEBB/----\----;
                      TYA                                 ;;----|CEBE/----\----;
                      CMP.W !SpriteYPosHigh,X             ;;----|CEBF/----\----;
                      BNE +                               ;;----|CEC2/----\----;
                      INC.W !SpriteMisc1528,X             ;;----|CEC4/----\----;
                      LDA.W DATA_01CEB4,Y                 ;;----|CEC7/----\----;
                      STA.W !SpriteMisc160E,X             ;;----|CECA/----\----;
                      LDA.B #$30                          ;;----|CECD/----\----;
                      STA.W !SpriteMisc1540,X             ;;----|CECF/----\----;
                      LDA.B #$60                          ;;----|CED2/----\----;
                      STA.W !SpriteMisc1558,X             ;;----|CED4/----\----;
                      LDA.B #$D8                          ;;----|CED7/----\----;
                      STA.B !SpriteYSpeed,X               ;;----|CED9/----\----;
                      RTS                                 ;;----|CEDB/----\----; Return 
                                                          ;;                   ;
                    + JSR SubHorizPos                     ;;----|CEDC/----\----;
                      LDA.B !SpriteXSpeed,X               ;;----|CEDF/----\----;
                      CMP.W DATA_01CEAE,Y                 ;;----|CEE1/----\----;
                      BEQ +                               ;;----|CEE4/----\----;
                      CLC                                 ;;----|CEE6/----\----;
                      ADC.W DATA_01D4E7,Y                 ;;----|CEE7/----\----;
                      STA.B !SpriteXSpeed,X               ;;----|CEEA/----\----;
                    + JSR SubSprXPosNoGrvty               ;;----|CEEC/----\----;
                      LDA.B !EffFrame                     ;;----|CEEF/----\----;
                      LSR A                               ;;----|CEF1/----\----;
                      LSR A                               ;;----|CEF2/----\----;
                      AND.B #$03                          ;;----|CEF3/----\----;
                      TAY                                 ;;----|CEF5/----\----;
                      LDA.W DATA_01CEB0,Y                 ;;----|CEF6/----\----;
                      STA.W !SpriteMisc1602,X             ;;----|CEF9/----\----;
                      RTS                                 ;;----|CEFC/----\----; Return 
                                                          ;;                   ;
CODE_01CEFD:          LDA.W !SpriteMisc1540,X             ;;----|CEFD/----\----;
                      BEQ CODE_01CF1C                     ;;----|CF00/----\----;
                      DEC A                               ;;----|CF02/----\----;
                      BNE +                               ;;----|CF03/----\----;
                      LDA.W !SpriteMisc160E,X             ;;----|CF05/----\----;
                      STA.B !SpriteXSpeed,X               ;;----|CF08/----\----;
                      LDA.B #$08                          ;;----|CF0A/----\----; \ Play sound effect 
                      STA.W !SPCIO3                       ;;----|CF0C/----\----; / 
                    + LDA.B !SpriteXSpeed,X               ;;----|CF0F/----\----;
                      BEQ Return01CF1B                    ;;----|CF11/----\----;
                      BPL +                               ;;----|CF13/----\----;
                      INC.B !SpriteXSpeed,X               ;;----|CF15/----\----;
                      INC.B !SpriteXSpeed,X               ;;----|CF17/----\----;
                    + DEC.B !SpriteXSpeed,X               ;;----|CF19/----\----;
Return01CF1B:         RTS                                 ;;----|CF1B/----\----; Return 
                                                          ;;                   ;
CODE_01CF1C:          JSR CODE_01D0C0                     ;;----|CF1C/----\----;
                      BCC +                               ;;----|CF1F/----\----;
                      LDA.B !SpriteYSpeed,X               ;;----|CF21/----\----;
                      BMI +                               ;;----|CF23/----\----;
                      STZ.B !SpriteXSpeed,X               ;;----|CF25/----\----; \ Sprite Speed = 0 
                      STZ.B !SpriteYSpeed,X               ;;----|CF27/----\----; / 
                      STZ.W !SpriteMisc1528,X             ;;----|CF29/----\----;
                      JMP CODE_01CEA8                     ;;----|CF2C/----\----;
                                                          ;;                   ;
                    + JSR SubSprXPosNoGrvty               ;;----|CF2F/----\----;
                      JSR SubSprYPosNoGrvty               ;;----|CF32/----\----;
                      LDA.B !TrueFrame                    ;;----|CF35/----\----;
                      LSR A                               ;;----|CF37/----\----;
                      BCS CODE_01CF44                     ;;----|CF38/----\----;
                      LDA.B !SpriteYSpeed,X               ;;----|CF3A/----\----;
                      BMI CODE_01CF42                     ;;----|CF3C/----\----;
                      CMP.B #$70                          ;;----|CF3E/----\----;
                      BCS CODE_01CF44                     ;;----|CF40/----\----;
CODE_01CF42:          INC.B !SpriteYSpeed,X               ;;----|CF42/----\----;
CODE_01CF44:          LDA.W !SpriteMisc1558,X             ;;----|CF44/----\----;
                      BNE CODE_01CF4F                     ;;----|CF47/----\----;
                      LDA.B !Mode7Angle                   ;;----|CF49/----\----;
                      ORA.B !Mode7Angle+1                 ;;----|CF4B/----\----;
                      BEQ CODE_01CF67                     ;;----|CF4D/----\----;
CODE_01CF4F:          LDA.B !SpriteXSpeed,X               ;;----|CF4F/----\----;
                      ASL A                               ;;----|CF51/----\----;
                      LDA.B #$04                          ;;----|CF52/----\----;
                      LDY.B #$00                          ;;----|CF54/----\----;
                      BCC +                               ;;----|CF56/----\----;
                      LDA.B #$FC                          ;;----|CF58/----\----;
                      DEY                                 ;;----|CF5A/----\----;
                    + CLC                                 ;;----|CF5B/----\----;
                      ADC.B !Mode7Angle                   ;;----|CF5C/----\----;
                      STA.B !Mode7Angle                   ;;----|CF5E/----\----;
                      TYA                                 ;;----|CF60/----\----;
                      ADC.B !Mode7Angle+1                 ;;----|CF61/----\----;
                      AND.B #$01                          ;;----|CF63/----\----;
                      STA.B !Mode7Angle+1                 ;;----|CF65/----\----;
CODE_01CF67:          LDA.B #$06                          ;;----|CF67/----\----;
                      LDY.B !SpriteYSpeed,X               ;;----|CF69/----\----;
                      BMI +                               ;;----|CF6B/----\----;
                      CPY.B #$08                          ;;----|CF6D/----\----;
                      BCC +                               ;;----|CF6F/----\----;
                      LDA.B #$05                          ;;----|CF71/----\----;
                      CPY.B #$10                          ;;----|CF73/----\----;
                      BCC +                               ;;----|CF75/----\----;
                      LDA.B #$02                          ;;----|CF77/----\----;
                    + STA.W !SpriteMisc1602,X             ;;----|CF79/----\----;
                      RTS                                 ;;----|CF7C/----\----; Return 
                                                          ;;                   ;
CODE_01CF7D:          JSR SubSprYPosNoGrvty               ;;----|CF7D/----\----;
                      INC.B !SpriteYSpeed,X               ;;----|CF80/----\----;
                      JSR CODE_01D0C0                     ;;----|CF82/----\----;
                      LDA.W !SpriteMisc1540,X             ;;----|CF85/----\----;
                      BEQ CODE_01CFB7                     ;;----|CF88/----\----;
                      CMP.B #$40                          ;;----|CF8A/----\----;
                      BCC CODE_01CF9E                     ;;----|CF8C/----\----;
                      BEQ CODE_01CFC6                     ;;----|CF8E/----\----;
                      LDY.B #$06                          ;;----|CF90/----\----;
                      LDA.B !EffFrame                     ;;----|CF92/----\----;
                      AND.B #$04                          ;;----|CF94/----\----;
                      BEQ +                               ;;----|CF96/----\----;
                      INY                                 ;;----|CF98/----\----;
                    + TYA                                 ;;----|CF99/----\----;
                      STA.W !SpriteMisc1602,X             ;;----|CF9A/----\----;
                      RTS                                 ;;----|CF9D/----\----; Return 
                                                          ;;                   ;
CODE_01CF9E:          LDY.W !Empty18A6                    ;;----|CF9E/----\----;
                      LDA.B !Mode7XScale                  ;;----|CFA1/----\----;
                      CMP.B #$20                          ;;----|CFA3/----\----;
                      BEQ +                               ;;----|CFA5/----\----;
                      INC.B !Mode7XScale                  ;;----|CFA7/----\----;
                    + LDA.B !Mode7YScale                  ;;----|CFA9/----\----;
                      CMP.B #$20                          ;;----|CFAB/----\----;
                      BEQ +                               ;;----|CFAD/----\----;
                      DEC.B !Mode7YScale                  ;;----|CFAF/----\----;
                    + LDA.B #$07                          ;;----|CFB1/----\----;
                      STA.W !SpriteMisc1602,X             ;;----|CFB3/----\----;
                      RTS                                 ;;----|CFB6/----\----; Return 
                                                          ;;                   ;
CODE_01CFB7:          LDA.B #$02                          ;;----|CFB7/----\----;
                      STA.W !SpriteMisc151C,X             ;;----|CFB9/----\----;
                      LDA.B !SpriteTableC2,X              ;;----|CFBC/----\----;
                      BEQ +                               ;;----|CFBE/----\----;
                      LDA.B #$20                          ;;----|CFC0/----\----;
                      STA.W !SpriteInLiquid,X             ;;----|CFC2/----\----;
                    + RTS                                 ;;----|CFC5/----\----; Return 
                                                          ;;                   ;
CODE_01CFC6:          INC.W !SpriteMisc1626,X             ;;----|CFC6/----\----;
                      LDA.W !SpriteMisc1626,X             ;;----|CFC9/----\----;
                      CMP.B #$03                          ;;----|CFCC/----\----;
                      BCC +                               ;;----|CFCE/----\----;
CODE_01CFD0:          LDA.B #$1F                          ;;----|CFD0/----\----; \ Play sound effect 
                      STA.W !SPCIO0                       ;;----|CFD2/----\----; / 
                      LDA.B #$04                          ;;----|CFD5/----\----;
                      STA.W !SpriteMisc151C,X             ;;----|CFD7/----\----;
                      LDA.B #$13                          ;;----|CFDA/----\----;
                      STA.W !SpriteMisc1540,X             ;;----|CFDC/----\----;
                    + RTS                                 ;;----|CFDF/----\----; Return 
                                                          ;;                   ;
CODE_01CFE0:          LDY.W !SpriteMisc1540,X             ;;----|CFE0/----\----;
                      BEQ CODE_01CFFC                     ;;----|CFE3/----\----;
                      LDA.B !SpriteYPosLow,X              ;;----|CFE5/----\----;
                      SEC                                 ;;----|CFE7/----\----;
                      SBC.B #$01                          ;;----|CFE8/----\----;
                      STA.B !SpriteYPosLow,X              ;;----|CFEA/----\----;
                      BCS +                               ;;----|CFEC/----\----;
                      DEC.W !SpriteXPosHigh,X             ;;----|CFEE/----\----;
                    + DEC.B !Mode7YScale                  ;;----|CFF1/----\----;
                      TYA                                 ;;----|CFF3/----\----;
                      AND.B #$03                          ;;----|CFF4/----\----;
                      BEQ +                               ;;----|CFF6/----\----;
                      DEC.B !Mode7XScale                  ;;----|CFF8/----\----;
                    + BRA +                               ;;----|CFFA/----\----;
                                                          ;;                   ;
CODE_01CFFC:          LDA.B !Mode7Angle                   ;;----|CFFC/----\----;
                      CLC                                 ;;----|CFFE/----\----;
                      ADC.B #$06                          ;;----|CFFF/----\----;
                      STA.B !Mode7Angle                   ;;----|D001/----\----;
                      LDA.B !Mode7Angle+1                 ;;----|D003/----\----;
                      ADC.B #$00                          ;;----|D005/----\----;
                      AND.B #$01                          ;;----|D007/----\----;
                      STA.B !Mode7Angle+1                 ;;----|D009/----\----;
                      INC.B !Mode7XScale                  ;;----|D00B/----\----;
                      INC.B !Mode7YScale                  ;;----|D00D/----\----;
                    + LDA.B !Mode7YScale                  ;;----|D00F/----\----;
                   if !_VER <= 1                ;\   IF   ;;+++++++++++++++++++; J & U
                      CMP.B #$A0                          ;;----|D011          ;
                   else                         ;<  ELSE  ;;-------------------; E0 & E1
                      CMP.B #$80                          ;;         /----\----;
                   endif                        ;/ ENDIF  ;;+++++++++++++++++++;
                      BCC Return01D042                    ;;----|D013/----\----;
                      LDA.W !SpriteOffscreenX,X           ;;----|D015/----\----;
                      BNE +                               ;;----|D018/----\----;
                      LDA.B #$01                          ;;----|D01A/----\----;
                      STA.W !SmokeSpriteNumber            ;;----|D01C/----\----;
                      LDA.B !SpriteXPosLow,X              ;;----|D01F/----\----;
                      SBC.B #$08                          ;;----|D021/----\----;
                      STA.W !SmokeSpriteXPos              ;;----|D023/----\----;
                      LDA.B !SpriteYPosLow,X              ;;----|D026/----\----;
                      ADC.B #$08                          ;;----|D028/----\----;
                      STA.W !SmokeSpriteYPos              ;;----|D02A/----\----;
                      LDA.B #$1B                          ;;----|D02D/----\----;
                      STA.W !SmokeSpriteTimer             ;;----|D02F/----\----;
                    + LDA.B #$D0                          ;;----|D032/----\----;
                      STA.B !SpriteYPosLow,X              ;;----|D034/----\----;
                      JSL CODE_03DEDF                     ;;----|D036/----\----;
                      INC.W !SpriteMisc151C,X             ;;----|D03A/----\----;
                      LDA.B #$30                          ;;----|D03D/----\----;
                      STA.W !SpriteMisc1540,X             ;;----|D03F/----\----;
Return01D042:         RTS                                 ;;----|D042/----\----; Return 
                                                          ;;                   ;
CODE_01D043:          LDA.W !SpriteMisc1540,X             ;;----|D043/----\----;
                      BNE +                               ;;----|D046/----\----;
                      INC.W !CutsceneID                   ;;----|D048/----\----;
                      DEC.W !EndLevelTimer                ;;----|D04B/----\----;
                      LDA.B #$0B                          ;;----|D04E/----\----;
                      STA.W !SPCIO2                       ;;----|D050/----\----; / Change music 
                      STZ.W !SpriteStatus,X               ;;----|D053/----\----;
                    + RTS                                 ;;----|D056/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
DATA_01D057:          db $FF,$F1                          ;;----|D057/----\----;
                                                          ;;                   ;
CODE_01D059:          LDA.B #$17                          ;;----|D059/----\----; \ Play sound effect 
                      STA.W !SPCIO3                       ;;----|D05B/----\----; / 
                      LDY.B #$04                          ;;----|D05E/----\----;
CODE_01D060:          LDA.W !SpriteStatus,Y               ;;----|D060/----\----;
                      BEQ CODE_01D069                     ;;----|D063/----\----;
                      DEY                                 ;;----|D065/----\----;
                      BPL CODE_01D060                     ;;----|D066/----\----;
                      RTS                                 ;;----|D068/----\----; Return 
                                                          ;;                   ;
CODE_01D069:          LDA.B #$08                          ;;----|D069/----\----; \ Sprite status = Normal 
                      STA.W !SpriteStatus,Y               ;;----|D06B/----\----; / 
                      LDA.B #$34                          ;;----|D06E/----\----;
                      STA.W !SpriteNumber,Y               ;;----|D070/----\----;
                      LDA.B !SpriteXPosLow,X              ;;----|D073/----\----;
                      STA.B !_0                           ;;----|D075/----\----;
                      LDA.W !SpriteYPosHigh,X             ;;----|D077/----\----;
                      STA.B !_1                           ;;----|D07A/----\----;
                      LDA.B !SpriteYPosLow,X              ;;----|D07C/----\----;
                      CLC                                 ;;----|D07E/----\----;
                      ADC.B #$03                          ;;----|D07F/----\----;
                      STA.W !SpriteYPosLow,Y              ;;----|D081/----\----;
                      LDA.W !SpriteXPosHigh,X             ;;----|D084/----\----;
                      ADC.B #$00                          ;;----|D087/----\----;
                      STA.W !SpriteXPosHigh,Y             ;;----|D089/----\----;
                      LDA.W !SpriteMisc157C,X             ;;----|D08C/----\----;
                      PHX                                 ;;----|D08F/----\----;
                      TAX                                 ;;----|D090/----\----;
                      LDA.B !_0                           ;;----|D091/----\----;
                      CLC                                 ;;----|D093/----\----;
                      ADC.W DATA_01D057,X                 ;;----|D094/----\----;
                      STA.W !SpriteXPosLow,Y              ;;----|D097/----\----;
                      LDA.B !_1                           ;;----|D09A/----\----;
                      ADC.B #$FF                          ;;----|D09C/----\----;
                      STA.W !SpriteYPosHigh,Y             ;;----|D09E/----\----;
                      PLX                                 ;;----|D0A1/----\----;
                      PHX                                 ;;----|D0A2/----\----;
                      TYX                                 ;;----|D0A3/----\----;
                      JSL InitSpriteTables                ;;----|D0A4/----\----;
                      PLX                                 ;;----|D0A8/----\----;
                      PHX                                 ;;----|D0A9/----\----;
                      LDA.W !SpriteMisc157C,X             ;;----|D0AA/----\----;
                      STA.W !SpriteMisc157C,Y             ;;----|D0AD/----\----;
                      TAX                                 ;;----|D0B0/----\----;
                      LDA.W DATA_01D0BE,X                 ;;----|D0B1/----\----;
                      STA.W !SpriteXSpeed,Y               ;;----|D0B4/----\----;
                      LDA.B #$30                          ;;----|D0B7/----\----;
                      STA.W !SpriteMisc1540,Y             ;;----|D0B9/----\----;
                      PLX                                 ;;----|D0BC/----\----;
                      RTS                                 ;;----|D0BD/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
DATA_01D0BE:          db $20,$E0                          ;;----|D0BE/----\----;
                                                          ;;                   ;
CODE_01D0C0:          LDA.B !SpriteYSpeed,X               ;;----|D0C0/----\----;
                      BMI +                               ;;----|D0C2/----\----;
                      LDA.W !SpriteXPosHigh,X             ;;----|D0C4/----\----;
                      BNE +                               ;;----|D0C7/----\----;
                      LDA.B !Mode7YScale                  ;;----|D0C9/----\----;
                      LSR A                               ;;----|D0CB/----\----;
                      TAY                                 ;;----|D0CC/----\----;
                      LDA.B !SpriteYPosLow,X              ;;----|D0CD/----\----;
                      CMP.W DATA_01D0DE-8,Y               ;;----|D0CF/----\----;
                      BCC +                               ;;----|D0D2/----\----;
                      LDA.W DATA_01D0DE-8,Y               ;;----|D0D4/----\----;
                      STA.B !SpriteYPosLow,X              ;;----|D0D7/----\----;
                      STZ.B !SpriteYSpeed,X               ;;----|D0D9/----\----; Sprite Y Speed = 0 
                      RTS                                 ;;----|D0DB/----\----; Return 
                                                          ;;                   ;
                    + CLC                                 ;;----|D0DC/----\----;
                      RTS                                 ;;----|D0DD/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
DATA_01D0DE:          db $80,$83,$85,$88,$8A,$8B,$8D,$8F  ;;----|D0DE/----\----;
                      db $90,$91,$91,$92,$92,$93,$93,$94  ;;----|D0E6/----\----;
                      db $94,$95,$95,$96,$96,$97,$97,$98  ;;----|D0EE/----\----;
                      db $98,$98,$99,$99,$9A,$9A,$9B,$9B  ;;----|D0F6/----\----;
                      db $9C,$9C,$9C,$9C,$9D,$9D,$9D,$9D  ;;----|D0FE/----\----;
                      db $9E,$9E,$9E,$9E,$9E,$9F,$9F,$9F  ;;----|D106/----\----;
                      db $9F,$9F,$9F,$9F,$9F,$9F,$9F,$9F  ;;----|D10E/----\----;
                                                          ;;                   ;
CODE_01D116:          LDA.W !SpriteMisc1528,X             ;;----|D116/----\----;
                      JSL ExecutePtr                      ;;----|D119/----\----;
                                                          ;;                   ;
                      dw CODE_01D146                      ;;----|D11D/----\----;
                      dw CODE_01D23F                      ;;----|D11F/----\----;
                                                          ;;                   ;
                      RTS                                 ;;----|D121/----\----;
                                                          ;;                   ;
                                                          ;;                   ;
DATA_01D122:          db $F0,$00,$10,$00,$F0,$00,$10,$00  ;;----|D122/----\----;
                      db $E8,$00,$18,$00                  ;;----|D12A/----\----;
                                                          ;;                   ;
DATA_01D12E:          db $00,$F0,$00,$10,$00,$F0,$00,$10  ;;----|D12E/----\----;
                      db $00,$E8,$00,$18,$26,$26,$D8,$D8  ;;----|D136/----\----;
DATA_01D13E:          db $90,$30,$30,$90                  ;;----|D13E/----\----;
                                                          ;;                   ;
DATA_01D142:          db $00,$01,$02,$01                  ;;----|D142/----\----;
                                                          ;;                   ;
CODE_01D146:          LDA.B !EffFrame                     ;;----|D146/----\----;
                      LSR A                               ;;----|D148/----\----;
                      LDY.W !SpriteMisc1626,X             ;;----|D149/----\----;
                      CPY.B #$02                          ;;----|D14C/----\----;
                      BCS +                               ;;----|D14E/----\----;
                      LSR A                               ;;----|D150/----\----;
                    + AND.B #$03                          ;;----|D151/----\----;
                      TAY                                 ;;----|D153/----\----;
                      LDA.W DATA_01D142,Y                 ;;----|D154/----\----;
                      LDY.W !SpriteMisc15AC,X             ;;----|D157/----\----;
                      BEQ +                               ;;----|D15A/----\----;
                      LDA.B #$05                          ;;----|D15C/----\----;
                    + STA.W !SpriteMisc1602,X             ;;----|D15E/----\----;
                      LDA.W !SpriteInLiquid,X             ;;----|D161/----\----;
                      BEQ +                               ;;----|D164/----\----;
                      LDY.B !SpriteXPosLow,X              ;;----|D166/----\----;
                      CPY.B #$50                          ;;----|D168/----\----;
                      BCC +                               ;;----|D16A/----\----;
                      CPY.B #$80                          ;;----|D16C/----\----;
                      BCS +                               ;;----|D16E/----\----;
                      DEC.W !SpriteInLiquid,X             ;;----|D170/----\----;
                      LSR A                               ;;----|D173/----\----;
                      BCS +                               ;;----|D174/----\----;
                      INC.W !SpriteMisc1534,X             ;;----|D176/----\----;
                      DEC.W !SpriteMisc160E,X             ;;----|D179/----\----;
                    + LDA.W !SpriteMisc1534,X             ;;----|D17C/----\----;
                      STA.B !_5                           ;;----|D17F/----\----;
                      STA.B !_6                           ;;----|D181/----\----;
                      STA.B !_B                           ;;----|D183/----\----;
                      STA.B !_C                           ;;----|D185/----\----;
                      LDA.W !SpriteMisc160E,X             ;;----|D187/----\----;
                      STA.B !_7                           ;;----|D18A/----\----;
                      STA.B !_8                           ;;----|D18C/----\----;
                      STA.B !_9                           ;;----|D18E/----\----;
                      STA.B !_A                           ;;----|D190/----\----;
                      LDA.B !Mode7Angle                   ;;----|D192/----\----;
                      ASL A                               ;;----|D194/----\----;
                      BEQ +                               ;;----|D195/----\----;
                      JMP CODE_01D224                     ;;----|D197/----\----;
                                                          ;;                   ;
                    + LDY.W !SpriteMisc1594,X             ;;----|D19A/----\----;
                      TYA                                 ;;----|D19D/----\----;
                      LSR A                               ;;----|D19E/----\----;
                      BCS CODE_01D1B5                     ;;----|D19F/----\----;
                      LDA.B !SpriteXPosLow,X              ;;----|D1A1/----\----;
                      CPY.B #$00                          ;;----|D1A3/----\----;
                      BNE CODE_01D1AE                     ;;----|D1A5/----\----;
                      CMP.W !SpriteMisc1534,X             ;;----|D1A7/----\----;
                      BCC CODE_01D215                     ;;----|D1AA/----\----;
                      BRA CODE_01D1D8                     ;;----|D1AC/----\----;
                                                          ;;                   ;
CODE_01D1AE:          CMP.W !SpriteMisc160E,X             ;;----|D1AE/----\----;
                      BCS CODE_01D215                     ;;----|D1B1/----\----;
                      BRA CODE_01D1D8                     ;;----|D1B3/----\----;
                                                          ;;                   ;
CODE_01D1B5:          LDA.W !SpriteMisc157C,X             ;;----|D1B5/----\----;
                      BNE +                               ;;----|D1B8/----\----;
                      INY                                 ;;----|D1BA/----\----;
                      INY                                 ;;----|D1BB/----\----;
                      INY                                 ;;----|D1BC/----\----;
                      INY                                 ;;----|D1BD/----\----;
                    + LDA.W !_5,Y                         ;;----|D1BE/----\----;
                      STA.B !SpriteXPosLow,X              ;;----|D1C1/----\----;
                      LDY.W !SpriteMisc1594,X             ;;----|D1C3/----\----;
                      LDA.B !SpriteYPosLow,X              ;;----|D1C6/----\----;
                      CPY.B #$03                          ;;----|D1C8/----\----;
                      BEQ ADDR_01D1D3                     ;;----|D1CA/----\----;
                      CMP.W DATA_01D13E,Y                 ;;----|D1CC/----\----;
                      BCC CODE_01D215                     ;;----|D1CF/----\----;
                      BRA CODE_01D1D8                     ;;----|D1D1/----\----;
                                                          ;;                   ;
ADDR_01D1D3:          CMP.W DATA_01D13E,Y                 ;;----|D1D3/----\----;
                      BCS CODE_01D215                     ;;----|D1D6/----\----;
CODE_01D1D8:          LDA.W !SpriteMisc1626,X             ;;----|D1D8/----\----;
                      CMP.B #$02                          ;;----|D1DB/----\----;
                      BCC +                               ;;----|D1DD/----\----;
                      LDA.B #$02                          ;;----|D1DF/----\----;
                    + ASL A                               ;;----|D1E1/----\----;
                      ASL A                               ;;----|D1E2/----\----;
                      ADC.W !SpriteMisc1594,X             ;;----|D1E3/----\----;
                      TAY                                 ;;----|D1E6/----\----;
                      LDA.W DATA_01D122,Y                 ;;----|D1E7/----\----;
                      STA.B !SpriteXSpeed,X               ;;----|D1EA/----\----;
                      LDA.W DATA_01D12E,Y                 ;;----|D1EC/----\----;
                      STA.B !SpriteYSpeed,X               ;;----|D1EF/----\----;
                      JSR SubSprXPosNoGrvty               ;;----|D1F1/----\----;
                      JSR SubSprYPosNoGrvty               ;;----|D1F4/----\----;
                      LDA.W !SpriteMisc1594,X             ;;----|D1F7/----\----;
                      LDY.W !SpriteMisc157C,X             ;;----|D1FA/----\----;
                      BNE +                               ;;----|D1FD/----\----;
                      EOR.B #$02                          ;;----|D1FF/----\----;
                    + CMP.B #$02                          ;;----|D201/----\----;
                      BNE +                               ;;----|D203/----\----;
                      JSR SubHorizPos                     ;;----|D205/----\----;
                      LDA.B !_F                           ;;----|D208/----\----;
                      CLC                                 ;;----|D20A/----\----;
                      ADC.B #$10                          ;;----|D20B/----\----;
                      CMP.B #$20                          ;;----|D20D/----\----;
                      BCS +                               ;;----|D20F/----\----;
                      INC.W !SpriteMisc1528,X             ;;----|D211/----\----;
                    + RTS                                 ;;----|D214/----\----; Return 
                                                          ;;                   ;
CODE_01D215:          LDY.W !SpriteMisc157C,X             ;;----|D215/----\----;
                      LDA.W !SpriteMisc1594,X             ;;----|D218/----\----;
                      CLC                                 ;;----|D21B/----\----;
                      ADC.W DATA_01D23D,Y                 ;;----|D21C/----\----;
                      AND.B #$03                          ;;----|D21F/----\----;
                      STA.W !SpriteMisc1594,X             ;;----|D221/----\----;
CODE_01D224:          LDY.W !SpriteMisc157C,X             ;;----|D224/----\----;
                      LDA.B !Mode7Angle                   ;;----|D227/----\----;
                      CLC                                 ;;----|D229/----\----;
                      ADC.W DATA_01D239,Y                 ;;----|D22A/----\----;
                      STA.B !Mode7Angle                   ;;----|D22D/----\----;
                      LDA.B !Mode7Angle+1                 ;;----|D22F/----\----;
                      ADC.W DATA_01D23B,Y                 ;;----|D231/----\----;
                      AND.B #$01                          ;;----|D234/----\----;
                      STA.B !Mode7Angle+1                 ;;----|D236/----\----;
                      RTS                                 ;;----|D238/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
DATA_01D239:          db $FC,$04                          ;;----|D239/----\----;
                                                          ;;                   ;
DATA_01D23B:          db $FF,$00                          ;;----|D23B/----\----;
                                                          ;;                   ;
DATA_01D23D:          db $FF,$01                          ;;----|D23D/----\----;
                                                          ;;                   ;
CODE_01D23F:          LDA.W !SpriteMisc1540,X             ;;----|D23F/----\----;
                      BEQ CODE_01D25E                     ;;----|D242/----\----;
                      CMP.B #$01                          ;;----|D244/----\----;
                      BNE Return01D2A7                    ;;----|D246/----\----;
                      STZ.W !SpriteMisc1528,X             ;;----|D248/----\----;
                      JSR SubHorizPos                     ;;----|D24B/----\----;
                      TYA                                 ;;----|D24E/----\----;
                      STA.W !SpriteMisc157C,X             ;;----|D24F/----\----;
                      ASL A                               ;;----|D252/----\----;
                      EOR.B #$02                          ;;----|D253/----\----;
                      STA.W !SpriteMisc1594,X             ;;----|D255/----\----;
                      LDA.B #$0A                          ;;----|D258/----\----; \ Set turning timer 
                      STA.W !SpriteMisc15AC,X             ;;----|D25A/----\----; / 
                      RTS                                 ;;----|D25D/----\----; Return 
                                                          ;;                   ;
CODE_01D25E:          LDA.B #$06                          ;;----|D25E/----\----;
                      STA.W !SpriteMisc1602,X             ;;----|D260/----\----;
                      JSR SubSprYPosNoGrvty               ;;----|D263/----\----;
                      LDA.B !SpriteYSpeed,X               ;;----|D266/----\----;
                      CMP.B #$70                          ;;----|D268/----\----;
                      BCS +                               ;;----|D26A/----\----;
                      CLC                                 ;;----|D26C/----\----;
                      ADC.B #$04                          ;;----|D26D/----\----;
                      STA.B !SpriteYSpeed,X               ;;----|D26F/----\----;
                    + LDA.B !Mode7Angle                   ;;----|D271/----\----;
                      ORA.B !Mode7Angle+1                 ;;----|D273/----\----;
                      BEQ +                               ;;----|D275/----\----;
                      LDA.B !Mode7Angle                   ;;----|D277/----\----;
                      CLC                                 ;;----|D279/----\----;
                      ADC.B #$08                          ;;----|D27A/----\----;
                      STA.B !Mode7Angle                   ;;----|D27C/----\----;
                      LDA.B !Mode7Angle+1                 ;;----|D27E/----\----;
                      ADC.B #$00                          ;;----|D280/----\----;
                      AND.B #$01                          ;;----|D282/----\----;
                      STA.B !Mode7Angle+1                 ;;----|D284/----\----;
                    + JSR CODE_01D0C0                     ;;----|D286/----\----;
                      BCC Return01D2A7                    ;;----|D289/----\----;
                      LDA.B #$20                          ;;----|D28B/----\----; \ Set ground shake timer 
                      STA.W !ScreenShakeTimer             ;;----|D28D/----\----; / 
                      LDA.B !PlayerInAir                  ;;----|D290/----\----;
                      BNE +                               ;;----|D292/----\----;
                      LDA.B #$28                          ;;----|D294/----\----; \ Lock Mario in place 
                      STA.W !PlayerStunnedTimer           ;;----|D296/----\----; / 
                    + LDA.B #$09                          ;;----|D299/----\----; \ Play sound effect 
                      STA.W !SPCIO3                       ;;----|D29B/----\----; / 
                      LDA.B #$28                          ;;----|D29E/----\----;
                      STA.W !SpriteMisc1540,X             ;;----|D2A0/----\----;
                      STZ.B !Mode7Angle                   ;;----|D2A3/----\----;
                      STZ.B !Mode7Angle+1                 ;;----|D2A5/----\----;
Return01D2A7:         RTS                                 ;;----|D2A7/----\----; Return 
                                                          ;;                   ;
CODE_01D2A8:          LDA.W !SpriteMisc151C,X             ;;----|D2A8/----\----;
                      CMP.B #$03                          ;;----|D2AB/----\----;
                      BCS Return01D318                    ;;----|D2AD/----\----;
                      LDA.W !SpriteMisc187B,X             ;;----|D2AF/----\----;
                      CMP.B #$03                          ;;----|D2B2/----\----;
                      BNE CODE_01D2BD                     ;;----|D2B4/----\----;
                      LDA.W !SpriteMisc1528,X             ;;----|D2B6/----\----;
                      CMP.B #$03                          ;;----|D2B9/----\----;
                      BCS Return01D318                    ;;----|D2BB/----\----;
CODE_01D2BD:          JSL GetMarioClipping                ;;----|D2BD/----\----;
                      JSR CODE_01D40B                     ;;----|D2C1/----\----;
                      JSL CheckForContact                 ;;----|D2C4/----\----;
                      BCC Return01D318                    ;;----|D2C8/----\----;
                      LDA.W !SpriteMisc1FE2,X             ;;----|D2CA/----\----;
                      BNE Return01D318                    ;;----|D2CD/----\----;
                      LDA.B #$08                          ;;----|D2CF/----\----;
                      STA.W !SpriteMisc1FE2,X             ;;----|D2D1/----\----;
                      LDA.B !PlayerInAir                  ;;----|D2D4/----\----;
                      BEQ CODE_01D319                     ;;----|D2D6/----\----;
                      LDA.W !SpriteMisc1602,X             ;;----|D2D8/----\----;
                      CMP.B #$10                          ;;----|D2DB/----\----;
                      BCS CODE_01D2E3                     ;;----|D2DD/----\----;
                      CMP.B #$06                          ;;----|D2DF/----\----;
                      BCS ADDR_01D31E                     ;;----|D2E1/----\----;
CODE_01D2E3:          LDA.B !PlayerYPosNext               ;;----|D2E3/----\----;
                      CLC                                 ;;----|D2E5/----\----;
                      ADC.B #$08                          ;;----|D2E6/----\----;
                      CMP.B !SpriteYPosLow,X              ;;----|D2E8/----\----;
                      BCS ADDR_01D31E                     ;;----|D2EA/----\----;
                      LDA.W !SpriteMisc1594,X             ;;----|D2EC/----\----;
                      LSR A                               ;;----|D2EF/----\----;
                      BCS CODE_01D334                     ;;----|D2F0/----\----;
                      LDA.B !PlayerYSpeed                 ;;----|D2F2/----\----;
                      BMI Return01D31D                    ;;----|D2F4/----\----;
                      JSR CODE_01D351                     ;;----|D2F6/----\----;
                      LDA.B #$D0                          ;;----|D2F9/----\----;
                      STA.B !PlayerYSpeed                 ;;----|D2FB/----\----;
                      LDA.B #$02                          ;;----|D2FD/----\----; \ Play sound effect 
                      STA.W !SPCIO0                       ;;----|D2FF/----\----; / 
                      LDA.W !SpriteMisc1602,X             ;;----|D302/----\----;
                      CMP.B #$1B                          ;;----|D305/----\----;
                      BCC CODE_01D379                     ;;----|D307/----\----;
ADDR_01D309:          LDY.B #$20                          ;;----|D309/----\----;
                      LDA.B !SpriteXPosLow,X              ;;----|D30B/----\----;
                      SEC                                 ;;----|D30D/----\----;
                      SBC.B #$08                          ;;----|D30E/----\----;
                      CMP.B !PlayerXPosNext               ;;----|D310/----\----;
                      BMI +                               ;;----|D312/----\----;
                      LDY.B #$E0                          ;;----|D314/----\----;
                    + STY.B !PlayerXSpeed                 ;;----|D316/----\----;
Return01D318:         RTS                                 ;;----|D318/----\----; Return 
                                                          ;;                   ;
CODE_01D319:          JSL HurtMario                       ;;----|D319/----\----;
Return01D31D:         RTS                                 ;;----|D31D/----\----; Return 
                                                          ;;                   ;
ADDR_01D31E:          LDA.B #$01                          ;;----|D31E/----\----; \ Play sound effect 
                      STA.W !SPCIO0                       ;;----|D320/----\----; / 
                      LDA.B !PlayerYSpeed                 ;;----|D323/----\----;
                      BPL +                               ;;----|D325/----\----;
                      LDA.B #$10                          ;;----|D327/----\----;
                      STA.B !PlayerYSpeed                 ;;----|D329/----\----;
                      RTS                                 ;;----|D32B/----\----; Return 
                                                          ;;                   ;
                    + JSR ADDR_01D309                     ;;----|D32C/----\----;
                      LDA.B #$D0                          ;;----|D32F/----\----;
                      STA.B !PlayerYSpeed                 ;;----|D331/----\----;
                      RTS                                 ;;----|D333/----\----; Return 
                                                          ;;                   ;
CODE_01D334:          LDA.B #$01                          ;;----|D334/----\----; \ Play sound effect 
                      STA.W !SPCIO0                       ;;----|D336/----\----; / 
                      LDA.B !PlayerYSpeed                 ;;----|D339/----\----;
                      BPL +                               ;;----|D33B/----\----;
                      LDA.B #$20                          ;;----|D33D/----\----;
                      STA.B !PlayerYSpeed                 ;;----|D33F/----\----;
                      RTS                                 ;;----|D341/----\----; Return 
                                                          ;;                   ;
                    + LDY.B #$20                          ;;----|D342/----\----;
                      LDA.B !SpriteXPosLow,X              ;;----|D344/----\----;
                      BPL +                               ;;----|D346/----\----;
                      LDY.B #$E0                          ;;----|D348/----\----;
                    + STY.B !PlayerXSpeed                 ;;----|D34A/----\----;
                      LDA.B #$B0                          ;;----|D34C/----\----;
                      STA.B !PlayerYSpeed                 ;;----|D34E/----\----;
                      RTS                                 ;;----|D350/----\----; Return 
                                                          ;;                   ;
CODE_01D351:          LDA.B !SpriteXPosLow,X              ;;----|D351/----\----;
                      PHA                                 ;;----|D353/----\----;
                      SEC                                 ;;----|D354/----\----;
                      SBC.B #$08                          ;;----|D355/----\----;
                      STA.B !SpriteXPosLow,X              ;;----|D357/----\----;
                      LDA.W !SpriteYPosHigh,X             ;;----|D359/----\----;
                      PHA                                 ;;----|D35C/----\----;
                      SBC.B #$00                          ;;----|D35D/----\----;
                      STA.W !SpriteYPosHigh,X             ;;----|D35F/----\----;
                      LDA.B !SpriteYPosLow,X              ;;----|D362/----\----;
                      PHA                                 ;;----|D364/----\----;
                      CLC                                 ;;----|D365/----\----;
                      ADC.B #$08                          ;;----|D366/----\----;
                      STA.B !SpriteYPosLow,X              ;;----|D368/----\----;
                      JSL DisplayContactGfx               ;;----|D36A/----\----;
                      PLA                                 ;;----|D36E/----\----;
                      STA.B !SpriteYPosLow,X              ;;----|D36F/----\----;
                      PLA                                 ;;----|D371/----\----;
                      STA.W !SpriteYPosHigh,X             ;;----|D372/----\----;
                      PLA                                 ;;----|D375/----\----;
                      STA.B !SpriteXPosLow,X              ;;----|D376/----\----;
                      RTS                                 ;;----|D378/----\----; Return 
                                                          ;;                   ;
CODE_01D379:          LDA.B #$18                          ;;----|D379/----\----;
                      STA.B !Mode7XScale                  ;;----|D37B/----\----;
                      PHX                                 ;;----|D37D/----\----;
                      LDA.B !Mode7YScale                  ;;----|D37E/----\----;
                      LSR A                               ;;----|D380/----\----;
                      TAX                                 ;;----|D381/----\----;
                      LDA.B #$28                          ;;----|D382/----\----;
                      STA.B !Mode7YScale                  ;;----|D384/----\----;
                      LSR A                               ;;----|D386/----\----;
                      TAY                                 ;;----|D387/----\----;
                      LDA.W DATA_01D0DE-8,Y               ;;----|D388/----\----;
                      SEC                                 ;;----|D38B/----\----;
                      SBC.W DATA_01D0DE-8,X               ;;----|D38C/----\----;
                      PLX                                 ;;----|D38F/----\----;
                      CLC                                 ;;----|D390/----\----;
                      ADC.B !SpriteYPosLow,X              ;;----|D391/----\----;
                      STA.B !SpriteYPosLow,X              ;;----|D393/----\----;
                      LDA.W !SpriteXPosHigh,X             ;;----|D395/----\----;
                      ADC.B #$00                          ;;----|D398/----\----;
                      STA.W !SpriteXPosHigh,X             ;;----|D39A/----\----;
                      STZ.B !SpriteXSpeed,X               ;;----|D39D/----\----; \ Sprite Speed = 0 
                      STZ.B !SpriteYSpeed,X               ;;----|D39F/----\----; / 
                      LDA.B #$80                          ;;----|D3A1/----\----;
                      STA.W !SpriteMisc1540,X             ;;----|D3A3/----\----;
                      LDA.B #$03                          ;;----|D3A6/----\----;
                      STA.W !SpriteMisc151C,X             ;;----|D3A8/----\----;
                      LDA.B #$28                          ;;----|D3AB/----\----; \ Play sound effect 
                      STA.W !SPCIO3                       ;;----|D3AD/----\----; / 
                      RTS                                 ;;----|D3B0/----\----; Return 
                                                          ;;                   ;
CODE_01D3B1:          LDA.W !SpriteMisc151C,X             ;;----|D3B1/----\----;
                      CMP.B #$03                          ;;----|D3B4/----\----;
                      BCS Return01D40A                    ;;----|D3B6/----\----;
                      LDY.B #$0A                          ;;----|D3B8/----\----;
CODE_01D3BA:          STY.W !SpriteInterIndex             ;;----|D3BA/----\----;
                      LDA.W !ExtSpriteNumber,Y            ;;----|D3BD/----\----;
                      CMP.B #$05                          ;;----|D3C0/----\----;
                      BNE +                               ;;----|D3C2/----\----;
                      LDA.W !ExtSpriteXPosLow,Y           ;;----|D3C4/----\----;
                      STA.B !_0                           ;;----|D3C7/----\----;
                      LDA.W !ExtSpriteXPosHigh,Y          ;;----|D3C9/----\----;
                      STA.B !_8                           ;;----|D3CC/----\----;
                      LDA.W !ExtSpriteYPosLow,Y           ;;----|D3CE/----\----;
                      STA.B !_1                           ;;----|D3D1/----\----;
                      LDA.W !ExtSpriteYPosHigh,Y          ;;----|D3D3/----\----;
                      STA.B !_9                           ;;----|D3D6/----\----;
                      LDA.B #$08                          ;;----|D3D8/----\----;
                      STA.B !_2                           ;;----|D3DA/----\----;
                      STA.B !_3                           ;;----|D3DC/----\----;
                      PHY                                 ;;----|D3DE/----\----;
                      JSR CODE_01D40B                     ;;----|D3DF/----\----;
                      PLY                                 ;;----|D3E2/----\----;
                      JSL CheckForContact                 ;;----|D3E3/----\----;
                      BCC +                               ;;----|D3E7/----\----;
                      LDA.B #$01                          ;;----|D3E9/----\----; \ Extended sprite = Smoke puff 
                      STA.W !ExtSpriteNumber,Y            ;;----|D3EB/----\----; / 
                      LDA.B #$0F                          ;;----|D3EE/----\----;
                      STA.W !ExtSpriteMisc176F,Y          ;;----|D3F0/----\----;
                      LDA.B #$01                          ;;----|D3F3/----\----; \ Play sound effect 
                      STA.W !SPCIO0                       ;;----|D3F5/----\----; / 
                      INC.W !SpriteMisc1626,X             ;;----|D3F8/----\----;
                      LDA.W !SpriteMisc1626,X             ;;----|D3FB/----\----;
                      CMP.B #$0C                          ;;----|D3FE/----\----;
                      BCC +                               ;;----|D400/----\----;
                      JSR CODE_01CFD0                     ;;----|D402/----\----;
                    + DEY                                 ;;----|D405/----\----;
                      CPY.B #$07                          ;;----|D406/----\----;
                      BNE CODE_01D3BA                     ;;----|D408/----\----;
Return01D40A:         RTS                                 ;;----|D40A/----\----; Return 
                                                          ;;                   ;
CODE_01D40B:          LDA.B !SpriteXPosLow,X              ;;----|D40B/----\----;
                      SEC                                 ;;----|D40D/----\----;
                      SBC.B #$08                          ;;----|D40E/----\----;
                      STA.B !_4                           ;;----|D410/----\----;
                      LDA.W !SpriteYPosHigh,X             ;;----|D412/----\----;
                      SBC.B #$00                          ;;----|D415/----\----;
                      STA.B !_A                           ;;----|D417/----\----;
                      LDA.B #$10                          ;;----|D419/----\----;
                      STA.B !_6                           ;;----|D41B/----\----;
                      LDA.B #$10                          ;;----|D41D/----\----;
                      STA.B !_7                           ;;----|D41F/----\----;
                      LDA.W !SpriteMisc1602,X             ;;----|D421/----\----;
                      CMP.B #$69                          ;;----|D424/----\----;
                      LDA.B #$08                          ;;----|D426/----\----;
                      BCC +                               ;;----|D428/----\----;
                      ADC.B #$0A                          ;;----|D42A/----\----;
                    + CLC                                 ;;----|D42C/----\----;
                      ADC.B !SpriteYPosLow,X              ;;----|D42D/----\----;
                      STA.B !_5                           ;;----|D42F/----\----;
                      LDA.W !SpriteXPosHigh,X             ;;----|D431/----\----;
                      ADC.B #$00                          ;;----|D434/----\----;
                      STA.B !_B                           ;;----|D436/----\----;
                      RTS                                 ;;----|D438/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
DATA_01D439:          db $A8,$B0,$B8,$C0,$C8              ;;----|D439/----\----;
                                                          ;;                   ;
                      STZ.W !SpriteStatus,X               ;;----|D43E/----\----; \ Unreachable 
                      RTS                                 ;;----|D441/----\----; / Erase sprite 
                                                          ;;                   ;
                                                          ;;                   ;
DATA_01D442:          db $00,$F0,$00,$10                  ;;----|D442/----\----;
                                                          ;;                   ;
LudwigFireTiles:      db $4A,$4C,$6A,$6C                  ;;----|D446/----\----;
                                                          ;;                   ;
DATA_01D44A:          db $45,$45,$05,$05                  ;;----|D44A/----\----;
                                                          ;;                   ;
BossFireball:         LDA.B !SpriteLock                   ;;----|D44E/----\----;
                      ORA.W !PlayerIsFrozen               ;;----|D450/----\----;
                      BNE CODE_01D487                     ;;----|D453/----\----;
                      LDA.W !SpriteMisc1540,X             ;;----|D455/----\----;
                      CMP.B #$10                          ;;----|D458/----\----;
                      BCS CODE_01D487                     ;;----|D45A/----\----;
                      TAY                                 ;;----|D45C/----\----;
                      BNE +                               ;;----|D45D/----\----;
                      JSR SetAnimationFrame               ;;----|D45F/----\----;
                      JSR SetAnimationFrame               ;;----|D462/----\----;
                      JSR MarioSprInteractRt              ;;----|D465/----\----;
                    + JSR SubSprXPosNoGrvty               ;;----|D468/----\----;
                      LDA.B !SpriteXPosLow,X              ;;----|D46B/----\----;
                      CLC                                 ;;----|D46D/----\----;
                      ADC.B #$20                          ;;----|D46E/----\----;
                      STA.B !_0                           ;;----|D470/----\----;
                      LDA.W !SpriteYPosHigh,X             ;;----|D472/----\----;
                      ADC.B #$00                          ;;----|D475/----\----;
                      STA.B !_1                           ;;----|D477/----\----;
                      REP #$20                            ;;----|D479/----\----; Accum (16 bit) 
                      LDA.B !_0                           ;;----|D47B/----\----;
                      CMP.W #$0230                        ;;----|D47D/----\----;
                      SEP #$20                            ;;----|D480/----\----; Accum (8 bit) 
                      BCC CODE_01D487                     ;;----|D482/----\----;
                      STZ.W !SpriteStatus,X               ;;----|D484/----\----;
CODE_01D487:          JSR GetDrawInfoBnk1                 ;;----|D487/----\----;
                      LDA.W !SpriteMisc1602,X             ;;----|D48A/----\----;
                      ASL A                               ;;----|D48D/----\----;
                      STA.B !_3                           ;;----|D48E/----\----;
                      LDA.W !SpriteMisc157C,X             ;;----|D490/----\----;
                      ASL A                               ;;----|D493/----\----;
                      STA.B !_2                           ;;----|D494/----\----;
                      %LorW_X(LDA,DATA_01D439)            ;;----|D496/----\----;
                      STA.W !SpriteOAMIndex,X             ;;----|D499/----\----;
                      TAY                                 ;;----|D49C/----\----;
                      PHX                                 ;;----|D49D/----\----;
                      LDA.W !SpriteMisc1540,X             ;;----|D49E/----\----;
                      LDX.B #$01                          ;;----|D4A1/----\----;
                      CMP.B #$08                          ;;----|D4A3/----\----;
                      BCC CODE_01D4A8                     ;;----|D4A5/----\----;
                      DEX                                 ;;----|D4A7/----\----;
CODE_01D4A8:          PHX                                 ;;----|D4A8/----\----;
                      PHX                                 ;;----|D4A9/----\----;
                      TXA                                 ;;----|D4AA/----\----;
                      CLC                                 ;;----|D4AB/----\----;
                      ADC.B !_2                           ;;----|D4AC/----\----;
                      TAX                                 ;;----|D4AE/----\----;
                      LDA.B !_0                           ;;----|D4AF/----\----;
                      CLC                                 ;;----|D4B1/----\----;
                      ADC.W DATA_01D442,X                 ;;----|D4B2/----\----;
                      STA.W !OAMTileXPos+$100,Y           ;;----|D4B5/----\----;
                      LDA.B !EffFrame                     ;;----|D4B8/----\----;
                      LSR A                               ;;----|D4BA/----\----;
                      LSR A                               ;;----|D4BB/----\----;
                      ROR A                               ;;----|D4BC/----\----;
                      AND.B #$80                          ;;----|D4BD/----\----;
                      ORA.W DATA_01D44A,X                 ;;----|D4BF/----\----;
                      STA.W !OAMTileAttr+$100,Y           ;;----|D4C2/----\----;
                      LDA.B !_1                           ;;----|D4C5/----\----;
                      INC A                               ;;----|D4C7/----\----;
                      INC A                               ;;----|D4C8/----\----;
                      STA.W !OAMTileYPos+$100,Y           ;;----|D4C9/----\----;
                      PLA                                 ;;----|D4CC/----\----;
                      CLC                                 ;;----|D4CD/----\----;
                      ADC.B !_3                           ;;----|D4CE/----\----;
                      TAX                                 ;;----|D4D0/----\----;
                      LDA.W LudwigFireTiles,X             ;;----|D4D1/----\----;
                      STA.W !OAMTileNo+$100,Y             ;;----|D4D4/----\----;
                      PLX                                 ;;----|D4D7/----\----;
                      INY                                 ;;----|D4D8/----\----;
                      INY                                 ;;----|D4D9/----\----;
                      INY                                 ;;----|D4DA/----\----;
                      INY                                 ;;----|D4DB/----\----;
                      DEX                                 ;;----|D4DC/----\----;
                      BPL CODE_01D4A8                     ;;----|D4DD/----\----;
                      PLX                                 ;;----|D4DF/----\----;
                      LDY.B #$02                          ;;----|D4E0/----\----;
                      LDA.B #$01                          ;;----|D4E2/----\----;
                      JMP FinishOAMWriteRt                ;;----|D4E4/----\----;
                                                          ;;                   ;
                                                          ;;                   ;
DATA_01D4E7:          db $01,$FF                          ;;----|D4E7/----\----;
                                                          ;;                   ;
DATA_01D4E9:          db $0F,$00                          ;;----|D4E9/----\----;
                                                          ;;                   ;
DATA_01D4EB:          db $00,$02,$04,$06,$08,$0A,$0C,$0E  ;;----|D4EB/----\----;
                      db $0E,$0C,$0A,$08,$06,$04,$02,$00  ;;----|D4F3/----\----;
                                                          ;;                   ;
ParachuteSprites:     LDA.W !SpriteStatus,X               ;;----|D4FB/----\----;
                      CMP.B #$08                          ;;----|D4FE/----\----;
                      BEQ +                               ;;----|D500/----\----;
                      JMP CODE_01D671                     ;;----|D502/----\----;
                                                          ;;                   ;
                    + LDA.B !SpriteLock                   ;;----|D505/----\----; \ Branch if sprites locked 
                      BNE CODE_01D558                     ;;----|D507/----\----; / 
                      LDA.W !SpriteMisc1540,X             ;;----|D509/----\----;
                      BNE CODE_01D558                     ;;----|D50C/----\----;
                      LDA.B !TrueFrame                    ;;----|D50E/----\----;
                      LSR A                               ;;----|D510/----\----;
                      BCC +                               ;;----|D511/----\----;
                      INC.B !SpriteYPosLow,X              ;;----|D513/----\----;
                      BNE +                               ;;----|D515/----\----;
                      INC.W !SpriteXPosHigh,X             ;;----|D517/----\----;
                    + LDA.W !SpriteMisc151C,X             ;;----|D51A/----\----;
                      BNE CODE_01D558                     ;;----|D51D/----\----;
                      LDA.B !TrueFrame                    ;;----|D51F/----\----;
                      LSR A                               ;;----|D521/----\----;
                      BCC +                               ;;----|D522/----\----;
                      LDA.B !SpriteTableC2,X              ;;----|D524/----\----;
                      AND.B #$01                          ;;----|D526/----\----;
                      TAY                                 ;;----|D528/----\----;
                      LDA.W !SpriteMisc1570,X             ;;----|D529/----\----;
                      CLC                                 ;;----|D52C/----\----;
                      ADC.W DATA_01D4E7,Y                 ;;----|D52D/----\----;
                      STA.W !SpriteMisc1570,X             ;;----|D530/----\----;
                      CMP.W DATA_01D4E9,Y                 ;;----|D533/----\----;
                      BNE +                               ;;----|D536/----\----;
                      INC.B !SpriteTableC2,X              ;;----|D538/----\----;
                    + LDA.B !SpriteXSpeed,X               ;;----|D53A/----\----;
                      PHA                                 ;;----|D53C/----\----;
                      LDY.W !SpriteMisc1570,X             ;;----|D53D/----\----;
                      LDA.B !SpriteTableC2,X              ;;----|D540/----\----;
                      LSR A                               ;;----|D542/----\----;
                      LDA.W DATA_01D4EB,Y                 ;;----|D543/----\----;
                      BCC +                               ;;----|D546/----\----;
                      EOR.B #$FF                          ;;----|D548/----\----;
                      INC A                               ;;----|D54A/----\----;
                    + CLC                                 ;;----|D54B/----\----;
                      ADC.B !SpriteXSpeed,X               ;;----|D54C/----\----;
                      STA.B !SpriteXSpeed,X               ;;----|D54E/----\----;
                      JSR SubSprXPosNoGrvty               ;;----|D550/----\----;
                      PLA                                 ;;----|D553/----\----;
                      STA.B !SpriteXSpeed,X               ;;----|D554/----\----;
                      BRA CODE_01D558                     ;;----|D556/----\----;
                                                          ;;                   ;
CODE_01D558:          JSR SubOffscreen0Bnk1               ;;----|D558/----\----;
                      JMP CODE_01D5B3                     ;;----|D55B/----\----;
                                                          ;;                   ;
                                                          ;;                   ;
DATA_01D55E:          db $0D,$0D,$0D,$0D,$0C,$0C,$0C,$0C  ;;----|D55E/----\----;
                      db $0C,$0C,$0C,$0C,$0D,$0D,$0D,$0D  ;;----|D566/----\----;
DATA_01D56E:          db $00,$00,$00,$00,$00,$00,$00,$00  ;;----|D56E/----\----;
                      db $01,$01,$01,$01,$01,$01,$01,$01  ;;----|D576/----\----;
DATA_01D57E:          db $F8,$F8,$FA,$FA,$FC,$FC,$FE,$FE  ;;----|D57E/----\----;
                      db $02,$02,$04,$04,$06,$06,$08,$08  ;;----|D586/----\----;
DATA_01D58E:          db $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF  ;;----|D58E/----\----;
                      db $00,$00,$00,$00,$00,$00,$00,$00  ;;----|D596/----\----;
DATA_01D59E:          db $0E,$0E,$0F,$0F,$10,$10,$10,$10  ;;----|D59E/----\----;
                      db $10,$10,$10,$10,$0F,$0F,$0E,$0E  ;;----|D5A6/----\----;
DATA_01D5AE:          db $0F,$0D                          ;;----|D5AE/----\----;
                                                          ;;                   ;
DATA_01D5B0:          db $01,$05,$00                      ;;----|D5B0/----\----;
                                                          ;;                   ;
CODE_01D5B3:          STZ.W !TileGenerateTrackA           ;;----|D5B3/----\----;
                      LDY.B #$F0                          ;;----|D5B6/----\----;
                      LDA.W !SpriteMisc1540,X             ;;----|D5B8/----\----;
                      BEQ +                               ;;----|D5BB/----\----;
                      LSR A                               ;;----|D5BD/----\----;
                      EOR.B #$0F                          ;;----|D5BE/----\----;
                      STA.W !TileGenerateTrackA           ;;----|D5C0/----\----;
                      CLC                                 ;;----|D5C3/----\----;
                      ADC.B #$F0                          ;;----|D5C4/----\----;
                      TAY                                 ;;----|D5C6/----\----;
                    + STY.B !_0                           ;;----|D5C7/----\----;
                      LDA.B !SpriteYPosLow,X              ;;----|D5C9/----\----;
                      PHA                                 ;;----|D5CB/----\----;
                      CLC                                 ;;----|D5CC/----\----;
                      ADC.B !_0                           ;;----|D5CD/----\----;
                      STA.B !SpriteYPosLow,X              ;;----|D5CF/----\----;
                      LDA.W !SpriteXPosHigh,X             ;;----|D5D1/----\----;
                      PHA                                 ;;----|D5D4/----\----;
                      ADC.B #$FF                          ;;----|D5D5/----\----;
                      STA.W !SpriteXPosHigh,X             ;;----|D5D7/----\----;
                      LDA.W !SpriteOBJAttribute,X         ;;----|D5DA/----\----;
                      PHA                                 ;;----|D5DD/----\----;
                      AND.B #$F1                          ;;----|D5DE/----\----;
                      ORA.B #$06                          ;;----|D5E0/----\----;
                      STA.W !SpriteOBJAttribute,X         ;;----|D5E2/----\----;
                      LDY.W !SpriteMisc1570,X             ;;----|D5E5/----\----;
                      LDA.W DATA_01D55E,Y                 ;;----|D5E8/----\----;
                      STA.W !SpriteMisc1602,X             ;;----|D5EB/----\----;
                      LDA.W DATA_01D56E,Y                 ;;----|D5EE/----\----;
                      STA.W !SpriteMisc157C,X             ;;----|D5F1/----\----;
                      JSR SubSprGfx2Entry1                ;;----|D5F4/----\----;
                      PLA                                 ;;----|D5F7/----\----;
                      STA.W !SpriteOBJAttribute,X         ;;----|D5F8/----\----;
                      LDA.W !SpriteOAMIndex,X             ;;----|D5FB/----\----;
                      CLC                                 ;;----|D5FE/----\----;
                      ADC.B #$04                          ;;----|D5FF/----\----;
                      STA.W !SpriteOAMIndex,X             ;;----|D601/----\----;
                      LDY.W !SpriteMisc1570,X             ;;----|D604/----\----;
                      LDA.B !SpriteXPosLow,X              ;;----|D607/----\----;
                      PHA                                 ;;----|D609/----\----;
                      CLC                                 ;;----|D60A/----\----;
                      ADC.W DATA_01D57E,Y                 ;;----|D60B/----\----;
                      STA.B !SpriteXPosLow,X              ;;----|D60E/----\----;
                      LDA.W !SpriteYPosHigh,X             ;;----|D610/----\----;
                      PHA                                 ;;----|D613/----\----;
                      ADC.W DATA_01D58E,Y                 ;;----|D614/----\----;
                      STA.W !SpriteYPosHigh,X             ;;----|D617/----\----;
                      STZ.B !_0                           ;;----|D61A/----\----;
                      LDA.W DATA_01D59E,Y                 ;;----|D61C/----\----;
                      SEC                                 ;;----|D61F/----\----;
                      SBC.W !TileGenerateTrackA           ;;----|D620/----\----;
                      BPL +                               ;;----|D623/----\----;
                      DEC.B !_0                           ;;----|D625/----\----;
                    + CLC                                 ;;----|D627/----\----;
                      ADC.B !SpriteYPosLow,X              ;;----|D628/----\----;
                      STA.B !SpriteYPosLow,X              ;;----|D62A/----\----;
                      LDA.W !SpriteXPosHigh,X             ;;----|D62C/----\----;
                      ADC.B !_0                           ;;----|D62F/----\----;
                      STA.W !SpriteXPosHigh,X             ;;----|D631/----\----;
                      LDA.W !SpriteMisc1602,X             ;;----|D634/----\----;
                      SEC                                 ;;----|D637/----\----;
                      SBC.B #$0C                          ;;----|D638/----\----;
                      CMP.B #$01                          ;;----|D63A/----\----;
                      BNE +                               ;;----|D63C/----\----;
                      CLC                                 ;;----|D63E/----\----;
                      ADC.W !SpriteMisc157C,X             ;;----|D63F/----\----;
                    + STA.W !SpriteMisc1602,X             ;;----|D642/----\----;
                      LDA.W !SpriteMisc1540,X             ;;----|D645/----\----;
                      BEQ +                               ;;----|D648/----\----;
                      STZ.W !SpriteMisc1602,X             ;;----|D64A/----\----;
                    + LDY.W !SpriteMisc1602,X             ;;----|D64D/----\----;
                      LDA.W DATA_01D5B0,Y                 ;;----|D650/----\----;
                      JSR SubSprGfx0Entry0                ;;----|D653/----\----;
                      JSR SubSprSpr_MarioSpr              ;;----|D656/----\----;
                      LDA.W !SpriteMisc1540,X             ;;----|D659/----\----;
                      BEQ CODE_01D693                     ;;----|D65C/----\----;
                      DEC A                               ;;----|D65E/----\----;
                      BNE +                               ;;----|D65F/----\----;
                      STZ.B !SpriteYSpeed,X               ;;----|D661/----\----; Sprite Y Speed = 0 
                      PLA                                 ;;----|D663/----\----;
                      PLA                                 ;;----|D664/----\----;
                      PLA                                 ;;----|D665/----\----;
                      STA.W !SpriteXPosHigh,X             ;;----|D666/----\----;
                      PLA                                 ;;----|D669/----\----;
                      STA.B !SpriteYPosLow,X              ;;----|D66A/----\----;
                      LDA.B #$80                          ;;----|D66C/----\----;
                      STA.W !SpriteMisc1540,X             ;;----|D66E/----\----;
CODE_01D671:          LDA.B !SpriteNumber,X               ;;----|D671/----\----;
                      SEC                                 ;;----|D673/----\----;
                      SBC.B #$3F                          ;;----|D674/----\----;
                      TAY                                 ;;----|D676/----\----;
                      LDA.W DATA_01D5AE,Y                 ;;----|D677/----\----;
                      STA.B !SpriteNumber,X               ;;----|D67A/----\----;
                      JSL LoadSpriteTables                ;;----|D67C/----\----;
                      RTS                                 ;;----|D680/----\----; Return 
                                                          ;;                   ;
                    + JSR CODE_019140                     ;;----|D681/----\----;
                      JSR IsOnGround                      ;;----|D684/----\----;
                      BEQ +                               ;;----|D687/----\----;
                      JSR SetSomeYSpeed__                 ;;----|D689/----\----;
                    + JSR SubSprYPosNoGrvty               ;;----|D68C/----\----;
                      INC.B !SpriteYSpeed,X               ;;----|D68F/----\----;
                      BRA CODE_01D6B5                     ;;----|D691/----\----;
                                                          ;;                   ;
CODE_01D693:          TXA                                 ;;----|D693/----\----;
                      EOR.B !TrueFrame                    ;;----|D694/----\----;
                      LSR A                               ;;----|D696/----\----;
                      BCC CODE_01D6B5                     ;;----|D697/----\----;
                      JSR CODE_019140                     ;;----|D699/----\----;
                      JSR IsTouchingObjSide               ;;----|D69C/----\----;
                      BEQ +                               ;;----|D69F/----\----;
                      LDA.B #$01                          ;;----|D6A1/----\----;
                      STA.W !SpriteMisc151C,X             ;;----|D6A3/----\----;
                      LDA.B #$07                          ;;----|D6A6/----\----;
                      STA.W !SpriteMisc1570,X             ;;----|D6A8/----\----;
                    + JSR IsOnGround                      ;;----|D6AB/----\----;
                      BEQ CODE_01D6B5                     ;;----|D6AE/----\----;
                      LDA.B #$20                          ;;----|D6B0/----\----;
                      STA.W !SpriteMisc1540,X             ;;----|D6B2/----\----;
CODE_01D6B5:          PLA                                 ;;----|D6B5/----\----;
                      STA.W !SpriteYPosHigh,X             ;;----|D6B6/----\----;
                      PLA                                 ;;----|D6B9/----\----;
                      STA.B !SpriteXPosLow,X              ;;----|D6BA/----\----;
                      PLA                                 ;;----|D6BC/----\----;
                      STA.W !SpriteXPosHigh,X             ;;----|D6BD/----\----;
                      PLA                                 ;;----|D6C0/----\----;
                      STA.B !SpriteYPosLow,X              ;;----|D6C1/----\----;
Return01D6C3:         RTS                                 ;;----|D6C3/----\----;
                                                          ;;                   ;
InitLineRope:         CPX.B #$06                          ;;----|D6C4/----\----;
                      BCC +                               ;;----|D6C6/----\----;
                      LDA.W !SpriteMemorySetting          ;;----|D6C8/----\----;
                      BEQ +                               ;;----|D6CB/----\----;
                      INC.W !SpriteTweakerB,X             ;;----|D6CD/----\----;
                      BRA +                               ;;----|D6D0/----\----;
                                                          ;;                   ;
InitLinePlat:         LDA.B !SpriteXPosLow,X              ;;----|D6D2/----\----;
                      AND.B #$10                          ;;----|D6D4/----\----;
                      EOR.B #$10                          ;;----|D6D6/----\----;
                      STA.W !SpriteMisc1602,X             ;;----|D6D8/----\----;
                      BEQ +                               ;;----|D6DB/----\----;
                      INC.W !SpriteTweakerB,X             ;;----|D6DD/----\----;
                    + INC.W !SpriteMisc1540,X             ;;----|D6E0/----\----;
                      JSR LineFuzzy_Plats                 ;;----|D6E3/----\----;
                      JSR LineFuzzy_Plats                 ;;----|D6E6/----\----;
                      INC.W !SpriteMisc1626,X             ;;----|D6E9/----\----;
Return01D6EC:         RTS                                 ;;----|D6EC/----\----; Return 
                                                          ;;                   ;
InitLineGuidedSpr:    INC.W !SpriteMisc187B,X             ;;----|D6ED/----\----;
                      LDA.B !SpriteXPosLow,X              ;;----|D6F0/----\----;
                      AND.B #$10                          ;;----|D6F2/----\----;
                      BNE CODE_01D707                     ;;----|D6F4/----\----;
                      LDA.B !SpriteXPosLow,X              ;;----|D6F6/----\----;
                      SEC                                 ;;----|D6F8/----\----;
                      SBC.B #$40                          ;;----|D6F9/----\----;
                      STA.B !SpriteXPosLow,X              ;;----|D6FB/----\----;
                      LDA.W !SpriteYPosHigh,X             ;;----|D6FD/----\----;
                      SBC.B #$01                          ;;----|D700/----\----;
                      STA.W !SpriteYPosHigh,X             ;;----|D702/----\----;
                      BRA InitLineBrwnPlat                ;;----|D705/----\----;
                                                          ;;                   ;
CODE_01D707:          INC.W !SpriteMisc157C,X             ;;----|D707/----\----;
                      LDA.B !SpriteXPosLow,X              ;;----|D70A/----\----;
                      CLC                                 ;;----|D70C/----\----;
                      ADC.B #$0F                          ;;----|D70D/----\----;
                      STA.B !SpriteXPosLow,X              ;;----|D70F/----\----;
InitLineBrwnPlat:     LDA.B #$02                          ;;----|D711/----\----;
                      STA.W !SpriteMisc1540,X             ;;----|D713/----\----;
                      RTS                                 ;;----|D716/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
DATA_01D717:          db $F8,$00                          ;;----|D717/----\----;
                                                          ;;                   ;
LineRope_Chainsaw:    TXA                                 ;;----|D719/----\----;
                      ASL A                               ;;----|D71A/----\----;
                      ASL A                               ;;----|D71B/----\----;
                      EOR.B !EffFrame                     ;;----|D71C/----\----;
                      STA.B !_2                           ;;----|D71E/----\----;
                      AND.B #$07                          ;;----|D720/----\----;
                      ORA.B !SpriteLock                   ;;----|D722/----\----;
                      BNE LineGrinder                     ;;----|D724/----\----;
                      LDA.B !_2                           ;;----|D726/----\----;
                      LSR A                               ;;----|D728/----\----;
                      LSR A                               ;;----|D729/----\----;
                      LSR A                               ;;----|D72A/----\----;
                      AND.B #$01                          ;;----|D72B/----\----;
                      TAY                                 ;;----|D72D/----\----;
                      LDA.W DATA_01D717,Y                 ;;----|D72E/----\----;
                      STA.B !_0                           ;;----|D731/----\----;
                      LDA.B #$F2                          ;;----|D733/----\----;
                      STA.B !_1                           ;;----|D735/----\----;
                      JSR CODE_018063                     ;;----|D737/----\----;
LineGrinder:          LDA.B !TrueFrame                    ;;----|D73A/----\----;
                      AND.B #$07                          ;;----|D73C/----\----;
                      ORA.W !SpriteMisc1626,X             ;;----|D73E/----\----;
                      ORA.B !SpriteLock                   ;;----|D741/----\----;
                      BNE LineFuzzy_Plats                 ;;----|D743/----\----;
                      LDA.B #$04                          ;;----|D745/----\----; \ Play sound effect 
                      STA.W !SPCIO1                       ;;----|D747/----\----; / 
LineFuzzy_Plats:      JMP CODE_01D9A7                     ;;----|D74A/----\----;
                                                          ;;                   ;
CODE_01D74D:          JSR SubOffscreen1Bnk1               ;;----|D74D/----\----;
                      LDA.W !SpriteMisc1540,X             ;;----|D750/----\----;
                      BNE CODE_01D75C                     ;;----|D753/----\----;
                      LDA.B !SpriteLock                   ;;----|D755/----\----;
                      ORA.W !SpriteMisc1626,X             ;;----|D757/----\----;
                      BNE Return01D6EC                    ;;----|D75A/----\----;
CODE_01D75C:          LDA.B !SpriteTableC2,X              ;;----|D75C/----\----;
                      JSL ExecutePtr                      ;;----|D75E/----\----;
                                                          ;;                   ;
                      dw CODE_01D7F4                      ;;----|D762/----\----;
                      dw CODE_01D768                      ;;----|D764/----\----;
                      dw CODE_01DB44                      ;;----|D766/----\----;
                                                          ;;                   ;
CODE_01D768:          LDA.B !SpriteLock                   ;;----|D768/----\----; \ Branch if sprites locked 
                      BNE Return01D791                    ;;----|D76A/----\----; / 
                      LDA.W !SpriteMisc157C,X             ;;----|D76C/----\----;
                      BNE CODE_01D792                     ;;----|D76F/----\----;
                      LDY.W !SpriteMisc1534,X             ;;----|D771/----\----;
                      JSR CODE_01D7B0                     ;;----|D774/----\----;
                      INC.W !SpriteMisc1534,X             ;;----|D777/----\----;
                      LDA.W !SpriteMisc187B,X             ;;----|D77A/----\----;
                      BEQ +                               ;;----|D77D/----\----;
                      LDA.B !TrueFrame                    ;;----|D77F/----\----;
                      LSR A                               ;;----|D781/----\----;
                      BCC +                               ;;----|D782/----\----;
                      INC.W !SpriteMisc1534,X             ;;----|D784/----\----;
                    + LDA.W !SpriteMisc1534,X             ;;----|D787/----\----;
                      CMP.W !SpriteMisc1570,X             ;;----|D78A/----\----;
                      BCC Return01D791                    ;;----|D78D/----\----;
                      STZ.B !SpriteTableC2,X              ;;----|D78F/----\----;
Return01D791:         RTS                                 ;;----|D791/----\----; Return 
                                                          ;;                   ;
CODE_01D792:          LDY.W !SpriteMisc1570,X             ;;----|D792/----\----;
                      DEY                                 ;;----|D795/----\----;
                      JSR CODE_01D7B0                     ;;----|D796/----\----;
                      DEC.W !SpriteMisc1570,X             ;;----|D799/----\----;
                      BEQ CODE_01D7AD                     ;;----|D79C/----\----;
                      LDA.W !SpriteMisc187B,X             ;;----|D79E/----\----;
                      BEQ +                               ;;----|D7A1/----\----;
                      LDA.B !TrueFrame                    ;;----|D7A3/----\----;
                      LSR A                               ;;----|D7A5/----\----;
                      BCC +                               ;;----|D7A6/----\----;
                      DEC.W !SpriteMisc1570,X             ;;----|D7A8/----\----;
                      BNE +                               ;;----|D7AB/----\----;
CODE_01D7AD:          STZ.B !SpriteTableC2,X              ;;----|D7AD/----\----;
                    + RTS                                 ;;----|D7AF/----\----; Return 
                                                          ;;                   ;
CODE_01D7B0:          PHB                                 ;;----|D7B0/----\----; Sprites calling this routine must be modified 
                      LDA.B #$07                          ;;----|D7B1/----\----; to set $151C,x and $1528,x to a location in 
                      PHA                                 ;;----|D7B3/----\----; LineTable instead of $07/F9DB+something 
                      PLB                                 ;;----|D7B4/----\----;
                      LDA.W !SpriteMisc151C,X             ;;----|D7B5/----\----;
                      STA.B !_4                           ;;----|D7B8/----\----;
                      LDA.W !SpriteMisc1528,X             ;;----|D7BA/----\----;
                      STA.B !_5                           ;;----|D7BD/----\----;
                      LDA.B (!_4),Y                       ;;----|D7BF/----\----;
                      AND.B #$0F                          ;;----|D7C1/----\----;
                      STA.B !_6                           ;;----|D7C3/----\----;
                      LDA.B (!_4),Y                       ;;----|D7C5/----\----;
                      PLB                                 ;;----|D7C7/----\----;
                      LSR A                               ;;----|D7C8/----\----;
                      LSR A                               ;;----|D7C9/----\----;
                      LSR A                               ;;----|D7CA/----\----;
                      LSR A                               ;;----|D7CB/----\----;
                      STA.B !_7                           ;;----|D7CC/----\----;
                      LDA.B !SpriteYPosLow,X              ;;----|D7CE/----\----;
                      AND.B #$F0                          ;;----|D7D0/----\----;
                      CLC                                 ;;----|D7D2/----\----;
                      ADC.B !_7                           ;;----|D7D3/----\----;
                      STA.B !SpriteYPosLow,X              ;;----|D7D5/----\----;
                      LDA.B !SpriteXPosLow,X              ;;----|D7D7/----\----;
                      AND.B #$F0                          ;;----|D7D9/----\----;
                      CLC                                 ;;----|D7DB/----\----;
                      ADC.B !_6                           ;;----|D7DC/----\----;
                      STA.B !SpriteXPosLow,X              ;;----|D7DE/----\----;
                      RTS                                 ;;----|D7E0/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
DATA_01D7E1:          db $FC,$04,$FC,$04                  ;;----|D7E1/----\----;
                                                          ;;                   ;
DATA_01D7E5:          db $FF,$00,$FF,$00                  ;;----|D7E5/----\----;
                                                          ;;                   ;
DATA_01D7E9:          db $FC,$FC,$04,$04                  ;;----|D7E9/----\----;
                                                          ;;                   ;
DATA_01D7ED:          db $FF,$FF,$00,$00                  ;;----|D7ED/----\----;
                                                          ;;                   ;
CODE_01D7F1:          JMP CODE_01D89F                     ;;----|D7F1/----\----;
                                                          ;;                   ;
CODE_01D7F4:          LDY.B #$03                          ;;----|D7F4/----\----;
CODE_01D7F6:          STY.W !SpriteInterIndex             ;;----|D7F6/----\----;
                      LDA.B !SpriteXPosLow,X              ;;----|D7F9/----\----;
                      CLC                                 ;;----|D7FB/----\----;
                      ADC.W DATA_01D7E1,Y                 ;;----|D7FC/----\----;
                      STA.B !_2                           ;;----|D7FF/----\----;
                      LDA.W !SpriteYPosHigh,X             ;;----|D801/----\----;
                      ADC.W DATA_01D7E5,Y                 ;;----|D804/----\----;
                      STA.B !_3                           ;;----|D807/----\----;
                      LDA.B !SpriteYPosLow,X              ;;----|D809/----\----;
                      CLC                                 ;;----|D80B/----\----;
                      ADC.W DATA_01D7E9,Y                 ;;----|D80C/----\----;
                      STA.B !_0                           ;;----|D80F/----\----;
                      LDA.W !SpriteXPosHigh,X             ;;----|D811/----\----;
                      ADC.W DATA_01D7ED,Y                 ;;----|D814/----\----;
                      STA.B !_1                           ;;----|D817/----\----;
                      LDA.W !SpriteMisc1540,X             ;;----|D819/----\----;
                      BNE CODE_01D83A                     ;;----|D81C/----\----;
                      LDA.B !_0                           ;;----|D81E/----\----;
                      AND.B #$F0                          ;;----|D820/----\----;
                      STA.B !_4                           ;;----|D822/----\----;
                      LDA.B !SpriteYPosLow,X              ;;----|D824/----\----;
                      AND.B #$F0                          ;;----|D826/----\----;
                      CMP.B !_4                           ;;----|D828/----\----;
                      BNE CODE_01D83A                     ;;----|D82A/----\----;
                      LDA.B !_2                           ;;----|D82C/----\----;
                      AND.B #$F0                          ;;----|D82E/----\----;
                      STA.B !_5                           ;;----|D830/----\----;
                      LDA.B !SpriteXPosLow,X              ;;----|D832/----\----;
                      AND.B #$F0                          ;;----|D834/----\----;
                      CMP.B !_5                           ;;----|D836/----\----;
                      BEQ CODE_01D861                     ;;----|D838/----\----;
CODE_01D83A:          JSR CODE_01D94D                     ;;----|D83A/----\----;WIERD ROUTINE INVOLVING POSITIONS.  ALL VARIABLES SET ABOVE...         
                      BNE CODE_01D7F1                     ;;----|D83D/----\----;
                      LDA.W !Map16TileNumber              ;;----|D83F/----\----;"# OF CUSTOM BLOCK???"               
                      CMP.B #$94                          ;;----|D842/----\----;
                      BEQ CODE_01D851                     ;;----|D844/----\----;
                      CMP.B #$95                          ;;----|D846/----\----;
                      BNE CODE_01D856                     ;;----|D848/----\----;
                      LDA.W !OnOffSwitch                  ;;----|D84A/----\----;
                      BEQ CODE_01D861                     ;;----|D84D/----\----;
                      BNE CODE_01D856                     ;;----|D84F/----\----;
CODE_01D851:          LDA.W !OnOffSwitch                  ;;----|D851/----\----;
                      BNE CODE_01D861                     ;;----|D854/----\----;
CODE_01D856:          LDA.W !Map16TileNumber              ;;----|D856/----\----;
                      CMP.B #$76                          ;;----|D859/----\----;
                      BCC CODE_01D861                     ;;----|D85B/----\----;
                      CMP.B #$9A                          ;;----|D85D/----\----;
                      BCC CODE_01D895                     ;;----|D85F/----\----;
CODE_01D861:          LDY.W !SpriteInterIndex             ;;----|D861/----\----;
                      DEY                                 ;;----|D864/----\----;
                      BPL CODE_01D7F6                     ;;----|D865/----\----;
                      LDA.B !SpriteTableC2,X              ;;----|D867/----\----;
                      CMP.B #$02                          ;;----|D869/----\----; ?? #00 - platforms stop at end rather than fall off 
                      BEQ Return01D894                    ;;----|D86B/----\----;
                      LDA.B #$02                          ;;----|D86D/----\----;
                      STA.B !SpriteTableC2,X              ;;----|D86F/----\----;
                      LDY.W !SpriteMisc160E,X             ;;----|D871/----\----;
                      LDA.W !SpriteMisc157C,X             ;;----|D874/----\----;
                      BEQ +                               ;;----|D877/----\----;
                      TYA                                 ;;----|D879/----\----;
                      CLC                                 ;;----|D87A/----\----;
                      ADC.B #$20                          ;;----|D87B/----\----;
                      TAY                                 ;;----|D87D/----\----;
                    + LDA.W DATA_01DD11,Y                 ;;----|D87E/----\----;
                      BPL +                               ;;----|D881/----\----;
                      ASL A                               ;;----|D883/----\----;
                    + PHY                                 ;;----|D884/----\----;
                      ASL A                               ;;----|D885/----\----;
                      STA.B !SpriteYSpeed,X               ;;----|D886/----\----;SPEED SETTINGS!   
                      PLY                                 ;;----|D888/----\----;
                      LDA.W DATA_01DD51,Y                 ;;----|D889/----\----;
                      ASL A                               ;;----|D88C/----\----;
                      STA.B !SpriteXSpeed,X               ;;----|D88D/----\----;
                      LDA.B #$10                          ;;----|D88F/----\----;
                      STA.W !SpriteMisc1540,X             ;;----|D891/----\----;
Return01D894:         RTS                                 ;;----|D894/----\----; Return 
                                                          ;;                   ;
CODE_01D895:          PHA                                 ;;----|D895/----\----;
                      SEC                                 ;;----|D896/----\----;
                      SBC.B #$76                          ;;----|D897/----\----;
                      TAY                                 ;;----|D899/----\----;
                      PLA                                 ;;----|D89A/----\----;
                      CMP.B #$96                          ;;----|D89B/----\----;
                      BCC CODE_01D8A4                     ;;----|D89D/----\----;
CODE_01D89F:          LDY.W !SpriteMisc160E,X             ;;----|D89F/----\----;
                      BRA +                               ;;----|D8A2/----\----;
                                                          ;;                   ;
CODE_01D8A4:          LDA.B !SpriteYPosLow,X              ;;----|D8A4/----\----;
                      STA.B !_8                           ;;----|D8A6/----\----;
                      LDA.W !SpriteXPosHigh,X             ;;----|D8A8/----\----;
                      STA.B !_9                           ;;----|D8AB/----\----;
                      LDA.B !SpriteXPosLow,X              ;;----|D8AD/----\----;
                      STA.B !_A                           ;;----|D8AF/----\----;
                      LDA.W !SpriteYPosHigh,X             ;;----|D8B1/----\----;
                      STA.B !_B                           ;;----|D8B4/----\----;
                      LDA.B !_0                           ;;----|D8B6/----\----;
                      STA.B !SpriteYPosLow,X              ;;----|D8B8/----\----;
                      LDA.B !_1                           ;;----|D8BA/----\----;
                      STA.W !SpriteXPosHigh,X             ;;----|D8BC/----\----;
                      LDA.B !_2                           ;;----|D8BF/----\----;
                      STA.B !SpriteXPosLow,X              ;;----|D8C1/----\----;
                      LDA.B !_3                           ;;----|D8C3/----\----;
                      STA.W !SpriteYPosHigh,X             ;;----|D8C5/----\----;
                    + PHB                                 ;;----|D8C8/----\----;
                      LDA.B #$07                          ;;----|D8C9/----\----;
                      PHA                                 ;;----|D8CB/----\----;
                      PLB                                 ;;----|D8CC/----\----;
                      LDA.W DATA_07FBF3,Y                 ;;----|D8CD/----\----;
                      STA.W !SpriteMisc151C,X             ;;----|D8D0/----\----;
                      LDA.W DATA_07FC13,Y                 ;;----|D8D3/----\----;
                      STA.W !SpriteMisc1528,X             ;;----|D8D6/----\----;
                      PLB                                 ;;----|D8D9/----\----;
                      LDA.W DATA_01DCD1,Y                 ;;----|D8DA/----\----;
                      STA.W !SpriteMisc1570,X             ;;----|D8DD/----\----;
                      STZ.W !SpriteMisc1534,X             ;;----|D8E0/----\----;
                      TYA                                 ;;----|D8E3/----\----;
                      STA.W !SpriteMisc160E,X             ;;----|D8E4/----\----;
                      LDA.W !SpriteMisc1540,X             ;;----|D8E7/----\----;
                      BNE CODE_01D933                     ;;----|D8EA/----\----;
                      STZ.W !SpriteMisc157C,X             ;;----|D8EC/----\----;
                      LDA.W DATA_01DCF1,Y                 ;;----|D8EF/----\----;
                      BEQ CODE_01D8FF                     ;;----|D8F2/----\----;
                      TAY                                 ;;----|D8F4/----\----;
                      LDA.B !SpriteYPosLow,X              ;;----|D8F5/----\----;
                      CPY.B #$01                          ;;----|D8F7/----\----;
                      BNE +                               ;;----|D8F9/----\----;
                      EOR.B #$0F                          ;;----|D8FB/----\----;
                    + BRA +                               ;;----|D8FD/----\----;
                                                          ;;                   ;
CODE_01D8FF:          LDA.B !SpriteXPosLow,X              ;;----|D8FF/----\----;
                    + AND.B #$0F                          ;;----|D901/----\----;
                      CMP.B #$0A                          ;;----|D903/----\----;
                      BCC +                               ;;----|D905/----\----;
                      LDA.B !SpriteTableC2,X              ;;----|D907/----\----;
                      CMP.B #$02                          ;;----|D909/----\----;
                      BEQ +                               ;;----|D90B/----\----;
                      INC.W !SpriteMisc157C,X             ;;----|D90D/----\----;
                    + LDA.B !SpriteYPosLow,X              ;;----|D910/----\----;
                      STA.B !_C                           ;;----|D912/----\----;
                      LDA.B !SpriteXPosLow,X              ;;----|D914/----\----;
                      STA.B !_D                           ;;----|D916/----\----;
                      JSR CODE_01D768                     ;;----|D918/----\----;
                      LDA.B !_C                           ;;----|D91B/----\----;
                      SEC                                 ;;----|D91D/----\----;
                      SBC.B !SpriteYPosLow,X              ;;----|D91E/----\----;
                      CLC                                 ;;----|D920/----\----;
                      ADC.B #$08                          ;;----|D921/----\----;
                      CMP.B #$10                          ;;----|D923/----\----;
                      BCS +                               ;;----|D925/----\----;
                      LDA.B !_D                           ;;----|D927/----\----;
                      SEC                                 ;;----|D929/----\----;
                      SBC.B !SpriteXPosLow,X              ;;----|D92A/----\----;
                      CLC                                 ;;----|D92C/----\----;
                      ADC.B #$08                          ;;----|D92D/----\----;
                      CMP.B #$10                          ;;----|D92F/----\----;
                      BCS +                               ;;----|D931/----\----;
CODE_01D933:          LDA.B #$01                          ;;----|D933/----\----;
                      STA.B !SpriteTableC2,X              ;;----|D935/----\----;
                      RTS                                 ;;----|D937/----\----; Return 
                                                          ;;                   ;
                    + LDA.B !_8                           ;;----|D938/----\----;
                      STA.B !SpriteYPosLow,X              ;;----|D93A/----\----;
                      LDA.B !_9                           ;;----|D93C/----\----;
                      STA.W !SpriteXPosHigh,X             ;;----|D93E/----\----;
                      LDA.B !_A                           ;;----|D941/----\----;
                      STA.B !SpriteXPosLow,X              ;;----|D943/----\----;
                      LDA.B !_B                           ;;----|D945/----\----;
                      STA.W !SpriteYPosHigh,X             ;;----|D947/----\----;
                      JMP CODE_01D861                     ;;----|D94A/----\----;
                                                          ;;                   ;
CODE_01D94D:          LDA.B !_0                           ;;----|D94D/----\----;
                      AND.B #$F0                          ;;----|D94F/----\----;
                      STA.B !_6                           ;;----|D951/----\----;
                      LDA.B !_2                           ;;----|D953/----\----;
                      LSR A                               ;;----|D955/----\----;
                      LSR A                               ;;----|D956/----\----;
                      LSR A                               ;;----|D957/----\----;
                      LSR A                               ;;----|D958/----\----;
                      PHA                                 ;;----|D959/----\----;
                      ORA.B !_6                           ;;----|D95A/----\----;
                      PHA                                 ;;----|D95C/----\----;
                      LDA.B !ScreenMode                   ;;----|D95D/----\----;
                      AND.B #$01                          ;;----|D95F/----\----;
                      BEQ CODE_01D977                     ;;----|D961/----\----;
                      PLA                                 ;;----|D963/----\----;
                      LDX.B !_1                           ;;----|D964/----\----;
                      CLC                                 ;;----|D966/----\----;
                      ADC.L DATA_00BA80,X                 ;;----|D967/----\----;
                      STA.B !_5                           ;;----|D96B/----\----;
                      LDA.L DATA_00BABC,X                 ;;----|D96D/----\----;
                      ADC.B !_3                           ;;----|D971/----\----;
                      STA.B !_6                           ;;----|D973/----\----;
                      BRA +                               ;;----|D975/----\----;
                                                          ;;                   ;
CODE_01D977:          PLA                                 ;;----|D977/----\----;
                      LDX.B !_3                           ;;----|D978/----\----;
                      CLC                                 ;;----|D97A/----\----;
                      ADC.L DATA_00BA60,X                 ;;----|D97B/----\----;
                      STA.B !_5                           ;;----|D97F/----\----;
                      LDA.L DATA_00BA9C,X                 ;;----|D981/----\----;
                      ADC.B !_1                           ;;----|D985/----\----;
                      STA.B !_6                           ;;----|D987/----\----;
                    + LDA.B #$7E                          ;;----|D989/----\----;
                      STA.B !_7                           ;;----|D98B/----\----;
                      LDX.W !CurSpriteProcess             ;;----|D98D/----\----; X = Sprite index 
                      LDA.B [!_5]                         ;;----|D990/----\----;
                      STA.W !Map16TileNumber              ;;----|D992/----\----;
                      INC.B !_7                           ;;----|D995/----\----;
                      LDA.B [!_5]                         ;;----|D997/----\----;
                      PLY                                 ;;----|D999/----\----;
                      STY.B !_5                           ;;----|D99A/----\----;
                      PHA                                 ;;----|D99C/----\----;
                      LDA.B !_5                           ;;----|D99D/----\----;
                      AND.B #$07                          ;;----|D99F/----\----;
                      TAY                                 ;;----|D9A1/----\----;
                      PLA                                 ;;----|D9A2/----\----;
                      AND.W DATA_018000,Y                 ;;----|D9A3/----\----;
                      RTS                                 ;;----|D9A6/----\----; Return 
                                                          ;;                   ;
CODE_01D9A7:          LDA.B !SpriteNumber,X               ;;----|D9A7/----\----;LINE GUIDE PLATFORM FUZZY       
                      CMP.B #$64                          ;;----|D9A9/----\----;DETERMINE SPRITE ITS DEALING WITH                
                      BEQ CODE_01D9D3                     ;;----|D9AB/----\----;
                      CMP.B #$65                          ;;----|D9AD/----\----;
                      BCC CODE_01D9D0                     ;;----|D9AF/----\----;PLATFORM!          
                      CMP.B #$68                          ;;----|D9B1/----\----;
                      BNE CODE_01D9BA                     ;;----|D9B3/----\----;
                      JSR CODE_01DBD4                     ;;----|D9B5/----\----;
                      BRA CODE_01D9C1                     ;;----|D9B8/----\----;
                                                          ;;                   ;
CODE_01D9BA:          CMP.B #$67                          ;;----|D9BA/----\----;
                      BNE CODE_01D9C6                     ;;----|D9BC/----\----;
                      JSR CODE_01DC0B                     ;;----|D9BE/----\----;
CODE_01D9C1:          JSR MarioSprInteractRt              ;;----|D9C1/----\----;
                      BRA +                               ;;----|D9C4/----\----;
                                                          ;;                   ;
CODE_01D9C6:          JSR MarioSprInteractRt              ;;----|D9C6/----\----;
                      JSL CODE_03C263                     ;;----|D9C9/----\----;
                    + JMP CODE_01D74D                     ;;----|D9CD/----\----;
                                                          ;;                   ;
CODE_01D9D0:          JMP CODE_01DAA2                     ;;----|D9D0/----\----;
                                                          ;;                   ;
CODE_01D9D3:          JSR CODE_01DC54                     ;;----|D9D3/----\----;
                      LDA.B !SpriteXPosLow,X              ;;----|D9D6/----\----;
                      PHA                                 ;;----|D9D8/----\----;
                      LDA.B !SpriteYPosLow,X              ;;----|D9D9/----\----;
                      PHA                                 ;;----|D9DB/----\----;
                      JSR CODE_01D74D                     ;;----|D9DC/----\----;
                      PLA                                 ;;----|D9DF/----\----;
                      SEC                                 ;;----|D9E0/----\----;
                      SBC.B !SpriteYPosLow,X              ;;----|D9E1/----\----;
                      EOR.B #$FF                          ;;----|D9E3/----\----;
                      INC A                               ;;----|D9E5/----\----;
                      STA.W !TileGenerateTrackA           ;;----|D9E6/----\----;
                      PLA                                 ;;----|D9E9/----\----;
                      SEC                                 ;;----|D9EA/----\----;
                      SBC.B !SpriteXPosLow,X              ;;----|D9EB/----\----;
                      EOR.B #$FF                          ;;----|D9ED/----\----;
                      INC A                               ;;----|D9EF/----\----;
                      STA.W !TileGenerateTrackB           ;;----|D9F0/----\----;
                      LDA.B !PlayerBlockedDir             ;;----|D9F3/----\----;
                      AND.B #$03                          ;;----|D9F5/----\----;
                      BNE Return01DA09                    ;;----|D9F7/----\----;
                      JSR CODE_01A80F                     ;;----|D9F9/----\----;
                      BCS CODE_01DA0A                     ;;----|D9FC/----\----;
CODE_01D9FE:          LDA.W !SpriteMisc163E,X             ;;----|D9FE/----\----;
                      BEQ Return01DA09                    ;;----|DA01/----\----;
                      STZ.W !SpriteMisc163E,X             ;;----|DA03/----\----;
                      STZ.W !PlayerClimbingRope           ;;----|DA06/----\----;
Return01DA09:         RTS                                 ;;----|DA09/----\----; Return 
                                                          ;;                   ;
CODE_01DA0A:          LDA.W !SpriteStatus,X               ;;----|DA0A/----\----;
                      BEQ CODE_01DA37                     ;;----|DA0D/----\----;
                      LDA.W !CarryingFlag                 ;;----|DA0F/----\----; \ Branch if carrying an enemy... 
                      ORA.W !PlayerRidingYoshi            ;;----|DA12/----\----;  | ...or if on Yoshi 
                      BNE CODE_01D9FE                     ;;----|DA15/----\----; / 
                      LDA.B #$03                          ;;----|DA17/----\----;
                      STA.W !SpriteMisc163E,X             ;;----|DA19/----\----;
                      LDA.W !SpriteMisc154C,X             ;;----|DA1C/----\----;
                      BNE Return01DA8F                    ;;----|DA1F/----\----;
                      LDA.W !PlayerClimbingRope           ;;----|DA21/----\----;
                      BNE CODE_01DA2F                     ;;----|DA24/----\----;
                      LDA.B !byetudlrHold                 ;;----|DA26/----\----;
                      AND.B #$08                          ;;----|DA28/----\----;
                      BEQ Return01DA8F                    ;;----|DA2A/----\----;
                      STA.W !PlayerClimbingRope           ;;----|DA2C/----\----;
CODE_01DA2F:          BIT.B !byetudlrFrame                ;;----|DA2F/----\----;
                      BPL +                               ;;----|DA31/----\----;
                      LDA.B #$B0                          ;;----|DA33/----\----;
                      STA.B !PlayerYSpeed                 ;;----|DA35/----\----;
CODE_01DA37:          STZ.W !PlayerClimbingRope           ;;----|DA37/----\----;
                      LDA.B #$10                          ;;----|DA3A/----\----;
                      STA.W !SpriteMisc154C,X             ;;----|DA3C/----\----;
                    + LDY.B #$00                          ;;----|DA3F/----\----;
                      LDA.W !TileGenerateTrackA           ;;----|DA41/----\----;
                      BPL +                               ;;----|DA44/----\----;
                      DEY                                 ;;----|DA46/----\----;
                    + CLC                                 ;;----|DA47/----\----;
                      ADC.B !PlayerYPosNext               ;;----|DA48/----\----;
                      STA.B !PlayerYPosNext               ;;----|DA4A/----\----;
                      TYA                                 ;;----|DA4C/----\----;
                      ADC.B !PlayerYPosNext+1             ;;----|DA4D/----\----;
                      STA.B !PlayerYPosNext+1             ;;----|DA4F/----\----;
                      LDA.B !SpriteYPosLow,X              ;;----|DA51/----\----;
                      STA.B !_0                           ;;----|DA53/----\----;
                      LDA.W !SpriteXPosHigh,X             ;;----|DA55/----\----;
                      STA.B !_1                           ;;----|DA58/----\----;
                      REP #$20                            ;;----|DA5A/----\----; Accum (16 bit) 
                      LDA.B !PlayerYPosNext               ;;----|DA5C/----\----;
                      SEC                                 ;;----|DA5E/----\----;
                      SBC.B !_0                           ;;----|DA5F/----\----;
                      CMP.W #$0000                        ;;----|DA61/----\----;
                      BPL +                               ;;----|DA64/----\----;
                      INC.B !PlayerYPosNext               ;;----|DA66/----\----;
                    + SEP #$20                            ;;----|DA68/----\----; Accum (8 bit) 
                      LDA.W !TileGenerateTrackB           ;;----|DA6A/----\----;
                      JSR CODE_01DA90                     ;;----|DA6D/----\----;
                      LDA.B !SpriteXPosLow,X              ;;----|DA70/----\----;
                      SEC                                 ;;----|DA72/----\----;
                      SBC.B #$08                          ;;----|DA73/----\----;
                      CMP.B !PlayerXPosNext               ;;----|DA75/----\----;
                      BEQ CODE_01DA84                     ;;----|DA77/----\----;
                      BPL CODE_01DA7F                     ;;----|DA79/----\----;
                      LDA.B #$FF                          ;;----|DA7B/----\----;
                      BRA +                               ;;----|DA7D/----\----;
                                                          ;;                   ;
CODE_01DA7F:          LDA.B #$01                          ;;----|DA7F/----\----;
                    + JSR CODE_01DA90                     ;;----|DA81/----\----;
CODE_01DA84:          LDA.W !SpriteMisc1626,X             ;;----|DA84/----\----;
                      BEQ Return01DA8F                    ;;----|DA87/----\----;
                      STZ.W !SpriteMisc1626,X             ;;----|DA89/----\----;
                      STZ.W !SpriteMisc1540,X             ;;----|DA8C/----\----;
Return01DA8F:         RTS                                 ;;----|DA8F/----\----; Return 
                                                          ;;                   ;
CODE_01DA90:          LDY.B #$00                          ;;----|DA90/----\----;
                      CMP.B #$00                          ;;----|DA92/----\----;
                      BPL +                               ;;----|DA94/----\----;
                      DEY                                 ;;----|DA96/----\----;
                    + CLC                                 ;;----|DA97/----\----;
                      ADC.B !PlayerXPosNext               ;;----|DA98/----\----;
                      STA.B !PlayerXPosNext               ;;----|DA9A/----\----;
                      TYA                                 ;;----|DA9C/----\----;
                      ADC.B !PlayerXPosNext+1             ;;----|DA9D/----\----;
                      STA.B !PlayerXPosNext+1             ;;----|DA9F/----\----;
                      RTS                                 ;;----|DAA1/----\----; Return 
                                                          ;;                   ;
CODE_01DAA2:          LDY.B #$18                          ;;----|DAA2/----\----;LINE GUIDED PLATFORM CODE               
                      LDA.W !SpriteMisc1602,X             ;;----|DAA4/----\----;
                      BEQ +                               ;;----|DAA7/----\----;
                      LDY.B #$28                          ;;----|DAA9/----\----;CONDITIONAL DEPENDING ON PLATFORM TYPE?               
                    + STY.B !_0                           ;;----|DAAB/----\----;
                      LDA.B !SpriteXPosLow,X              ;;----|DAAD/----\----;
                      PHA                                 ;;----|DAAF/----\----;
                      SEC                                 ;;----|DAB0/----\----;
                      SBC.B !_0                           ;;----|DAB1/----\----;
                      STA.B !SpriteXPosLow,X              ;;----|DAB3/----\----;
                      LDA.W !SpriteYPosHigh,X             ;;----|DAB5/----\----;
                      PHA                                 ;;----|DAB8/----\----;
                      SBC.B #$00                          ;;----|DAB9/----\----;
                      STA.W !SpriteYPosHigh,X             ;;----|DABB/----\----;
                      LDA.B !SpriteYPosLow,X              ;;----|DABE/----\----;
                      PHA                                 ;;----|DAC0/----\----;
                      SEC                                 ;;----|DAC1/----\----;
                      SBC.B #$08                          ;;----|DAC2/----\----;
                      STA.B !SpriteYPosLow,X              ;;----|DAC4/----\----;
                      LDA.W !SpriteXPosHigh,X             ;;----|DAC6/----\----;
                      PHA                                 ;;----|DAC9/----\----;
                      SBC.B #$00                          ;;----|DACA/----\----;
                      STA.W !SpriteXPosHigh,X             ;;----|DACC/----\----;
                      JSR CODE_01B2DF                     ;;----|DACF/----\----;DRAW GFX  .  RELIES ON NEW POSITIONS MADE UP THERE.      
                      PLA                                 ;;----|DAD2/----\----;RESTORE POSITIONS                     
                      STA.W !SpriteXPosHigh,X             ;;----|DAD3/----\----;
                      PLA                                 ;;----|DAD6/----\----;
                      STA.B !SpriteYPosLow,X              ;;----|DAD7/----\----;
                      PLA                                 ;;----|DAD9/----\----;
                      STA.W !SpriteYPosHigh,X             ;;----|DADA/----\----;
                      PLA                                 ;;----|DADD/----\----;
                      STA.B !SpriteXPosLow,X              ;;----|DADE/----\----;
                      LDA.B !SpriteXPosLow,X              ;;----|DAE0/----\----;
                      PHA                                 ;;----|DAE2/----\----;
                      JSR CODE_01D74D                     ;;----|DAE3/----\----;LINE GUIDE HANDLER???        
                      PLA                                 ;;----|DAE6/----\----;
                      SEC                                 ;;----|DAE7/----\----;
                      SBC.B !SpriteXPosLow,X              ;;----|DAE8/----\----;
                      LDY.W !SpriteMisc1528,X             ;;----|DAEA/----\----;
                      PHY                                 ;;----|DAED/----\----;
                      EOR.B #$FF                          ;;----|DAEE/----\----;
                      INC A                               ;;----|DAF0/----\----;
                      STA.W !SpriteMisc1528,X             ;;----|DAF1/----\----;
                      LDY.B #$18                          ;;----|DAF4/----\----;
                      LDA.W !SpriteMisc1602,X             ;;----|DAF6/----\----;
                      BEQ +                               ;;----|DAF9/----\----;
                      LDY.B #$28                          ;;----|DAFB/----\----;
                    + STY.B !_0                           ;;----|DAFD/----\----;
                      LDA.B !SpriteXPosLow,X              ;;----|DAFF/----\----;
                      PHA                                 ;;----|DB01/----\----;
                      SEC                                 ;;----|DB02/----\----;
                      SBC.B !_0                           ;;----|DB03/----\----;
                      STA.B !SpriteXPosLow,X              ;;----|DB05/----\----;
                      LDA.W !SpriteYPosHigh,X             ;;----|DB07/----\----;
                      PHA                                 ;;----|DB0A/----\----;
                      SBC.B #$00                          ;;----|DB0B/----\----;
                      STA.W !SpriteYPosHigh,X             ;;----|DB0D/----\----;
                      LDA.B !SpriteYPosLow,X              ;;----|DB10/----\----;
                      PHA                                 ;;----|DB12/----\----;
                      SEC                                 ;;----|DB13/----\----;
                      SBC.B #$08                          ;;----|DB14/----\----;
                      STA.B !SpriteYPosLow,X              ;;----|DB16/----\----;
                      LDA.W !SpriteXPosHigh,X             ;;----|DB18/----\----;
                      PHA                                 ;;----|DB1B/----\----;
                      SBC.B #$00                          ;;----|DB1C/----\----;
                      STA.W !SpriteXPosHigh,X             ;;----|DB1E/----\----;
                      JSR CODE_01B457                     ;;----|DB21/----\----;CUSTOM INTERACTION HANDLER         
                      BCC +                               ;;----|DB24/----\----;
                      LDA.W !SpriteMisc1626,X             ;;----|DB26/----\----;
                      BEQ +                               ;;----|DB29/----\----;
                      STZ.W !SpriteMisc1626,X             ;;----|DB2B/----\----;
                      STZ.W !SpriteMisc1540,X             ;;----|DB2E/----\----;
                    + PLA                                 ;;----|DB31/----\----;
                      STA.W !SpriteXPosHigh,X             ;;----|DB32/----\----;
                      PLA                                 ;;----|DB35/----\----;
                      STA.B !SpriteYPosLow,X              ;;----|DB36/----\----;
                      PLA                                 ;;----|DB38/----\----;
                      STA.W !SpriteYPosHigh,X             ;;----|DB39/----\----;
                      PLA                                 ;;----|DB3C/----\----;
                      STA.B !SpriteXPosLow,X              ;;----|DB3D/----\----;
                      PLA                                 ;;----|DB3F/----\----;
                      STA.W !SpriteMisc1528,X             ;;----|DB40/----\----;
                      RTS                                 ;;----|DB43/----\----; Return 
                                                          ;;                   ;
CODE_01DB44:          LDA.B !SpriteLock                   ;;----|DB44/----\----; \ Branch if sprites locked 
                      BNE +                               ;;----|DB46/----\----; / 
                      JSR SubUpdateSprPos                 ;;----|DB48/----\----;
                      LDA.W !SpriteMisc1540,X             ;;----|DB4B/----\----;
                      BNE +                               ;;----|DB4E/----\----;
                      LDA.B !SpriteYSpeed,X               ;;----|DB50/----\----;
                      CMP.B #$20                          ;;----|DB52/----\----;
                      BMI +                               ;;----|DB54/----\----;
                      JSR CODE_01D7F4                     ;;----|DB56/----\----;
                    + RTS                                 ;;----|DB59/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
DATA_01DB5A:          db $18,$E8                          ;;----|DB5A/----\----;
                                                          ;;                   ;
Grinder:              JSR CODE_01DBA2                     ;;----|DB5C/----\----;
                      LDA.W !SpriteStatus,X               ;;----|DB5F/----\----;
                      CMP.B #$08                          ;;----|DB62/----\----;
                      BNE Return01DB95                    ;;----|DB64/----\----;
                      LDA.B !SpriteLock                   ;;----|DB66/----\----; \ Branch if sprites locked 
                      BNE Return01DB95                    ;;----|DB68/----\----; / 
                      LDA.B !TrueFrame                    ;;----|DB6A/----\----;
                      AND.B #$03                          ;;----|DB6C/----\----;
                      BNE +                               ;;----|DB6E/----\----;
                      LDA.B #$04                          ;;----|DB70/----\----; \ Play sound effect 
                      STA.W !SPCIO1                       ;;----|DB72/----\----; / 
                    + JSR SubOffscreen0Bnk1               ;;----|DB75/----\----;
                      JSR MarioSprInteractRt              ;;----|DB78/----\----;
                      LDY.W !SpriteMisc157C,X             ;;----|DB7B/----\----;
                      LDA.W DATA_01DB5A,Y                 ;;----|DB7E/----\----;
                      STA.B !SpriteXSpeed,X               ;;----|DB81/----\----;
                      JSR SubUpdateSprPos                 ;;----|DB83/----\----;
                      JSR IsOnGround                      ;;----|DB86/----\----;
                      BEQ +                               ;;----|DB89/----\----;
                      STZ.B !SpriteYSpeed,X               ;;----|DB8B/----\----; Sprite Y Speed = 0 
                    + JSR IsTouchingObjSide               ;;----|DB8D/----\----;
                      BEQ Return01DB95                    ;;----|DB90/----\----;
                      JSR FlipSpriteDir                   ;;----|DB92/----\----;
Return01DB95:         RTS                                 ;;----|DB95/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
DATA_01DB96:          db $F8,$08,$F8,$08                  ;;----|DB96/----\----;
                                                          ;;                   ;
DATA_01DB9A:          db $00,$00,$10,$10                  ;;----|DB9A/----\----;
                                                          ;;                   ;
DATA_01DB9E:          db $03,$43,$83,$C3                  ;;----|DB9E/----\----;
                                                          ;;                   ;
CODE_01DBA2:          JSR GetDrawInfoBnk1                 ;;----|DBA2/----\----;
                      PHX                                 ;;----|DBA5/----\----;
                      LDX.B #$03                          ;;----|DBA6/----\----;
                    - LDA.B !_0                           ;;----|DBA8/----\----;
                      CLC                                 ;;----|DBAA/----\----;
                      ADC.W DATA_01DB96,X                 ;;----|DBAB/----\----;
                      STA.W !OAMTileXPos+$100,Y           ;;----|DBAE/----\----;
                      LDA.B !_1                           ;;----|DBB1/----\----;
                      CLC                                 ;;----|DBB3/----\----;
                      ADC.W DATA_01DB9A,X                 ;;----|DBB4/----\----;
                      STA.W !OAMTileYPos+$100,Y           ;;----|DBB7/----\----;
                      LDA.B !EffFrame                     ;;----|DBBA/----\----;
                      AND.B #$02                          ;;----|DBBC/----\----;
                      ORA.B #$6C                          ;;----|DBBE/----\----;
                      STA.W !OAMTileNo+$100,Y             ;;----|DBC0/----\----;
                      LDA.W DATA_01DB9E,X                 ;;----|DBC3/----\----;
                      STA.W !OAMTileAttr+$100,Y           ;;----|DBC6/----\----;
                      INY                                 ;;----|DBC9/----\----;
                      INY                                 ;;----|DBCA/----\----;
                      INY                                 ;;----|DBCB/----\----;
                      INY                                 ;;----|DBCC/----\----;
                      DEX                                 ;;----|DBCD/----\----;
                      BPL -                               ;;----|DBCE/----\----;
CODE_01DBD0:          LDA.B #$03                          ;;----|DBD0/----\----;
                      BRA +                               ;;----|DBD2/----\----;
                                                          ;;                   ;
CODE_01DBD4:          JSR SubSprGfx2Entry1                ;;----|DBD4/----\----;
                      LDY.W !SpriteOAMIndex,X             ;;----|DBD7/----\----; Y = Index into sprite OAM 
                      LDA.W !OAMTileXPos+$100,Y           ;;----|DBDA/----\----;
                      SEC                                 ;;----|DBDD/----\----;
                      SBC.B #$08                          ;;----|DBDE/----\----;
                      STA.W !OAMTileXPos+$100,Y           ;;----|DBE0/----\----;
                      LDA.W !OAMTileYPos+$100,Y           ;;----|DBE3/----\----;
                      SEC                                 ;;----|DBE6/----\----;
                      SBC.B #$08                          ;;----|DBE7/----\----;
                      STA.W !OAMTileYPos+$100,Y           ;;----|DBE9/----\----;
                      PHX                                 ;;----|DBEC/----\----;
                      LDA.B !EffFrame                     ;;----|DBED/----\----;
                      LSR A                               ;;----|DBEF/----\----;
                      LSR A                               ;;----|DBF0/----\----;
                      AND.B #$01                          ;;----|DBF1/----\----;
                      TAX                                 ;;----|DBF3/----\----;
                      LDA.B #$C8                          ;;----|DBF4/----\----;
                      STA.W !OAMTileNo+$100,Y             ;;----|DBF6/----\----;
                      LDA.W DATA_01DC09,X                 ;;----|DBF9/----\----;
                      ORA.B !SpriteProperties             ;;----|DBFC/----\----;
                      STA.W !OAMTileAttr+$100,Y           ;;----|DBFE/----\----;
                      LDA.B #$00                          ;;----|DC01/----\----;
                    + PLX                                 ;;----|DC03/----\----;
CODE_01DC04:          LDY.B #$02                          ;;----|DC04/----\----;
                      JMP FinishOAMWriteRt                ;;----|DC06/----\----;
                                                          ;;                   ;
                                                          ;;                   ;
DATA_01DC09:          db $05,$45                          ;;----|DC09/----\----;
                                                          ;;                   ;
CODE_01DC0B:          JSR GetDrawInfoBnk1                 ;;----|DC0B/----\----;
                      PHX                                 ;;----|DC0E/----\----;
                      LDX.B #$03                          ;;----|DC0F/----\----;
                    - LDA.B !_0                           ;;----|DC11/----\----;
                      CLC                                 ;;----|DC13/----\----;
                      ADC.W DATA_01DC3B,X                 ;;----|DC14/----\----;
                      STA.W !OAMTileXPos+$100,Y           ;;----|DC17/----\----;
                      LDA.B !_1                           ;;----|DC1A/----\----;
                      CLC                                 ;;----|DC1C/----\----;
                      ADC.W DATA_01DC3F,X                 ;;----|DC1D/----\----;
                      STA.W !OAMTileYPos+$100,Y           ;;----|DC20/----\----;
                      LDA.B !EffFrame                     ;;----|DC23/----\----;
                      AND.B #$02                          ;;----|DC25/----\----;
                      ORA.B #$6C                          ;;----|DC27/----\----;
                      STA.W !OAMTileNo+$100,Y             ;;----|DC29/----\----;
                      LDA.W DATA_01DC43,X                 ;;----|DC2C/----\----;
                      STA.W !OAMTileAttr+$100,Y           ;;----|DC2F/----\----;
                      INY                                 ;;----|DC32/----\----;
                      INY                                 ;;----|DC33/----\----;
                      INY                                 ;;----|DC34/----\----;
                      INY                                 ;;----|DC35/----\----;
                      DEX                                 ;;----|DC36/----\----;
                      BPL -                               ;;----|DC37/----\----;
                      BRA CODE_01DBD0                     ;;----|DC39/----\----;
                                                          ;;                   ;
                                                          ;;                   ;
DATA_01DC3B:          db $F0,$00,$F0,$00                  ;;----|DC3B/----\----;
                                                          ;;                   ;
DATA_01DC3F:          db $F0,$F0,$00,$00                  ;;----|DC3F/----\----;
                                                          ;;                   ;
DATA_01DC43:          db $33,$73,$B3,$F3                  ;;----|DC43/----\----;
                                                          ;;                   ;
RopeMotorTiles:       db $C0,$C2,$E0,$C2                  ;;----|DC47/----\----;
                                                          ;;                   ;
LineGuideRopeTiles:   db $C0,$CE,$CE,$CE,$CE,$CE,$CE,$CE  ;;----|DC4B/----\----;
                      db $CE                              ;;----|DC53/----\----;
                                                          ;;                   ;
CODE_01DC54:          JSR GetDrawInfoBnk1                 ;;----|DC54/----\----;
                      LDA.B !_0                           ;;----|DC57/----\----;
                      SEC                                 ;;----|DC59/----\----;
                      SBC.B #$08                          ;;----|DC5A/----\----;
                      STA.B !_0                           ;;----|DC5C/----\----;
                      LDA.B !_1                           ;;----|DC5E/----\----;
                      SEC                                 ;;----|DC60/----\----;
                      SBC.B #$08                          ;;----|DC61/----\----;
                      STA.B !_1                           ;;----|DC63/----\----;
                      TXA                                 ;;----|DC65/----\----;
                      ASL A                               ;;----|DC66/----\----;
                      ASL A                               ;;----|DC67/----\----;
                      EOR.B !EffFrame                     ;;----|DC68/----\----;
                      LSR A                               ;;----|DC6A/----\----;
                      LSR A                               ;;----|DC6B/----\----;
                      LSR A                               ;;----|DC6C/----\----;
                      AND.B #$03                          ;;----|DC6D/----\----;
                      STA.B !_2                           ;;----|DC6F/----\----;
                      LDA.B #$05                          ;;----|DC71/----\----;
                      CPX.B #$06                          ;;----|DC73/----\----;
                      BCC +                               ;;----|DC75/----\----;
                      LDY.W !SpriteMemorySetting          ;;----|DC77/----\----;
                      BEQ +                               ;;----|DC7A/----\----;
                      LDA.B #$09                          ;;----|DC7C/----\----;
                    + STA.B !_3                           ;;----|DC7E/----\----;
                      LDY.W !SpriteOAMIndex,X             ;;----|DC80/----\----; Y = Index into sprite OAM 
                      LDX.B #$00                          ;;----|DC83/----\----;
CODE_01DC85:          LDA.B !_0                           ;;----|DC85/----\----;
                      STA.W !OAMTileXPos+$100,Y           ;;----|DC87/----\----;
                      LDA.B !_1                           ;;----|DC8A/----\----;
                      STA.W !OAMTileYPos+$100,Y           ;;----|DC8C/----\----;
                      CLC                                 ;;----|DC8F/----\----;
                      ADC.B #$10                          ;;----|DC90/----\----;
                      STA.B !_1                           ;;----|DC92/----\----;
                      %LorW_X(LDA,LineGuideRopeTiles)     ;;----|DC94/----\----;
                      CPX.B #$00                          ;;----|DC97/----\----;
                      BNE +                               ;;----|DC99/----\----;
                      PHX                                 ;;----|DC9B/----\----;
                      LDX.B !_2                           ;;----|DC9C/----\----;
                      %LorW_X(LDA,RopeMotorTiles)         ;;----|DC9E/----\----;
                      PLX                                 ;;----|DCA1/----\----;
                    + STA.W !OAMTileNo+$100,Y             ;;----|DCA2/----\----;
                      LDA.B #$37                          ;;----|DCA5/----\----;
                      CPX.B #$01                          ;;----|DCA7/----\----;
                      BCC +                               ;;----|DCA9/----\----;
                      LDA.B #$31                          ;;----|DCAB/----\----;
                    + STA.W !OAMTileAttr+$100,Y           ;;----|DCAD/----\----;
                      INY                                 ;;----|DCB0/----\----;
                      INY                                 ;;----|DCB1/----\----;
                      INY                                 ;;----|DCB2/----\----;
                      INY                                 ;;----|DCB3/----\----;
                      INX                                 ;;----|DCB4/----\----;
                      CPX.B !_3                           ;;----|DCB5/----\----;
                      BNE CODE_01DC85                     ;;----|DCB7/----\----;
                      LDA.B #$DE                          ;;----|DCB9/----\----;
                      STA.W !OAMTileNo+$FC,Y              ;;----|DCBB/----\----;
                      LDX.W !CurSpriteProcess             ;;----|DCBE/----\----; X = Sprite index 
                      LDA.B #$04                          ;;----|DCC1/----\----;
                      CPX.B #$06                          ;;----|DCC3/----\----;
                      BCC +                               ;;----|DCC5/----\----;
                      LDY.W !SpriteMemorySetting          ;;----|DCC7/----\----;
                      BEQ +                               ;;----|DCCA/----\----;
                      LDA.B #$08                          ;;----|DCCC/----\----;
                    + JMP CODE_01DC04                     ;;----|DCCE/----\----;
                                                          ;;                   ;
                                                          ;;                   ;
DATA_01DCD1:          db $15,$15,$15,$15,$0C,$10,$10,$10  ;;----|DCD1/----\----;
                      db $10,$0C,$0C,$10,$10,$10,$10,$0C  ;;----|DCD9/----\----;
                      db $15,$15,$10,$10,$10,$10,$10,$10  ;;----|DCE1/----\----;
                      db $10,$10,$10,$10,$10,$10,$15,$15  ;;----|DCE9/----\----;
DATA_01DCF1:          db $00,$00,$00,$00,$00,$00,$01,$02  ;;----|DCF1/----\----;
                      db $00,$00,$00,$00,$02,$01,$00,$00  ;;----|DCF9/----\----;
                      db $00,$00,$01,$02,$01,$02,$00,$00  ;;----|DD01/----\----;
                      db $00,$00,$02,$02,$00,$00,$00,$00  ;;----|DD09/----\----;
DATA_01DD11:          db $00,$10,$00,$F0,$F4,$FC,$F0,$10  ;;----|DD11/----\----;
                      db $04,$0C,$0C,$00,$10,$F0,$FC,$F4  ;;----|DD19/----\----;
                      db $F0,$10,$F0,$10,$F0,$10,$F8,$F8  ;;----|DD21/----\----;
                      db $08,$08,$10,$10,$00,$00,$F0,$10  ;;----|DD29/----\----;
                      db $10,$00,$F0,$F0,$0C,$04,$10,$F0  ;;----|DD31/----\----;
                      db $00,$F4,$F4,$FC,$F0,$10,$00,$0C  ;;----|DD39/----\----;
                      db $10,$F0,$10,$00,$10,$F0,$08,$08  ;;----|DD41/----\----;
                      db $F8,$F8,$F0,$F0,$00,$00,$10,$F0  ;;----|DD49/----\----;
DATA_01DD51:          db $10,$00,$10,$00,$0C,$10,$04,$00  ;;----|DD51/----\----;
                      db $10,$0C,$0C,$10,$04,$00,$10,$0C  ;;----|DD59/----\----;
                      db $10,$10,$08,$08,$08,$08,$10,$10  ;;----|DD61/----\----;
                      db $10,$10,$00,$00,$10,$10,$10,$10  ;;----|DD69/----\----;
                      db $00,$F0,$00,$F0,$F4,$F0,$00,$FC  ;;----|DD71/----\----;
                      db $F0,$F4,$F4,$F0,$00,$FC,$F0,$F4  ;;----|DD79/----\----;
                      db $F0,$F0,$F8,$F8,$F8,$F8,$F0,$F0  ;;----|DD81/----\----;
                      db $F0,$F0,$00,$00,$F0,$F0,$F0      ;;----|DD89/----\----;
                                                          ;;                   ;
DATA_01DD90:          db $F0                              ;;----|DD90/----\----;
                                                          ;;                   ;
DATA_01DD91:          db $50,$78,$A0,$A0,$A0,$78,$50,$50  ;;----|DD91/----\----;
DATA_01DD99:          db $78                              ;;----|DD99/----\----;
                                                          ;;                   ;
DATA_01DD9A:          db $F0,$F0,$F0,$18,$40,$40,$40,$18  ;;----|DD9A/----\----;
DATA_01DDA2:          db $18,$03,$00,$00,$01,$01,$02,$02  ;;----|DDA2/----\----;
                      db $03,$FF                          ;;----|DDAA/----\----;
                                                          ;;                   ;
InitBonusGame:        LDA.W !DisableBonusSprite           ;;----|DDAC/----\----;
                      BEQ +                               ;;----|DDAF/----\----;
                      STZ.W !SpriteStatus,X               ;;----|DDB1/----\----;
                      RTS                                 ;;----|DDB4/----\----; Return 
                                                          ;;                   ;
                    + LDX.B #$09                          ;;----|DDB5/----\----;
CODE_01DDB7:          LDA.B #$08                          ;;----|DDB7/----\----; \ Sprite status = Normal 
                      STA.W !SpriteStatus,X               ;;----|DDB9/----\----; / 
                      LDA.B #$82                          ;;----|DDBC/----\----;
                      STA.W !SpriteNumber,X               ;;----|DDBE/----\----;
                      %LorW_X(LDA,DATA_01DD90)            ;;----|DDC1/----\----;
                      STA.B !SpriteXPosLow,X              ;;----|DDC4/----\----;
                      LDA.B #$00                          ;;----|DDC6/----\----;
                      STA.W !SpriteYPosHigh,X             ;;----|DDC8/----\----;
                      %LorW_X(LDA,DATA_01DD99)            ;;----|DDCB/----\----;
                      STA.B !SpriteYPosLow,X              ;;----|DDCE/----\----;
                      ASL A                               ;;----|DDD0/----\----;
                      LDA.B #$00                          ;;----|DDD1/----\----;
                      BCS +                               ;;----|DDD3/----\----;
                      INC A                               ;;----|DDD5/----\----;
                    + STA.W !SpriteXPosHigh,X             ;;----|DDD6/----\----;
                      JSL InitSpriteTables                ;;----|DDD9/----\----;
                      %LorW_X(LDA,DATA_01DDA2)            ;;----|DDDD/----\----;
                      STA.W !SpriteMisc157C,X             ;;----|DDE0/----\----;
                      TXA                                 ;;----|DDE3/----\----;
                      CLC                                 ;;----|DDE4/----\----;
                      ADC.B !TrueFrame                    ;;----|DDE5/----\----;
                      AND.B #$07                          ;;----|DDE7/----\----;
                      STA.W !SpriteMisc1570,X             ;;----|DDE9/----\----;
                      DEX                                 ;;----|DDEC/----\----;
                      BNE CODE_01DDB7                     ;;----|DDED/----\----;
                      STZ.W !BonusGameComplete            ;;----|DDEF/----\----;
                      STZ.W !BonusGame1UpCount            ;;----|DDF2/----\----;
                      JSL GetRand                         ;;----|DDF5/----\----;
                      EOR.B !TrueFrame                    ;;----|DDF9/----\----;
                      ADC.B !EffFrame                     ;;----|DDFB/----\----;
                      AND.B #$07                          ;;----|DDFD/----\----;
                      TAY                                 ;;----|DDFF/----\----;
                      LDA.W DATA_01DE21,Y                 ;;----|DE00/----\----;
                      STA.W !SpriteMisc1570+9             ;;----|DE03/----\----;
                      LDA.B #$01                          ;;----|DE06/----\----;
                      STA.B !SpriteTableC2+9              ;;----|DE08/----\----;
                      INC.W !DisableBonusSprite           ;;----|DE0A/----\----;
                      LDX.W !CurSpriteProcess             ;;----|DE0D/----\----; X = Sprite index 
                      RTS                                 ;;----|DE10/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
DATA_01DE11:          db $10,$00,$F0,$00                  ;;----|DE11/----\----;
                                                          ;;                   ;
DATA_01DE15:          db $00,$10,$00,$F0                  ;;----|DE15/----\----;
                                                          ;;                   ;
DATA_01DE19:          db $A0,$A0,$50,$50                  ;;----|DE19/----\----;
                                                          ;;                   ;
DATA_01DE1D:          db $F0,$40,$40,$F0                  ;;----|DE1D/----\----;
                                                          ;;                   ;
DATA_01DE21:          db $01,$01,$01,$04,$04,$04,$07,$07  ;;----|DE21/----\----;
                      db $07                              ;;----|DE29/----\----;
                                                          ;;                   ;
BonusGame:            STZ.W !SpriteOffscreenX,X           ;;----|DE2A/----\----;
                      CPX.B #$01                          ;;----|DE2D/----\----;
                      BNE +                               ;;----|DE2F/----\----;
                      JSR CODE_01E26A                     ;;----|DE31/----\----;
                    + JSR CODE_01DF19                     ;;----|DE34/----\----;
                      LDA.B !SpriteLock                   ;;----|DE37/----\----; \ Return if sprites locked 
                      BNE Return01DE40                    ;;----|DE39/----\----; / 
                      LDA.W !BonusGameComplete            ;;----|DE3B/----\----;
                      BEQ +                               ;;----|DE3E/----\----;
Return01DE40:         RTS                                 ;;----|DE40/----\----; Return 
                                                          ;;                   ;
                    + LDA.B !SpriteTableC2,X              ;;----|DE41/----\----;
                      BNE CODE_01DE8C                     ;;----|DE43/----\----;
                      LDA.B !EffFrame                     ;;----|DE45/----\----;
                      AND.B #$03                          ;;----|DE47/----\----;
                      BNE +                               ;;----|DE49/----\----;
                      INC.W !SpriteMisc1570,X             ;;----|DE4B/----\----;
                      LDA.W !SpriteMisc1570,X             ;;----|DE4E/----\----;
                      CMP.B #$09                          ;;----|DE51/----\----;
                      BNE +                               ;;----|DE53/----\----;
                      STZ.W !SpriteMisc1570,X             ;;----|DE55/----\----;
                    + JSR MarioSprInteractRt              ;;----|DE58/----\----;
                      BCC CODE_01DE8C                     ;;----|DE5B/----\----;
                      LDA.B !PlayerYSpeed                 ;;----|DE5D/----\----;
                      BPL CODE_01DE8C                     ;;----|DE5F/----\----;
                      LDA.B #$F4                          ;;----|DE61/----\----;
                      LDY.B !Powerup                      ;;----|DE63/----\----;
                      BEQ +                               ;;----|DE65/----\----;
                   if !_VER <= 1                ;\   IF   ;;+++++++++++++++++++; J & U
                      LDA.B #$00                          ;;----|DE67          ;
                   else                         ;<  ELSE  ;;-------------------; E0 & E1
                      LDA.B #$FC                          ;;         /----\----;
                   endif                        ;/ ENDIF  ;;+++++++++++++++++++;
                    + CLC                                 ;;----|DE69/----\----;
                      ADC.B !SpriteYPosLow,X              ;;----|DE6A/----\----;
                      SEC                                 ;;----|DE6C/----\----;
                      SBC.B !Layer1YPos                   ;;----|DE6D/----\----;
                      CMP.B !PlayerYPosScrRel             ;;----|DE6F/----\----;
                      BCS CODE_01DE8C                     ;;----|DE71/----\----;
                      LDA.B #$10                          ;;----|DE73/----\----;
                      STA.B !PlayerYSpeed                 ;;----|DE75/----\----;
                      LDA.B #$0B                          ;;----|DE77/----\----; \ Play sound effect 
                      STA.W !SPCIO0                       ;;----|DE79/----\----; / 
                      INC.B !SpriteTableC2,X              ;;----|DE7C/----\----;
                      LDY.W !SpriteMisc1570,X             ;;----|DE7E/----\----;
                      LDA.W DATA_01DE21,Y                 ;;----|DE81/----\----;
                      STA.W !SpriteMisc1570,X             ;;----|DE84/----\----;
                      LDA.B #$10                          ;;----|DE87/----\----;
                      STA.W !SpriteMisc1540,X             ;;----|DE89/----\----;
CODE_01DE8C:          LDY.W !SpriteMisc157C,X             ;;----|DE8C/----\----;
                      BMI Return01DEAF                    ;;----|DE8F/----\----;
                      LDA.B !SpriteXPosLow,X              ;;----|DE91/----\----;
                      CMP.W DATA_01DE19,Y                 ;;----|DE93/----\----;
                      BNE CODE_01DE9F                     ;;----|DE96/----\----;
                      LDA.B !SpriteYPosLow,X              ;;----|DE98/----\----;
                      CMP.W DATA_01DE1D,Y                 ;;----|DE9A/----\----;
                      BEQ +                               ;;----|DE9D/----\----;
CODE_01DE9F:          LDA.W DATA_01DE11,Y                 ;;----|DE9F/----\----;
                      STA.B !SpriteXSpeed,X               ;;----|DEA2/----\----;
                      LDA.W DATA_01DE15,Y                 ;;----|DEA4/----\----;
                      STA.B !SpriteYSpeed,X               ;;----|DEA7/----\----;
                      JSR SubSprXPosNoGrvty               ;;----|DEA9/----\----;
                      JSR SubSprYPosNoGrvty               ;;----|DEAC/----\----;
Return01DEAF:         RTS                                 ;;----|DEAF/----\----; Return 
                                                          ;;                   ;
                    + LDY.B #$09                          ;;----|DEB0/----\----;
CODE_01DEB2:          LDA.W !SpriteTableC2,Y              ;;----|DEB2/----\----;
                      BEQ CODE_01DED7                     ;;----|DEB5/----\----;
                      LDA.W !SpriteYPosLow,Y              ;;----|DEB7/----\----;
                      CLC                                 ;;----|DEBA/----\----;
                      ADC.B #$04                          ;;----|DEBB/----\----;
                      AND.B #$F8                          ;;----|DEBD/----\----;
                      STA.W !SpriteYPosLow,Y              ;;----|DEBF/----\----;
                      LDA.W !SpriteXPosLow,Y              ;;----|DEC2/----\----;
                      CLC                                 ;;----|DEC5/----\----;
                      ADC.B #$04                          ;;----|DEC6/----\----;
                      AND.B #$F8                          ;;----|DEC8/----\----;
                      STA.W !SpriteXPosLow,Y              ;;----|DECA/----\----;
                      DEY                                 ;;----|DECD/----\----;
                      BNE CODE_01DEB2                     ;;----|DECE/----\----;
                      INC.W !BonusGameComplete            ;;----|DED0/----\----;
                      JSR CODE_01DFD9                     ;;----|DED3/----\----;
                      RTS                                 ;;----|DED6/----\----; Return 
                                                          ;;                   ;
CODE_01DED7:          LDA.W !SpriteMisc157C,X             ;;----|DED7/----\----;
                      INC A                               ;;----|DEDA/----\----;
                      AND.B #$03                          ;;----|DEDB/----\----;
                      TAY                                 ;;----|DEDD/----\----;
                      STA.W !SpriteMisc157C,X             ;;----|DEDE/----\----;
                      BRA CODE_01DE9F                     ;;----|DEE1/----\----;
                                                          ;;                   ;
                                                          ;;                   ;
DATA_01DEE3:          db $58                              ;;----|DEE3/----\----;
                                                          ;;                   ;
DATA_01DEE4:          db $59                              ;;----|DEE4/----\----;
                                                          ;;                   ;
DATA_01DEE5:          db $83                              ;;----|DEE5/----\----;
                                                          ;;                   ;
DATA_01DEE6:          db $83,$48,$49,$58,$59,$83,$83,$48  ;;----|DEE6/----\----;
                      db $49,$34,$35,$83,$83,$24,$25,$34  ;;----|DEEE/----\----;
                      db $35,$83,$83,$24,$25,$36,$37,$83  ;;----|DEF6/----\----;
                      db $83,$26,$27,$36,$37,$83,$83,$26  ;;----|DEFE/----\----;
                      db $27                              ;;----|DF06/----\----;
                                                          ;;                   ;
DATA_01DF07:          db $04,$04,$04,$08,$08,$08,$0A,$0A  ;;----|DF07/----\----;
                      db $0A                              ;;----|DF0F/----\----;
                                                          ;;                   ;
DATA_01DF10:          db $00,$03,$05,$07,$08,$08,$07,$05  ;;----|DF10/----\----;
                      db $03                              ;;----|DF18/----\----;
                                                          ;;                   ;
CODE_01DF19:          LDA.W !SpriteMisc1540,X             ;;----|DF19/----\----;
                      LSR A                               ;;----|DF1C/----\----;
                      TAY                                 ;;----|DF1D/----\----;
                      LDA.W DATA_01DF10,Y                 ;;----|DF1E/----\----;
                      STA.B !_0                           ;;----|DF21/----\----;
                      LDY.W !SpriteOAMIndex,X             ;;----|DF23/----\----; Y = Index into sprite OAM 
                      LDA.B !SpriteXPosLow,X              ;;----|DF26/----\----;
                      SEC                                 ;;----|DF28/----\----;
                      SBC.B !Layer1XPos                   ;;----|DF29/----\----;
                      STA.W !OAMTileXPos+$110,Y           ;;----|DF2B/----\----;
                      STA.W !OAMTileXPos+$100,Y           ;;----|DF2E/----\----;
                      STA.W !OAMTileXPos+$108,Y           ;;----|DF31/----\----;
                      CLC                                 ;;----|DF34/----\----;
                      ADC.B #$08                          ;;----|DF35/----\----;
                      STA.W !OAMTileXPos+$104,Y           ;;----|DF37/----\----;
                      STA.W !OAMTileXPos+$10C,Y           ;;----|DF3A/----\----;
                      LDA.W !SpriteMisc154C,X             ;;----|DF3D/----\----;
                      CLC                                 ;;----|DF40/----\----;
                      BEQ CODE_01DF4E                     ;;----|DF41/----\----;
                      LSR A                               ;;----|DF43/----\----;
                      LSR A                               ;;----|DF44/----\----;
                      LSR A                               ;;----|DF45/----\----;
                      LSR A                               ;;----|DF46/----\----;
                      BRA +                               ;;----|DF47/----\----;
                                                          ;;                   ;
                      CLC                                 ;;----|DF49/----\----; \ Unreachable instructions 
                      ADC.W !CurSpriteProcess             ;;----|DF4A/----\----; / 
                    + LSR A                               ;;----|DF4D/----\----;
CODE_01DF4E:          PHP                                 ;;----|DF4E/----\----;
                      LDA.B !SpriteYPosLow,X              ;;----|DF4F/----\----;
                      SEC                                 ;;----|DF51/----\----;
                      SBC.B !_0                           ;;----|DF52/----\----;
                      SEC                                 ;;----|DF54/----\----;
                      SBC.B !Layer1YPos                   ;;----|DF55/----\----;
                      STA.W !OAMTileYPos+$110,Y           ;;----|DF57/----\----;
                      PLP                                 ;;----|DF5A/----\----;
                      BCS +                               ;;----|DF5B/----\----;
                      STA.W !OAMTileYPos+$100,Y           ;;----|DF5D/----\----;
                      STA.W !OAMTileYPos+$104,Y           ;;----|DF60/----\----;
                      CLC                                 ;;----|DF63/----\----;
                      ADC.B #$08                          ;;----|DF64/----\----;
                      STA.W !OAMTileYPos+$108,Y           ;;----|DF66/----\----;
                      STA.W !OAMTileYPos+$10C,Y           ;;----|DF69/----\----;
                    + LDA.W !SpriteMisc1570,X             ;;----|DF6C/----\----;
                      PHX                                 ;;----|DF6F/----\----;
                      PHA                                 ;;----|DF70/----\----;
                      ASL A                               ;;----|DF71/----\----;
                      ASL A                               ;;----|DF72/----\----;
                      TAX                                 ;;----|DF73/----\----;
                      %LorW_X(LDA,DATA_01DEE3)            ;;----|DF74/----\----;
                      STA.W !OAMTileNo+$100,Y             ;;----|DF77/----\----;
                      %LorW_X(LDA,DATA_01DEE4)            ;;----|DF7A/----\----;
                      STA.W !OAMTileNo+$104,Y             ;;----|DF7D/----\----;
                      %LorW_X(LDA,DATA_01DEE5)            ;;----|DF80/----\----;
                      STA.W !OAMTileNo+$108,Y             ;;----|DF83/----\----;
                      %LorW_X(LDA,DATA_01DEE6)            ;;----|DF86/----\----;
                      STA.W !OAMTileNo+$10C,Y             ;;----|DF89/----\----;
                      LDA.B #$E4                          ;;----|DF8C/----\----;
                      STA.W !OAMTileNo+$110,Y             ;;----|DF8E/----\----;
                      PLX                                 ;;----|DF91/----\----;
                      LDA.B !SpriteProperties             ;;----|DF92/----\----;
                      %LorW_X(ORA,DATA_01DF07)            ;;----|DF94/----\----;
                      STA.W !OAMTileAttr+$100,Y           ;;----|DF97/----\----;
                      STA.W !OAMTileAttr+$104,Y           ;;----|DF9A/----\----;
                      STA.W !OAMTileAttr+$108,Y           ;;----|DF9D/----\----;
                      STA.W !OAMTileAttr+$10C,Y           ;;----|DFA0/----\----;
                      ORA.B #$01                          ;;----|DFA3/----\----;
                      STA.W !OAMTileAttr+$110,Y           ;;----|DFA5/----\----;
                      PLX                                 ;;----|DFA8/----\----;
                      TYA                                 ;;----|DFA9/----\----;
                      LSR A                               ;;----|DFAA/----\----;
                      LSR A                               ;;----|DFAB/----\----;
                      TAY                                 ;;----|DFAC/----\----;
                      LDA.B #$00                          ;;----|DFAD/----\----;
                      STA.W !OAMTileSize+$40,Y            ;;----|DFAF/----\----;
                      STA.W !OAMTileSize+$41,Y            ;;----|DFB2/----\----;
                      STA.W !OAMTileSize+$42,Y            ;;----|DFB5/----\----;
                      STA.W !OAMTileSize+$43,Y            ;;----|DFB8/----\----;
                      LDA.B #$02                          ;;----|DFBB/----\----;
                      STA.W !OAMTileSize+$44,Y            ;;----|DFBD/----\----;
                      RTS                                 ;;----|DFC0/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
DATA_01DFC1:          db $00,$01,$02,$02,$03,$04,$04,$05  ;;----|DFC1/----\----;
                      db $06,$06,$07,$00,$00,$08,$04,$02  ;;----|DFC9/----\----;
                      db $08,$06,$03,$08,$07,$01,$08,$05  ;;----|DFD1/----\----;
                                                          ;;                   ;
CODE_01DFD9:          LDA.B #$07                          ;;----|DFD9/----\----;
                      STA.B !_0                           ;;----|DFDB/----\----;
CODE_01DFDD:          LDX.B #$02                          ;;----|DFDD/----\----;
CODE_01DFDF:          STX.B !_1                           ;;----|DFDF/----\----;
                      LDA.B !_0                           ;;----|DFE1/----\----;
                      ASL A                               ;;----|DFE3/----\----;
                      ADC.B !_0                           ;;----|DFE4/----\----;
                      CLC                                 ;;----|DFE6/----\----;
                      ADC.B !_1                           ;;----|DFE7/----\----;
                      TAY                                 ;;----|DFE9/----\----;
                      LDA.W DATA_01DFC1,Y                 ;;----|DFEA/----\----;
                      TAY                                 ;;----|DFED/----\----;
                      LDA.W DATA_01DD9A,Y                 ;;----|DFEE/----\----;
                      STA.B !_2                           ;;----|DFF1/----\----;
                      LDA.W DATA_01DD91,Y                 ;;----|DFF3/----\----;
                      STA.B !_3                           ;;----|DFF6/----\----;
                      LDY.B #$09                          ;;----|DFF8/----\----;
CODE_01DFFA:          LDA.W !SpriteYPosLow,Y              ;;----|DFFA/----\----;
                      CMP.B !_2                           ;;----|DFFD/----\----;
                      BNE CODE_01E008                     ;;----|DFFF/----\----;
                      LDA.W !SpriteXPosLow,Y              ;;----|E001/----\----;
                      CMP.B !_3                           ;;----|E004/----\----;
                      BEQ CODE_01E00D                     ;;----|E006/----\----;
CODE_01E008:          DEY                                 ;;----|E008/----\----;
                      CPY.B #$01                          ;;----|E009/----\----;
                      BNE CODE_01DFFA                     ;;----|E00B/----\----;
CODE_01E00D:          LDA.W !SpriteMisc1570,Y             ;;----|E00D/----\----;
                      STA.B !_4,X                         ;;----|E010/----\----;
                      STY.B !_7,X                         ;;----|E012/----\----;
                      DEX                                 ;;----|E014/----\----;
                      BPL CODE_01DFDF                     ;;----|E015/----\----;
                      LDA.B !_4                           ;;----|E017/----\----;
                      CMP.B !_5                           ;;----|E019/----\----;
                      BNE +                               ;;----|E01B/----\----;
                      CMP.B !_6                           ;;----|E01D/----\----;
                      BNE +                               ;;----|E01F/----\----;
                      INC.W !BonusGame1UpCount            ;;----|E021/----\----;
                      LDA.B #$70                          ;;----|E024/----\----;
                      LDY.B !_7                           ;;----|E026/----\----;
                      STA.W !SpriteMisc154C,Y             ;;----|E028/----\----;
                      LDY.B !_8                           ;;----|E02B/----\----;
                      STA.W !SpriteMisc154C,Y             ;;----|E02D/----\----;
                      LDY.B !_9                           ;;----|E030/----\----;
                      STA.W !SpriteMisc154C,Y             ;;----|E032/----\----;
                    + DEC.B !_0                           ;;----|E035/----\----;
                      BPL CODE_01DFDD                     ;;----|E037/----\----;
                      LDX.W !CurSpriteProcess             ;;----|E039/----\----; X = Sprite index 
                      LDY.B #$29                          ;;----|E03C/----\----;
                      LDA.W !BonusGame1UpCount            ;;----|E03E/----\----;
                      STA.W !BonusOneUpsRemain            ;;----|E041/----\----;
                      BNE +                               ;;----|E044/----\----;
                      LDA.B #$58                          ;;----|E046/----\----;
                      STA.W !BonusFinishTimer             ;;----|E048/----\----;
                      INY                                 ;;----|E04B/----\----;
                    + STY.W !SPCIO3                       ;;----|E04C/----\----; / Play sound effect 
                      RTS                                 ;;----|E04F/----\----; Return 
                                                          ;;                   ;
InitFireball:         LDA.B !SpriteYPosLow,X              ;;----|E050/----\----;
                      STA.W !SpriteMisc1528,X             ;;----|E052/----\----;
                      LDA.W !SpriteXPosHigh,X             ;;----|E055/----\----;
                      STA.W !SpriteMisc151C,X             ;;----|E058/----\----;
                    - LDA.B !SpriteYPosLow,X              ;;----|E05B/----\----;
                      CLC                                 ;;----|E05D/----\----;
                      ADC.B #$10                          ;;----|E05E/----\----;
                      STA.B !SpriteYPosLow,X              ;;----|E060/----\----;
                      LDA.W !SpriteXPosHigh,X             ;;----|E062/----\----;
                      ADC.B #$00                          ;;----|E065/----\----;
                      STA.W !SpriteXPosHigh,X             ;;----|E067/----\----;
                      JSR CODE_019140                     ;;----|E06A/----\----;
                      LDA.W !SpriteInLiquid,X             ;;----|E06D/----\----;
                      BEQ -                               ;;----|E070/----\----;
                      JSR CODE_01E0E2                     ;;----|E072/----\----;
                      LDA.B #$20                          ;;----|E075/----\----;
                      STA.W !SpriteMisc1540,X             ;;----|E077/----\----;
                      RTS                                 ;;----|E07A/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
DATA_01E07B:          db $F0,$DC,$D0,$C8,$C0,$B8,$B2,$AC  ;;----|E07B/----\----;
                      db $A6,$A0,$9A,$96,$92,$8C,$88,$84  ;;----|E083/----\----;
                      db $80,$04,$08,$0C,$10,$14          ;;----|E08B/----\----;
                                                          ;;                   ;
DATA_01E091:          db $70,$20                          ;;----|E091/----\----;
                                                          ;;                   ;
Fireballs:            STZ.W !SpriteOnYoshiTongue,X        ;;----|E093/----\----;
                      LDA.W !SpriteMisc1540,X             ;;----|E096/----\----;
                      BEQ CODE_01E0A7                     ;;----|E099/----\----;
                      STA.W !SpriteOnYoshiTongue,X        ;;----|E09B/----\----;
                      DEC A                               ;;----|E09E/----\----;
                      BNE +                               ;;----|E09F/----\----;
                      LDA.B #$27                          ;;----|E0A1/----\----; \ Play sound effect 
                      STA.W !SPCIO3                       ;;----|E0A3/----\----; / 
                    + RTS                                 ;;----|E0A6/----\----; Return 
                                                          ;;                   ;
CODE_01E0A7:          LDA.B !SpriteLock                   ;;----|E0A7/----\----;
                      BEQ +                               ;;----|E0A9/----\----;
                      JMP CODE_01E12D                     ;;----|E0AB/----\----;
                                                          ;;                   ;
                    + JSR MarioSprInteractRt              ;;----|E0AE/----\----;
                      JSR SetAnimationFrame               ;;----|E0B1/----\----;
                      JSR SetAnimationFrame               ;;----|E0B4/----\----;
                      LDA.W !SpriteOBJAttribute,X         ;;----|E0B7/----\----;
                      AND.B #$7F                          ;;----|E0BA/----\----;
                      LDY.B !SpriteYSpeed,X               ;;----|E0BC/----\----;
                      BMI +                               ;;----|E0BE/----\----;
                      INC.W !SpriteMisc1602,X             ;;----|E0C0/----\----;
                      INC.W !SpriteMisc1602,X             ;;----|E0C3/----\----;
                      ORA.B #$80                          ;;----|E0C6/----\----;
                    + STA.W !SpriteOBJAttribute,X         ;;----|E0C8/----\----;
                      JSR CODE_019140                     ;;----|E0CB/----\----;
                      LDA.W !SpriteInLiquid,X             ;;----|E0CE/----\----;
                      BEQ CODE_01E106                     ;;----|E0D1/----\----;
                      LDA.B !SpriteYSpeed,X               ;;----|E0D3/----\----;
                      BMI CODE_01E106                     ;;----|E0D5/----\----;
                      JSL GetRand                         ;;----|E0D7/----\----;
                      AND.B #$3F                          ;;----|E0DB/----\----;
                      ADC.B #$60                          ;;----|E0DD/----\----;
                      STA.W !SpriteMisc1540,X             ;;----|E0DF/----\----;
CODE_01E0E2:          LDA.B !SpriteYPosLow,X              ;;----|E0E2/----\----;
                      SEC                                 ;;----|E0E4/----\----;
                      SBC.W !SpriteMisc1528,X             ;;----|E0E5/----\----;
                      STA.B !_0                           ;;----|E0E8/----\----;
                      LDA.W !SpriteXPosHigh,X             ;;----|E0EA/----\----;
                      SBC.W !SpriteMisc151C,X             ;;----|E0ED/----\----;
                      LSR A                               ;;----|E0F0/----\----;
                      ROR.B !_0                           ;;----|E0F1/----\----;
                      LDA.B !_0                           ;;----|E0F3/----\----;
                      LSR A                               ;;----|E0F5/----\----;
                      LSR A                               ;;----|E0F6/----\----;
                      LSR A                               ;;----|E0F7/----\----;
                      TAY                                 ;;----|E0F8/----\----;
                      LDA.W DATA_01E07B,Y                 ;;----|E0F9/----\----;
                      BMI +                               ;;----|E0FC/----\----;
                      STA.W !SpriteMisc1564,X             ;;----|E0FE/----\----;
                      LDA.B #$80                          ;;----|E101/----\----;
                    + STA.B !SpriteYSpeed,X               ;;----|E103/----\----;
                      RTS                                 ;;----|E105/----\----; Return 
                                                          ;;                   ;
CODE_01E106:          JSR SubSprYPosNoGrvty               ;;----|E106/----\----;
                      LDA.B !EffFrame                     ;;----|E109/----\----;
                      AND.B #$07                          ;;----|E10B/----\----;
                      ORA.B !SpriteTableC2,X              ;;----|E10D/----\----;
                      BNE +                               ;;----|E10F/----\----;
                      JSL CODE_0285DF                     ;;----|E111/----\----;
                    + LDA.W !SpriteMisc1564,X             ;;----|E115/----\----;
                      BNE CODE_01E12A                     ;;----|E118/----\----;
                      LDA.B !SpriteYSpeed,X               ;;----|E11A/----\----;
                      BMI CODE_01E125                     ;;----|E11C/----\----;
                      LDY.B !SpriteTableC2,X              ;;----|E11E/----\----;
                      CMP.W DATA_01E091,Y                 ;;----|E120/----\----;
                      BCS CODE_01E12A                     ;;----|E123/----\----;
CODE_01E125:          CLC                                 ;;----|E125/----\----;
                      ADC.B #$02                          ;;----|E126/----\----;
                      STA.B !SpriteYSpeed,X               ;;----|E128/----\----;
CODE_01E12A:          JSR SubOffscreen0Bnk1               ;;----|E12A/----\----;
CODE_01E12D:          LDA.B !SpriteTableC2,X              ;;----|E12D/----\----;
                      BEQ CODE_01E198                     ;;----|E12F/----\----;
                      LDY.B !SpriteLock                   ;;----|E131/----\----;
                      BNE CODE_01E164                     ;;----|E133/----\----;
                      LDA.W !SpriteBlockedDirs,X          ;;----|E135/----\----; \ Branch if not on ground 
                      AND.B #$04                          ;;----|E138/----\----;  | 
                      BEQ CODE_01E151                     ;;----|E13A/----\----; / 
                      STZ.B !SpriteYSpeed,X               ;;----|E13C/----\----; Sprite Y Speed = 0 
                      LDA.W !SpriteMisc1558,X             ;;----|E13E/----\----;
                      BEQ CODE_01E14A                     ;;----|E141/----\----;
                      CMP.B #$01                          ;;----|E143/----\----;
                      BNE +                               ;;----|E145/----\----;
                      JMP CODE_019ACB                     ;;----|E147/----\----;
                                                          ;;                   ;
CODE_01E14A:          LDA.B #$80                          ;;----|E14A/----\----;
                      STA.W !SpriteMisc1558,X             ;;----|E14C/----\----;
                    + BRA CODE_01E164                     ;;----|E14F/----\----;
                                                          ;;                   ;
CODE_01E151:          TXA                                 ;;----|E151/----\----;
                      ASL A                               ;;----|E152/----\----;
                      ASL A                               ;;----|E153/----\----;
                      CLC                                 ;;----|E154/----\----;
                      ADC.B !TrueFrame                    ;;----|E155/----\----;
                      LDY.B #$F0                          ;;----|E157/----\----;
                      AND.B #$04                          ;;----|E159/----\----;
                      BEQ +                               ;;----|E15B/----\----;
                      LDY.B #$10                          ;;----|E15D/----\----;
                    + STY.B !SpriteXSpeed,X               ;;----|E15F/----\----;
                      JSR SubSprXPosNoGrvty               ;;----|E161/----\----;
CODE_01E164:          LDA.B !SpriteYPosLow,X              ;;----|E164/----\----;
                      CMP.B #$F0                          ;;----|E166/----\----;
                      BCC +                               ;;----|E168/----\----;
                      STZ.W !SpriteStatus,X               ;;----|E16A/----\----;
                    + JSR SubSprGfx2Entry1                ;;----|E16D/----\----;
                      LDY.W !SpriteOAMIndex,X             ;;----|E170/----\----; Y = Index into sprite OAM 
                      PHX                                 ;;----|E173/----\----;
                      LDA.B !EffFrame                     ;;----|E174/----\----;
                      AND.B #$0C                          ;;----|E176/----\----;
                      LSR A                               ;;----|E178/----\----;
                      ADC.W !CurSpriteProcess             ;;----|E179/----\----;
                      LSR A                               ;;----|E17C/----\----;
                      AND.B #$03                          ;;----|E17D/----\----;
                      TAX                                 ;;----|E17F/----\----;
                      LDA.W BowserFlameTiles,X            ;;----|E180/----\----;
                      STA.W !OAMTileNo+$100,Y             ;;----|E183/----\----;
                      LDA.W DATA_01E194,X                 ;;----|E186/----\----;
                      ORA.B !SpriteProperties             ;;----|E189/----\----;
                      STA.W !OAMTileAttr+$100,Y           ;;----|E18B/----\----;
                      PLX                                 ;;----|E18E/----\----;
                      RTS                                 ;;----|E18F/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
BowserFlameTiles:     db $2A,$2C,$2A,$2C                  ;;----|E190/----\----;
                                                          ;;                   ;
DATA_01E194:          db $05,$05,$45,$45                  ;;----|E194/----\----;
                                                          ;;                   ;
CODE_01E198:          LDA.B #$01                          ;;----|E198/----\----;
                      JSR SubSprGfx0Entry0                ;;----|E19A/----\----;
                      REP #$20                            ;;----|E19D/----\----; Accum (16 bit) 
                      LDA.W #$0008                        ;;----|E19F/----\----;
                      ASL A                               ;;----|E1A2/----\----;
                      ASL A                               ;;----|E1A3/----\----;
                      ASL A                               ;;----|E1A4/----\----;
                      ASL A                               ;;----|E1A5/----\----;
                      ASL A                               ;;----|E1A6/----\----;
                      CLC                                 ;;----|E1A7/----\----;
                      ADC.W #$8500                        ;;----|E1A8/----\----;
                      STA.W !DynGfxTilePtr+6              ;;----|E1AB/----\----;
                      CLC                                 ;;----|E1AE/----\----;
                      ADC.W #$0200                        ;;----|E1AF/----\----;
                      STA.W !DynGfxTilePtr+$10            ;;----|E1B2/----\----;
                      SEP #$20                            ;;----|E1B5/----\----; Accum (8 bit) 
                      RTS                                 ;;----|E1B7/----\----; Return 
                                                          ;;                   ;
InitKeyHole:          LDA.B !SpriteXPosLow,X              ;;----|E1B8/----\----;
                      CLC                                 ;;----|E1BA/----\----;
                      ADC.B #$08                          ;;----|E1BB/----\----;
                      STA.B !SpriteXPosLow,X              ;;----|E1BD/----\----;
                      LDA.W !SpriteYPosHigh,X             ;;----|E1BF/----\----;
                      ADC.B #$00                          ;;----|E1C2/----\----;
                      STA.W !SpriteYPosHigh,X             ;;----|E1C4/----\----;
                      RTS                                 ;;----|E1C7/----\----; Return 
                                                          ;;                   ;
Keyhole:              LDY.B #$0B                          ;;----|E1C8/----\----;
CODE_01E1CA:          LDA.W !SpriteStatus,Y               ;;----|E1CA/----\----;
                      CMP.B #$08                          ;;----|E1CD/----\----;
                      BCC CODE_01E1D8                     ;;----|E1CF/----\----;
                      LDA.W !SpriteNumber,Y               ;;----|E1D1/----\----;
                      CMP.B #$80                          ;;----|E1D4/----\----;
                      BEQ CODE_01E1DB                     ;;----|E1D6/----\----;
CODE_01E1D8:          DEY                                 ;;----|E1D8/----\----;
                      BPL CODE_01E1CA                     ;;----|E1D9/----\----;
CODE_01E1DB:          LDA.W !PlayerRidingYoshi            ;;----|E1DB/----\----;
                      BEQ CODE_01E1E5                     ;;----|E1DE/----\----;
                      LDA.W !YoshiHasKey                  ;;----|E1E0/----\----;
                      BNE CODE_01E1ED                     ;;----|E1E3/----\----;
CODE_01E1E5:          TYA                                 ;;----|E1E5/----\----;
                      STA.W !SpriteMisc151C,X             ;;----|E1E6/----\----;
                      BMI CODE_01E23A                     ;;----|E1E9/----\----;
                      BRA CODE_01E1F3                     ;;----|E1EB/----\----;
                                                          ;;                   ;
CODE_01E1ED:          JSL GetMarioClipping                ;;----|E1ED/----\----;
                      BRA CODE_01E201                     ;;----|E1F1/----\----;
                                                          ;;                   ;
CODE_01E1F3:          LDA.W !SpriteStatus,Y               ;;----|E1F3/----\----;
                      CMP.B #$0B                          ;;----|E1F6/----\----;
                      BNE CODE_01E23A                     ;;----|E1F8/----\----;
                      PHX                                 ;;----|E1FA/----\----;
                      TYX                                 ;;----|E1FB/----\----;
                      JSL GetSpriteClippingB              ;;----|E1FC/----\----;
                      PLX                                 ;;----|E200/----\----;
CODE_01E201:          JSL GetSpriteClippingA              ;;----|E201/----\----;
                      JSL CheckForContact                 ;;----|E205/----\----;
                      BCC CODE_01E23A                     ;;----|E209/----\----;
                      LDA.W !SpriteMisc154C,X             ;;----|E20B/----\----;
                      BNE CODE_01E23A                     ;;----|E20E/----\----;
                      LDA.B #$30                          ;;----|E210/----\----;
                      STA.W !KeyholeTimer                 ;;----|E212/----\----;
                      LDA.B #$10                          ;;----|E215/----\----;
                      STA.W !SPCIO2                       ;;----|E217/----\----; / Change music 
                      INC.W !PlayerIsFrozen               ;;----|E21A/----\----;
                      INC.B !SpriteLock                   ;;----|E21D/----\----;
                      LDA.W !SpriteYPosHigh,X             ;;----|E21F/----\----;
                      STA.W !KeyholeXPos+1                ;;----|E222/----\----;
                      LDA.B !SpriteXPosLow,X              ;;----|E225/----\----;
                      STA.W !KeyholeXPos                  ;;----|E227/----\----;
                      LDA.W !SpriteXPosHigh,X             ;;----|E22A/----\----;
                      STA.W !KeyholeYPos+1                ;;----|E22D/----\----;
                      LDA.B !SpriteYPosLow,X              ;;----|E230/----\----;
                      STA.W !KeyholeYPos                  ;;----|E232/----\----;
                      LDA.B #$30                          ;;----|E235/----\----;
                      STA.W !SpriteMisc154C,X             ;;----|E237/----\----;
CODE_01E23A:          JSR GetDrawInfoBnk1                 ;;----|E23A/----\----;
                      LDA.B !_0                           ;;----|E23D/----\----;
                      STA.W !OAMTileXPos+$100,Y           ;;----|E23F/----\----;
                      STA.W !OAMTileXPos+$104,Y           ;;----|E242/----\----;
                      LDA.B !_1                           ;;----|E245/----\----;
                      STA.W !OAMTileYPos+$100,Y           ;;----|E247/----\----;
                      CLC                                 ;;----|E24A/----\----;
                      ADC.B #$08                          ;;----|E24B/----\----;
                      STA.W !OAMTileYPos+$104,Y           ;;----|E24D/----\----;
                      LDA.B #$EB                          ;;----|E250/----\----;
                      STA.W !OAMTileNo+$100,Y             ;;----|E252/----\----;
                      LDA.B #$FB                          ;;----|E255/----\----;
                      STA.W !OAMTileNo+$104,Y             ;;----|E257/----\----;
                      LDA.B #$30                          ;;----|E25A/----\----;
                      STA.W !OAMTileAttr+$100,Y           ;;----|E25C/----\----;
                      STA.W !OAMTileAttr+$104,Y           ;;----|E25F/----\----;
                      LDY.B #$00                          ;;----|E262/----\----;
                      LDA.B #$01                          ;;----|E264/----\----;
                      JSR FinishOAMWriteRt                ;;----|E266/----\----;
                      RTS                                 ;;----|E269/----\----; Return 
                                                          ;;                   ;
CODE_01E26A:          LDA.B !TrueFrame                    ;;----|E26A/----\----;
                      AND.B #$3F                          ;;----|E26C/----\----;
                      BNE +                               ;;----|E26E/----\----;
                      LDA.W !BonusGame1UpCount            ;;----|E270/----\----;
                      BEQ +                               ;;----|E273/----\----;
                      DEC.W !BonusGame1UpCount            ;;----|E275/----\----;
                      JSR CODE_01E281                     ;;----|E278/----\----;
                    + LDA.B #$01                          ;;----|E27B/----\----;
                      STA.W !ActivateClusterSprite        ;;----|E27D/----\----;
                      RTS                                 ;;----|E280/----\----; Return 
                                                          ;;                   ;
CODE_01E281:          LDY.B #$07                          ;;----|E281/----\----;
CODE_01E283:          LDA.W !ClusterSpriteNumber,Y        ;;----|E283/----\----;
                      BEQ CODE_01E28C                     ;;----|E286/----\----;
                      DEY                                 ;;----|E288/----\----;
                      BPL CODE_01E283                     ;;----|E289/----\----;
                      RTS                                 ;;----|E28B/----\----; Return 
                                                          ;;                   ;
CODE_01E28C:          LDA.B #$01                          ;;----|E28C/----\----;
                      STA.W !ClusterSpriteNumber,Y        ;;----|E28E/----\----;
                      LDA.B #$00                          ;;----|E291/----\----;
                      STA.W !ClusterSpriteYPosLow,Y       ;;----|E293/----\----;
                      LDA.B #$01                          ;;----|E296/----\----;
                      STA.W !ClusterSpriteYPosHigh,Y      ;;----|E298/----\----;
                      LDA.B #$18                          ;;----|E29B/----\----;
                      STA.W !ClusterSpriteXPosLow,Y       ;;----|E29D/----\----;
                      LDA.B #$00                          ;;----|E2A0/----\----;
                      STA.W !ClusterSpriteXPosHigh,Y      ;;----|E2A2/----\----;
                      LDA.B #$01                          ;;----|E2A5/----\----;
                      STA.W !ClusterSpriteMisc1E66,Y      ;;----|E2A7/----\----;
                      LDA.B #$10                          ;;----|E2AA/----\----;
                      STA.W !ClusterSpriteMisc1E52,Y      ;;----|E2AC/----\----;
                      RTS                                 ;;----|E2AF/----\----; Return 
                                                          ;;                   ;
                      %insert_empty($0D,$18,$11,$0A)      ;;----|E2B0/----\----;
                                                          ;;                   ;
                      db $13,$14,$15,$16,$17,$18,$19      ;;----|E2C8/----\----;
                                                          ;;                   ;
MontyMole:            JSR SubOffscreen0Bnk1               ;;----|E2CF/----\----;
                      LDA.B !SpriteTableC2,X              ;;----|E2D2/----\----;
                      JSL ExecutePtr                      ;;----|E2D4/----\----;
                                                          ;;                   ;
                      dw CODE_01E2E0                      ;;----|E2D8/----\----;
                      dw CODE_01E309                      ;;----|E2DA/----\----;
                      dw CODE_01E37F                      ;;----|E2DC/----\----;
                      dw CODE_01E393                      ;;----|E2DE/----\----;
                                                          ;;                   ;
CODE_01E2E0:          JSR SubHorizPos                     ;;----|E2E0/----\----;
                      LDA.B !_F                           ;;----|E2E3/----\----;
                      CLC                                 ;;----|E2E5/----\----;
                      ADC.B #$60                          ;;----|E2E6/----\----;
                      CMP.B #$C0                          ;;----|E2E8/----\----;
                      BCS CODE_01E305                     ;;----|E2EA/----\----;
                      LDA.W !SpriteOffscreenX,X           ;;----|E2EC/----\----;
                      BNE CODE_01E305                     ;;----|E2EF/----\----;
                      INC.B !SpriteTableC2,X              ;;----|E2F1/----\----;
                      LDY.W !PlayerTurnLvl                ;;----|E2F3/----\----;
                      LDA.W !OWPlayerSubmap,Y             ;;----|E2F6/----\----;
                      TAY                                 ;;----|E2F9/----\----;
                      LDA.B #$68                          ;;----|E2FA/----\----;
                      CPY.B #$01                          ;;----|E2FC/----\----;
                      BEQ +                               ;;----|E2FE/----\----;
                      LDA.B #$20                          ;;----|E300/----\----;
                    + STA.W !SpriteMisc1540,X             ;;----|E302/----\----;
CODE_01E305:          JSR GetDrawInfoBnk1                 ;;----|E305/----\----;
                      RTS                                 ;;----|E308/----\----; Return 
                                                          ;;                   ;
CODE_01E309:          LDA.W !SpriteMisc1540,X             ;;----|E309/----\----;
                      ORA.W !SpriteOnYoshiTongue,X        ;;----|E30C/----\----;
                      BNE CODE_01E343                     ;;----|E30F/----\----;
                      INC.B !SpriteTableC2,X              ;;----|E311/----\----;
                      LDA.B #$B0                          ;;----|E313/----\----;
                      STA.B !SpriteYSpeed,X               ;;----|E315/----\----;
                      JSR IsSprOffScreen                  ;;----|E317/----\----;
                      BNE +                               ;;----|E31A/----\----;
                      TAY                                 ;;----|E31C/----\----;
                      JSR CODE_0199E1                     ;;----|E31D/----\----;
                    + JSR FaceMario                       ;;----|E320/----\----;
                      LDA.B !SpriteNumber,X               ;;----|E323/----\----;
                      CMP.B #$4E                          ;;----|E325/----\----;
                      BNE CODE_01E343                     ;;----|E327/----\----;
                      LDA.B !SpriteXPosLow,X              ;;----|E329/----\----; \ $9A = Sprite X position 
                      STA.B !TouchBlockXPos               ;;----|E32B/----\----;  | for block creation 
                      LDA.W !SpriteYPosHigh,X             ;;----|E32D/----\----;  | 
                      STA.B !TouchBlockXPos+1             ;;----|E330/----\----; / 
                      LDA.B !SpriteYPosLow,X              ;;----|E332/----\----; \ $98 = Sprite Y position 
                      STA.B !TouchBlockYPos               ;;----|E334/----\----;  | for block creation 
                      LDA.W !SpriteXPosHigh,X             ;;----|E336/----\----;  | 
                      STA.B !TouchBlockYPos+1             ;;----|E339/----\----; / 
                      LDA.B #$08                          ;;----|E33B/----\----; \ Block to generate = Mole hole 
                      STA.B !Map16TileGenerate            ;;----|E33D/----\----; / 
                      JSL GenerateTile                    ;;----|E33F/----\----;
CODE_01E343:          LDA.B !SpriteNumber,X               ;;----|E343/----\----;
                      CMP.B #$4D                          ;;----|E345/----\----;
                      BNE +                               ;;----|E347/----\----;
                      LDA.B !EffFrame                     ;;----|E349/----\----;
                      LSR A                               ;;----|E34B/----\----;
                      LSR A                               ;;----|E34C/----\----;
                      LSR A                               ;;----|E34D/----\----;
                      LSR A                               ;;----|E34E/----\----;
                      AND.B #$01                          ;;----|E34F/----\----;
                      TAY                                 ;;----|E351/----\----;
                      LDA.W DATA_01E35F,Y                 ;;----|E352/----\----;
                      STA.W !SpriteMisc1602,X             ;;----|E355/----\----;
                      LDA.W DATA_01E361,Y                 ;;----|E358/----\----;
                      JSR SubSprGfx0Entry0                ;;----|E35B/----\----;
                      RTS                                 ;;----|E35E/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
DATA_01E35F:          db $01,$02                          ;;----|E35F/----\----;
                                                          ;;                   ;
DATA_01E361:          db $00,$05                          ;;----|E361/----\----;
                                                          ;;                   ;
                    + LDA.B !EffFrame                     ;;----|E363/----\----;
                      ASL A                               ;;----|E365/----\----;
                      ASL A                               ;;----|E366/----\----;
                      AND.B #$C0                          ;;----|E367/----\----;
                      ORA.B #$31                          ;;----|E369/----\----;
                      STA.W !SpriteOBJAttribute,X         ;;----|E36B/----\----;
                      LDA.B #$03                          ;;----|E36E/----\----;
                      STA.W !SpriteMisc1602,X             ;;----|E370/----\----;
                      JSR SubSprGfx2Entry1                ;;----|E373/----\----;
                      LDA.W !SpriteOBJAttribute,X         ;;----|E376/----\----;
                      AND.B #$3F                          ;;----|E379/----\----;
                      STA.W !SpriteOBJAttribute,X         ;;----|E37B/----\----;
                      RTS                                 ;;----|E37E/----\----; Return 
                                                          ;;                   ;
CODE_01E37F:          JSR CODE_01E3EF                     ;;----|E37F/----\----;
                      LDA.B #$02                          ;;----|E382/----\----;
                      STA.W !SpriteMisc1602,X             ;;----|E384/----\----;
                      JSR IsOnGround                      ;;----|E387/----\----;
                      BEQ +                               ;;----|E38A/----\----;
                      INC.B !SpriteTableC2,X              ;;----|E38C/----\----;
                    + RTS                                 ;;----|E38E/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
DATA_01E38F:          db $10,$F0                          ;;----|E38F/----\----;
                                                          ;;                   ;
DATA_01E391:          db $18,$E8                          ;;----|E391/----\----;
                                                          ;;                   ;
CODE_01E393:          JSR CODE_01E3EF                     ;;----|E393/----\----;
                      LDA.W !SpriteMisc151C,X             ;;----|E396/----\----;
                      BNE CODE_01E3C7                     ;;----|E399/----\----;
                      JSR SetAnimationFrame               ;;----|E39B/----\----;
                      JSR SetAnimationFrame               ;;----|E39E/----\----;
                      JSL GetRand                         ;;----|E3A1/----\----;
                      AND.B #$01                          ;;----|E3A5/----\----;
                      BNE +                               ;;----|E3A7/----\----;
                      JSR FaceMario                       ;;----|E3A9/----\----;
                      LDA.B !SpriteXSpeed,X               ;;----|E3AC/----\----;
                      CMP.W DATA_01E391,Y                 ;;----|E3AE/----\----;
                      BEQ +                               ;;----|E3B1/----\----;
                      CLC                                 ;;----|E3B3/----\----;
                      ADC.W DATA_01EBB4,Y                 ;;----|E3B4/----\----;
                      STA.B !SpriteXSpeed,X               ;;----|E3B7/----\----;
                      TYA                                 ;;----|E3B9/----\----;
                      LSR A                               ;;----|E3BA/----\----;
                      ROR A                               ;;----|E3BB/----\----;
                      EOR.B !SpriteXSpeed,X               ;;----|E3BC/----\----;
                      BPL +                               ;;----|E3BE/----\----;
                      JSR CODE_01804E                     ;;----|E3C0/----\----;
                      JSR SetAnimationFrame               ;;----|E3C3/----\----;
                    + RTS                                 ;;----|E3C6/----\----; Return 
                                                          ;;                   ;
CODE_01E3C7:          JSR IsOnGround                      ;;----|E3C7/----\----;
                      BEQ CODE_01E3E9                     ;;----|E3CA/----\----;
                      JSR SetAnimationFrame               ;;----|E3CC/----\----;
                      JSR SetAnimationFrame               ;;----|E3CF/----\----;
                      LDY.W !SpriteMisc157C,X             ;;----|E3D2/----\----;
                      LDA.W DATA_01E38F,Y                 ;;----|E3D5/----\----;
                      STA.B !SpriteXSpeed,X               ;;----|E3D8/----\----;
                      LDA.W !SpriteMisc1558,X             ;;----|E3DA/----\----;
                      BNE +                               ;;----|E3DD/----\----;
                      LDA.B #$50                          ;;----|E3DF/----\----;
                      STA.W !SpriteMisc1558,X             ;;----|E3E1/----\----;
                      LDA.B #$D8                          ;;----|E3E4/----\----;
                      STA.B !SpriteYSpeed,X               ;;----|E3E6/----\----;
                    + RTS                                 ;;----|E3E8/----\----; Return 
                                                          ;;                   ;
CODE_01E3E9:          LDA.B #$01                          ;;----|E3E9/----\----;
                      STA.W !SpriteMisc1602,X             ;;----|E3EB/----\----;
                      RTS                                 ;;----|E3EE/----\----; Return 
                                                          ;;                   ;
CODE_01E3EF:          LDA.B !SpriteProperties             ;;----|E3EF/----\----;
                      PHA                                 ;;----|E3F1/----\----;
                      LDA.W !SpriteMisc1540,X             ;;----|E3F2/----\----;
                      BEQ +                               ;;----|E3F5/----\----;
                      LDA.B #$10                          ;;----|E3F7/----\----;
                      STA.B !SpriteProperties             ;;----|E3F9/----\----;
                    + JSR SubSprGfx2Entry1                ;;----|E3FB/----\----;
                      PLA                                 ;;----|E3FE/----\----;
                      STA.B !SpriteProperties             ;;----|E3FF/----\----;
                      LDA.B !SpriteLock                   ;;----|E401/----\----; \ Branch if sprites locked 
                      BNE CODE_01E41C                     ;;----|E403/----\----; / 
                      JSR SubSprSpr_MarioSpr              ;;----|E405/----\----;
                      JSR SubUpdateSprPos                 ;;----|E408/----\----;
                      JSR IsOnGround                      ;;----|E40B/----\----;
                      BEQ +                               ;;----|E40E/----\----;
                      JSR SetSomeYSpeed__                 ;;----|E410/----\----;
                    + JSR IsTouchingObjSide               ;;----|E413/----\----;
                      BEQ +                               ;;----|E416/----\----;
                      JSR FlipSpriteDir                   ;;----|E418/----\----;
                    + RTS                                 ;;----|E41B/----\----; Return 
                                                          ;;                   ;
CODE_01E41C:          PLA                                 ;;----|E41C/----\----;
                      PLA                                 ;;----|E41D/----\----;
                      RTS                                 ;;----|E41E/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
DATA_01E41F:          db $08,$F8,$02,$03,$04,$04,$04,$04  ;;----|E41F/----\----;
                      db $04,$04,$04,$04                  ;;----|E427/----\----;
                                                          ;;                   ;
DryBonesAndBeetle:    LDA.W !SpriteStatus,X               ;;----|E42B/----\----;
                      CMP.B #$08                          ;;----|E42E/----\----;
                      BEQ +                               ;;----|E430/----\----;
                      ASL.W !SpriteOBJAttribute,X         ;;----|E432/----\----;
                      SEC                                 ;;----|E435/----\----;
                      ROR.W !SpriteOBJAttribute,X         ;;----|E436/----\----;
                      JMP CODE_01E5BF                     ;;----|E439/----\----;
                                                          ;;                   ;
                                                          ;;                   ;
DATA_01E43C:          db $08,$F8                          ;;----|E43C/----\----;
                                                          ;;                   ;
                    + LDA.W !SpriteMisc1534,X             ;;----|E43E/----\----;
                      BEQ CODE_01E4C0                     ;;----|E441/----\----;
                      JSR SubSprGfx2Entry1                ;;----|E443/----\----;
                      LDY.W !SpriteMisc1540,X             ;;----|E446/----\----;
                      BNE +                               ;;----|E449/----\----;
                      STZ.W !SpriteMisc1534,X             ;;----|E44B/----\----;
                      PHY                                 ;;----|E44E/----\----;
                      JSR FaceMario                       ;;----|E44F/----\----;
                      PLY                                 ;;----|E452/----\----;
                    + LDA.B #$48                          ;;----|E453/----\----;
                      CPY.B #$10                          ;;----|E455/----\----;
                      BCC +                               ;;----|E457/----\----;
                      CPY.B #$F0                          ;;----|E459/----\----;
                      BCS +                               ;;----|E45B/----\----;
                      LDA.B #$2E                          ;;----|E45D/----\----;
                    + LDY.W !SpriteOAMIndex,X             ;;----|E45F/----\----; Y = Index into sprite OAM 
                      STA.W !OAMTileNo+$100,Y             ;;----|E462/----\----;
                      TYA                                 ;;----|E465/----\----;
                      CLC                                 ;;----|E466/----\----;
                      ADC.B #$04                          ;;----|E467/----\----;
                      STA.W !SpriteOAMIndex,X             ;;----|E469/----\----;
                      PHX                                 ;;----|E46C/----\----;
                      LDA.W !SpriteMisc157C,X             ;;----|E46D/----\----;
                      TAX                                 ;;----|E470/----\----;
                      LDA.W !OAMTileXPos+$100,Y           ;;----|E471/----\----;
                      CLC                                 ;;----|E474/----\----;
                      ADC.W DATA_01E43C,X                 ;;----|E475/----\----;
                      PLX                                 ;;----|E478/----\----;
                      STA.W !OAMTileXPos+$104,Y           ;;----|E479/----\----;
                      LDA.W !OAMTileYPos+$100,Y           ;;----|E47C/----\----;
                      STA.W !OAMTileYPos+$104,Y           ;;----|E47F/----\----;
                      LDA.W !OAMTileAttr+$100,Y           ;;----|E482/----\----;
                      STA.W !OAMTileAttr+$104,Y           ;;----|E485/----\----;
                      LDA.W !OAMTileNo+$100,Y             ;;----|E488/----\----;
                      DEC A                               ;;----|E48B/----\----;
                      STA.W !OAMTileNo+$104,Y             ;;----|E48C/----\----;
                      LDA.W !SpriteMisc1540,X             ;;----|E48F/----\----;
                      BEQ +                               ;;----|E492/----\----;
                      CMP.B #$40                          ;;----|E494/----\----;
                      BCS +                               ;;----|E496/----\----;
                      LSR A                               ;;----|E498/----\----;
                      LSR A                               ;;----|E499/----\----;
                      PHP                                 ;;----|E49A/----\----;
                      LDA.W !OAMTileXPos+$100,Y           ;;----|E49B/----\----;
                      ADC.B #$00                          ;;----|E49E/----\----;
                      STA.W !OAMTileXPos+$100,Y           ;;----|E4A0/----\----;
                      PLP                                 ;;----|E4A3/----\----;
                      LDA.W !OAMTileXPos+$104,Y           ;;----|E4A4/----\----;
                      ADC.B #$00                          ;;----|E4A7/----\----;
                      STA.W !OAMTileXPos+$104,Y           ;;----|E4A9/----\----;
                    + LDY.B #$02                          ;;----|E4AC/----\----;
                      LDA.B #$01                          ;;----|E4AE/----\----;
                      JSR FinishOAMWriteRt                ;;----|E4B0/----\----;
                      JSR SubUpdateSprPos                 ;;----|E4B3/----\----;
                      JSR IsOnGround                      ;;----|E4B6/----\----;
                      BEQ +                               ;;----|E4B9/----\----;
                      STZ.B !SpriteYSpeed,X               ;;----|E4BB/----\----; \ Sprite Speed = 0 
                      STZ.B !SpriteXSpeed,X               ;;----|E4BD/----\----; / 
                    + RTS                                 ;;----|E4BF/----\----; Return 
                                                          ;;                   ;
CODE_01E4C0:          LDA.B !SpriteLock                   ;;----|E4C0/----\----;
                      ORA.W !SpriteMisc163E,X             ;;----|E4C2/----\----;
                      BEQ +                               ;;----|E4C5/----\----;
                      JMP CODE_01E5B6                     ;;----|E4C7/----\----;
                                                          ;;                   ;
                    + LDY.W !SpriteMisc157C,X             ;;----|E4CA/----\----;
                      LDA.W DATA_01E41F,Y                 ;;----|E4CD/----\----;
                      EOR.W !SpriteSlope,X                ;;----|E4D0/----\----;
                      ASL A                               ;;----|E4D3/----\----;
                      LDA.W DATA_01E41F,Y                 ;;----|E4D4/----\----;
                      BCC +                               ;;----|E4D7/----\----;
                      CLC                                 ;;----|E4D9/----\----;
                      ADC.W !SpriteSlope,X                ;;----|E4DA/----\----;
                    + STA.B !SpriteXSpeed,X               ;;----|E4DD/----\----;
                      LDA.W !SpriteMisc1540,X             ;;----|E4DF/----\----;
                      BNE CODE_01E4ED                     ;;----|E4E2/----\----;
                      TYA                                 ;;----|E4E4/----\----;
                      INC A                               ;;----|E4E5/----\----;
                      AND.W !SpriteBlockedDirs,X          ;;----|E4E6/----\----; \ Branch if not touching object 
                      AND.B #$03                          ;;----|E4E9/----\----;  | 
                      BEQ +                               ;;----|E4EB/----\----; / 
CODE_01E4ED:          STZ.B !SpriteXSpeed,X               ;;----|E4ED/----\----;
                    + JSR IsTouchingCeiling               ;;----|E4EF/----\----;
                      BEQ +                               ;;----|E4F2/----\----;
                      STZ.B !SpriteYSpeed,X               ;;----|E4F4/----\----; Sprite Y Speed = 0 
                    + JSR SubOffscreen0Bnk1               ;;----|E4F6/----\----;
                      JSR SubUpdateSprPos                 ;;----|E4F9/----\----;
                      LDA.B !SpriteNumber,X               ;;----|E4FC/----\----;
                      CMP.B #$31                          ;;----|E4FE/----\----;
                      BNE CODE_01E51E                     ;;----|E500/----\----;
                      LDA.W !SpriteMisc1540,X             ;;----|E502/----\----;
                      BEQ CODE_01E542                     ;;----|E505/----\----;
                      LDY.B #$00                          ;;----|E507/----\----;
                      CMP.B #$70                          ;;----|E509/----\----;
                      BCS +                               ;;----|E50B/----\----;
                      INY                                 ;;----|E50D/----\----;
                      INY                                 ;;----|E50E/----\----;
                      CMP.B #$08                          ;;----|E50F/----\----;
                      BCC +                               ;;----|E511/----\----;
                      CMP.B #$68                          ;;----|E513/----\----;
                      BCS +                               ;;----|E515/----\----;
                      INY                                 ;;----|E517/----\----;
                    + TYA                                 ;;----|E518/----\----;
                      STA.W !SpriteMisc1602,X             ;;----|E519/----\----;
                      BRA CODE_01E563                     ;;----|E51C/----\----;
                                                          ;;                   ;
CODE_01E51E:          CMP.B #$30                          ;;----|E51E/----\----;
                      BEQ CODE_01E52D                     ;;----|E520/----\----;
                      CMP.B #$32                          ;;----|E522/----\----;
                      BNE CODE_01E542                     ;;----|E524/----\----;
                      LDA.W !TranslevelNo                 ;;----|E526/----\----;
                      CMP.B #$31                          ;;----|E529/----\----;
                      BNE CODE_01E542                     ;;----|E52B/----\----;
CODE_01E52D:          LDA.W !SpriteMisc1540,X             ;;----|E52D/----\----;
                      BEQ CODE_01E542                     ;;----|E530/----\----;
                      CMP.B #$01                          ;;----|E532/----\----;
                      BNE +                               ;;----|E534/----\----;
                      JSL CODE_03C44E                     ;;----|E536/----\----;
                    + LDA.B #$02                          ;;----|E53A/----\----;
                      STA.W !SpriteMisc1602,X             ;;----|E53C/----\----;
                      JMP CODE_01E5B6                     ;;----|E53F/----\----;
                                                          ;;                   ;
CODE_01E542:          JSR IsOnGround                      ;;----|E542/----\----;
                      BEQ CODE_01E563                     ;;----|E545/----\----;
                      JSR SetSomeYSpeed__                 ;;----|E547/----\----;
                      JSR SetAnimationFrame               ;;----|E54A/----\----;
                      LDA.B !SpriteNumber,X               ;;----|E54D/----\----;
                      CMP.B #$32                          ;;----|E54F/----\----;
                      BNE CODE_01E557                     ;;----|E551/----\----;
                      STZ.B !SpriteTableC2,X              ;;----|E553/----\----;
                      BRA +                               ;;----|E555/----\----;
                                                          ;;                   ;
CODE_01E557:          LDA.W !SpriteMisc1570,X             ;;----|E557/----\----;
                      AND.B #$7F                          ;;----|E55A/----\----;
                      BNE +                               ;;----|E55C/----\----;
                      JSR FaceMario                       ;;----|E55E/----\----;
                    + BRA +                               ;;----|E561/----\----;
                                                          ;;                   ;
CODE_01E563:          STZ.W !SpriteMisc1570,X             ;;----|E563/----\----;
                      LDA.B !SpriteNumber,X               ;;----|E566/----\----;
                      CMP.B #$32                          ;;----|E568/----\----;
                      BNE +                               ;;----|E56A/----\----;
                      LDA.B !SpriteTableC2,X              ;;----|E56C/----\----;
                      BNE +                               ;;----|E56E/----\----;
                      INC.B !SpriteTableC2,X              ;;----|E570/----\----;
                      JSR FlipSpriteDir                   ;;----|E572/----\----;
                      JSR SubSprXPosNoGrvty               ;;----|E575/----\----;
                      JSR SubSprXPosNoGrvty               ;;----|E578/----\----;
                    + LDA.B !SpriteNumber,X               ;;----|E57B/----\----;
                      CMP.B #$31                          ;;----|E57D/----\----;
                      BNE CODE_01E598                     ;;----|E57F/----\----;
                      LDA.B !TrueFrame                    ;;----|E581/----\----;
                      LSR A                               ;;----|E583/----\----;
                      BCC +                               ;;----|E584/----\----;
                      INC.W !SpriteMisc1528,X             ;;----|E586/----\----;
                    + LDA.W !SpriteMisc1528,X             ;;----|E589/----\----;
                      BNE CODE_01E5B6                     ;;----|E58C/----\----;
                      INC.W !SpriteMisc1528,X             ;;----|E58E/----\----;
                      LDA.B #$A0                          ;;----|E591/----\----;
                      STA.W !SpriteMisc1540,X             ;;----|E593/----\----;
                      BRA CODE_01E5B6                     ;;----|E596/----\----;
                                                          ;;                   ;
CODE_01E598:          CMP.B #$30                          ;;----|E598/----\----;
                      BEQ CODE_01E5A7                     ;;----|E59A/----\----;
                      CMP.B #$32                          ;;----|E59C/----\----;
                      BNE CODE_01E5B6                     ;;----|E59E/----\----;
                      LDA.W !TranslevelNo                 ;;----|E5A0/----\----;
                      CMP.B #$31                          ;;----|E5A3/----\----;
                      BNE CODE_01E5B6                     ;;----|E5A5/----\----;
CODE_01E5A7:          LDA.W !SpriteMisc1570,X             ;;----|E5A7/----\----;
                      CLC                                 ;;----|E5AA/----\----;
                      ADC.B #$40                          ;;----|E5AB/----\----;
                      AND.B #$7F                          ;;----|E5AD/----\----;
                      BNE CODE_01E5B6                     ;;----|E5AF/----\----;
                      LDA.B #$3F                          ;;----|E5B1/----\----;
                      STA.W !SpriteMisc1540,X             ;;----|E5B3/----\----;
CODE_01E5B6:          JSR CODE_01E5C4                     ;;----|E5B6/----\----;
                      JSR SubSprSprInteract               ;;----|E5B9/----\----;
                      JSR FlipIfTouchingObj               ;;----|E5BC/----\----;
CODE_01E5BF:          JSL CODE_03C390                     ;;----|E5BF/----\----;
                      RTS                                 ;;----|E5C3/----\----; Return 
                                                          ;;                   ;
CODE_01E5C4:          JSR MarioSprInteractRt              ;;----|E5C4/----\----;
                      BCC Return01E610                    ;;----|E5C7/----\----;
                      LDA.B !PlayerYPosNow                ;;----|E5C9/----\----;
                      CLC                                 ;;----|E5CB/----\----;
                      ADC.B #$14                          ;;----|E5CC/----\----;
                      CMP.B !SpriteYPosLow,X              ;;----|E5CE/----\----;
                      BPL CODE_01E604                     ;;----|E5D0/----\----;
                      LDA.W !SpriteStompCounter           ;;----|E5D2/----\----;
                      BNE CODE_01E5DB                     ;;----|E5D5/----\----;
                      LDA.B !PlayerYSpeed                 ;;----|E5D7/----\----;
                      BMI CODE_01E604                     ;;----|E5D9/----\----;
CODE_01E5DB:          LDA.B !SpriteNumber,X               ;;----|E5DB/----\----;
                      CMP.B #$31                          ;;----|E5DD/----\----;
                      BNE CODE_01E5EB                     ;;----|E5DF/----\----;
                      LDA.W !SpriteMisc1540,X             ;;----|E5E1/----\----;
                      SEC                                 ;;----|E5E4/----\----;
                      SBC.B #$08                          ;;----|E5E5/----\----;
                      CMP.B #$60                          ;;----|E5E7/----\----;
                      BCC CODE_01E604                     ;;----|E5E9/----\----;
CODE_01E5EB:          JSR CODE_01AB46                     ;;----|E5EB/----\----;
                      JSL DisplayContactGfx               ;;----|E5EE/----\----;
                      LDA.B #$07                          ;;----|E5F2/----\----; \ Play sound effect 
                      STA.W !SPCIO0                       ;;----|E5F4/----\----; / 
                      JSL BoostMarioSpeed                 ;;----|E5F7/----\----;
                      INC.W !SpriteMisc1534,X             ;;----|E5FB/----\----;
                      LDA.B #$FF                          ;;----|E5FE/----\----;
                      STA.W !SpriteMisc1540,X             ;;----|E600/----\----;
                      RTS                                 ;;----|E603/----\----; Return 
                                                          ;;                   ;
CODE_01E604:          JSL HurtMario                       ;;----|E604/----\----;
                      LDA.W !IFrameTimer                  ;;----|E608/----\----; \ Return if Mario is invincible 
                      BNE Return01E610                    ;;----|E60B/----\----; / 
                      JSR FaceMario                       ;;----|E60D/----\----;
Return01E610:         RTS                                 ;;----|E610/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
DATA_01E611:          db $00,$01,$02,$02,$02,$01,$01,$00  ;;----|E611/----\----;
                      db $00                              ;;----|E619/----\----;
                                                          ;;                   ;
DATA_01E61A:          db $1E,$1B,$18,$18,$18,$1A,$1C,$1D  ;;----|E61A/----\----;
                      db $1E                              ;;----|E622/----\----;
                                                          ;;                   ;
SpringBoard:          LDA.B !SpriteLock                   ;;----|E623/----\----;
                      BEQ +                               ;;----|E625/----\----;
                      JMP CODE_01E6F0                     ;;----|E627/----\----;
                                                          ;;                   ;
                    + JSR SubOffscreen0Bnk1               ;;----|E62A/----\----;
                      JSR SubUpdateSprPos                 ;;----|E62D/----\----;
                      JSR IsOnGround                      ;;----|E630/----\----;
                      BEQ +                               ;;----|E633/----\----;
                      JSR CODE_0197D5                     ;;----|E635/----\----;
                    + JSR IsTouchingObjSide               ;;----|E638/----\----;
                      BEQ +                               ;;----|E63B/----\----;
                      JSR FlipSpriteDir                   ;;----|E63D/----\----;
                      LDA.B !SpriteXSpeed,X               ;;----|E640/----\----;
                      ASL A                               ;;----|E642/----\----;
                      PHP                                 ;;----|E643/----\----;
                      ROR.B !SpriteXSpeed,X               ;;----|E644/----\----;
                      PLP                                 ;;----|E646/----\----;
                      ROR.B !SpriteXSpeed,X               ;;----|E647/----\----;
                    + JSR IsTouchingCeiling               ;;----|E649/----\----;
                      BEQ +                               ;;----|E64C/----\----;
                      STZ.B !SpriteYSpeed,X               ;;----|E64E/----\----; Sprite Y Speed = 0 
                    + LDA.W !SpriteMisc1540,X             ;;----|E650/----\----;
                      BEQ CODE_01E6B0                     ;;----|E653/----\----;
                      LSR A                               ;;----|E655/----\----;
                      TAY                                 ;;----|E656/----\----;
                      LDA.W !PlayerRidingYoshi            ;;----|E657/----\----;
                      CMP.B #$01                          ;;----|E65A/----\----;
                      LDA.W DATA_01E61A,Y                 ;;----|E65C/----\----;
                      BCC +                               ;;----|E65F/----\----;
                      CLC                                 ;;----|E661/----\----;
                      ADC.B #$12                          ;;----|E662/----\----;
                    + STA.B !_0                           ;;----|E664/----\----;
                      LDA.W DATA_01E611,Y                 ;;----|E666/----\----;
                      STA.W !SpriteMisc1602,X             ;;----|E669/----\----;
                      LDA.B !SpriteYPosLow,X              ;;----|E66C/----\----;
                      SEC                                 ;;----|E66E/----\----;
                      SBC.B !_0                           ;;----|E66F/----\----;
                      STA.B !PlayerYPosNext               ;;----|E671/----\----;
                      LDA.W !SpriteXPosHigh,X             ;;----|E673/----\----;
                      SBC.B #$00                          ;;----|E676/----\----;
                      STA.B !PlayerYPosNext+1             ;;----|E678/----\----;
                      STZ.B !PlayerInAir                  ;;----|E67A/----\----;
                      STZ.B !PlayerXSpeed                 ;;----|E67C/----\----;
                      LDA.B #$02                          ;;----|E67E/----\----;
                      STA.W !StandOnSolidSprite           ;;----|E680/----\----;
                      LDA.W !SpriteMisc1540,X             ;;----|E683/----\----;
                      CMP.B #$07                          ;;----|E686/----\----;
                      BCS CODE_01E6AE                     ;;----|E688/----\----;
                      STZ.W !StandOnSolidSprite           ;;----|E68A/----\----;
                      LDY.B #$B0                          ;;----|E68D/----\----;
                      LDA.B !axlr0000Hold                 ;;----|E68F/----\----;
                      BPL CODE_01E69A                     ;;----|E691/----\----;
                      LDA.B #$01                          ;;----|E693/----\----;
                      STA.W !SpinJumpFlag                 ;;----|E695/----\----;
                      BRA CODE_01E69E                     ;;----|E698/----\----;
                                                          ;;                   ;
CODE_01E69A:          LDA.B !byetudlrHold                 ;;----|E69A/----\----;
                      BPL +                               ;;----|E69C/----\----;
CODE_01E69E:          LDA.B #$0B                          ;;----|E69E/----\----;
                      STA.B !PlayerInAir                  ;;----|E6A0/----\----;
                      LDY.B #$80                          ;;----|E6A2/----\----;
                      STY.W !BouncingOnBoard              ;;----|E6A4/----\----;
                    + STY.B !PlayerYSpeed                 ;;----|E6A7/----\----;
                      LDA.B #$08                          ;;----|E6A9/----\----; \ Play sound effect 
                      STA.W !SPCIO3                       ;;----|E6AB/----\----; / 
CODE_01E6AE:          BRA CODE_01E6F0                     ;;----|E6AE/----\----;
                                                          ;;                   ;
CODE_01E6B0:          JSR ProcessInteract                 ;;----|E6B0/----\----;
                      BCC CODE_01E6F0                     ;;----|E6B3/----\----;
                      STZ.W !SpriteMisc154C,X             ;;----|E6B5/----\----;
                      LDA.B !SpriteYPosLow,X              ;;----|E6B8/----\----;
                      SEC                                 ;;----|E6BA/----\----;
                      SBC.B !PlayerYPosNext               ;;----|E6BB/----\----;
                      CLC                                 ;;----|E6BD/----\----;
                      ADC.B #$04                          ;;----|E6BE/----\----;
                      CMP.B #$1C                          ;;----|E6C0/----\----;
                      BCC CODE_01E6CE                     ;;----|E6C2/----\----;
                      BPL CODE_01E6E7                     ;;----|E6C4/----\----;
                      LDA.B !PlayerYSpeed                 ;;----|E6C6/----\----;
                      BPL CODE_01E6F0                     ;;----|E6C8/----\----;
                      STZ.B !PlayerYSpeed                 ;;----|E6CA/----\----;
                      BRA CODE_01E6F0                     ;;----|E6CC/----\----;
                                                          ;;                   ;
CODE_01E6CE:          BIT.B !byetudlrHold                 ;;----|E6CE/----\----;
                      BVC +                               ;;----|E6D0/----\----;
                      LDA.W !CarryingFlag                 ;;----|E6D2/----\----; \ Branch if carrying an enemy... 
                      ORA.W !PlayerRidingYoshi            ;;----|E6D5/----\----;  | ...or if on Yoshi 
                      BNE +                               ;;----|E6D8/----\----; / 
                      LDA.B #$0B                          ;;----|E6DA/----\----; \ Sprite status = carried 
                      STA.W !SpriteStatus,X               ;;----|E6DC/----\----; / 
                      STZ.W !SpriteMisc1602,X             ;;----|E6DF/----\----;
                    + JSR CODE_01AB31                     ;;----|E6E2/----\----;
                      BRA CODE_01E6F0                     ;;----|E6E5/----\----;
                                                          ;;                   ;
CODE_01E6E7:          LDA.B !PlayerYSpeed                 ;;----|E6E7/----\----;
                      BMI CODE_01E6F0                     ;;----|E6E9/----\----;
                      LDA.B #$11                          ;;----|E6EB/----\----;
                      STA.W !SpriteMisc1540,X             ;;----|E6ED/----\----;
CODE_01E6F0:          LDY.W !SpriteMisc1602,X             ;;----|E6F0/----\----;
                      LDA.W DATA_01E6FD,Y                 ;;----|E6F3/----\----;
                      TAY                                 ;;----|E6F6/----\----;
                      LDA.B #$02                          ;;----|E6F7/----\----;
                      JSR SubSprGfx0Entry1                ;;----|E6F9/----\----;
                      RTS                                 ;;----|E6FC/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
DATA_01E6FD:          db $00,$02,$00                      ;;----|E6FD/----\----;
                                                          ;;                   ;
SmushedGfxRt:         JSR GetDrawInfoBnk1                 ;;----|E700/----\----;
                      JSR IsSprOffScreen                  ;;----|E703/----\----;
                      BNE Return01E75A                    ;;----|E706/----\----;
                      LDA.B !_0                           ;;----|E708/----\----; \ Set X displacement for both tiles 
                      STA.W !OAMTileXPos+$100,Y           ;;----|E70A/----\----;  | (Sprite position + #$00/#$08) 
                      CLC                                 ;;----|E70D/----\----;  | 
                      ADC.B #$08                          ;;----|E70E/----\----;  | 
                      STA.W !OAMTileXPos+$104,Y           ;;----|E710/----\----; / 
                      LDA.B !_1                           ;;----|E713/----\----; \ Set Y displacement for both tiles 
                      CLC                                 ;;----|E715/----\----;  | (Sprite position + #$08) 
                      ADC.B #$08                          ;;----|E716/----\----;  | 
                      STA.W !OAMTileYPos+$100,Y           ;;----|E718/----\----;  | 
                      STA.W !OAMTileYPos+$104,Y           ;;----|E71B/----\----; / 
                      PHX                                 ;;----|E71E/----\----;
                      LDA.B !SpriteNumber,X               ;;----|E71F/----\----;
                      TAX                                 ;;----|E721/----\----;
                      LDA.B #$FE                          ;;----|E722/----\----; \ If P Switch, tile = #$FE 
                      CPX.B #$3E                          ;;----|E724/----\----;  | 
                      BEQ +                               ;;----|E726/----\----; / 
                      LDA.B #$EE                          ;;----|E728/----\----; \ If Sliding Koopa... 
                      CPX.B #$BD                          ;;----|E72A/----\----;  | 
                      BEQ +                               ;;----|E72C/----\----;  | 
                      CPX.B #$04                          ;;----|E72E/----\----;  | ...or a shelless, tile = #$EE 
                      BCC +                               ;;----|E730/----\----; / 
                      LDA.B #$C7                          ;;----|E732/----\----; \ If sprite num >= #$0F, tile = #$C7 (is this used?) 
                      CPX.B #$0F                          ;;----|E734/----\----;  | 
                      BCS +                               ;;----|E736/----\----; / 
                      LDA.B #$4D                          ;;----|E738/----\----; If #$04 <= sprite num < #$0F, tile = #$4D (Koopas) 
                    + STA.W !OAMTileNo+$100,Y             ;;----|E73A/----\----; \ Same value for both tiles 
                      STA.W !OAMTileNo+$104,Y             ;;----|E73D/----\----; / 
                      PLX                                 ;;----|E740/----\----;
                      LDA.B !SpriteProperties             ;;----|E741/----\----; \ Store the first tile's properties 
                      ORA.W !SpriteOBJAttribute,X         ;;----|E743/----\----;  | 
                      STA.W !OAMTileAttr+$100,Y           ;;----|E746/----\----; / 
                      ORA.B #$40                          ;;----|E749/----\----; \ Horizontally flip the second tile and store it 
                      STA.W !OAMTileAttr+$104,Y           ;;----|E74B/----\----; / 
                      TYA                                 ;;----|E74E/----\----; \ Y = index to size table 
                      LSR A                               ;;----|E74F/----\----;  | 
                      LSR A                               ;;----|E750/----\----;  | 
                      TAY                                 ;;----|E751/----\----; / 
                      LDA.B #$00                          ;;----|E752/----\----; \ Two 8x8 tiles 
                      STA.W !OAMTileSize+$40,Y            ;;----|E754/----\----;  | 
                      STA.W !OAMTileSize+$41,Y            ;;----|E757/----\----; / 
Return01E75A:         RTS                                 ;;----|E75A/----\----; Return 
                                                          ;;                   ;
PSwitch:              LDA.W !SpriteMisc1564,X             ;;----|E75B/----\----;
                      CMP.B #$01                          ;;----|E75E/----\----;
                      BNE +                               ;;----|E760/----\----;
                      STA.W !OWPlayerSubmap               ;;----|E762/----\----;
                      STA.W !SaveDataBufferSubmap         ;;----|E765/----\----;
                      STZ.W !SpriteStatus,X               ;;----|E768/----\----;
                      INC.W !MessageBoxTrigger            ;;----|E76B/----\----;
                    + RTS                                 ;;----|E76E/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
DATA_01E76F:          db $FC,$04,$FE,$02,$FB,$05,$FD,$03  ;;----|E76F/----\----;
                      db $FA,$06,$FC,$04,$FB,$05,$FD,$03  ;;----|E777/----\----;
DATA_01E77F:          db $00,$FF,$03,$04,$FF,$FE,$04,$03  ;;----|E77F/----\----;
                      db $FE,$FF,$03,$03,$FF,$00,$03,$03  ;;----|E787/----\----;
                      db $F8,$FC,$00,$04                  ;;----|E78F/----\----;
                                                          ;;                   ;
DATA_01E793:          db $0E,$0F,$10,$11,$12,$11,$10,$0F  ;;----|E793/----\----;
                      db $1A,$1B,$1C,$1D,$1E,$1D,$1C,$1B  ;;----|E79B/----\----;
                      db $1A                              ;;----|E7A3/----\----;
                                                          ;;                   ;
LakituCloud:          LDA.B !SpriteLock                   ;;----|E7A4/----\----; \ Branch if sprites locked 
                      BEQ +                               ;;----|E7A6/----\----; / 
CODE_01E7A8:          JMP LakituCloudGfx                  ;;----|E7A8/----\----;
                                                          ;;                   ;
                    + LDY.W !LakituCloudTimer             ;;----|E7AB/----\----;
                      BEQ +                               ;;----|E7AE/----\----;
                      LDA.B !EffFrame                     ;;----|E7B0/----\----;
                      AND.B #$03                          ;;----|E7B2/----\----;
                      BNE +                               ;;----|E7B4/----\----;
                      LDA.W !LakituCloudTimer             ;;----|E7B6/----\----;
                      BEQ +                               ;;----|E7B9/----\----;
                      DEC.W !LakituCloudTimer             ;;----|E7BB/----\----;
                      BNE +                               ;;----|E7BE/----\----;
                      LDA.B #$1F                          ;;----|E7C0/----\----;
                      STA.W !SpriteMisc1540,X             ;;----|E7C2/----\----;
                    + LDA.W !SpriteMisc1540,X             ;;----|E7C5/----\----;
                      BEQ CODE_01E7DB                     ;;----|E7C8/----\----;
                      DEC A                               ;;----|E7CA/----\----;
                      BNE CODE_01E7A8                     ;;----|E7CB/----\----;
                      STZ.W !SpriteStatus,X               ;;----|E7CD/----\----;
                      LDA.B #$FF                          ;;----|E7D0/----\----; \ Set time until respawn 
                      STA.W !SpriteRespawnTimer           ;;----|E7D2/----\----;  | 
                      LDA.B #$1E                          ;;----|E7D5/----\----;  | Sprite to respawn = Lakitu 
                      STA.W !SpriteRespawnNumber          ;;----|E7D7/----\----; / 
                      RTS                                 ;;----|E7DA/----\----; Return 
                                                          ;;                   ;
CODE_01E7DB:          LDY.B #$09                          ;;----|E7DB/----\----;
CODE_01E7DD:          LDA.W !SpriteStatus,Y               ;;----|E7DD/----\----;
                      CMP.B #$08                          ;;----|E7E0/----\----;
                      BNE +                               ;;----|E7E2/----\----;
                      LDA.W !SpriteNumber,Y               ;;----|E7E4/----\----;
                      CMP.B #$1E                          ;;----|E7E7/----\----;
                      BNE +                               ;;----|E7E9/----\----;
                      TYA                                 ;;----|E7EB/----\----;
                      STA.W !SpriteMisc160E,X             ;;----|E7EC/----\----;
                      JMP CODE_01E898                     ;;----|E7EF/----\----;
                                                          ;;                   ;
                    + DEY                                 ;;----|E7F2/----\----;
                      BPL CODE_01E7DD                     ;;----|E7F3/----\----;
                      LDA.B !SpriteTableC2,X              ;;----|E7F5/----\----;
                      BNE CODE_01E840                     ;;----|E7F7/----\----;
                      LDA.W !SpriteMisc151C,X             ;;----|E7F9/----\----;
                      BEQ +                               ;;----|E7FC/----\----;
                      JSR SubSprXPosNoGrvty               ;;----|E7FE/----\----;
                      JSR SubSprYPosNoGrvty               ;;----|E801/----\----;
                    + LDA.W !SpriteMisc154C,X             ;;----|E804/----\----;
                      BNE CODE_01E83D                     ;;----|E807/----\----;
                      JSR ProcessInteract                 ;;----|E809/----\----;
                      BCC CODE_01E83D                     ;;----|E80C/----\----;
                      LDA.B !PlayerYSpeed                 ;;----|E80E/----\----;
                      BMI CODE_01E83D                     ;;----|E810/----\----;
                      INC.B !SpriteTableC2,X              ;;----|E812/----\----;
                      LDA.B #$11                          ;;----|E814/----\----;
                      LDY.W !PlayerRidingYoshi            ;;----|E816/----\----;
                      BEQ +                               ;;----|E819/----\----;
                      LDA.B #$22                          ;;----|E81B/----\----;
                    + CLC                                 ;;----|E81D/----\----;
                      ADC.B !PlayerYPosNow                ;;----|E81E/----\----;
                      STA.B !SpriteYPosLow,X              ;;----|E820/----\----;
                      LDA.B !PlayerYPosNow+1              ;;----|E822/----\----;
                      ADC.B #$00                          ;;----|E824/----\----;
                      STA.W !SpriteXPosHigh,X             ;;----|E826/----\----;
                      LDA.B !PlayerXPosNow                ;;----|E829/----\----;
                      STA.B !SpriteXPosLow,X              ;;----|E82B/----\----;
                      LDA.B !PlayerXPosNow+1              ;;----|E82D/----\----;
                      STA.W !SpriteYPosHigh,X             ;;----|E82F/----\----;
                      LDA.B #$10                          ;;----|E832/----\----;
                      STA.B !SpriteYSpeed,X               ;;----|E834/----\----;
                      STA.W !SpriteMisc151C,X             ;;----|E836/----\----;
                      LDA.B !PlayerXSpeed                 ;;----|E839/----\----;
                      STA.B !SpriteXSpeed,X               ;;----|E83B/----\----;
CODE_01E83D:          JMP LakituCloudGfx                  ;;----|E83D/----\----;
                                                          ;;                   ;
CODE_01E840:          JSR LakituCloudGfx                  ;;----|E840/----\----;
                      PHB                                 ;;----|E843/----\----;
                      LDA.B #$02                          ;;----|E844/----\----;
                      PHA                                 ;;----|E846/----\----;
                      PLB                                 ;;----|E847/----\----;
                      JSL CODE_02D214                     ;;----|E848/----\----;
                      PLB                                 ;;----|E84C/----\----;
                      LDA.B !SpriteYSpeed,X               ;;----|E84D/----\----;
                      CLC                                 ;;----|E84F/----\----;
                      ADC.B #$03                          ;;----|E850/----\----;
                      STA.B !PlayerYSpeed                 ;;----|E852/----\----;
                      LDA.B !EffFrame                     ;;----|E854/----\----;
                      LSR A                               ;;----|E856/----\----;
                      LSR A                               ;;----|E857/----\----;
                      LSR A                               ;;----|E858/----\----;
                      AND.B #$07                          ;;----|E859/----\----;
                      TAY                                 ;;----|E85B/----\----;
                      LDA.W !PlayerRidingYoshi            ;;----|E85C/----\----;
                      BEQ +                               ;;----|E85F/----\----;
                      TYA                                 ;;----|E861/----\----;
                      CLC                                 ;;----|E862/----\----;
                      ADC.B #$08                          ;;----|E863/----\----;
                      TAY                                 ;;----|E865/----\----;
                    + LDA.B !PlayerXPosNow                ;;----|E866/----\----;
                      STA.B !SpriteXPosLow,X              ;;----|E868/----\----;
                      LDA.B !PlayerXPosNow+1              ;;----|E86A/----\----;
                      STA.W !SpriteYPosHigh,X             ;;----|E86C/----\----;
                      LDA.B !PlayerYPosNow                ;;----|E86F/----\----;
                      CLC                                 ;;----|E871/----\----;
                      ADC.W DATA_01E793,Y                 ;;----|E872/----\----;
                      STA.B !SpriteYPosLow,X              ;;----|E875/----\----;
                      LDA.B !PlayerYPosNow+1              ;;----|E877/----\----;
                      ADC.B #$00                          ;;----|E879/----\----;
                      STA.W !SpriteXPosHigh,X             ;;----|E87B/----\----;
                      STZ.B !PlayerInAir                  ;;----|E87E/----\----;
                      INC.W !StandOnSolidSprite           ;;----|E880/----\----;
                      INC.W !PlayerInCloud                ;;----|E883/----\----;
                      LDA.B !byetudlrFrame                ;;----|E886/----\----;
                      AND.B #$80                          ;;----|E888/----\----;
                      BEQ Return01E897                    ;;----|E88A/----\----;
                      LDA.B #$C0                          ;;----|E88C/----\----;
                      STA.B !PlayerYSpeed                 ;;----|E88E/----\----;
                      LDA.B #$10                          ;;----|E890/----\----;
                      STA.W !SpriteMisc154C,X             ;;----|E892/----\----;
                      STZ.B !SpriteTableC2,X              ;;----|E895/----\----;
Return01E897:         RTS                                 ;;----|E897/----\----; Return 
                                                          ;;                   ;
CODE_01E898:          PHY                                 ;;----|E898/----\----;
                      JSR CODE_01E98D                     ;;----|E899/----\----;
                      LDA.B !EffFrame                     ;;----|E89C/----\----;
                      LSR A                               ;;----|E89E/----\----;
                      LSR A                               ;;----|E89F/----\----;
                      LSR A                               ;;----|E8A0/----\----;
                      AND.B #$07                          ;;----|E8A1/----\----;
                      TAY                                 ;;----|E8A3/----\----;
                      LDA.W DATA_01E793,Y                 ;;----|E8A4/----\----;
                      STA.B !_0                           ;;----|E8A7/----\----;
                      PLY                                 ;;----|E8A9/----\----;
                      LDA.B !SpriteXPosLow,X              ;;----|E8AA/----\----;
                      STA.W !SpriteXPosLow,Y              ;;----|E8AC/----\----;
                      LDA.W !SpriteYPosHigh,X             ;;----|E8AF/----\----;
                      STA.W !SpriteYPosHigh,Y             ;;----|E8B2/----\----;
                      LDA.B !SpriteYPosLow,X              ;;----|E8B5/----\----;
                      SEC                                 ;;----|E8B7/----\----;
                      SBC.B !_0                           ;;----|E8B8/----\----;
                      STA.W !SpriteYPosLow,Y              ;;----|E8BA/----\----;
                      LDA.W !SpriteXPosHigh,X             ;;----|E8BD/----\----;
                      SBC.B #$00                          ;;----|E8C0/----\----;
                      STA.W !SpriteXPosHigh,Y             ;;----|E8C2/----\----;
                      LDA.B #$10                          ;;----|E8C5/----\----;
                      STA.W !SpriteMisc154C,X             ;;----|E8C7/----\----;
LakituCloudGfx:       JSR GetDrawInfoBnk1                 ;;----|E8CA/----\----;
                      LDA.W !SpriteOffscreenVert,X        ;;----|E8CD/----\----;
                      BNE Return01E897                    ;;----|E8D0/----\----;
                      LDA.B #$F8                          ;;----|E8D2/----\----;
                      STA.B !_C                           ;;----|E8D4/----\----;
                      LDA.B #$FC                          ;;----|E8D6/----\----;
                      STA.B !_D                           ;;----|E8D8/----\----;
                      LDA.B #$00                          ;;----|E8DA/----\----;
                      LDY.B !SpriteTableC2,X              ;;----|E8DC/----\----;
                      BNE +                               ;;----|E8DE/----\----;
                      LDA.B #$30                          ;;----|E8E0/----\----;
                    + STA.B !_E                           ;;----|E8E2/----\----;
                      STA.W !TileGenerateTrackB           ;;----|E8E4/----\----;
                      ORA.B #$04                          ;;----|E8E7/----\----;
                      STA.B !_F                           ;;----|E8E9/----\----;
                      LDA.B !_0                           ;;----|E8EB/----\----;
                      STA.W !BrSwingCenterXPos            ;;----|E8ED/----\----;
                      LDA.B !_1                           ;;----|E8F0/----\----;
                      STA.W !BrSwingCenterYPos            ;;----|E8F2/----\----;
                      LDA.B !EffFrame                     ;;----|E8F5/----\----;
                      LSR A                               ;;----|E8F7/----\----;
                      LSR A                               ;;----|E8F8/----\----;
                      AND.B #$0C                          ;;----|E8F9/----\----;
                      STA.B !_2                           ;;----|E8FB/----\----;
                      LDA.B #$03                          ;;----|E8FD/----\----;
                      STA.B !_3                           ;;----|E8FF/----\----;
CODE_01E901:          LDA.B !_3                           ;;----|E901/----\----;
                      TAX                                 ;;----|E903/----\----;
                      LDY.B !_C,X                         ;;----|E904/----\----;
                      CLC                                 ;;----|E906/----\----;
                      ADC.B !_2                           ;;----|E907/----\----;
                      TAX                                 ;;----|E909/----\----;
                      %LorW_X(LDA,DATA_01E76F)            ;;----|E90A/----\----;
                      CLC                                 ;;----|E90D/----\----;
                      ADC.W !BrSwingCenterXPos            ;;----|E90E/----\----;
                      STA.W !OAMTileXPos+$100,Y           ;;----|E911/----\----;
                      %LorW_X(LDA,DATA_01E77F)            ;;----|E914/----\----;
                      CLC                                 ;;----|E917/----\----;
                      ADC.W !BrSwingCenterYPos            ;;----|E918/----\----;
                      STA.W !OAMTileYPos+$100,Y           ;;----|E91B/----\----;
                      LDX.W !CurSpriteProcess             ;;----|E91E/----\----; X = Sprite index 
                      LDA.B #$60                          ;;----|E921/----\----;
                      STA.W !OAMTileNo+$100,Y             ;;----|E923/----\----;
                      LDA.W !SpriteMisc1540,X             ;;----|E926/----\----;
                      BEQ +                               ;;----|E929/----\----;
                      LSR A                               ;;----|E92B/----\----;
                      LSR A                               ;;----|E92C/----\----;
                      LSR A                               ;;----|E92D/----\----;
                      TAX                                 ;;----|E92E/----\----;
                      LDA.W CloudTiles,X                  ;;----|E92F/----\----;
                      STA.W !OAMTileNo+$100,Y             ;;----|E932/----\----;
                    + LDA.B !SpriteProperties             ;;----|E935/----\----;
                      STA.W !OAMTileAttr+$100,Y           ;;----|E937/----\----;
                      INY                                 ;;----|E93A/----\----;
                      INY                                 ;;----|E93B/----\----;
                      INY                                 ;;----|E93C/----\----;
                      INY                                 ;;----|E93D/----\----;
                      DEC.B !_3                           ;;----|E93E/----\----;
                      BPL CODE_01E901                     ;;----|E940/----\----;
                      LDX.W !CurSpriteProcess             ;;----|E942/----\----; X = Sprite index 
                      LDA.B #$F8                          ;;----|E945/----\----;
                      STA.W !SpriteOAMIndex,X             ;;----|E947/----\----;
                      LDY.B #$02                          ;;----|E94A/----\----;
                      LDA.B #$01                          ;;----|E94C/----\----;
                      JSR FinishOAMWriteRt                ;;----|E94E/----\----;
                      LDA.W !TileGenerateTrackB           ;;----|E951/----\----;
                      STA.W !SpriteOAMIndex,X             ;;----|E954/----\----;
                      LDY.B #$02                          ;;----|E957/----\----;
                      LDA.B #$01                          ;;----|E959/----\----;
                      JSR FinishOAMWriteRt                ;;----|E95B/----\----;
                      LDA.W !SpriteOffscreenX,X           ;;----|E95E/----\----;
                      BNE Return01E984                    ;;----|E961/----\----;
                      LDA.W !BrSwingCenterXPos            ;;----|E963/----\----;
                      CLC                                 ;;----|E966/----\----;
                      ADC.B #$04                          ;;----|E967/----\----;
                      STA.W !OAMTileXPos+8                ;;----|E969/----\----;
                      LDA.W !BrSwingCenterYPos            ;;----|E96C/----\----;
                      CLC                                 ;;----|E96F/----\----;
                      ADC.B #$07                          ;;----|E970/----\----;
                      STA.W !OAMTileYPos+8                ;;----|E972/----\----;
                      LDA.B #$4D                          ;;----|E975/----\----;
                      STA.W !OAMTileNo+8                  ;;----|E977/----\----;
                      LDA.B #$39                          ;;----|E97A/----\----;
                      STA.W !OAMTileAttr+8                ;;----|E97C/----\----;
                      LDA.B #$00                          ;;----|E97F/----\----;
                      STA.W !OAMTileSize+2                ;;----|E981/----\----;
Return01E984:         RTS                                 ;;----|E984/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
CloudTiles:           db $66,$64,$62,$60                  ;;----|E985/----\----;
                                                          ;;                   ;
DATA_01E989:          db $20,$E0                          ;;----|E989/----\----;
                                                          ;;                   ;
DATA_01E98B:          db $10,$F0                          ;;----|E98B/----\----;
                                                          ;;                   ;
CODE_01E98D:          LDA.B !SpriteLock                   ;;----|E98D/----\----; \ Branch if sprites locked 
                      BNE Return01E984                    ;;----|E98F/----\----; / 
                      JSR SubHorizPos                     ;;----|E991/----\----;
                      TYA                                 ;;----|E994/----\----;
                      LDY.W !SpriteMisc160E,X             ;;----|E995/----\----;
                      STA.W !SpriteMisc157C,Y             ;;----|E998/----\----;
                      STA.B !_0                           ;;----|E99B/----\----;
                      LDY.B !_0                           ;;----|E99D/----\----;
                      LDA.W !SpriteWillAppear             ;;----|E99F/----\----;
                      BEQ CODE_01E9BD                     ;;----|E9A2/----\----;
                      PHY                                 ;;----|E9A4/----\----;
                      PHX                                 ;;----|E9A5/----\----;
                      LDA.W !SpriteMisc160E,X             ;;----|E9A6/----\----;
                      TAX                                 ;;----|E9A9/----\----;
                      JSR SubOffscreen0Bnk1               ;;----|E9AA/----\----;
                      LDA.W !SpriteStatus,X               ;;----|E9AD/----\----;
                      PLX                                 ;;----|E9B0/----\----;
                      CMP.B #$00                          ;;----|E9B1/----\----;
                      BNE +                               ;;----|E9B3/----\----;
                      STZ.W !SpriteStatus,X               ;;----|E9B5/----\----;
                    + PLY                                 ;;----|E9B8/----\----;
                      TYA                                 ;;----|E9B9/----\----;
                      EOR.B #$01                          ;;----|E9BA/----\----;
                      TAY                                 ;;----|E9BC/----\----;
CODE_01E9BD:          LDA.B !TrueFrame                    ;;----|E9BD/----\----;
                      AND.B #$01                          ;;----|E9BF/----\----;
                      BNE CODE_01E9E6                     ;;----|E9C1/----\----;
                      LDA.B !SpriteXSpeed,X               ;;----|E9C3/----\----;
                      CMP.W DATA_01E989,Y                 ;;----|E9C5/----\----;
                      BEQ +                               ;;----|E9C8/----\----;
                      CLC                                 ;;----|E9CA/----\----;
                      ADC.W DATA_01EBB4,Y                 ;;----|E9CB/----\----;
                      STA.B !SpriteXSpeed,X               ;;----|E9CE/----\----;
                    + LDA.W !SpriteMisc1534,X             ;;----|E9D0/----\----;
                      AND.B #$01                          ;;----|E9D3/----\----;
                      TAY                                 ;;----|E9D5/----\----;
                      LDA.B !SpriteYSpeed,X               ;;----|E9D6/----\----;
                      CLC                                 ;;----|E9D8/----\----;
                      ADC.W DATA_01EBB4,Y                 ;;----|E9D9/----\----;
                      STA.B !SpriteYSpeed,X               ;;----|E9DC/----\----;
                      CMP.W DATA_01E98B,Y                 ;;----|E9DE/----\----;
                      BNE CODE_01E9E6                     ;;----|E9E1/----\----;
                      INC.W !SpriteMisc1534,X             ;;----|E9E3/----\----;
CODE_01E9E6:          LDA.B !SpriteXSpeed,X               ;;----|E9E6/----\----;
                      PHA                                 ;;----|E9E8/----\----;
                      LDY.W !SpriteWillAppear             ;;----|E9E9/----\----;
                      BNE +                               ;;----|E9EC/----\----;
                      LDA.W !Layer1DXPos                  ;;----|E9EE/----\----;
                      ASL A                               ;;----|E9F1/----\----;
                      ASL A                               ;;----|E9F2/----\----;
                      ASL A                               ;;----|E9F3/----\----;
                      CLC                                 ;;----|E9F4/----\----;
                      ADC.B !SpriteXSpeed,X               ;;----|E9F5/----\----;
                      STA.B !SpriteXSpeed,X               ;;----|E9F7/----\----;
                    + JSR SubSprXPosNoGrvty               ;;----|E9F9/----\----;
                      PLA                                 ;;----|E9FC/----\----;
                      STA.B !SpriteXSpeed,X               ;;----|E9FD/----\----;
                      JSR SubSprYPosNoGrvty               ;;----|E9FF/----\----;
                      LDY.W !SpriteMisc160E,X             ;;----|EA02/----\----;
                      LDA.B !TrueFrame                    ;;----|EA05/----\----;
                      AND.B #$7F                          ;;----|EA07/----\----;
                      ORA.W !SpriteMisc151C,Y             ;;----|EA09/----\----;
                      BNE +                               ;;----|EA0C/----\----;
                      LDA.B #$20                          ;;----|EA0E/----\----;
                      STA.W !SpriteMisc1558,Y             ;;----|EA10/----\----;
                      JSR CODE_01EA21                     ;;----|EA13/----\----;
                    + RTS                                 ;;----|EA16/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
DATA_01EA17:          db $10,$F0                          ;;----|EA17/----\----;
                                                          ;;                   ;
CODE_01EA19:          PHB                                 ;;----|EA19/----\----; Wrapper 
                      PHK                                 ;;----|EA1A/----\----;
                      PLB                                 ;;----|EA1B/----\----;
                      JSR CODE_01EA21                     ;;----|EA1C/----\----;
                      PLB                                 ;;----|EA1F/----\----;
                      RTL                                 ;;----|EA20/----\----; Return 
                                                          ;;                   ;
CODE_01EA21:          JSL FindFreeSprSlot                 ;;----|EA21/----\----; \ Return if no free slots 
                      BMI Return01EA6F                    ;;----|EA25/----\----; / 
                      LDA.B #$08                          ;;----|EA27/----\----; \ Sprite status = Normal 
                      STA.W !SpriteStatus,Y               ;;----|EA29/----\----; / 
                      LDA.W !SilverPSwitchTimer           ;;----|EA2C/----\----;
                      CMP.B #$01                          ;;----|EA2F/----\----;
                      LDA.B #$14                          ;;----|EA31/----\----;
                      BCC +                               ;;----|EA33/----\----;
                      LDA.B #$21                          ;;----|EA35/----\----;
                    + STA.W !SpriteNumber,Y               ;;----|EA37/----\----;
                      LDA.B !SpriteXPosLow,X              ;;----|EA3A/----\----;
                      STA.W !SpriteXPosLow,Y              ;;----|EA3C/----\----;
                      LDA.W !SpriteYPosHigh,X             ;;----|EA3F/----\----;
                      STA.W !SpriteYPosHigh,Y             ;;----|EA42/----\----;
                      LDA.B !SpriteYPosLow,X              ;;----|EA45/----\----;
                      STA.W !SpriteYPosLow,Y              ;;----|EA47/----\----;
                      LDA.W !SpriteXPosHigh,X             ;;----|EA4A/----\----;
                      STA.W !SpriteXPosHigh,Y             ;;----|EA4D/----\----;
                      PHX                                 ;;----|EA50/----\----;
                      TYX                                 ;;----|EA51/----\----;
                      JSL InitSpriteTables                ;;----|EA52/----\----;
                      LDA.B #$D8                          ;;----|EA56/----\----;
                      STA.B !SpriteYSpeed,X               ;;----|EA58/----\----;
                      JSR SubHorizPos                     ;;----|EA5A/----\----;
                      LDA.W DATA_01EA17,Y                 ;;----|EA5D/----\----;
                      STA.B !SpriteXSpeed,X               ;;----|EA60/----\----;
                      LDA.B !SpriteNumber,X               ;;----|EA62/----\----;
                      CMP.B #$21                          ;;----|EA64/----\----;
                      BNE +                               ;;----|EA66/----\----;
                      LDA.B #$02                          ;;----|EA68/----\----;
                      STA.W !SpriteOBJAttribute,X         ;;----|EA6A/----\----;
                    + TXY                                 ;;----|EA6D/----\----;
                      PLX                                 ;;----|EA6E/----\----;
Return01EA6F:         RTS                                 ;;----|EA6F/----\----; Return 
                                                          ;;                   ;
CODE_01EA70:          LDX.W !YoshiIsLoose                 ;;----|EA70/----\----;
                      BEQ +                               ;;----|EA73/----\----;
                      STZ.W !ScrShakePlayerYOffset        ;;----|EA75/----\----;
                      STZ.W !YoshiHasKey                  ;;----|EA78/----\----;
                      LDA.W !CurSpriteProcess             ;;----|EA7B/----\----;
                      PHA                                 ;;----|EA7E/----\----;
                      DEX                                 ;;----|EA7F/----\----;
                      STX.W !CurSpriteProcess             ;;----|EA80/----\----;
                      PHB                                 ;;----|EA83/----\----;
                      PHK                                 ;;----|EA84/----\----;
                      PLB                                 ;;----|EA85/----\----;
                      JSR CODE_01EA8F                     ;;----|EA86/----\----;
                      PLB                                 ;;----|EA89/----\----;
                      PLA                                 ;;----|EA8A/----\----;
                      STA.W !CurSpriteProcess             ;;----|EA8B/----\----;
                    + RTL                                 ;;----|EA8E/----\----; Return 
                                                          ;;                   ;
CODE_01EA8F:          LDA.W !YoshiGrowingTimer            ;;----|EA8F/----\----;
                      ORA.W !CutsceneID                   ;;----|EA92/----\----;
                      BEQ +                               ;;----|EA95/----\----;
                      JMP CODE_01EB48                     ;;----|EA97/----\----;
                                                          ;;                   ;
                    + STZ.W !PlayerDuckingOnYoshi         ;;----|EA9A/----\----;
                      LDA.B !SpriteTableC2,X              ;;----|EA9D/----\----;
                      CMP.B #$02                          ;;----|EA9F/----\----;
                      BCC CODE_01EAA7                     ;;----|EAA1/----\----;
                      LDA.B #$30                          ;;----|EAA3/----\----;
                      BRA CODE_01EAB2                     ;;----|EAA5/----\----;
                                                          ;;                   ;
CODE_01EAA7:          LDY.B #$00                          ;;----|EAA7/----\----;
                      LDA.B !PlayerXSpeed                 ;;----|EAA9/----\----; \ Branch if Mario X speed == 0 
                      BEQ CODE_01EADF                     ;;----|EAAB/----\----; / 
                      BPL CODE_01EAB2                     ;;----|EAAD/----\----; \ If Mario X speed is positive, 
                      EOR.B #$FF                          ;;----|EAAF/----\----;  | invert it 
                      INC A                               ;;----|EAB1/----\----; / 
CODE_01EAB2:          LSR A                               ;;----|EAB2/----\----; \ Y = Upper 4 bits of X speed 
                      LSR A                               ;;----|EAB3/----\----;  | 
                      LSR A                               ;;----|EAB4/----\----;  | 
                      LSR A                               ;;----|EAB5/----\----;  | 
                      TAY                                 ;;----|EAB6/----\----; / 
                      LDA.B !SpriteLock                   ;;----|EAB7/----\----; \ Branch if sprites locked 
                      BNE +                               ;;----|EAB9/----\----; / 
                      DEC.W !SpriteMisc1570,X             ;;----|EABB/----\----; \ If time to change frame... 
                      BPL +                               ;;----|EABE/----\----;  | 
                      LDA.W DATA_01EDF5,Y                 ;;----|EAC0/----\----;  | Set time to display new frame (based on Mario's X speed) 
                      STA.W !SpriteMisc1570,X             ;;----|EAC3/----\----;  | 
                      DEC.W !YoshiWalkingTimer            ;;----|EAC6/----\----;  | Set index to new frame, $18AD = ($18AD-1) % 3 
                      BPL +                               ;;----|EAC9/----\----;  | 
                      LDA.B #$02                          ;;----|EACB/----\----;  | 
                      STA.W !YoshiWalkingTimer            ;;----|EACD/----\----; / 
                    + LDY.W !YoshiWalkingTimer            ;;----|EAD0/----\----; \ Y = frame to show 
                      LDA.W YoshiWalkFrames,Y             ;;----|EAD3/----\----;  | 
                      TAY                                 ;;----|EAD6/----\----; / 
                      LDA.B !SpriteTableC2,X              ;;----|EAD7/----\----;
                      CMP.B #$02                          ;;----|EAD9/----\----;
                      BCS CODE_01EB2E                     ;;----|EADB/----\----;
                      BRA +                               ;;----|EADD/----\----;
                                                          ;;                   ;
CODE_01EADF:          STZ.W !SpriteMisc1570,X             ;;----|EADF/----\----;
                    + LDA.B !PlayerInAir                  ;;----|EAE2/----\----;
                      BEQ +                               ;;----|EAE4/----\----;
                      LDY.B #$02                          ;;----|EAE6/----\----;
                      LDA.B !PlayerYSpeed                 ;;----|EAE8/----\----;
                      BPL +                               ;;----|EAEA/----\----;
                      LDY.B #$05                          ;;----|EAEC/----\----;
                      BRA +                               ;;----|EAEE/----\----;
                                                          ;;                   ;
                    + LDA.W !SpriteMisc15AC,X             ;;----|EAF0/----\----;
                      BEQ +                               ;;----|EAF3/----\----;
                      LDY.B #$03                          ;;----|EAF5/----\----;
                    + LDA.B !PlayerInAir                  ;;----|EAF7/----\----;
                      BNE CODE_01EB21                     ;;----|EAF9/----\----;
                      LDA.W !SpriteMisc151C,X             ;;----|EAFB/----\----;
                      BEQ CODE_01EB0C                     ;;----|EAFE/----\----;
                      LDY.B #$07                          ;;----|EB00/----\----;
                      LDA.B !byetudlrHold                 ;;----|EB02/----\----;
                      AND.B #$08                          ;;----|EB04/----\----;
                      BEQ +                               ;;----|EB06/----\----;
                      LDY.B #$06                          ;;----|EB08/----\----;
                    + BRA CODE_01EB21                     ;;----|EB0A/----\----;
                                                          ;;                   ;
CODE_01EB0C:          LDA.W !YoshiDuckTimer               ;;----|EB0C/----\----;
                      BEQ CODE_01EB16                     ;;----|EB0F/----\----;
                      DEC.W !YoshiDuckTimer               ;;----|EB11/----\----;
                      BRA CODE_01EB1C                     ;;----|EB14/----\----;
                                                          ;;                   ;
CODE_01EB16:          LDA.B !byetudlrHold                 ;;----|EB16/----\----;
                      AND.B #$04                          ;;----|EB18/----\----;
                      BEQ CODE_01EB21                     ;;----|EB1A/----\----;
CODE_01EB1C:          LDY.B #$04                          ;;----|EB1C/----\----;
                      INC.W !PlayerDuckingOnYoshi         ;;----|EB1E/----\----;
CODE_01EB21:          LDA.B !SpriteTableC2,X              ;;----|EB21/----\----;
                      CMP.B #$01                          ;;----|EB23/----\----;
                      BEQ CODE_01EB2E                     ;;----|EB25/----\----;
                      LDA.W !SpriteMisc151C,X             ;;----|EB27/----\----;
                      BNE CODE_01EB2E                     ;;----|EB2A/----\----;
                      LDY.B #$04                          ;;----|EB2C/----\----;
CODE_01EB2E:          LDA.W !PlayerRidingYoshi            ;;----|EB2E/----\----;
                      BEQ +                               ;;----|EB31/----\----;
                      LDA.W !YoshiInPipeSetting           ;;----|EB33/----\----;
                      CMP.B #$01                          ;;----|EB36/----\----;
                      BNE +                               ;;----|EB38/----\----;
                      LDA.B !TrueFrame                    ;;----|EB3A/----\----;
                      AND.B #$08                          ;;----|EB3C/----\----;
                      LSR A                               ;;----|EB3E/----\----;
                      LSR A                               ;;----|EB3F/----\----;
                      LSR A                               ;;----|EB40/----\----;
                      ADC.B #$08                          ;;----|EB41/----\----;
                      TAY                                 ;;----|EB43/----\----;
                    + TYA                                 ;;----|EB44/----\----;
                      STA.W !SpriteMisc1602,X             ;;----|EB45/----\----;
CODE_01EB48:          LDA.B !SpriteTableC2,X              ;;----|EB48/----\----;
                      CMP.B #$01                          ;;----|EB4A/----\----;
                      BNE CODE_01EB97                     ;;----|EB4C/----\----;
                      LDY.W !SpriteMisc157C,X             ;;----|EB4E/----\----;
                      LDA.B !PlayerXPosNext               ;;----|EB51/----\----;
                      CLC                                 ;;----|EB53/----\----;
                      ADC.W YoshiPositionX,Y              ;;----|EB54/----\----;
                      STA.B !SpriteXPosLow,X              ;;----|EB57/----\----;
                      LDA.B !PlayerXPosNext+1             ;;----|EB59/----\----;
                      ADC.W DATA_01EDF3,Y                 ;;----|EB5B/----\----;
                      STA.W !SpriteYPosHigh,X             ;;----|EB5E/----\----;
                      LDY.W !SpriteMisc1602,X             ;;----|EB61/----\----;
                      LDA.B !PlayerYPosNext               ;;----|EB64/----\----;
                      CLC                                 ;;----|EB66/----\----;
                      ADC.B #$10                          ;;----|EB67/----\----;
                      STA.B !SpriteYPosLow,X              ;;----|EB69/----\----;
                      LDA.B !PlayerYPosNext+1             ;;----|EB6B/----\----;
                      ADC.B #$00                          ;;----|EB6D/----\----;
                      STA.W !SpriteXPosHigh,X             ;;----|EB6F/----\----;
                      LDA.W DATA_01EDE4,Y                 ;;----|EB72/----\----;
                      STA.W !ScrShakePlayerYOffset        ;;----|EB75/----\----;
                      LDA.B #$01                          ;;----|EB78/----\----;
                      LDY.W !SpriteMisc1602,X             ;;----|EB7A/----\----;
                      CPY.B #$03                          ;;----|EB7D/----\----;
                      BNE +                               ;;----|EB7F/----\----;
                      INC A                               ;;----|EB81/----\----;
                    + STA.W !PlayerRidingYoshi            ;;----|EB82/----\----;
                      LDA.B #$01                          ;;----|EB85/----\----;
                      STA.W !CarryYoshiThruLvls           ;;----|EB87/----\----;
                      LDA.W !SpriteOBJAttribute,X         ;;----|EB8A/----\----; \ $13C7 = Yoshi palette 
                      STA.W !YoshiColor                   ;;----|EB8D/----\----; / 
                      LDA.W !SpriteMisc157C,X             ;;----|EB90/----\----;
                      EOR.B #$01                          ;;----|EB93/----\----;
                      STA.B !PlayerDirection              ;;----|EB95/----\----;
CODE_01EB97:          LDA.B !SpriteProperties             ;;----|EB97/----\----;
                      PHA                                 ;;----|EB99/----\----;
                      LDA.W !PlayerRidingYoshi            ;;----|EB9A/----\----;
                      BEQ CODE_01EBAD                     ;;----|EB9D/----\----;
                      LDA.W !YoshiInPipeSetting           ;;----|EB9F/----\----;
                      BEQ CODE_01EBAD                     ;;----|EBA2/----\----;
                      LDA.W !DrawYoshiInPipe              ;;----|EBA4/----\----;
                      BNE +                               ;;----|EBA7/----\----;
                      LDA.B #$10                          ;;----|EBA9/----\----;
                      STA.B !SpriteProperties             ;;----|EBAB/----\----;
CODE_01EBAD:          JSR HandleOffYoshi                  ;;----|EBAD/----\----;
                    + PLA                                 ;;----|EBB0/----\----;
                      STA.B !SpriteProperties             ;;----|EBB1/----\----;
                      RTS                                 ;;----|EBB3/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
DATA_01EBB4:          db $01,$FF,$01,$00,$FF,$00,$20,$E0  ;;----|EBB4/----\----;
                      db $0A,$0E                          ;;----|EBBC/----\----;
                                                          ;;                   ;
DATA_01EBBE:          db $E8,$18                          ;;----|EBBE/----\----;
                                                          ;;                   ;
DATA_01EBC0:          db $10,$F0                          ;;----|EBC0/----\----;
                                                          ;;                   ;
GrowingAniSequence:   db $0C,$0B,$0C,$0B,$0A,$0B,$0A,$0B  ;;----|EBC2/----\----;
                                                          ;;                   ;
Yoshi:                STZ.W !PlayerIsFrozen               ;;----|EBCA/----\----;
                      LDA.W !YoshiHasWingsEvt             ;;----|EBCD/----\----; \ $1410 = winged Yoshi flag 
                      STA.W !YoshiHasWingsGfx             ;;----|EBD0/----\----; / 
                      STZ.W !YoshiHasWingsEvt             ;;----|EBD3/----\----; Clear real winged Yoshi flag 
                      STZ.W !YoshiCanStomp                ;;----|EBD6/----\----; Clear stomp Yoshi flag 
                      STZ.W !Empty191B                    ;;----|EBD9/----\----;
                      LDA.W !SpriteStatus,X               ;;----|EBDC/----\----; \ Branch if normal Yoshi status 
                      CMP.B #$08                          ;;----|EBDF/----\----;  | 
                      BEQ +                               ;;----|EBE1/----\----; / 
                      STZ.W !CarryYoshiThruLvls           ;;----|EBE3/----\----; Mario won't have Yoshi when returning to OW 
                      JMP HandleOffYoshi                  ;;----|EBE6/----\----;
                                                          ;;                   ;
                    + TXA                                 ;;----|EBE9/----\----;
                      INC A                               ;;----|EBEA/----\----;
                      STA.W !CurrentYoshiSlot             ;;----|EBEB/----\----;
                      LDA.W !PlayerRidingYoshi            ;;----|EBEE/----\----;
                      BNE CODE_01EC04                     ;;----|EBF1/----\----;
                      JSR SubOffscreen0Bnk1               ;;----|EBF3/----\----;
                      LDA.W !SpriteStatus,X               ;;----|EBF6/----\----;
                      BNE CODE_01EC04                     ;;----|EBF9/----\----;
                      LDA.W !YoshiHeavenFlag              ;;----|EBFB/----\----;
                      BNE +                               ;;----|EBFE/----\----;
                      STZ.W !CarryYoshiThruLvls           ;;----|EC00/----\----;
                    + RTS                                 ;;----|EC03/----\----; Return 
                                                          ;;                   ;
CODE_01EC04:          LDA.W !PlayerRidingYoshi            ;;----|EC04/----\----;
                      BEQ CODE_01EC0E                     ;;----|EC07/----\----;
                      LDA.W !YoshiInPipeSetting           ;;----|EC09/----\----;
                      BNE CODE_01EC61                     ;;----|EC0C/----\----;
CODE_01EC0E:          LDA.W !EggLaidTimer                 ;;----|EC0E/----\----;
                      BNE CODE_01EC61                     ;;----|EC11/----\----;
                      LDA.W !YoshiGrowingTimer            ;;----|EC13/----\----;
                      BEQ CODE_01EC4C                     ;;----|EC16/----\----;
                      DEC.W !YoshiGrowingTimer            ;;----|EC18/----\----;
                      STA.B !SpriteLock                   ;;----|EC1B/----\----;
                      STA.W !PlayerIsFrozen               ;;----|EC1D/----\----;
                      CMP.B #$01                          ;;----|EC20/----\----;
                      BNE +                               ;;----|EC22/----\----;
                      STZ.B !SpriteLock                   ;;----|EC24/----\----;
                      STZ.W !PlayerIsFrozen               ;;----|EC26/----\----;
                      LDY.W !PlayerTurnLvl                ;;----|EC29/----\----;
                      LDA.W !OWPlayerSubmap,Y             ;;----|EC2C/----\----;
                      DEC A                               ;;----|EC2F/----\----;
                      ORA.W !YoshiSavedFlag               ;;----|EC30/----\----;
                      ORA.W !OverworldOverride            ;;----|EC33/----\----;
                      BNE +                               ;;----|EC36/----\----;
                      INC.W !YoshiSavedFlag               ;;----|EC38/----\----;
                      LDA.B #$03                          ;;----|EC3B/----\----;
                      STA.W !MessageBoxTrigger            ;;----|EC3D/----\----;
                    + DEC A                               ;;----|EC40/----\----;
                      LSR A                               ;;----|EC41/----\----;
                      LSR A                               ;;----|EC42/----\----;
                      LSR A                               ;;----|EC43/----\----;
                      TAY                                 ;;----|EC44/----\----;
                      LDA.W GrowingAniSequence,Y          ;;----|EC45/----\----; \ Set image to appropriate frame 
                      STA.W !SpriteMisc1602,X             ;;----|EC48/----\----; / 
                      RTS                                 ;;----|EC4B/----\----; Return 
                                                          ;;                   ;
CODE_01EC4C:          LDA.B !SpriteLock                   ;;----|EC4C/----\----;
                      BEQ CODE_01EC61                     ;;----|EC4E/----\----;
CODE_01EC50:          LDY.W !PlayerRidingYoshi            ;;----|EC50/----\----;
                      BEQ +                               ;;----|EC53/----\----;
                      LDY.B #$06                          ;;----|EC55/----\----;
                      STY.W !ScrShakePlayerYOffset        ;;----|EC57/----\----;
                    + RTS                                 ;;----|EC5A/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
DATA_01EC5B:          db $F0,$10                          ;;----|EC5B/----\----;
                                                          ;;                   ;
DATA_01EC5D:          db $FA,$06                          ;;----|EC5D/----\----;
                                                          ;;                   ;
DATA_01EC5F:          db $FF,$00                          ;;----|EC5F/----\----;
                                                          ;;                   ;
CODE_01EC61:          LDA.B !PlayerInAir                  ;;----|EC61/----\----;
                      BNE CODE_01EC6A                     ;;----|EC63/----\----;
                      LDA.W !EggLaidTimer                 ;;----|EC65/----\----;
                      BNE +                               ;;----|EC68/----\----;
CODE_01EC6A:          JMP CODE_01ECE1                     ;;----|EC6A/----\----;
                                                          ;;                   ;
                    + DEC.W !EggLaidTimer                 ;;----|EC6D/----\----;
                      CMP.B #$01                          ;;----|EC70/----\----;
                      BNE CODE_01EC78                     ;;----|EC72/----\----;
                      STZ.B !SpriteLock                   ;;----|EC74/----\----;
                      BRA CODE_01EC6A                     ;;----|EC76/----\----;
                                                          ;;                   ;
CODE_01EC78:          INC.W !PlayerIsFrozen               ;;----|EC78/----\----;
                      JSR CODE_01EC50                     ;;----|EC7B/----\----;
                      STY.B !SpriteLock                   ;;----|EC7E/----\----;
                      CMP.B #$02                          ;;----|EC80/----\----;
                      BNE Return01EC8A                    ;;----|EC82/----\----;
                      JSL FindFreeSprSlot                 ;;----|EC84/----\----; \ Return if no free slots 
                      BPL +                               ;;----|EC88/----\----;  | 
Return01EC8A:         RTS                                 ;;----|EC8A/----\----; / 
                                                          ;;                   ;
                    + LDA.B #$09                          ;;----|EC8B/----\----; \ Sprite status = Carryable 
                      STA.W !SpriteStatus,Y               ;;----|EC8D/----\----; / 
                      LDA.B #$2C                          ;;----|EC90/----\----;
                      STA.W !SpriteNumber,Y               ;;----|EC92/----\----;
                      PHY                                 ;;----|EC95/----\----;
                      PHY                                 ;;----|EC96/----\----;
                      LDY.W !SpriteMisc157C,X             ;;----|EC97/----\----;
                      STY.B !_F                           ;;----|EC9A/----\----;
                      LDA.B !SpriteXPosLow,X              ;;----|EC9C/----\----;
                      CLC                                 ;;----|EC9E/----\----;
                      ADC.W DATA_01EC5D,Y                 ;;----|EC9F/----\----;
                      PLY                                 ;;----|ECA2/----\----;
                      STA.W !SpriteXPosLow,Y              ;;----|ECA3/----\----;
                      LDY.W !SpriteMisc157C,X             ;;----|ECA6/----\----;
                      LDA.W !SpriteYPosHigh,X             ;;----|ECA9/----\----;
                      ADC.W DATA_01EC5F,Y                 ;;----|ECAC/----\----;
                      PLY                                 ;;----|ECAF/----\----;
                      STA.W !SpriteYPosHigh,Y             ;;----|ECB0/----\----;
                      LDA.B !SpriteYPosLow,X              ;;----|ECB3/----\----;
                      CLC                                 ;;----|ECB5/----\----;
                      ADC.B #$08                          ;;----|ECB6/----\----;
                      STA.W !SpriteYPosLow,Y              ;;----|ECB8/----\----;
                      LDA.W !SpriteXPosHigh,X             ;;----|ECBB/----\----;
                      ADC.B #$00                          ;;----|ECBE/----\----;
                      STA.W !SpriteXPosHigh,Y             ;;----|ECC0/----\----;
                      PHX                                 ;;----|ECC3/----\----;
                      TYX                                 ;;----|ECC4/----\----;
                      JSL InitSpriteTables                ;;----|ECC5/----\----;
                      LDY.B !_F                           ;;----|ECC9/----\----;
                      LDA.W DATA_01EC5B,Y                 ;;----|ECCB/----\----;
                      STA.B !SpriteXSpeed,X               ;;----|ECCE/----\----;
                      LDA.B #$F0                          ;;----|ECD0/----\----;
                      STA.B !SpriteYSpeed,X               ;;----|ECD2/----\----;
                      LDA.B #$10                          ;;----|ECD4/----\----;
                      STA.W !SpriteMisc154C,X             ;;----|ECD6/----\----;
                      LDA.W !YoshiEggSpriteHatch          ;;----|ECD9/----\----;
                      STA.W !SpriteMisc151C,X             ;;----|ECDC/----\----;
                      PLX                                 ;;----|ECDF/----\----;
                      RTS                                 ;;----|ECE0/----\----; Return 
                                                          ;;                   ;
CODE_01ECE1:          LDA.B !SpriteTableC2,X              ;;----|ECE1/----\----;
                      CMP.B #$01                          ;;----|ECE3/----\----;
                      BNE +                               ;;----|ECE5/----\----;
                      JMP CODE_01ED70                     ;;----|ECE7/----\----;
                                                          ;;                   ;
                    + JSR SubUpdateSprPos                 ;;----|ECEA/----\----;
                      JSR IsOnGround                      ;;----|ECED/----\----;
                      BEQ +                               ;;----|ECF0/----\----;
                      JSR SetSomeYSpeed__                 ;;----|ECF2/----\----;
                      LDA.B !SpriteTableC2,X              ;;----|ECF5/----\----;
                      CMP.B #$02                          ;;----|ECF7/----\----;
                      BCS +                               ;;----|ECF9/----\----;
                      STZ.B !SpriteXSpeed,X               ;;----|ECFB/----\----; Sprite X Speed = 0 
                      LDA.B #$F0                          ;;----|ECFD/----\----;
                      STA.B !SpriteYSpeed,X               ;;----|ECFF/----\----;
                    + JSR UpdateDirection                 ;;----|ED01/----\----;
                      JSR IsTouchingObjSide               ;;----|ED04/----\----;
                      BEQ +                               ;;----|ED07/----\----;
                      JSR CODE_0190A2                     ;;----|ED09/----\----;
                    + LDA.B #$04                          ;;----|ED0C/----\----;
                      CLC                                 ;;----|ED0E/----\----;
                      ADC.B !SpriteXPosLow,X              ;;----|ED0F/----\----;
                      STA.B !_4                           ;;----|ED11/----\----;
                      LDA.W !SpriteYPosHigh,X             ;;----|ED13/----\----;
                      ADC.B #$00                          ;;----|ED16/----\----;
                      STA.B !_A                           ;;----|ED18/----\----;
                      LDA.B #$13                          ;;----|ED1A/----\----;
                      CLC                                 ;;----|ED1C/----\----;
                      ADC.B !SpriteYPosLow,X              ;;----|ED1D/----\----;
                      STA.B !_5                           ;;----|ED1F/----\----;
                      LDA.W !SpriteXPosHigh,X             ;;----|ED21/----\----;
                      ADC.B #$00                          ;;----|ED24/----\----;
                      STA.B !_B                           ;;----|ED26/----\----;
                      LDA.B #$08                          ;;----|ED28/----\----;
                      STA.B !_7                           ;;----|ED2A/----\----;
                      STA.B !_6                           ;;----|ED2C/----\----;
                      JSL GetMarioClipping                ;;----|ED2E/----\----;
                      JSL CheckForContact                 ;;----|ED32/----\----;
                      BCC CODE_01ED70                     ;;----|ED36/----\----;
                      LDA.B !PlayerInAir                  ;;----|ED38/----\----;
                      BEQ CODE_01ED70                     ;;----|ED3A/----\----;
                      LDA.W !CarryingFlag                 ;;----|ED3C/----\----; \ Branch if carrying an enemy... 
                      ORA.W !PlayerRidingYoshi            ;;----|ED3F/----\----;  | ...or if on Yoshi 
                      BNE CODE_01ED70                     ;;----|ED42/----\----; / 
                      LDA.B !PlayerYSpeed                 ;;----|ED44/----\----; \ Branch if upward speed 
                      BMI CODE_01ED70                     ;;----|ED46/----\----; / 
                      LDY.B #$01                          ;;----|ED48/----\----;
                      JSR CODE_01EDCE                     ;;----|ED4A/----\----;
                      STZ.B !PlayerXSpeed                 ;;----|ED4D/----\----; \ Mario's speed = 0 
                      STZ.B !PlayerYSpeed                 ;;----|ED4F/----\----; / 
                      LDA.B #$0C                          ;;----|ED51/----\----;
                      STA.W !YoshiDuckTimer               ;;----|ED53/----\----;
                      LDA.B #$01                          ;;----|ED56/----\----;
                      STA.B !SpriteTableC2,X              ;;----|ED58/----\----;
                      LDA.B #$02                          ;;----|ED5A/----\----; \ Play sound effect 
                      STA.W !SPCIO1                       ;;----|ED5C/----\----; / 
                      LDA.B #$1F                          ;;----|ED5F/----\----; \ Play sound effect 
                      STA.W !SPCIO3                       ;;----|ED61/----\----; / 
                      JSL DisabledAddSmokeRt              ;;----|ED64/----\----;
                      LDA.B #$20                          ;;----|ED68/----\----;
                      STA.W !SpriteMisc163E,X             ;;----|ED6A/----\----;
                      INC.W !SpriteStompCounter           ;;----|ED6D/----\----;
CODE_01ED70:          LDA.B !SpriteTableC2,X              ;;----|ED70/----\----;
                      CMP.B #$01                          ;;----|ED72/----\----;
                      BNE Return01EDCB                    ;;----|ED74/----\----;
                      JSR CODE_01F622                     ;;----|ED76/----\----;
                      LDA.B !byetudlrHold                 ;;----|ED79/----\----;
                      AND.B #$03                          ;;----|ED7B/----\----;
                      BEQ +                               ;;----|ED7D/----\----;
                      DEC A                               ;;----|ED7F/----\----;
                      CMP.W !SpriteMisc157C,X             ;;----|ED80/----\----;
                      BEQ +                               ;;----|ED83/----\----;
                      LDA.W !SpriteMisc15AC,X             ;;----|ED85/----\----;
                      ORA.W !SpriteMisc151C,X             ;;----|ED88/----\----;
                      ORA.W !PlayerDuckingOnYoshi         ;;----|ED8B/----\----;
                      BNE +                               ;;----|ED8E/----\----;
                      LDA.B #$10                          ;;----|ED90/----\----; \ Set turning timer 
                      STA.W !SpriteMisc15AC,X             ;;----|ED92/----\----; / 
                    + LDA.W !PBalloonInflating            ;;----|ED95/----\----;
                      BNE CODE_01ED9E                     ;;----|ED98/----\----;
                      BIT.B !axlr0000Frame                ;;----|ED9A/----\----;
                      BPL Return01EDCB                    ;;----|ED9C/----\----;
CODE_01ED9E:          LDA.B #$02                          ;;----|ED9E/----\----;
                      STA.W !SpriteMisc1FE2,X             ;;----|EDA0/----\----;
                      STZ.B !SpriteTableC2,X              ;;----|EDA3/----\----;
                      LDA.B #$03                          ;;----|EDA5/----\----; \ Play sound effect 
                      STA.W !SPCIO1                       ;;----|EDA7/----\----; / 
                      STZ.W !CarryYoshiThruLvls           ;;----|EDAA/----\----;
                      LDA.B !PlayerXSpeed                 ;;----|EDAD/----\----;
                      STA.B !SpriteXSpeed,X               ;;----|EDAF/----\----;
                      LDA.B #$A0                          ;;----|EDB1/----\----;
                      LDY.B !PlayerInAir                  ;;----|EDB3/----\----;
                      BNE +                               ;;----|EDB5/----\----;
                      JSR SubHorizPos                     ;;----|EDB7/----\----;
                      LDA.W DATA_01EBC0,Y                 ;;----|EDBA/----\----;
                      STA.B !PlayerXSpeed                 ;;----|EDBD/----\----;
                      LDA.B #$C0                          ;;----|EDBF/----\----;
                    + STA.B !PlayerYSpeed                 ;;----|EDC1/----\----;
                      STZ.W !PlayerRidingYoshi            ;;----|EDC3/----\----;
                      STZ.B !SpriteYSpeed,X               ;;----|EDC6/----\----; Sprite Y Speed = 0 
                      JSR CODE_01EDCC                     ;;----|EDC8/----\----;
Return01EDCB:         RTS                                 ;;----|EDCB/----\----; Return 
                                                          ;;                   ;
CODE_01EDCC:          LDY.B #$00                          ;;----|EDCC/----\----;
CODE_01EDCE:          LDA.B !SpriteYPosLow,X              ;;----|EDCE/----\----;
                      SEC                                 ;;----|EDD0/----\----;
                      SBC.W DATA_01EDE2,Y                 ;;----|EDD1/----\----;
                      STA.B !PlayerYPosNext               ;;----|EDD4/----\----;
                      STA.B !PlayerYPosNow                ;;----|EDD6/----\----;
                      LDA.W !SpriteXPosHigh,X             ;;----|EDD8/----\----;
                      SBC.B #$00                          ;;----|EDDB/----\----;
                      STA.B !PlayerYPosNext+1             ;;----|EDDD/----\----;
                      STA.B !PlayerYPosNow+1              ;;----|EDDF/----\----;
                      RTS                                 ;;----|EDE1/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
DATA_01EDE2:          db $04,$10                          ;;----|EDE2/----\----;
                                                          ;;                   ;
DATA_01EDE4:          db $06,$05,$05,$05,$0A,$05,$05,$0A  ;;----|EDE4/----\----;
                      db $0A,$0B                          ;;----|EDEC/----\----;
                                                          ;;                   ;
YoshiWalkFrames:      db $02,$01,$00                      ;;----|EDEE/----\----;
                                                          ;;                   ;
YoshiPositionX:       db $02,$FE                          ;;----|EDF1/----\----;
                                                          ;;                   ;
DATA_01EDF3:          db $00,$FF                          ;;----|EDF3/----\----;
                                                          ;;                   ;
DATA_01EDF5:          db $03,$02,$01,$00                  ;;----|EDF5/----\----;
                                                          ;;                   ;
YoshiHeadTiles:       db $00,$01,$02,$03,$02,$10,$04,$05  ;;----|EDF9/----\----;
                      db $00,$00,$FF,$FF,$00              ;;----|EE01/----\----;
                                                          ;;                   ;
YoshiBodyTiles:       db $06,$07,$08,$09,$0A,$0B,$06,$0C  ;;----|EE06/----\----;
                      db $0A,$0D,$0E,$0F,$0C              ;;----|EE0E/----\----;
                                                          ;;                   ;
YoshiHeadDispX:       db $0A,$09,$0A,$06,$0A,$0A,$0A,$10  ;;----|EE13/----\----;
                      db $0A,$0A,$00,$00,$0A,$F6,$F7,$F6  ;;----|EE1B/----\----;
                      db $FA,$F6,$F6,$F6,$F0,$F6,$F6,$00  ;;----|EE23/----\----;
                      db $00,$F6                          ;;----|EE2B/----\----;
                                                          ;;                   ;
DATA_01EE2D:          db $00,$00,$00,$00,$00,$00,$00,$00  ;;----|EE2D/----\----;
                      db $00,$00,$00,$00,$00,$FF,$FF,$FF  ;;----|EE35/----\----;
                      db $FF,$FF,$FF,$FF,$FF,$FF,$FF,$00  ;;----|EE3D/----\----;
                      db $00,$FF                          ;;----|EE45/----\----;
                                                          ;;                   ;
YoshiPositionY:       db $00,$01,$01,$00,$04,$00,$00,$04  ;;----|EE47/----\----;
                      db $03,$03,$00,$00,$04              ;;----|EE4F/----\----;
                                                          ;;                   ;
YoshiHeadDispY:       db $00,$00,$01,$00,$00,$00,$00,$08  ;;----|EE54/----\----;
                      db $00,$00,$00,$00,$05              ;;----|EE5C/----\----;
                                                          ;;                   ;
HandleOffYoshi:       LDA.W !SpriteMisc1602,X             ;;----|EE61/----\----;
                      PHA                                 ;;----|EE64/----\----;
                      LDY.W !SpriteMisc15AC,X             ;;----|EE65/----\----;
                      CPY.B #$08                          ;;----|EE68/----\----;
                      BNE +                               ;;----|EE6A/----\----;
                      LDA.W !YoshiInPipeSetting           ;;----|EE6C/----\----;
                      ORA.B !SpriteLock                   ;;----|EE6F/----\----;
                      BNE +                               ;;----|EE71/----\----;
                      LDA.W !SpriteMisc157C,X             ;;----|EE73/----\----;
                      STA.B !PlayerDirection              ;;----|EE76/----\----;
                      EOR.B #$01                          ;;----|EE78/----\----;
                      STA.W !SpriteMisc157C,X             ;;----|EE7A/----\----;
                    + LDA.W !YoshiInPipeSetting           ;;----|EE7D/----\----;
                      BMI +                               ;;----|EE80/----\----;
                      CMP.B #$02                          ;;----|EE82/----\----;
                      BNE +                               ;;----|EE84/----\----;
                      INC A                               ;;----|EE86/----\----;
                      STA.W !SpriteMisc1602,X             ;;----|EE87/----\----;
                    + JSR CODE_01EF18                     ;;----|EE8A/----\----;
                      LDY.B !_E                           ;;----|EE8D/----\----;
                      LDA.W !OAMTileNo+$100,Y             ;;----|EE8F/----\----;
                      STA.B !_0                           ;;----|EE92/----\----;
                      STZ.B !_1                           ;;----|EE94/----\----;
                      LDA.B #$06                          ;;----|EE96/----\----;
                      STA.W !OAMTileNo+$100,Y             ;;----|EE98/----\----;
                      LDY.W !SpriteOAMIndex,X             ;;----|EE9B/----\----; Y = Index into sprite OAM 
                      LDA.W !OAMTileNo+$100,Y             ;;----|EE9E/----\----;
                      STA.B !_2                           ;;----|EEA1/----\----;
                      STZ.B !_3                           ;;----|EEA3/----\----;
                      LDA.B #$08                          ;;----|EEA5/----\----;
                      STA.W !OAMTileNo+$100,Y             ;;----|EEA7/----\----;
                      REP #$20                            ;;----|EEAA/----\----; Accum (16 bit) 
                      LDA.B !_0                           ;;----|EEAC/----\----;
                      ASL A                               ;;----|EEAE/----\----;
                      ASL A                               ;;----|EEAF/----\----;
                      ASL A                               ;;----|EEB0/----\----;
                      ASL A                               ;;----|EEB1/----\----;
                      ASL A                               ;;----|EEB2/----\----;
                      CLC                                 ;;----|EEB3/----\----;
                      ADC.W #$8500                        ;;----|EEB4/----\----;
                      STA.W !DynGfxTilePtr+6              ;;----|EEB7/----\----;
                      CLC                                 ;;----|EEBA/----\----;
                      ADC.W #$0200                        ;;----|EEBB/----\----;
                      STA.W !DynGfxTilePtr+$10            ;;----|EEBE/----\----;
                      LDA.B !_2                           ;;----|EEC1/----\----;
                      ASL A                               ;;----|EEC3/----\----;
                      ASL A                               ;;----|EEC4/----\----;
                      ASL A                               ;;----|EEC5/----\----;
                      ASL A                               ;;----|EEC6/----\----;
                      ASL A                               ;;----|EEC7/----\----;
                      CLC                                 ;;----|EEC8/----\----;
                      ADC.W #$8500                        ;;----|EEC9/----\----;
                      STA.W !DynGfxTilePtr+8              ;;----|EECC/----\----;
                      CLC                                 ;;----|EECF/----\----;
                      ADC.W #$0200                        ;;----|EED0/----\----;
                      STA.W !DynGfxTilePtr+$12            ;;----|EED3/----\----;
                      SEP #$20                            ;;----|EED6/----\----; Accum (8 bit) 
                      PLA                                 ;;----|EED8/----\----;
                      STA.W !SpriteMisc1602,X             ;;----|EED9/----\----;
                      JSR CODE_01F0A2                     ;;----|EEDC/----\----;
                      LDA.W !YoshiHasWingsGfx             ;;----|EEDF/----\----; \ Return if Yoshi doesn't have wings 
                      CMP.B #$02                          ;;----|EEE2/----\----;  | 
                      BCC Return01EF17                    ;;----|EEE4/----\----; / 
                      LDA.W !PlayerRidingYoshi            ;;----|EEE6/----\----;
                      BEQ CODE_01EF13                     ;;----|EEE9/----\----;
                      LDA.B !PlayerInAir                  ;;----|EEEB/----\----;
                      BNE CODE_01EF00                     ;;----|EEED/----\----;
                      LDA.B !PlayerXSpeed                 ;;----|EEEF/----\----;
                      BPL +                               ;;----|EEF1/----\----;
                      EOR.B #$FF                          ;;----|EEF3/----\----;
                      INC A                               ;;----|EEF5/----\----;
                    + CMP.B #$28                          ;;----|EEF6/----\----;
                      LDA.B #$01                          ;;----|EEF8/----\----;
                      BCS CODE_01EF13                     ;;----|EEFA/----\----;
                      LDA.B #$00                          ;;----|EEFC/----\----;
                      BRA CODE_01EF13                     ;;----|EEFE/----\----;
                                                          ;;                   ;
CODE_01EF00:          LDA.B !EffFrame                     ;;----|EF00/----\----;
                      LSR A                               ;;----|EF02/----\----;
                      LSR A                               ;;----|EF03/----\----;
                      LDY.B !PlayerYSpeed                 ;;----|EF04/----\----;
                      BMI +                               ;;----|EF06/----\----;
                      LSR A                               ;;----|EF08/----\----;
                      LSR A                               ;;----|EF09/----\----;
                    + AND.B #$01                          ;;----|EF0A/----\----;
                      BNE CODE_01EF13                     ;;----|EF0C/----\----;
                      LDY.B #$21                          ;;----|EF0E/----\----; \ Play sound effect 
                      STY.W !SPCIO3                       ;;----|EF10/----\----; / 
CODE_01EF13:          JSL CODE_02BB23                     ;;----|EF13/----\----;
Return01EF17:         RTS                                 ;;----|EF17/----\----; Return 
                                                          ;;                   ;
CODE_01EF18:          LDY.W !SpriteMisc1602,X             ;;----|EF18/----\----;
                      STY.W !TileGenerateTrackA           ;;----|EF1B/----\----;
                      LDA.W YoshiHeadTiles,Y              ;;----|EF1E/----\----;
                      STA.W !SpriteMisc1602,X             ;;----|EF21/----\----;
                      STA.B !_F                           ;;----|EF24/----\----;
                      LDA.B !SpriteYPosLow,X              ;;----|EF26/----\----;
                      PHA                                 ;;----|EF28/----\----;
                      CLC                                 ;;----|EF29/----\----;
                      ADC.W YoshiPositionY,Y              ;;----|EF2A/----\----;
                      STA.B !SpriteYPosLow,X              ;;----|EF2D/----\----;
                      LDA.W !SpriteXPosHigh,X             ;;----|EF2F/----\----;
                      PHA                                 ;;----|EF32/----\----;
                      ADC.B #$00                          ;;----|EF33/----\----;
                      STA.W !SpriteXPosHigh,X             ;;----|EF35/----\----;
                      TYA                                 ;;----|EF38/----\----;
                      LDY.W !SpriteMisc157C,X             ;;----|EF39/----\----;
                      BEQ +                               ;;----|EF3C/----\----;
                      CLC                                 ;;----|EF3E/----\----;
                      ADC.B #$0D                          ;;----|EF3F/----\----;
                    + TAY                                 ;;----|EF41/----\----;
                      LDA.B !SpriteXPosLow,X              ;;----|EF42/----\----;
                      PHA                                 ;;----|EF44/----\----;
                      CLC                                 ;;----|EF45/----\----;
                      ADC.W YoshiHeadDispX,Y              ;;----|EF46/----\----;
                      STA.B !SpriteXPosLow,X              ;;----|EF49/----\----;
                      LDA.W !SpriteYPosHigh,X             ;;----|EF4B/----\----;
                      PHA                                 ;;----|EF4E/----\----;
                      ADC.W DATA_01EE2D,Y                 ;;----|EF4F/----\----;
                      STA.W !SpriteYPosHigh,X             ;;----|EF52/----\----;
                      LDA.W !SpriteOAMIndex,X             ;;----|EF55/----\----;
                      PHA                                 ;;----|EF58/----\----;
                      LDA.W !SpriteMisc15AC,X             ;;----|EF59/----\----;
                      ORA.W !YoshiInPipeSetting           ;;----|EF5C/----\----;
                      BEQ +                               ;;----|EF5F/----\----;
                      LDA.B #$04                          ;;----|EF61/----\----;
                      STA.W !SpriteOAMIndex,X             ;;----|EF63/----\----;
                    + LDA.W !SpriteOAMIndex,X             ;;----|EF66/----\----;
                      STA.B !_E                           ;;----|EF69/----\----;
                      JSR SubSprGfx2Entry1                ;;----|EF6B/----\----;
                      PHX                                 ;;----|EF6E/----\----;
                      LDY.W !SpriteOAMIndex,X             ;;----|EF6F/----\----; Y = Index into sprite OAM 
                      LDX.W !TileGenerateTrackA           ;;----|EF72/----\----;
                      LDA.W !OAMTileYPos+$100,Y           ;;----|EF75/----\----;
                      CLC                                 ;;----|EF78/----\----;
                      %LorW_X(ADC,YoshiHeadDispY)         ;;----|EF79/----\----;
                      STA.W !OAMTileYPos+$100,Y           ;;----|EF7C/----\----;
                      PLX                                 ;;----|EF7F/----\----;
                      PLA                                 ;;----|EF80/----\----;
                      CLC                                 ;;----|EF81/----\----;
                      ADC.B #$04                          ;;----|EF82/----\----;
                      STA.W !SpriteOAMIndex,X             ;;----|EF84/----\----;
                      PLA                                 ;;----|EF87/----\----;
                      STA.W !SpriteYPosHigh,X             ;;----|EF88/----\----;
                      PLA                                 ;;----|EF8B/----\----;
                      STA.B !SpriteXPosLow,X              ;;----|EF8C/----\----;
                      LDY.W !TileGenerateTrackA           ;;----|EF8E/----\----;
                      LDA.W YoshiBodyTiles,Y              ;;----|EF91/----\----;
                      STA.W !SpriteMisc1602,X             ;;----|EF94/----\----;
                      LDA.B !SpriteYPosLow,X              ;;----|EF97/----\----;
                      CLC                                 ;;----|EF99/----\----;
                      ADC.B #$10                          ;;----|EF9A/----\----;
                      STA.B !SpriteYPosLow,X              ;;----|EF9C/----\----;
                      BCC +                               ;;----|EF9E/----\----;
                      INC.W !SpriteXPosHigh,X             ;;----|EFA0/----\----;
                    + JSR SubSprGfx2Entry1                ;;----|EFA3/----\----;
                      PLA                                 ;;----|EFA6/----\----;
                      STA.W !SpriteXPosHigh,X             ;;----|EFA7/----\----;
                      PLA                                 ;;----|EFAA/----\----;
                      STA.B !SpriteYPosLow,X              ;;----|EFAB/----\----;
                      LDY.B !_E                           ;;----|EFAD/----\----;
                      LDA.B !_F                           ;;----|EFAF/----\----;
                      BPL +                               ;;----|EFB1/----\----;
                      LDA.B #$F0                          ;;----|EFB3/----\----;
                      STA.W !OAMTileYPos+$100,Y           ;;----|EFB5/----\----;
                    + LDA.B !SpriteTableC2,X              ;;----|EFB8/----\----;
                      BNE CODE_01EFC6                     ;;----|EFBA/----\----;
                      LDA.B !EffFrame                     ;;----|EFBC/----\----;
                      AND.B #$30                          ;;----|EFBE/----\----;
                      BNE CODE_01EFDB                     ;;----|EFC0/----\----;
                      LDA.B #$2A                          ;;----|EFC2/----\----;
                      BRA CODE_01EFFA                     ;;----|EFC4/----\----;
                                                          ;;                   ;
CODE_01EFC6:          CMP.B #$02                          ;;----|EFC6/----\----;
                      BNE CODE_01EFDB                     ;;----|EFC8/----\----;
                      LDA.W !SpriteMisc151C,X             ;;----|EFCA/----\----;
                      ORA.W !CutsceneID                   ;;----|EFCD/----\----;
                      BNE CODE_01EFDB                     ;;----|EFD0/----\----;
                      LDA.B !EffFrame                     ;;----|EFD2/----\----;
                      AND.B #$10                          ;;----|EFD4/----\----;
                      BEQ CODE_01EFFD                     ;;----|EFD6/----\----;
                      BRA CODE_01EFF8                     ;;----|EFD8/----\----;
                                                          ;;                   ;
Return01EFDA:         RTS                                 ;;----|EFDA/----\----; Return 
                                                          ;;                   ;
CODE_01EFDB:          LDA.W !SpriteMisc1594,X             ;;----|EFDB/----\----;
                      CMP.B #$03                          ;;----|EFDE/----\----;
                      BEQ CODE_01EFEE                     ;;----|EFE0/----\----;
                      LDA.W !SpriteMisc151C,X             ;;----|EFE2/----\----;
                      BEQ +                               ;;----|EFE5/----\----;
                      LDA.W !OAMTileNo+$100,Y             ;;----|EFE7/----\----;
                      CMP.B #$24                          ;;----|EFEA/----\----;
                      BEQ +                               ;;----|EFEC/----\----;
CODE_01EFEE:          LDA.B #$2A                          ;;----|EFEE/----\----;
                      STA.W !OAMTileNo+$100,Y             ;;----|EFF0/----\----;
                    + LDA.W !YoshiStartEatTimer           ;;----|EFF3/----\----;
                      BEQ CODE_01EFFD                     ;;----|EFF6/----\----;
CODE_01EFF8:          LDA.B #$0C                          ;;----|EFF8/----\----;
CODE_01EFFA:          STA.W !OAMTileNo+$100,Y             ;;----|EFFA/----\----;
CODE_01EFFD:          LDA.W !SpriteMisc1564,X             ;;----|EFFD/----\----;
                      LDY.W !YoshiSwallowTimer            ;;----|F000/----\----;
                      BEQ CODE_01F00F                     ;;----|F003/----\----;
                      CPY.B #$26                          ;;----|F005/----\----;
                      BCS CODE_01F038                     ;;----|F007/----\----;
                      LDA.B !EffFrame                     ;;----|F009/----\----;
                      AND.B #$18                          ;;----|F00B/----\----;
                      BNE CODE_01F038                     ;;----|F00D/----\----;
CODE_01F00F:          LDA.W !SpriteMisc1564,X             ;;----|F00F/----\----;
                      CMP.B #$00                          ;;----|F012/----\----;
                      BEQ Return01EFDA                    ;;----|F014/----\----;
                      LDY.B #$00                          ;;----|F016/----\----;
                      CMP.B #$0F                          ;;----|F018/----\----;
                      BCC CODE_01F03A                     ;;----|F01A/----\----;
                      CMP.B #$1C                          ;;----|F01C/----\----;
                      BCC CODE_01F038                     ;;----|F01E/----\----;
                      BNE +                               ;;----|F020/----\----;
                      LDA.B !_E                           ;;----|F022/----\----;
                      PHA                                 ;;----|F024/----\----;
                      JSL SetTreeTile                     ;;----|F025/----\----;
                      JSR CODE_01F0D3                     ;;----|F029/----\----;
                      PLA                                 ;;----|F02C/----\----;
                      STA.B !_E                           ;;----|F02D/----\----;
                    + INC.W !PlayerIsFrozen               ;;----|F02F/----\----;
                      LDA.B #$00                          ;;----|F032/----\----;
                      LDY.B #$2A                          ;;----|F034/----\----;
                      BRA CODE_01F03A                     ;;----|F036/----\----;
                                                          ;;                   ;
CODE_01F038:          LDY.B #$04                          ;;----|F038/----\----;
CODE_01F03A:          PHA                                 ;;----|F03A/----\----;
                      TYA                                 ;;----|F03B/----\----;
                      LDY.B !_E                           ;;----|F03C/----\----;
                      STA.W !OAMTileNo+$100,Y             ;;----|F03E/----\----;
                      PLA                                 ;;----|F041/----\----;
                      CMP.B #$0F                          ;;----|F042/----\----;
                      BCS Return01F0A0                    ;;----|F044/----\----;
                      CMP.B #$05                          ;;----|F046/----\----;
                      BCC Return01F0A0                    ;;----|F048/----\----;
                      SBC.B #$05                          ;;----|F04A/----\----;
                      LDY.W !SpriteMisc157C,X             ;;----|F04C/----\----;
                      BEQ +                               ;;----|F04F/----\----;
                      CLC                                 ;;----|F051/----\----;
                      ADC.B #$0A                          ;;----|F052/----\----;
                    + LDY.W !SpriteMisc1602,X             ;;----|F054/----\----;
                      CPY.B #$0A                          ;;----|F057/----\----;
                      BNE +                               ;;----|F059/----\----;
                      CLC                                 ;;----|F05B/----\----;
                      ADC.B #$14                          ;;----|F05C/----\----;
                    + STA.B !_2                           ;;----|F05E/----\----;
                      JSR IsSprOffScreen                  ;;----|F060/----\----;
                      BNE Return01F0A0                    ;;----|F063/----\----;
                      LDA.B !SpriteXPosLow,X              ;;----|F065/----\----;
                      SEC                                 ;;----|F067/----\----;
                      SBC.B !Layer1XPos                   ;;----|F068/----\----;
                      STA.B !_0                           ;;----|F06A/----\----;
                      LDA.B !SpriteYPosLow,X              ;;----|F06C/----\----;
                      SEC                                 ;;----|F06E/----\----;
                      SBC.B !Layer1YPos                   ;;----|F06F/----\----;
                      STA.B !_1                           ;;----|F071/----\----;
                      PHX                                 ;;----|F073/----\----;
                      LDX.B !_2                           ;;----|F074/----\----;
                      LDA.B !_0                           ;;----|F076/----\----;
                      CLC                                 ;;----|F078/----\----;
                      ADC.L DATA_03C176,X                 ;;----|F079/----\----;
                      STA.W !OAMTileXPos+$100             ;;----|F07D/----\----;
                      LDA.B !_1                           ;;----|F080/----\----;
                      CLC                                 ;;----|F082/----\----;
                      ADC.L DATA_03C19E,X                 ;;----|F083/----\----;
                      STA.W !OAMTileYPos+$100             ;;----|F087/----\----;
                      LDA.B #$3F                          ;;----|F08A/----\----;
                      STA.W !OAMTileNo+$100               ;;----|F08C/----\----;
                      PLX                                 ;;----|F08F/----\----;
                      LDY.W !SpriteOAMIndex,X             ;;----|F090/----\----; Y = Index into sprite OAM 
                      LDA.W !OAMTileAttr+$100,Y           ;;----|F093/----\----;
                      ORA.B #$01                          ;;----|F096/----\----;
                      STA.W !OAMTileAttr+$100             ;;----|F098/----\----;
                      LDA.B #$00                          ;;----|F09B/----\----;
                      STA.W !OAMTileSize+$40              ;;----|F09D/----\----;
Return01F0A0:         RTS                                 ;;----|F0A0/----\----; Return 
                                                          ;;                   ;
Return01F0A1:         RTS                                 ;;----|F0A1/----\----; Return 
                                                          ;;                   ;
CODE_01F0A2:          LDA.B !SpriteTableC2,X              ;;----|F0A2/----\----;
                      CMP.B #$01                          ;;----|F0A4/----\----;
                      BNE +                               ;;----|F0A6/----\----;
                      JSL CODE_02D0D4                     ;;----|F0A8/----\----;
                    + LDA.W !YoshiHasWingsGfx             ;;----|F0AC/----\----; \ Branch if $1410 == #$01 
                      CMP.B #$01                          ;;----|F0AF/----\----;  | This never happens 
                      BEQ Return01F0A1                    ;;----|F0B1/----\----; / (fireball on Yoshi ability) 
                      LDA.W !YoshiTongueTimer             ;;----|F0B3/----\----;
                      CMP.B #$10                          ;;----|F0B6/----\----;
                      BNE +                               ;;----|F0B8/----\----;
                      LDA.W !YoshiStartEatTimer           ;;----|F0BA/----\----;
                      BNE +                               ;;----|F0BD/----\----;
                      LDA.B #$06                          ;;----|F0BF/----\----;
                      STA.W !YoshiStartEatTimer           ;;----|F0C1/----\----;
                    + LDA.W !SpriteMisc1594,X             ;;----|F0C4/----\----;
                      JSL ExecutePtr                      ;;----|F0C7/----\----;
                                                          ;;                   ;
                      dw CODE_01F14B                      ;;----|F0CB/----\----;
                      dw CODE_01F314                      ;;----|F0CD/----\----;
                      dw CODE_01F332                      ;;----|F0CF/----\----;
                      dw CODE_01F12E                      ;;----|F0D1/----\----;
                                                          ;;                   ;
CODE_01F0D3:          LDA.B #$06                          ;;----|F0D3/----\----; \ Play sound effect 
                      STA.W !SPCIO0                       ;;----|F0D5/----\----; / 
                      JSL CODE_05B34A                     ;;----|F0D8/----\----;
                      LDA.W !EatenBerryType               ;;----|F0DC/----\----;
                      BEQ Return01F12D                    ;;----|F0DF/----\----;
                      STZ.W !EatenBerryType               ;;----|F0E1/----\----;
                      CMP.B #$01                          ;;----|F0E4/----\----;
                      BNE CODE_01F0F9                     ;;----|F0E6/----\----;
                      INC.W !RedBerriesEaten              ;;----|F0E8/----\----;
                      LDA.W !RedBerriesEaten              ;;----|F0EB/----\----;
                      CMP.B #$0A                          ;;----|F0EE/----\----;
                      BNE Return01F12D                    ;;----|F0F0/----\----;
                      STZ.W !RedBerriesEaten              ;;----|F0F2/----\----;
                      LDA.B #$74                          ;;----|F0F5/----\----;
                      BRA CODE_01F125                     ;;----|F0F7/----\----;
                                                          ;;                   ;
CODE_01F0F9:          CMP.B #$03                          ;;----|F0F9/----\----;
                      BNE CODE_01F116                     ;;----|F0FB/----\----;
                      LDA.B #$29                          ;;----|F0FD/----\----; \ Play sound effect 
                      STA.W !SPCIO3                       ;;----|F0FF/----\----; / 
                      LDA.W !InGameTimerTens              ;;----|F102/----\----;
                      CLC                                 ;;----|F105/----\----;
                      ADC.B #$02                          ;;----|F106/----\----;
                      CMP.B #$0A                          ;;----|F108/----\----;
                      BCC +                               ;;----|F10A/----\----;
                      SBC.B #$0A                          ;;----|F10C/----\----;
                      INC.W !InGameTimerHundreds          ;;----|F10E/----\----;
                    + STA.W !InGameTimerTens              ;;----|F111/----\----;
                      BRA Return01F12D                    ;;----|F114/----\----;
                                                          ;;                   ;
CODE_01F116:          INC.W !PinkBerriesEaten             ;;----|F116/----\----;
                      LDA.W !PinkBerriesEaten             ;;----|F119/----\----;
                      CMP.B #$02                          ;;----|F11C/----\----;
                      BNE Return01F12D                    ;;----|F11E/----\----;
                      STZ.W !PinkBerriesEaten             ;;----|F120/----\----;
                      LDA.B #$6A                          ;;----|F123/----\----;
CODE_01F125:          STA.W !YoshiEggSpriteHatch          ;;----|F125/----\----;
                      LDY.B #$20                          ;;----|F128/----\----;
                      STY.W !EggLaidTimer                 ;;----|F12A/----\----;
Return01F12D:         RTS                                 ;;----|F12D/----\----; Return 
                                                          ;;                   ;
CODE_01F12E:          LDA.W !SpriteMisc1558,X             ;;----|F12E/----\----;
                      BNE +                               ;;----|F131/----\----;
                      STZ.W !SpriteMisc1594,X             ;;----|F133/----\----;
                    + RTS                                 ;;----|F136/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
YoshiShellAbility:    db $00,$00,$01,$02,$00,$00,$01,$02  ;;----|F137/----\----;
                      db $01,$01,$01,$03,$02,$02          ;;----|F13F/----\----;
                                                          ;;                   ;
YoshiAbilityIndex:    db $03,$02,$02,$03,$01,$00          ;;----|F145/----\----;
                                                          ;;                   ;
CODE_01F14B:          LDA.W !YoshiHeavenFlag              ;;----|F14B/----\----;
                      BEQ +                               ;;----|F14E/----\----;
                      LDA.B #$02                          ;;----|F150/----\----; \ Set Yoshi wing ability 
                      STA.W !YoshiHasWingsEvt             ;;----|F152/----\----; / 
                    + LDA.W !YoshiSwallowTimer            ;;----|F155/----\----;
                      BEQ CODE_01F1A2                     ;;----|F158/----\----;
                      LDY.W !SpriteMisc160E,X             ;;----|F15A/----\----;
                      LDA.W !SpriteNumber,Y               ;;----|F15D/----\----;
                      CMP.B #$80                          ;;----|F160/----\----;
                      BNE +                               ;;----|F162/----\----;
                      INC.W !YoshiHasKey                  ;;----|F164/----\----;
                    + CMP.B #$0D                          ;;----|F167/----\----;
                      BCS CODE_01F1A2                     ;;----|F169/----\----;
                      PHY                                 ;;----|F16B/----\----;
                      LDA.W !SpriteMisc187B,Y             ;;----|F16C/----\----;
                      CMP.B #$01                          ;;----|F16F/----\----;
                      LDA.B #$03                          ;;----|F171/----\----;
                      BCS +                               ;;----|F173/----\----;
                      LDA.W !SpriteOBJAttribute,X         ;;----|F175/----\----; \ Set yoshi stomp/wing ability, 
                      LSR A                               ;;----|F178/----\----;  | based on palette of sprite and Yoshi 
                      AND.B #$07                          ;;----|F179/----\----;  | 
                      TAY                                 ;;----|F17B/----\----;  | 
                      LDA.W YoshiAbilityIndex,Y           ;;----|F17C/----\----;  | 
                      ASL A                               ;;----|F17F/----\----;  | 
                      ASL A                               ;;----|F180/----\----;  | 
                      STA.B !_0                           ;;----|F181/----\----;  | 
                      PLY                                 ;;----|F183/----\----;  | 
                      PHY                                 ;;----|F184/----\----;  | 
                      LDA.W !SpriteOBJAttribute,Y         ;;----|F185/----\----;  | 
                      LSR A                               ;;----|F188/----\----;  | 
                      AND.B #$07                          ;;----|F189/----\----;  | 
                      TAY                                 ;;----|F18B/----\----;  | 
                      LDA.W YoshiAbilityIndex,Y           ;;----|F18C/----\----;  | 
                      ORA.B !_0                           ;;----|F18F/----\----;  | 
                      TAY                                 ;;----|F191/----\----;  | 
                      LDA.W YoshiShellAbility,Y           ;;----|F192/----\----; / 
                    + PHA                                 ;;----|F195/----\----; \ Set yoshi wing ability 
                      AND.B #$02                          ;;----|F196/----\----;  | ($141E = #$02) 
                      STA.W !YoshiHasWingsEvt             ;;----|F198/----\----; / 
                      PLA                                 ;;----|F19B/----\----; \ If Yoshi gets stomp ability, 
                      AND.B #$01                          ;;----|F19C/----\----;  | $18E7 = #$01 
                      STA.W !YoshiCanStomp                ;;----|F19E/----\----; / 
                      PLY                                 ;;----|F1A1/----\----;
CODE_01F1A2:          LDA.B !EffFrame                     ;;----|F1A2/----\----;
                      AND.B #$03                          ;;----|F1A4/----\----;
                      BNE +                               ;;----|F1A6/----\----;
                      LDA.W !YoshiSwallowTimer            ;;----|F1A8/----\----;
                      BEQ +                               ;;----|F1AB/----\----;
                      DEC.W !YoshiSwallowTimer            ;;----|F1AD/----\----;
                      BNE +                               ;;----|F1B0/----\----;
                      LDY.W !SpriteMisc160E,X             ;;----|F1B2/----\----;
                      LDA.B #$00                          ;;----|F1B5/----\----;
                      STA.W !SpriteStatus,Y               ;;----|F1B7/----\----;
                      DEC A                               ;;----|F1BA/----\----;
                      STA.W !SpriteMisc160E,X             ;;----|F1BB/----\----;
                      LDA.B #$1B                          ;;----|F1BE/----\----;
                      STA.W !SpriteMisc1564,X             ;;----|F1C0/----\----;
                      JMP CODE_01F0D3                     ;;----|F1C3/----\----;
                                                          ;;                   ;
                    + LDA.W !YoshiStartEatTimer           ;;----|F1C6/----\----;
                      BEQ CODE_01F1DF                     ;;----|F1C9/----\----;
                      DEC.W !YoshiStartEatTimer           ;;----|F1CB/----\----;
                      BNE Return01F1DE                    ;;----|F1CE/----\----;
                      INC.W !SpriteMisc1594,X             ;;----|F1D0/----\----;
                      STZ.W !SpriteMisc151C,X             ;;----|F1D3/----\----;
                      LDA.B #$FF                          ;;----|F1D6/----\----;
                      STA.W !SpriteMisc160E,X             ;;----|F1D8/----\----;
                      STZ.W !SpriteMisc1564,X             ;;----|F1DB/----\----;
Return01F1DE:         RTS                                 ;;----|F1DE/----\----; Return 
                                                          ;;                   ;
CODE_01F1DF:          LDA.B !SpriteTableC2,X              ;;----|F1DF/----\----;
                      CMP.B #$01                          ;;----|F1E1/----\----;
                      BNE Return01F1DE                    ;;----|F1E3/----\----;
                      BIT.B !byetudlrFrame                ;;----|F1E5/----\----;
                      BVC Return01F1DE                    ;;----|F1E7/----\----;
                      LDA.W !YoshiSwallowTimer            ;;----|F1E9/----\----;
                      BNE +                               ;;----|F1EC/----\----;
                      JMP CODE_01F309                     ;;----|F1EE/----\----;
                                                          ;;                   ;
                    + STZ.W !YoshiSwallowTimer            ;;----|F1F1/----\----;
                      LDY.W !SpriteMisc160E,X             ;;----|F1F4/----\----;
                      PHY                                 ;;----|F1F7/----\----;
                      PHY                                 ;;----|F1F8/----\----;
                      LDY.W !SpriteMisc157C,X             ;;----|F1F9/----\----;
                      LDA.B !SpriteXPosLow,X              ;;----|F1FC/----\----;
                      CLC                                 ;;----|F1FE/----\----;
                      ADC.W DATA_01F305,Y                 ;;----|F1FF/----\----;
                      PLY                                 ;;----|F202/----\----;
                      STA.W !SpriteXPosLow,Y              ;;----|F203/----\----;
                      LDY.W !SpriteMisc157C,X             ;;----|F206/----\----;
                      LDA.W !SpriteYPosHigh,X             ;;----|F209/----\----;
                      ADC.W DATA_01F307,Y                 ;;----|F20C/----\----;
                      PLY                                 ;;----|F20F/----\----;
                      STA.W !SpriteYPosHigh,Y             ;;----|F210/----\----;
                      LDA.B !SpriteYPosLow,X              ;;----|F213/----\----;
                      STA.W !SpriteYPosLow,Y              ;;----|F215/----\----;
                      LDA.W !SpriteXPosHigh,X             ;;----|F218/----\----;
                      STA.W !SpriteXPosHigh,Y             ;;----|F21B/----\----;
                      LDA.B #$00                          ;;----|F21E/----\----;
                      STA.W !SpriteTableC2,Y              ;;----|F220/----\----;
                      STA.W !SpriteOnYoshiTongue,Y        ;;----|F223/----\----;
                      STA.W !SpriteMisc1626,Y             ;;----|F226/----\----;
                      LDA.W !PlayerDuckingOnYoshi         ;;----|F229/----\----;
                      CMP.B #$01                          ;;----|F22C/----\----;
                      LDA.B #$0A                          ;;----|F22E/----\----;
                      BCC +                               ;;----|F230/----\----;
                      LDA.B #$09                          ;;----|F232/----\----; \ Sprite status = Carryable 
                    + STA.W !SpriteStatus,Y               ;;----|F234/----\----; / 
                      PHX                                 ;;----|F237/----\----;
                      LDA.W !SpriteMisc157C,X             ;;----|F238/----\----;
                      STA.W !SpriteMisc157C,Y             ;;----|F23B/----\----;
                      TAX                                 ;;----|F23E/----\----;
                      BCC +                               ;;----|F23F/----\----;
                      INX                                 ;;----|F241/----\----;
                      INX                                 ;;----|F242/----\----;
                    + LDA.W DATA_01F301,X                 ;;----|F243/----\----;
                      STA.W !SpriteXSpeed,Y               ;;----|F246/----\----;
                      LDA.B #$00                          ;;----|F249/----\----;
                      STA.W !SpriteYSpeed,Y               ;;----|F24B/----\----;
                      PLX                                 ;;----|F24E/----\----;
                      LDA.B #$10                          ;;----|F24F/----\----;
                      STA.W !SpriteMisc1558,X             ;;----|F251/----\----;
                      LDA.B #$03                          ;;----|F254/----\----;
                      STA.W !SpriteMisc1594,X             ;;----|F256/----\----;
                      LDA.B #$FF                          ;;----|F259/----\----;
                      STA.W !SpriteMisc160E,X             ;;----|F25B/----\----;
                      LDA.W !SpriteNumber,Y               ;;----|F25E/----\----;
                      CMP.B #$0D                          ;;----|F261/----\----;
                      BCS CODE_01F2DF                     ;;----|F263/----\----;
                      LDA.W !SpriteMisc187B,Y             ;;----|F265/----\----;
                      BNE CODE_01F27C                     ;;----|F268/----\----;
                      LDA.W !SpriteOBJAttribute,Y         ;;----|F26A/----\----;
                      AND.B #$0E                          ;;----|F26D/----\----;
                      CMP.B #$08                          ;;----|F26F/----\----;
                      BEQ CODE_01F27C                     ;;----|F271/----\----;
                      LDA.W !SpriteOBJAttribute,X         ;;----|F273/----\----;
                      AND.B #$0E                          ;;----|F276/----\----;
                      CMP.B #$08                          ;;----|F278/----\----;
                      BNE CODE_01F2DF                     ;;----|F27A/----\----;
CODE_01F27C:          PHX                                 ;;----|F27C/----\----;
                      TYX                                 ;;----|F27D/----\----;
                      STZ.W !SpriteStatus,X               ;;----|F27E/----\----;
                      LDA.B #$02                          ;;----|F281/----\----;
                      STA.B !_0                           ;;----|F283/----\----;
                      JSR CODE_01F295                     ;;----|F285/----\----;
                      JSR CODE_01F295                     ;;----|F288/----\----;
                      JSR CODE_01F295                     ;;----|F28B/----\----;
                      PLX                                 ;;----|F28E/----\----;
                      LDA.B #$17                          ;;----|F28F/----\----; \ Play sound effect 
                      STA.W !SPCIO3                       ;;----|F291/----\----; / 
                      RTS                                 ;;----|F294/----\----; Return 
                                                          ;;                   ;
CODE_01F295:          JSR CODE_018EEF                     ;;----|F295/----\----;
                      LDA.B #$11                          ;;----|F298/----\----; \ Extended sprite = Yoshi fireball 
                      STA.W !ExtSpriteNumber,Y            ;;----|F29A/----\----; / 
                      LDA.B !SpriteXPosLow,X              ;;----|F29D/----\----;
                      STA.W !ExtSpriteXPosLow,Y           ;;----|F29F/----\----;
                      LDA.W !SpriteYPosHigh,X             ;;----|F2A2/----\----;
                      STA.W !ExtSpriteXPosHigh,Y          ;;----|F2A5/----\----;
                      LDA.B !SpriteYPosLow,X              ;;----|F2A8/----\----;
                      STA.W !ExtSpriteYPosLow,Y           ;;----|F2AA/----\----;
                      LDA.W !SpriteXPosHigh,X             ;;----|F2AD/----\----;
                      STA.W !ExtSpriteYPosHigh,Y          ;;----|F2B0/----\----;
                      LDA.B #$00                          ;;----|F2B3/----\----;
                      STA.W !ExtSpritePriority,Y          ;;----|F2B5/----\----;
                      PHX                                 ;;----|F2B8/----\----;
                      LDA.W !SpriteMisc157C,X             ;;----|F2B9/----\----;
                      LSR A                               ;;----|F2BC/----\----;
                      LDX.B !_0                           ;;----|F2BD/----\----;
                      LDA.W DATA_01F2D9,X                 ;;----|F2BF/----\----;
                      BCC +                               ;;----|F2C2/----\----;
                      EOR.B #$FF                          ;;----|F2C4/----\----;
                      INC A                               ;;----|F2C6/----\----;
                    + STA.W !ExtSpriteXSpeed,Y            ;;----|F2C7/----\----;
                      LDA.W DATA_01F2DC,X                 ;;----|F2CA/----\----;
                      STA.W !ExtSpriteYSpeed,Y            ;;----|F2CD/----\----;
                      LDA.B #$A0                          ;;----|F2D0/----\----;
                      STA.W !ExtSpriteMisc176F,Y          ;;----|F2D2/----\----;
                      PLX                                 ;;----|F2D5/----\----;
                      DEC.B !_0                           ;;----|F2D6/----\----;
                      RTS                                 ;;----|F2D8/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
DATA_01F2D9:          db $28,$24,$24                      ;;----|F2D9/----\----;
                                                          ;;                   ;
DATA_01F2DC:          db $00,$F8,$08                      ;;----|F2DC/----\----;
                                                          ;;                   ;
CODE_01F2DF:          LDA.B #$20                          ;;----|F2DF/----\----; \ Play sound effect 
                      STA.W !SPCIO0                       ;;----|F2E1/----\----; / 
                      LDA.W !SpriteTweakerE,Y             ;;----|F2E4/----\----; \ Return if sprite doesn't spawn a new one 
                      AND.B #$40                          ;;----|F2E7/----\----;  | 
                      BEQ +                               ;;----|F2E9/----\----; / 
                      PHX                                 ;;----|F2EB/----\----; \ Load sprite to spawn and store it 
                      LDX.W !SpriteNumber,Y               ;;----|F2EC/----\----;  | 
                      LDA.L SpriteToSpawn,X               ;;----|F2EF/----\----;  | 
                      PLX                                 ;;----|F2F3/----\----;  | 
                      STA.W !SpriteNumber,Y               ;;----|F2F4/----\----; / 
                      PHX                                 ;;----|F2F7/----\----; \ Load Tweaker bytes 
                      TYX                                 ;;----|F2F8/----\----;  | 
                      JSL LoadSpriteTables                ;;----|F2F9/----\----;  | 
                      PLX                                 ;;----|F2FD/----\----; / 
                    + RTS                                 ;;----|F2FE/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
                      db $20,$E0                          ;;----|F2FF/----\----;
                                                          ;;                   ;
DATA_01F301:          db $30,$D0,$10,$F0                  ;;----|F301/----\----;
                                                          ;;                   ;
DATA_01F305:          db $10,$F0                          ;;----|F305/----\----;
                                                          ;;                   ;
DATA_01F307:          db $00,$FF                          ;;----|F307/----\----;
                                                          ;;                   ;
CODE_01F309:          LDA.B #$12                          ;;----|F309/----\----;
                      STA.W !YoshiTongueTimer             ;;----|F30B/----\----;
                      LDA.B #$21                          ;;----|F30E/----\----; \ Play sound effect 
                      STA.W !SPCIO3                       ;;----|F310/----\----; / 
                      RTS                                 ;;----|F313/----\----; Return 
                                                          ;;                   ;
CODE_01F314:          LDA.W !SpriteMisc151C,X             ;;----|F314/----\----;
                      CLC                                 ;;----|F317/----\----;
                      ADC.B #$03                          ;;----|F318/----\----;
                      STA.W !SpriteMisc151C,X             ;;----|F31A/----\----;
                      CMP.B #$20                          ;;----|F31D/----\----;
                      BCS +                               ;;----|F31F/----\----;
CODE_01F321:          JSR CODE_01F3FE                     ;;----|F321/----\----;
                      JSR CODE_01F4B2                     ;;----|F324/----\----;
                      RTS                                 ;;----|F327/----\----; Return 
                                                          ;;                   ;
                    + LDA.B #$08                          ;;----|F328/----\----;
                      STA.W !SpriteMisc1558,X             ;;----|F32A/----\----;
                      INC.W !SpriteMisc1594,X             ;;----|F32D/----\----;
                      BRA CODE_01F321                     ;;----|F330/----\----;
                                                          ;;                   ;
CODE_01F332:          LDA.W !SpriteMisc1558,X             ;;----|F332/----\----;
                      BNE CODE_01F321                     ;;----|F335/----\----;
                      LDA.W !SpriteMisc151C,X             ;;----|F337/----\----;
                      SEC                                 ;;----|F33A/----\----;
                      SBC.B #$04                          ;;----|F33B/----\----;
                      BMI CODE_01F344                     ;;----|F33D/----\----;
                      STA.W !SpriteMisc151C,X             ;;----|F33F/----\----;
                      BRA CODE_01F321                     ;;----|F342/----\----;
                                                          ;;                   ;
CODE_01F344:          STZ.W !SpriteMisc151C,X             ;;----|F344/----\----;
                      STZ.W !SpriteMisc1594,X             ;;----|F347/----\----;
                      LDY.W !SpriteMisc160E,X             ;;----|F34A/----\----;
                      BMI CODE_01F370                     ;;----|F34D/----\----;
                      LDA.W !SpriteTweakerE,Y             ;;----|F34F/----\----;
                      AND.B #$02                          ;;----|F352/----\----;
                      BEQ CODE_01F373                     ;;----|F354/----\----;
                      LDA.B #$07                          ;;----|F356/----\----; \ Sprite status = Unused (todo: look here) 
                      STA.W !SpriteStatus,Y               ;;----|F358/----\----; / 
                      LDA.B #$FF                          ;;----|F35B/----\----;
                      STA.W !YoshiSwallowTimer            ;;----|F35D/----\----;
                      LDA.W !SpriteNumber,Y               ;;----|F360/----\----; \ Branch if not a Koopa 
                      CMP.B #$0D                          ;;----|F363/----\----;  | (sprite number >= #$0D) 
                      BCS CODE_01F370                     ;;----|F365/----\----; / 
                      PHX                                 ;;----|F367/----\----;
                      TAX                                 ;;----|F368/----\----;
                      LDA.W SpriteToSpawn,X               ;;----|F369/----\----;
                      STA.W !SpriteNumber,Y               ;;----|F36C/----\----;
                      PLX                                 ;;----|F36F/----\----;
CODE_01F370:          JMP CODE_01F3FA                     ;;----|F370/----\----;
                                                          ;;                   ;
CODE_01F373:          LDA.B #$00                          ;;----|F373/----\----;
                      STA.W !SpriteStatus,Y               ;;----|F375/----\----;
                      LDA.B #$1B                          ;;----|F378/----\----;
                      STA.W !SpriteMisc1564,X             ;;----|F37A/----\----;
                      LDA.B #$FF                          ;;----|F37D/----\----;
                      STA.W !SpriteMisc160E,X             ;;----|F37F/----\----;
                      STY.B !_0                           ;;----|F382/----\----;
                      LDA.W !SpriteNumber,Y               ;;----|F384/----\----;
                      CMP.B #$9D                          ;;----|F387/----\----;
                      BNE +                               ;;----|F389/----\----;
                      LDA.W !SpriteTableC2,Y              ;;----|F38B/----\----;
                      CMP.B #$03                          ;;----|F38E/----\----;
                      BNE +                               ;;----|F390/----\----;
                      LDA.B #$74                          ;;----|F392/----\----; \ Sprite = Mushroom 
                      STA.W !SpriteNumber,Y               ;;----|F394/----\----; / 
                      LDA.W !SpriteTweakerD,Y             ;;----|F397/----\----; \ Set "Gives powerup when eaten" bit 
                      ORA.B #$40                          ;;----|F39A/----\----;  | 
                      STA.W !SpriteTweakerD,Y             ;;----|F39C/----\----; / 
                    + LDA.W !SpriteNumber,Y               ;;----|F39F/----\----; \ Branch if not Changing Item 
                      CMP.B #$81                          ;;----|F3A2/----\----;  | 
                      BNE +                               ;;----|F3A4/----\----; / 
                      LDA.W !SpriteMisc187B,Y             ;;----|F3A6/----\----;
                      LSR A                               ;;----|F3A9/----\----;
                      LSR A                               ;;----|F3AA/----\----;
                      LSR A                               ;;----|F3AB/----\----;
                      LSR A                               ;;----|F3AC/----\----;
                      LSR A                               ;;----|F3AD/----\----;
                      LSR A                               ;;----|F3AE/----\----;
                      AND.B #$03                          ;;----|F3AF/----\----;
                      TAY                                 ;;----|F3B1/----\----;
                      LDA.W ChangingItemSprite,Y          ;;----|F3B2/----\----;
                      LDY.B !_0                           ;;----|F3B5/----\----;
                      STA.W !SpriteNumber,Y               ;;----|F3B7/----\----;
                    + PHA                                 ;;----|F3BA/----\----;
                      LDY.B !_0                           ;;----|F3BB/----\----;
                      LDA.W !SpriteTweakerD,Y             ;;----|F3BD/----\----;
                      ASL A                               ;;----|F3C0/----\----;
                      ASL A                               ;;----|F3C1/----\----;
                      PLA                                 ;;----|F3C2/----\----;
                      BCC +                               ;;----|F3C3/----\----;
                      PHX                                 ;;----|F3C5/----\----;
                      TYX                                 ;;----|F3C6/----\----;
                      STZ.B !SpriteTableC2,X              ;;----|F3C7/----\----;
                      JSR CODE_01C4BF                     ;;----|F3C9/----\----;
                      PLX                                 ;;----|F3CC/----\----;
                      LDY.W !PlayerDuckingOnYoshi         ;;----|F3CD/----\----;
                      LDA.W DATA_01F3D9,Y                 ;;----|F3D0/----\----;
                      STA.W !SpriteMisc1602,X             ;;----|F3D3/----\----;
                      JMP CODE_01F321                     ;;----|F3D6/----\----;
                                                          ;;                   ;
                                                          ;;                   ;
DATA_01F3D9:          db $00,$04                          ;;----|F3D9/----\----;
                                                          ;;                   ;
                    + CMP.B #$7E                          ;;----|F3DB/----\----;
                      BNE CODE_01F3F7                     ;;----|F3DD/----\----;
                      LDA.W !SpriteTableC2,Y              ;;----|F3DF/----\----;
                      BEQ CODE_01F3F7                     ;;----|F3E2/----\----;
                      CMP.B #$02                          ;;----|F3E4/----\----;
                      BNE +                               ;;----|F3E6/----\----;
                      LDA.B #$08                          ;;----|F3E8/----\----;
                      STA.B !PlayerAnimation              ;;----|F3EA/----\----;
                      LDA.B #$03                          ;;----|F3EC/----\----; \ Play sound effect 
                      STA.W !SPCIO3                       ;;----|F3EE/----\----; / 
                    + JSR CODE_01F6CD                     ;;----|F3F1/----\----;
                      JMP CODE_01F321                     ;;----|F3F4/----\----;
                                                          ;;                   ;
CODE_01F3F7:          JSR CODE_01F0D3                     ;;----|F3F7/----\----;
CODE_01F3FA:          JMP CODE_01F321                     ;;----|F3FA/----\----;
                                                          ;;                   ;
Return01F3FD:         RTS                                 ;;----|F3FD/----\----; Return 
                                                          ;;                   ;
CODE_01F3FE:          LDA.W !SpriteOffscreenX,X           ;;----|F3FE/----\----; \ Branch if sprite off screen... 
                      ORA.W !SpriteOffscreenVert,X        ;;----|F401/----\----;  | 
                      ORA.W !YoshiInPipeSetting           ;;----|F404/----\----;  | ...or going down pipe 
                      BNE Return01F3FD                    ;;----|F407/----\----; / 
                      LDY.W !SpriteMisc1602,X             ;;----|F409/----\----;
                      LDA.W DATA_01F61A,Y                 ;;----|F40C/----\----;
                      STA.W !TileGenerateTrackA           ;;----|F40F/----\----;
                      CLC                                 ;;----|F412/----\----;
                      ADC.B !SpriteYPosLow,X              ;;----|F413/----\----;
                      SEC                                 ;;----|F415/----\----;
                      SBC.B !Layer1YPos                   ;;----|F416/----\----;
                      STA.B !_1                           ;;----|F418/----\----;
                      LDA.W !SpriteMisc157C,X             ;;----|F41A/----\----;
                      BNE +                               ;;----|F41D/----\----;
                      TYA                                 ;;----|F41F/----\----;
                      CLC                                 ;;----|F420/----\----;
                      ADC.B #$08                          ;;----|F421/----\----;
                      TAY                                 ;;----|F423/----\----;
                    + LDA.W DATA_01F60A,Y                 ;;----|F424/----\----;
                      STA.B !_D                           ;;----|F427/----\----;
                      LDA.B !SpriteXPosLow,X              ;;----|F429/----\----;
                      SEC                                 ;;----|F42B/----\----;
                      SBC.B !Layer1XPos                   ;;----|F42C/----\----;
                      CLC                                 ;;----|F42E/----\----;
                      ADC.B !_D                           ;;----|F42F/----\----;
                      STA.B !_0                           ;;----|F431/----\----;
                      LDA.W !SpriteMisc157C,X             ;;----|F433/----\----;
                      BNE CODE_01F43C                     ;;----|F436/----\----;
                      BCS Return01F3FD                    ;;----|F438/----\----;
                      BRA CODE_01F43E                     ;;----|F43A/----\----;
                                                          ;;                   ;
CODE_01F43C:          BCC Return01F3FD                    ;;----|F43C/----\----;
CODE_01F43E:          LDA.W !SpriteMisc151C,X             ;;----|F43E/----\----;
                      STA.W !HW_WRDIV+1                   ;;----|F441/----\----; Dividend (High-Byte)
                      STZ.W !HW_WRDIV                     ;;----|F444/----\----; Dividend (Low Byte)
                      LDA.B #$04                          ;;----|F447/----\----;
                      STA.W !HW_WRDIV+2                   ;;----|F449/----\----; Divisor B
                      NOP                                 ;;----|F44C/----\----;
                      NOP                                 ;;----|F44D/----\----;
                      NOP                                 ;;----|F44E/----\----;
                      NOP                                 ;;----|F44F/----\----;
                      NOP                                 ;;----|F450/----\----;
                      NOP                                 ;;----|F451/----\----;
                      NOP                                 ;;----|F452/----\----;
                      NOP                                 ;;----|F453/----\----;
                      LDA.W !SpriteMisc157C,X             ;;----|F454/----\----;
                      STA.B !_7                           ;;----|F457/----\----;
                      LSR A                               ;;----|F459/----\----;
                      LDA.W !HW_RDDIV+1                   ;;----|F45A/----\----; Quotient of Divide Result (High Byte)
                      BCC +                               ;;----|F45D/----\----;
                      EOR.B #$FF                          ;;----|F45F/----\----;
                      INC A                               ;;----|F461/----\----;
                    + STA.B !_5                           ;;----|F462/----\----;
                      LDA.B #$04                          ;;----|F464/----\----;
                      STA.B !_6                           ;;----|F466/----\----;
                      LDY.B #$0C                          ;;----|F468/----\----;
CODE_01F46A:          LDA.B !_0                           ;;----|F46A/----\----;
                      STA.W !OAMTileXPos,Y                ;;----|F46C/----\----;
                      CLC                                 ;;----|F46F/----\----;
                      ADC.B !_5                           ;;----|F470/----\----;
                      STA.B !_0                           ;;----|F472/----\----;
                      LDA.B !_5                           ;;----|F474/----\----;
                      BPL CODE_01F47C                     ;;----|F476/----\----;
                      BCC Return01F4B1                    ;;----|F478/----\----;
                      BRA CODE_01F47E                     ;;----|F47A/----\----;
                                                          ;;                   ;
CODE_01F47C:          BCS Return01F4B1                    ;;----|F47C/----\----;
CODE_01F47E:          LDA.B !_1                           ;;----|F47E/----\----;
                      STA.W !OAMTileYPos,Y                ;;----|F480/----\----;
                      LDA.B !_6                           ;;----|F483/----\----;
                      CMP.B #$01                          ;;----|F485/----\----;
                      LDA.B #$76                          ;;----|F487/----\----;
                      BCS +                               ;;----|F489/----\----;
                      LDA.B #$66                          ;;----|F48B/----\----;
                    + STA.W !OAMTileNo,Y                  ;;----|F48D/----\----;
                      LDA.B !_7                           ;;----|F490/----\----;
                      LSR A                               ;;----|F492/----\----;
                      LDA.B #$09                          ;;----|F493/----\----;
                      BCS +                               ;;----|F495/----\----;
                      ORA.B #$40                          ;;----|F497/----\----;
                    + ORA.B !SpriteProperties             ;;----|F499/----\----;
                      STA.W !OAMTileAttr,Y                ;;----|F49B/----\----;
                      PHY                                 ;;----|F49E/----\----;
                      TYA                                 ;;----|F49F/----\----;
                      LSR A                               ;;----|F4A0/----\----;
                      LSR A                               ;;----|F4A1/----\----;
                      TAY                                 ;;----|F4A2/----\----;
                      LDA.B #$00                          ;;----|F4A3/----\----;
                      STA.W !OAMTileSize,Y                ;;----|F4A5/----\----;
                      PLY                                 ;;----|F4A8/----\----;
                      INY                                 ;;----|F4A9/----\----;
                      INY                                 ;;----|F4AA/----\----;
                      INY                                 ;;----|F4AB/----\----;
                      INY                                 ;;----|F4AC/----\----;
                      DEC.B !_6                           ;;----|F4AD/----\----;
                      BPL CODE_01F46A                     ;;----|F4AF/----\----;
Return01F4B1:         RTS                                 ;;----|F4B1/----\----; Return 
                                                          ;;                   ;
CODE_01F4B2:          LDA.W !SpriteMisc160E,X             ;;----|F4B2/----\----;
                      BMI CODE_01F524                     ;;----|F4B5/----\----;
                      LDY.B #$00                          ;;----|F4B7/----\----;
                      LDA.B !_D                           ;;----|F4B9/----\----;
                      BMI CODE_01F4C3                     ;;----|F4BB/----\----;
                      CLC                                 ;;----|F4BD/----\----;
                      ADC.W !SpriteMisc151C,X             ;;----|F4BE/----\----;
                      BRA +                               ;;----|F4C1/----\----;
                                                          ;;                   ;
CODE_01F4C3:          LDA.W !SpriteMisc151C,X             ;;----|F4C3/----\----;
                      EOR.B #$FF                          ;;----|F4C6/----\----;
                      INC A                               ;;----|F4C8/----\----;
                      CLC                                 ;;----|F4C9/----\----;
                      ADC.B !_D                           ;;----|F4CA/----\----;
                    + SEC                                 ;;----|F4CC/----\----;
                      SBC.B #$04                          ;;----|F4CD/----\----;
                      BPL +                               ;;----|F4CF/----\----;
                      DEY                                 ;;----|F4D1/----\----;
                    + PHY                                 ;;----|F4D2/----\----;
                      CLC                                 ;;----|F4D3/----\----;
                      ADC.B !SpriteXPosLow,X              ;;----|F4D4/----\----;
                      LDY.W !SpriteMisc160E,X             ;;----|F4D6/----\----;
                      STA.W !SpriteXPosLow,Y              ;;----|F4D9/----\----;
                      PLY                                 ;;----|F4DC/----\----;
                      TYA                                 ;;----|F4DD/----\----;
                      ADC.W !SpriteYPosHigh,X             ;;----|F4DE/----\----;
                      LDY.W !SpriteMisc160E,X             ;;----|F4E1/----\----;
                      STA.W !SpriteYPosHigh,Y             ;;----|F4E4/----\----;
                      LDA.B #$FC                          ;;----|F4E7/----\----;
                      STA.B !_0                           ;;----|F4E9/----\----;
                      LDA.W !SpriteTweakerB,Y             ;;----|F4EB/----\----;
                      AND.B #$40                          ;;----|F4EE/----\----;
                      BNE +                               ;;----|F4F0/----\----;
                      LDA.W !SpriteTweakerF,Y             ;;----|F4F2/----\----; \ Branch if "Death frame 2 tiles high" 
                      AND.B #$20                          ;;----|F4F5/----\----;  | is NOT set 
                      BEQ +                               ;;----|F4F7/----\----; / 
                      LDA.B #$F8                          ;;----|F4F9/----\----;
                      STA.B !_0                           ;;----|F4FB/----\----;
                    + STZ.B !_1                           ;;----|F4FD/----\----;
                      LDA.B !_0                           ;;----|F4FF/----\----;
                      CLC                                 ;;----|F501/----\----;
                      ADC.W !TileGenerateTrackA           ;;----|F502/----\----;
                      BPL +                               ;;----|F505/----\----;
                      DEC.B !_1                           ;;----|F507/----\----;
                    + CLC                                 ;;----|F509/----\----;
                      ADC.B !SpriteYPosLow,X              ;;----|F50A/----\----;
                      STA.W !SpriteYPosLow,Y              ;;----|F50C/----\----;
                      LDA.W !SpriteXPosHigh,X             ;;----|F50F/----\----;
                      ADC.B !_1                           ;;----|F512/----\----;
                      STA.W !SpriteXPosHigh,Y             ;;----|F514/----\----;
                      LDA.B #$00                          ;;----|F517/----\----;
                      STA.W !SpriteYSpeed,Y               ;;----|F519/----\----;
                      STA.W !SpriteXSpeed,Y               ;;----|F51C/----\----;
                      INC A                               ;;----|F51F/----\----;
                      STA.W !SpriteOnYoshiTongue,Y        ;;----|F520/----\----;
                      RTS                                 ;;----|F523/----\----; Return 
                                                          ;;                   ;
CODE_01F524:          PHY                                 ;;----|F524/----\----;
                      LDY.B #$00                          ;;----|F525/----\----;
                      LDA.B !_D                           ;;----|F527/----\----;
                      BMI CODE_01F531                     ;;----|F529/----\----;
                      CLC                                 ;;----|F52B/----\----;
                      ADC.W !SpriteMisc151C,X             ;;----|F52C/----\----;
                      BRA +                               ;;----|F52F/----\----;
                                                          ;;                   ;
CODE_01F531:          LDA.W !SpriteMisc151C,X             ;;----|F531/----\----;
                      EOR.B #$FF                          ;;----|F534/----\----;
                      INC A                               ;;----|F536/----\----;
                      CLC                                 ;;----|F537/----\----;
                      ADC.B !_D                           ;;----|F538/----\----;
                    + CLC                                 ;;----|F53A/----\----;
                      ADC.B #$00                          ;;----|F53B/----\----;
                      BPL +                               ;;----|F53D/----\----;
                      DEY                                 ;;----|F53F/----\----;
                    + CLC                                 ;;----|F540/----\----;
                      ADC.B !SpriteXPosLow,X              ;;----|F541/----\----;
                      STA.B !_0                           ;;----|F543/----\----;
                      TYA                                 ;;----|F545/----\----;
                      ADC.W !SpriteYPosHigh,X             ;;----|F546/----\----;
                      STA.B !_8                           ;;----|F549/----\----;
                      PLY                                 ;;----|F54B/----\----;
                      LDA.W !TileGenerateTrackA           ;;----|F54C/----\----;
                      CLC                                 ;;----|F54F/----\----;
                      ADC.B #$02                          ;;----|F550/----\----;
                      CLC                                 ;;----|F552/----\----;
                      ADC.B !SpriteYPosLow,X              ;;----|F553/----\----;
                      STA.B !_1                           ;;----|F555/----\----;
                      LDA.W !SpriteXPosHigh,X             ;;----|F557/----\----;
                      ADC.B #$00                          ;;----|F55A/----\----;
                      STA.B !_9                           ;;----|F55C/----\----;
                      LDA.B #$08                          ;;----|F55E/----\----;
                      STA.B !_2                           ;;----|F560/----\----;
                      LDA.B #$04                          ;;----|F562/----\----;
                      STA.B !_3                           ;;----|F564/----\----;
                      LDY.B #$0B                          ;;----|F566/----\----; Loop over spites: 
CODE_01F568:          STY.W !SpriteInterIndex             ;;----|F568/----\----;
                      CPY.W !CurSpriteProcess             ;;----|F56B/----\----;
                      BEQ +                               ;;----|F56E/----\----;
                      LDA.W !SpriteMisc160E,X             ;;----|F570/----\----;
                      BPL +                               ;;----|F573/----\----;
                      LDA.W !SpriteStatus,Y               ;;----|F575/----\----; \ Skip sprite if sprite status < 8 
                      CMP.B #$08                          ;;----|F578/----\----;  | 
                      BCC +                               ;;----|F57A/----\----; / 
                      LDA.W !SpriteBehindScene,Y          ;;----|F57C/----\----; \ Skip sprite if behind scenery 
                      BNE +                               ;;----|F57F/----\----; / 
                      PHY                                 ;;----|F581/----\----;
                      JSR TryEatSprite                    ;;----|F582/----\----;
                      PLY                                 ;;----|F585/----\----;
                    + DEY                                 ;;----|F586/----\----;
                      BPL CODE_01F568                     ;;----|F587/----\----;
                      JSL CODE_02B9FA                     ;;----|F589/----\----;
                      RTS                                 ;;----|F58D/----\----; Return 
                                                          ;;                   ;
TryEatSprite:         PHX                                 ;;----|F58E/----\----;
                      TYX                                 ;;----|F58F/----\----;
                      JSL GetSpriteClippingA              ;;----|F590/----\----;
                      PLX                                 ;;----|F594/----\----;
                      JSL CheckForContact                 ;;----|F595/----\----;
                      BCC Return01F609                    ;;----|F599/----\----;
                      LDA.W !SpriteTweakerE,Y             ;;----|F59B/----\----; \ If sprite inedible 
                      LSR A                               ;;----|F59E/----\----;  | 
                      BCC +                               ;;----|F59F/----\----;  | 
                      LDA.B #$01                          ;;----|F5A1/----\----;  | Play sound effect 
                      STA.W !SPCIO0                       ;;----|F5A3/----\----;  | 
                      RTS                                 ;;----|F5A6/----\----; / Return 
                                                          ;;                   ;
                    + LDA.W !SpriteNumber,Y               ;;----|F5A7/----\----; \ Branch if sprite being eaten not Pokey 
                      CMP.B #$70                          ;;----|F5AA/----\----;  | 
                      BNE CODE_01F5FB                     ;;----|F5AC/----\----; / 
                      STY.W !TileGenerateTrackA           ;;----|F5AE/----\----; $185E = Index of sprite being eaten 
                      LDA.B !_1                           ;;----|F5B1/----\----;
                      SEC                                 ;;----|F5B3/----\----;
                      SBC.W !SpriteYPosLow,Y              ;;----|F5B4/----\----;
                      CLC                                 ;;----|F5B7/----\----;
                      ADC.B #$00                          ;;----|F5B8/----\----;
                      PHX                                 ;;----|F5BA/----\----;
                      TYX                                 ;;----|F5BB/----\----; X = Index of sprite being eaten 
                      JSL RemovePokeySegment              ;;----|F5BC/----\----;
                      PLX                                 ;;----|F5C0/----\----;
                      JSL FindFreeSprSlot                 ;;----|F5C1/----\----; \ Return if no free slots 
                      BMI Return01F609                    ;;----|F5C5/----\----; / 
                      LDA.B #$08                          ;;----|F5C7/----\----; \ Sprite status = Normal 
                      STA.W !SpriteStatus,Y               ;;----|F5C9/----\----; / 
                      LDA.B #$70                          ;;----|F5CC/----\----; \ Sprite = Pokey 
                      STA.W !SpriteNumber,Y               ;;----|F5CE/----\----; / 
                      LDA.B !_0                           ;;----|F5D1/----\----;
                      STA.W !SpriteXPosLow,Y              ;;----|F5D3/----\----;
                      LDA.B !_8                           ;;----|F5D6/----\----;
                      STA.W !SpriteYPosHigh,Y             ;;----|F5D8/----\----;
                      LDA.B !_1                           ;;----|F5DB/----\----;
                      STA.W !SpriteYPosLow,Y              ;;----|F5DD/----\----;
                      LDA.B !_9                           ;;----|F5E0/----\----;
                      STA.W !SpriteXPosHigh,Y             ;;----|F5E2/----\----;
                      PHX                                 ;;----|F5E5/----\----;
                      TYX                                 ;;----|F5E6/----\----; X = Index of new sprite 
                      JSL InitSpriteTables                ;;----|F5E7/----\----; Reset sprite tables 
                      LDX.W !TileGenerateTrackA           ;;----|F5EB/----\----; X = Index of sprite being eaten 
                      LDA.B !SpriteTableC2,X              ;;----|F5EE/----\----;
                      AND.B !_D                           ;;----|F5F0/----\----;
                      STA.W !SpriteTableC2,Y              ;;----|F5F2/----\----; y = index of new sptr here?? 
                      LDA.B #$01                          ;;----|F5F5/----\----;
                      STA.W !SpriteMisc1534,Y             ;;----|F5F7/----\----;
                      PLX                                 ;;----|F5FA/----\----;
CODE_01F5FB:          TYA                                 ;;----|F5FB/----\----; \ $160E,x = Index of sprite being eaten 
                      STA.W !SpriteMisc160E,X             ;;----|F5FC/----\----; / 
                      LDA.B #$02                          ;;----|F5FF/----\----;
                      STA.W !SpriteMisc1594,X             ;;----|F601/----\----;
                      LDA.B #$0A                          ;;----|F604/----\----;
                      STA.W !SpriteMisc1558,X             ;;----|F606/----\----;
Return01F609:         RTS                                 ;;----|F609/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
DATA_01F60A:          db $F5,$F5,$F5,$F5,$F5,$F5,$F5,$F0  ;;----|F60A/----\----;
                      db $13,$13,$13,$13,$13,$13,$13,$18  ;;----|F612/----\----;
DATA_01F61A:          db $08,$08,$08,$08,$08,$08,$08,$13  ;;----|F61A/----\----;
                                                          ;;                   ;
CODE_01F622:          LDA.W !SpriteMisc163E,X             ;;----|F622/----\----;
                      ORA.B !SpriteLock                   ;;----|F625/----\----;
                      BNE Return01F667                    ;;----|F627/----\----;
                      LDY.B #$0B                          ;;----|F629/----\----;
CODE_01F62B:          STY.W !SpriteInterIndex             ;;----|F62B/----\----;
                      TYA                                 ;;----|F62E/----\----;
                      EOR.B !TrueFrame                    ;;----|F62F/----\----;
                      AND.B #$01                          ;;----|F631/----\----;
                      BNE +                               ;;----|F633/----\----;
                      TYA                                 ;;----|F635/----\----;
                      CMP.W !SpriteMisc160E,X             ;;----|F636/----\----;
                      BEQ +                               ;;----|F639/----\----;
                      CPY.W !CurSpriteProcess             ;;----|F63B/----\----;
                      BEQ +                               ;;----|F63E/----\----;
                      LDA.W !SpriteStatus,Y               ;;----|F640/----\----;
                      CMP.B #$08                          ;;----|F643/----\----;
                      BCC +                               ;;----|F645/----\----;
                      LDA.W !SpriteNumber,Y               ;;----|F647/----\----;
                      LDA.W !SpriteStatus,Y               ;;----|F64A/----\----;
                      CMP.B #$09                          ;;----|F64D/----\----;
                      BEQ +                               ;;----|F64F/----\----;
                      LDA.W !SpriteTweakerD,Y             ;;----|F651/----\----;
                      AND.B #$02                          ;;----|F654/----\----;
                      ORA.W !SpriteOnYoshiTongue,Y        ;;----|F656/----\----;
                      ORA.W !SpriteBehindScene,Y          ;;----|F659/----\----;
                      BNE +                               ;;----|F65C/----\----;
                      JSR CODE_01F668                     ;;----|F65E/----\----;
                    + LDY.W !SpriteInterIndex             ;;----|F661/----\----;
                      DEY                                 ;;----|F664/----\----;
                      BPL CODE_01F62B                     ;;----|F665/----\----;
Return01F667:         RTS                                 ;;----|F667/----\----; Return 
                                                          ;;                   ;
CODE_01F668:          PHX                                 ;;----|F668/----\----;
                      TYX                                 ;;----|F669/----\----;
                      JSL GetSpriteClippingB              ;;----|F66A/----\----;
                      PLX                                 ;;----|F66E/----\----;
                      JSL GetSpriteClippingA              ;;----|F66F/----\----;
                      JSL CheckForContact                 ;;----|F673/----\----;
                      BCC Return01F667                    ;;----|F677/----\----;
                      LDA.W !SpriteNumber,Y               ;;----|F679/----\----;
                      CMP.B #$9D                          ;;----|F67C/----\----;
                      BEQ Return01F667                    ;;----|F67E/----\----;
                      CMP.B #$15                          ;;----|F680/----\----;
                      BEQ CODE_01F69E                     ;;----|F682/----\----;
                      CMP.B #$16                          ;;----|F684/----\----;
                      BEQ CODE_01F69E                     ;;----|F686/----\----;
                      CMP.B #$04                          ;;----|F688/----\----;
                      BCS CODE_01F6A3                     ;;----|F68A/----\----;
                      CMP.B #$02                          ;;----|F68C/----\----;
                      BEQ CODE_01F6A3                     ;;----|F68E/----\----;
                      LDA.W !SpriteMisc163E,Y             ;;----|F690/----\----;
                      BPL CODE_01F6A3                     ;;----|F693/----\----;
                    - PHY                                 ;;----|F695/----\----;
                      PHX                                 ;;----|F696/----\----;
                      TYX                                 ;;----|F697/----\----;
                      JSR CODE_01B12A                     ;;----|F698/----\----;
                      PLX                                 ;;----|F69B/----\----;
                      PLY                                 ;;----|F69C/----\----;
                      RTS                                 ;;----|F69D/----\----; Return 
                                                          ;;                   ;
CODE_01F69E:          LDA.W !SpriteInLiquid,Y             ;;----|F69E/----\----;
                      BEQ -                               ;;----|F6A1/----\----;
CODE_01F6A3:          LDA.W !SpriteNumber,Y               ;;----|F6A3/----\----;
                      CMP.B #$BF                          ;;----|F6A6/----\----;
                      BNE CODE_01F6B4                     ;;----|F6A8/----\----;
                      LDA.B !PlayerYPosNext               ;;----|F6AA/----\----;
                      SEC                                 ;;----|F6AC/----\----;
                      SBC.W !SpriteYPosLow,Y              ;;----|F6AD/----\----;
                      CMP.B #$E8                          ;;----|F6B0/----\----;
                      BMI Return01F6DC                    ;;----|F6B2/----\----;
CODE_01F6B4:          LDA.W !SpriteNumber,Y               ;;----|F6B4/----\----;
                      CMP.B #$7E                          ;;----|F6B7/----\----;
                      BNE CODE_01F6DD                     ;;----|F6B9/----\----;
                      LDA.W !SpriteTableC2,Y              ;;----|F6BB/----\----;
                      BEQ Return01F6DC                    ;;----|F6BE/----\----;
                      CMP.B #$02                          ;;----|F6C0/----\----;
                      BNE CODE_01F6CD                     ;;----|F6C2/----\----;
                      LDA.B #$08                          ;;----|F6C4/----\----;
                      STA.B !PlayerAnimation              ;;----|F6C6/----\----;
                      LDA.B #$03                          ;;----|F6C8/----\----; \ Play sound effect 
                      STA.W !SPCIO3                       ;;----|F6CA/----\----; / 
CODE_01F6CD:          LDA.B #$40                          ;;----|F6CD/----\----;
                      STA.W !YoshiWingGrabTimer           ;;----|F6CF/----\----;
                      LDA.B #$02                          ;;----|F6D2/----\----; \ Set Yoshi wing ability 
                      STA.W !YoshiHasWingsEvt             ;;----|F6D4/----\----; / 
                      LDA.B #$00                          ;;----|F6D7/----\----;
                      STA.W !SpriteStatus,Y               ;;----|F6D9/----\----;
Return01F6DC:         RTS                                 ;;----|F6DC/----\----; Return 
                                                          ;;                   ;
CODE_01F6DD:          CMP.B #$4E                          ;;----|F6DD/----\----;
                      BEQ CODE_01F6E5                     ;;----|F6DF/----\----;
                      CMP.B #$4D                          ;;----|F6E1/----\----;
                      BNE CODE_01F6EC                     ;;----|F6E3/----\----;
CODE_01F6E5:          LDA.W !SpriteTableC2,Y              ;;----|F6E5/----\----;
                      CMP.B #$02                          ;;----|F6E8/----\----;
                      BCC Return01F6DC                    ;;----|F6EA/----\----;
CODE_01F6EC:          LDA.B !_5                           ;;----|F6EC/----\----;
                      CLC                                 ;;----|F6EE/----\----;
                      ADC.B #$0D                          ;;----|F6EF/----\----;
                      CMP.B !_1                           ;;----|F6F1/----\----;
                      BMI Return01F74B                    ;;----|F6F3/----\----;
                      LDA.W !SpriteStatus,Y               ;;----|F6F5/----\----;
                      CMP.B #$0A                          ;;----|F6F8/----\----;
                      BNE CODE_01F70E                     ;;----|F6FA/----\----;
                      PHX                                 ;;----|F6FC/----\----;
                      TYX                                 ;;----|F6FD/----\----;
                      JSR SubHorizPos                     ;;----|F6FE/----\----;
                      STY.B !_0                           ;;----|F701/----\----;
                      LDA.B !SpriteXSpeed,X               ;;----|F703/----\----;
                      PLX                                 ;;----|F705/----\----;
                      ASL A                               ;;----|F706/----\----;
                      ROL A                               ;;----|F707/----\----;
                      AND.B #$01                          ;;----|F708/----\----;
                      CMP.B !_0                           ;;----|F70A/----\----;
                      BNE Return01F74B                    ;;----|F70C/----\----;
CODE_01F70E:          LDA.W !InvinsibilityTimer           ;;----|F70E/----\----; \ Branch if Mario has star 
                      BNE Return01F74B                    ;;----|F711/----\----; / 
                      LDA.B #$10                          ;;----|F713/----\----;
                      STA.W !SpriteMisc163E,X             ;;----|F715/----\----;
                      LDA.B #$03                          ;;----|F718/----\----; \ Play sound effect 
                      STA.W !SPCIO1                       ;;----|F71A/----\----; / 
                      LDA.B #$13                          ;;----|F71D/----\----; \ Play sound effect 
                      STA.W !SPCIO3                       ;;----|F71F/----\----; / 
                      LDA.B #$02                          ;;----|F722/----\----;
                      STA.B !SpriteTableC2,X              ;;----|F724/----\----;
                      STZ.W !PlayerRidingYoshi            ;;----|F726/----\----;
                      LDA.B #$C0                          ;;----|F729/----\----;
                      STA.B !PlayerYSpeed                 ;;----|F72B/----\----;
                      STZ.B !PlayerXSpeed                 ;;----|F72D/----\----;
                      JSR SubHorizPos                     ;;----|F72F/----\----;
                      LDA.W DATA_01EBBE,Y                 ;;----|F732/----\----;
                      STA.B !SpriteXSpeed,X               ;;----|F735/----\----;
                      STZ.W !SpriteMisc1594,X             ;;----|F737/----\----;
                      STZ.W !SpriteMisc151C,X             ;;----|F73A/----\----;
                      STZ.W !YoshiStartEatTimer           ;;----|F73D/----\----;
                      STZ.W !CarryYoshiThruLvls           ;;----|F740/----\----;
                      LDA.B #$30                          ;;----|F743/----\----; \ Mario invincible timer = #$30 
                      STA.W !IFrameTimer                  ;;----|F745/----\----; / 
                      JSR CODE_01EDCC                     ;;----|F748/----\----;
Return01F74B:         RTS                                 ;;----|F74B/----\----; Return 
                                                          ;;                   ;
CODE_01F74C:          LDA.B #$08                          ;;----|F74C/----\----; \ Sprite status = Normal 
                      STA.W !SpriteStatus,X               ;;----|F74E/----\----; / 
CODE_01F751:          LDA.B #$20                          ;;----|F751/----\----;
                      STA.W !SpriteMisc1540,X             ;;----|F753/----\----;
                      LDA.B #$0A                          ;;----|F756/----\----; \ Play sound effect 
                      STA.W !SPCIO3                       ;;----|F758/----\----; / 
                      RTL                                 ;;----|F75B/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
DATA_01F75C:          db $00,$01,$01,$01                  ;;----|F75C/----\----;
                                                          ;;                   ;
YoshiEggTiles:        db $62,$02,$02,$00                  ;;----|F760/----\----;
                                                          ;;                   ;
YoshiEgg:             LDA.W !SpriteMisc187B,X             ;;----|F764/----\----;
                      BEQ CODE_01F799                     ;;----|F767/----\----;
                      JSR IsSprOffScreen                  ;;----|F769/----\----;
                      BNE CODE_01F78D                     ;;----|F76C/----\----;
                      JSR SubHorizPos                     ;;----|F76E/----\----;
                      LDA.B !_F                           ;;----|F771/----\----;
                      CLC                                 ;;----|F773/----\----;
                      ADC.B #$20                          ;;----|F774/----\----;
                      CMP.B #$40                          ;;----|F776/----\----;
                      BCS CODE_01F78D                     ;;----|F778/----\----;
                      STZ.W !SpriteMisc187B,X             ;;----|F77A/----\----;
                      JSL CODE_01F751                     ;;----|F77D/----\----;
                      LDA.B #$2D                          ;;----|F781/----\----;
                      LDY.W !YoshiIsLoose                 ;;----|F783/----\----;
                      BEQ +                               ;;----|F786/----\----;
                      LDA.B #$78                          ;;----|F788/----\----;
                    + STA.W !SpriteMisc151C,X             ;;----|F78A/----\----;
CODE_01F78D:          JSR SubSprGfx2Entry1                ;;----|F78D/----\----;
                      LDY.W !SpriteOAMIndex,X             ;;----|F790/----\----; Y = Index into sprite OAM 
                      LDA.B #$00                          ;;----|F793/----\----;
                      STA.W !OAMTileNo+$100,Y             ;;----|F795/----\----;
                      RTS                                 ;;----|F798/----\----; Return 
                                                          ;;                   ;
CODE_01F799:          LDA.W !SpriteMisc1540,X             ;;----|F799/----\----;
                      BEQ +                               ;;----|F79C/----\----;
                      LSR A                               ;;----|F79E/----\----;
                      LSR A                               ;;----|F79F/----\----;
                      LSR A                               ;;----|F7A0/----\----;
                      TAY                                 ;;----|F7A1/----\----;
                      LDA.W YoshiEggTiles,Y               ;;----|F7A2/----\----;
                      PHA                                 ;;----|F7A5/----\----;
                      LDA.W DATA_01F75C,Y                 ;;----|F7A6/----\----;
                      PHA                                 ;;----|F7A9/----\----;
                      JSR SubSprGfx2Entry1                ;;----|F7AA/----\----;
                      LDY.W !SpriteOAMIndex,X             ;;----|F7AD/----\----; Y = Index into sprite OAM 
                      PLA                                 ;;----|F7B0/----\----;
                      STA.B !_0                           ;;----|F7B1/----\----;
                      LDA.W !OAMTileAttr+$100,Y           ;;----|F7B3/----\----;
                      AND.B #$FE                          ;;----|F7B6/----\----;
                      ORA.B !_0                           ;;----|F7B8/----\----;
                      STA.W !OAMTileAttr+$100,Y           ;;----|F7BA/----\----;
                      PLA                                 ;;----|F7BD/----\----;
                      STA.W !OAMTileNo+$100,Y             ;;----|F7BE/----\----;
                      RTS                                 ;;----|F7C1/----\----; Return 
                                                          ;;                   ;
                    + JSR CODE_01F7C8                     ;;----|F7C2/----\----;
                      JMP CODE_01F83D                     ;;----|F7C5/----\----;
                                                          ;;                   ;
CODE_01F7C8:          JSR IsSprOffScreen                  ;;----|F7C8/----\----;
                      BNE Return01F82C                    ;;----|F7CB/----\----;
                      LDA.B !SpriteXPosLow,X              ;;----|F7CD/----\----;
                      STA.B !_0                           ;;----|F7CF/----\----;
                      LDA.B !SpriteYPosLow,X              ;;----|F7D1/----\----;
                      STA.B !_2                           ;;----|F7D3/----\----;
                      LDA.W !SpriteXPosHigh,X             ;;----|F7D5/----\----;
                      STA.B !_3                           ;;----|F7D8/----\----;
                      PHX                                 ;;----|F7DA/----\----;
                      LDY.B #$03                          ;;----|F7DB/----\----;
                      LDX.B #$0B                          ;;----|F7DD/----\----;
CODE_01F7DF:          LDA.W !MinExtSpriteNumber,X         ;;----|F7DF/----\----;
                      BEQ CODE_01F7F4                     ;;----|F7E2/----\----;
CODE_01F7E4:          DEX                                 ;;----|F7E4/----\----;
                      BPL CODE_01F7DF                     ;;----|F7E5/----\----;
                      DEC.W !MinExtSpriteSlotIdx          ;;----|F7E7/----\----;
                      BPL +                               ;;----|F7EA/----\----;
                      LDA.B #$0B                          ;;----|F7EC/----\----;
                      STA.W !MinExtSpriteSlotIdx          ;;----|F7EE/----\----;
                    + LDX.W !MinExtSpriteSlotIdx          ;;----|F7F1/----\----;
CODE_01F7F4:          LDA.B #$03                          ;;----|F7F4/----\----;
                      STA.W !MinExtSpriteNumber,X         ;;----|F7F6/----\----;
                      LDA.B !_0                           ;;----|F7F9/----\----;
                      CLC                                 ;;----|F7FB/----\----;
                      ADC.W DATA_01F831,Y                 ;;----|F7FC/----\----;
                      STA.W !MinExtSpriteXPosLow,X        ;;----|F7FF/----\----;
                      LDA.B !_2                           ;;----|F802/----\----;
                      CLC                                 ;;----|F804/----\----;
                      ADC.W DATA_01F82D,Y                 ;;----|F805/----\----;
                      STA.W !MinExtSpriteYPosLow,X        ;;----|F808/----\----;
                      LDA.B !_3                           ;;----|F80B/----\----;
                      STA.W !MinExtSpriteYPosHigh,X       ;;----|F80D/----\----;
                      LDA.W DATA_01F835,Y                 ;;----|F810/----\----;
                      STA.W !MinExtSpriteYSpeed,X         ;;----|F813/----\----;
                      LDA.W DATA_01F839,Y                 ;;----|F816/----\----;
                      STA.W !MinExtSpriteXSpeed,X         ;;----|F819/----\----;
                      TYA                                 ;;----|F81C/----\----;
                      ASL A                               ;;----|F81D/----\----;
                      ASL A                               ;;----|F81E/----\----;
                      ASL A                               ;;----|F81F/----\----;
                      ASL A                               ;;----|F820/----\----;
                      ASL A                               ;;----|F821/----\----;
                      ASL A                               ;;----|F822/----\----;
                      ORA.B #$28                          ;;----|F823/----\----;
                      STA.W !MinExtSpriteXPosSpx,X        ;;----|F825/----\----;
                      DEY                                 ;;----|F828/----\----;
                      BPL CODE_01F7E4                     ;;----|F829/----\----;
                      PLX                                 ;;----|F82B/----\----;
Return01F82C:         RTS                                 ;;----|F82C/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
DATA_01F82D:          db $00,$00,$08,$08                  ;;----|F82D/----\----;
                                                          ;;                   ;
DATA_01F831:          db $00,$08,$00,$08                  ;;----|F831/----\----;
                                                          ;;                   ;
DATA_01F835:          db $E8,$E8,$F4,$F4                  ;;----|F835/----\----;
                                                          ;;                   ;
DATA_01F839:          db $FA,$06,$FD,$03                  ;;----|F839/----\----;
                                                          ;;                   ;
CODE_01F83D:          LDA.W !SpriteMisc151C,X             ;;----|F83D/----\----;
                      STA.B !SpriteNumber,X               ;;----|F840/----\----;
                      CMP.B #$35                          ;;----|F842/----\----;
                      BEQ CODE_01F86C                     ;;----|F844/----\----;
                      CMP.B #$2D                          ;;----|F846/----\----;
                      BNE +                               ;;----|F848/----\----;
                      LDA.B #$09                          ;;----|F84A/----\----; \ Sprite status = Carryable 
                      STA.W !SpriteStatus,X               ;;----|F84C/----\----; / 
                      LDA.W !SpriteOBJAttribute,X         ;;----|F84F/----\----;
                      AND.B #$0E                          ;;----|F852/----\----;
                      PHA                                 ;;----|F854/----\----;
                      JSL InitSpriteTables                ;;----|F855/----\----;
                      PLA                                 ;;----|F859/----\----;
                      STA.B !_0                           ;;----|F85A/----\----;
                      LDA.W !SpriteOBJAttribute,X         ;;----|F85C/----\----;
                      AND.B #$F1                          ;;----|F85F/----\----;
                      ORA.B !_0                           ;;----|F861/----\----;
                      STA.W !SpriteOBJAttribute,X         ;;----|F863/----\----;
                      RTS                                 ;;----|F866/----\----; Return 
                                                          ;;                   ;
                    + JSL InitSpriteTables                ;;----|F867/----\----;
                      RTS                                 ;;----|F86B/----\----; Return 
                                                          ;;                   ;
CODE_01F86C:          JSL InitSpriteTables                ;;----|F86C/----\----;
                      JMP CODE_01A2B5                     ;;----|F870/----\----;
                                                          ;;                   ;
                                                          ;;                   ;
                      db $08,$F8                          ;;----|F873/----\----;
                                                          ;;                   ;
UnusedInit:           JSR FaceMario                       ;;----|F875/----\----;
                      STA.W !SpriteMisc1534,X             ;;----|F878/----\----;
Return01F87B:         RTS                                 ;;----|F87B/----\----; Return 
                                                          ;;                   ;
InitEerie:            JSR SubHorizPos                     ;;----|F87C/----\----;
                      LDA.W EerieSpeedX,Y                 ;;----|F87F/----\----;
                      STA.B !SpriteXSpeed,X               ;;----|F882/----\----;
InitBigBoo:           JSL GetRand                         ;;----|F884/----\----;
                      STA.W !SpriteMisc1570,X             ;;----|F888/----\----;
                      RTS                                 ;;----|F88B/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
EerieSpeedX:          db $10,$F0                          ;;----|F88C/----\----;
                                                          ;;                   ;
EerieSpeedY:          db $18,$E8                          ;;----|F88E/----\----;
                                                          ;;                   ;
Eerie:                LDA.W !SpriteStatus,X               ;;----|F890/----\----;
                      CMP.B #$08                          ;;----|F893/----\----;
                      BNE CODE_01F8C9                     ;;----|F895/----\----;
                      LDA.B !SpriteLock                   ;;----|F897/----\----; \ Branch if sprites locked 
                      BNE CODE_01F8C9                     ;;----|F899/----\----; / 
                      JSR SubSprXPosNoGrvty               ;;----|F89B/----\----;
                      LDA.B !SpriteNumber,X               ;;----|F89E/----\----;
                      CMP.B #$39                          ;;----|F8A0/----\----;
                      BNE CODE_01F8C0                     ;;----|F8A2/----\----;
                      LDA.B !SpriteTableC2,X              ;;----|F8A4/----\----;
                      AND.B #$01                          ;;----|F8A6/----\----;
                      TAY                                 ;;----|F8A8/----\----;
                      LDA.B !SpriteYSpeed,X               ;;----|F8A9/----\----;
                      CLC                                 ;;----|F8AB/----\----;
                      ADC.W DATA_01EBB4,Y                 ;;----|F8AC/----\----;
                      STA.B !SpriteYSpeed,X               ;;----|F8AF/----\----;
                      CMP.W EerieSpeedY,Y                 ;;----|F8B1/----\----;
                      BNE +                               ;;----|F8B4/----\----;
                      INC.B !SpriteTableC2,X              ;;----|F8B6/----\----;
                    + JSR SubSprYPosNoGrvty               ;;----|F8B8/----\----;
                      JSR SubOffscreen3Bnk1               ;;----|F8BB/----\----;
                      BRA +                               ;;----|F8BE/----\----;
                                                          ;;                   ;
CODE_01F8C0:          JSR SubOffscreen0Bnk1               ;;----|F8C0/----\----;
                    + JSR MarioSprInteractRt              ;;----|F8C3/----\----;
                      JSR SetAnimationFrame               ;;----|F8C6/----\----;
CODE_01F8C9:          JSR UpdateDirection                 ;;----|F8C9/----\----;
                      JMP SubSprGfx2Entry1                ;;----|F8CC/----\----;
                                                          ;;                   ;
                                                          ;;                   ;
DATA_01F8CF:          db $08,$F8                          ;;----|F8CF/----\----;
                                                          ;;                   ;
DATA_01F8D1:          db $01,$02,$02,$01                  ;;----|F8D1/----\----;
                                                          ;;                   ;
BigBoo:               JSR SubOffscreen1Bnk1               ;;----|F8D5/----\----;
                      LDA.B #$20                          ;;----|F8D8/----\----;
                      BRA +                               ;;----|F8DA/----\----;
                                                          ;;                   ;
Boo_BooBlock:         JSR SubOffscreen0Bnk1               ;;----|F8DC/----\----;
                      LDA.B #$10                          ;;----|F8DF/----\----;
                    + STA.W !TileGenerateTrackB           ;;----|F8E1/----\----;
                      LDA.W !SpriteStatus,X               ;;----|F8E4/----\----;
                      CMP.B #$08                          ;;----|F8E7/----\----;
                      BNE CODE_01F8EF                     ;;----|F8E9/----\----;
                      LDA.B !SpriteLock                   ;;----|F8EB/----\----;
                      BEQ +                               ;;----|F8ED/----\----;
CODE_01F8EF:          JMP CODE_01F9CE                     ;;----|F8EF/----\----;
                                                          ;;                   ;
                    + JSR SubHorizPos                     ;;----|F8F2/----\----;
                      LDA.W !SpriteMisc1540,X             ;;----|F8F5/----\----;
                      BNE CODE_01F914                     ;;----|F8F8/----\----;
                      LDA.B #$20                          ;;----|F8FA/----\----;
                      STA.W !SpriteMisc1540,X             ;;----|F8FC/----\----;
                      LDA.B !SpriteTableC2,X              ;;----|F8FF/----\----;
                      BEQ CODE_01F90C                     ;;----|F901/----\----;
                      LDA.B !_F                           ;;----|F903/----\----;
                      CLC                                 ;;----|F905/----\----;
                      ADC.B #$0A                          ;;----|F906/----\----;
                      CMP.B #$14                          ;;----|F908/----\----;
                      BCC CODE_01F92F                     ;;----|F90A/----\----;
CODE_01F90C:          STZ.B !SpriteTableC2,X              ;;----|F90C/----\----;
                      CPY.B !PlayerDirection              ;;----|F90E/----\----;
                      BNE CODE_01F914                     ;;----|F910/----\----;
                      INC.B !SpriteTableC2,X              ;;----|F912/----\----;
CODE_01F914:          LDA.B !_F                           ;;----|F914/----\----;
                      CLC                                 ;;----|F916/----\----;
                      ADC.B #$0A                          ;;----|F917/----\----;
                      CMP.B #$14                          ;;----|F919/----\----;
                      BCC CODE_01F92F                     ;;----|F91B/----\----;
                      LDA.W !SpriteMisc15AC,X             ;;----|F91D/----\----;
                      BNE CODE_01F971                     ;;----|F920/----\----;
                      TYA                                 ;;----|F922/----\----;
                      CMP.W !SpriteMisc157C,X             ;;----|F923/----\----;
                      BEQ CODE_01F92F                     ;;----|F926/----\----;
                      LDA.B #$1F                          ;;----|F928/----\----; \ Set turning timer 
                      STA.W !SpriteMisc15AC,X             ;;----|F92A/----\----; / 
                      BRA CODE_01F971                     ;;----|F92D/----\----;
                                                          ;;                   ;
CODE_01F92F:          STZ.W !SpriteMisc1602,X             ;;----|F92F/----\----;
                      LDA.B !SpriteTableC2,X              ;;----|F932/----\----;
                      BEQ CODE_01F989                     ;;----|F934/----\----;
                      LDA.B #$03                          ;;----|F936/----\----;
                      STA.W !SpriteMisc1602,X             ;;----|F938/----\----;
                      LDY.B !SpriteNumber,X               ;;----|F93B/----\----;
                      CPY.B #$28                          ;;----|F93D/----\----;
                      BEQ +                               ;;----|F93F/----\----;
                      LDA.B #$00                          ;;----|F941/----\----;
                      CPY.B #$AF                          ;;----|F943/----\----;
                      BEQ +                               ;;----|F945/----\----;
                      INC A                               ;;----|F947/----\----;
                    + AND.B !TrueFrame                    ;;----|F948/----\----;
                      BNE CODE_01F96F                     ;;----|F94A/----\----;
                      INC.W !SpriteMisc1570,X             ;;----|F94C/----\----;
                      LDA.W !SpriteMisc1570,X             ;;----|F94F/----\----;
                      BNE +                               ;;----|F952/----\----;
                      LDA.B #$20                          ;;----|F954/----\----;
                      STA.W !SpriteMisc1558,X             ;;----|F956/----\----;
                    + LDA.B !SpriteXSpeed,X               ;;----|F959/----\----;
                      BEQ CODE_01F962                     ;;----|F95B/----\----;
                      BPL +                               ;;----|F95D/----\----;
                      INC A                               ;;----|F95F/----\----;
                      INC A                               ;;----|F960/----\----;
                    + DEC A                               ;;----|F961/----\----;
CODE_01F962:          STA.B !SpriteXSpeed,X               ;;----|F962/----\----;
                      LDA.B !SpriteYSpeed,X               ;;----|F964/----\----;
                      BEQ CODE_01F96D                     ;;----|F966/----\----;
                      BPL +                               ;;----|F968/----\----;
                      INC A                               ;;----|F96A/----\----;
                      INC A                               ;;----|F96B/----\----;
                    + DEC A                               ;;----|F96C/----\----;
CODE_01F96D:          STA.B !SpriteYSpeed,X               ;;----|F96D/----\----;
CODE_01F96F:          BRA CODE_01F9C8                     ;;----|F96F/----\----;
                                                          ;;                   ;
CODE_01F971:          CMP.B #$10                          ;;----|F971/----\----;
                      BNE +                               ;;----|F973/----\----;
                      PHA                                 ;;----|F975/----\----;
                      LDA.W !SpriteMisc157C,X             ;;----|F976/----\----;
                      EOR.B #$01                          ;;----|F979/----\----;
                      STA.W !SpriteMisc157C,X             ;;----|F97B/----\----;
                      PLA                                 ;;----|F97E/----\----;
                    + LSR A                               ;;----|F97F/----\----;
                      LSR A                               ;;----|F980/----\----;
                      LSR A                               ;;----|F981/----\----;
                      TAY                                 ;;----|F982/----\----;
                      LDA.W DATA_01F8D1,Y                 ;;----|F983/----\----;
                      STA.W !SpriteMisc1602,X             ;;----|F986/----\----;
CODE_01F989:          STZ.W !SpriteMisc1570,X             ;;----|F989/----\----;
                      LDA.B !TrueFrame                    ;;----|F98C/----\----;
                      AND.B #$07                          ;;----|F98E/----\----;
                      BNE CODE_01F9C8                     ;;----|F990/----\----;
                      JSR SubHorizPos                     ;;----|F992/----\----;
                      LDA.B !SpriteXSpeed,X               ;;----|F995/----\----;
                      CMP.W DATA_01F8CF,Y                 ;;----|F997/----\----;
                      BEQ +                               ;;----|F99A/----\----;
                      CLC                                 ;;----|F99C/----\----;
                      ADC.W DATA_01EBB4,Y                 ;;----|F99D/----\----;
                      STA.B !SpriteXSpeed,X               ;;----|F9A0/----\----;
                    + LDA.B !PlayerYPosNow                ;;----|F9A2/----\----;
                      PHA                                 ;;----|F9A4/----\----;
                      SEC                                 ;;----|F9A5/----\----;
                      SBC.W !TileGenerateTrackB           ;;----|F9A6/----\----;
                      STA.B !PlayerYPosNow                ;;----|F9A9/----\----;
                      LDA.B !PlayerYPosNow+1              ;;----|F9AB/----\----;
                      PHA                                 ;;----|F9AD/----\----;
                      SBC.B #$00                          ;;----|F9AE/----\----;
                      STA.B !PlayerYPosNow+1              ;;----|F9B0/----\----;
                      JSR CODE_01AD42                     ;;----|F9B2/----\----;
                      PLA                                 ;;----|F9B5/----\----;
                      STA.B !PlayerYPosNow+1              ;;----|F9B6/----\----;
                      PLA                                 ;;----|F9B8/----\----;
                      STA.B !PlayerYPosNow                ;;----|F9B9/----\----;
                      LDA.B !SpriteYSpeed,X               ;;----|F9BB/----\----;
                      CMP.W DATA_01F8CF,Y                 ;;----|F9BD/----\----;
                      BEQ CODE_01F9C8                     ;;----|F9C0/----\----;
                      CLC                                 ;;----|F9C2/----\----;
                      ADC.W DATA_01EBB4,Y                 ;;----|F9C3/----\----;
                      STA.B !SpriteYSpeed,X               ;;----|F9C6/----\----;
CODE_01F9C8:          JSR SubSprXPosNoGrvty               ;;----|F9C8/----\----;
                      JSR SubSprYPosNoGrvty               ;;----|F9CB/----\----;
CODE_01F9CE:          LDA.B !SpriteNumber,X               ;;----|F9CE/----\----;
                      CMP.B #$AF                          ;;----|F9D0/----\----;
                      BNE CODE_01FA3D                     ;;----|F9D2/----\----;
                      LDA.B !SpriteXSpeed,X               ;;----|F9D4/----\----;
                      BPL +                               ;;----|F9D6/----\----;
                      EOR.B #$FF                          ;;----|F9D8/----\----;
                      INC A                               ;;----|F9DA/----\----;
                    + LDY.B #$00                          ;;----|F9DB/----\----;
                      CMP.B #$08                          ;;----|F9DD/----\----;
                      BCS CODE_01FA09                     ;;----|F9DF/----\----;
                      PHA                                 ;;----|F9E1/----\----;
                      LDA.W !SpriteTweakerB,X             ;;----|F9E2/----\----;
                      PHA                                 ;;----|F9E5/----\----;
                      LDA.W !SpriteTweakerD,X             ;;----|F9E6/----\----;
                      PHA                                 ;;----|F9E9/----\----;
                      ORA.B #$80                          ;;----|F9EA/----\----;
                      STA.W !SpriteTweakerD,X             ;;----|F9EC/----\----;
                      LDA.B #$0C                          ;;----|F9EF/----\----;
                      STA.W !SpriteTweakerB,X             ;;----|F9F1/----\----;
                      JSR CODE_01B457                     ;;----|F9F4/----\----;
                      PLA                                 ;;----|F9F7/----\----;
                      STA.W !SpriteTweakerD,X             ;;----|F9F8/----\----;
                      PLA                                 ;;----|F9FB/----\----;
                      STA.W !SpriteTweakerB,X             ;;----|F9FC/----\----;
                      PLA                                 ;;----|F9FF/----\----;
                      LDY.B #$01                          ;;----|FA00/----\----;
                      CMP.B #$04                          ;;----|FA02/----\----;
                      BCS +                               ;;----|FA04/----\----;
                      INY                                 ;;----|FA06/----\----;
                      BRA +                               ;;----|FA07/----\----;
                                                          ;;                   ;
CODE_01FA09:          LDA.W !SpriteStatus,X               ;;----|FA09/----\----;
                      CMP.B #$08                          ;;----|FA0C/----\----;
                      BNE +                               ;;----|FA0E/----\----;
                      PHY                                 ;;----|FA10/----\----;
                      JSR MarioSprInteractRt              ;;----|FA11/----\----;
                      PLY                                 ;;----|FA14/----\----;
                    + TYA                                 ;;----|FA15/----\----;
                      STA.W !SpriteMisc1602,X             ;;----|FA16/----\----;
                      JSR SubSprGfx2Entry1                ;;----|FA19/----\----;
                      LDA.W !SpriteMisc1602,X             ;;----|FA1C/----\----;
                      LDY.W !SpriteOAMIndex,X             ;;----|FA1F/----\----; Y = Index into sprite OAM 
                      PHX                                 ;;----|FA22/----\----;
                      TAX                                 ;;----|FA23/----\----;
                      LDA.W BooBlockTiles,X               ;;----|FA24/----\----;
                      STA.W !OAMTileNo+$100,Y             ;;----|FA27/----\----;
                      LDA.W !OAMTileAttr+$100,Y           ;;----|FA2A/----\----;
                      AND.B #$F1                          ;;----|FA2D/----\----;
                      ORA.W BooBlockGfxProp,X             ;;----|FA2F/----\----;
                      STA.W !OAMTileAttr+$100,Y           ;;----|FA32/----\----;
                      PLX                                 ;;----|FA35/----\----;
                      RTS                                 ;;----|FA36/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
BooBlockTiles:        db $8C,$C8,$CA                      ;;----|FA37/----\----;
                                                          ;;                   ;
BooBlockGfxProp:      db $0E,$02,$02                      ;;----|FA3A/----\----;
                                                          ;;                   ;
CODE_01FA3D:          LDA.W !SpriteStatus,X               ;;----|FA3D/----\----;
                      CMP.B #$08                          ;;----|FA40/----\----;
                      BNE +                               ;;----|FA42/----\----;
                      JSR MarioSprInteractRt              ;;----|FA44/----\----;
                    + JSL CODE_038398                     ;;----|FA47/----\----;
                      RTS                                 ;;----|FA4B/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
DATA_01FA4C:          db $40,$00                          ;;----|FA4C/----\----;
                                                          ;;                   ;
IggyBallTiles:        db $4A,$4C,$4A,$4C                  ;;----|FA4E/----\----;
                                                          ;;                   ;
DATA_01FA52:          db $35,$35,$F5,$F5                  ;;----|FA52/----\----;
                                                          ;;                   ;
DATA_01FA56:          db $10,$F0                          ;;----|FA56/----\----;
                                                          ;;                   ;
IggysBall:            JSR SubSprGfx2Entry1                ;;----|FA58/----\----;
                      LDY.W !SpriteMisc157C,X             ;;----|FA5B/----\----;
                      LDA.W DATA_01FA4C,Y                 ;;----|FA5E/----\----;
                      STA.B !_0                           ;;----|FA61/----\----;
                      LDY.W !SpriteOAMIndex,X             ;;----|FA63/----\----; Y = Index into sprite OAM 
                      LDA.B !EffFrame                     ;;----|FA66/----\----;
                      LSR A                               ;;----|FA68/----\----;
                      LSR A                               ;;----|FA69/----\----;
                      AND.B #$03                          ;;----|FA6A/----\----;
                      PHX                                 ;;----|FA6C/----\----;
                      TAX                                 ;;----|FA6D/----\----;
                      LDA.W IggyBallTiles,X               ;;----|FA6E/----\----;
                      STA.W !OAMTileNo+$100,Y             ;;----|FA71/----\----;
                      LDA.W DATA_01FA52,X                 ;;----|FA74/----\----;
                      EOR.B !_0                           ;;----|FA77/----\----;
                      STA.W !OAMTileAttr+$100,Y           ;;----|FA79/----\----;
                      PLX                                 ;;----|FA7C/----\----;
                      LDA.B !SpriteLock                   ;;----|FA7D/----\----; \ Branch if sprites locked 
                      BNE Return01FAB3                    ;;----|FA7F/----\----; / 
                      LDY.W !SpriteMisc157C,X             ;;----|FA81/----\----;
                      LDA.W DATA_01FA56,Y                 ;;----|FA84/----\----;
                      STA.B !SpriteXSpeed,X               ;;----|FA87/----\----;
                      JSR SubSprXPosNoGrvty               ;;----|FA89/----\----;
                      JSR SubSprYPosNoGrvty               ;;----|FA8C/----\----;
                      LDA.B !SpriteYSpeed,X               ;;----|FA8F/----\----;
                      CMP.B #$40                          ;;----|FA91/----\----;
                      BPL +                               ;;----|FA93/----\----;
                      CLC                                 ;;----|FA95/----\----;
                      ADC.B #$04                          ;;----|FA96/----\----;
                      STA.B !SpriteYSpeed,X               ;;----|FA98/----\----;
                    + JSR CODE_01FF98                     ;;----|FA9A/----\----;
                      BCC +                               ;;----|FA9D/----\----;
                      LDA.B #$F0                          ;;----|FA9F/----\----;
                      STA.B !SpriteYSpeed,X               ;;----|FAA1/----\----;
                    + JSR MarioSprInteractRt              ;;----|FAA3/----\----;
                      LDA.B !SpriteYPosLow,X              ;;----|FAA6/----\----;
                      CMP.B #$44                          ;;----|FAA8/----\----;
                      BCC Return01FAB3                    ;;----|FAAA/----\----;
                      CMP.B #$50                          ;;----|FAAC/----\----;
                      BCS Return01FAB3                    ;;----|FAAE/----\----;
                      JSR CODE_019ACB                     ;;----|FAB0/----\----;
Return01FAB3:         RTS                                 ;;----|FAB3/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
                      db $FF,$01,$00,$80,$60,$A0,$40,$D0  ;;----|FAB4/----\----;
                      db $D8,$C0,$C8,$0C,$F4              ;;----|FABC/----\----;
                                                          ;;                   ;
KoopaKid:             LDA.B !SpriteTableC2,X              ;;----|FAC1/----\----;
                      JSL ExecutePtr                      ;;----|FAC3/----\----; 00 - Morton 
                                                          ;;                   ;
                      dw WallKoopaKids                    ;;----|FAC7/----\----; 02 - Ludwig 
                      dw WallKoopaKids                    ;;----|FAC9/----\----; 03 - Iggy   
                      dw WallKoopaKids                    ;;----|FACB/----\----; 04 - Larry  
                      dw PlatformKoopaKids                ;;----|FACD/----\----; 05 - Lemmy  
                      dw PlatformKoopaKids                ;;----|FACF/----\----; 06 - Wendy  
                      dw PipeKoopaKids                    ;;----|FAD1/----\----;
                      dw PipeKoopaKids                    ;;----|FAD3/----\----;
                                                          ;;                   ;
                      db $00,$FC,$F8,$F8,$F8,$F8,$F8,$F8  ;;----|FAD5/----\----;
DATA_01FADD:          db $F8,$F8,$F8,$F4,$F0,$F0,$EC,$EC  ;;----|FADD/----\----;
DATA_01FAE5:          db $00,$01,$02,$00,$01,$02,$00,$01  ;;----|FAE5/----\----;
                      db $02,$00,$01,$02,$00,$01,$02,$01  ;;----|FAED/----\----;
                                                          ;;                   ;
PlatformKoopaKids:    LDA.B !SpriteLock                   ;;----|FAF5/----\----;
                      ORA.W !SpriteMisc154C,X             ;;----|FAF7/----\----;
                      BNE +                               ;;----|FAFA/----\----;
                      JSR SubHorizPos                     ;;----|FAFC/----\----;
                      STY.B !_0                           ;;----|FAFF/----\----;
                      LDA.B !Mode7Angle                   ;;----|FB01/----\----;
                      ASL A                               ;;----|FB03/----\----;
                      ROL A                               ;;----|FB04/----\----;
                      AND.B #$01                          ;;----|FB05/----\----;
                      CMP.B !_0                           ;;----|FB07/----\----;
                      BNE +                               ;;----|FB09/----\----;
                      INC.W !SpriteMisc1534,X             ;;----|FB0B/----\----;
                      LDA.W !SpriteMisc1534,X             ;;----|FB0E/----\----;
                      AND.B #$7F                          ;;----|FB11/----\----;
                      BNE +                               ;;----|FB13/----\----;
                      LDA.B #$7F                          ;;----|FB15/----\----; \ Set time to go in shell 
                      STA.W !SpriteMisc1564,X             ;;----|FB17/----\----; / 
                    + STZ.W !SpriteOffscreenX,X           ;;----|FB1A/----\----;
                      LDA.W !SpriteMisc163E,X             ;;----|FB1D/----\----;
                      BEQ CODE_01FB36                     ;;----|FB20/----\----;
                      DEC A                               ;;----|FB22/----\----;
                      BNE +                               ;;----|FB23/----\----;
                      INC.W !CutsceneID                   ;;----|FB25/----\----;
                      LDA.B #$FF                          ;;----|FB28/----\----;
                      STA.W !EndLevelTimer                ;;----|FB2A/----\----;
                      LDA.B #$0B                          ;;----|FB2D/----\----;
                      STA.W !SPCIO2                       ;;----|FB2F/----\----; / Change music 
                      STZ.W !SpriteStatus,X               ;;----|FB32/----\----;
                    + RTS                                 ;;----|FB35/----\----; Return 
                                                          ;;                   ;
CODE_01FB36:          JSL LoadTweakerBytes                ;;----|FB36/----\----;
                      LDA.B !SpriteLock                   ;;----|FB3A/----\----;
                      BEQ +                               ;;----|FB3C/----\----;
                      JMP CODE_01FC08                     ;;----|FB3E/----\----;
                                                          ;;                   ;
                    + LDA.W !SpriteMisc160E,X             ;;----|FB41/----\----;
                      BEQ CODE_01FB7B                     ;;----|FB44/----\----;
                      JSR SubSprXPosNoGrvty               ;;----|FB46/----\----;
                      JSR SubSprYPosNoGrvty               ;;----|FB49/----\----;
                      LDA.B !SpriteYSpeed,X               ;;----|FB4C/----\----;
                      CMP.B #$40                          ;;----|FB4E/----\----;
                      BPL +                               ;;----|FB50/----\----;
                      INC.B !SpriteYSpeed,X               ;;----|FB52/----\----;
                      INC.B !SpriteYSpeed,X               ;;----|FB54/----\----;
                    + LDA.B !SpriteYPosLow,X              ;;----|FB56/----\----;
                      CMP.B #$58                          ;;----|FB58/----\----;
                      BCC +                               ;;----|FB5A/----\----;
                      CMP.B #$80                          ;;----|FB5C/----\----;
                      BCS +                               ;;----|FB5E/----\----;
                      LDA.B #$20                          ;;----|FB60/----\----; \ Play sound effect 
                      STA.W !SPCIO3                       ;;----|FB62/----\----; / 
                      LDA.B #$50                          ;;----|FB65/----\----;
                      STA.W !SpriteMisc163E,X             ;;----|FB67/----\----;
                      JSL KillMostSprites                 ;;----|FB6A/----\----; Kill all sprites 
                    + LDA.B !SpriteXPosLow,X              ;;----|FB6E/----\----;
                      STA.W !BrSwingPlatXPos              ;;----|FB70/----\----;
                      LDA.B !SpriteYPosLow,X              ;;----|FB73/----\----;
                      STA.W !BrSwingPlatYPos              ;;----|FB75/----\----;
                      JMP CODE_01FC0E                     ;;----|FB78/----\----;
                                                          ;;                   ;
CODE_01FB7B:          JSR SubSprXPosNoGrvty               ;;----|FB7B/----\----;
                      LDA.B !TrueFrame                    ;;----|FB7E/----\----;
                      AND.B #$1F                          ;;----|FB80/----\----;
                      ORA.W !SpriteMisc1564,X             ;;----|FB82/----\----;
                      BNE +                               ;;----|FB85/----\----;
                      LDA.W !SpriteMisc157C,X             ;;----|FB87/----\----;
                      PHA                                 ;;----|FB8A/----\----;
                      JSR FaceMario                       ;;----|FB8B/----\----;
                      PLA                                 ;;----|FB8E/----\----;
                      CMP.W !SpriteMisc157C,X             ;;----|FB8F/----\----;
                      BEQ +                               ;;----|FB92/----\----;
                      LDA.B #$10                          ;;----|FB94/----\----;
                      STA.W !SpriteMisc15AC,X             ;;----|FB96/----\----;
                    + STZ.B !SpriteYSpeed,X               ;;----|FB99/----\----; Sprite Y Speed = 0 
                      STZ.B !SpriteXSpeed,X               ;;----|FB9B/----\----; Sprite X Speed = 0 
                      LDA.B !Mode7Angle                   ;;----|FB9D/----\----;
                      BPL +                               ;;----|FB9F/----\----;
                      CLC                                 ;;----|FBA1/----\----;
                      ADC.B #$08                          ;;----|FBA2/----\----;
                    + LSR A                               ;;----|FBA4/----\----;
                      LSR A                               ;;----|FBA5/----\----;
                      LSR A                               ;;----|FBA6/----\----;
                      LSR A                               ;;----|FBA7/----\----;
                      TAY                                 ;;----|FBA8/----\----;
                      STY.B !_0                           ;;----|FBA9/----\----;
                      EOR.B #$FF                          ;;----|FBAB/----\----;
                      INC A                               ;;----|FBAD/----\----;
                      AND.B #$0F                          ;;----|FBAE/----\----;
                      STA.B !_1                           ;;----|FBB0/----\----;
                      LDA.W !SpriteMisc154C,X             ;;----|FBB2/----\----;
                      BNE CODE_01FBD9                     ;;----|FBB5/----\----;
                      LDA.B !Mode7Angle+1                 ;;----|FBB7/----\----;
                      BNE CODE_01FBC9                     ;;----|FBB9/----\----;
                      LDA.B !SpriteXPosLow,X              ;;----|FBBB/----\----;
                      CMP.B #$78                          ;;----|FBBD/----\----;
                      BCC CODE_01FBC5                     ;;----|FBBF/----\----;
                      LDA.B #$FF                          ;;----|FBC1/----\----;
                      BRA CODE_01FBEE                     ;;----|FBC3/----\----;
                                                          ;;                   ;
CODE_01FBC5:          LDA.B #$01                          ;;----|FBC5/----\----;
                      BRA CODE_01FBEE                     ;;----|FBC7/----\----;
                                                          ;;                   ;
CODE_01FBC9:          LDY.B !_1                           ;;----|FBC9/----\----;
                      LDA.B !SpriteXPosLow,X              ;;----|FBCB/----\----;
                      CMP.B #$78                          ;;----|FBCD/----\----;
                      BCS CODE_01FBD5                     ;;----|FBCF/----\----;
                      LDA.B #$01                          ;;----|FBD1/----\----;
                      BRA CODE_01FBEE                     ;;----|FBD3/----\----;
                                                          ;;                   ;
CODE_01FBD5:          LDA.B #$FF                          ;;----|FBD5/----\----;
                      BRA CODE_01FBEE                     ;;----|FBD7/----\----;
                                                          ;;                   ;
CODE_01FBD9:          LDA.B !Mode7Angle+1                 ;;----|FBD9/----\----;
                      BNE CODE_01FBE7                     ;;----|FBDB/----\----;
                      LDY.B !_0                           ;;----|FBDD/----\----;
                      LDA.W DATA_01FADD,Y                 ;;----|FBDF/----\----;
                      EOR.B #$FF                          ;;----|FBE2/----\----;
                      INC A                               ;;----|FBE4/----\----;
                      BRA +                               ;;----|FBE5/----\----;
                                                          ;;                   ;
CODE_01FBE7:          LDY.B !_1                           ;;----|FBE7/----\----;
                      LDA.W DATA_01FADD,Y                 ;;----|FBE9/----\----;
                    + ASL A                               ;;----|FBEC/----\----;
                      ASL A                               ;;----|FBED/----\----;
CODE_01FBEE:          STA.B !SpriteXSpeed,X               ;;----|FBEE/----\----;
                      INC.W !SpriteMisc1570,X             ;;----|FBF0/----\----;
                      LDA.B !SpriteXSpeed,X               ;;----|FBF3/----\----;
                      BEQ +                               ;;----|FBF5/----\----;
                      INC.W !SpriteMisc1570,X             ;;----|FBF7/----\----;
                    + LDA.W !SpriteMisc1570,X             ;;----|FBFA/----\----;
                      LSR A                               ;;----|FBFD/----\----;
                      LSR A                               ;;----|FBFE/----\----;
                      AND.B #$0F                          ;;----|FBFF/----\----;
                      TAY                                 ;;----|FC01/----\----;
                      LDA.W DATA_01FAE5,Y                 ;;----|FC02/----\----;
                      STA.W !SpriteMisc1602,X             ;;----|FC05/----\----;
CODE_01FC08:          JSR CODE_01FD50                     ;;----|FC08/----\----;
                      JSR CODE_01FC62                     ;;----|FC0B/----\----;
CODE_01FC0E:          LDA.W !SpriteMisc154C,X             ;;----|FC0E/----\----;
                      BNE CODE_01FC4E                     ;;----|FC11/----\----;
                      LDA.W !SpriteMisc157C,X             ;;----|FC13/----\----;
                      PHA                                 ;;----|FC16/----\----;
                      LDY.W !SpriteMisc15AC,X             ;;----|FC17/----\----;
                      BEQ CODE_01FC2A                     ;;----|FC1A/----\----;
                      CPY.B #$08                          ;;----|FC1C/----\----;
                      BCC +                               ;;----|FC1E/----\----;
                      EOR.B #$01                          ;;----|FC20/----\----;
                      STA.W !SpriteMisc157C,X             ;;----|FC22/----\----;
                    + LDA.B #$06                          ;;----|FC25/----\----;
                      STA.W !SpriteMisc1602,X             ;;----|FC27/----\----;
CODE_01FC2A:          LDA.W !SpriteMisc1564,X             ;;----|FC2A/----\----;
                      BEQ +                               ;;----|FC2D/----\----;
                      PHA                                 ;;----|FC2F/----\----;
                      LSR A                               ;;----|FC30/----\----;
                      LSR A                               ;;----|FC31/----\----;
                      LSR A                               ;;----|FC32/----\----;
                      TAY                                 ;;----|FC33/----\----;
                      LDA.W DATA_01FD95,Y                 ;;----|FC34/----\----;
                      STA.W !SpriteMisc1602,X             ;;----|FC37/----\----;
                      PLA                                 ;;----|FC3A/----\----;
                      CMP.B #$28                          ;;----|FC3B/----\----;
                      BNE +                               ;;----|FC3D/----\----;
                      LDA.B !SpriteLock                   ;;----|FC3F/----\----; \ Branch if sprites locked 
                      BNE +                               ;;----|FC41/----\----; / 
                      JSR ThrowBall                       ;;----|FC43/----\----; Throw ball 
                    + JSR CODE_01FEBC                     ;;----|FC46/----\----;
                      PLA                                 ;;----|FC49/----\----;
                      STA.W !SpriteMisc157C,X             ;;----|FC4A/----\----;
                      RTS                                 ;;----|FC4D/----\----; Return 
                                                          ;;                   ;
CODE_01FC4E:          CMP.B #$10                          ;;----|FC4E/----\----;
                      BCC +                               ;;----|FC50/----\----;
                    - LDA.B #$03                          ;;----|FC52/----\----;
                      STA.W !SpriteMisc1602,X             ;;----|FC54/----\----;
                      JMP CODE_01FEBC                     ;;----|FC57/----\----;
                                                          ;;                   ;
                    + CMP.B #$08                          ;;----|FC5A/----\----;
                      BCC -                               ;;----|FC5C/----\----;
                      JSR CODE_01FF5B                     ;;----|FC5E/----\----;
                    - RTS                                 ;;----|FC61/----\----; Return 
                                                          ;;                   ;
CODE_01FC62:          LDA.B !PlayerAnimation              ;;----|FC62/----\----;
                      CMP.B #$01                          ;;----|FC64/----\----;
                      BCS -                               ;;----|FC66/----\----;
                      LDA.W !SpriteMisc160E,X             ;;----|FC68/----\----;
                      BNE -                               ;;----|FC6B/----\----;
                      LDA.B !SpriteXPosLow,X              ;;----|FC6D/----\----;
                      CMP.B #$20                          ;;----|FC6F/----\----;
                      BCC CODE_01FC77                     ;;----|FC71/----\----;
                      CMP.B #$D8                          ;;----|FC73/----\----;
                      BCC +                               ;;----|FC75/----\----;
CODE_01FC77:          LDA.W !BrSwingPlatXPos              ;;----|FC77/----\----;
                      STA.B !SpriteXPosLow,X              ;;----|FC7A/----\----;
                      LDA.W !BrSwingPlatYPos              ;;----|FC7C/----\----;
                      STA.B !SpriteYPosLow,X              ;;----|FC7F/----\----;
                      INC.W !SpriteMisc160E,X             ;;----|FC81/----\----;
                    + LDA.W !BrSwingPlatXPos              ;;----|FC84/----\----;
                      SEC                                 ;;----|FC87/----\----;
                      SBC.B #$08                          ;;----|FC88/----\----;
                      STA.B !_0                           ;;----|FC8A/----\----;
                      LDA.W !BrSwingPlatYPos              ;;----|FC8C/----\----;
                      CLC                                 ;;----|FC8F/----\----;
                      ADC.B #$60                          ;;----|FC90/----\----;
                      STA.B !_1                           ;;----|FC92/----\----;
                      LDA.B #$0F                          ;;----|FC94/----\----;
                      STA.B !_2                           ;;----|FC96/----\----;
                      LDA.B #$0C                          ;;----|FC98/----\----;
                      STA.B !_3                           ;;----|FC9A/----\----;
                      STZ.B !_8                           ;;----|FC9C/----\----;
                      STZ.B !_9                           ;;----|FC9E/----\----;
                      LDA.B !PlayerXPosScrRel             ;;----|FCA0/----\----;
                      CLC                                 ;;----|FCA2/----\----;
                      ADC.B #$02                          ;;----|FCA3/----\----;
                      STA.B !_4                           ;;----|FCA5/----\----;
                      LDA.B !PlayerYPosScrRel             ;;----|FCA7/----\----;
                      CLC                                 ;;----|FCA9/----\----;
                      ADC.B #$10                          ;;----|FCAA/----\----;
                      STA.B !_5                           ;;----|FCAC/----\----;
                      LDA.B #$0C                          ;;----|FCAE/----\----;
                      STA.B !_6                           ;;----|FCB0/----\----;
                      LDA.B #$0E                          ;;----|FCB2/----\----;
                      STA.B !_7                           ;;----|FCB4/----\----;
                      STZ.B !_A                           ;;----|FCB6/----\----;
                      STZ.B !_B                           ;;----|FCB8/----\----;
                      JSL CheckForContact                 ;;----|FCBA/----\----;
                      BCC CODE_01FD0A                     ;;----|FCBE/----\----;
                      LDA.W !SpriteMisc1558,X             ;;----|FCC0/----\----;
                      BNE Return01FD09                    ;;----|FCC3/----\----;
                      LDA.B #$08                          ;;----|FCC5/----\----;
                      STA.W !SpriteMisc1558,X             ;;----|FCC7/----\----;
                      LDA.B !PlayerInAir                  ;;----|FCCA/----\----;
                      BEQ CODE_01FD05                     ;;----|FCCC/----\----;
                      LDA.B #$28                          ;;----|FCCE/----\----; \ Play sound effect 
                      STA.W !SPCIO3                       ;;----|FCD0/----\----; / 
                      JSL BoostMarioSpeed                 ;;----|FCD3/----\----;
                      LDA.B !SpriteXPosLow,X              ;;----|FCD7/----\----;
                      PHA                                 ;;----|FCD9/----\----;
                      LDA.B !SpriteYPosLow,X              ;;----|FCDA/----\----;
                      PHA                                 ;;----|FCDC/----\----;
                      LDA.W !BrSwingPlatXPos              ;;----|FCDD/----\----;
                      SEC                                 ;;----|FCE0/----\----;
                      SBC.B #$08                          ;;----|FCE1/----\----;
                      STA.B !SpriteXPosLow,X              ;;----|FCE3/----\----;
                      LDA.W !BrSwingPlatYPos              ;;----|FCE5/----\----;
                      SEC                                 ;;----|FCE8/----\----;
                      SBC.B #$10                          ;;----|FCE9/----\----;
                      STA.B !SpriteYPosLow,X              ;;----|FCEB/----\----;
                      STZ.W !SpriteOffscreenX,X           ;;----|FCED/----\----;
                      JSL DisplayContactGfx               ;;----|FCF0/----\----;
                      PLA                                 ;;----|FCF4/----\----;
                      STA.B !SpriteYPosLow,X              ;;----|FCF5/----\----;
                      PLA                                 ;;----|FCF7/----\----;
                      STA.B !SpriteXPosLow,X              ;;----|FCF8/----\----;
                      LDA.W !SpriteMisc154C,X             ;;----|FCFA/----\----;
                      BNE Return01FD09                    ;;----|FCFD/----\----;
                      LDA.B #$18                          ;;----|FCFF/----\----;
                      STA.W !SpriteMisc154C,X             ;;----|FD01/----\----;
                      RTS                                 ;;----|FD04/----\----; Return 
                                                          ;;                   ;
CODE_01FD05:          JSL HurtMario                       ;;----|FD05/----\----;
Return01FD09:         RTS                                 ;;----|FD09/----\----; Return 
                                                          ;;                   ;
CODE_01FD0A:          LDY.B #$0A                          ;;----|FD0A/----\----;
CODE_01FD0C:          STY.W !SpriteInterIndex             ;;----|FD0C/----\----;
                      LDA.W !ExtSpriteNumber,Y            ;;----|FD0F/----\----;
                      CMP.B #$05                          ;;----|FD12/----\----;
                      BNE +                               ;;----|FD14/----\----;
                      LDA.W !ExtSpriteXPosLow,Y           ;;----|FD16/----\----;
                      SEC                                 ;;----|FD19/----\----;
                      SBC.B !Layer1XPos                   ;;----|FD1A/----\----;
                      STA.B !_4                           ;;----|FD1C/----\----;
                      STZ.B !_A                           ;;----|FD1E/----\----;
                      LDA.W !ExtSpriteYPosLow,Y           ;;----|FD20/----\----;
                      SEC                                 ;;----|FD23/----\----;
                      SBC.B !Layer1YPos                   ;;----|FD24/----\----;
                      STA.B !_5                           ;;----|FD26/----\----;
                      STZ.B !_B                           ;;----|FD28/----\----;
                      LDA.B #$08                          ;;----|FD2A/----\----;
                      STA.B !_6                           ;;----|FD2C/----\----;
                      STA.B !_7                           ;;----|FD2E/----\----;
                      JSL CheckForContact                 ;;----|FD30/----\----;
                      BCC +                               ;;----|FD34/----\----;
                      LDA.B #$01                          ;;----|FD36/----\----; \ Extended sprite = Smoke puff 
                      STA.W !ExtSpriteNumber,Y            ;;----|FD38/----\----; / 
                      LDA.B #$0F                          ;;----|FD3B/----\----;
                      STA.W !ExtSpriteMisc176F,Y          ;;----|FD3D/----\----;
                      LDA.B #$01                          ;;----|FD40/----\----; \ Play sound effect 
                      STA.W !SPCIO0                       ;;----|FD42/----\----; / 
                      LDA.B #$10                          ;;----|FD45/----\----;
                      STA.W !SpriteMisc154C,X             ;;----|FD47/----\----;
                    + DEY                                 ;;----|FD4A/----\----;
                      CPY.B #$07                          ;;----|FD4B/----\----;
                      BNE CODE_01FD0C                     ;;----|FD4D/----\----;
                      RTS                                 ;;----|FD4F/----\----; Return 
                                                          ;;                   ;
CODE_01FD50:          LDA.B !SpriteXPosLow,X              ;;----|FD50/----\----;
                      CLC                                 ;;----|FD52/----\----;
                      ADC.B #$08                          ;;----|FD53/----\----;
                      STA.W !BrSwingXDist                 ;;----|FD55/----\----;
                      LDA.W !SpriteYPosHigh,X             ;;----|FD58/----\----;
                      ADC.B #$00                          ;;----|FD5B/----\----;
                      STA.W !BrSwingXDist+1               ;;----|FD5D/----\----;
                      LDA.B !SpriteYPosLow,X              ;;----|FD60/----\----;
                      CLC                                 ;;----|FD62/----\----;
                      ADC.B #$2F                          ;;----|FD63/----\----;
                      STA.W !BrSwingYDist                 ;;----|FD65/----\----;
                      LDA.W !SpriteXPosHigh,X             ;;----|FD68/----\----;
                      ADC.B #$00                          ;;----|FD6B/----\----;
                      STA.W !BrSwingYDist+1               ;;----|FD6D/----\----;
                      REP #$20                            ;;----|FD70/----\----; Accum (16 bit) 
                      LDA.B !Mode7Angle                   ;;----|FD72/----\----;
                      EOR.W #$01FF                        ;;----|FD74/----\----;
                      INC A                               ;;----|FD77/----\----;
                      AND.W #$01FF                        ;;----|FD78/----\----;
                      STA.B !Mode7Angle                   ;;----|FD7B/----\----;
                      SEP #$20                            ;;----|FD7D/----\----; Accum (8 bit) 
                      PHX                                 ;;----|FD7F/----\----;
                      JSL CODE_01CC9D                     ;;----|FD80/----\----;
                      PLX                                 ;;----|FD84/----\----;
                      REP #$20                            ;;----|FD85/----\----; Accum (16 bit) 
                      LDA.B !Mode7Angle                   ;;----|FD87/----\----;
                      EOR.W #$01FF                        ;;----|FD89/----\----;
                      INC A                               ;;----|FD8C/----\----;
                      AND.W #$01FF                        ;;----|FD8D/----\----;
                      STA.B !Mode7Angle                   ;;----|FD90/----\----;
                      SEP #$20                            ;;----|FD92/----\----; Accum (8 bit) 
                      RTS                                 ;;----|FD94/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
DATA_01FD95:          db $04,$0B,$0B,$0B,$0B,$0A,$0A,$09  ;;----|FD95/----\----;
                      db $09,$08,$08,$07,$04,$05,$05,$05  ;;----|FD9D/----\----;
BallPositionDispX:    db $08,$F8                          ;;----|FDA5/----\----;
                                                          ;;                   ;
ThrowBall:            LDY.B #$05                          ;;----|FDA7/----\----; \ Find an open sprite index 
CODE_01FDA9:          LDA.W !SpriteStatus,Y               ;;----|FDA9/----\----;  | 
                      BEQ GenerateBall                    ;;----|FDAC/----\----;  | 
                      DEY                                 ;;----|FDAE/----\----;  | 
                      BPL CODE_01FDA9                     ;;----|FDAF/----\----; / 
                      RTS                                 ;;----|FDB1/----\----; Return 
                                                          ;;                   ;
GenerateBall:         LDA.B #$20                          ;;----|FDB2/----\----; \ Play sound effect 
                      STA.W !SPCIO0                       ;;----|FDB4/----\----; / 
                      LDA.B #$08                          ;;----|FDB7/----\----; \ Sprite status = normal 
                      STA.W !SpriteStatus,Y               ;;----|FDB9/----\----; / 
                      LDA.B #$A7                          ;;----|FDBC/----\----; \ Sprite to throw = Ball 
                      STA.W !SpriteNumber,Y               ;;----|FDBE/----\----; / 
                      PHX                                 ;;----|FDC1/----\----; \ Before: X must have index of sprite being generated 
                      TYX                                 ;;----|FDC2/----\----;  | Routine clears *all* old sprite values... 
                      JSL InitSpriteTables                ;;----|FDC3/----\----;  | ...and loads in new values for the 6 main sprite tables 
                      PLX                                 ;;----|FDC7/----\----; / 
                      PHX                                 ;;----|FDC8/----\----; Push Iggy's sprite index 
                      LDA.W !SpriteMisc157C,X             ;;----|FDC9/----\----; \ Ball's direction = Iggy'direction 
                      STA.W !SpriteMisc157C,Y             ;;----|FDCC/----\----; / 
                      TAX                                 ;;----|FDCF/----\----; X = Ball's direction 
                      LDA.W !BrSwingPlatXPos              ;;----|FDD0/----\----; \ Set Ball X position 
                      SEC                                 ;;----|FDD3/----\----;  | 
                      SBC.B #$08                          ;;----|FDD4/----\----;  | 
                      ADC.W BallPositionDispX,X           ;;----|FDD6/----\----;  | 
                      STA.W !SpriteXPosLow,Y              ;;----|FDD9/----\----;  | 
                      LDA.B #$00                          ;;----|FDDC/----\----;  | 
                      STA.W !SpriteYPosHigh,Y             ;;----|FDDE/----\----; / 
                      LDA.W !BrSwingPlatYPos              ;;----|FDE1/----\----; \ Set Ball Y position 
                      SEC                                 ;;----|FDE4/----\----;  | 
                      SBC.B #$18                          ;;----|FDE5/----\----;  | 
                      STA.W !SpriteYPosLow,Y              ;;----|FDE7/----\----;  | 
                      LDA.B #$00                          ;;----|FDEA/----\----;  | 
                      SBC.B #$00                          ;;----|FDEC/----\----;  | 
                      STA.W !SpriteXPosHigh,Y             ;;----|FDEE/----\----; / 
                      PLX                                 ;;----|FDF1/----\----; X = Iggy's sprite index 
                      RTS                                 ;;----|FDF2/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
DATA_01FDF3:          db $F7,$FF,$00,$F8,$F7,$FF,$00,$F8  ;;----|FDF3/----\----;
                      db $F8,$00,$00,$F8,$FB,$03,$00,$F8  ;;----|FDFB/----\----;
                      db $F8,$00,$00,$F8,$FA,$02,$00,$F8  ;;----|FE03/----\----;
                      db $00,$00,$F8,$00,$00,$F8,$00,$F8  ;;----|FE0B/----\----;
                      db $00,$00,$00,$00,$FB,$F8,$00,$F8  ;;----|FE13/----\----;
                      db $F4,$F8,$00,$F8,$00,$F8,$00,$F8  ;;----|FE1B/----\----;
                      db $09,$09,$00,$10,$09,$09,$00,$10  ;;----|FE23/----\----;
                      db $08,$08,$00,$10,$05,$05,$00,$10  ;;----|FE2B/----\----;
                      db $08,$08,$00,$10,$06,$06,$00,$10  ;;----|FE33/----\----;
                      db $00,$08,$08,$08,$00,$10,$00,$10  ;;----|FE3B/----\----;
                      db $00,$08,$00,$08,$05,$10,$00,$10  ;;----|FE43/----\----;
                      db $0C,$10,$00,$10,$00,$10,$00,$10  ;;----|FE4B/----\----;
DATA_01FE53:          db $FA,$F2,$00,$09,$F9,$F1,$00,$08  ;;----|FE53/----\----;
                      db $F8,$F0,$00,$08,$FE,$F6,$00,$08  ;;----|FE5B/----\----;
                      db $FC,$F4,$00,$08,$FF,$F7,$00,$08  ;;----|FE63/----\----;
                      db $00,$F0,$F8,$F0,$00,$00,$00,$00  ;;----|FE6B/----\----;
                      db $00,$00,$00,$00,$FC,$00,$00,$00  ;;----|FE73/----\----;
                      db $F9,$00,$00,$00,$00,$08,$00,$08  ;;----|FE7B/----\----;
DATA_01FE83:          db $00,$0C,$02,$0A,$00,$0C,$22,$0A  ;;----|FE83/----\----;
                      db $00,$0C,$20,$0A,$00,$0C,$20,$0A  ;;----|FE8B/----\----;
                      db $00,$0C,$20,$0A,$00,$0C,$20,$0A  ;;----|FE93/----\----;
                      db $24,$1C,$04,$1C,$0E,$0D,$0E,$0D  ;;----|FE9B/----\----;
                      db $0E,$1D,$0E,$1D,$4A,$0D,$0E,$0D  ;;----|FEA3/----\----;
                      db $4A,$0D,$0E,$0D,$20,$0A,$20,$0A  ;;----|FEAB/----\----;
DATA_01FEB3:          db $06,$02,$08                      ;;----|FEB3/----\----;
                                                          ;;                   ;
DATA_01FEB6:          db $02                              ;;----|FEB6/----\----;
                                                          ;;                   ;
DATA_01FEB7:          db $00,$02,$00,$37,$3B              ;;----|FEB7/----\----;
                                                          ;;                   ;
CODE_01FEBC:          LDY.B !SpriteTableC2,X              ;;----|FEBC/----\----;
                      LDA.W DATA_01FEB7,Y                 ;;----|FEBE/----\----;
                      STA.B !_D                           ;;----|FEC1/----\----;
                      STY.B !_5                           ;;----|FEC3/----\----;
                      LDY.W !SpriteOAMIndex,X             ;;----|FEC5/----\----; Y = Index into sprite OAM 
                      LDA.W !SpriteMisc157C,X             ;;----|FEC8/----\----;
                      LSR A                               ;;----|FECB/----\----;
                      ROR A                               ;;----|FECC/----\----;
                      LSR A                               ;;----|FECD/----\----;
                      AND.B #$40                          ;;----|FECE/----\----;
                      EOR.B #$40                          ;;----|FED0/----\----;
                      STA.B !_2                           ;;----|FED2/----\----;
                      LDA.W !SpriteMisc1602,X             ;;----|FED4/----\----;
                      ASL A                               ;;----|FED7/----\----;
                      ASL A                               ;;----|FED8/----\----;
                      STA.B !_3                           ;;----|FED9/----\----;
                      PHX                                 ;;----|FEDB/----\----;
                      LDX.B #$03                          ;;----|FEDC/----\----;
CODE_01FEDE:          PHX                                 ;;----|FEDE/----\----;
                      TXA                                 ;;----|FEDF/----\----;
                      CLC                                 ;;----|FEE0/----\----;
                      ADC.B !_3                           ;;----|FEE1/----\----;
                      TAX                                 ;;----|FEE3/----\----;
                      PHX                                 ;;----|FEE4/----\----;
                      LDA.B !_2                           ;;----|FEE5/----\----;
                      BEQ +                               ;;----|FEE7/----\----;
                      TXA                                 ;;----|FEE9/----\----;
                      CLC                                 ;;----|FEEA/----\----;
                      ADC.B #$30                          ;;----|FEEB/----\----;
                      TAX                                 ;;----|FEED/----\----;
                    + LDA.W !BrSwingPlatXPos              ;;----|FEEE/----\----;
                      SEC                                 ;;----|FEF1/----\----;
                      SBC.B #$08                          ;;----|FEF2/----\----;
                      CLC                                 ;;----|FEF4/----\----;
                      ADC.W DATA_01FDF3,X                 ;;----|FEF5/----\----;
                      STA.W !OAMTileXPos+$100,Y           ;;----|FEF8/----\----;
                      PLX                                 ;;----|FEFB/----\----;
                      LDA.W !BrSwingPlatYPos              ;;----|FEFC/----\----;
                      CLC                                 ;;----|FEFF/----\----;
                      ADC.B #$60                          ;;----|FF00/----\----;
                      CLC                                 ;;----|FF02/----\----;
                      ADC.W DATA_01FE53,X                 ;;----|FF03/----\----;
                      STA.W !OAMTileYPos+$100,Y           ;;----|FF06/----\----;
                      LDA.W DATA_01FE83,X                 ;;----|FF09/----\----;
                      STA.W !OAMTileNo+$100,Y             ;;----|FF0C/----\----;
                      PHX                                 ;;----|FF0F/----\----;
                      LDX.B !_5                           ;;----|FF10/----\----;
                      CPX.B #$03                          ;;----|FF12/----\----;
                      BNE +                               ;;----|FF14/----\----;
                      CMP.B #$05                          ;;----|FF16/----\----;
                      BCS +                               ;;----|FF18/----\----;
                      LSR A                               ;;----|FF1A/----\----;
                      TAX                                 ;;----|FF1B/----\----;
                      LDA.W DATA_01FEB3,X                 ;;----|FF1C/----\----;
                      STA.W !OAMTileNo+$100,Y             ;;----|FF1F/----\----;
                    + LDA.W !OAMTileNo+$100,Y             ;;----|FF22/----\----;
                      CMP.B #$4A                          ;;----|FF25/----\----;
                      LDA.B !_D                           ;;----|FF27/----\----;
                      BCC +                               ;;----|FF29/----\----;
                      LDA.B #$35                          ;;----|FF2B/----\----;  Iggy ball palette 
                    + ORA.B !_2                           ;;----|FF2D/----\----;
                      STA.W !OAMTileAttr+$100,Y           ;;----|FF2F/----\----;
                      PLA                                 ;;----|FF32/----\----;
                      AND.B #$03                          ;;----|FF33/----\----;
                      TAX                                 ;;----|FF35/----\----;
                      PHY                                 ;;----|FF36/----\----;
                      TYA                                 ;;----|FF37/----\----;
                      LSR A                               ;;----|FF38/----\----;
                      LSR A                               ;;----|FF39/----\----;
                      TAY                                 ;;----|FF3A/----\----;
                      LDA.W DATA_01FEB6,X                 ;;----|FF3B/----\----;
                      STA.W !OAMTileSize+$40,Y            ;;----|FF3E/----\----;
                      PLY                                 ;;----|FF41/----\----;
                      INY                                 ;;----|FF42/----\----;
                      INY                                 ;;----|FF43/----\----;
                      INY                                 ;;----|FF44/----\----;
                      INY                                 ;;----|FF45/----\----;
                      PLX                                 ;;----|FF46/----\----;
                      DEX                                 ;;----|FF47/----\----;
                      BPL CODE_01FEDE                     ;;----|FF48/----\----;
                      PLX                                 ;;----|FF4A/----\----;
                      LDY.B #$FF                          ;;----|FF4B/----\----;
                      LDA.B #$03                          ;;----|FF4D/----\----;
                      JSR FinishOAMWriteRt                ;;----|FF4F/----\----;
                      RTS                                 ;;----|FF52/----\----; Return 
                                                          ;;                   ;
                                                          ;;                   ;
DATA_01FF53:          db $2C,$2E,$2C,$2E                  ;;----|FF53/----\----;
                                                          ;;                   ;
DATA_01FF57:          db $00,$00,$40,$00                  ;;----|FF57/----\----;
                                                          ;;                   ;
CODE_01FF5B:          PHX                                 ;;----|FF5B/----\----;
                      LDY.B !SpriteTableC2,X              ;;----|FF5C/----\----;
                      LDA.W DATA_01FEB7,Y                 ;;----|FF5E/----\----;
                      STA.B !_D                           ;;----|FF61/----\----;
                      LDY.B #$70                          ;;----|FF63/----\----;
                      LDA.W !BrSwingPlatXPos              ;;----|FF65/----\----;
                      SEC                                 ;;----|FF68/----\----;
                      SBC.B #$08                          ;;----|FF69/----\----;
                      STA.W !OAMTileXPos+$100,Y           ;;----|FF6B/----\----;
                      LDA.W !BrSwingPlatYPos              ;;----|FF6E/----\----;
                      CLC                                 ;;----|FF71/----\----;
                      ADC.B #$60                          ;;----|FF72/----\----;
                      STA.W !OAMTileYPos+$100,Y           ;;----|FF74/----\----;
                      LDA.B !EffFrame                     ;;----|FF77/----\----;
                      LSR A                               ;;----|FF79/----\----;
                      AND.B #$03                          ;;----|FF7A/----\----;
                      TAX                                 ;;----|FF7C/----\----;
                      LDA.W DATA_01FF53,X                 ;;----|FF7D/----\----;
                      STA.W !OAMTileNo+$100,Y             ;;----|FF80/----\----;
                      LDA.B #$30                          ;;----|FF83/----\----;
                      ORA.W DATA_01FF57,X                 ;;----|FF85/----\----;
                      ORA.B !_D                           ;;----|FF88/----\----;
                      STA.W !OAMTileAttr+$100,Y           ;;----|FF8A/----\----;
                      TYA                                 ;;----|FF8D/----\----;
                      LSR A                               ;;----|FF8E/----\----;
                      LSR A                               ;;----|FF8F/----\----;
                      TAY                                 ;;----|FF90/----\----;
                      LDA.B #$02                          ;;----|FF91/----\----;
                      STA.W !OAMTileSize+$40,Y            ;;----|FF93/----\----;
                      PLX                                 ;;----|FF96/----\----;
                      RTS                                 ;;----|FF97/----\----; Return 
                                                          ;;                   ;
CODE_01FF98:          LDA.B !SpriteXPosLow,X              ;;----|FF98/----\----; \ $14B4,$14B5 = Sprite X position + #$08 
                      CLC                                 ;;----|FF9A/----\----;  | 
                      ADC.B #$08                          ;;----|FF9B/----\----;  | 
                      STA.W !BrSwingXDist                 ;;----|FF9D/----\----;  | 
                      LDA.W !SpriteYPosHigh,X             ;;----|FFA0/----\----;  | 
                      ADC.B #$00                          ;;----|FFA3/----\----;  | 
                      STA.W !BrSwingXDist+1               ;;----|FFA5/----\----; / 
                      LDA.B !SpriteYPosLow,X              ;;----|FFA8/----\----; \ $14B6,$14B7 = Sprite Y position + #$0F 
                      CLC                                 ;;----|FFAA/----\----;  | 
                      ADC.B #$0F                          ;;----|FFAB/----\----;  | 
                      STA.W !BrSwingYDist                 ;;----|FFAD/----\----;  | 
                      LDA.W !SpriteXPosHigh,X             ;;----|FFB0/----\----;  | 
                      ADC.B #$00                          ;;----|FFB3/----\----;  | 
                      STA.W !BrSwingYDist+1               ;;----|FFB5/----\----; / 
                      PHX                                 ;;----|FFB8/----\----;
                      JSL CODE_01CC9D                     ;;----|FFB9/----\----;
                      PLX                                 ;;----|FFBD/----\----;
                      RTS                                 ;;----|FFBE/----\----; Return 
                                                          ;;                   ;
                      padbyte $FF : pad $028000           ;;----|FFBF/----\----;