DATA_018000:          .db $80,$40,$20,$10,$08,$04,$02,$01 ;; 018000               ;
                                                          ;;                      ;
IsTouchingObjSide:    LDA.W RAM_SprObjStatus,X            ;; ?QPWZ? : BD 88 15    ; \ Set A to lower two bits of 
CODE_01800B:          AND.B #$03                          ;; 01800B : 29 03       ; / current sprite's Position Status 
Return01800D:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
IsOnGround:           LDA.W RAM_SprObjStatus,X            ;; ?QPWZ? : BD 88 15    ; \ Set A to bit 2 of 
CODE_018011:          AND.B #$04                          ;; 018011 : 29 04       ; / current sprite's Position Status 
Return018013:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
IsTouchingCeiling:    LDA.W RAM_SprObjStatus,X            ;; ?QPWZ? : BD 88 15    ; \ Set A to bit 3 of 
CODE_018017:          AND.B #$08                          ;; 018017 : 29 08       ; / current sprite's Position Status 
Return018019:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
UpdateYPosNoGrvty:    PHB                                 ;; ?QPWZ? : 8B          ;
CODE_01801B:          PHK                                 ;; 01801B : 4B          ;
CODE_01801C:          PLB                                 ;; 01801C : AB          ;
CODE_01801D:          JSR.W SubSprYPosNoGrvty             ;; 01801D : 20 D8 AB    ;
CODE_018020:          PLB                                 ;; 018020 : AB          ;
Return018021:         RTL                                 ;; ?QPWZ? : 6B          ; Return 
                                                          ;;                      ;
UpdateXPosNoGrvty:    PHB                                 ;; ?QPWZ? : 8B          ;
CODE_018023:          PHK                                 ;; 018023 : 4B          ;
CODE_018024:          PLB                                 ;; 018024 : AB          ;
CODE_018025:          JSR.W SubSprXPosNoGrvty             ;; 018025 : 20 CC AB    ;
CODE_018028:          PLB                                 ;; 018028 : AB          ;
Return018029:         RTL                                 ;; ?QPWZ? : 6B          ; Return 
                                                          ;;                      ;
UpdateSpritePos:      PHB                                 ;; ?QPWZ? : 8B          ;
CODE_01802B:          PHK                                 ;; 01802B : 4B          ;
CODE_01802C:          PLB                                 ;; 01802C : AB          ;
CODE_01802D:          JSR.W SubUpdateSprPos               ;; 01802D : 20 32 90    ;
CODE_018030:          PLB                                 ;; 018030 : AB          ;
Return018031:         RTL                                 ;; ?QPWZ? : 6B          ; Return 
                                                          ;;                      ;
SprSprInteract:       PHB                                 ;; ?QPWZ? : 8B          ;
CODE_018033:          PHK                                 ;; 018033 : 4B          ;
CODE_018034:          PLB                                 ;; 018034 : AB          ;
CODE_018035:          JSR.W SubSprSprInteract             ;; 018035 : 20 0D A4    ;
CODE_018038:          PLB                                 ;; 018038 : AB          ;
Return018039:         RTL                                 ;; ?QPWZ? : 6B          ; Return 
                                                          ;;                      ;
SprSpr+MarioSprRts:   PHB                                 ;; ?QPWZ? : 8B          ;
CODE_01803B:          PHK                                 ;; 01803B : 4B          ;
CODE_01803C:          PLB                                 ;; 01803C : AB          ;
CODE_01803D:          JSR.W SubSprSpr+MarioSpr            ;; 01803D : 20 C1 8F    ;
CODE_018040:          PLB                                 ;; 018040 : AB          ;
Return018041:         RTL                                 ;; ?QPWZ? : 6B          ; Return 
                                                          ;;                      ;
GenericSprGfxRt0:     PHB                                 ;; ?QPWZ? : 8B          ;
CODE_018043:          PHK                                 ;; 018043 : 4B          ;
CODE_018044:          PLB                                 ;; 018044 : AB          ;
CODE_018045:          JSR.W SubSprGfx0Entry0              ;; 018045 : 20 F3 9C    ;
CODE_018048:          PLB                                 ;; 018048 : AB          ;
Return018049:         RTL                                 ;; ?QPWZ? : 6B          ; Return 
                                                          ;;                      ;
InvertAccum:          EOR.B #$FF                          ;; ?QPWZ? : 49 FF       ; \ Set A to -A 
CODE_01804C:          INC A                               ;; 01804C : 1A          ; /  
Return01804D:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01804E:          LDA.W RAM_SprObjStatus,X            ;; 01804E : BD 88 15    ; \ Branch if in air 
CODE_018051:          BEQ Return018072                    ;; 018051 : F0 1F       ; / 
CODE_018053:          LDA RAM_FrameCounter                ;; 018053 : A5 13       ;
CODE_018055:          AND.B #$03                          ;; 018055 : 29 03       ;
CODE_018057:          ORA $86                             ;; 018057 : 05 86       ;
CODE_018059:          BNE Return018072                    ;; 018059 : D0 17       ;
CODE_01805B:          LDA.B #$04                          ;; 01805B : A9 04       ;
CODE_01805D:          STA $00                             ;; 01805D : 85 00       ;
CODE_01805F:          LDA.B #$0A                          ;; 01805F : A9 0A       ;
CODE_018061:          STA $01                             ;; 018061 : 85 01       ;
CODE_018063:          JSR.W IsSprOffScreen                ;; 018063 : 20 CB 80    ;
CODE_018066:          BNE Return018072                    ;; 018066 : D0 0A       ;
CODE_018068:          LDY.B #$03                          ;; 018068 : A0 03       ;
CODE_01806A:          LDA.W $17C0,Y                       ;; 01806A : B9 C0 17    ;
CODE_01806D:          BEQ CODE_018073                     ;; 01806D : F0 04       ;
CODE_01806F:          DEY                                 ;; 01806F : 88          ;
CODE_018070:          BPL CODE_01806A                     ;; 018070 : 10 F8       ;
Return018072:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_018073:          LDA.B #$03                          ;; 018073 : A9 03       ;
CODE_018075:          STA.W $17C0,Y                       ;; 018075 : 99 C0 17    ;
CODE_018078:          LDA RAM_SpriteXLo,X                 ;; 018078 : B5 E4       ;
CODE_01807A:          ADC $00                             ;; 01807A : 65 00       ;
CODE_01807C:          STA.W $17C8,Y                       ;; 01807C : 99 C8 17    ;
CODE_01807F:          LDA RAM_SpriteYLo,X                 ;; 01807F : B5 D8       ;
CODE_018081:          ADC $01                             ;; 018081 : 65 01       ;
CODE_018083:          STA.W $17C4,Y                       ;; 018083 : 99 C4 17    ;
CODE_018086:          LDA.B #$13                          ;; 018086 : A9 13       ;
CODE_018088:          STA.W $17CC,Y                       ;; 018088 : 99 CC 17    ;
Return01808B:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01808C:          PHB                                 ;; 01808C : 8B          ;
CODE_01808D:          PHK                                 ;; 01808D : 4B          ;
CODE_01808E:          PLB                                 ;; 01808E : AB          ;
CODE_01808F:          LDA.W $148F                         ;; 01808F : AD 8F 14    ;
CODE_018092:          STA.W $1470                         ;; 018092 : 8D 70 14    ; Reset carrying enemy flag 
CODE_018095:          STZ.W $148F                         ;; 018095 : 9C 8F 14    ;
CODE_018098:          STZ.W $1471                         ;; 018098 : 9C 71 14    ;
CODE_01809B:          STZ.W $18C2                         ;; 01809B : 9C C2 18    ;
CODE_01809E:          LDA.W $18DF                         ;; 01809E : AD DF 18    ;
CODE_0180A1:          STA.W $18E2                         ;; 0180A1 : 8D E2 18    ;
CODE_0180A4:          STZ.W $18DF                         ;; 0180A4 : 9C DF 18    ;
CODE_0180A7:          LDX.B #$0B                          ;; 0180A7 : A2 0B       ;
CODE_0180A9:          STX.W $15E9                         ;; 0180A9 : 8E E9 15    ;
CODE_0180AC:          JSR.W CODE_0180D2                   ;; 0180AC : 20 D2 80    ;
CODE_0180AF:          JSR.W HandleSprite                  ;; 0180AF : 20 27 81    ;
CODE_0180B2:          DEX                                 ;; 0180B2 : CA          ;
CODE_0180B3:          BPL CODE_0180A9                     ;; 0180B3 : 10 F4       ;
CODE_0180B5:          LDA.W $18B8                         ;; 0180B5 : AD B8 18    ;
CODE_0180B8:          BEQ CODE_0180BE                     ;; 0180B8 : F0 04       ;
CODE_0180BA:          JSL.L CODE_02F808                   ;; 0180BA : 22 08 F8 02 ;
CODE_0180BE:          LDA.W $18DF                         ;; 0180BE : AD DF 18    ;
CODE_0180C1:          BNE CODE_0180C9                     ;; 0180C1 : D0 06       ;
CODE_0180C3:          STZ.W RAM_OnYoshi                   ;; 0180C3 : 9C 7A 18    ;
CODE_0180C6:          STZ.W $188B                         ;; 0180C6 : 9C 8B 18    ;
CODE_0180C9:          PLB                                 ;; 0180C9 : AB          ;
Return0180CA:         RTL                                 ;; ?QPWZ? : 6B          ; Return 
                                                          ;;                      ;
IsSprOffScreen:       LDA.W RAM_OffscreenHorz,X           ;; ?QPWZ? : BD A0 15    ; \ A = Current sprite is offscreen 
CODE_0180CE:          ORA.W RAM_OffscreenVert,X           ;; 0180CE : 1D 6C 18    ; /  
Return0180D1:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_0180D2:          PHX                                 ;; 0180D2 : DA          ; In all sprite routines, X = current sprite 
CODE_0180D3:          TXA                                 ;; 0180D3 : 8A          ;
CODE_0180D4:          LDX.W $1692                         ;; 0180D4 : AE 92 16    ; $1692 = Current Sprite memory settings 
CODE_0180D7:          CLC                                 ;; 0180D7 : 18          ; \  
CODE_0180D8:          ADC.L DATA_07F0B4,X                 ;; 0180D8 : 7F B4 F0 07 ;  |Add $07:F0B4,$1692 to sprite index.  i.e. minimum one tile allotted to each sprite 
CODE_0180DC:          TAX                                 ;; 0180DC : AA          ;  |the bytes read go straight to the OAM indexes 
CODE_0180DD:          LDA.L DATA_07F000,X                 ;; 0180DD : BF 00 F0 07 ;  | 
CODE_0180E1:          PLX                                 ;; 0180E1 : FA          ; /  
CODE_0180E2:          STA.W RAM_SprOAMIndex,X             ;; 0180E2 : 9D EA 15    ; Current sprite's OAM index 
CODE_0180E5:          LDA.W $14C8,X                       ;; 0180E5 : BD C8 14    ; If  (something related to current sprite) is 0 
CODE_0180E8:          BEQ Return018126                    ;; 0180E8 : F0 3C       ; do not decrement these counters 
CODE_0180EA:          LDA RAM_SpritesLocked               ;; 0180EA : A5 9D       ; Lock sprites timer 
CODE_0180EC:          BNE Return018126                    ;; 0180EC : D0 38       ; if sprites locked, do not decrement counters 
CODE_0180EE:          LDA.W $1540,X                       ;; 0180EE : BD 40 15    ; \ Decrement a bunch of sprite counter tables 
CODE_0180F1:          BEQ CODE_0180F6                     ;; 0180F1 : F0 03       ;  | 
CODE_0180F3:          DEC.W $1540,X                       ;; 0180F3 : DE 40 15    ;  |Do not decrement any individual counter if it's already at zero 
CODE_0180F6:          LDA.W RAM_DisableInter,X            ;; 0180F6 : BD 4C 15    ;  | 
CODE_0180F9:          BEQ CODE_0180FE                     ;; 0180F9 : F0 03       ;  | 
CODE_0180FB:          DEC.W RAM_DisableInter,X            ;; 0180FB : DE 4C 15    ;  | 
CODE_0180FE:          LDA.W $1558,X                       ;; 0180FE : BD 58 15    ;  | 
CODE_018101:          BEQ CODE_018106                     ;; 018101 : F0 03       ;  | 
CODE_018103:          DEC.W $1558,X                       ;; 018103 : DE 58 15    ;  | 
CODE_018106:          LDA.W $1564,X                       ;; 018106 : BD 64 15    ;  | 
CODE_018109:          BEQ CODE_01810E                     ;; 018109 : F0 03       ;  | 
CODE_01810B:          DEC.W $1564,X                       ;; 01810B : DE 64 15    ;  | 
CODE_01810E:          LDA.W $1FE2,X                       ;; 01810E : BD E2 1F    ;  | 
CODE_018111:          BEQ CODE_018116                     ;; 018111 : F0 03       ;  | 
CODE_018113:          DEC.W $1FE2,X                       ;; 018113 : DE E2 1F    ;  | 
CODE_018116:          LDA.W $15AC,X                       ;; 018116 : BD AC 15    ;  | 
CODE_018119:          BEQ CODE_01811E                     ;; 018119 : F0 03       ;  | 
CODE_01811B:          DEC.W $15AC,X                       ;; 01811B : DE AC 15    ;  | 
CODE_01811E:          LDA.W $163E,X                       ;; 01811E : BD 3E 16    ;  | 
CODE_018121:          BEQ Return018126                    ;; 018121 : F0 03       ;  | 
CODE_018123:          DEC.W $163E,X                       ;; 018123 : DE 3E 16    ;  | 
Return018126:         RTS                                 ;; ?QPWZ? : 60          ; / Return 
                                                          ;;                      ;
HandleSprite:         LDA.W $14C8,X                       ;; ?QPWZ? : BD C8 14    ; Call a routine based on the sprite's status 
CODE_01812A:          BEQ EraseSprite                     ;; 01812A : F0 25       ; Routine for status 0 hardcoded, maybe for performance 
CODE_01812C:          CMP.B #$08                          ;; 01812C : C9 08       ;
CODE_01812E:          BNE CODE_018133                     ;; 01812E : D0 03       ; Routine for status 8 hardcoded, maybe for preformance 
CODE_018130:          JMP.W CallSpriteMain                ;; 018130 : 4C C3 85    ;
                                                          ;;                      ;
CODE_018133:          JSL.L ExecutePtr                    ;; 018133 : 22 DF 86 00 ;
                                                          ;;                      ;
SpriteStatusRtPtr:    .dw EraseSprite                     ;; ?QPWZ? : 51 81       ; 0 - Non-existant (Bypassed above) 
                      .dw CallSpriteInit                  ;; ?QPWZ? : 72 81       ; 1 - Initialization 
                      .dw HandleSprKilled                 ;; ?QPWZ? : A2 9A       ; 2 - Falling off screen (hit by star, shell, etc) 
                      .dw HandleSprSmushed                ;; ?QPWZ? : E4 9A       ; 3 - Smushed 
                      .dw HandleSprSpinJump               ;; ?QPWZ? : 52 9A       ; 4 - Spin Jumped 
                      .dw CODE_019A7B                     ;; ?QPWZ? : 7B 9A       ; 5 
                      .dw HandleSprLvlEnd                 ;; ?QPWZ? : 6D 81       ; 6 - End of level turn to coin 
                      .dw Return018156                    ;; ?QPWZ? : 56 81       ; 7 - Unused 
                      .dw Return0185C2                    ;; ?QPWZ? : C2 85       ; 8 - Normal (Bypassed above) 
                      .dw HandleSprStunned                ;; ?QPWZ? : 3C 95       ; 9 - Stationary (Carryable, flipped, stunned) 
                      .dw HandleSprKicked                 ;; ?QPWZ? : 13 99       ; A - Kicked 
                      .dw HandleSprCarried                ;; ?QPWZ? : 71 9F       ; B - Carried 
                      .dw HandleGoalPowerup               ;; ?QPWZ? : 57 81       ; C - Power up from carrying a sprite past the goal tape 
                                                          ;;                      ;
EraseSprite:          LDA.B #$FF                          ;; ?QPWZ? : A9 FF       ; \ Permanently erase sprite: 
CODE_018153:          STA.W RAM_SprIndexInLvl,X           ;; 018153 : 9D 1A 16    ;  | By changing the sprite's index into the level tables 
Return018156:         RTS                                 ;; ?QPWZ? : 60          ; / the actual sprite won't get marked for reloading 
                                                          ;;                      ;
HandleGoalPowerup:    JSR.W CallSpriteMain                ;; ?QPWZ? : 20 C3 85    ;
CODE_01815A:          JSR.W SubOffscreen0Bnk1             ;; 01815A : 20 31 AC    ;
CODE_01815D:          JSR.W SubUpdateSprPos               ;; 01815D : 20 32 90    ;
CODE_018160:          DEC RAM_SpriteSpeedY,X              ;; 018160 : D6 AA       ;
CODE_018162:          DEC RAM_SpriteSpeedY,X              ;; 018162 : D6 AA       ;
CODE_018164:          JSR.W IsOnGround                    ;; 018164 : 20 0E 80    ;
CODE_018167:          BEQ Return01816C                    ;; 018167 : F0 03       ;
ADDR_018169:          JSR.W SetSomeYSpeed??               ;; 018169 : 20 04 9A    ;
Return01816C:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
HandleSprLvlEnd:      JSL.L LvlEndSprCoins                ;; ?QPWZ? : 22 AC FB 00 ;
Return018171:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CallSpriteInit:       LDA.B #$08                          ;; ?QPWZ? : A9 08       ; \ Sprite status = Normal 
CODE_018174:          STA.W $14C8,X                       ;; 018174 : 9D C8 14    ; / 
CODE_018177:          LDA RAM_SpriteNum,X                 ;; 018177 : B5 9E       ;
CODE_018179:          JSL.L ExecutePtr                    ;; 018179 : 22 DF 86 00 ;
                                                          ;;                      ;
SpriteInitPtr:        .dw InitStandardSprite              ;; ?QPWZ? : 75 85       ; 00 - Green Koopa, no shell 
                      .dw InitStandardSprite              ;; ?QPWZ? : 75 85       ; 01 - Red Koopa, no shell 
                      .dw InitStandardSprite              ;; ?QPWZ? : 75 85       ; 02 - Blue Koopa, no shell 
                      .dw InitStandardSprite              ;; ?QPWZ? : 75 85       ; 03 - Yellow Koopa, no shell 
                      .dw InitStandardSprite              ;; ?QPWZ? : 75 85       ; 04 - Green Koopa 
                      .dw InitStandardSprite              ;; ?QPWZ? : 75 85       ; 05 - Red Koopa 
                      .dw InitStandardSprite              ;; ?QPWZ? : 75 85       ; 06 - Blue Koopa 
                      .dw InitStandardSprite              ;; ?QPWZ? : 75 85       ; 07 - Yellow Koopa 
                      .dw InitStandardSprite              ;; ?QPWZ? : 75 85       ; 08 - Green Koopa, flying left 
                      .dw InitGrnBounceKoopa              ;; ?QPWZ? : 6E 85       ; 09 - Green bouncing Koopa 
                      .dw InitStandardSprite              ;; ?QPWZ? : 75 85       ; 0A - Red vertical flying Koopa 
                      .dw InitStandardSprite              ;; ?QPWZ? : 75 85       ; 0B - Red horizontal flying Koopa 
                      .dw InitStandardSprite              ;; ?QPWZ? : 75 85       ; 0C - Yellow Koopa with wings 
                      .dw InitBomb                        ;; ?QPWZ? : 5D 85       ; 0D - Bob-omb 
                      .dw InitKeyHole                     ;; ?QPWZ? : B8 E1       ; 0E - Keyhole 
                      .dw InitStandardSprite              ;; ?QPWZ? : 75 85       ; 0F - Goomba 
                      .dw InitStandardSprite              ;; ?QPWZ? : 75 85       ; 10 - Bouncing Goomba with wings 
                      .dw InitStandardSprite              ;; ?QPWZ? : 75 85       ; 11 - Buzzy Beetle 
                      .dw UnusedInit                      ;; ?QPWZ? : 75 F8       ; 12 - Unused 
                      .dw InitStandardSprite              ;; ?QPWZ? : 75 85       ; 13 - Spiny 
                      .dw InitStandardSprite              ;; ?QPWZ? : 75 85       ; 14 - Spiny falling 
                      .dw Return01B011                    ;; ?QPWZ? : 11 B0       ; 15 - Fish, horizontal 
                      .dw InitVerticalFish                ;; ?QPWZ? : 0B B0       ; 16 - Fish, vertical 
                      .dw InitFish                        ;; ?QPWZ? : 14 B0       ; 17 - Fish, created from generator 
                      .dw InitFish                        ;; ?QPWZ? : 14 B0       ; 18 - Surface jumping fish 
                      .dw InitMsg+SideExit                ;; ?QPWZ? : DA 83       ; 19 - Display text from level Message Box #1 
                      .dw InitPiranha                     ;; ?QPWZ? : B0 85       ; 1A - Classic Piranha Plant 
                      .dw Return0185C2                    ;; ?QPWZ? : C2 85       ; 1B - Bouncing football in place 
                      .dw InitBulletBill                  ;; ?QPWZ? : DD 84       ; 1C - Bullet Bill 
                      .dw InitStandardSprite              ;; ?QPWZ? : 75 85       ; 1D - Hopping flame 
                      .dw InitLakitu                      ;; ?QPWZ? : 6B 84       ; 1E - Lakitu 
                      .dw InitMagikoopa                   ;; ?QPWZ? : B8 BD       ; 1F - Magikoopa 
                      .dw Return018583                    ;; ?QPWZ? : 83 85       ; 20 - Magikoopa's magic 
                      .dw FaceMario                       ;; ?QPWZ? : 7C 85       ; 21 - Moving coin 
                      .dw InitVertNetKoopa                ;; ?QPWZ? : 48 B9       ; 22 - Green vertical net Koopa 
                      .dw InitVertNetKoopa                ;; ?QPWZ? : 48 B9       ; 23 - Red vertical net Koopa 
                      .dw InitHorzNetKoopa                ;; ?QPWZ? : 3E B9       ; 24 - Green horizontal net Koopa 
                      .dw InitHorzNetKoopa                ;; ?QPWZ? : 3E B9       ; 25 - Red horizontal net Koopa 
                      .dw InitThwomp                      ;; ?QPWZ? : 96 AE       ; 26 - Thwomp 
                      .dw Return01AEA2                    ;; ?QPWZ? : A2 AE       ; 27 - Thwimp 
                      .dw InitBigBoo                      ;; ?QPWZ? : 84 F8       ; 28 - Big Boo 
                      .dw InitKoopaKid                    ;; ?QPWZ? : 2F CD       ; 29 - Koopa Kid 
                      .dw InitDownPiranha                 ;; ?QPWZ? : 9A 85       ; 2A - Upside down Piranha Plant 
                      .dw Return0185C2                    ;; ?QPWZ? : C2 85       ; 2B - Sumo Brother's fire lightning 
                      .dw InitYoshiEgg                    ;; ?QPWZ? : 39 83       ; 2C - Yoshi egg 
                      .dw InitKey+BabyYoshi               ;; ?QPWZ? : 35 84       ; 2D - Baby green Yoshi 
                      .dw InitSpikeTop                    ;; ?QPWZ? : F2 83       ; 2E - Spike Top 
                      .dw Return0185C2                    ;; ?QPWZ? : C2 85       ; 2F - Portable spring board 
                      .dw FaceMario                       ;; ?QPWZ? : 7C 85       ; 30 - Dry Bones, throws bones 
                      .dw FaceMario                       ;; ?QPWZ? : 7C 85       ; 31 - Bony Beetle 
                      .dw FaceMario                       ;; ?QPWZ? : 7C 85       ; 32 - Dry Bones, stay on ledge 
                      .dw InitFireball                    ;; ?QPWZ? : 50 E0       ; 33 - Fireball 
                      .dw Return0185C2                    ;; ?QPWZ? : C2 85       ; 34 - Boss fireball 
                      .dw InitYoshi                       ;; ?QPWZ? : E0 83       ; 35 - Green Yoshi 
                      .dw Return0185C2                    ;; ?QPWZ? : C2 85       ; 36 - Unused 
                      .dw InitBigBoo                      ;; ?QPWZ? : 84 F8       ; 37 - Boo 
                      .dw InitEerie                       ;; ?QPWZ? : 7C F8       ; 38 - Eerie 
                      .dw InitEerie                       ;; ?QPWZ? : 7C F8       ; 39 - Eerie, wave motion 
                      .dw InitUrchin                      ;; ?QPWZ? : 1B 84       ; 3A - Urchin, fixed 
                      .dw InitUrchin                      ;; ?QPWZ? : 1B 84       ; 3B - Urchin, wall detect 
                      .dw InitUrchinWallFllw              ;; ?QPWZ? : 04 84       ; 3C - Urchin, wall follow 
                      .dw InitRipVanFish                  ;; ?QPWZ? : 31 84       ; 3D - Rip Van Fish 
                      .dw InitPSwitch                     ;; ?QPWZ? : 4E 84       ; 3E - POW 
                      .dw Return0185C2                    ;; ?QPWZ? : C2 85       ; 3F - Para-Goomba 
                      .dw Return0185C2                    ;; ?QPWZ? : C2 85       ; 40 - Para-Bomb 
                      .dw Return01843D                    ;; ?QPWZ? : 3D 84       ; 41 - Dolphin, horizontal 
                      .dw Return01843D                    ;; ?QPWZ? : 3D 84       ; 42 - Dolphin2, horizontal 
                      .dw Return01843D                    ;; ?QPWZ? : 3D 84       ; 43 - Dolphin, vertical 
                      .dw Return01843D                    ;; ?QPWZ? : 3D 84       ; 44 - Torpedo Ted 
                      .dw Return0185C2                    ;; ?QPWZ? : C2 85       ; 45 - Directional coins 
                      .dw InitDigginChuck                 ;; ?QPWZ? : 08 85       ; 46 - Diggin' Chuck 
                      .dw Return0183EE                    ;; ?QPWZ? : EE 83       ; 47 - Swimming/Jumping fish 
                      .dw Return0183EE                    ;; ?QPWZ? : EE 83       ; 48 - Diggin' Chuck's rock 
                      .dw InitGrowingPipe                 ;; ?QPWZ? : 81 83       ; 49 - Growing/shrinking pipe end 
                      .dw Return0183EE                    ;; ?QPWZ? : EE 83       ; 4A - Goal Point Question Sphere 
                      .dw InitPiranha                     ;; ?QPWZ? : B0 85       ; 4B - Pipe dwelling Lakitu 
                      .dw InitExplodingBlk                ;; ?QPWZ? : A4 83       ; 4C - Exploding Block 
                      .dw InitMontyMole                   ;; ?QPWZ? : CE 84       ; 4D - Ground dwelling Monty Mole 
                      .dw InitMontyMole                   ;; ?QPWZ? : CE 84       ; 4E - Ledge dwelling Monty Mole 
                      .dw InitPiranha                     ;; ?QPWZ? : B0 85       ; 4F - Jumping Piranha Plant 
                      .dw InitPiranha                     ;; ?QPWZ? : B0 85       ; 50 - Jumping Piranha Plant, spit fire 
                      .dw FaceMario                       ;; ?QPWZ? : 7C 85       ; 51 - Ninji 
                      .dw InitMovingLedge                 ;; ?QPWZ? : 90 88       ; 52 - Moving ledge hole in ghost house 
                      .dw Return0185C2                    ;; ?QPWZ? : C2 85       ; 53 - Throw block sprite 
                      .dw InitClimbingDoor                ;; ?QPWZ? : 87 BA       ; 54 - Climbing net door 
                      .dw InitChckbrdPlat                 ;; ?QPWZ? : 5E B2       ; 55 - Checkerboard platform, horizontal 
                      .dw Return01B25D                    ;; ?QPWZ? : 5D B2       ; 56 - Flying rock platform, horizontal 
                      .dw InitChckbrdPlat                 ;; ?QPWZ? : 5E B2       ; 57 - Checkerboard platform, vertical 
                      .dw Return01B25D                    ;; ?QPWZ? : 5D B2       ; 58 - Flying rock platform, vertical 
                      .dw Return01B267                    ;; ?QPWZ? : 67 B2       ; 59 - Turn block bridge, horizontal and vertical 
                      .dw Return01B267                    ;; ?QPWZ? : 67 B2       ; 5A - Turn block bridge, horizontal 
                      .dw InitFloatingPlat                ;; ?QPWZ? : 36 B2       ; 5B - Brown platform floating in water 
                      .dw InitFallingPlat                 ;; ?QPWZ? : 2B B2       ; 5C - Checkerboard platform that falls 
                      .dw InitFloatingPlat                ;; ?QPWZ? : 36 B2       ; 5D - Orange platform floating in water 
                      .dw InitOrangePlat                  ;; ?QPWZ? : 2E B2       ; 5E - Orange platform, goes on forever 
                      .dw InitBrwnChainPlat               ;; ?QPWZ? : 4A C7       ; 5F - Brown platform on a chain 
                      .dw Return01AE90                    ;; ?QPWZ? : 90 AE       ; 60 - Flat green switch palace switch 
                      .dw InitFloatingSkull               ;; ?QPWZ? : D9 87       ; 61 - Floating skulls 
                      .dw InitLineBrwnPlat                ;; ?QPWZ? : 11 D7       ; 62 - Brown platform, line-guided 
                      .dw InitLinePlat                    ;; ?QPWZ? : D2 D6       ; 63 - Checker/brown platform, line-guided 
                      .dw InitLineRope                    ;; ?QPWZ? : C4 D6       ; 64 - Rope mechanism, line-guided 
                      .dw InitLineGuidedSpr               ;; ?QPWZ? : ED D6       ; 65 - Chainsaw, line-guided 
                      .dw InitLineGuidedSpr               ;; ?QPWZ? : ED D6       ; 66 - Upside down chainsaw, line-guided 
                      .dw InitLineGuidedSpr               ;; ?QPWZ? : ED D6       ; 67 - Grinder, line-guided 
                      .dw InitLineGuidedSpr               ;; ?QPWZ? : ED D6       ; 68 - Fuzz ball, line-guided 
                      .dw Return01D6C3                    ;; ?QPWZ? : C3 D6       ; 69 - Unused 
                      .dw Return0185C2                    ;; ?QPWZ? : C2 85       ; 6A - Coin game cloud 
                      .dw Return01843D                    ;; ?QPWZ? : 3D 84       ; 6B - Spring board, left wall 
                      .dw InitPeaBouncer                  ;; ?QPWZ? : 3E 84       ; 6C - Spring board, right wall 
                      .dw Return0185C2                    ;; ?QPWZ? : C2 85       ; 6D - Invisible solid block 
                      .dw InitDinos                       ;; ?QPWZ? : 58 85       ; 6E - Dino Rhino 
                      .dw InitDinos                       ;; ?QPWZ? : 58 85       ; 6F - Dino Torch 
                      .dw InitPokey                       ;; ?QPWZ? : 4B 85       ; 70 - Pokey 
                      .dw InitSuperKoopa                  ;; ?QPWZ? : 28 85       ; 71 - Super Koopa, red cape 
                      .dw InitSuperKoopa                  ;; ?QPWZ? : 28 85       ; 72 - Super Koopa, yellow cape 
                      .dw InitSuperKoopaFthr              ;; ?QPWZ? : 2E 85       ; 73 - Super Koopa, feather 
                      .dw InitPowerUp                     ;; ?QPWZ? : 8B 85       ; 74 - Mushroom 
                      .dw InitPowerUp                     ;; ?QPWZ? : 8B 85       ; 75 - Flower 
                      .dw InitPowerUp                     ;; ?QPWZ? : 8B 85       ; 76 - Star 
                      .dw InitPowerUp                     ;; ?QPWZ? : 8B 85       ; 77 - Feather 
                      .dw InitPowerUp                     ;; ?QPWZ? : 8B 85       ; 78 - 1-Up 
                      .dw Return018583                    ;; ?QPWZ? : 83 85       ; 79 - Growing Vine 
                      .dw Return018583                    ;; ?QPWZ? : 83 85       ; 7A - Firework 
                      .dw InitGoalTape                    ;; ?QPWZ? : 75 C0       ; 7B - Goal Point 
                      .dw Return0185C2                    ;; ?QPWZ? : C2 85       ; 7C - Princess Peach 
                      .dw Return0185C2                    ;; ?QPWZ? : C2 85       ; 7D - Balloon 
                      .dw Return0185C2                    ;; ?QPWZ? : C2 85       ; 7E - Flying Red coin 
                      .dw Return0185C2                    ;; ?QPWZ? : C2 85       ; 7F - Flying yellow 1-Up 
                      .dw InitKey+BabyYoshi               ;; ?QPWZ? : 35 84       ; 80 - Key 
                      .dw InitChangingItem                ;; ?QPWZ? : 3B 84       ; 81 - Changing item from translucent block 
                      .dw InitBonusGame                   ;; ?QPWZ? : AC DD       ; 82 - Bonus game sprite 
                      .dw InitFlying?Block                ;; ?QPWZ? : 59 AD       ; 83 - Left flying question block 
                      .dw InitFlying?Block                ;; ?QPWZ? : 59 AD       ; 84 - Flying question block 
                      .dw Return0185C2                    ;; ?QPWZ? : C2 85       ; 85 - Unused (Pretty sure) 
                      .dw InitWiggler                     ;; ?QPWZ? : 29 88       ; 86 - Wiggler 
                      .dw Return0185C2                    ;; ?QPWZ? : C2 85       ; 87 - Lakitu's cloud 
                      .dw InitWingedCage                  ;; ?QPWZ? : 6F 88       ; 88 - Unused (Winged cage sprite) 
                      .dw Return01843D                    ;; ?QPWZ? : 3D 84       ; 89 - Layer 3 smash 
                      .dw Return0185C2                    ;; ?QPWZ? : C2 85       ; 8A - Bird from Yoshi's house 
                      .dw Return0185C2                    ;; ?QPWZ? : C2 85       ; 8B - Puff of smoke from Yoshi's house 
                      .dw InitMsg+SideExit                ;; ?QPWZ? : DA 83       ; 8C - Fireplace smoke/exit from side screen 
                      .dw Return0185C2                    ;; ?QPWZ? : C2 85       ; 8D - Ghost house exit sign and door 
                      .dw Return0185C2                    ;; ?QPWZ? : C2 85       ; 8E - Invisible "Warp Hole" blocks 
                      .dw InitScalePlats                  ;; ?QPWZ? : B5 83       ; 8F - Scale platforms 
                      .dw FaceMario                       ;; ?QPWZ? : 7C 85       ; 90 - Large green gas bubble 
                      .dw Return018869                    ;; ?QPWZ? : 69 88       ; 91 - Chargin' Chuck 
                      .dw InitChuck                       ;; ?QPWZ? : 04 85       ; 92 - Splittin' Chuck 
                      .dw InitChuck                       ;; ?QPWZ? : 04 85       ; 93 - Bouncin' Chuck 
                      .dw InitWhistlinChuck               ;; ?QPWZ? : 00 85       ; 94 - Whistlin' Chuck 
                      .dw InitClappinChuck                ;; ?QPWZ? : E9 84       ; 95 - Clapin' Chuck 
                      .dw Return018869                    ;; ?QPWZ? : 69 88       ; 96 - Unused (Chargin' Chuck clone) 
                      .dw InitPuntinChuck                 ;; ?QPWZ? : FC 84       ; 97 - Puntin' Chuck 
                      .dw InitPitchinChuck                ;; ?QPWZ? : ED 84       ; 98 - Pitchin' Chuck 
                      .dw Return0183EE                    ;; ?QPWZ? : EE 83       ; 99 - Volcano Lotus 
                      .dw InitSumoBrother                 ;; ?QPWZ? : 73 83       ; 9A - Sumo Brother 
                      .dw InitHammerBrother               ;; ?QPWZ? : A7 87       ; 9B - Hammer Brother 
                      .dw Return0185C2                    ;; ?QPWZ? : C2 85       ; 9C - Flying blocks for Hammer Brother 
                      .dw InitBubbleSpr                   ;; ?QPWZ? : 64 85       ; 9D - Bubble with sprite 
                      .dw InitBallNChain                  ;; ?QPWZ? : 96 83       ; 9E - Ball and Chain 
                      .dw InitBanzai                      ;; ?QPWZ? : 87 83       ; 9F - Banzai Bill 
                      .dw InitBowserScene                 ;; ?QPWZ? : 6E 83       ; A0 - Activates Bowser scene 
                      .dw Return0185C2                    ;; ?QPWZ? : C2 85       ; A1 - Bowser's bowling ball 
                      .dw Return0185C2                    ;; ?QPWZ? : C2 85       ; A2 - MechaKoopa 
                      .dw InitGreyChainPlat               ;; ?QPWZ? : 9A 83       ; A3 - Grey platform on chain 
                      .dw InitFloatSpkBall                ;; ?QPWZ? : 16 B2       ; A4 - Floating Spike ball 
                      .dw InitFuzzBall+Spark              ;; ?QPWZ? : 0B 84       ; A5 - Fuzzball/Sparky, ground-guided 
                      .dw InitFuzzBall+Spark              ;; ?QPWZ? : 0B 84       ; A6 - HotHead, ground-guided 
                      .dw Return0185C2                    ;; ?QPWZ? : C2 85       ; A7 - Iggy's ball 
                      .dw Return0185C2                    ;; ?QPWZ? : C2 85       ; A8 - Blargg 
                      .dw InitReznor                      ;; ?QPWZ? : 89 87       ; A9 - Reznor 
                      .dw InitFishbone                    ;; ?QPWZ? : 8E 85       ; AA - Fishbone 
                      .dw FaceMario                       ;; ?QPWZ? : 7C 85       ; AB - Rex 
                      .dw InitWoodSpike                   ;; ?QPWZ? : 5B 83       ; AC - Wooden Spike, moving down and up 
                      .dw InitWoodSpike2                  ;; ?QPWZ? : 6B 83       ; AD - Wooden Spike, moving up/down first 
                      .dw Return0185C2                    ;; ?QPWZ? : C2 85       ; AE - Fishin' Boo 
                      .dw Return0185C2                    ;; ?QPWZ? : C2 85       ; AF - Boo Block 
                      .dw InitDiagBouncer                 ;; ?QPWZ? : 4E 83       ; B0 - Reflecting stream of Boo Buddies 
                      .dw InitCreateEatBlk                ;; ?QPWZ? : D6 84       ; B1 - Creating/Eating block 
                      .dw Return0185C2                    ;; ?QPWZ? : C2 85       ; B2 - Falling Spike 
                      .dw InitBowsersFire                 ;; ?QPWZ? : 84 85       ; B3 - Bowser statue fireball 
                      .dw FaceMario                       ;; ?QPWZ? : 7C 85       ; B4 - Grinder, non-line-guided 
                      .dw Return0185C2                    ;; ?QPWZ? : C2 85       ; B5 - Sinking fireball used in boss battles 
                      .dw InitDiagBouncer                 ;; ?QPWZ? : 4E 83       ; B6 - Reflecting fireball 
                      .dw Return0185C2                    ;; ?QPWZ? : C2 85       ; B7 - Carrot Top lift, upper right 
                      .dw Return0185C2                    ;; ?QPWZ? : C2 85       ; B8 - Carrot Top lift, upper left 
                      .dw Return0185C2                    ;; ?QPWZ? : C2 85       ; B9 - Info Box 
                      .dw InitTimedPlat                   ;; ?QPWZ? : 26 83       ; BA - Timed lift 
                      .dw Return0185C2                    ;; ?QPWZ? : C2 85       ; BB - Grey moving castle block 
                      .dw InitBowserStatue                ;; ?QPWZ? : 14 83       ; BC - Bowser statue 
                      .dw InitSlidingKoopa                ;; ?QPWZ? : 7D 83       ; BD - Sliding Koopa without a shell 
                      .dw Return0185C2                    ;; ?QPWZ? : C2 85       ; BE - Swooper bat 
                      .dw FaceMario                       ;; ?QPWZ? : 7C 85       ; BF - Mega Mole 
                      .dw InitGreyLavaPlat                ;; ?QPWZ? : 0F 83       ; C0 - Grey platform on lava 
                      .dw InitMontyMole                   ;; ?QPWZ? : CE 84       ; C1 - Flying grey turnblocks 
                      .dw FaceMario                       ;; ?QPWZ? : 7C 85       ; C2 - Blurp fish 
                      .dw FaceMario                       ;; ?QPWZ? : 7C 85       ; C3 - Porcu-Puffer fish 
                      .dw Return0185C2                    ;; ?QPWZ? : C2 85       ; C4 - Grey platform that falls 
                      .dw FaceMario                       ;; ?QPWZ? : 7C 85       ; C5 - Big Boo Boss 
                      .dw Return018313                    ;; ?QPWZ? : 13 83       ; C6 - Dark room with spot light 
                      .dw Return0185C2                    ;; ?QPWZ? : C2 85       ; C7 - Invisible mushroom 
                      .dw Return0185C2                    ;; ?QPWZ? : C2 85       ; C8 - Light switch block for dark room 
                                                          ;;                      ;
InitGreyLavaPlat:     INC RAM_SpriteYLo,X                 ;; ?QPWZ? : F6 D8       ;
CODE_018311:          INC RAM_SpriteYLo,X                 ;; 018311 : F6 D8       ;
Return018313:         RTS                                 ;; ?QPWZ? : 60          ;
                                                          ;;                      ;
InitBowserStatue:     INC.W RAM_SpriteDir,X               ;; ?QPWZ? : FE 7C 15    ;
CODE_018317:          JSR.W InitExplodingBlk              ;; 018317 : 20 A4 83    ;
CODE_01831A:          STY RAM_SpriteState,X               ;; 01831A : 94 C2       ;
CODE_01831C:          CPY.B #$02                          ;; 01831C : C0 02       ;
CODE_01831E:          BNE Return018325                    ;; 01831E : D0 05       ;
CODE_018320:          LDA.B #$01                          ;; 018320 : A9 01       ;
CODE_018322:          STA.W RAM_SpritePal,X               ;; 018322 : 9D F6 15    ;
Return018325:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
InitTimedPlat:        LDY.B #$3F                          ;; ?QPWZ? : A0 3F       ;
CODE_018328:          LDA RAM_SpriteXLo,X                 ;; 018328 : B5 E4       ;
CODE_01832A:          AND.B #$10                          ;; 01832A : 29 10       ;
CODE_01832C:          BNE CODE_018330                     ;; 01832C : D0 02       ;
CODE_01832E:          LDY.B #$FF                          ;; 01832E : A0 FF       ;
CODE_018330:          TYA                                 ;; 018330 : 98          ;
CODE_018331:          STA.W $1570,X                       ;; 018331 : 9D 70 15    ;
Return018334:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
YoshiPal:             .db $09,$07,$05,$07                 ;; ?QPWZ?               ;
                                                          ;;                      ;
InitYoshiEgg:         LDA RAM_SpriteXLo,X                 ;; ?QPWZ? : B5 E4       ;
CODE_01833B:          LSR                                 ;; 01833B : 4A          ;
CODE_01833C:          LSR                                 ;; 01833C : 4A          ;
CODE_01833D:          LSR                                 ;; 01833D : 4A          ;
CODE_01833E:          LSR                                 ;; 01833E : 4A          ;
CODE_01833F:          AND.B #$03                          ;; 01833F : 29 03       ;
CODE_018341:          TAY                                 ;; 018341 : A8          ;
CODE_018342:          LDA.W YoshiPal,Y                    ;; 018342 : B9 35 83    ;
CODE_018345:          STA.W RAM_SpritePal,X               ;; 018345 : 9D F6 15    ;
CODE_018348:          INC.W $187B,X                       ;; 018348 : FE 7B 18    ;
Return01834B:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
DATA_01834C:          .db $10,$F0                         ;; 01834C               ;
                                                          ;;                      ;
InitDiagBouncer:      JSR.W FaceMario                     ;; ?QPWZ? : 20 7C 85    ;
CODE_018351:          LDA.W DATA_01834C,Y                 ;; 018351 : B9 4C 83    ;
CODE_018354:          STA RAM_SpriteSpeedX,X              ;; 018354 : 95 B6       ;
CODE_018356:          LDA.B #$F0                          ;; 018356 : A9 F0       ;
CODE_018358:          STA RAM_SpriteSpeedY,X              ;; 018358 : 95 AA       ;
Return01835A:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
InitWoodSpike:        LDA RAM_SpriteYLo,X                 ;; ?QPWZ? : B5 D8       ;
CODE_01835D:          SEC                                 ;; 01835D : 38          ;
CODE_01835E:          SBC.B #$40                          ;; 01835E : E9 40       ;
CODE_018360:          STA RAM_SpriteYLo,X                 ;; 018360 : 95 D8       ;
CODE_018362:          LDA.W RAM_SpriteYHi,X               ;; 018362 : BD D4 14    ;
CODE_018365:          SBC.B #$00                          ;; 018365 : E9 00       ;
CODE_018367:          STA.W RAM_SpriteYHi,X               ;; 018367 : 9D D4 14    ;
Return01836A:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
InitWoodSpike2:       JMP.W InitMontyMole                 ;; ?QPWZ? : 4C CE 84    ;
                                                          ;;                      ;
InitBowserScene:      JSL.L CODE_03A0F1                   ;; ?QPWZ? : 22 F1 A0 03 ;
Return018372:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
InitSumoBrother:      LDA.B #$03                          ;; ?QPWZ? : A9 03       ;
CODE_018375:          STA RAM_SpriteState,X               ;; 018375 : 95 C2       ;
CODE_018377:          LDA.B #$70                          ;; 018377 : A9 70       ;
CODE_018379:          STA.W $1540,X                       ;; 018379 : 9D 40 15    ;
Return01837C:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
InitSlidingKoopa:     LDA.B #$04                          ;; ?QPWZ? : A9 04       ;
CODE_01837F:          BRA CODE_018379                     ;; 01837F : 80 F8       ;
                                                          ;;                      ;
InitGrowingPipe:      LDA.B #$40                          ;; ?QPWZ? : A9 40       ;
CODE_018383:          STA.W $1534,X                       ;; 018383 : 9D 34 15    ;
Return018386:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
InitBanzai:           JSR.W SubHorizPos                   ;; ?QPWZ? : 20 30 AD    ;
CODE_01838A:          TYA                                 ;; 01838A : 98          ;
CODE_01838B:          BNE CODE_018390                     ;; 01838B : D0 03       ;
ADDR_01838D:          JMP.W OffScrEraseSprite             ;; 01838D : 4C 80 AC    ;
                                                          ;;                      ;
CODE_018390:          LDA.B #$09                          ;; 018390 : A9 09       ;
CODE_018392:          STA.W $1DFC                         ;; 018392 : 8D FC 1D    ; / Play sound effect 
Return018395:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
InitBallNChain:       LDA.B #$38                          ;; ?QPWZ? : A9 38       ;
CODE_018398:          BRA CODE_01839C                     ;; 018398 : 80 02       ;
                                                          ;;                      ;
InitGreyChainPlat:    LDA.B #$30                          ;; ?QPWZ? : A9 30       ;
CODE_01839C:          STA.W $187B,X                       ;; 01839C : 9D 7B 18    ;
Return01839F:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
ExplodingBlkSpr:      .db $15,$0F,$00,$04                 ;; ?QPWZ?               ;
                                                          ;;                      ;
InitExplodingBlk:     LDA RAM_SpriteXLo,X                 ;; ?QPWZ? : B5 E4       ;
CODE_0183A6:          LSR                                 ;; 0183A6 : 4A          ;
CODE_0183A7:          LSR                                 ;; 0183A7 : 4A          ;
CODE_0183A8:          LSR                                 ;; 0183A8 : 4A          ;
CODE_0183A9:          LSR                                 ;; 0183A9 : 4A          ;
CODE_0183AA:          AND.B #$03                          ;; 0183AA : 29 03       ;
CODE_0183AC:          TAY                                 ;; 0183AC : A8          ;
CODE_0183AD:          LDA.W ExplodingBlkSpr,Y             ;; 0183AD : B9 A0 83    ;
CODE_0183B0:          STA RAM_SpriteState,X               ;; 0183B0 : 95 C2       ;
Return0183B2:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
DATA_0183B3:          .db $80,$40                         ;; 0183B3               ;
                                                          ;;                      ;
InitScalePlats:       LDA RAM_SpriteYLo,X                 ;; ?QPWZ? : B5 D8       ;
CODE_0183B7:          STA.W $1534,X                       ;; 0183B7 : 9D 34 15    ;
CODE_0183BA:          LDA.W RAM_SpriteYHi,X               ;; 0183BA : BD D4 14    ;
CODE_0183BD:          STA.W $151C,X                       ;; 0183BD : 9D 1C 15    ;
CODE_0183C0:          LDA RAM_SpriteXLo,X                 ;; 0183C0 : B5 E4       ;
CODE_0183C2:          AND.B #$10                          ;; 0183C2 : 29 10       ;
CODE_0183C4:          LSR                                 ;; 0183C4 : 4A          ;
CODE_0183C5:          LSR                                 ;; 0183C5 : 4A          ;
CODE_0183C6:          LSR                                 ;; 0183C6 : 4A          ;
CODE_0183C7:          LSR                                 ;; 0183C7 : 4A          ;
CODE_0183C8:          TAY                                 ;; 0183C8 : A8          ;
CODE_0183C9:          LDA RAM_SpriteXLo,X                 ;; 0183C9 : B5 E4       ;
CODE_0183CB:          CLC                                 ;; 0183CB : 18          ;
CODE_0183CC:          ADC.W DATA_0183B3,Y                 ;; 0183CC : 79 B3 83    ;
CODE_0183CF:          STA RAM_SpriteState,X               ;; 0183CF : 95 C2       ;
CODE_0183D1:          LDA.W RAM_SpriteXHi,X               ;; 0183D1 : BD E0 14    ;
CODE_0183D4:          ADC.B #$00                          ;; 0183D4 : 69 00       ;
CODE_0183D6:          STA.W $1602,X                       ;; 0183D6 : 9D 02 16    ;
Return0183D9:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
InitMsg+SideExit:     LDA.B #$28                          ;; ?QPWZ? : A9 28       ; \ Set current sprite's "disable contact with other sprites" timer to x28 
CODE_0183DC:          STA.W $1564,X                       ;; 0183DC : 9D 64 15    ; /  
Return0183DF:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
InitYoshi:            DEC.W $160E,X                       ;; ?QPWZ? : DE 0E 16    ;
ADDR_0183E3:          INC.W RAM_SpriteDir,X               ;; 0183E3 : FE 7C 15    ;
ADDR_0183E6:          LDA.W RAM_OWHasYoshi                ;; 0183E6 : AD C1 0D    ;
ADDR_0183E9:          BEQ Return0183EE                    ;; 0183E9 : F0 03       ;
ADDR_0183EB:          STZ.W $14C8,X                       ;; 0183EB : 9E C8 14    ;
Return0183EE:         RTS                                 ;; ?QPWZ? : 60          ;
                                                          ;;                      ;
                                                          ;;                      ;
DATA_0183EF:          .db $08                             ;; 0183EF               ;
                                                          ;;                      ;
DATA_0183F0:          .db $00,$08                         ;; 0183F0               ;
                                                          ;;                      ;
InitSpikeTop:         JSR.W SubHorizPos                   ;; ?QPWZ? : 20 30 AD    ;
CODE_0183F5:          TYA                                 ;; 0183F5 : 98          ;
CODE_0183F6:          EOR.B #$01                          ;; 0183F6 : 49 01       ;
CODE_0183F8:          ASL                                 ;; 0183F8 : 0A          ;
CODE_0183F9:          ASL                                 ;; 0183F9 : 0A          ;
CODE_0183FA:          ASL                                 ;; 0183FA : 0A          ;
CODE_0183FB:          ASL                                 ;; 0183FB : 0A          ;
CODE_0183FC:          JSR.W CODE_01841D                   ;; 0183FC : 20 1D 84    ;
CODE_0183FF:          STZ.W $164A,X                       ;; 0183FF : 9E 4A 16    ;
CODE_018402:          BRA CODE_01840E                     ;; 018402 : 80 0A       ;
                                                          ;;                      ;
InitUrchinWallFllw:   INC RAM_SpriteYLo,X                 ;; ?QPWZ? : F6 D8       ;
CODE_018406:          BNE InitFuzzBall+Spark              ;; 018406 : D0 03       ;
ADDR_018408:          INC.W RAM_SpriteYHi,X               ;; 018408 : FE D4 14    ;
InitFuzzBall+Spark:   JSR.W InitUrchin                    ;; ?QPWZ? : 20 1B 84    ;
CODE_01840E:          LDA.W $151C,X                       ;; 01840E : BD 1C 15    ;
CODE_018411:          EOR.B #$10                          ;; 018411 : 49 10       ;
CODE_018413:          STA.W $151C,X                       ;; 018413 : 9D 1C 15    ;
CODE_018416:          LSR                                 ;; 018416 : 4A          ;
CODE_018417:          LSR                                 ;; 018417 : 4A          ;
CODE_018418:          STA RAM_SpriteState,X               ;; 018418 : 95 C2       ;
Return01841A:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
InitUrchin:           LDA RAM_SpriteXLo,X                 ;; ?QPWZ? : B5 E4       ;
CODE_01841D:          LDY.B #$00                          ;; 01841D : A0 00       ;
CODE_01841F:          AND.B #$10                          ;; 01841F : 29 10       ;
CODE_018421:          STA.W $151C,X                       ;; 018421 : 9D 1C 15    ;
CODE_018424:          BNE CODE_018427                     ;; 018424 : D0 01       ;
CODE_018426:          INY                                 ;; 018426 : C8          ;
CODE_018427:          LDA.W DATA_0183EF,Y                 ;; 018427 : B9 EF 83    ;
CODE_01842A:          STA RAM_SpriteSpeedX,X              ;; 01842A : 95 B6       ;
CODE_01842C:          LDA.W DATA_0183F0,Y                 ;; 01842C : B9 F0 83    ;
CODE_01842F:          STA RAM_SpriteSpeedY,X              ;; 01842F : 95 AA       ;
InitRipVanFish:       INC.W $164A,X                       ;; ?QPWZ? : FE 4A 16    ;
Return018434:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
InitKey+BabyYoshi:    LDA.B #$09                          ;; ?QPWZ? : A9 09       ; \ Sprite status = Carryable 
CODE_018437:          STA.W $14C8,X                       ;; 018437 : 9D C8 14    ; / 
Return01843A:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
InitChangingItem:     INC RAM_SpriteState,X               ;; ?QPWZ? : F6 C2       ;
Return01843D:         RTS                                 ;; ?QPWZ? : 60          ;
                                                          ;;                      ;
InitPeaBouncer:       LDA RAM_SpriteXLo,X                 ;; ?QPWZ? : B5 E4       ;
CODE_018440:          SEC                                 ;; 018440 : 38          ;
CODE_018441:          SBC.B #$08                          ;; 018441 : E9 08       ;
CODE_018443:          STA RAM_SpriteXLo,X                 ;; 018443 : 95 E4       ;
CODE_018445:          LDA.W RAM_SpriteXHi,X               ;; 018445 : BD E0 14    ;
CODE_018448:          SBC.B #$00                          ;; 018448 : E9 00       ;
CODE_01844A:          STA.W RAM_SpriteXHi,X               ;; 01844A : 9D E0 14    ;
Return01844D:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
InitPSwitch:          LDA RAM_SpriteXLo,X                 ;; ?QPWZ? : B5 E4       ; \ $151C,x = Blue/Silver, 
CODE_018450:          LSR                                 ;; 018450 : 4A          ;  | depending on initial X position 
CODE_018451:          LSR                                 ;; 018451 : 4A          ;  | 
CODE_018452:          LSR                                 ;; 018452 : 4A          ;  | 
CODE_018453:          LSR                                 ;; 018453 : 4A          ;  | 
CODE_018454:          AND.B #$01                          ;; 018454 : 29 01       ;  | 
CODE_018456:          STA.W $151C,X                       ;; 018456 : 9D 1C 15    ; / 
CODE_018459:          TAY                                 ;; 018459 : A8          ; \ Store appropriate palette to RAM 
CODE_01845A:          LDA.W PSwitchPal,Y                  ;; 01845A : B9 66 84    ;  | 
CODE_01845D:          STA.W RAM_SpritePal,X               ;; 01845D : 9D F6 15    ; / 
CODE_018460:          LDA.B #$09                          ;; 018460 : A9 09       ; \ Sprite status = Carryable 
CODE_018462:          STA.W $14C8,X                       ;; 018462 : 9D C8 14    ; / 
Return018465:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
PSwitchPal:           .db $06,$02                         ;; ?QPWZ?               ;
                                                          ;;                      ;
ADDR_018468:          JMP.W OffScrEraseSprite             ;; 018468 : 4C 80 AC    ;
                                                          ;;                      ;
InitLakitu:           LDY.B #$09                          ;; ?QPWZ? : A0 09       ;
CODE_01846D:          CPY.W $15E9                         ;; 01846D : CC E9 15    ;
CODE_018470:          BEQ CODE_018484                     ;; 018470 : F0 12       ;
CODE_018472:          LDA.W $14C8,Y                       ;; 018472 : B9 C8 14    ;
CODE_018475:          CMP.B #$08                          ;; 018475 : C9 08       ;
CODE_018477:          BNE CODE_018484                     ;; 018477 : D0 0B       ;
CODE_018479:          LDA.W RAM_SpriteNum,Y               ;; 018479 : B9 9E 00    ;
CODE_01847C:          CMP.B #$87                          ;; 01847C : C9 87       ;
CODE_01847E:          BEQ ADDR_018468                     ;; 01847E : F0 E8       ;
CODE_018480:          CMP.B #$1E                          ;; 018480 : C9 1E       ;
CODE_018482:          BEQ ADDR_018468                     ;; 018482 : F0 E4       ;
CODE_018484:          DEY                                 ;; 018484 : 88          ;
CODE_018485:          BPL CODE_01846D                     ;; 018485 : 10 E6       ;
CODE_018487:          STZ.W RAM_TimeTillRespawn           ;; 018487 : 9C C0 18    ;
CODE_01848A:          STZ.W $18BF                         ;; 01848A : 9C BF 18    ;
CODE_01848D:          STZ.W RAM_GeneratorNum              ;; 01848D : 9C B9 18    ;
CODE_018490:          LDA RAM_SpriteYLo,X                 ;; 018490 : B5 D8       ;
CODE_018492:          STA.W $18C3                         ;; 018492 : 8D C3 18    ;
CODE_018495:          LDA.W RAM_SpriteYHi,X               ;; 018495 : BD D4 14    ;
CODE_018498:          STA.W $18C4                         ;; 018498 : 8D C4 18    ;
CODE_01849B:          JSL.L FindFreeSprSlot               ;; 01849B : 22 E4 A9 02 ;
CODE_01849F:          BMI InitMontyMole                   ;; 01849F : 30 2D       ;
CODE_0184A1:          STY.W $18E1                         ;; 0184A1 : 8C E1 18    ;
CODE_0184A4:          LDA.B #$87                          ;; 0184A4 : A9 87       ; \ Sprite = Lakitu Cloud 
CODE_0184A6:          STA.W RAM_SpriteNum,Y               ;; 0184A6 : 99 9E 00    ; / 
CODE_0184A9:          LDA.B #$08                          ;; 0184A9 : A9 08       ; \ Sprite status = Normal 
CODE_0184AB:          STA.W $14C8,Y                       ;; 0184AB : 99 C8 14    ; / 
CODE_0184AE:          LDA RAM_SpriteXLo,X                 ;; 0184AE : B5 E4       ;
CODE_0184B0:          STA.W RAM_SpriteXLo,Y               ;; 0184B0 : 99 E4 00    ;
CODE_0184B3:          LDA.W RAM_SpriteXHi,X               ;; 0184B3 : BD E0 14    ;
CODE_0184B6:          STA.W RAM_SpriteXHi,Y               ;; 0184B6 : 99 E0 14    ;
CODE_0184B9:          LDA RAM_SpriteYLo,X                 ;; 0184B9 : B5 D8       ;
CODE_0184BB:          STA.W RAM_SpriteYLo,Y               ;; 0184BB : 99 D8 00    ;
CODE_0184BE:          LDA.W RAM_SpriteYHi,X               ;; 0184BE : BD D4 14    ;
CODE_0184C1:          STA.W RAM_SpriteYHi,Y               ;; 0184C1 : 99 D4 14    ;
CODE_0184C4:          PHX                                 ;; 0184C4 : DA          ;
CODE_0184C5:          TYX                                 ;; 0184C5 : BB          ;
CODE_0184C6:          JSL.L InitSpriteTables              ;; 0184C6 : 22 D2 F7 07 ;
CODE_0184CA:          PLX                                 ;; 0184CA : FA          ;
CODE_0184CB:          STZ.W $18E0                         ;; 0184CB : 9C E0 18    ;
InitMontyMole:        LDA RAM_SpriteXLo,X                 ;; ?QPWZ? : B5 E4       ;
CODE_0184D0:          AND.B #$10                          ;; 0184D0 : 29 10       ;
CODE_0184D2:          STA.W $151C,X                       ;; 0184D2 : 9D 1C 15    ;
Return0184D5:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
InitCreateEatBlk:     LDA.B #$FF                          ;; ?QPWZ? : A9 FF       ;
CODE_0184D8:          STA.W $1909                         ;; 0184D8 : 8D 09 19    ;
CODE_0184DB:          BRA InitMontyMole                   ;; 0184DB : 80 F1       ;
                                                          ;;                      ;
InitBulletBill:       JSR.W SubHorizPos                   ;; ?QPWZ? : 20 30 AD    ;
CODE_0184E0:          TYA                                 ;; 0184E0 : 98          ;
CODE_0184E1:          STA RAM_SpriteState,X               ;; 0184E1 : 95 C2       ;
CODE_0184E3:          LDA.B #$10                          ;; 0184E3 : A9 10       ;
CODE_0184E5:          STA.W $1540,X                       ;; 0184E5 : 9D 40 15    ;
Return0184E8:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
InitClappinChuck:     LDA.B #$08                          ;; ?QPWZ? : A9 08       ;
CODE_0184EB:          BRA CODE_01851A                     ;; 0184EB : 80 2D       ;
                                                          ;;                      ;
InitPitchinChuck:     LDA RAM_SpriteXLo,X                 ;; ?QPWZ? : B5 E4       ;
CODE_0184EF:          AND.B #$30                          ;; 0184EF : 29 30       ;
CODE_0184F1:          LSR                                 ;; 0184F1 : 4A          ;
CODE_0184F2:          LSR                                 ;; 0184F2 : 4A          ;
CODE_0184F3:          LSR                                 ;; 0184F3 : 4A          ;
CODE_0184F4:          LSR                                 ;; 0184F4 : 4A          ;
CODE_0184F5:          STA.W $187B,X                       ;; 0184F5 : 9D 7B 18    ;
CODE_0184F8:          LDA.B #$0A                          ;; 0184F8 : A9 0A       ;
CODE_0184FA:          BRA CODE_01851A                     ;; 0184FA : 80 1E       ;
                                                          ;;                      ;
InitPuntinChuck:      LDA.B #$09                          ;; ?QPWZ? : A9 09       ;
CODE_0184FE:          BRA CODE_01851A                     ;; 0184FE : 80 1A       ;
                                                          ;;                      ;
InitWhistlinChuck:    LDA.B #$0B                          ;; ?QPWZ? : A9 0B       ;
CODE_018502:          BRA CODE_01851A                     ;; 018502 : 80 16       ;
                                                          ;;                      ;
InitChuck:            LDA.B #$05                          ;; ?QPWZ? : A9 05       ;
CODE_018506:          BRA CODE_01851A                     ;; 018506 : 80 12       ;
                                                          ;;                      ;
InitDigginChuck:      LDA.B #$30                          ;; ?QPWZ? : A9 30       ;
CODE_01850A:          STA.W $1540,X                       ;; 01850A : 9D 40 15    ;
CODE_01850D:          LDA RAM_SpriteXLo,X                 ;; 01850D : B5 E4       ;
CODE_01850F:          AND.B #$10                          ;; 01850F : 29 10       ;
CODE_018511:          LSR                                 ;; 018511 : 4A          ;
CODE_018512:          LSR                                 ;; 018512 : 4A          ;
CODE_018513:          LSR                                 ;; 018513 : 4A          ;
CODE_018514:          LSR                                 ;; 018514 : 4A          ;
CODE_018515:          STA.W RAM_SpriteDir,X               ;; 018515 : 9D 7C 15    ;
CODE_018518:          LDA.B #$04                          ;; 018518 : A9 04       ;
CODE_01851A:          STA RAM_SpriteState,X               ;; 01851A : 95 C2       ;
CODE_01851C:          JSR.W FaceMario                     ;; 01851C : 20 7C 85    ;
CODE_01851F:          LDA.W DATA_018526,Y                 ;; 01851F : B9 26 85    ;
CODE_018522:          STA.W $151C,X                       ;; 018522 : 9D 1C 15    ;
Return018525:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
DATA_018526:          .db $00,$04                         ;; 018526               ;
                                                          ;;                      ;
InitSuperKoopa:       LDA.B #$28                          ;; ?QPWZ? : A9 28       ;
CODE_01852A:          STA RAM_SpriteSpeedY,X              ;; 01852A : 95 AA       ;
CODE_01852C:          BRA FaceMario                       ;; 01852C : 80 4E       ;
                                                          ;;                      ;
InitSuperKoopaFthr:   JSR.W FaceMario                     ;; ?QPWZ? : 20 7C 85    ;
CODE_018531:          LDA RAM_SpriteXLo,X                 ;; 018531 : B5 E4       ;
CODE_018533:          AND.B #$10                          ;; 018533 : 29 10       ;
CODE_018535:          BEQ CODE_018547                     ;; 018535 : F0 10       ;
CODE_018537:          LDA.B #$10                          ;; 018537 : A9 10       ; \ Can be jumped on 
CODE_018539:          STA.W RAM_Tweaker1656,X             ;; 018539 : 9D 56 16    ; / 
CODE_01853C:          LDA.B #$80                          ;; 01853C : A9 80       ;
CODE_01853E:          STA.W RAM_Tweaker1662,X             ;; 01853E : 9D 62 16    ;
CODE_018541:          LDA.B #$10                          ;; 018541 : A9 10       ;
CODE_018543:          STA.W RAM_Tweaker1686,X             ;; 018543 : 9D 86 16    ;
Return018546:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_018547:          INC.W $1534,X                       ;; 018547 : FE 34 15    ;
Return01854A:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
InitPokey:            LDA.B #$1F                          ;; ?QPWZ? : A9 1F       ; \ If on Yoshi, $C2,x = #$1F 
CODE_01854D:          LDY.W RAM_OnYoshi                   ;; 01854D : AC 7A 18    ;  | (5 segments, 1 bit each) 
CODE_018550:          BNE CODE_018554                     ;; 018550 : D0 02       ;  | 
CODE_018552:          LDA.B #$07                          ;; 018552 : A9 07       ;  | If not on Yoshi, $C2,x = #$07 
CODE_018554:          STA RAM_SpriteState,X               ;; 018554 : 95 C2       ; /   (3 segments, 1 bit each) 
CODE_018556:          BRA FaceMario                       ;; 018556 : 80 24       ;
                                                          ;;                      ;
InitDinos:            LDA.B #$04                          ;; ?QPWZ? : A9 04       ;
CODE_01855A:          STA.W $151C,X                       ;; 01855A : 9D 1C 15    ;
InitBomb:             LDA.B #$FF                          ;; ?QPWZ? : A9 FF       ;
CODE_01855F:          STA.W $1540,X                       ;; 01855F : 9D 40 15    ;
CODE_018562:          BRA FaceMario                       ;; 018562 : 80 18       ;
                                                          ;;                      ;
InitBubbleSpr:        JSR.W InitExplodingBlk              ;; ?QPWZ? : 20 A4 83    ;
CODE_018567:          STY RAM_SpriteState,X               ;; 018567 : 94 C2       ;
CODE_018569:          DEC.W $1534,X                       ;; 018569 : DE 34 15    ;
CODE_01856C:          BRA FaceMario                       ;; 01856C : 80 0E       ;
                                                          ;;                      ;
InitGrnBounceKoopa:   LDA RAM_SpriteYLo,X                 ;; ?QPWZ? : B5 D8       ;
CODE_018570:          AND.B #$10                          ;; 018570 : 29 10       ;
CODE_018572:          STA.W $160E,X                       ;; 018572 : 9D 0E 16    ;
InitStandardSprite:   JSL.L GetRand                       ;; ?QPWZ? : 22 F9 AC 01 ;
CODE_018579:          STA.W $1570,X                       ;; 018579 : 9D 70 15    ;
FaceMario:            JSR.W SubHorizPos                   ;; ?QPWZ? : 20 30 AD    ;
CODE_01857F:          TYA                                 ;; 01857F : 98          ;
CODE_018580:          STA.W RAM_SpriteDir,X               ;; 018580 : 9D 7C 15    ;
Return018583:         RTS                                 ;; ?QPWZ? : 60          ;
                                                          ;;                      ;
InitBowsersFire:      LDA.B #$17                          ;; ?QPWZ? : A9 17       ;
CODE_018586:          STA.W $1DFC                         ;; 018586 : 8D FC 1D    ; / Play sound effect 
CODE_018589:          BRA FaceMario                       ;; 018589 : 80 F1       ;
                                                          ;;                      ;
InitPowerUp:          INC RAM_SpriteState,X               ;; ?QPWZ? : F6 C2       ;
Return01858D:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
InitFishbone:         JSL.L GetRand                       ;; ?QPWZ? : 22 F9 AC 01 ;
CODE_018592:          AND.B #$1F                          ;; 018592 : 29 1F       ;
CODE_018594:          STA.W $1540,X                       ;; 018594 : 9D 40 15    ;
CODE_018597:          JMP.W FaceMario                     ;; 018597 : 4C 7C 85    ;
                                                          ;;                      ;
InitDownPiranha:      ASL.W RAM_SpritePal,X               ;; ?QPWZ? : 1E F6 15    ;
CODE_01859D:          SEC                                 ;; 01859D : 38          ;
CODE_01859E:          ROR.W RAM_SpritePal,X               ;; 01859E : 7E F6 15    ;
CODE_0185A1:          LDA RAM_SpriteYLo,X                 ;; 0185A1 : B5 D8       ;
CODE_0185A3:          SEC                                 ;; 0185A3 : 38          ;
CODE_0185A4:          SBC.B #$10                          ;; 0185A4 : E9 10       ;
CODE_0185A6:          STA RAM_SpriteYLo,X                 ;; 0185A6 : 95 D8       ;
CODE_0185A8:          LDA.W RAM_SpriteYHi,X               ;; 0185A8 : BD D4 14    ;
CODE_0185AB:          SBC.B #$00                          ;; 0185AB : E9 00       ;
CODE_0185AD:          STA.W RAM_SpriteYHi,X               ;; 0185AD : 9D D4 14    ;
InitPiranha:          LDA RAM_SpriteXLo,X                 ;; ?QPWZ? : B5 E4       ; \ Center sprite between two tiles 
CODE_0185B2:          CLC                                 ;; 0185B2 : 18          ;  | 
CODE_0185B3:          ADC.B #$08                          ;; 0185B3 : 69 08       ;  | 
CODE_0185B5:          STA RAM_SpriteXLo,X                 ;; 0185B5 : 95 E4       ; / 
CODE_0185B7:          DEC RAM_SpriteYLo,X                 ;; 0185B7 : D6 D8       ;
CODE_0185B9:          LDA RAM_SpriteYLo,X                 ;; 0185B9 : B5 D8       ;
CODE_0185BB:          CMP.B #$FF                          ;; 0185BB : C9 FF       ;
CODE_0185BD:          BNE Return0185C2                    ;; 0185BD : D0 03       ;
CODE_0185BF:          DEC.W RAM_SpriteYHi,X               ;; 0185BF : DE D4 14    ;
Return0185C2:         RTS                                 ;; ?QPWZ? : 60          ;
                                                          ;;                      ;
CallSpriteMain:       STZ.W $1491                         ;; ?QPWZ? : 9C 91 14    ; CallSpriteMain 
CODE_0185C6:          LDA RAM_SpriteNum,X                 ;; 0185C6 : B5 9E       ;
CODE_0185C8:          JSL.L ExecutePtr                    ;; 0185C8 : 22 DF 86 00 ;
                                                          ;;                      ;
SpriteMainPtr:        .dw ShellessKoopas                  ;; ?QPWZ? : 04 89       ; 00 - Green Koopa, no shell 
                      .dw ShellessKoopas                  ;; ?QPWZ? : 04 89       ; 01 - Red Koopa, no shell 
                      .dw ShellessKoopas                  ;; ?QPWZ? : 04 89       ; 02 - Blue Koopa, no shell 
                      .dw ShellessKoopas                  ;; ?QPWZ? : 04 89       ; 03 - Yellow Koopa, no shell 
                      .dw Spr0to13Start                   ;; ?QPWZ? : FC 8A       ; 04 - Green Koopa 
                      .dw Spr0to13Start                   ;; ?QPWZ? : FC 8A       ; 05 - Red Koopa 
                      .dw Spr0to13Start                   ;; ?QPWZ? : FC 8A       ; 06 - Blue Koopa 
                      .dw Spr0to13Start                   ;; ?QPWZ? : FC 8A       ; 07 - Yellow Koopa 
                      .dw GreenParaKoopa                  ;; ?QPWZ? : 4D 8C       ; 08 - Green Koopa, flying left 
                      .dw GreenParaKoopa                  ;; ?QPWZ? : 4D 8C       ; 09 - Green bouncing Koopa 
                      .dw RedVertParaKoopa                ;; ?QPWZ? : C3 8C       ; 0A - Red vertical flying Koopa 
                      .dw RedHorzParaKoopa                ;; ?QPWZ? : BE 8C       ; 0B - Red horizontal flying Koopa 
                      .dw Spr0to13Start                   ;; ?QPWZ? : FC 8A       ; 0C - Yellow Koopa with wings 
                      .dw Bobomb                          ;; ?QPWZ? : E5 8A       ; 0D - Bob-omb 
                      .dw Keyhole                         ;; ?QPWZ? : C8 E1       ; 0E - Keyhole 
                      .dw Spr0to13Start                   ;; ?QPWZ? : FC 8A       ; 0F - Goomba 
                      .dw WingedGoomba                    ;; ?QPWZ? : 2E 8D       ; 10 - Bouncing Goomba with wings 
                      .dw Spr0to13Start                   ;; ?QPWZ? : FC 8A       ; 11 - Buzzy Beetle 
                      .dw Return01F87B                    ;; ?QPWZ? : 7B F8       ; 12 - Unused 
                      .dw Spr0to13Start                   ;; ?QPWZ? : FC 8A       ; 13 - Spiny 
                      .dw SpinyEgg                        ;; ?QPWZ? : 18 8C       ; 14 - Spiny falling 
                      .dw Fish                            ;; ?QPWZ? : 33 B0       ; 15 - Fish, horizontal 
                      .dw Fish                            ;; ?QPWZ? : 33 B0       ; 16 - Fish, vertical 
                      .dw GeneratedFish                   ;; ?QPWZ? : 92 B1       ; 17 - Fish, created from generator 
                      .dw JumpingFish                     ;; ?QPWZ? : B4 B1       ; 18 - Surface jumping fish 
                      .dw PSwitch                         ;; ?QPWZ? : 5B E7       ; 19 - Display text from level Message Box #1 
                      .dw ClassicPiranhas                 ;; ?QPWZ? : 76 8E       ; 1A - Classic Piranha Plant 
                      .dw Bank3SprHandler                 ;; ?QPWZ? : 8E 87       ; 1B - Bouncing football in place 
                      .dw BulletBill                      ;; ?QPWZ? : E7 8F       ; 1C - Bullet Bill 
                      .dw HoppingFlame                    ;; ?QPWZ? : 0D 8F       ; 1D - Hopping flame 
                      .dw Lakitu                          ;; ?QPWZ? : 97 8F       ; 1E - Lakitu 
                      .dw Magikoopa                       ;; ?QPWZ? : D6 BD       ; 1F - Magikoopa 
                      .dw MagikoopasMagic                 ;; ?QPWZ? : 38 BC       ; 20 - Magikoopa's magic 
                      .dw PowerUpRt                       ;; ?QPWZ? : 53 C3       ; 21 - Moving coin 
                      .dw ClimbingKoopa                   ;; ?QPWZ? : 7F B9       ; 22 - Green vertical net Koopa 
                      .dw ClimbingKoopa                   ;; ?QPWZ? : 7F B9       ; 23 - Red vertical net Koopa 
                      .dw ClimbingKoopa                   ;; ?QPWZ? : 7F B9       ; 24 - Green horizontal net Koopa 
                      .dw ClimbingKoopa                   ;; ?QPWZ? : 7F B9       ; 25 - Red horizontal net Koopa 
                      .dw Thwomp                          ;; ?QPWZ? : A3 AE       ; 26 - Thwomp 
                      .dw Thwimp                          ;; ?QPWZ? : 9F AF       ; 27 - Thwimp 
                      .dw BigBoo                          ;; ?QPWZ? : D5 F8       ; 28 - Big Boo 
                      .dw KoopaKid                        ;; ?QPWZ? : C1 FA       ; 29 - Koopa Kid 
                      .dw ClassicPiranhas                 ;; ?QPWZ? : 76 8E       ; 2A - Upside down Piranha Plant 
                      .dw SumosLightning                  ;; ?QPWZ? : B6 87       ; 2B - Sumo Brother's fire lightning 
                      .dw YoshiEgg                        ;; ?QPWZ? : 64 F7       ; 2C - Yoshi egg 
                      .dw Return0185C2                    ;; ?QPWZ? : C2 85       ; 2D - Baby green Yoshi 
                      .dw WallFollowers                   ;; ?QPWZ? : 5E 88       ; 2E - Spike Top 
                      .dw SpringBoard                     ;; ?QPWZ? : 23 E6       ; 2F - Portable spring board 
                      .dw DryBonesAndBeetle               ;; ?QPWZ? : 2B E4       ; 30 - Dry Bones, throws bones 
                      .dw DryBonesAndBeetle               ;; ?QPWZ? : 2B E4       ; 31 - Bony Beetle 
                      .dw DryBonesAndBeetle               ;; ?QPWZ? : 2B E4       ; 32 - Dry Bones, stay on ledge 
                      .dw Fireballs                       ;; ?QPWZ? : 93 E0       ; 33 - Fireball 
                      .dw BossFireball                    ;; ?QPWZ? : 4E D4       ; 34 - Boss fireball 
                      .dw Yoshi                           ;; ?QPWZ? : CA EB       ; 35 - Green Yoshi 
                      .dw DATA_01E41F                     ;; ?QPWZ? : 1F E4       ; 36 - Unused 
                      .dw Boo+BooBlock                    ;; ?QPWZ? : DC F8       ; 37 - Boo 
                      .dw Eerie                           ;; ?QPWZ? : 90 F8       ; 38 - Eerie 
                      .dw Eerie                           ;; ?QPWZ? : 90 F8       ; 39 - Eerie, wave motion 
                      .dw WallFollowers                   ;; ?QPWZ? : 5E 88       ; 3A - Urchin, fixed 
                      .dw WallFollowers                   ;; ?QPWZ? : 5E 88       ; 3B - Urchin, wall detect 
                      .dw WallFollowers                   ;; ?QPWZ? : 5E 88       ; 3C - Urchin, wall follow 
                      .dw RipVanFish                      ;; ?QPWZ? : 53 88       ; 3D - Rip Van Fish 
                      .dw PSwitch                         ;; ?QPWZ? : 5B E7       ; 3E - POW 
                      .dw ParachuteSprites                ;; ?QPWZ? : FB D4       ; 3F - Para-Goomba 
                      .dw ParachuteSprites                ;; ?QPWZ? : FB D4       ; 40 - Para-Bomb 
                      .dw Dolphin                         ;; ?QPWZ? : 85 88       ; 41 - Dolphin, horizontal 
                      .dw Dolphin                         ;; ?QPWZ? : 85 88       ; 42 - Dolphin2, horizontal 
                      .dw Dolphin                         ;; ?QPWZ? : 85 88       ; 43 - Dolphin, vertical 
                      .dw TorpedoTed                      ;; ?QPWZ? : 38 88       ; 44 - Torpedo Ted 
                      .dw DirectionalCoins                ;; ?QPWZ? : CA 87       ; 45 - Directional coins 
                      .dw DigginChuck                     ;; ?QPWZ? : 06 88       ; 46 - Diggin' Chuck 
                      .dw SwimJumpFish                    ;; ?QPWZ? : 0B 88       ; 47 - Swimming/Jumping fish 
                      .dw DigginChucksRock                ;; ?QPWZ? : 10 88       ; 48 - Diggin' Chuck's rock 
                      .dw GrowingPipe                     ;; ?QPWZ? : 15 88       ; 49 - Growing/shrinking pipe end 
                      .dw GoalSphere                      ;; ?QPWZ? : 63 87       ; 4A - Goal Point Question Sphere 
                      .dw PipeLakitu                      ;; ?QPWZ? : 01 88       ; 4B - Pipe dwelling Lakitu 
                      .dw ExplodingBlock                  ;; ?QPWZ? : CF 87       ; 4C - Exploding Block 
                      .dw MontyMole                       ;; ?QPWZ? : CF E2       ; 4D - Ground dwelling Monty Mole 
                      .dw MontyMole                       ;; ?QPWZ? : CF E2       ; 4E - Ledge dwelling Monty Mole 
                      .dw JumpingPiranha                  ;; ?QPWZ? : BB 87       ; 4F - Jumping Piranha Plant 
                      .dw JumpingPiranha                  ;; ?QPWZ? : BB 87       ; 50 - Jumping Piranha Plant, spit fire 
                      .dw Bank3SprHandler                 ;; ?QPWZ? : 8E 87       ; 51 - Ninji 
                      .dw MovingLedge                     ;; ?QPWZ? : 93 88       ; 52 - Moving ledge hole in ghost house 
                      .dw Return0185C2                    ;; ?QPWZ? : C2 85       ; 53 - Throw block sprite 
                      .dw ClimbingDoor                    ;; ?QPWZ? : CD BA       ; 54 - Climbing net door 
                      .dw Platforms                       ;; ?QPWZ? : 6C B2       ; 55 - Checkerboard platform, horizontal 
                      .dw Platforms                       ;; ?QPWZ? : 6C B2       ; 56 - Flying rock platform, horizontal 
                      .dw Platforms                       ;; ?QPWZ? : 6C B2       ; 57 - Checkerboard platform, vertical 
                      .dw Platforms                       ;; ?QPWZ? : 6C B2       ; 58 - Flying rock platform, vertical 
                      .dw TurnBlockBridge                 ;; ?QPWZ? : A5 B6       ; 59 - Turn block bridge, horizontal and vertical 
                      .dw HorzTurnBlkBridge               ;; ?QPWZ? : DA B6       ; 5A - Turn block bridge, horizontal 
                      .dw Platforms2                      ;; ?QPWZ? : 63 B5       ; 5B - Brown platform floating in water 
                      .dw Platforms2                      ;; ?QPWZ? : 63 B5       ; 5C - Checkerboard platform that falls 
                      .dw Platforms2                      ;; ?QPWZ? : 63 B5       ; 5D - Orange platform floating in water 
                      .dw OrangePlatform                  ;; ?QPWZ? : 36 B5       ; 5E - Orange platform, goes on forever 
                      .dw BrownChainedPlat                ;; ?QPWZ? : 73 C7       ; 5F - Brown platform on a chain 
                      .dw PalaceSwitch                    ;; ?QPWZ? : 91 AE       ; 60 - Flat green switch palace switch 
                      .dw FloatingSkulls                  ;; ?QPWZ? : DE 87       ; 61 - Floating skulls 
                      .dw LineFuzzy+Plats                 ;; ?QPWZ? : 4A D7       ; 62 - Brown platform, line-guided 
                      .dw LineFuzzy+Plats                 ;; ?QPWZ? : 4A D7       ; 63 - Checker/brown platform, line-guided 
                      .dw LineRope+Chainsaw               ;; ?QPWZ? : 19 D7       ; 64 - Rope mechanism, line-guided 
                      .dw LineRope+Chainsaw               ;; ?QPWZ? : 19 D7       ; 65 - Chainsaw, line-guided 
                      .dw LineRope+Chainsaw               ;; ?QPWZ? : 19 D7       ; 66 - Upside down chainsaw, line-guided 
                      .dw LineGrinder                     ;; ?QPWZ? : 3A D7       ; 67 - Grinder, line-guided 
                      .dw LineFuzzy+Plats                 ;; ?QPWZ? : 4A D7       ; 68 - Fuzz ball, line-guided 
                      .dw Return01D6C3                    ;; ?QPWZ? : C3 D6       ; 69 - Unused 
                      .dw CoinCloud                       ;; ?QPWZ? : 33 88       ; 6A - Coin game cloud 
                      .dw PeaBouncer                      ;; ?QPWZ? : 48 88       ; 6B - Spring board, left wall 
                      .dw PeaBouncer                      ;; ?QPWZ? : 48 88       ; 6C - Spring board, right wall 
                      .dw InvisSolid+Dinos                ;; ?QPWZ? : 5E 87       ; 6D - Invisible solid block 
                      .dw InvisSolid+Dinos                ;; ?QPWZ? : 5E 87       ; 6E - Dino Rhino 
                      .dw InvisSolid+Dinos                ;; ?QPWZ? : 5E 87       ; 6F - Dino Torch 
                      .dw Pokey                           ;; ?QPWZ? : ED 87       ; 70 - Pokey 
                      .dw RedSuperKoopa                   ;; ?QPWZ? : F2 87       ; 71 - Super Koopa, red cape 
                      .dw YellowSuperKoopa                ;; ?QPWZ? : F7 87       ; 72 - Super Koopa, yellow cape 
                      .dw FeatherSuperKoopa               ;; ?QPWZ? : FC 87       ; 73 - Super Koopa, feather 
                      .dw PowerUpRt                       ;; ?QPWZ? : 53 C3       ; 74 - Mushroom 
                      .dw FireFlower                      ;; ?QPWZ? : 49 C3       ; 75 - Flower 
                      .dw PowerUpRt                       ;; ?QPWZ? : 53 C3       ; 76 - Star 
                      .dw Feather                         ;; ?QPWZ? : ED C6       ; 77 - Feather 
                      .dw PowerUpRt                       ;; ?QPWZ? : 53 C3       ; 78 - 1-Up 
                      .dw GrowingVine                     ;; ?QPWZ? : 83 C1       ; 79 - Growing Vine 
                      .dw Bank3SprHandler                 ;; ?QPWZ? : 8E 87       ; 7A - Firework 
                      .dw GoalTape                        ;; ?QPWZ? : 98 C0       ; 7B - Goal Point 
                      .dw Bank3SprHandler                 ;; ?QPWZ? : 8E 87       ; 7C - Princess Peach 
                      .dw BalloonKeyFlyObjs               ;; ?QPWZ? : F2 C1       ; 7D - Balloon 
                      .dw BalloonKeyFlyObjs               ;; ?QPWZ? : F2 C1       ; 7E - Flying Red coin 
                      .dw BalloonKeyFlyObjs               ;; ?QPWZ? : F2 C1       ; 7F - Flying yellow 1-Up 
                      .dw BalloonKeyFlyObjs               ;; ?QPWZ? : F2 C1       ; 80 - Key 
                      .dw ChangingItem                    ;; ?QPWZ? : 17 C3       ; 81 - Changing item from translucent block 
                      .dw BonusGame                       ;; ?QPWZ? : 2A DE       ; 82 - Bonus game sprite 
                      .dw Flying?Block                    ;; ?QPWZ? : 6E AD       ; 83 - Left flying question block 
                      .dw Flying?Block                    ;; ?QPWZ? : 6E AD       ; 84 - Flying question block 
                      .dw InitFlying?Block                ;; ?QPWZ? : 59 AD       ; 85 - Unused (Pretty sure) 
                      .dw Wiggler                         ;; ?QPWZ? : 2E 88       ; 86 - Wiggler 
                      .dw LakituCloud                     ;; ?QPWZ? : A4 E7       ; 87 - Lakitu's cloud 
                      .dw WingedCage                      ;; ?QPWZ? : 7A 88       ; 88 - Unused (Winged cage sprite) 
                      .dw Layer3Smash                     ;; ?QPWZ? : 3D 88       ; 89 - Layer 3 smash 
                      .dw YoshisHouseBirds                ;; ?QPWZ? : 1A 88       ; 8A - Bird from Yoshi's house 
                      .dw YoshisHouseSmoke                ;; ?QPWZ? : 1F 88       ; 8B - Puff of smoke from Yoshi's house 
                      .dw SideExit                        ;; ?QPWZ? : 24 88       ; 8C - Fireplace smoke/exit from side screen 
                      .dw GhostHouseExit                  ;; ?QPWZ? : E3 87       ; 8D - Ghost house exit sign and door 
                      .dw WarpBlocks                      ;; ?QPWZ? : E8 87       ; 8E - Invisible "Warp Hole" blocks 
                      .dw ScalePlatforms                  ;; ?QPWZ? : D4 87       ; 8F - Scale platforms 
                      .dw GasBubble                       ;; ?QPWZ? : C0 87       ; 90 - Large green gas bubble 
                      .dw Chucks                          ;; ?QPWZ? : 6A 88       ; 91 - Chargin' Chuck 
                      .dw Chucks                          ;; ?QPWZ? : 6A 88       ; 92 - Splittin' Chuck 
                      .dw Chucks                          ;; ?QPWZ? : 6A 88       ; 93 - Bouncin' Chuck 
                      .dw Chucks                          ;; ?QPWZ? : 6A 88       ; 94 - Whistlin' Chuck 
                      .dw Chucks                          ;; ?QPWZ? : 6A 88       ; 95 - Clapin' Chuck 
                      .dw Chucks                          ;; ?QPWZ? : 6A 88       ; 96 - Unused (Chargin' Chuck clone) 
                      .dw Chucks                          ;; ?QPWZ? : 6A 88       ; 97 - Puntin' Chuck 
                      .dw Chucks                          ;; ?QPWZ? : 6A 88       ; 98 - Pitchin' Chuck 
                      .dw VolcanoLotus                    ;; ?QPWZ? : AC 87       ; 99 - Volcano Lotus 
                      .dw SumoBrother                     ;; ?QPWZ? : B1 87       ; 9A - Sumo Brother 
                      .dw HammerBrother                   ;; ?QPWZ? : 9D 87       ; 9B - Hammer Brother 
                      .dw FlyingPlatform                  ;; ?QPWZ? : A2 87       ; 9C - Flying blocks for Hammer Brother 
                      .dw BubbleWithSprite                ;; ?QPWZ? : 98 87       ; 9D - Bubble with sprite 
                      .dw BanzaiBnCGrayPlat               ;; ?QPWZ? : 93 87       ; 9E - Ball and Chain 
                      .dw BanzaiBnCGrayPlat               ;; ?QPWZ? : 93 87       ; 9F - Banzai Bill 
                      .dw Bank3SprHandler                 ;; ?QPWZ? : 8E 87       ; A0 - Activates Bowser scene 
                      .dw Bank3SprHandler                 ;; ?QPWZ? : 8E 87       ; A1 - Bowser's bowling ball 
                      .dw Bank3SprHandler                 ;; ?QPWZ? : 8E 87       ; A2 - MechaKoopa 
                      .dw BanzaiBnCGrayPlat               ;; ?QPWZ? : 93 87       ; A3 - Grey platform on chain 
                      .dw FloatingSpikeBall               ;; ?QPWZ? : 59 B5       ; A4 - Floating Spike ball 
                      .dw WallFollowers                   ;; ?QPWZ? : 5E 88       ; A5 - Fuzzball/Sparky, ground-guided 
                      .dw WallFollowers                   ;; ?QPWZ? : 5E 88       ; A6 - HotHead, ground-guided 
                      .dw Iggy'sBall                      ;; ?QPWZ? : 58 FA       ; A7 - Iggy's ball 
                      .dw Bank3SprHandler                 ;; ?QPWZ? : 8E 87       ; A8 - Blargg 
                      .dw Bank3SprHandler                 ;; ?QPWZ? : 8E 87       ; A9 - Reznor 
                      .dw Bank3SprHandler                 ;; ?QPWZ? : 8E 87       ; AA - Fishbone 
                      .dw Bank3SprHandler                 ;; ?QPWZ? : 8E 87       ; AB - Rex 
                      .dw Bank3SprHandler                 ;; ?QPWZ? : 8E 87       ; AC - Wooden Spike, moving down and up 
                      .dw Bank3SprHandler                 ;; ?QPWZ? : 8E 87       ; AD - Wooden Spike, moving up/down first 
                      .dw Bank3SprHandler                 ;; ?QPWZ? : 8E 87       ; AE - Fishin' Boo 
                      .dw Boo+BooBlock                    ;; ?QPWZ? : DC F8       ; AF - Boo Block 
                      .dw Bank3SprHandler                 ;; ?QPWZ? : 8E 87       ; B0 - Reflecting stream of Boo Buddies 
                      .dw Bank3SprHandler                 ;; ?QPWZ? : 8E 87       ; B1 - Creating/Eating block 
                      .dw Bank3SprHandler                 ;; ?QPWZ? : 8E 87       ; B2 - Falling Spike 
                      .dw Bank3SprHandler                 ;; ?QPWZ? : 8E 87       ; B3 - Bowser statue fireball 
                      .dw Grinder                         ;; ?QPWZ? : 5C DB       ; B4 - Grinder, non-line-guided 
                      .dw Fireballs                       ;; ?QPWZ? : 93 E0       ; B5 - Sinking fireball used in boss battles 
                      .dw Bank3SprHandler                 ;; ?QPWZ? : 8E 87       ; B6 - Reflecting fireball 
                      .dw Bank3SprHandler                 ;; ?QPWZ? : 8E 87       ; B7 - Carrot Top lift, upper right 
                      .dw Bank3SprHandler                 ;; ?QPWZ? : 8E 87       ; B8 - Carrot Top lift, upper left 
                      .dw Bank3SprHandler                 ;; ?QPWZ? : 8E 87       ; B9 - Info Box 
                      .dw Bank3SprHandler                 ;; ?QPWZ? : 8E 87       ; BA - Timed lift 
                      .dw Bank3SprHandler                 ;; ?QPWZ? : 8E 87       ; BB - Grey moving castle block 
                      .dw Bank3SprHandler                 ;; ?QPWZ? : 8E 87       ; BC - Bowser statue 
                      .dw Bank3SprHandler                 ;; ?QPWZ? : 8E 87       ; BD - Sliding Koopa without a shell 
                      .dw Bank3SprHandler                 ;; ?QPWZ? : 8E 87       ; BE - Swooper bat 
                      .dw Bank3SprHandler                 ;; ?QPWZ? : 8E 87       ; BF - Mega Mole 
                      .dw Bank3SprHandler                 ;; ?QPWZ? : 8E 87       ; C0 - Grey platform on lava 
                      .dw Bank3SprHandler                 ;; ?QPWZ? : 8E 87       ; C1 - Flying grey turnblocks 
                      .dw Bank3SprHandler                 ;; ?QPWZ? : 8E 87       ; C2 - Blurp fish 
                      .dw Bank3SprHandler                 ;; ?QPWZ? : 8E 87       ; C3 - Porcu-Puffer fish 
                      .dw Bank3SprHandler                 ;; ?QPWZ? : 8E 87       ; C4 - Grey platform that falls 
                      .dw Bank3SprHandler                 ;; ?QPWZ? : 8E 87       ; C5 - Big Boo Boss 
                      .dw Bank3SprHandler                 ;; ?QPWZ? : 8E 87       ; C6 - Dark room with spot light 
                      .dw Bank3SprHandler                 ;; ?QPWZ? : 8E 87       ; C7 - Invisible mushroom 
                      .dw Bank3SprHandler                 ;; ?QPWZ? : 8E 87       ; C8 - Light switch block for dark room 
                                                          ;;                      ;
InvisSolid+Dinos:     JSL.L InvisBlk+DinosMain            ;; ?QPWZ? : 22 34 9C 03 ;
Return018762:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
GoalSphere:           JSR.W SubSprGfx2Entry1              ;; ?QPWZ? : 20 0D 9F    ;
CODE_018766:          LDA RAM_SpritesLocked               ;; 018766 : A5 9D       ; \ Branch if sprites locked 
CODE_018768:          BNE Return018788                    ;; 018768 : D0 1E       ; / 
CODE_01876A:          LDA RAM_FrameCounter                ;; 01876A : A5 13       ;
CODE_01876C:          AND.B #$1F                          ;; 01876C : 29 1F       ;
CODE_01876E:          ORA RAM_SpritesLocked               ;; 01876E : 05 9D       ;
CODE_018770:          JSR.W CODE_01B152                   ;; 018770 : 20 52 B1    ;
CODE_018773:          JSR.W MarioSprInteractRt            ;; 018773 : 20 E4 A7    ;
CODE_018776:          BCC Return018788                    ;; 018776 : 90 10       ;
CODE_018778:          STZ.W $14C8,X                       ;; 018778 : 9E C8 14    ;
CODE_01877B:          LDA.B #$FF                          ;; 01877B : A9 FF       ;
CODE_01877D:          STA.W $1493                         ;; 01877D : 8D 93 14    ;
CODE_018780:          STA.W $0DDA                         ;; 018780 : 8D DA 0D    ;
CODE_018783:          LDA.B #$0B                          ;; 018783 : A9 0B       ;
CODE_018785:          STA.W $1DFB                         ;; 018785 : 8D FB 1D    ; / Change music 
Return018788:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
InitReznor:           JSL.L ReznorInit                    ;; ?QPWZ? : 22 72 98 03 ;
Return01878D:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
Bank3SprHandler:      JSL.L Bnk3CallSprMain               ;; ?QPWZ? : 22 18 A1 03 ;
Return018792:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
BanzaiBnCGrayPlat:    JSL.L Banzai+Rotating               ;; ?QPWZ? : 22 17 D6 02 ;
Return018797:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
BubbleWithSprite:     JSL.L BubbleSpriteMain              ;; ?QPWZ? : 22 AD D8 02 ;
Return01879C:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
HammerBrother:        JSL.L HammerBrotherMain             ;; ?QPWZ? : 22 52 DA 02 ;
Return0187A1:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
FlyingPlatform:       JSL.L FlyingPlatformMain            ;; ?QPWZ? : 22 4C DB 02 ;
Return0187A6:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
InitHammerBrother:    JSL.L Return02DA59                  ;; ?QPWZ? : 22 59 DA 02 ; Do nothing at all (Might as well be NOPs) 
Return0187AB:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
VolcanoLotus:         JSL.L VolcanoLotusMain              ;; ?QPWZ? : 22 8B DF 02 ;
Return0187B0:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
SumoBrother:          JSL.L SumoBrotherMain               ;; ?QPWZ? : 22 AF DC 02 ;
Return0187B5:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
SumosLightning:       JSL.L SumosLightningMain            ;; ?QPWZ? : 22 A8 DE 02 ;
Return0187BA:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
JumpingPiranha:       JSL.L JumpingPiranhaMain            ;; ?QPWZ? : 22 C5 E0 02 ;
Return0187BF:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
GasBubble:            JSL.L GasBubbleMain                 ;; ?QPWZ? : 22 03 E3 02 ;
Return0187C4:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
Unused0187C5:         JSL.L SumoBrotherMain               ;; ?QPWZ? : 22 AF DC 02 ; Unused call to main Sumo Brother routine 
Return0187C9:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
DirectionalCoins:     JSL.L DirectionCoinsMain            ;; ?QPWZ? : 22 15 E2 02 ;
Return0187CE:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
ExplodingBlock:       JSL.L ExplodingBlkMain              ;; ?QPWZ? : 22 17 E4 02 ;
Return0187D3:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
ScalePlatforms:       JSL.L ScalePlatformMain             ;; ?QPWZ? : 22 95 E4 02 ;
Return0187D8:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
InitFloatingSkull:    JSL.L FloatingSkullInit             ;; ?QPWZ? : 22 82 ED 02 ;
Return0187DD:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
FloatingSkulls:       JSL.L FloatingSkullMain             ;; ?QPWZ? : 22 D0 ED 02 ;
Return0187E2:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
GhostHouseExit:       JSL.L GhostExitMain                 ;; ?QPWZ? : 22 94 F5 02 ;
Return0187E7:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
WarpBlocks:           JSL.L WarpBlocksMain                ;; ?QPWZ? : 22 D2 EA 02 ;
Return0187EC:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
Pokey:                JSL.L PokeyMain                     ;; ?QPWZ? : 22 36 B6 02 ;
Return0187F1:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
RedSuperKoopa:        JSL.L SuperKoopaMain                ;; ?QPWZ? : 22 27 EB 02 ;
Return0187F6:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
YellowSuperKoopa:     JSL.L SuperKoopaMain                ;; ?QPWZ? : 22 27 EB 02 ;
Return0187FB:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
FeatherSuperKoopa:    JSL.L SuperKoopaMain                ;; ?QPWZ? : 22 27 EB 02 ;
Return018800:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
PipeLakitu:           JSL.L PipeLakituMain                ;; ?QPWZ? : 22 35 E9 02 ;
Return018805:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
DigginChuck:          JSL.L ChucksMain                    ;; ?QPWZ? : 22 F5 C1 02 ;
Return01880A:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
SwimJumpFish:         JSL.L SwimJumpFishMain              ;; ?QPWZ? : 22 1F E7 02 ;
Return01880F:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
DigginChucksRock:     JSL.L ChucksRockMain                ;; ?QPWZ? : 22 B5 E7 02 ;
Return018814:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
GrowingPipe:          JSL.L GrowingPipeMain               ;; ?QPWZ? : 22 2D E8 02 ;
Return018819:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
YoshisHouseBirds:     JSL.L BirdsMain                     ;; ?QPWZ? : 22 0F F3 02 ;
Return01881E:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
YoshisHouseSmoke:     JSL.L SmokeMain                     ;; ?QPWZ? : 22 2C F4 02 ;
Return018823:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
SideExit:             JSL.L SideExitMain                  ;; ?QPWZ? : 22 CD F4 02 ;
Return018828:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
InitWiggler:          JSL.L WigglerInit                   ;; ?QPWZ? : 22 F2 EF 02 ;
Return01882D:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
Wiggler:              JSL.L WigglerMain                   ;; ?QPWZ? : 22 29 F0 02 ;
Return018832:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CoinCloud:            JSL.L CoinCloudMain                 ;; ?QPWZ? : 22 A9 EE 02 ;
Return018837:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
TorpedoTed:           JSL.L TorpedoTedMain                ;; ?QPWZ? : 22 82 B8 02 ;
Return01883C:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
Layer3Smash:          PHB                                 ;; ?QPWZ? : 8B          ;
CODE_01883E:          LDA.B #$02                          ;; 01883E : A9 02       ;
CODE_018840:          PHA                                 ;; 018840 : 48          ;
CODE_018841:          PLB                                 ;; 018841 : AB          ;
CODE_018842:          JSL.L Layer3SmashMain               ;; 018842 : 22 EA D3 02 ;
CODE_018846:          PLB                                 ;; 018846 : AB          ;
Return018847:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
PeaBouncer:           PHB                                 ;; ?QPWZ? : 8B          ;
CODE_018849:          LDA.B #$02                          ;; 018849 : A9 02       ;
CODE_01884B:          PHA                                 ;; 01884B : 48          ;
CODE_01884C:          PLB                                 ;; 01884C : AB          ;
CODE_01884D:          JSL.L PeaBouncerMain                ;; 01884D : 22 CB CD 02 ;
CODE_018851:          PLB                                 ;; 018851 : AB          ;
Return018852:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
RipVanFish:           PHB                                 ;; ?QPWZ? : 8B          ;
CODE_018854:          LDA.B #$02                          ;; 018854 : A9 02       ;
CODE_018856:          PHA                                 ;; 018856 : 48          ;
CODE_018857:          PLB                                 ;; 018857 : AB          ;
CODE_018858:          JSL.L RipVanFishMain                ;; 018858 : 22 CD BF 02 ;
CODE_01885C:          PLB                                 ;; 01885C : AB          ;
Return01885D:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
WallFollowers:        PHB                                 ;; ?QPWZ? : 8B          ;
CODE_01885F:          LDA.B #$02                          ;; 01885F : A9 02       ;
CODE_018861:          PHA                                 ;; 018861 : 48          ;
CODE_018862:          PLB                                 ;; 018862 : AB          ;
CODE_018863:          JSL.L WallFollowersMain             ;; 018863 : 22 DB BC 02 ;
CODE_018867:          PLB                                 ;; 018867 : AB          ;
Return018868:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
Return018869:         RTS                                 ;; ?QPWZ? : 60          ;
                                                          ;;                      ;
Chucks:               JSL.L ChucksMain                    ;; ?QPWZ? : 22 F5 C1 02 ;
Return01886E:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
InitWingedCage:       PHB                                 ;; ?QPWZ? : 8B          ; \ Do nothing at all 
ADDR_018870:          LDA.B #$02                          ;; 018870 : A9 02       ;  | (Might as well be NOPs) 
ADDR_018872:          PHA                                 ;; 018872 : 48          ;  | 
ADDR_018873:          PLB                                 ;; 018873 : AB          ;  | 
ADDR_018874:          JSL.L Return02CBFD                  ;; 018874 : 22 FD CB 02 ;  | 
ADDR_018878:          PLB                                 ;; 018878 : AB          ; / 
Return018879:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
WingedCage:           PHB                                 ;; ?QPWZ? : 8B          ;
ADDR_01887B:          LDA.B #$02                          ;; 01887B : A9 02       ;
ADDR_01887D:          PHA                                 ;; 01887D : 48          ;
ADDR_01887E:          PLB                                 ;; 01887E : AB          ;
ADDR_01887F:          JSL.L WingedCageMain                ;; 01887F : 22 FE CB 02 ;
ADDR_018883:          PLB                                 ;; 018883 : AB          ;
Return018884:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
Dolphin:              PHB                                 ;; ?QPWZ? : 8B          ;
CODE_018886:          LDA.B #$02                          ;; 018886 : A9 02       ;
CODE_018888:          PHA                                 ;; 018888 : 48          ;
CODE_018889:          PLB                                 ;; 018889 : AB          ;
CODE_01888A:          JSL.L DolphinMain                   ;; 01888A : 22 94 BB 02 ;
CODE_01888E:          PLB                                 ;; 01888E : AB          ;
Return01888F:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
InitMovingLedge:      DEC RAM_SpriteYLo,X                 ;; ?QPWZ? : D6 D8       ;
Return018892:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
MovingLedge:          JSL.L MovingLedgeMain               ;; ?QPWZ? : 22 B4 E5 02 ;
Return018897:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
JumpOverShells:       TXA                                 ;; ?QPWZ? : 8A          ; \ Process every 4 frames 
CODE_018899:          EOR RAM_FrameCounter                ;; 018899 : 45 13       ;  | 
CODE_01889B:          AND.B #$03                          ;; 01889B : 29 03       ;  | 
CODE_01889D:          BNE Return0188AB                    ;; 01889D : D0 0C       ; / 
CODE_01889F:          LDY.B #$09                          ;; 01889F : A0 09       ; \ Loop over sprites: 
JumpLoopStart:        LDA.W $14C8,Y                       ;; ?QPWZ? : B9 C8 14    ;  | 
CODE_0188A4:          CMP.B #$0A                          ;; 0188A4 : C9 0A       ;  | If sprite status = kicked, try to jump it 
CODE_0188A6:          BEQ HandleJumpOver                  ;; 0188A6 : F0 04       ;  | 
JumpLoopNext:         DEY                                 ;; ?QPWZ? : 88          ;  | 
CODE_0188A9:          BPL JumpLoopStart                   ;; 0188A9 : 10 F6       ; / 
Return0188AB:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
HandleJumpOver:       LDA.W RAM_SpriteXLo,Y               ;; ?QPWZ? : B9 E4 00    ;
CODE_0188AF:          SEC                                 ;; 0188AF : 38          ;
CODE_0188B0:          SBC.B #$1A                          ;; 0188B0 : E9 1A       ;
CODE_0188B2:          STA $00                             ;; 0188B2 : 85 00       ;
CODE_0188B4:          LDA.W RAM_SpriteXHi,Y               ;; 0188B4 : B9 E0 14    ;
CODE_0188B7:          SBC.B #$00                          ;; 0188B7 : E9 00       ;
CODE_0188B9:          STA $08                             ;; 0188B9 : 85 08       ;
CODE_0188BB:          LDA.B #$44                          ;; 0188BB : A9 44       ;
CODE_0188BD:          STA $02                             ;; 0188BD : 85 02       ;
CODE_0188BF:          LDA.W RAM_SpriteYLo,Y               ;; 0188BF : B9 D8 00    ;
CODE_0188C2:          STA $01                             ;; 0188C2 : 85 01       ;
CODE_0188C4:          LDA.W RAM_SpriteYHi,Y               ;; 0188C4 : B9 D4 14    ;
CODE_0188C7:          STA $09                             ;; 0188C7 : 85 09       ;
CODE_0188C9:          LDA.B #$10                          ;; 0188C9 : A9 10       ;
CODE_0188CB:          STA $03                             ;; 0188CB : 85 03       ;
CODE_0188CD:          JSL.L GetSpriteClippingA            ;; 0188CD : 22 9F B6 03 ;
CODE_0188D1:          JSL.L CheckForContact               ;; 0188D1 : 22 2B B7 03 ;
CODE_0188D5:          BCC JumpLoopNext                    ;; 0188D5 : 90 D1       ; If not close to shell, go back to main loop 
CODE_0188D7:          JSR.W IsOnGround                    ;; 0188D7 : 20 0E 80    ; \ If sprite not on ground, go back to main loop 
CODE_0188DA:          BEQ JumpLoopNext                    ;; 0188DA : F0 CC       ; / 
CODE_0188DC:          LDA.W RAM_SpriteDir,Y               ;; 0188DC : B9 7C 15    ; \ If sprite not facing shell, don't jump 
CODE_0188DF:          CMP.W RAM_SpriteDir,X               ;; 0188DF : DD 7C 15    ;  | 
CODE_0188E2:          BEQ Return0188EB                    ;; 0188E2 : F0 07       ; / 
CODE_0188E4:          LDA.B #$C0                          ;; 0188E4 : A9 C0       ; \ Finally set jump speed 
CODE_0188E6:          STA RAM_SpriteSpeedY,X              ;; 0188E6 : 95 AA       ; / 
CODE_0188E8:          STZ.W $163E,X                       ;; 0188E8 : 9E 3E 16    ;
Return0188EB:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
Spr0to13SpeedX:       .db $08,$F8,$0C,$F4                 ;; ?QPWZ?               ;
                                                          ;;                      ;
Spr0to13Prop:         .db $00,$02,$03,$0D,$40,$42,$43,$45 ;; ?QPWZ?               ;
                      .db $50,$50,$50,$5C,$DD,$05,$00,$20 ;; ?QPWZ?               ;
                      .db $20,$00,$00,$00                 ;; ?QPWZ?               ;
                                                          ;;                      ;
ShellessKoopas:       LDA RAM_SpritesLocked               ;; ?QPWZ? : A5 9D       ; \ If sprites aren't locked, 
CODE_018906:          BEQ CODE_018952                     ;; 018906 : F0 4A       ; / branch to $8952 
CODE_018908:          LDA.W $163E,X                       ;; 018908 : BD 3E 16    ;COME BACK HERE ON NOT STATIONARY BRANCH             
CODE_01890B:          CMP.B #$80                          ;; 01890B : C9 80       ;
CODE_01890D:          BCC CODE_01891F                     ;; 01890D : 90 10       ;
CODE_01890F:          LDA RAM_SpritesLocked               ;; 01890F : A5 9D       ; \ If sprites are locked, 
CODE_018911:          BNE CODE_01891F                     ;; 018911 : D0 0C       ; / branch to $891F 
CODE_018913:          JSR.W SetAnimationFrame             ;; 018913 : 20 5F 8E    ;
CODE_018916:          LDA.W $1602,X                       ;; 018916 : BD 02 16    ; \  
CODE_018919:          CLC                                 ;; 018919 : 18          ;  |Increase sprite's image by x05 
CODE_01891A:          ADC.B #$05                          ;; 01891A : 69 05       ;  | 
CODE_01891C:          STA.W $1602,X                       ;; 01891C : 9D 02 16    ; /  
CODE_01891F:          JSR.W CODE_018931                   ;; 01891F : 20 31 89    ;
CODE_018922:          JSR.W SubUpdateSprPos               ;; 018922 : 20 32 90    ;
CODE_018925:          STZ RAM_SpriteSpeedX,X              ;; 018925 : 74 B6       ; Sprite X Speed = 0 
CODE_018927:          JSR.W IsOnGround                    ;; 018927 : 20 0E 80    ; \ If sprite is on edge (on ground), 
CODE_01892A:          BEQ CODE_01892E                     ;; 01892A : F0 02       ;  |Sprite Y Speed = 0 
CODE_01892C:          STZ RAM_SpriteSpeedY,X              ;; 01892C : 74 AA       ; /  
CODE_01892E:          JMP.W CODE_018B03                   ;; 01892E : 4C 03 8B    ;
                                                          ;;                      ;
CODE_018931:          LDA RAM_SpriteNum,X                 ;; 018931 : B5 9E       ; \  
CODE_018933:          CMP.B #$02                          ;; 018933 : C9 02       ;  |If sprite isn't Blue shelless Koopa, 
CODE_018935:          BNE CODE_01893C                     ;; 018935 : D0 05       ; / branch to $893C 
CODE_018937:          JSR.W MarioSprInteractRt            ;; 018937 : 20 E4 A7    ;
CODE_01893A:          BRA Return018951                    ;; 01893A : 80 15       ;
                                                          ;;                      ;
CODE_01893C:          ASL.W RAM_Tweaker167A,X             ;; 01893C : 1E 7A 16    ;
CODE_01893F:          SEC                                 ;; 01893F : 38          ;
CODE_018940:          ROR.W RAM_Tweaker167A,X             ;; 018940 : 7E 7A 16    ;
CODE_018943:          JSR.W MarioSprInteractRt            ;; 018943 : 20 E4 A7    ;
CODE_018946:          BCC CODE_01894B                     ;; 018946 : 90 03       ;
CODE_018948:          JSR.W CODE_01B12A                   ;; 018948 : 20 2A B1    ;
CODE_01894B:          ASL.W RAM_Tweaker167A,X             ;; 01894B : 1E 7A 16    ;
CODE_01894E:          LSR.W RAM_Tweaker167A,X             ;; 01894E : 5E 7A 16    ;
Return018951:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_018952:          LDA.W $163E,X                       ;; 018952 : BD 3E 16    ;CODE RUNA T START?        
CODE_018955:          BEQ CODE_0189B4                     ;; 018955 : F0 5D       ;SKIP IF $163E IS ZERO FOR SPRITE.  IS KICKING SHELL TIMER / GENREAL TIME          
CODE_018957:          CMP.B #$80                          ;; 018957 : C9 80       ;
CODE_018959:          BNE CODE_01896B                     ;; 018959 : D0 10       ;
CODE_01895B:          JSR.W FaceMario                     ;; 01895B : 20 7C 85    ;
CODE_01895E:          LDA RAM_SpriteNum,X                 ;; 01895E : B5 9E       ; \  
CODE_018960:          CMP.B #$02                          ;; 018960 : C9 02       ;  |If sprite is Blue shelless Koopa, 
CODE_018962:          BEQ CODE_018968                     ;; 018962 : F0 04       ;  |Set Y speed to xE0 
CODE_018964:          LDA.B #$E0                          ;; 018964 : A9 E0       ;  | 
CODE_018966:          STA RAM_SpriteSpeedY,X              ;; 018966 : 95 AA       ; /  
CODE_018968:          STZ.W $163E,X                       ;; 018968 : 9E 3E 16    ;ZERO KICKING SHELL TIMER             
CODE_01896B:          CMP.B #$01                          ;; 01896B : C9 01       ;
CODE_01896D:          BNE CODE_018908                     ;; 01896D : D0 99       ;
CODE_01896F:          LDY.W $160E,X                       ;; 01896F : BC 0E 16    ;IT KICKS THIS? !@#             
CODE_018972:          LDA.W $14C8,Y                       ;; 018972 : B9 C8 14    ;
CODE_018975:          CMP.B #$09                          ;; 018975 : C9 09       ;IF NOT STATIONARY, BRANCH                
CODE_018977:          BNE CODE_018908                     ;; 018977 : D0 8F       ;
CODE_018979:          LDA RAM_SpriteXLo,X                 ;; 018979 : B5 E4       ;KOOPA BLUE KICK SHELL!       
CODE_01897B:          SEC                                 ;; 01897B : 38          ;
CODE_01897C:          SBC.W RAM_SpriteXLo,Y               ;; 01897C : F9 E4 00    ;
CODE_01897F:          CLC                                 ;; 01897F : 18          ;
CODE_018980:          ADC.B #$12                          ;; 018980 : 69 12       ;
CODE_018982:          CMP.B #$24                          ;; 018982 : C9 24       ;
CODE_018984:          BCS CODE_018908                     ;; 018984 : B0 82       ;
CODE_018986:          JSR.W PlayKickSfx                   ;; 018986 : 20 28 A7    ;
CODE_018989:          JSR.W CODE_01A755                   ;; 018989 : 20 55 A7    ;
CODE_01898C:          LDY.W RAM_SpriteDir,X               ;; 01898C : BC 7C 15    ;
CODE_01898F:          LDA.W DATA_01A6D7,Y                 ;; 01898F : B9 D7 A6    ;
CODE_018992:          LDY.W $160E,X                       ;; 018992 : BC 0E 16    ;
CODE_018995:          STA.W RAM_SpriteSpeedX,Y            ;; 018995 : 99 B6 00    ;
CODE_018998:          LDA.B #$0A                          ;; 018998 : A9 0A       ; \ Sprite status = Kicked 
CODE_01899A:          STA.W $14C8,Y                       ;; 01899A : 99 C8 14    ; / 
CODE_01899D:          LDA.W $1540,Y                       ;; 01899D : B9 40 15    ;
CODE_0189A0:          STA.W RAM_SpriteState,Y             ;; 0189A0 : 99 C2 00    ;
CODE_0189A3:          LDA.B #$08                          ;; 0189A3 : A9 08       ;
CODE_0189A5:          STA.W $1564,Y                       ;; 0189A5 : 99 64 15    ;
CODE_0189A8:          LDA.W RAM_Tweaker167A,Y             ;; 0189A8 : B9 7A 16    ;
CODE_0189AB:          AND.B #$10                          ;; 0189AB : 29 10       ;
CODE_0189AD:          BEQ CODE_0189B4                     ;; 0189AD : F0 05       ;
ADDR_0189AF:          LDA.B #$E0                          ;; 0189AF : A9 E0       ;
ADDR_0189B1:          STA.W RAM_SpriteSpeedY,Y            ;; 0189B1 : 99 AA 00    ;
CODE_0189B4:          LDA.W $1528,X                       ;; 0189B4 : BD 28 15    ;
CODE_0189B7:          BEQ CODE_018A15                     ;; 0189B7 : F0 5C       ;
CODE_0189B9:          JSR.W IsTouchingObjSide             ;; 0189B9 : 20 08 80    ;
CODE_0189BC:          BEQ CODE_0189C0                     ;; 0189BC : F0 02       ;
CODE_0189BE:          STZ RAM_SpriteSpeedX,X              ;; 0189BE : 74 B6       ; Sprite X Speed = 0 
CODE_0189C0:          JSR.W IsOnGround                    ;; 0189C0 : 20 0E 80    ;
CODE_0189C3:          BEQ CODE_0189E6                     ;; 0189C3 : F0 21       ;
CODE_0189C5:          LDA $86                             ;; 0189C5 : A5 86       ;
CODE_0189C7:          CMP.B #$01                          ;; 0189C7 : C9 01       ;
CODE_0189C9:          LDA.B #$02                          ;; 0189C9 : A9 02       ;
CODE_0189CB:          BCC CODE_0189CE                     ;; 0189CB : 90 01       ;
CODE_0189CD:          LSR                                 ;; 0189CD : 4A          ;
CODE_0189CE:          STA $00                             ;; 0189CE : 85 00       ;
CODE_0189D0:          LDA RAM_SpriteSpeedX,X              ;; 0189D0 : B5 B6       ;
CODE_0189D2:          CMP.B #$02                          ;; 0189D2 : C9 02       ;
CODE_0189D4:          BCC CODE_0189FD                     ;; 0189D4 : 90 27       ;
CODE_0189D6:          BPL CODE_0189DE                     ;; 0189D6 : 10 06       ;
CODE_0189D8:          CLC                                 ;; 0189D8 : 18          ;
CODE_0189D9:          ADC $00                             ;; 0189D9 : 65 00       ;
CODE_0189DB:          CLC                                 ;; 0189DB : 18          ;
CODE_0189DC:          ADC $00                             ;; 0189DC : 65 00       ;
CODE_0189DE:          SEC                                 ;; 0189DE : 38          ;
CODE_0189DF:          SBC $00                             ;; 0189DF : E5 00       ;
CODE_0189E1:          STA RAM_SpriteSpeedX,X              ;; 0189E1 : 95 B6       ;
CODE_0189E3:          JSR.W CODE_01804E                   ;; 0189E3 : 20 4E 80    ;
CODE_0189E6:          STZ.W $1570,X                       ;; 0189E6 : 9E 70 15    ;
CODE_0189E9:          JSR.W CODE_018B43                   ;; 0189E9 : 20 43 8B    ;
CODE_0189EC:          LDA.B #$E6                          ;; 0189EC : A9 E6       ;
CODE_0189EE:          LDY RAM_SpriteNum,X                 ;; 0189EE : B4 9E       ; \ Branch if Blue shelless
CODE_0189F0:          CPY.B #$02                          ;; 0189F0 : C0 02       ;  |
CODE_0189F2:          BEQ CODE_0189F6                     ;; 0189F2 : F0 02       ; /
CODE_0189F4:          LDA.B #$86                          ;; 0189F4 : A9 86       ;
CODE_0189F6:          LDY.W RAM_SprOAMIndex,X             ;; 0189F6 : BC EA 15    ; Y = Index into sprite OAM 
CODE_0189F9:          STA.W OAM_Tile,Y                    ;; 0189F9 : 99 02 03    ;
Return0189FC:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_0189FD:          JSR.W IsOnGround                    ;; 0189FD : 20 0E 80    ;KOOPA CODE         
CODE_018A00:          BEQ CODE_018A0F                     ;; 018A00 : F0 0D       ;
CODE_018A02:          LDA.B #$FF                          ;; 018A02 : A9 FF       ;
CODE_018A04:          LDY RAM_SpriteNum,X                 ;; 018A04 : B4 9E       ;
CODE_018A06:          CPY.B #$02                          ;; 018A06 : C0 02       ;
CODE_018A08:          BNE CODE_018A0C                     ;; 018A08 : D0 02       ;
CODE_018A0A:          LDA.B #$A0                          ;; 018A0A : A9 A0       ;
CODE_018A0C:          STA.W $163E,X                       ;; 018A0C : 9D 3E 16    ;
CODE_018A0F:          STZ.W $1528,X                       ;; 018A0F : 9E 28 15    ;
CODE_018A12:          JMP.W CODE_018913                   ;; 018A12 : 4C 13 89    ;
                                                          ;;                      ;
CODE_018A15:          LDA.W $1534,X                       ;; 018A15 : BD 34 15    ;
CODE_018A18:          BEQ CODE_018A88                     ;; 018A18 : F0 6E       ;
CODE_018A1A:          LDY.W $160E,X                       ;; 018A1A : BC 0E 16    ;
CODE_018A1D:          LDA.W $14C8,Y                       ;; 018A1D : B9 C8 14    ;
CODE_018A20:          CMP.B #$0A                          ;; 018A20 : C9 0A       ;
CODE_018A22:          BEQ CODE_018A29                     ;; 018A22 : F0 05       ;
CODE_018A24:          STZ.W $1534,X                       ;; 018A24 : 9E 34 15    ;
CODE_018A27:          BRA CODE_018A62                     ;; 018A27 : 80 39       ;
                                                          ;;                      ;
CODE_018A29:          STA.W $1528,Y                       ;; 018A29 : 99 28 15    ;
CODE_018A2C:          JSR.W IsTouchingObjSide             ;; 018A2C : 20 08 80    ;
CODE_018A2F:          BEQ CODE_018A38                     ;; 018A2F : F0 07       ;
CODE_018A31:          LDA.B #$00                          ;; 018A31 : A9 00       ;
CODE_018A33:          STA.W RAM_SpriteSpeedX,Y            ;; 018A33 : 99 B6 00    ;
CODE_018A36:          STA RAM_SpriteSpeedX,X              ;; 018A36 : 95 B6       ;
CODE_018A38:          JSR.W IsOnGround                    ;; 018A38 : 20 0E 80    ;
CODE_018A3B:          BEQ CODE_018A62                     ;; 018A3B : F0 25       ;
CODE_018A3D:          LDA $86                             ;; 018A3D : A5 86       ;
CODE_018A3F:          CMP.B #$01                          ;; 018A3F : C9 01       ;
CODE_018A41:          LDA.B #$02                          ;; 018A41 : A9 02       ;
CODE_018A43:          BCC CODE_018A46                     ;; 018A43 : 90 01       ;
ADDR_018A45:          LSR                                 ;; 018A45 : 4A          ;
CODE_018A46:          STA $00                             ;; 018A46 : 85 00       ;
CODE_018A48:          LDA.W RAM_SpriteSpeedX,Y            ;; 018A48 : B9 B6 00    ;
CODE_018A4B:          CMP.B #$02                          ;; 018A4B : C9 02       ;
CODE_018A4D:          BCC CODE_018A69                     ;; 018A4D : 90 1A       ;
CODE_018A4F:          BPL CODE_018A57                     ;; 018A4F : 10 06       ;
CODE_018A51:          CLC                                 ;; 018A51 : 18          ;
CODE_018A52:          ADC $00                             ;; 018A52 : 65 00       ;
CODE_018A54:          CLC                                 ;; 018A54 : 18          ;
CODE_018A55:          ADC $00                             ;; 018A55 : 65 00       ;
CODE_018A57:          SEC                                 ;; 018A57 : 38          ;
CODE_018A58:          SBC $00                             ;; 018A58 : E5 00       ;
CODE_018A5A:          STA.W RAM_SpriteSpeedX,Y            ;; 018A5A : 99 B6 00    ;
CODE_018A5D:          STA RAM_SpriteSpeedX,X              ;; 018A5D : 95 B6       ;
CODE_018A5F:          JSR.W CODE_01804E                   ;; 018A5F : 20 4E 80    ;
CODE_018A62:          STZ.W $1570,X                       ;; 018A62 : 9E 70 15    ;
CODE_018A65:          JSR.W CODE_018B43                   ;; 018A65 : 20 43 8B    ;
Return018A68:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_018A69:          LDA.B #$00                          ;; 018A69 : A9 00       ;
CODE_018A6B:          STA RAM_SpriteSpeedX,X              ;; 018A6B : 95 B6       ;
CODE_018A6D:          STA.W RAM_SpriteSpeedX,Y            ;; 018A6D : 99 B6 00    ;
CODE_018A70:          STZ.W $1534,X                       ;; 018A70 : 9E 34 15    ;
CODE_018A73:          LDA.B #$09                          ;; 018A73 : A9 09       ; \ Sprite status = Carryable 
CODE_018A75:          STA.W $14C8,Y                       ;; 018A75 : 99 C8 14    ; / 
CODE_018A78:          PHX                                 ;; 018A78 : DA          ;
CODE_018A79:          TYX                                 ;; 018A79 : BB          ;
CODE_018A7A:          JSR.W CODE_01AA0B                   ;; 018A7A : 20 0B AA    ;
CODE_018A7D:          LDA.W $1540,X                       ;; 018A7D : BD 40 15    ;
CODE_018A80:          BEQ CODE_018A87                     ;; 018A80 : F0 05       ;
ADDR_018A82:          LDA.B #$FF                          ;; 018A82 : A9 FF       ;
ADDR_018A84:          STA.W $1540,X                       ;; 018A84 : 9D 40 15    ;
CODE_018A87:          PLX                                 ;; 018A87 : FA          ;
CODE_018A88:          LDA RAM_SpriteState,X               ;; 018A88 : B5 C2       ;
CODE_018A8A:          BEQ CODE_018A9B                     ;; 018A8A : F0 0F       ;
CODE_018A8C:          DEC RAM_SpriteState,X               ;; 018A8C : D6 C2       ;
CODE_018A8E:          CMP.B #$08                          ;; 018A8E : C9 08       ;
CODE_018A90:          LDA.B #$04                          ;; 018A90 : A9 04       ;
CODE_018A92:          BCS CODE_018A96                     ;; 018A92 : B0 02       ;
CODE_018A94:          LDA.B #$00                          ;; 018A94 : A9 00       ;
CODE_018A96:          STA.W $1602,X                       ;; 018A96 : 9D 02 16    ;
CODE_018A99:          BRA CODE_018B00                     ;; 018A99 : 80 65       ;
                                                          ;;                      ;
CODE_018A9B:          LDA.W $1558,X                       ;; 018A9B : BD 58 15    ;
CODE_018A9E:          CMP.B #$01                          ;; 018A9E : C9 01       ;
CODE_018AA0:          BNE Spr0to13Main                    ;; 018AA0 : D0 68       ;
CODE_018AA2:          LDY.W $1594,X                       ;; 018AA2 : BC 94 15    ;SHELL TO INTERACT WITH???             
CODE_018AA5:          LDA.W $14C8,Y                       ;; 018AA5 : B9 C8 14    ;
CODE_018AA8:          CMP.B #$08                          ;; 018AA8 : C9 08       ;
CODE_018AAA:          BCC Return018AD9                    ;; 018AAA : 90 2D       ;
CODE_018AAC:          LDA.W RAM_SpriteSpeedY,Y            ;; 018AAC : B9 AA 00    ;
CODE_018AAF:          BMI Return018AD9                    ;; 018AAF : 30 28       ;
CODE_018AB1:          LDA.W RAM_SpriteNum,Y               ;; 018AB1 : B9 9E 00    ; \ Return if Coin sprite
CODE_018AB4:          CMP.B #$21                          ;; 018AB4 : C9 21       ;  |
CODE_018AB6:          BEQ Return018AD9                    ;; 018AB6 : F0 21       ; /
CODE_018AB8:          JSL.L GetSpriteClippingA            ;; 018AB8 : 22 9F B6 03 ;
CODE_018ABC:          PHX                                 ;; 018ABC : DA          ;
CODE_018ABD:          TYX                                 ;; 018ABD : BB          ;
CODE_018ABE:          JSL.L GetSpriteClippingB            ;; 018ABE : 22 E5 B6 03 ;
CODE_018AC2:          PLX                                 ;; 018AC2 : FA          ;
CODE_018AC3:          JSL.L CheckForContact               ;; 018AC3 : 22 2B B7 03 ;
CODE_018AC7:          BCC Return018AD9                    ;; 018AC7 : 90 10       ;
CODE_018AC9:          JSR.W OffScrEraseSprite             ;; 018AC9 : 20 80 AC    ;
CODE_018ACC:          LDY.W $1594,X                       ;; 018ACC : BC 94 15    ;
CODE_018ACF:          LDA.B #$10                          ;; 018ACF : A9 10       ;
CODE_018AD1:          STA.W $1558,Y                       ;; 018AD1 : 99 58 15    ;
CODE_018AD4:          LDA RAM_SpriteNum,X                 ;; 018AD4 : B5 9E       ;
CODE_018AD6:          STA.W $160E,Y                       ;; 018AD6 : 99 0E 16    ;SPRITE NUMBER TO DEAL WITH ?            
Return018AD9:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
ExplodeBomb:          PHB                                 ;; ?QPWZ? : 8B          ; \ Change Bob-omb into explosion 
CODE_018ADB:          LDA.B #$02                          ;; 018ADB : A9 02       ;  | 
CODE_018ADD:          PHA                                 ;; 018ADD : 48          ;  | 
CODE_018ADE:          PLB                                 ;; 018ADE : AB          ;  | 
CODE_018ADF:          JSL.L ExplodeBombRt                 ;; 018ADF : 22 86 80 02 ;  | 
CODE_018AE3:          PLB                                 ;; 018AE3 : AB          ;  | 
Return018AE4:         RTS                                 ;; ?QPWZ? : 60          ; / 
                                                          ;;                      ;
Bobomb:               LDA.W $1534,X                       ;; ?QPWZ? : BD 34 15    ; \ Branch if exploding 
CODE_018AE8:          BNE ExplodeBomb                     ;; 018AE8 : D0 F0       ; / 
CODE_018AEA:          LDA.W $1540,X                       ;; 018AEA : BD 40 15    ; \ Branch if not set to explode 
CODE_018AED:          BNE Spr0to13Start                   ;; 018AED : D0 0D       ; / 
CODE_018AEF:          LDA.B #$09                          ;; 018AEF : A9 09       ; \ Sprite status = Stunned 
CODE_018AF1:          STA.W $14C8,X                       ;; 018AF1 : 9D C8 14    ; / 
CODE_018AF4:          LDA.B #$40                          ;; 018AF4 : A9 40       ; \ Time until explosion = #$40 
CODE_018AF6:          STA.W $1540,X                       ;; 018AF6 : 9D 40 15    ; / 
CODE_018AF9:          JMP.W SubSprGfx2Entry1              ;; 018AF9 : 4C 0D 9F    ; Draw sprite 
                                                          ;;                      ;
Spr0to13Start:        LDA RAM_SpritesLocked               ;; ?QPWZ? : A5 9D       ; \ If sprites locked... 
CODE_018AFE:          BEQ Spr0to13Main                    ;; 018AFE : F0 0A       ;  | 
CODE_018B00:          JSR.W MarioSprInteractRt            ;; 018B00 : 20 E4 A7    ;  | ...interact with Mario 
CODE_018B03:          JSR.W SubSprSprInteract             ;; 018B03 : 20 0D A4    ;  | ...interact with sprites 
CODE_018B06:          JSR.W Spr0to13Gfx                   ;; 018B06 : 20 C3 8B    ;  | ...draw sprite 
Return018B09:         RTS                                 ;; ?QPWZ? : 60          ; / Return 
                                                          ;;                      ;
Spr0to13Main:         JSR.W IsOnGround                    ;; ?QPWZ? : 20 0E 80    ; \ If sprite on ground... 
CODE_018B0D:          BEQ CODE_018B2E                     ;; 018B0D : F0 1F       ;  | 
CODE_018B0F:          LDY RAM_SpriteNum,X                 ;; 018B0F : B4 9E       ;  | 
CODE_018B11:          LDA.W Spr0to13Prop,Y                ;; 018B11 : B9 F0 88    ;  | Set sprite X speed 
CODE_018B14:          LSR                                 ;; 018B14 : 4A          ;  | 
CODE_018B15:          LDY.W RAM_SpriteDir,X               ;; 018B15 : BC 7C 15    ;  | 
CODE_018B18:          BCC CODE_018B1C                     ;; 018B18 : 90 02       ;  | 
CODE_018B1A:          INY                                 ;; 018B1A : C8          ;  | Increase index if sprite set to go fast 
CODE_018B1B:          INY                                 ;; 018B1B : C8          ;  | 
CODE_018B1C:          LDA.W Spr0to13SpeedX,Y              ;; 018B1C : B9 EC 88    ;  | 
CODE_018B1F:          EOR.W $15B8,X                       ;; 018B1F : 5D B8 15    ;  | what does $15B8,x do? 
CODE_018B22:          ASL                                 ;; 018B22 : 0A          ;  | 
CODE_018B23:          LDA.W Spr0to13SpeedX,Y              ;; 018B23 : B9 EC 88    ;  | 
CODE_018B26:          BCC CODE_018B2C                     ;; 018B26 : 90 04       ;  | 
CODE_018B28:          CLC                                 ;; 018B28 : 18          ;  | 
CODE_018B29:          ADC.W $15B8,X                       ;; 018B29 : 7D B8 15    ;  | 
CODE_018B2C:          STA RAM_SpriteSpeedX,X              ;; 018B2C : 95 B6       ; / 
CODE_018B2E:          LDY.W RAM_SpriteDir,X               ;; 018B2E : BC 7C 15    ; \ If touching an object in the direction 
CODE_018B31:          TYA                                 ;; 018B31 : 98          ;  | that Mario is moving... 
CODE_018B32:          INC A                               ;; 018B32 : 1A          ;  | 
CODE_018B33:          AND.W RAM_SprObjStatus,X            ;; 018B33 : 3D 88 15    ;  | 
CODE_018B36:          AND.B #$03                          ;; 018B36 : 29 03       ;  | 
CODE_018B38:          BEQ CODE_018B3C                     ;; 018B38 : F0 02       ;  | 
CODE_018B3A:          STZ RAM_SpriteSpeedX,X              ;; 018B3A : 74 B6       ; / ...Sprite X Speed = 0 
CODE_018B3C:          JSR.W IsTouchingCeiling             ;; 018B3C : 20 14 80    ; \ If touching ceiling... 
CODE_018B3F:          BEQ CODE_018B43                     ;; 018B3F : F0 02       ;  | 
ADDR_018B41:          STZ RAM_SpriteSpeedY,X              ;; 018B41 : 74 AA       ; / ...Sprite Y Speed = 0 
CODE_018B43:          JSR.W SubOffscreen0Bnk1             ;; 018B43 : 20 31 AC    ;
CODE_018B46:          JSR.W SubUpdateSprPos               ;; 018B46 : 20 32 90    ; Apply speed to position 
CODE_018B49:          JSR.W SetAnimationFrame             ;; 018B49 : 20 5F 8E    ; Set the animation frame 
CODE_018B4C:          JSR.W IsOnGround                    ;; 018B4C : 20 0E 80    ; \ Branch if not on ground 
CODE_018B4F:          BEQ SpriteInAir                     ;; 018B4F : F0 33       ; / 
SpriteOnGround:       JSR.W SetSomeYSpeed??               ;; ?QPWZ? : 20 04 9A    ;
CODE_018B54:          STZ.W $151C,X                       ;; 018B54 : 9E 1C 15    ;
CODE_018B57:          LDY RAM_SpriteNum,X                 ;; 018B57 : B4 9E       ; \ 
CODE_018B59:          LDA.W Spr0to13Prop,Y                ;; 018B59 : B9 F0 88    ;  | If follow Mario is set... 
CODE_018B5C:          PHA                                 ;; 018B5C : 48          ;  | 
CODE_018B5D:          AND.B #$04                          ;; 018B5D : 29 04       ;  | 
CODE_018B5F:          BEQ DontFollowMario                 ;; 018B5F : F0 19       ;  | 
CODE_018B61:          LDA.W $1570,X                       ;; 018B61 : BD 70 15    ;  | ...and time until turn == 0... 
CODE_018B64:          AND.B #$7F                          ;; 018B64 : 29 7F       ;  | 
CODE_018B66:          BNE DontFollowMario                 ;; 018B66 : D0 12       ;  | 
CODE_018B68:          LDA.W RAM_SpriteDir,X               ;; 018B68 : BD 7C 15    ;  | 
CODE_018B6B:          PHA                                 ;; 018B6B : 48          ;  | 
CODE_018B6C:          JSR.W FaceMario                     ;; 018B6C : 20 7C 85    ;  | ...face Mario 
CODE_018B6F:          PLA                                 ;; 018B6F : 68          ;  | If was facing the other direction... 
CODE_018B70:          CMP.W RAM_SpriteDir,X               ;; 018B70 : DD 7C 15    ;  | 
CODE_018B73:          BEQ DontFollowMario                 ;; 018B73 : F0 05       ;  | 
CODE_018B75:          LDA.B #$08                          ;; 018B75 : A9 08       ;  | ...set turning timer 
CODE_018B77:          STA.W $15AC,X                       ;; 018B77 : 9D AC 15    ; / 
DontFollowMario:      PLA                                 ;; ?QPWZ? : 68          ; \ If jump over shells is set call routine 
CODE_018B7B:          AND.B #$08                          ;; 018B7B : 29 08       ;  | 
CODE_018B7D:          BEQ CODE_018B82                     ;; 018B7D : F0 03       ;  | 
CODE_018B7F:          JSR.W JumpOverShells                ;; 018B7F : 20 98 88    ;  | 
CODE_018B82:          BRA CODE_018BB0                     ;; 018B82 : 80 2C       ; / 
                                                          ;;                      ;
SpriteInAir:          LDY RAM_SpriteNum,X                 ;; ?QPWZ? : B4 9E       ;
CODE_018B86:          LDA.W Spr0to13Prop,Y                ;; 018B86 : B9 F0 88    ; \ If flutter wings is set... 
CODE_018B89:          BPL CODE_018B90                     ;; 018B89 : 10 05       ;  | 
ADDR_018B8B:          JSR.W SetAnimationFrame             ;; 018B8B : 20 5F 8E    ;  | ...set frame... 
ADDR_018B8E:          BRA CODE_018B93                     ;; 018B8E : 80 03       ;  | ...and don't zero out $1570,x 
                                                          ;;                      ;
CODE_018B90:          STZ.W $1570,X                       ;; 018B90 : 9E 70 15    ; / 
CODE_018B93:          LDA.W Spr0to13Prop,Y                ;; 018B93 : B9 F0 88    ; \ If stay on ledges is set... 
CODE_018B96:          AND.B #$02                          ;; 018B96 : 29 02       ;  | 
CODE_018B98:          BEQ CODE_018BB0                     ;; 018B98 : F0 16       ;  | 
CODE_018B9A:          LDA.W $151C,X                       ;; 018B9A : BD 1C 15    ;  | todo: what are all these? 
CODE_018B9D:          ORA.W $1558,X                       ;; 018B9D : 1D 58 15    ;  | 
CODE_018BA0:          ORA.W $1528,X                       ;; 018BA0 : 1D 28 15    ;  | 
CODE_018BA3:          ORA.W $1534,X                       ;; 018BA3 : 1D 34 15    ;  | 
CODE_018BA6:          BNE CODE_018BB0                     ;; 018BA6 : D0 08       ;  | 
CODE_018BA8:          JSR.W FlipSpriteDir                 ;; 018BA8 : 20 98 90    ;  | ...change sprite direction 
CODE_018BAB:          LDA.B #$01                          ;; 018BAB : A9 01       ;  | 
CODE_018BAD:          STA.W $151C,X                       ;; 018BAD : 9D 1C 15    ; / 
CODE_018BB0:          LDA.W $1528,X                       ;; 018BB0 : BD 28 15    ;
CODE_018BB3:          BEQ CODE_018BBA                     ;; 018BB3 : F0 05       ;
CODE_018BB5:          JSR.W CODE_018931                   ;; 018BB5 : 20 31 89    ;
CODE_018BB8:          BRA CODE_018BBD                     ;; 018BB8 : 80 03       ;
                                                          ;;                      ;
CODE_018BBA:          JSR.W MarioSprInteractRt            ;; 018BBA : 20 E4 A7    ; Interact with Mario 
CODE_018BBD:          JSR.W SubSprSprInteract             ;; 018BBD : 20 0D A4    ; Interact with other sprites 
CODE_018BC0:          JSR.W FlipIfTouchingObj             ;; 018BC0 : 20 89 90    ; Change direction if touching an object 
Spr0to13Gfx:          LDA.W RAM_SpriteDir,X               ;; ?QPWZ? : BD 7C 15    ; \ Store sprite direction 
CODE_018BC6:          PHA                                 ;; 018BC6 : 48          ; / 
CODE_018BC7:          LDY.W $15AC,X                       ;; 018BC7 : BC AC 15    ; \ If turning timer is set... 
CODE_018BCA:          BEQ CODE_018BDE                     ;; 018BCA : F0 12       ;  | 
CODE_018BCC:          LDA.B #$02                          ;; 018BCC : A9 02       ;  | ...set turning image 
CODE_018BCE:          STA.W $1602,X                       ;; 018BCE : 9D 02 16    ;  | 
CODE_018BD1:          LDA.B #$00                          ;; 018BD1 : A9 00       ;  | 
CODE_018BD3:          CPY.B #$05                          ;; 018BD3 : C0 05       ;  | If turning timer >= 5... 
CODE_018BD5:          BCC CODE_018BD8                     ;; 018BD5 : 90 01       ;  | 
CODE_018BD7:          INC A                               ;; 018BD7 : 1A          ;  | ...flip sprite direction (temporarily) 
CODE_018BD8:          EOR.W RAM_SpriteDir,X               ;; 018BD8 : 5D 7C 15    ;  | 
CODE_018BDB:          STA.W RAM_SpriteDir,X               ;; 018BDB : 9D 7C 15    ; / 
CODE_018BDE:          LDY RAM_SpriteNum,X                 ;; 018BDE : B4 9E       ; \ Branch if sprite is 2 tiles high 
CODE_018BE0:          LDA.W Spr0to13Prop,Y                ;; 018BE0 : B9 F0 88    ;  | 
CODE_018BE3:          AND.B #$40                          ;; 018BE3 : 29 40       ;  | 
CODE_018BE5:          BNE CODE_018BEC                     ;; 018BE5 : D0 05       ; / 
CODE_018BE7:          JSR.W SubSprGfx2Entry1              ;; 018BE7 : 20 0D 9F    ; \ Draw 1 tile high sprite and return 
CODE_018BEA:          BRA DoneWithSprite                  ;; 018BEA : 80 27       ; / 
                                                          ;;                      ;
CODE_018BEC:          LDA.W $1602,X                       ;; 018BEC : BD 02 16    ; \ Nothing? 
CODE_018BEF:          LSR                                 ;; 018BEF : 4A          ; / 
CODE_018BF0:          LDA RAM_SpriteYLo,X                 ;; 018BF0 : B5 D8       ; \ Y position -= #$0F (temporarily) 
CODE_018BF2:          PHA                                 ;; 018BF2 : 48          ;  | 
CODE_018BF3:          SBC.B #$0F                          ;; 018BF3 : E9 0F       ;  | 
CODE_018BF5:          STA RAM_SpriteYLo,X                 ;; 018BF5 : 95 D8       ;  | 
CODE_018BF7:          LDA.W RAM_SpriteYHi,X               ;; 018BF7 : BD D4 14    ;  | 
CODE_018BFA:          PHA                                 ;; 018BFA : 48          ;  | 
CODE_018BFB:          SBC.B #$00                          ;; 018BFB : E9 00       ;  | 
CODE_018BFD:          STA.W RAM_SpriteYHi,X               ;; 018BFD : 9D D4 14    ; / 
CODE_018C00:          JSR.W SubSprGfx1                    ;; 018C00 : 20 67 9D    ; Draw sprite 
CODE_018C03:          PLA                                 ;; 018C03 : 68          ; \ Restore Y position 
CODE_018C04:          STA.W RAM_SpriteYHi,X               ;; 018C04 : 9D D4 14    ;  | 
CODE_018C07:          PLA                                 ;; 018C07 : 68          ;  | 
CODE_018C08:          STA RAM_SpriteYLo,X                 ;; 018C08 : 95 D8       ; / 
CODE_018C0A:          LDA RAM_SpriteNum,X                 ;; 018C0A : B5 9E       ; \ Add wings if sprite number > #$08 
CODE_018C0C:          CMP.B #$08                          ;; 018C0C : C9 08       ;  | 
CODE_018C0E:          BCC DoneWithSprite                  ;; 018C0E : 90 03       ;  | 
CODE_018C10:          JSR.W KoopaWingGfxRt                ;; 018C10 : 20 28 9E    ; / 
DoneWithSprite:       PLA                                 ;; ?QPWZ? : 68          ; \ Restore sprite direction 
CODE_018C14:          STA.W RAM_SpriteDir,X               ;; 018C14 : 9D 7C 15    ; / 
Return018C17:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
SpinyEgg:             LDA RAM_SpritesLocked               ;; ?QPWZ? : A5 9D       ; \ Branch if sprites locked 
CODE_018C1A:          BNE CODE_018C44                     ;; 018C1A : D0 28       ; / 
CODE_018C1C:          LDA.W $14C8,X                       ;; 018C1C : BD C8 14    ;
CODE_018C1F:          CMP.B #$08                          ;; 018C1F : C9 08       ;
CODE_018C21:          BNE CODE_018C44                     ;; 018C21 : D0 21       ;
CODE_018C23:          JSR.W SetAnimationFrame             ;; 018C23 : 20 5F 8E    ;
CODE_018C26:          JSR.W SubUpdateSprPos               ;; 018C26 : 20 32 90    ;
CODE_018C29:          DEC RAM_SpriteSpeedY,X              ;; 018C29 : D6 AA       ;
CODE_018C2B:          JSR.W IsOnGround                    ;; 018C2B : 20 0E 80    ;
CODE_018C2E:          BEQ CODE_018C3E                     ;; 018C2E : F0 0E       ;
CODE_018C30:          LDA.B #$13                          ;; 018C30 : A9 13       ; \ Sprite = Spiny 
CODE_018C32:          STA RAM_SpriteNum,X                 ;; 018C32 : 95 9E       ; / 
CODE_018C34:          JSL.L InitSpriteTables              ;; 018C34 : 22 D2 F7 07 ; Reset sprite tables 
CODE_018C38:          JSR.W FaceMario                     ;; 018C38 : 20 7C 85    ;
CODE_018C3B:          JSR.W CODE_0197D5                   ;; 018C3B : 20 D5 97    ;
CODE_018C3E:          JSR.W FlipIfTouchingObj             ;; 018C3E : 20 89 90    ;
CODE_018C41:          JSR.W SubSprSpr+MarioSpr            ;; 018C41 : 20 C1 8F    ;
CODE_018C44:          JSR.W SubOffscreen0Bnk1             ;; 018C44 : 20 31 AC    ;
CODE_018C47:          LDA.B #$02                          ;; 018C47 : A9 02       ;
CODE_018C49:          JSR.W SubSprGfx0Entry0              ;; 018C49 : 20 F3 9C    ;
Return018C4C:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
GreenParaKoopa:       LDA RAM_SpritesLocked               ;; ?QPWZ? : A5 9D       ; \ Branch if sprites locked 
CODE_018C4F:          BNE CODE_018CB7                     ;; 018C4F : D0 66       ; / 
CODE_018C51:          LDY.W RAM_SpriteDir,X               ;; 018C51 : BC 7C 15    ;
CODE_018C54:          LDA.W Spr0to13SpeedX,Y              ;; 018C54 : B9 EC 88    ;
CODE_018C57:          EOR.W $15B8,X                       ;; 018C57 : 5D B8 15    ;
CODE_018C5A:          ASL                                 ;; 018C5A : 0A          ;
CODE_018C5B:          LDA.W Spr0to13SpeedX,Y              ;; 018C5B : B9 EC 88    ;
CODE_018C5E:          BCC CODE_018C64                     ;; 018C5E : 90 04       ;
CODE_018C60:          CLC                                 ;; 018C60 : 18          ;
CODE_018C61:          ADC.W $15B8,X                       ;; 018C61 : 7D B8 15    ;
CODE_018C64:          STA RAM_SpriteSpeedX,X              ;; 018C64 : 95 B6       ;
CODE_018C66:          TYA                                 ;; 018C66 : 98          ;
CODE_018C67:          INC A                               ;; 018C67 : 1A          ;
CODE_018C68:          AND.W RAM_SprObjStatus,X            ;; 018C68 : 3D 88 15    ; \ If touching object,
CODE_018C6B:          AND.B #$03                          ;; 018C6B : 29 03       ;  | 
CODE_018C6D:          BEQ CODE_018C71                     ;; 018C6D : F0 02       ;  | 
ADDR_018C6F:          STZ RAM_SpriteSpeedX,X              ;; 018C6F : 74 B6       ; / Sprite X Speed = 0 
CODE_018C71:          LDA RAM_SpriteNum,X                 ;; 018C71 : B5 9E       ; \ If flying left Green Koopa...
CODE_018C73:          CMP.B #$08                          ;; 018C73 : C9 08       ;  |
CODE_018C75:          BNE CODE_018C8C                     ;; 018C75 : D0 15       ;  |
CODE_018C77:          JSR.W SubSprXPosNoGrvty             ;; 018C77 : 20 CC AB    ;  | Update X position
CODE_018C7A:          LDY.B #$FC                          ;; 018C7A : A0 FC       ;  |
CODE_018C7C:          LDA.W $1570,X                       ;; 018C7C : BD 70 15    ;  | Y speed = #$FC or #$04,
CODE_018C7F:          AND.B #$20                          ;; 018C7F : 29 20       ;  | depending on 1570,x
CODE_018C81:          BEQ CODE_018C85                     ;; 018C81 : F0 02       ;  | 
CODE_018C83:          LDY.B #$04                          ;; 018C83 : A0 04       ;  |
CODE_018C85:          STY RAM_SpriteSpeedY,X              ;; 018C85 : 94 AA       ;  |
CODE_018C87:          JSR.W SubSprYPosNoGrvty             ;; 018C87 : 20 D8 AB    ; / Update Y position
CODE_018C8A:          BRA CODE_018C91                     ;; 018C8A : 80 05       ;
                                                          ;;                      ;
CODE_018C8C:          JSR.W SubUpdateSprPos               ;; 018C8C : 20 32 90    ;
CODE_018C8F:          DEC RAM_SpriteSpeedY,X              ;; 018C8F : D6 AA       ;
CODE_018C91:          JSR.W SubSprSpr+MarioSpr            ;; 018C91 : 20 C1 8F    ;
CODE_018C94:          JSR.W IsTouchingCeiling             ;; 018C94 : 20 14 80    ;
CODE_018C97:          BEQ CODE_018C9B                     ;; 018C97 : F0 02       ;
CODE_018C99:          STZ RAM_SpriteSpeedY,X              ;; 018C99 : 74 AA       ; Sprite Y Speed = 0 
CODE_018C9B:          JSR.W IsOnGround                    ;; 018C9B : 20 0E 80    ;
CODE_018C9E:          BEQ CODE_018CAE                     ;; 018C9E : F0 0E       ;
CODE_018CA0:          JSR.W SetSomeYSpeed??               ;; 018CA0 : 20 04 9A    ;
CODE_018CA3:          LDA.B #$D0                          ;; 018CA3 : A9 D0       ;
CODE_018CA5:          LDY.W $160E,X                       ;; 018CA5 : BC 0E 16    ;
CODE_018CA8:          BNE CODE_018CAC                     ;; 018CA8 : D0 02       ;
CODE_018CAA:          LDA.B #$B0                          ;; 018CAA : A9 B0       ;
CODE_018CAC:          STA RAM_SpriteSpeedY,X              ;; 018CAC : 95 AA       ;
CODE_018CAE:          JSR.W FlipIfTouchingObj             ;; 018CAE : 20 89 90    ;
CODE_018CB1:          JSR.W SetAnimationFrame             ;; 018CB1 : 20 5F 8E    ;
CODE_018CB4:          JSR.W SubOffscreen0Bnk1             ;; 018CB4 : 20 31 AC    ;
CODE_018CB7:          JMP.W Spr0to13Gfx                   ;; 018CB7 : 4C C3 8B    ;
                                                          ;;                      ;
                                                          ;;                      ;
DATA_018CBA:          .db $FF,$01                         ;; 018CBA               ;
                                                          ;;                      ;
DATA_018CBC:          .db $F0,$10                         ;; 018CBC               ;
                                                          ;;                      ;
RedHorzParaKoopa:     JSR.W SubOffscreen1Bnk1             ;; ?QPWZ? : 20 2B AC    ;
CODE_018CC1:          BRA CODE_018CC6                     ;; 018CC1 : 80 03       ;
                                                          ;;                      ;
RedVertParaKoopa:     JSR.W SubOffscreen0Bnk1             ;; ?QPWZ? : 20 31 AC    ;
CODE_018CC6:          LDA RAM_SpritesLocked               ;; 018CC6 : A5 9D       ; \ Branch if sprites locked 
CODE_018CC8:          BNE CODE_018D2A                     ;; 018CC8 : D0 60       ; / 
CODE_018CCA:          LDA.W RAM_SpriteDir,X               ;; 018CCA : BD 7C 15    ;
CODE_018CCD:          PHA                                 ;; 018CCD : 48          ;
CODE_018CCE:          JSR.W UpdateDirection               ;; 018CCE : 20 15 9A    ;
CODE_018CD1:          PLA                                 ;; 018CD1 : 68          ;
CODE_018CD2:          CMP.W RAM_SpriteDir,X               ;; 018CD2 : DD 7C 15    ;
CODE_018CD5:          BEQ CODE_018CDC                     ;; 018CD5 : F0 05       ;
CODE_018CD7:          LDA.B #$08                          ;; 018CD7 : A9 08       ; \ Set turning timer 
CODE_018CD9:          STA.W $15AC,X                       ;; 018CD9 : 9D AC 15    ; / 
CODE_018CDC:          JSR.W SetAnimationFrame             ;; 018CDC : 20 5F 8E    ;
CODE_018CDF:          LDA RAM_SpriteNum,X                 ;; 018CDF : B5 9E       ;
CODE_018CE1:          CMP.B #$0A                          ;; 018CE1 : C9 0A       ;
CODE_018CE3:          BNE CODE_018CEA                     ;; 018CE3 : D0 05       ;
CODE_018CE5:          JSR.W SubSprYPosNoGrvty             ;; 018CE5 : 20 D8 AB    ;
CODE_018CE8:          BRA CODE_018CFD                     ;; 018CE8 : 80 13       ;
                                                          ;;                      ;
CODE_018CEA:          LDY.B #$FC                          ;; 018CEA : A0 FC       ;
CODE_018CEC:          LDA.W $1570,X                       ;; 018CEC : BD 70 15    ;
CODE_018CEF:          AND.B #$20                          ;; 018CEF : 29 20       ;
CODE_018CF1:          BEQ CODE_018CF5                     ;; 018CF1 : F0 02       ;
CODE_018CF3:          LDY.B #$04                          ;; 018CF3 : A0 04       ;
CODE_018CF5:          STY RAM_SpriteSpeedY,X              ;; 018CF5 : 94 AA       ;
CODE_018CF7:          JSR.W SubSprYPosNoGrvty             ;; 018CF7 : 20 D8 AB    ;
CODE_018CFA:          JSR.W SubSprXPosNoGrvty             ;; 018CFA : 20 CC AB    ;
CODE_018CFD:          LDA.W $1540,X                       ;; 018CFD : BD 40 15    ;
CODE_018D00:          BNE CODE_018D27                     ;; 018D00 : D0 25       ;
CODE_018D02:          INC RAM_SpriteState,X               ;; 018D02 : F6 C2       ;
CODE_018D04:          LDA RAM_SpriteState,X               ;; 018D04 : B5 C2       ;
CODE_018D06:          AND.B #$03                          ;; 018D06 : 29 03       ;
CODE_018D08:          BNE CODE_018D27                     ;; 018D08 : D0 1D       ;
CODE_018D0A:          LDA.W $151C,X                       ;; 018D0A : BD 1C 15    ;
CODE_018D0D:          AND.B #$01                          ;; 018D0D : 29 01       ;
CODE_018D0F:          TAY                                 ;; 018D0F : A8          ;
CODE_018D10:          LDA RAM_SpriteSpeedX,X              ;; 018D10 : B5 B6       ;
CODE_018D12:          CLC                                 ;; 018D12 : 18          ;
CODE_018D13:          ADC.W DATA_018CBA,Y                 ;; 018D13 : 79 BA 8C    ;
CODE_018D16:          STA RAM_SpriteSpeedY,X              ;; 018D16 : 95 AA       ;
CODE_018D18:          STA RAM_SpriteSpeedX,X              ;; 018D18 : 95 B6       ;
CODE_018D1A:          CMP.W DATA_018CBC,Y                 ;; 018D1A : D9 BC 8C    ;
CODE_018D1D:          BNE CODE_018D27                     ;; 018D1D : D0 08       ;
CODE_018D1F:          INC.W $151C,X                       ;; 018D1F : FE 1C 15    ;
CODE_018D22:          LDA.B #$30                          ;; 018D22 : A9 30       ;
CODE_018D24:          STA.W $1540,X                       ;; 018D24 : 9D 40 15    ;
CODE_018D27:          JSR.W SubSprSpr+MarioSpr            ;; 018D27 : 20 C1 8F    ;
CODE_018D2A:          JSR.W CODE_018CB7                   ;; 018D2A : 20 B7 8C    ;
Return018D2D:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
WingedGoomba:         JSR.W SubOffscreen0Bnk1             ;; ?QPWZ? : 20 31 AC    ;
CODE_018D31:          LDA RAM_SpritesLocked               ;; 018D31 : A5 9D       ;
CODE_018D33:          BEQ CODE_018D39                     ;; 018D33 : F0 04       ;
CODE_018D35:          JSR.W CODE_018DAC                   ;; 018D35 : 20 AC 8D    ;
Return018D38:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_018D39:          JSR.W CODE_018DBB                   ;; 018D39 : 20 BB 8D    ;
CODE_018D3C:          JSR.W SubUpdateSprPos               ;; 018D3C : 20 32 90    ;
CODE_018D3F:          DEC RAM_SpriteSpeedY,X              ;; 018D3F : D6 AA       ;
CODE_018D41:          LDA RAM_SpriteState,X               ;; 018D41 : B5 C2       ;
CODE_018D43:          LSR                                 ;; 018D43 : 4A          ;
CODE_018D44:          LSR                                 ;; 018D44 : 4A          ;
CODE_018D45:          LSR                                 ;; 018D45 : 4A          ;
CODE_018D46:          AND.B #$01                          ;; 018D46 : 29 01       ;
CODE_018D48:          STA.W $1602,X                       ;; 018D48 : 9D 02 16    ;
CODE_018D4B:          JSR.W CODE_018DAC                   ;; 018D4B : 20 AC 8D    ;
CODE_018D4E:          INC RAM_SpriteState,X               ;; 018D4E : F6 C2       ;
CODE_018D50:          LDA.W $151C,X                       ;; 018D50 : BD 1C 15    ;
CODE_018D53:          BNE CODE_018D5F                     ;; 018D53 : D0 0A       ;
CODE_018D55:          LDA RAM_SpriteSpeedY,X              ;; 018D55 : B5 AA       ;
CODE_018D57:          BPL CODE_018D5F                     ;; 018D57 : 10 06       ;
CODE_018D59:          INC.W $1570,X                       ;; 018D59 : FE 70 15    ;
CODE_018D5C:          INC.W $1570,X                       ;; 018D5C : FE 70 15    ;
CODE_018D5F:          INC.W $1570,X                       ;; 018D5F : FE 70 15    ;
CODE_018D62:          JSR.W IsTouchingCeiling             ;; 018D62 : 20 14 80    ;
CODE_018D65:          BEQ CODE_018D69                     ;; 018D65 : F0 02       ;
CODE_018D67:          STZ RAM_SpriteSpeedY,X              ;; 018D67 : 74 AA       ; Sprite Y Speed = 0 
CODE_018D69:          JSR.W IsOnGround                    ;; 018D69 : 20 0E 80    ;
CODE_018D6C:          BEQ CODE_018DA5                     ;; 018D6C : F0 37       ;
CODE_018D6E:          LDA RAM_SpriteState,X               ;; 018D6E : B5 C2       ;
CODE_018D70:          AND.B #$3F                          ;; 018D70 : 29 3F       ;
CODE_018D72:          BNE CODE_018D77                     ;; 018D72 : D0 03       ;
CODE_018D74:          JSR.W FaceMario                     ;; 018D74 : 20 7C 85    ;
CODE_018D77:          JSR.W SetSomeYSpeed??               ;; 018D77 : 20 04 9A    ;
CODE_018D7A:          LDA.W $151C,X                       ;; 018D7A : BD 1C 15    ;
CODE_018D7D:          BNE CODE_018D82                     ;; 018D7D : D0 03       ;
CODE_018D7F:          STZ.W $1570,X                       ;; 018D7F : 9E 70 15    ;
CODE_018D82:          LDA.W $1540,X                       ;; 018D82 : BD 40 15    ;
CODE_018D85:          BNE CODE_018DA5                     ;; 018D85 : D0 1E       ;
CODE_018D87:          INC.W $151C,X                       ;; 018D87 : FE 1C 15    ;
CODE_018D8A:          LDY.B #$F0                          ;; 018D8A : A0 F0       ;
CODE_018D8C:          LDA.W $151C,X                       ;; 018D8C : BD 1C 15    ;
CODE_018D8F:          CMP.B #$04                          ;; 018D8F : C9 04       ;
CODE_018D91:          BNE CODE_018DA3                     ;; 018D91 : D0 10       ;
CODE_018D93:          STZ.W $151C,X                       ;; 018D93 : 9E 1C 15    ;
CODE_018D96:          JSL.L GetRand                       ;; 018D96 : 22 F9 AC 01 ;
CODE_018D9A:          AND.B #$3F                          ;; 018D9A : 29 3F       ;
CODE_018D9C:          ORA.B #$50                          ;; 018D9C : 09 50       ;
CODE_018D9E:          STA.W $1540,X                       ;; 018D9E : 9D 40 15    ;
CODE_018DA1:          LDY.B #$D0                          ;; 018DA1 : A0 D0       ;
CODE_018DA3:          STY RAM_SpriteSpeedY,X              ;; 018DA3 : 94 AA       ;
CODE_018DA5:          JSR.W FlipIfTouchingObj             ;; 018DA5 : 20 89 90    ;
CODE_018DA8:          JSR.W SubSprSpr+MarioSpr            ;; 018DA8 : 20 C1 8F    ;
Return018DAB:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_018DAC:          JSR.W GoombaWingGfxRt               ;; 018DAC : 20 E9 8D    ;
CODE_018DAF:          LDA.W RAM_SprOAMIndex,X             ;; 018DAF : BD EA 15    ;
CODE_018DB2:          CLC                                 ;; 018DB2 : 18          ;
CODE_018DB3:          ADC.B #$04                          ;; 018DB3 : 69 04       ;
CODE_018DB5:          STA.W RAM_SprOAMIndex,X             ;; 018DB5 : 9D EA 15    ;
CODE_018DB8:          JMP.W SubSprGfx2Entry1              ;; 018DB8 : 4C 0D 9F    ;
                                                          ;;                      ;
CODE_018DBB:          LDA.B #$F8                          ;; 018DBB : A9 F8       ;
CODE_018DBD:          LDY.W RAM_SpriteDir,X               ;; 018DBD : BC 7C 15    ;
CODE_018DC0:          BNE CODE_018DC4                     ;; 018DC0 : D0 02       ;
CODE_018DC2:          LDA.B #$08                          ;; 018DC2 : A9 08       ;
CODE_018DC4:          STA RAM_SpriteSpeedX,X              ;; 018DC4 : 95 B6       ;
Return018DC6:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
DATA_018DC7:          .db $F7,$0B,$F6,$0D,$FD,$0C,$FC,$0D ;; 018DC7               ;
                      .db $0B,$F5,$0A,$F3,$0B,$FC,$0C,$FB ;; ?QPWZ?               ;
DATA_018DD7:          .db $F7,$F7,$F8,$F8,$01,$01,$02,$02 ;; 018DD7               ;
GoombaWingGfxProp:    .db $46,$06                         ;; ?QPWZ?               ;
                                                          ;;                      ;
GoombaWingTiles:      .db $C6,$C6,$5D,$5D                 ;; ?QPWZ?               ;
                                                          ;;                      ;
GoombaWingTileSize:   .db $02,$02,$00,$00                 ;; ?QPWZ?               ;
                                                          ;;                      ;
GoombaWingGfxRt:      JSR.W GetDrawInfoBnk1               ;; ?QPWZ? : 20 65 A3    ;
CODE_018DEC:          LDA.W $1570,X                       ;; 018DEC : BD 70 15    ;
CODE_018DEF:          LSR                                 ;; 018DEF : 4A          ;
CODE_018DF0:          LSR                                 ;; 018DF0 : 4A          ;
CODE_018DF1:          AND.B #$02                          ;; 018DF1 : 29 02       ;
CODE_018DF3:          CLC                                 ;; 018DF3 : 18          ;
CODE_018DF4:          ADC.W $1602,X                       ;; 018DF4 : 7D 02 16    ;
CODE_018DF7:          STA $05                             ;; 018DF7 : 85 05       ;
CODE_018DF9:          ASL                                 ;; 018DF9 : 0A          ;
CODE_018DFA:          STA $02                             ;; 018DFA : 85 02       ;
CODE_018DFC:          LDA.W RAM_SpriteDir,X               ;; 018DFC : BD 7C 15    ;
CODE_018DFF:          STA $04                             ;; 018DFF : 85 04       ;
CODE_018E01:          LDY.W RAM_SprOAMIndex,X             ;; 018E01 : BC EA 15    ; Y = Index into sprite OAM 
CODE_018E04:          PHX                                 ;; 018E04 : DA          ;
CODE_018E05:          LDX.B #$01                          ;; 018E05 : A2 01       ;
CODE_018E07:          STX $03                             ;; 018E07 : 86 03       ;
CODE_018E09:          TXA                                 ;; 018E09 : 8A          ;
CODE_018E0A:          CLC                                 ;; 018E0A : 18          ;
CODE_018E0B:          ADC $02                             ;; 018E0B : 65 02       ;
CODE_018E0D:          PHA                                 ;; 018E0D : 48          ;
CODE_018E0E:          LDX $04                             ;; 018E0E : A6 04       ;
CODE_018E10:          BNE CODE_018E15                     ;; 018E10 : D0 03       ;
CODE_018E12:          CLC                                 ;; 018E12 : 18          ;
CODE_018E13:          ADC.B #$08                          ;; 018E13 : 69 08       ;
CODE_018E15:          TAX                                 ;; 018E15 : AA          ;
CODE_018E16:          LDA $00                             ;; 018E16 : A5 00       ;
CODE_018E18:          CLC                                 ;; 018E18 : 18          ;
CODE_018E19:          ADC.W DATA_018DC7,X                 ;; 018E19 : 7D C7 8D    ;
CODE_018E1C:          STA.W OAM_DispX,Y                   ;; 018E1C : 99 00 03    ;
CODE_018E1F:          PLX                                 ;; 018E1F : FA          ;
CODE_018E20:          LDA $01                             ;; 018E20 : A5 01       ;
CODE_018E22:          CLC                                 ;; 018E22 : 18          ;
CODE_018E23:          ADC.W DATA_018DD7,X                 ;; 018E23 : 7D D7 8D    ;
CODE_018E26:          STA.W OAM_DispY,Y                   ;; 018E26 : 99 01 03    ;
CODE_018E29:          LDX $05                             ;; 018E29 : A6 05       ;
CODE_018E2B:          LDA.W GoombaWingTiles,X             ;; 018E2B : BD E1 8D    ;
CODE_018E2E:          STA.W OAM_Tile,Y                    ;; 018E2E : 99 02 03    ;
CODE_018E31:          PHY                                 ;; 018E31 : 5A          ;
CODE_018E32:          TYA                                 ;; 018E32 : 98          ;
CODE_018E33:          LSR                                 ;; 018E33 : 4A          ;
CODE_018E34:          LSR                                 ;; 018E34 : 4A          ;
CODE_018E35:          TAY                                 ;; 018E35 : A8          ;
CODE_018E36:          LDA.W GoombaWingTileSize,X          ;; 018E36 : BD E5 8D    ;
CODE_018E39:          STA.W OAM_TileSize,Y                ;; 018E39 : 99 60 04    ;
CODE_018E3C:          PLY                                 ;; 018E3C : 7A          ;
CODE_018E3D:          LDX $03                             ;; 018E3D : A6 03       ;
CODE_018E3F:          LDA $04                             ;; 018E3F : A5 04       ;
CODE_018E41:          LSR                                 ;; 018E41 : 4A          ;
CODE_018E42:          LDA.W GoombaWingGfxProp,X           ;; 018E42 : BD DF 8D    ;
CODE_018E45:          BCS CODE_018E49                     ;; 018E45 : B0 02       ;
CODE_018E47:          EOR.B #$40                          ;; 018E47 : 49 40       ;
CODE_018E49:          ORA $64                             ;; 018E49 : 05 64       ;
CODE_018E4B:          STA.W OAM_Prop,Y                    ;; 018E4B : 99 03 03    ;
CODE_018E4E:          TYA                                 ;; 018E4E : 98          ;
CODE_018E4F:          CLC                                 ;; 018E4F : 18          ;
CODE_018E50:          ADC.B #$08                          ;; 018E50 : 69 08       ;
CODE_018E52:          TAY                                 ;; 018E52 : A8          ;
CODE_018E53:          DEX                                 ;; 018E53 : CA          ;
CODE_018E54:          BPL CODE_018E07                     ;; 018E54 : 10 B1       ;
CODE_018E56:          PLX                                 ;; 018E56 : FA          ;
CODE_018E57:          LDY.B #$FF                          ;; 018E57 : A0 FF       ;
CODE_018E59:          LDA.B #$02                          ;; 018E59 : A9 02       ;
CODE_018E5B:          JSR.W FinishOAMWriteRt              ;; 018E5B : 20 BB B7    ;
Return018E5E:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
SetAnimationFrame:    INC.W $1570,X                       ;; ?QPWZ? : FE 70 15    ;
CODE_018E62:          LDA.W $1570,X                       ;; 018E62 : BD 70 15    ; \ Change animation image every 8 cycles 
CODE_018E65:          LSR                                 ;; 018E65 : 4A          ;  | 
CODE_018E66:          LSR                                 ;; 018E66 : 4A          ;  | 
CODE_018E67:          LSR                                 ;; 018E67 : 4A          ;  | 
CODE_018E68:          AND.B #$01                          ;; 018E68 : 29 01       ;  | 
CODE_018E6A:          STA.W $1602,X                       ;; 018E6A : 9D 02 16    ; / 
Return018E6D:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
PiranhaSpeed:         .db $00,$F0,$00,$10                 ;; ?QPWZ?               ;
                                                          ;;                      ;
PiranTimeInState:     .db $20,$30,$20,$30                 ;; ?QPWZ?               ;
                                                          ;;                      ;
ClassicPiranhas:      LDA.W $1594,X                       ;; ?QPWZ? : BD 94 15    ; \ Don't draw the sprite if in pipe and Mario naerby 
CODE_018E79:          BNE CODE_018E9A                     ;; 018E79 : D0 1F       ; / 
CODE_018E7B:          LDA $64                             ;; 018E7B : A5 64       ; \ Set sprite to go behind objects 
CODE_018E7D:          PHA                                 ;; 018E7D : 48          ;  | for the graphics routine 
CODE_018E7E:          LDA.W $15D0,X                       ;; 018E7E : BD D0 15    ;  | 
CODE_018E81:          BNE CODE_018E87                     ;; 018E81 : D0 04       ;  | 
CODE_018E83:          LDA.B #$10                          ;; 018E83 : A9 10       ;  | 
CODE_018E85:          STA $64                             ;; 018E85 : 85 64       ; / 
CODE_018E87:          JSR.W SubSprGfx1                    ;; 018E87 : 20 67 9D    ; Draw the sprite 
CODE_018E8A:          LDY.W RAM_SprOAMIndex,X             ;; 018E8A : BC EA 15    ; \ Modify the palette and page of the stem 
CODE_018E8D:          LDA.W OAM_Tile3Prop,Y               ;; 018E8D : B9 0B 03    ;  | 
CODE_018E90:          AND.B #$F1                          ;; 018E90 : 29 F1       ;  | 
CODE_018E92:          ORA.B #$0B                          ;; 018E92 : 09 0B       ;  | 
CODE_018E94:          STA.W OAM_Tile3Prop,Y               ;; 018E94 : 99 0B 03    ; / 
CODE_018E97:          PLA                                 ;; 018E97 : 68          ; \ Restore value of $64 
CODE_018E98:          STA $64                             ;; 018E98 : 85 64       ; / 
CODE_018E9A:          JSR.W SubOffscreen0Bnk1             ;; 018E9A : 20 31 AC    ;
CODE_018E9D:          LDA RAM_SpritesLocked               ;; 018E9D : A5 9D       ; \ Branch if sprites locked 
CODE_018E9F:          BNE Return018EC7                    ;; 018E9F : D0 26       ; / 
CODE_018EA1:          JSR.W SetAnimationFrame             ;; 018EA1 : 20 5F 8E    ;
CODE_018EA4:          LDA.W $1594,X                       ;; 018EA4 : BD 94 15    ; \ Don't don't process interactions if in pipe and Mario nearby 
CODE_018EA7:          BNE CODE_018EAC                     ;; 018EA7 : D0 03       ;  | 
CODE_018EA9:          JSR.W SubSprSpr+MarioSpr            ;; 018EA9 : 20 C1 8F    ; / 
CODE_018EAC:          LDA RAM_SpriteState,X               ;; 018EAC : B5 C2       ; \ Y = Piranha state 
CODE_018EAE:          AND.B #$03                          ;; 018EAE : 29 03       ;  | 
CODE_018EB0:          TAY                                 ;; 018EB0 : A8          ; / 
CODE_018EB1:          LDA.W $1540,X                       ;; 018EB1 : BD 40 15    ; \ Change state if it's time 
CODE_018EB4:          BEQ ChangePiranhaState              ;; 018EB4 : F0 12       ; / 
CODE_018EB6:          LDA.W PiranhaSpeed,Y                ;; 018EB6 : B9 6E 8E    ; Load Y speed 
CODE_018EB9:          LDY RAM_SpriteNum,X                 ;; 018EB9 : B4 9E       ; \ Invert speed if upside-down piranha 
CODE_018EBB:          CPY.B #$2A                          ;; 018EBB : C0 2A       ;  | 
CODE_018EBD:          BNE CODE_018EC2                     ;; 018EBD : D0 03       ;  | 
CODE_018EBF:          EOR.B #$FF                          ;; 018EBF : 49 FF       ;  | 
CODE_018EC1:          INC A                               ;; 018EC1 : 1A          ; / 
CODE_018EC2:          STA RAM_SpriteSpeedY,X              ;; 018EC2 : 95 AA       ; Store Y Speed 
CODE_018EC4:          JSR.W SubSprYPosNoGrvty             ;; 018EC4 : 20 D8 AB    ; Update position based on speed 
Return018EC7:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
ChangePiranhaState:   LDA RAM_SpriteState,X               ;; ?QPWZ? : B5 C2       ; \ $00 = Sprite state (00 - 03) 
CODE_018ECA:          AND.B #$03                          ;; 018ECA : 29 03       ;  | 
CODE_018ECC:          STA $00                             ;; 018ECC : 85 00       ; / 
CODE_018ECE:          BNE CODE_018EE1                     ;; 018ECE : D0 11       ; \ If the piranha is in the pipe (State 0)... 
CODE_018ED0:          JSR.W SubHorizPos                   ;; 018ED0 : 20 30 AD    ;  | ...check if Mario is nearby... 
CODE_018ED3:          LDA $0F                             ;; 018ED3 : A5 0F       ;  | 
CODE_018ED5:          CLC                                 ;; 018ED5 : 18          ;  | 
CODE_018ED6:          ADC.B #$1B                          ;; 018ED6 : 69 1B       ;  | 
CODE_018ED8:          CMP.B #$37                          ;; 018ED8 : C9 37       ;  | 
CODE_018EDA:          LDA.B #$01                          ;; 018EDA : A9 01       ;  | 
CODE_018EDC:          STA.W $1594,X                       ;; 018EDC : 9D 94 15    ;  | ...and set $1594,x if so 
CODE_018EDF:          BCC Return018EEE                    ;; 018EDF : 90 0D       ;  | 
CODE_018EE1:          STZ.W $1594,X                       ;; 018EE1 : 9E 94 15    ; / 
CODE_018EE4:          LDY $00                             ;; 018EE4 : A4 00       ; \ Set time in state 
CODE_018EE6:          LDA.W PiranTimeInState,Y            ;; 018EE6 : B9 72 8E    ;  | 
CODE_018EE9:          STA.W $1540,X                       ;; 018EE9 : 9D 40 15    ; / 
CODE_018EEC:          INC RAM_SpriteState,X               ;; 018EEC : F6 C2       ; Go to next state 
Return018EEE:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_018EEF:          LDY.B #$07                          ;; 018EEF : A0 07       ; \ Find a free extended sprite slot 
CODE_018EF1:          LDA.W RAM_ExSpriteNum,Y             ;; 018EF1 : B9 0B 17    ;
CODE_018EF4:          BEQ CODE_018F07                     ;; 018EF4 : F0 11       ;
CODE_018EF6:          DEY                                 ;; 018EF6 : 88          ;
CODE_018EF7:          BPL CODE_018EF1                     ;; 018EF7 : 10 F8       ;
ADDR_018EF9:          DEC.W $18FC                         ;; 018EF9 : CE FC 18    ;
ADDR_018EFC:          BPL ADDR_018F03                     ;; 018EFC : 10 05       ;
ADDR_018EFE:          LDA.B #$07                          ;; 018EFE : A9 07       ;
ADDR_018F00:          STA.W $18FC                         ;; 018F00 : 8D FC 18    ;
ADDR_018F03:          LDY.W $18FC                         ;; 018F03 : AC FC 18    ;
Return018F06:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_018F07:          LDA.W RAM_OffscreenHorz,X           ;; 018F07 : BD A0 15    ;
CODE_018F0A:          BNE Return018F06                    ;; 018F0A : D0 FA       ;
Return018F0C:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
HoppingFlame:         LDA RAM_SpritesLocked               ;; ?QPWZ? : A5 9D       ; \ Branch if sprites locked 
CODE_018F0F:          BNE CODE_018F49                     ;; 018F0F : D0 38       ; / 
CODE_018F11:          INC.W $1602,X                       ;; 018F11 : FE 02 16    ;
CODE_018F14:          JSR.W SetAnimationFrame             ;; 018F14 : 20 5F 8E    ;
CODE_018F17:          JSR.W SubUpdateSprPos               ;; 018F17 : 20 32 90    ;
CODE_018F1A:          DEC RAM_SpriteSpeedY,X              ;; 018F1A : D6 AA       ;
CODE_018F1C:          JSR.W CODE_018DBB                   ;; 018F1C : 20 BB 8D    ;
CODE_018F1F:          ASL RAM_SpriteSpeedX,X              ;; 018F1F : 16 B6       ;
CODE_018F21:          JSR.W IsOnGround                    ;; 018F21 : 20 0E 80    ;
CODE_018F24:          BEQ CODE_018F43                     ;; 018F24 : F0 1D       ;
CODE_018F26:          STZ RAM_SpriteSpeedX,X              ;; 018F26 : 74 B6       ; Sprite X Speed = 0 
CODE_018F28:          JSR.W SetSomeYSpeed??               ;; 018F28 : 20 04 9A    ;
CODE_018F2B:          LDA.W $1540,X                       ;; 018F2B : BD 40 15    ;
CODE_018F2E:          BEQ CODE_018F38                     ;; 018F2E : F0 08       ;
CODE_018F30:          DEC A                               ;; 018F30 : 3A          ;
CODE_018F31:          BNE CODE_018F43                     ;; 018F31 : D0 10       ;
CODE_018F33:          JSR.W CODE_018F50                   ;; 018F33 : 20 50 8F    ;
CODE_018F36:          BRA CODE_018F43                     ;; 018F36 : 80 0B       ;
                                                          ;;                      ;
CODE_018F38:          JSL.L GetRand                       ;; 018F38 : 22 F9 AC 01 ;
CODE_018F3C:          AND.B #$1F                          ;; 018F3C : 29 1F       ;
CODE_018F3E:          ORA.B #$20                          ;; 018F3E : 09 20       ;
CODE_018F40:          STA.W $1540,X                       ;; 018F40 : 9D 40 15    ;
CODE_018F43:          JSR.W FlipIfTouchingObj             ;; 018F43 : 20 89 90    ;
CODE_018F46:          JSR.W MarioSprInteractRt            ;; 018F46 : 20 E4 A7    ;
CODE_018F49:          JSR.W SubOffscreen0Bnk1             ;; 018F49 : 20 31 AC    ;
CODE_018F4C:          JSR.W SubSprGfx2Entry1              ;; 018F4C : 20 0D 9F    ;
Return018F4F:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_018F50:          JSL.L GetRand                       ;; 018F50 : 22 F9 AC 01 ;
CODE_018F54:          AND.B #$0F                          ;; 018F54 : 29 0F       ;
CODE_018F56:          ORA.B #$D0                          ;; 018F56 : 09 D0       ;
CODE_018F58:          STA RAM_SpriteSpeedY,X              ;; 018F58 : 95 AA       ;
CODE_018F5A:          LDA.W RAM_RandomByte1               ;; 018F5A : AD 8D 14    ;
CODE_018F5D:          AND.B #$03                          ;; 018F5D : 29 03       ;
CODE_018F5F:          BNE CODE_018F64                     ;; 018F5F : D0 03       ;
CODE_018F61:          JSR.W FaceMario                     ;; 018F61 : 20 7C 85    ;
CODE_018F64:          JSR.W IsSprOffScreen                ;; 018F64 : 20 CB 80    ;
CODE_018F67:          BNE Return018F96                    ;; 018F67 : D0 2D       ;
CODE_018F69:          JSR.W CODE_018EEF                   ;; 018F69 : 20 EF 8E    ;
CODE_018F6C:          LDA RAM_SpriteXLo,X                 ;; 018F6C : B5 E4       ;
CODE_018F6E:          CLC                                 ;; 018F6E : 18          ;
CODE_018F6F:          ADC.B #$04                          ;; 018F6F : 69 04       ;
CODE_018F71:          STA.W RAM_ExSpriteXLo,Y             ;; 018F71 : 99 1F 17    ;
CODE_018F74:          LDA.W RAM_SpriteXHi,X               ;; 018F74 : BD E0 14    ;
CODE_018F77:          ADC.B #$00                          ;; 018F77 : 69 00       ;
CODE_018F79:          STA.W RAM_ExSpriteXHi,Y             ;; 018F79 : 99 33 17    ;
CODE_018F7C:          LDA RAM_SpriteYLo,X                 ;; 018F7C : B5 D8       ;
CODE_018F7E:          CLC                                 ;; 018F7E : 18          ;
CODE_018F7F:          ADC.B #$08                          ;; 018F7F : 69 08       ;
CODE_018F81:          STA.W RAM_ExSpriteYLo,Y             ;; 018F81 : 99 15 17    ;
CODE_018F84:          LDA.W RAM_SpriteYHi,X               ;; 018F84 : BD D4 14    ;
CODE_018F87:          ADC.B #$00                          ;; 018F87 : 69 00       ;
CODE_018F89:          STA.W RAM_ExSpriteYHi,Y             ;; 018F89 : 99 29 17    ;
CODE_018F8C:          LDA.B #$03                          ;; 018F8C : A9 03       ; \ Extended sprite = Hopping flame's flame 
CODE_018F8E:          STA.W RAM_ExSpriteNum,Y             ;; 018F8E : 99 0B 17    ; / 
CODE_018F91:          LDA.B #$FF                          ;; 018F91 : A9 FF       ;
CODE_018F93:          STA.W $176F,Y                       ;; 018F93 : 99 6F 17    ;
Return018F96:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
Lakitu:               LDY.B #$00                          ;; ?QPWZ? : A0 00       ;
CODE_018F99:          LDA.W $1558,X                       ;; 018F99 : BD 58 15    ;
CODE_018F9C:          BEQ CODE_018FA0                     ;; 018F9C : F0 02       ;
CODE_018F9E:          LDY.B #$02                          ;; 018F9E : A0 02       ;
CODE_018FA0:          TYA                                 ;; 018FA0 : 98          ;
CODE_018FA1:          STA.W $1602,X                       ;; 018FA1 : 9D 02 16    ;
CODE_018FA4:          JSR.W SubSprGfx1                    ;; 018FA4 : 20 67 9D    ;
CODE_018FA7:          LDA.W $1558,X                       ;; 018FA7 : BD 58 15    ;
CODE_018FAA:          BEQ CODE_018FB8                     ;; 018FAA : F0 0C       ;
CODE_018FAC:          LDY.W RAM_SprOAMIndex,X             ;; 018FAC : BC EA 15    ; Y = Index into sprite OAM 
CODE_018FAF:          LDA.W OAM_Tile2DispY,Y              ;; 018FAF : B9 05 03    ;
CODE_018FB2:          SEC                                 ;; 018FB2 : 38          ;
CODE_018FB3:          SBC.B #$03                          ;; 018FB3 : E9 03       ;
CODE_018FB5:          STA.W OAM_Tile2DispY,Y              ;; 018FB5 : 99 05 03    ;
CODE_018FB8:          LDA.W $151C,X                       ;; 018FB8 : BD 1C 15    ;
CODE_018FBB:          BEQ SubSprSpr+MarioSpr              ;; 018FBB : F0 04       ;
CODE_018FBD:          JSL.L CODE_02E672                   ;; 018FBD : 22 72 E6 02 ;
SubSprSpr+MarioSpr:   JSR.W SubSprSprInteract             ;; ?QPWZ? : 20 0D A4    ;
CODE_018FC4:          JMP.W MarioSprInteractRt            ;; 018FC4 : 4C E4 A7    ;
                                                          ;;                      ;
                                                          ;;                      ;
BulletGfxProp:        .db $42,$02,$03,$83,$03,$43,$03,$43 ;; ?QPWZ?               ;
DATA_018FCF:          .db $00,$00,$01,$01,$02,$03,$03,$02 ;; 018FCF               ;
BulletSpeedX:         .db $20,$E0,$00,$00,$18,$18,$E8,$E8 ;; ?QPWZ?               ;
BulletSpeedY:         .db $00,$00,$E0,$20,$E8,$18,$18,$E8 ;; ?QPWZ?               ;
                                                          ;;                      ;
BulletBill:           LDA.B #$01                          ;; ?QPWZ? : A9 01       ;
CODE_018FE9:          STA.W RAM_SpriteDir,X               ;; 018FE9 : 9D 7C 15    ;
CODE_018FEC:          LDA RAM_SpritesLocked               ;; 018FEC : A5 9D       ; \ Branch if sprites locked 
CODE_018FEE:          BNE CODE_019014                     ;; 018FEE : D0 24       ; / 
CODE_018FF0:          LDY RAM_SpriteState,X               ;; 018FF0 : B4 C2       ;
CODE_018FF2:          LDA.W BulletGfxProp,Y               ;; 018FF2 : B9 C7 8F    ; \ Store gfx properties into palette byte
CODE_018FF5:          STA.W RAM_SpritePal,X               ;; 018FF5 : 9D F6 15    ; /
CODE_018FF8:          LDA.W DATA_018FCF,Y                 ;; 018FF8 : B9 CF 8F    ;
CODE_018FFB:          STA.W $1602,X                       ;; 018FFB : 9D 02 16    ;
CODE_018FFE:          LDA.W BulletSpeedX,Y                ;; 018FFE : B9 D7 8F    ; \ Set X speed
CODE_019001:          STA RAM_SpriteSpeedX,X              ;; 019001 : 95 B6       ; /
CODE_019003:          LDA.W BulletSpeedY,Y                ;; 019003 : B9 DF 8F    ; \ Set Y speed
CODE_019006:          STA RAM_SpriteSpeedY,X              ;; 019006 : 95 AA       ; /
CODE_019008:          JSR.W SubSprXPosNoGrvty             ;; 019008 : 20 CC AB    ; \ Update position
CODE_01900B:          JSR.W SubSprYPosNoGrvty             ;; 01900B : 20 D8 AB    ; /
CODE_01900E:          JSR.W CODE_019140                   ;; 01900E : 20 40 91    ;
CODE_019011:          JSR.W SubSprSpr+MarioSpr            ;; 019011 : 20 C1 8F    ; Interact with Mario and sprites
CODE_019014:          JSR.W SubOffscreen0Bnk1             ;; 019014 : 20 31 AC    ;
CODE_019017:          LDA RAM_SpriteYLo,X                 ;; 019017 : B5 D8       ;
CODE_019019:          SEC                                 ;; 019019 : 38          ;
CODE_01901A:          SBC RAM_ScreenBndryYLo              ;; 01901A : E5 1C       ;
CODE_01901C:          CMP.B #$F0                          ;; 01901C : C9 F0       ;
CODE_01901E:          BCC CODE_019023                     ;; 01901E : 90 03       ;
CODE_019020:          STZ.W $14C8,X                       ;; 019020 : 9E C8 14    ;
CODE_019023:          LDA.W $1540,X                       ;; 019023 : BD 40 15    ;
CODE_019026:          BEQ CODE_01902B                     ;; 019026 : F0 03       ;
CODE_019028:          JMP.W CODE_019546                   ;; 019028 : 4C 46 95    ;
                                                          ;;                      ;
CODE_01902B:          JMP.W SubSprGfx2Entry1              ;; 01902B : 4C 0D 9F    ;
                                                          ;;                      ;
                                                          ;;                      ;
DATA_01902E:          .db $40,$10                         ;; 01902E               ;
                                                          ;;                      ;
DATA_019030:          .db $03,$01                         ;; 019030               ;
                                                          ;;                      ;
SubUpdateSprPos:      JSR.W SubSprYPosNoGrvty             ;; ?QPWZ? : 20 D8 AB    ;
CODE_019035:          LDY.B #$00                          ;; 019035 : A0 00       ;
CODE_019037:          LDA.W $164A,X                       ;; 019037 : BD 4A 16    ;
CODE_01903A:          BEQ CODE_019049                     ;; 01903A : F0 0D       ;
CODE_01903C:          INY                                 ;; 01903C : C8          ;
CODE_01903D:          LDA RAM_SpriteSpeedY,X              ;; 01903D : B5 AA       ;
CODE_01903F:          BPL CODE_019049                     ;; 01903F : 10 08       ;
CODE_019041:          CMP.B #$E8                          ;; 019041 : C9 E8       ;
CODE_019043:          BCS CODE_019049                     ;; 019043 : B0 04       ;
CODE_019045:          LDA.B #$E8                          ;; 019045 : A9 E8       ;
CODE_019047:          STA RAM_SpriteSpeedY,X              ;; 019047 : 95 AA       ;
CODE_019049:          LDA RAM_SpriteSpeedY,X              ;; 019049 : B5 AA       ;
CODE_01904B:          CLC                                 ;; 01904B : 18          ;
CODE_01904C:          ADC.W DATA_019030,Y                 ;; 01904C : 79 30 90    ;
CODE_01904F:          STA RAM_SpriteSpeedY,X              ;; 01904F : 95 AA       ;
CODE_019051:          BMI CODE_01905D                     ;; 019051 : 30 0A       ;
CODE_019053:          CMP.W DATA_01902E,Y                 ;; 019053 : D9 2E 90    ;
CODE_019056:          BCC CODE_01905D                     ;; 019056 : 90 05       ;
CODE_019058:          LDA.W DATA_01902E,Y                 ;; 019058 : B9 2E 90    ;
CODE_01905B:          STA RAM_SpriteSpeedY,X              ;; 01905B : 95 AA       ;
CODE_01905D:          LDA RAM_SpriteSpeedX,X              ;; 01905D : B5 B6       ;
CODE_01905F:          PHA                                 ;; 01905F : 48          ;
CODE_019060:          LDY.W $164A,X                       ;; 019060 : BC 4A 16    ;
CODE_019063:          BEQ CODE_019076                     ;; 019063 : F0 11       ;
CODE_019065:          ASL                                 ;; 019065 : 0A          ;
CODE_019066:          ROR RAM_SpriteSpeedX,X              ;; 019066 : 76 B6       ;
CODE_019068:          LDA RAM_SpriteSpeedX,X              ;; 019068 : B5 B6       ;
CODE_01906A:          PHA                                 ;; 01906A : 48          ;
CODE_01906B:          STA $00                             ;; 01906B : 85 00       ;
CODE_01906D:          ASL                                 ;; 01906D : 0A          ;
CODE_01906E:          ROR $00                             ;; 01906E : 66 00       ;
CODE_019070:          PLA                                 ;; 019070 : 68          ;
CODE_019071:          CLC                                 ;; 019071 : 18          ;
CODE_019072:          ADC $00                             ;; 019072 : 65 00       ;
CODE_019074:          STA RAM_SpriteSpeedX,X              ;; 019074 : 95 B6       ;
CODE_019076:          JSR.W SubSprXPosNoGrvty             ;; 019076 : 20 CC AB    ;
CODE_019079:          PLA                                 ;; 019079 : 68          ;
CODE_01907A:          STA RAM_SpriteSpeedX,X              ;; 01907A : 95 B6       ;
CODE_01907C:          LDA.W $15DC,X                       ;; 01907C : BD DC 15    ;
CODE_01907F:          BNE ADDR_019085                     ;; 01907F : D0 04       ;
CODE_019081:          JSR.W CODE_019140                   ;; 019081 : 20 40 91    ;
Return019084:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
ADDR_019085:          STZ.W RAM_SprObjStatus,X            ;; 019085 : 9E 88 15    ;
Return019088:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
FlipIfTouchingObj:    LDA.W RAM_SpriteDir,X               ;; ?QPWZ? : BD 7C 15    ; \ If touching an object in the direction 
CODE_01908C:          INC A                               ;; 01908C : 1A          ;  | that the sprite is moving... 
CODE_01908D:          AND.W RAM_SprObjStatus,X            ;; 01908D : 3D 88 15    ;  | 
CODE_019090:          AND.B #$03                          ;; 019090 : 29 03       ;  | 
CODE_019092:          BEQ Return019097                    ;; 019092 : F0 03       ;  | 
CODE_019094:          JSR.W FlipSpriteDir                 ;; 019094 : 20 98 90    ;  | ...flip direction 
Return019097:         RTS                                 ;; ?QPWZ? : 60          ; / 
                                                          ;;                      ;
FlipSpriteDir:        LDA.W $15AC,X                       ;; ?QPWZ? : BD AC 15    ; \ Return if turning timer is set 
CODE_01909B:          BNE Return0190B1                    ;; 01909B : D0 14       ; / 
CODE_01909D:          LDA.B #$08                          ;; 01909D : A9 08       ; \ Set turning timer 
CODE_01909F:          STA.W $15AC,X                       ;; 01909F : 9D AC 15    ; / 
CODE_0190A2:          LDA RAM_SpriteSpeedX,X              ;; 0190A2 : B5 B6       ; \ Invert speed 
CODE_0190A4:          EOR.B #$FF                          ;; 0190A4 : 49 FF       ;  | 
CODE_0190A6:          INC A                               ;; 0190A6 : 1A          ;  | 
CODE_0190A7:          STA RAM_SpriteSpeedX,X              ;; 0190A7 : 95 B6       ; / 
CODE_0190A9:          LDA.W RAM_SpriteDir,X               ;; 0190A9 : BD 7C 15    ; \ Flip sprite direction 
CODE_0190AC:          EOR.B #$01                          ;; 0190AC : 49 01       ;  | 
CODE_0190AE:          STA.W RAM_SpriteDir,X               ;; 0190AE : 9D 7C 15    ; / 
Return0190B1:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
GenericSprGfxRt2:     PHB                                 ;; ?QPWZ? : 8B          ;
CODE_0190B3:          PHK                                 ;; 0190B3 : 4B          ;
CODE_0190B4:          PLB                                 ;; 0190B4 : AB          ;
CODE_0190B5:          JSR.W SubSprGfx2Entry1              ;; 0190B5 : 20 0D 9F    ;
CODE_0190B8:          PLB                                 ;; 0190B8 : AB          ;
Return0190B9:         RTL                                 ;; ?QPWZ? : 6B          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
SpriteObjClippingX:   .db $0E,$02,$08,$08,$0E,$02,$07,$07 ;; ?QPWZ?               ;
                      .db $07,$07,$07,$07,$0E,$02,$08,$08 ;; ?QPWZ?               ;
                      .db $10,$00,$08,$08,$0D,$02,$08,$08 ;; ?QPWZ?               ;
                      .db $07,$00,$04,$04,$1F,$01,$10,$10 ;; ?QPWZ?               ;
                      .db $0F,$00,$08,$08,$10,$00,$08,$08 ;; ?QPWZ?               ;
                      .db $0D,$02,$08,$08,$0E,$02,$08,$08 ;; ?QPWZ?               ;
                      .db $0D,$02,$08,$08,$10,$00,$08,$08 ;; ?QPWZ?               ;
                      .db $1F,$00,$10,$10,$08             ;; ?QPWZ?               ;
                                                          ;;                      ;
SpriteObjClippingY:   .db $08,$08,$10,$02,$12,$12,$20,$02 ;; ?QPWZ?               ;
                      .db $07,$07,$07,$07,$10,$10,$20,$0B ;; ?QPWZ?               ;
                      .db $12,$12,$20,$02,$18,$18,$20,$10 ;; ?QPWZ?               ;
                      .db $04,$04,$08,$00,$10,$10,$1F,$01 ;; ?QPWZ?               ;
                      .db $08,$08,$0F,$00,$08,$08,$10,$00 ;; ?QPWZ?               ;
                      .db $48,$48,$50,$42,$04,$04,$08,$00 ;; ?QPWZ?               ;
                      .db $00,$00,$00,$00,$08,$08,$10,$00 ;; ?QPWZ?               ;
                      .db $08,$08,$10,$00,$04             ;; ?QPWZ?               ;
                                                          ;;                      ;
DATA_019134:          .db $01,$02,$04,$08                 ;; 019134               ;
                                                          ;;                      ;
CODE_019138:          PHB                                 ;; 019138 : 8B          ;
CODE_019139:          PHK                                 ;; 019139 : 4B          ;
CODE_01913A:          PLB                                 ;; 01913A : AB          ;
CODE_01913B:          JSR.W CODE_019140                   ;; 01913B : 20 40 91    ;
CODE_01913E:          PLB                                 ;; 01913E : AB          ;
Return01913F:         RTL                                 ;; ?QPWZ? : 6B          ; Return 
                                                          ;;                      ;
CODE_019140:          STZ.W $1694                         ;; 019140 : 9C 94 16    ;
CODE_019143:          STZ.W RAM_SprObjStatus,X            ;; 019143 : 9E 88 15    ; Set sprite's position status to 0 (in air) 
CODE_019146:          STZ.W $15B8,X                       ;; 019146 : 9E B8 15    ;
CODE_019149:          STZ.W $185E                         ;; 019149 : 9C 5E 18    ;
CODE_01914C:          LDA.W $164A,X                       ;; 01914C : BD 4A 16    ;
CODE_01914F:          STA.W $1695                         ;; 01914F : 8D 95 16    ;
CODE_019152:          STZ.W $164A,X                       ;; 019152 : 9E 4A 16    ;
CODE_019155:          JSR.W CODE_019211                   ;; 019155 : 20 11 92    ;
CODE_019158:          LDA RAM_IsVerticalLvl               ;; 019158 : A5 5B       ; Vertical level flag 
CODE_01915A:          BPL CODE_0191BE                     ;; 01915A : 10 62       ;
CODE_01915C:          INC.W $185E                         ;; 01915C : EE 5E 18    ;
CODE_01915F:          LDA RAM_SpriteXLo,X                 ;; 01915F : B5 E4       ; \ Sprite's X position += $26 
CODE_019161:          CLC                                 ;; 019161 : 18          ;  | for call to below routine 
CODE_019162:          ADC $26                             ;; 019162 : 65 26       ;  | 
CODE_019164:          STA RAM_SpriteXLo,X                 ;; 019164 : 95 E4       ;  | 
CODE_019166:          LDA.W RAM_SpriteXHi,X               ;; 019166 : BD E0 14    ;  | 
CODE_019169:          ADC $27                             ;; 019169 : 65 27       ;  | 
CODE_01916B:          STA.W RAM_SpriteXHi,X               ;; 01916B : 9D E0 14    ; / 
CODE_01916E:          LDA RAM_SpriteYLo,X                 ;; 01916E : B5 D8       ; \ Sprite's Y position += $28 
CODE_019170:          CLC                                 ;; 019170 : 18          ;  | for call to below routine 
CODE_019171:          ADC $28                             ;; 019171 : 65 28       ;  | 
CODE_019173:          STA RAM_SpriteYLo,X                 ;; 019173 : 95 D8       ;  | 
CODE_019175:          LDA.W RAM_SpriteYHi,X               ;; 019175 : BD D4 14    ;  | 
CODE_019178:          ADC $29                             ;; 019178 : 65 29       ;  | 
CODE_01917A:          STA.W RAM_SpriteYHi,X               ;; 01917A : 9D D4 14    ; / 
CODE_01917D:          JSR.W CODE_019211                   ;; 01917D : 20 11 92    ;
CODE_019180:          LDA RAM_SpriteXLo,X                 ;; 019180 : B5 E4       ; \ Restore sprite's original position 
CODE_019182:          SEC                                 ;; 019182 : 38          ;  | 
CODE_019183:          SBC $26                             ;; 019183 : E5 26       ;  | 
CODE_019185:          STA RAM_SpriteXLo,X                 ;; 019185 : 95 E4       ;  | 
CODE_019187:          LDA.W RAM_SpriteXHi,X               ;; 019187 : BD E0 14    ;  | 
CODE_01918A:          SBC $27                             ;; 01918A : E5 27       ;  | 
CODE_01918C:          STA.W RAM_SpriteXHi,X               ;; 01918C : 9D E0 14    ;  | 
CODE_01918F:          LDA RAM_SpriteYLo,X                 ;; 01918F : B5 D8       ;  | 
CODE_019191:          SEC                                 ;; 019191 : 38          ;  | 
CODE_019192:          SBC $28                             ;; 019192 : E5 28       ;  | 
CODE_019194:          STA RAM_SpriteYLo,X                 ;; 019194 : 95 D8       ;  | 
CODE_019196:          LDA.W RAM_SpriteYHi,X               ;; 019196 : BD D4 14    ;  | 
CODE_019199:          SBC $29                             ;; 019199 : E5 29       ;  | 
CODE_01919B:          STA.W RAM_SpriteYHi,X               ;; 01919B : 9D D4 14    ; / 
CODE_01919E:          LDA.W RAM_SprObjStatus,X            ;; 01919E : BD 88 15    ;
CODE_0191A1:          BPL CODE_0191BE                     ;; 0191A1 : 10 1B       ;
CODE_0191A3:          AND.B #$03                          ;; 0191A3 : 29 03       ;
CODE_0191A5:          BNE CODE_0191BE                     ;; 0191A5 : D0 17       ;
CODE_0191A7:          LDY.B #$00                          ;; 0191A7 : A0 00       ;
CODE_0191A9:          LDA.W $17BF                         ;; 0191A9 : AD BF 17    ; \ A = -$17BF 
CODE_0191AC:          EOR.B #$FF                          ;; 0191AC : 49 FF       ;  | 
CODE_0191AE:          INC A                               ;; 0191AE : 1A          ;  | 
CODE_0191AF:          BPL CODE_0191B2                     ;; 0191AF : 10 01       ;
ADDR_0191B1:          DEY                                 ;; 0191B1 : 88          ;
CODE_0191B2:          CLC                                 ;; 0191B2 : 18          ;
CODE_0191B3:          ADC RAM_SpriteXLo,X                 ;; 0191B3 : 75 E4       ;
CODE_0191B5:          STA RAM_SpriteXLo,X                 ;; 0191B5 : 95 E4       ;
CODE_0191B7:          TYA                                 ;; 0191B7 : 98          ;
CODE_0191B8:          ADC.W RAM_SpriteXHi,X               ;; 0191B8 : 7D E0 14    ;
CODE_0191BB:          STA.W RAM_SpriteXHi,X               ;; 0191BB : 9D E0 14    ;
CODE_0191BE:          LDA.W RAM_Tweaker190F,X             ;; 0191BE : BD 0F 19    ; \ Branch if "Don't get stuck in walls" is not set 
CODE_0191C1:          BPL CODE_0191ED                     ;; 0191C1 : 10 2A       ; / 
CODE_0191C3:          LDA.W RAM_SprObjStatus,X            ;; 0191C3 : BD 88 15    ; \ Branch if not touching object 
CODE_0191C6:          AND.B #$03                          ;; 0191C6 : 29 03       ;  | 
CODE_0191C8:          BEQ CODE_0191ED                     ;; 0191C8 : F0 23       ; / 
CODE_0191CA:          TAY                                 ;; 0191CA : A8          ;
CODE_0191CB:          LDA.W $15D0,X                       ;; 0191CB : BD D0 15    ;
CODE_0191CE:          BNE CODE_0191ED                     ;; 0191CE : D0 1D       ;
CODE_0191D0:          LDA RAM_SpriteXLo,X                 ;; 0191D0 : B5 E4       ;
CODE_0191D2:          CLC                                 ;; 0191D2 : 18          ;
CODE_0191D3:          ADC.W Return019283,Y                ;; 0191D3 : 79 83 92    ;
CODE_0191D6:          STA RAM_SpriteXLo,X                 ;; 0191D6 : 95 E4       ;
CODE_0191D8:          LDA.W RAM_SpriteXHi,X               ;; 0191D8 : BD E0 14    ;
CODE_0191DB:          ADC.W DATA_019285,Y                 ;; 0191DB : 79 85 92    ;
CODE_0191DE:          STA.W RAM_SpriteXHi,X               ;; 0191DE : 9D E0 14    ;
CODE_0191E1:          LDA RAM_SpriteSpeedX,X              ;; 0191E1 : B5 B6       ;
CODE_0191E3:          BNE CODE_0191ED                     ;; 0191E3 : D0 08       ;
CODE_0191E5:          LDA.W RAM_SprObjStatus,X            ;; 0191E5 : BD 88 15    ;
CODE_0191E8:          AND.B #$FC                          ;; 0191E8 : 29 FC       ;
CODE_0191EA:          STA.W RAM_SprObjStatus,X            ;; 0191EA : 9D 88 15    ;
CODE_0191ED:          LDA.W $164A,X                       ;; 0191ED : BD 4A 16    ;
CODE_0191F0:          EOR.W $1695                         ;; 0191F0 : 4D 95 16    ;
CODE_0191F3:          BEQ Return019210                    ;; 0191F3 : F0 1B       ;
CODE_0191F5:          ASL                                 ;; 0191F5 : 0A          ;
CODE_0191F6:          LDA.W RAM_Tweaker166E,X             ;; 0191F6 : BD 6E 16    ; \ TODO: Unknown Bit A... 
CODE_0191F9:          AND.B #$40                          ;; 0191F9 : 29 40       ;  | ... may be related to cape 
CODE_0191FB:          ORA.W $1FE2,X                       ;; 0191FB : 1D E2 1F    ;
CODE_0191FE:          BNE Return019210                    ;; 0191FE : D0 10       ;
CODE_019200:          BCS CODE_01920C                     ;; 019200 : B0 0A       ;
CODE_019202:          BIT.W $0D9B                         ;; 019202 : 2C 9B 0D    ;
CODE_019205:          BMI CODE_01920C                     ;; 019205 : 30 05       ;
CODE_019207:          JSL.L CODE_0284C0                   ;; 019207 : 22 C0 84 02 ;
Return01920B:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01920C:          JSL.L CODE_028528                   ;; 01920C : 22 28 85 02 ;
Return019210:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_019211:          LDA.W $190E                         ;; 019211 : AD 0E 19    ;
CODE_019214:          BEQ CODE_01925B                     ;; 019214 : F0 45       ;
CODE_019216:          LDA RAM_IsWaterLevel                ;; 019216 : A5 85       ;
CODE_019218:          BNE CODE_019258                     ;; 019218 : D0 3E       ;
CODE_01921A:          LDY.B #$3C                          ;; 01921A : A0 3C       ;
CODE_01921C:          JSR.W CODE_01944D                   ;; 01921C : 20 4D 94    ;
CODE_01921F:          BEQ CODE_019233                     ;; 01921F : F0 12       ;
CODE_019221:          LDA.W $1693                         ;; 019221 : AD 93 16    ;
CODE_019224:          CMP.B #$6E                          ;; 019224 : C9 6E       ;
CODE_019226:          BCC CODE_01925B                     ;; 019226 : 90 33       ;
CODE_019228:          JSL.L CODE_00F04D                   ;; 019228 : 22 4D F0 00 ;
CODE_01922C:          LDA.W $1693                         ;; 01922C : AD 93 16    ;
CODE_01922F:          BCC CODE_01925B                     ;; 01922F : 90 2A       ;
CODE_019231:          BCS CODE_01923A                     ;; 019231 : B0 07       ;
CODE_019233:          LDA.W $1693                         ;; 019233 : AD 93 16    ;
CODE_019236:          CMP.B #$06                          ;; 019236 : C9 06       ;
CODE_019238:          BCS CODE_01925B                     ;; 019238 : B0 21       ;
CODE_01923A:          TAY                                 ;; 01923A : A8          ;
CODE_01923B:          LDA.W $164A,X                       ;; 01923B : BD 4A 16    ;
CODE_01923E:          ORA.B #$01                          ;; 01923E : 09 01       ;
CODE_019240:          CPY.B #$04                          ;; 019240 : C0 04       ;
CODE_019242:          BNE CODE_019258                     ;; 019242 : D0 14       ;
CODE_019244:          PHA                                 ;; 019244 : 48          ;
CODE_019245:          LDA RAM_SpriteNum,X                 ;; 019245 : B5 9E       ; \ Branch if Yoshi 
CODE_019247:          CMP.B #$35                          ;; 019247 : C9 35       ;  | 
CODE_019249:          BEQ CODE_019252                     ;; 019249 : F0 07       ; / 
CODE_01924B:          LDA.W RAM_Tweaker167A,X             ;; 01924B : BD 7A 16    ; \ Branch if "Process interaction every frame" 
CODE_01924E:          AND.B #$02                          ;; 01924E : 29 02       ;  | is set 
CODE_019250:          BNE CODE_019255                     ;; 019250 : D0 03       ; / 
CODE_019252:          JSR.W CODE_019330                   ;; 019252 : 20 30 93    ;
CODE_019255:          PLA                                 ;; 019255 : 68          ;
CODE_019256:          ORA.B #$80                          ;; 019256 : 09 80       ;
CODE_019258:          STA.W $164A,X                       ;; 019258 : 9D 4A 16    ;
CODE_01925B:          LDA.W RAM_Tweaker1686,X             ;; 01925B : BD 86 16    ;
CODE_01925E:          BMI Return019210                    ;; 01925E : 30 B0       ;
CODE_019260:          LDA.W $185E                         ;; 019260 : AD 5E 18    ;
CODE_019263:          BEQ CODE_01926F                     ;; 019263 : F0 0A       ;
CODE_019265:          BIT.W $190E                         ;; 019265 : 2C 0E 19    ;
CODE_019268:          BVS Return0192C0                    ;; 019268 : 70 56       ;
CODE_01926A:          LDA.W RAM_Tweaker166E,X             ;; 01926A : BD 6E 16    ; \ TODO: Return if Unknown Bit B is set 
CODE_01926D:          BMI Return0192C0                    ;; 01926D : 30 51       ; / 
CODE_01926F:          JSR.W CODE_0192C9                   ;; 01926F : 20 C9 92    ;
CODE_019272:          LDA.W RAM_Tweaker190F,X             ;; 019272 : BD 0F 19    ; \ Branch if "Don't get stuck in walls" is not set 
CODE_019275:          BPL CODE_019288                     ;; 019275 : 10 11       ; / 
CODE_019277:          LDA RAM_SpriteSpeedX,X              ;; 019277 : B5 B6       ; \ Branch if sprite has X speed... 
CODE_019279:          ORA.W $15AC,X                       ;; 019279 : 1D AC 15    ;  | ...or sprite is turning 
CODE_01927C:          BNE CODE_019288                     ;; 01927C : D0 0A       ; / 
CODE_01927E:          LDA RAM_FrameCounter                ;; 01927E : A5 13       ;
CODE_019280:          JSR.W CODE_01928E                   ;; 019280 : 20 8E 92    ;
Return019283:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
DATA_019284:          .db $FC                             ;; 019284               ;
                                                          ;;                      ;
DATA_019285:          .db $04,$FF,$00                     ;; 019285               ;
                                                          ;;                      ;
CODE_019288:          LDA RAM_SpriteSpeedX,X              ;; 019288 : B5 B6       ;
CODE_01928A:          BEQ Return0192C0                    ;; 01928A : F0 34       ;
CODE_01928C:          ASL                                 ;; 01928C : 0A          ;
CODE_01928D:          ROL                                 ;; 01928D : 2A          ;
CODE_01928E:          AND.B #$01                          ;; 01928E : 29 01       ;
CODE_019290:          TAY                                 ;; 019290 : A8          ;
CODE_019291:          JSR.W CODE_019441                   ;; 019291 : 20 41 94    ;
CODE_019294:          STA.W $1862                         ;; 019294 : 8D 62 18    ;
CODE_019297:          BEQ CODE_0192BA                     ;; 019297 : F0 21       ;
CODE_019299:          LDA.W $1693                         ;; 019299 : AD 93 16    ;
CODE_01929C:          CMP.B #$11                          ;; 01929C : C9 11       ;
CODE_01929E:          BCC CODE_0192BA                     ;; 01929E : 90 1A       ;
CODE_0192A0:          CMP.B #$6E                          ;; 0192A0 : C9 6E       ;
CODE_0192A2:          BCS CODE_0192BA                     ;; 0192A2 : B0 16       ;
CODE_0192A4:          JSR.W CODE_019425                   ;; 0192A4 : 20 25 94    ;
CODE_0192A7:          LDA.W $1693                         ;; 0192A7 : AD 93 16    ;
CODE_0192AA:          STA.W $18A7                         ;; 0192AA : 8D A7 18    ;
CODE_0192AD:          LDA.W $185E                         ;; 0192AD : AD 5E 18    ;
CODE_0192B0:          BEQ CODE_0192BA                     ;; 0192B0 : F0 08       ;
CODE_0192B2:          LDA.W RAM_SprObjStatus,X            ;; 0192B2 : BD 88 15    ;
CODE_0192B5:          ORA.B #$40                          ;; 0192B5 : 09 40       ;
CODE_0192B7:          STA.W RAM_SprObjStatus,X            ;; 0192B7 : 9D 88 15    ;
CODE_0192BA:          LDA.W $1693                         ;; 0192BA : AD 93 16    ;
CODE_0192BD:          STA.W $1860                         ;; 0192BD : 8D 60 18    ;
Return0192C0:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
DATA_0192C1:          .db $FE,$02,$FF,$00                 ;; 0192C1               ;
                                                          ;;                      ;
DATA_0192C5:          .db $01,$FF                         ;; 0192C5               ;
                                                          ;;                      ;
DATA_0192C7:          .db $00,$FF                         ;; 0192C7               ;
                                                          ;;                      ;
CODE_0192C9:          LDY.B #$02                          ;; 0192C9 : A0 02       ;
CODE_0192CB:          LDA RAM_SpriteSpeedY,X              ;; 0192CB : B5 AA       ;
CODE_0192CD:          BPL CODE_0192D0                     ;; 0192CD : 10 01       ;
CODE_0192CF:          INY                                 ;; 0192CF : C8          ;
CODE_0192D0:          JSR.W CODE_019441                   ;; 0192D0 : 20 41 94    ;
CODE_0192D3:          STA.W $18D7                         ;; 0192D3 : 8D D7 18    ;
CODE_0192D6:          PHP                                 ;; 0192D6 : 08          ;
CODE_0192D7:          LDA.W $1693                         ;; 0192D7 : AD 93 16    ;
CODE_0192DA:          STA.W $185F                         ;; 0192DA : 8D 5F 18    ;
CODE_0192DD:          PLP                                 ;; 0192DD : 28          ;
CODE_0192DE:          BEQ Return01930F                    ;; 0192DE : F0 2F       ;
CODE_0192E0:          LDA.W $1693                         ;; 0192E0 : AD 93 16    ;
CODE_0192E3:          CPY.B #$02                          ;; 0192E3 : C0 02       ;
CODE_0192E5:          BEQ CODE_019310                     ;; 0192E5 : F0 29       ;
CODE_0192E7:          CMP.B #$11                          ;; 0192E7 : C9 11       ;
CODE_0192E9:          BCC Return01930F                    ;; 0192E9 : 90 24       ;
CODE_0192EB:          CMP.B #$6E                          ;; 0192EB : C9 6E       ;
CODE_0192ED:          BCC CODE_0192F9                     ;; 0192ED : 90 0A       ;
CODE_0192EF:          CMP.W $1430                         ;; 0192EF : CD 30 14    ;
CODE_0192F2:          BCC Return01930F                    ;; 0192F2 : 90 1B       ;
CODE_0192F4:          CMP.W $1431                         ;; 0192F4 : CD 31 14    ;
CODE_0192F7:          BCS Return01930F                    ;; 0192F7 : B0 16       ;
CODE_0192F9:          JSR.W CODE_019425                   ;; 0192F9 : 20 25 94    ;
CODE_0192FC:          LDA.W $1693                         ;; 0192FC : AD 93 16    ;
CODE_0192FF:          STA.W $1868                         ;; 0192FF : 8D 68 18    ;
CODE_019302:          LDA.W $185E                         ;; 019302 : AD 5E 18    ;
CODE_019305:          BEQ Return01930F                    ;; 019305 : F0 08       ;
CODE_019307:          LDA.W RAM_SprObjStatus,X            ;; 019307 : BD 88 15    ;
CODE_01930A:          ORA.B #$20                          ;; 01930A : 09 20       ;
CODE_01930C:          STA.W RAM_SprObjStatus,X            ;; 01930C : 9D 88 15    ;
Return01930F:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_019310:          CMP.B #$59                          ;; 019310 : C9 59       ;
CODE_019312:          BCC CODE_01933B                     ;; 019312 : 90 27       ;
CODE_019314:          CMP.B #$5C                          ;; 019314 : C9 5C       ;
CODE_019316:          BCS CODE_01933B                     ;; 019316 : B0 23       ;
CODE_019318:          LDY.W $1931                         ;; 019318 : AC 31 19    ;
CODE_01931B:          CPY.B #$0E                          ;; 01931B : C0 0E       ;
CODE_01931D:          BEQ CODE_019323                     ;; 01931D : F0 04       ;
CODE_01931F:          CPY.B #$03                          ;; 01931F : C0 03       ;
CODE_019321:          BNE CODE_01933B                     ;; 019321 : D0 18       ;
CODE_019323:          LDA RAM_SpriteNum,X                 ;; 019323 : B5 9E       ; \ Branch if sprite == Yoshi 
CODE_019325:          CMP.B #$35                          ;; 019325 : C9 35       ;  | 
CODE_019327:          BEQ CODE_019330                     ;; 019327 : F0 07       ; / 
CODE_019329:          LDA.W RAM_Tweaker167A,X             ;; 019329 : BD 7A 16    ; \ Branch if "Process interaction every frame" 
CODE_01932C:          AND.B #$02                          ;; 01932C : 29 02       ;  | is set 
CODE_01932E:          BNE CODE_01933B                     ;; 01932E : D0 0B       ; / 
CODE_019330:          LDA.B #$05                          ;; 019330 : A9 05       ; \ Sprite status = #$05 ??? 
CODE_019332:          STA.W $14C8,X                       ;; 019332 : 9D C8 14    ; / 
CODE_019335:          LDA.B #$40                          ;; 019335 : A9 40       ;
CODE_019337:          STA.W $1558,X                       ;; 019337 : 9D 58 15    ;
Return01933A:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01933B:          CMP.B #$11                          ;; 01933B : C9 11       ;
CODE_01933D:          BCC CODE_0193B0                     ;; 01933D : 90 71       ;
CODE_01933F:          CMP.B #$6E                          ;; 01933F : C9 6E       ;
CODE_019341:          BCC CODE_0193B8                     ;; 019341 : 90 75       ;
CODE_019343:          CMP.B #$D8                          ;; 019343 : C9 D8       ;
CODE_019345:          BCS CODE_019386                     ;; 019345 : B0 3F       ;
CODE_019347:          JSL.L CODE_00FA19                   ;; 019347 : 22 19 FA 00 ;
CODE_01934B:          LDA [$05],Y                         ;; 01934B : B7 05       ;
CODE_01934D:          CMP.B #$10                          ;; 01934D : C9 10       ;
CODE_01934F:          BEQ Return0193AF                    ;; 01934F : F0 5E       ;
CODE_019351:          BCS CODE_019386                     ;; 019351 : B0 33       ;
CODE_019353:          LDA $00                             ;; 019353 : A5 00       ;
CODE_019355:          CMP.B #$0C                          ;; 019355 : C9 0C       ;
CODE_019357:          BCS CODE_01935D                     ;; 019357 : B0 04       ;
CODE_019359:          CMP [$05],Y                         ;; 019359 : D7 05       ;
CODE_01935B:          BCC Return0193AF                    ;; 01935B : 90 52       ;
CODE_01935D:          LDA [$05],Y                         ;; 01935D : B7 05       ;
CODE_01935F:          STA.W $1694                         ;; 01935F : 8D 94 16    ;
CODE_019362:          PHX                                 ;; 019362 : DA          ;
CODE_019363:          LDX $08                             ;; 019363 : A6 08       ;
CODE_019365:          LDA.L DATA_00E53D,X                 ;; 019365 : BF 3D E5 00 ;
CODE_019369:          PLX                                 ;; 019369 : FA          ;
CODE_01936A:          STA.W $15B8,X                       ;; 01936A : 9D B8 15    ;
CODE_01936D:          CMP.B #$04                          ;; 01936D : C9 04       ;
CODE_01936F:          BEQ CODE_019375                     ;; 01936F : F0 04       ;
CODE_019371:          CMP.B #$FC                          ;; 019371 : C9 FC       ;
CODE_019373:          BNE CODE_019384                     ;; 019373 : D0 0F       ;
CODE_019375:          EOR RAM_SpriteSpeedX,X              ;; 019375 : 55 B6       ;
CODE_019377:          BPL CODE_019380                     ;; 019377 : 10 07       ;
CODE_019379:          LDA RAM_SpriteSpeedX,X              ;; 019379 : B5 B6       ;
CODE_01937B:          BEQ CODE_019380                     ;; 01937B : F0 03       ;
CODE_01937D:          JSR.W FlipSpriteDir                 ;; 01937D : 20 98 90    ;
CODE_019380:          JSL.L CODE_03C1CA                   ;; 019380 : 22 CA C1 03 ;
CODE_019384:          BRA CODE_0193B8                     ;; 019384 : 80 32       ;
                                                          ;;                      ;
CODE_019386:          LDA $0C                             ;; 019386 : A5 0C       ;
CODE_019388:          AND.B #$0F                          ;; 019388 : 29 0F       ;
CODE_01938A:          CMP.B #$05                          ;; 01938A : C9 05       ;
CODE_01938C:          BCS Return0193AF                    ;; 01938C : B0 21       ;
CODE_01938E:          LDA.W $14C8,X                       ;; 01938E : BD C8 14    ; \ Return if sprite status == Killed 
CODE_019391:          CMP.B #$02                          ;; 019391 : C9 02       ;  | 
CODE_019393:          BEQ Return0193AF                    ;; 019393 : F0 1A       ; / 
CODE_019395:          CMP.B #$05                          ;; 019395 : C9 05       ; \ Return if sprite status == #$05 
CODE_019397:          BEQ Return0193AF                    ;; 019397 : F0 16       ; / 
CODE_019399:          CMP.B #$0B                          ;; 019399 : C9 0B       ; \ Return if sprite status == Carried 
CODE_01939B:          BEQ Return0193AF                    ;; 01939B : F0 12       ; / 
CODE_01939D:          LDA RAM_SpriteYLo,X                 ;; 01939D : B5 D8       ;
CODE_01939F:          SEC                                 ;; 01939F : 38          ;
CODE_0193A0:          SBC.B #$01                          ;; 0193A0 : E9 01       ;
CODE_0193A2:          STA RAM_SpriteYLo,X                 ;; 0193A2 : 95 D8       ;
CODE_0193A4:          LDA.W RAM_SpriteYHi,X               ;; 0193A4 : BD D4 14    ;
CODE_0193A7:          SBC.B #$00                          ;; 0193A7 : E9 00       ;
CODE_0193A9:          STA.W RAM_SpriteYHi,X               ;; 0193A9 : 9D D4 14    ;
CODE_0193AC:          JSR.W CODE_0192C9                   ;; 0193AC : 20 C9 92    ;
Return0193AF:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_0193B0:          LDA $0C                             ;; 0193B0 : A5 0C       ;
CODE_0193B2:          AND.B #$0F                          ;; 0193B2 : 29 0F       ;
CODE_0193B4:          CMP.B #$05                          ;; 0193B4 : C9 05       ;
CODE_0193B6:          BCS Return019424                    ;; 0193B6 : B0 6C       ;
CODE_0193B8:          LDA.W RAM_Tweaker1686,X             ;; 0193B8 : BD 86 16    ;
CODE_0193BB:          AND.B #$04                          ;; 0193BB : 29 04       ;
CODE_0193BD:          BNE CODE_019414                     ;; 0193BD : D0 55       ;
CODE_0193BF:          LDA.W $14C8,X                       ;; 0193BF : BD C8 14    ; \ Return if sprite status == Killed 
CODE_0193C2:          CMP.B #$02                          ;; 0193C2 : C9 02       ;  | 
CODE_0193C4:          BEQ Return019424                    ;; 0193C4 : F0 5E       ; / 
CODE_0193C6:          CMP.B #$05                          ;; 0193C6 : C9 05       ; \ Return if sprite status == #$05 
CODE_0193C8:          BEQ Return019424                    ;; 0193C8 : F0 5A       ; / 
CODE_0193CA:          CMP.B #$0B                          ;; 0193CA : C9 0B       ; \ Return if sprite status == Carried 
CODE_0193CC:          BEQ Return019424                    ;; 0193CC : F0 56       ; / 
CODE_0193CE:          LDY.W $1693                         ;; 0193CE : AC 93 16    ;
CODE_0193D1:          CPY.B #$0C                          ;; 0193D1 : C0 0C       ;
CODE_0193D3:          BEQ CODE_0193D9                     ;; 0193D3 : F0 04       ;
CODE_0193D5:          CPY.B #$0D                          ;; 0193D5 : C0 0D       ;
CODE_0193D7:          BNE CODE_019405                     ;; 0193D7 : D0 2C       ;
CODE_0193D9:          LDA RAM_FrameCounter                ;; 0193D9 : A5 13       ;
CODE_0193DB:          AND.B #$03                          ;; 0193DB : 29 03       ;
CODE_0193DD:          BNE CODE_019405                     ;; 0193DD : D0 26       ;
CODE_0193DF:          JSR.W IsTouchingObjSide             ;; 0193DF : 20 08 80    ;
CODE_0193E2:          BNE CODE_019405                     ;; 0193E2 : D0 21       ;
CODE_0193E4:          LDA.W $1931                         ;; 0193E4 : AD 31 19    ;
CODE_0193E7:          CMP.B #$02                          ;; 0193E7 : C9 02       ;
CODE_0193E9:          BEQ ADDR_0193EF                     ;; 0193E9 : F0 04       ;
CODE_0193EB:          CMP.B #$08                          ;; 0193EB : C9 08       ;
CODE_0193ED:          BNE CODE_019405                     ;; 0193ED : D0 16       ;
ADDR_0193EF:          TYA                                 ;; 0193EF : 98          ;
ADDR_0193F0:          SEC                                 ;; 0193F0 : 38          ;
ADDR_0193F1:          SBC.B #$0C                          ;; 0193F1 : E9 0C       ;
ADDR_0193F3:          TAY                                 ;; 0193F3 : A8          ;
ADDR_0193F4:          LDA RAM_SpriteXLo,X                 ;; 0193F4 : B5 E4       ;
ADDR_0193F6:          CLC                                 ;; 0193F6 : 18          ;
ADDR_0193F7:          ADC.W DATA_0192C5,Y                 ;; 0193F7 : 79 C5 92    ;
ADDR_0193FA:          STA RAM_SpriteXLo,X                 ;; 0193FA : 95 E4       ;
ADDR_0193FC:          LDA.W RAM_SpriteXHi,X               ;; 0193FC : BD E0 14    ;
ADDR_0193FF:          ADC.W DATA_0192C7,Y                 ;; 0193FF : 79 C7 92    ;
ADDR_019402:          STA.W RAM_SpriteXHi,X               ;; 019402 : 9D E0 14    ;
CODE_019405:          LDA.W $15D0,X                       ;; 019405 : BD D0 15    ;
CODE_019408:          BNE CODE_019414                     ;; 019408 : D0 0A       ;
CODE_01940A:          LDA RAM_SpriteYLo,X                 ;; 01940A : B5 D8       ;
CODE_01940C:          AND.B #$F0                          ;; 01940C : 29 F0       ;
CODE_01940E:          CLC                                 ;; 01940E : 18          ;
CODE_01940F:          ADC.W $1694                         ;; 01940F : 6D 94 16    ;
CODE_019412:          STA RAM_SpriteYLo,X                 ;; 019412 : 95 D8       ;
CODE_019414:          JSR.W CODE_019435                   ;; 019414 : 20 35 94    ;
CODE_019417:          LDA.W $185E                         ;; 019417 : AD 5E 18    ;
CODE_01941A:          BEQ Return019424                    ;; 01941A : F0 08       ;
CODE_01941C:          LDA.W RAM_SprObjStatus,X            ;; 01941C : BD 88 15    ;
CODE_01941F:          ORA.B #$80                          ;; 01941F : 09 80       ;
CODE_019421:          STA.W RAM_SprObjStatus,X            ;; 019421 : 9D 88 15    ;
Return019424:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_019425:          LDA $0A                             ;; 019425 : A5 0A       ;
CODE_019427:          STA RAM_BlockYLo                    ;; 019427 : 85 9A       ;
CODE_019429:          LDA $0B                             ;; 019429 : A5 0B       ;
CODE_01942B:          STA RAM_BlockYHi                    ;; 01942B : 85 9B       ;
CODE_01942D:          LDA $0C                             ;; 01942D : A5 0C       ;
CODE_01942F:          STA RAM_BlockXLo                    ;; 01942F : 85 98       ;
CODE_019431:          LDA $0D                             ;; 019431 : A5 0D       ;
CODE_019433:          STA RAM_BlockXHi                    ;; 019433 : 85 99       ;
CODE_019435:          LDY $0F                             ;; 019435 : A4 0F       ;
CODE_019437:          LDA.W RAM_SprObjStatus,X            ;; 019437 : BD 88 15    ;
CODE_01943A:          ORA.W DATA_019134,Y                 ;; 01943A : 19 34 91    ;
CODE_01943D:          STA.W RAM_SprObjStatus,X            ;; 01943D : 9D 88 15    ;
Return019440:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_019441:          STY $0F                             ;; 019441 : 84 0F       ; Can be 00-03 
CODE_019443:          LDA.W RAM_Tweaker1656,X             ;; 019443 : BD 56 16    ; \ Y = $1656,x (Upper 4 bits) + $0F (Lower 2 bits) 
CODE_019446:          AND.B #$0F                          ;; 019446 : 29 0F       ;  | 
CODE_019448:          ASL                                 ;; 019448 : 0A          ;  | 
CODE_019449:          ASL                                 ;; 019449 : 0A          ;  | 
CODE_01944A:          ADC $0F                             ;; 01944A : 65 0F       ;  | 
CODE_01944C:          TAY                                 ;; 01944C : A8          ; / 
CODE_01944D:          LDA.W $185E                         ;; 01944D : AD 5E 18    ;
CODE_019450:          INC A                               ;; 019450 : 1A          ;
CODE_019451:          AND RAM_IsVerticalLvl               ;; 019451 : 25 5B       ;
CODE_019453:          BEQ CODE_0194BF                     ;; 019453 : F0 6A       ;
CODE_019455:          LDA RAM_SpriteYLo,X                 ;; 019455 : B5 D8       ;
CODE_019457:          CLC                                 ;; 019457 : 18          ;
CODE_019458:          ADC.W SpriteObjClippingY,Y          ;; 019458 : 79 F7 90    ;
CODE_01945B:          STA $0C                             ;; 01945B : 85 0C       ;
CODE_01945D:          AND.B #$F0                          ;; 01945D : 29 F0       ;
CODE_01945F:          STA $00                             ;; 01945F : 85 00       ;
CODE_019461:          LDA.W RAM_SpriteYHi,X               ;; 019461 : BD D4 14    ;
CODE_019464:          ADC.B #$00                          ;; 019464 : 69 00       ;
CODE_019466:          CMP RAM_ScreensInLvl                ;; 019466 : C5 5D       ;
CODE_019468:          BCS CODE_0194B4                     ;; 019468 : B0 4A       ;
CODE_01946A:          STA $0D                             ;; 01946A : 85 0D       ;
CODE_01946C:          LDA RAM_SpriteXLo,X                 ;; 01946C : B5 E4       ;
CODE_01946E:          CLC                                 ;; 01946E : 18          ;
CODE_01946F:          ADC.W SpriteObjClippingX,Y          ;; 01946F : 79 BA 90    ;
CODE_019472:          STA $0A                             ;; 019472 : 85 0A       ;
CODE_019474:          STA $01                             ;; 019474 : 85 01       ;
CODE_019476:          LDA.W RAM_SpriteXHi,X               ;; 019476 : BD E0 14    ;
CODE_019479:          ADC.B #$00                          ;; 019479 : 69 00       ;
CODE_01947B:          CMP.B #$02                          ;; 01947B : C9 02       ;
CODE_01947D:          BCS CODE_0194B4                     ;; 01947D : B0 35       ;
CODE_01947F:          STA $0B                             ;; 01947F : 85 0B       ;
CODE_019481:          LDA $01                             ;; 019481 : A5 01       ;
CODE_019483:          LSR                                 ;; 019483 : 4A          ;
CODE_019484:          LSR                                 ;; 019484 : 4A          ;
CODE_019485:          LSR                                 ;; 019485 : 4A          ;
CODE_019486:          LSR                                 ;; 019486 : 4A          ;
CODE_019487:          ORA $00                             ;; 019487 : 05 00       ;
CODE_019489:          STA $00                             ;; 019489 : 85 00       ;
CODE_01948B:          LDX $0D                             ;; 01948B : A6 0D       ;
CODE_01948D:          LDA.L DATA_00BA80,X                 ;; 01948D : BF 80 BA 00 ;
CODE_019491:          LDY.W $185E                         ;; 019491 : AC 5E 18    ;
CODE_019494:          BEQ CODE_01949A                     ;; 019494 : F0 04       ;
CODE_019496:          LDA.L DATA_00BA8E,X                 ;; 019496 : BF 8E BA 00 ;
CODE_01949A:          CLC                                 ;; 01949A : 18          ;
CODE_01949B:          ADC $00                             ;; 01949B : 65 00       ;
CODE_01949D:          STA $05                             ;; 01949D : 85 05       ;
CODE_01949F:          LDA.L DATA_00BABC,X                 ;; 01949F : BF BC BA 00 ;
CODE_0194A3:          LDY.W $185E                         ;; 0194A3 : AC 5E 18    ;
CODE_0194A6:          BEQ CODE_0194AC                     ;; 0194A6 : F0 04       ;
CODE_0194A8:          LDA.L DATA_00BACA,X                 ;; 0194A8 : BF CA BA 00 ;
CODE_0194AC:          ADC $0B                             ;; 0194AC : 65 0B       ;
CODE_0194AE:          STA $06                             ;; 0194AE : 85 06       ;
CODE_0194B0:          JSR.W CODE_019523                   ;; 0194B0 : 20 23 95    ;
Return0194B3:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_0194B4:          LDY $0F                             ;; 0194B4 : A4 0F       ;
CODE_0194B6:          LDA.B #$00                          ;; 0194B6 : A9 00       ;
CODE_0194B8:          STA.W $1693                         ;; 0194B8 : 8D 93 16    ;
CODE_0194BB:          STA.W $1694                         ;; 0194BB : 8D 94 16    ;
Return0194BE:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_0194BF:          LDA RAM_SpriteYLo,X                 ;; 0194BF : B5 D8       ;
CODE_0194C1:          CLC                                 ;; 0194C1 : 18          ;
CODE_0194C2:          ADC.W SpriteObjClippingY,Y          ;; 0194C2 : 79 F7 90    ;
CODE_0194C5:          STA $0C                             ;; 0194C5 : 85 0C       ;
CODE_0194C7:          AND.B #$F0                          ;; 0194C7 : 29 F0       ;
CODE_0194C9:          STA $00                             ;; 0194C9 : 85 00       ;
CODE_0194CB:          LDA.W RAM_SpriteYHi,X               ;; 0194CB : BD D4 14    ;
CODE_0194CE:          ADC.B #$00                          ;; 0194CE : 69 00       ;
CODE_0194D0:          STA $0D                             ;; 0194D0 : 85 0D       ;
CODE_0194D2:          REP #$20                            ;; 0194D2 : C2 20       ; Accum (16 bit) 
CODE_0194D4:          LDA $0C                             ;; 0194D4 : A5 0C       ;
CODE_0194D6:          CMP.W #$01B0                        ;; 0194D6 : C9 B0 01    ;
CODE_0194D9:          SEP #$20                            ;; 0194D9 : E2 20       ; Accum (8 bit) 
CODE_0194DB:          BCS CODE_0194B4                     ;; 0194DB : B0 D7       ;
CODE_0194DD:          LDA RAM_SpriteXLo,X                 ;; 0194DD : B5 E4       ;
CODE_0194DF:          CLC                                 ;; 0194DF : 18          ;
CODE_0194E0:          ADC.W SpriteObjClippingX,Y          ;; 0194E0 : 79 BA 90    ;
CODE_0194E3:          STA $0A                             ;; 0194E3 : 85 0A       ;
CODE_0194E5:          STA $01                             ;; 0194E5 : 85 01       ;
CODE_0194E7:          LDA.W RAM_SpriteXHi,X               ;; 0194E7 : BD E0 14    ;
CODE_0194EA:          ADC.B #$00                          ;; 0194EA : 69 00       ;
CODE_0194EC:          STA $0B                             ;; 0194EC : 85 0B       ;
CODE_0194EE:          BMI CODE_0194B4                     ;; 0194EE : 30 C4       ;
CODE_0194F0:          CMP RAM_ScreensInLvl                ;; 0194F0 : C5 5D       ;
CODE_0194F2:          BCS CODE_0194B4                     ;; 0194F2 : B0 C0       ;
CODE_0194F4:          LDA $01                             ;; 0194F4 : A5 01       ;
CODE_0194F6:          LSR                                 ;; 0194F6 : 4A          ;
CODE_0194F7:          LSR                                 ;; 0194F7 : 4A          ;
CODE_0194F8:          LSR                                 ;; 0194F8 : 4A          ;
CODE_0194F9:          LSR                                 ;; 0194F9 : 4A          ;
CODE_0194FA:          ORA $00                             ;; 0194FA : 05 00       ;
CODE_0194FC:          STA $00                             ;; 0194FC : 85 00       ;
CODE_0194FE:          LDX $0B                             ;; 0194FE : A6 0B       ;
CODE_019500:          LDA.L DATA_00BA60,X                 ;; 019500 : BF 60 BA 00 ;
CODE_019504:          LDY.W $185E                         ;; 019504 : AC 5E 18    ;
CODE_019507:          BEQ CODE_01950D                     ;; 019507 : F0 04       ;
CODE_019509:          LDA.L DATA_00BA70,X                 ;; 019509 : BF 70 BA 00 ;
CODE_01950D:          CLC                                 ;; 01950D : 18          ;
CODE_01950E:          ADC $00                             ;; 01950E : 65 00       ;
CODE_019510:          STA $05                             ;; 019510 : 85 05       ;
CODE_019512:          LDA.L DATA_00BA9C,X                 ;; 019512 : BF 9C BA 00 ;
CODE_019516:          LDY.W $185E                         ;; 019516 : AC 5E 18    ;
CODE_019519:          BEQ CODE_01951F                     ;; 019519 : F0 04       ;
CODE_01951B:          LDA.L DATA_00BAAC,X                 ;; 01951B : BF AC BA 00 ;
CODE_01951F:          ADC $0D                             ;; 01951F : 65 0D       ;
CODE_019521:          STA $06                             ;; 019521 : 85 06       ;
CODE_019523:          LDA.B #$7E                          ;; 019523 : A9 7E       ;
CODE_019525:          STA $07                             ;; 019525 : 85 07       ;
CODE_019527:          LDX.W $15E9                         ;; 019527 : AE E9 15    ; X = Sprite index 
CODE_01952A:          LDA [$05]                           ;; 01952A : A7 05       ;
CODE_01952C:          STA.W $1693                         ;; 01952C : 8D 93 16    ;
CODE_01952F:          INC $07                             ;; 01952F : E6 07       ;
CODE_019531:          LDA [$05]                           ;; 019531 : A7 05       ;
CODE_019533:          JSL.L CODE_00F545                   ;; 019533 : 22 45 F5 00 ;
CODE_019537:          LDY $0F                             ;; 019537 : A4 0F       ;
CODE_019539:          CMP.B #$00                          ;; 019539 : C9 00       ;
Return01953B:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
HandleSprStunned:     LDA RAM_SpriteNum,X                 ;; ?QPWZ? : B5 9E       ; \ Branch if not Yoshi shell 
CODE_01953E:          CMP.B #$2C                          ;; 01953E : C9 2C       ; / 
YoshiShellSts9:       BNE CODE_019554                     ;; ?QPWZ? : D0 12       ;
CODE_019542:          LDA RAM_SpriteState,X               ;; 019542 : B5 C2       ;
CODE_019544:          BEQ CODE_01956A                     ;; 019544 : F0 24       ;
CODE_019546:          LDA $64                             ;; 019546 : A5 64       ; \ Temporarily set $64 = #$10... 
CODE_019548:          PHA                                 ;; 019548 : 48          ;  | 
CODE_019549:          LDA.B #$10                          ;; 019549 : A9 10       ;  | 
CODE_01954B:          STA $64                             ;; 01954B : 85 64       ;  | 
CODE_01954D:          JSR.W SubSprGfx2Entry1              ;; 01954D : 20 0D 9F    ;  | ...and call gfx routine 
CODE_019550:          PLA                                 ;; 019550 : 68          ;  | 
CODE_019551:          STA $64                             ;; 019551 : 85 64       ; / 
Return019553:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_019554:          CMP.B #$2F                          ;; 019554 : C9 2F       ; \ If Spring Board... 
CODE_019556:          BEQ SetNormalStatus                 ;; 019556 : F0 0A       ;  | ...Unused Sprite 85... 
CODE_019558:          CMP.B #$85                          ;; 019558 : C9 85       ;  | ...or Balloon, 
CODE_01955A:          BEQ SetNormalStatus                 ;; 01955A : F0 06       ;  | Set Status = Normal... 
CODE_01955C:          CMP.B #$7D                          ;; 01955C : C9 7D       ;  |  ...and jump to $01A187 
CODE_01955E:          BNE CODE_01956A                     ;; 01955E : D0 0A       ;  | 
ADDR_019560:          STZ RAM_SpriteSpeedY,X              ;; 019560 : 74 AA       ;  | Balloon Y Speed = 0 
SetNormalStatus:      LDA.B #$08                          ;; ?QPWZ? : A9 08       ;  | 
CODE_019564:          STA.W $14C8,X                       ;; 019564 : 9D C8 14    ;  | 
CODE_019567:          JMP.W CODE_01A187                   ;; 019567 : 4C 87 A1    ; / 
                                                          ;;                      ;
CODE_01956A:          LDA RAM_SpritesLocked               ;; 01956A : A5 9D       ; \ If sprites locked, 
CODE_01956C:          BEQ CODE_019571                     ;; 01956C : F0 03       ;  | jump to $0195F5 
CODE_01956E:          JMP.W CODE_0195F5                   ;; 01956E : 4C F5 95    ; / 
                                                          ;;                      ;
CODE_019571:          JSR.W CODE_019624                   ;; 019571 : 20 24 96    ;
CODE_019574:          JSR.W SubUpdateSprPos               ;; 019574 : 20 32 90    ;
CODE_019577:          JSR.W IsOnGround                    ;; 019577 : 20 0E 80    ;
CODE_01957A:          BEQ CODE_019598                     ;; 01957A : F0 1C       ;
CODE_01957C:          JSR.W CODE_0197D5                   ;; 01957C : 20 D5 97    ;
CODE_01957F:          LDA RAM_SpriteNum,X                 ;; 01957F : B5 9E       ;
CODE_019581:          CMP.B #$16                          ;; 019581 : C9 16       ; \ If Vertical or Horizontal Fish, 
CODE_019583:          BEQ ADDR_019589                     ;; 019583 : F0 04       ;  | 
CODE_019585:          CMP.B #$15                          ;; 019585 : C9 15       ;  | jump to $019562 
CODE_019587:          BNE CODE_01958C                     ;; 019587 : D0 03       ;  | 
ADDR_019589:          JMP.W SetNormalStatus               ;; 019589 : 4C 62 95    ; / 
                                                          ;;                      ;
CODE_01958C:          CMP.B #$2C                          ;; 01958C : C9 2C       ; \ Branch if not Yoshi Egg 
CODE_01958E:          BNE CODE_019598                     ;; 01958E : D0 08       ; / 
CODE_019590:          LDA.B #$F0                          ;; 019590 : A9 F0       ; \ Set upward speed 
CODE_019592:          STA RAM_SpriteSpeedY,X              ;; 019592 : 95 AA       ; / 
CODE_019594:          JSL.L CODE_01F74C                   ;; 019594 : 22 4C F7 01 ;
CODE_019598:          JSR.W IsTouchingCeiling             ;; 019598 : 20 14 80    ;
CODE_01959B:          BEQ CODE_0195DB                     ;; 01959B : F0 3E       ;
CODE_01959D:          LDA.B #$10                          ;; 01959D : A9 10       ; \ Set downward speed 
CODE_01959F:          STA RAM_SpriteSpeedY,X              ;; 01959F : 95 AA       ; / 
CODE_0195A1:          JSR.W IsTouchingObjSide             ;; 0195A1 : 20 08 80    ;
CODE_0195A4:          BNE CODE_0195DB                     ;; 0195A4 : D0 35       ;
CODE_0195A6:          LDA RAM_SpriteXLo,X                 ;; 0195A6 : B5 E4       ; \ $9A = Sprite X position + #$08 
CODE_0195A8:          CLC                                 ;; 0195A8 : 18          ;  | 
CODE_0195A9:          ADC.B #$08                          ;; 0195A9 : 69 08       ;  | 
CODE_0195AB:          STA RAM_BlockYLo                    ;; 0195AB : 85 9A       ;  | 
CODE_0195AD:          LDA.W RAM_SpriteXHi,X               ;; 0195AD : BD E0 14    ;  | 
CODE_0195B0:          ADC.B #$00                          ;; 0195B0 : 69 00       ;  | 
CODE_0195B2:          STA RAM_BlockYHi                    ;; 0195B2 : 85 9B       ; / 
CODE_0195B4:          LDA RAM_SpriteYLo,X                 ;; 0195B4 : B5 D8       ; \ $9A = Sprite X position 
CODE_0195B6:          AND.B #$F0                          ;; 0195B6 : 29 F0       ;  | (Rounded down to nearest #$10) 
CODE_0195B8:          STA RAM_BlockXLo                    ;; 0195B8 : 85 98       ;  | 
CODE_0195BA:          LDA.W RAM_SpriteYHi,X               ;; 0195BA : BD D4 14    ;  | 
CODE_0195BD:          STA RAM_BlockXHi                    ;; 0195BD : 85 99       ; / 
CODE_0195BF:          LDA.W RAM_SprObjStatus,X            ;; 0195BF : BD 88 15    ;
CODE_0195C2:          AND.B #$20                          ;; 0195C2 : 29 20       ;
CODE_0195C4:          ASL                                 ;; 0195C4 : 0A          ;
CODE_0195C5:          ASL                                 ;; 0195C5 : 0A          ;
CODE_0195C6:          ASL                                 ;; 0195C6 : 0A          ;
CODE_0195C7:          ROL                                 ;; 0195C7 : 2A          ;
CODE_0195C8:          AND.B #$01                          ;; 0195C8 : 29 01       ;
CODE_0195CA:          STA.W $1933                         ;; 0195CA : 8D 33 19    ;
CODE_0195CD:          LDY.B #$00                          ;; 0195CD : A0 00       ;
CODE_0195CF:          LDA.W $1868                         ;; 0195CF : AD 68 18    ;
CODE_0195D2:          JSL.L CODE_00F160                   ;; 0195D2 : 22 60 F1 00 ;
CODE_0195D6:          LDA.B #$08                          ;; 0195D6 : A9 08       ;
CODE_0195D8:          STA.W $1FE2,X                       ;; 0195D8 : 9D E2 1F    ;
CODE_0195DB:          JSR.W IsTouchingObjSide             ;; 0195DB : 20 08 80    ;
CODE_0195DE:          BEQ CODE_0195F2                     ;; 0195DE : F0 12       ;
CODE_0195E0:          LDA RAM_SpriteNum,X                 ;; 0195E0 : B5 9E       ; \ Call $0195E9 if sprite number < #$0D 
CODE_0195E2:          CMP.B #$0D                          ;; 0195E2 : C9 0D       ;  | (Koopa Troopas) 
CODE_0195E4:          BCC CODE_0195E9                     ;; 0195E4 : 90 03       ;  | 
CODE_0195E6:          JSR.W CODE_01999E                   ;; 0195E6 : 20 9E 99    ; / 
CODE_0195E9:          LDA RAM_SpriteSpeedX,X              ;; 0195E9 : B5 B6       ;
CODE_0195EB:          ASL                                 ;; 0195EB : 0A          ;
CODE_0195EC:          PHP                                 ;; 0195EC : 08          ;
CODE_0195ED:          ROR RAM_SpriteSpeedX,X              ;; 0195ED : 76 B6       ;
CODE_0195EF:          PLP                                 ;; 0195EF : 28          ;
CODE_0195F0:          ROR RAM_SpriteSpeedX,X              ;; 0195F0 : 76 B6       ;
CODE_0195F2:          JSR.W SubSprSpr+MarioSpr            ;; 0195F2 : 20 C1 8F    ;
CODE_0195F5:          JSR.W CODE_01A187                   ;; 0195F5 : 20 87 A1    ;
CODE_0195F8:          JSR.W SubOffscreen0Bnk1             ;; 0195F8 : 20 31 AC    ;
Return0195FB:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
Unused0195FC:         .db $00,$00,$00,$00,$04,$05,$06,$07 ;; ?QPWZ?               ;
                      .db $00,$00,$00,$00,$04,$05,$06,$07 ;; ?QPWZ?               ;
                      .db $00,$00,$00,$00,$04,$05,$06,$07 ;; ?QPWZ?               ;
                      .db $00,$00,$00,$00,$04,$05,$06,$07 ;; ?QPWZ?               ;
SpriteKoopasSpawn:    .db $00,$00,$00,$00,$00,$01,$02,$03 ;; ?QPWZ?               ;
                                                          ;;                      ;
CODE_019624:          LDA RAM_SpriteNum,X                 ;; 019624 : B5 9E       ; \ Branch away if sprite isn't a Bob-omb 
CODE_019626:          CMP.B #$0D                          ;; 019626 : C9 0D       ;  | 
CODE_019628:          BNE CODE_01965C                     ;; 019628 : D0 32       ; / 
CODE_01962A:          LDA.W $1540,X                       ;; 01962A : BD 40 15    ; \ Branch away if it's not time to explode 
CODE_01962D:          CMP.B #$01                          ;; 01962D : C9 01       ;  | 
CODE_01962F:          BNE CODE_01964E                     ;; 01962F : D0 1D       ; / 
CODE_019631:          LDA.B #$09                          ;; 019631 : A9 09       ; \ Bomb sound effect 
CODE_019633:          STA.W $1DFC                         ;; 019633 : 8D FC 1D    ; / 
CODE_019636:          LDA.B #$01                          ;; 019636 : A9 01       ;
CODE_019638:          STA.W $1534,X                       ;; 019638 : 9D 34 15    ;
CODE_01963B:          LDA.B #$40                          ;; 01963B : A9 40       ; \ Set explosion timer 
CODE_01963D:          STA.W $1540,X                       ;; 01963D : 9D 40 15    ; / 
CODE_019640:          LDA.B #$08                          ;; 019640 : A9 08       ; \ Set normal status 
CODE_019642:          STA.W $14C8,X                       ;; 019642 : 9D C8 14    ; / 
CODE_019645:          LDA.W RAM_Tweaker1686,X             ;; 019645 : BD 86 16    ; \ Set to interact with other sprites 
CODE_019648:          AND.B #$F7                          ;; 019648 : 29 F7       ;  | 
CODE_01964A:          STA.W RAM_Tweaker1686,X             ;; 01964A : 9D 86 16    ; / 
Return01964D:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01964E:          CMP.B #$40                          ;; 01964E : C9 40       ;
CODE_019650:          BCS Return01965B                    ;; 019650 : B0 09       ;
CODE_019652:          ASL                                 ;; 019652 : 0A          ;
CODE_019653:          AND.B #$0E                          ;; 019653 : 29 0E       ;
CODE_019655:          EOR.W RAM_SpritePal,X               ;; 019655 : 5D F6 15    ;
CODE_019658:          STA.W RAM_SpritePal,X               ;; 019658 : 9D F6 15    ;
Return01965B:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01965C:          LDA.W $1540,X                       ;; 01965C : BD 40 15    ;
CODE_01965F:          ORA.W $1558,X                       ;; 01965F : 1D 58 15    ;
CODE_019662:          STA RAM_SpriteState,X               ;; 019662 : 95 C2       ;
CODE_019664:          LDA.W $1558,X                       ;; 019664 : BD 58 15    ;
CODE_019667:          BEQ CODE_01969C                     ;; 019667 : F0 33       ;
CODE_019669:          CMP.B #$01                          ;; 019669 : C9 01       ;
CODE_01966B:          BNE CODE_01969C                     ;; 01966B : D0 2F       ;
CODE_01966D:          LDY.W $1594,X                       ;; 01966D : BC 94 15    ;
CODE_019670:          LDA.W $15D0,Y                       ;; 019670 : B9 D0 15    ;
CODE_019673:          BNE CODE_01969C                     ;; 019673 : D0 27       ;
CODE_019675:          JSL.L LoadSpriteTables              ;; 019675 : 22 8B F7 07 ;
CODE_019679:          JSR.W FaceMario                     ;; 019679 : 20 7C 85    ;
CODE_01967C:          ASL.W RAM_SpritePal,X               ;; 01967C : 1E F6 15    ;
CODE_01967F:          LSR.W RAM_SpritePal,X               ;; 01967F : 5E F6 15    ;
CODE_019682:          LDY.W $160E,X                       ;; 019682 : BC 0E 16    ;
CODE_019685:          LDA.B #$08                          ;; 019685 : A9 08       ;
CODE_019687:          CPY.B #$03                          ;; 019687 : C0 03       ;
CODE_019689:          BNE CODE_019698                     ;; 019689 : D0 0D       ;
CODE_01968B:          INC.W $187B,X                       ;; 01968B : FE 7B 18    ;
CODE_01968E:          LDA.W RAM_Tweaker166E,X             ;; 01968E : BD 6E 16    ; \ Disable fireball/cape killing 
CODE_019691:          ORA.B #$30                          ;; 019691 : 09 30       ;  | 
CODE_019693:          STA.W RAM_Tweaker166E,X             ;; 019693 : 9D 6E 16    ; / 
CODE_019696:          LDA.B #$0A                          ;; 019696 : A9 0A       ; \ Sprite status = Kicked 
CODE_019698:          STA.W $14C8,X                       ;; 019698 : 9D C8 14    ; / 
Return01969B:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01969C:          LDA.W $1540,X                       ;; 01969C : BD 40 15    ; \ Return if stun timer == 0 
CODE_01969F:          BEQ Return01969B                    ;; 01969F : F0 FA       ; / 
CODE_0196A1:          CMP.B #$03                          ;; 0196A1 : C9 03       ; \ If stun timer == 3, un-stun the sprite 
CODE_0196A3:          BEQ UnstunSprite                    ;; 0196A3 : F0 04       ; / 
CODE_0196A5:          CMP.B #$01                          ;; 0196A5 : C9 01       ; \ Every other frame, increment the stall timer 
CODE_0196A7:          BNE IncrmntStunTimer                ;; 0196A7 : D0 2E       ; /  to emulates a slower timer 
UnstunSprite:         LDA RAM_SpriteNum,X                 ;; ?QPWZ? : B5 9E       ; \ Branch if Buzzy Beetle 
CODE_0196AB:          CMP.B #$11                          ;; 0196AB : C9 11       ;  | 
CODE_0196AD:          BEQ SetNormalStatus                 ;; 0196AD : F0 1C       ; / 
CODE_0196AF:          CMP.B #$2E                          ;; 0196AF : C9 2E       ; \ Branch if Spike Top 
CODE_0196B1:          BEQ SetNormalStatus                 ;; 0196B1 : F0 18       ; / 
CODE_0196B3:          CMP.B #$2D                          ;; 0196B3 : C9 2D       ; \ Return if Baby Yoshi 
CODE_0196B5:          BEQ Return0196CA                    ;; 0196B5 : F0 13       ; / 
CODE_0196B7:          CMP.B #$A2                          ;; 0196B7 : C9 A2       ; \ Branch if MechaKoopa 
CODE_0196B9:          BEQ SetNormalStatus                 ;; 0196B9 : F0 10       ; / 
CODE_0196BB:          CMP.B #$0F                          ;; 0196BB : C9 0F       ; \ Branch if Goomba 
CODE_0196BD:          BEQ SetNormalStatus                 ;; 0196BD : F0 0C       ; / 
CODE_0196BF:          CMP.B #$2C                          ;; 0196BF : C9 2C       ; \ Branch if Yoshi Egg 
CODE_0196C1:          BEQ Return0196CA                    ;; 0196C1 : F0 07       ; / 
CODE_0196C3:          CMP.B #$53                          ;; 0196C3 : C9 53       ; \ Branch if not Throw Block 
CODE_0196C5:          BNE GeneralResetSpr                 ;; 0196C5 : D0 1A       ; / 
CODE_0196C7:          JSR.W CODE_019ACB                   ;; 0196C7 : 20 CB 9A    ; Set throw block to vanish 
Return0196CA:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
SetNormalStatus:      LDA.B #$08                          ;; ?QPWZ? : A9 08       ; \ Sprite Status = Normal 
CODE_0196CD:          STA.W $14C8,X                       ;; 0196CD : 9D C8 14    ; / 
CODE_0196D0:          ASL.W RAM_SpritePal,X               ;; 0196D0 : 1E F6 15    ; \ Clear vertical flip bit 
CODE_0196D3:          LSR.W RAM_SpritePal,X               ;; 0196D3 : 5E F6 15    ; / 
Return0196D6:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
IncrmntStunTimer:     LDA RAM_FrameCounter                ;; ?QPWZ? : A5 13       ; \ Increment timer every other frame 
CODE_0196D9:          AND.B #$01                          ;; 0196D9 : 29 01       ;  | 
CODE_0196DB:          BNE Return0196E0                    ;; 0196DB : D0 03       ;  | 
CODE_0196DD:          INC.W $1540,X                       ;; 0196DD : FE 40 15    ;  | 
Return0196E0:         RTS                                 ;; ?QPWZ? : 60          ; / 
                                                          ;;                      ;
GeneralResetSpr:      JSL.L FindFreeSprSlot               ;; ?QPWZ? : 22 E4 A9 02 ; \ Return if no free sprite slot found 
CODE_0196E5:          BMI Return0196CA                    ;; 0196E5 : 30 E3       ; / 
CODE_0196E7:          LDA.B #$08                          ;; 0196E7 : A9 08       ; \ Sprite status = Normal 
CODE_0196E9:          STA.W $14C8,Y                       ;; 0196E9 : 99 C8 14    ; / 
CODE_0196EC:          LDA RAM_SpriteNum,X                 ;; 0196EC : B5 9E       ; \ Store sprite number for shelless koopa 
CODE_0196EE:          TAX                                 ;; 0196EE : AA          ;  | 
CODE_0196EF:          LDA.W SpriteKoopasSpawn,X           ;; 0196EF : BD 1C 96    ;  | 
CODE_0196F2:          STA.W RAM_SpriteNum,Y               ;; 0196F2 : 99 9E 00    ; / 
CODE_0196F5:          TYX                                 ;; 0196F5 : BB          ; \ Reset sprite tables 
CODE_0196F6:          JSL.L InitSpriteTables              ;; 0196F6 : 22 D2 F7 07 ;  | 
CODE_0196FA:          LDX.W $15E9                         ;; 0196FA : AE E9 15    ; / 
CODE_0196FD:          LDA RAM_SpriteXLo,X                 ;; 0196FD : B5 E4       ; \ Shelless Koopa position = Koopa position 
CODE_0196FF:          STA.W RAM_SpriteXLo,Y               ;; 0196FF : 99 E4 00    ;  | 
CODE_019702:          LDA.W RAM_SpriteXHi,X               ;; 019702 : BD E0 14    ;  | 
CODE_019705:          STA.W RAM_SpriteXHi,Y               ;; 019705 : 99 E0 14    ;  | 
CODE_019708:          LDA RAM_SpriteYLo,X                 ;; 019708 : B5 D8       ;  | 
CODE_01970A:          STA.W RAM_SpriteYLo,Y               ;; 01970A : 99 D8 00    ;  | 
CODE_01970D:          LDA.W RAM_SpriteYHi,X               ;; 01970D : BD D4 14    ;  | 
CODE_019710:          STA.W RAM_SpriteYHi,Y               ;; 019710 : 99 D4 14    ; / 
CODE_019713:          LDA.B #$00                          ;; 019713 : A9 00       ; \ Direction = 0 
CODE_019715:          STA.W RAM_SpriteDir,Y               ;; 019715 : 99 7C 15    ; / 
CODE_019718:          LDA.B #$10                          ;; 019718 : A9 10       ;
CODE_01971A:          STA.W $1564,Y                       ;; 01971A : 99 64 15    ;
CODE_01971D:          LDA.W $164A,X                       ;; 01971D : BD 4A 16    ;
CODE_019720:          STA.W $164A,Y                       ;; 019720 : 99 4A 16    ;
CODE_019723:          LDA.W $1540,X                       ;; 019723 : BD 40 15    ;
CODE_019726:          STZ.W $1540,X                       ;; 019726 : 9E 40 15    ;
CODE_019729:          CMP.B #$01                          ;; 019729 : C9 01       ;
CODE_01972B:          BEQ CODE_019747                     ;; 01972B : F0 1A       ;
CODE_01972D:          LDA.B #$D0                          ;; 01972D : A9 D0       ; \ Set upward speed 
CODE_01972F:          STA.W RAM_SpriteSpeedY,Y            ;; 01972F : 99 AA 00    ; / 
CODE_019732:          PHY                                 ;; 019732 : 5A          ; \ Make Shelless Koopa face away from Mario 
CODE_019733:          JSR.W SubHorizPos                   ;; 019733 : 20 30 AD    ;  | 
CODE_019736:          TYA                                 ;; 019736 : 98          ;  | 
CODE_019737:          EOR.B #$01                          ;; 019737 : 49 01       ;  | 
CODE_019739:          PLY                                 ;; 019739 : 7A          ;  | 
CODE_01973A:          STA.W RAM_SpriteDir,Y               ;; 01973A : 99 7C 15    ; / 
CODE_01973D:          PHX                                 ;; 01973D : DA          ; \ Set Shelless X speed 
CODE_01973E:          TAX                                 ;; 01973E : AA          ;  | 
CODE_01973F:          LDA.W Spr0to13SpeedX,X              ;; 01973F : BD EC 88    ;  | 
CODE_019742:          STA.W RAM_SpriteSpeedX,Y            ;; 019742 : 99 B6 00    ;  | 
CODE_019745:          PLX                                 ;; 019745 : FA          ; / 
Return019746:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_019747:          PHY                                 ;; 019747 : 5A          ;
CODE_019748:          JSR.W SubHorizPos                   ;; 019748 : 20 30 AD    ;
CODE_01974B:          LDA.W DATA_0197AD,Y                 ;; 01974B : B9 AD 97    ;
CODE_01974E:          STY $00                             ;; 01974E : 84 00       ;
CODE_019750:          PLY                                 ;; 019750 : 7A          ;
CODE_019751:          STA.W RAM_SpriteSpeedX,Y            ;; 019751 : 99 B6 00    ;
CODE_019754:          LDA $00                             ;; 019754 : A5 00       ;
CODE_019756:          EOR.B #$01                          ;; 019756 : 49 01       ;
CODE_019758:          STA.W RAM_SpriteDir,Y               ;; 019758 : 99 7C 15    ;
CODE_01975B:          STA $01                             ;; 01975B : 85 01       ;
CODE_01975D:          LDA.B #$10                          ;; 01975D : A9 10       ;
CODE_01975F:          STA.W RAM_DisableInter,Y            ;; 01975F : 99 4C 15    ;
CODE_019762:          STA.W $1528,Y                       ;; 019762 : 99 28 15    ;
CODE_019765:          LDA RAM_SpriteNum,X                 ;; 019765 : B5 9E       ; \ If Yellow Koopa... 
CODE_019767:          CMP.B #$07                          ;; 019767 : C9 07       ;  | 
CODE_019769:          BNE Return019775                    ;; 019769 : D0 0A       ;  | 
CODE_01976B:          LDY.B #$08                          ;; 01976B : A0 08       ;  | ...find free sprite slot... 
CODE_01976D:          LDA.W $14C8,Y                       ;; 01976D : B9 C8 14    ;  | 
CODE_019770:          BEQ SpawnMovingCoin                 ;; 019770 : F0 04       ;  | ...and spawn moving coin 
CODE_019772:          DEY                                 ;; 019772 : 88          ;  | 
CODE_019773:          BPL CODE_01976D                     ;; 019773 : 10 F8       ; / 
Return019775:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
SpawnMovingCoin:      LDA.B #$08                          ;; ?QPWZ? : A9 08       ; \ Sprite status = normal 
CODE_019778:          STA.W $14C8,Y                       ;; 019778 : 99 C8 14    ; / 
CODE_01977B:          LDA.B #$21                          ;; 01977B : A9 21       ; \ Sprite = Moving Coin 
CODE_01977D:          STA.W RAM_SpriteNum,Y               ;; 01977D : 99 9E 00    ; / 
CODE_019780:          LDA RAM_SpriteXLo,X                 ;; 019780 : B5 E4       ; \ Copy X position to coin 
CODE_019782:          STA.W RAM_SpriteXLo,Y               ;; 019782 : 99 E4 00    ;  | 
CODE_019785:          LDA.W RAM_SpriteXHi,X               ;; 019785 : BD E0 14    ;  | 
CODE_019788:          STA.W RAM_SpriteXHi,Y               ;; 019788 : 99 E0 14    ; / 
CODE_01978B:          LDA RAM_SpriteYLo,X                 ;; 01978B : B5 D8       ; \ Copy Y position to coin 
CODE_01978D:          STA.W RAM_SpriteYLo,Y               ;; 01978D : 99 D8 00    ;  | 
CODE_019790:          LDA.W RAM_SpriteYHi,X               ;; 019790 : BD D4 14    ;  | 
CODE_019793:          STA.W RAM_SpriteYHi,Y               ;; 019793 : 99 D4 14    ; / 
CODE_019796:          PHX                                 ;; 019796 : DA          ; \ 
CODE_019797:          TYX                                 ;; 019797 : BB          ;  | 
CODE_019798:          JSL.L InitSpriteTables              ;; 019798 : 22 D2 F7 07 ;  | Clear all sprite tables, and load new values 
CODE_01979C:          PLX                                 ;; 01979C : FA          ; / 
CODE_01979D:          LDA.B #$D0                          ;; 01979D : A9 D0       ; \ Set Y speed 
CODE_01979F:          STA.W RAM_SpriteSpeedY,Y            ;; 01979F : 99 AA 00    ; / 
CODE_0197A2:          LDA $01                             ;; 0197A2 : A5 01       ; \ Set direction 
CODE_0197A4:          STA.W RAM_SpriteDir,Y               ;; 0197A4 : 99 7C 15    ; / 
CODE_0197A7:          LDA.B #$20                          ;; 0197A7 : A9 20       ;
CODE_0197A9:          STA.W RAM_DisableInter,Y            ;; 0197A9 : 99 4C 15    ;
Return0197AC:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
DATA_0197AD:          .db $C0,$40                         ;; 0197AD               ;
                                                          ;;                      ;
DATA_0197AF:          .db $00,$00,$00,$F8,$F8,$F8,$F8,$F8 ;; 0197AF               ;
                      .db $F8,$F7,$F6,$F5,$F4,$F3,$F2,$E8 ;; ?QPWZ?               ;
                      .db $E8,$E8,$E8,$00,$00,$00,$00,$FE ;; ?QPWZ?               ;
                      .db $FC,$F8,$EC,$EC,$EC,$E8,$E4,$E0 ;; ?QPWZ?               ;
                      .db $DC,$D8,$D4,$D0,$CC,$C8         ;; ?QPWZ?               ;
                                                          ;;                      ;
CODE_0197D5:          LDA RAM_SpriteSpeedX,X              ;; 0197D5 : B5 B6       ;
CODE_0197D7:          PHP                                 ;; 0197D7 : 08          ;
CODE_0197D8:          BPL CODE_0197DD                     ;; 0197D8 : 10 03       ;
CODE_0197DA:          JSR.W InvertAccum                   ;; 0197DA : 20 4A 80    ;
CODE_0197DD:          LSR                                 ;; 0197DD : 4A          ;
CODE_0197DE:          PLP                                 ;; 0197DE : 28          ;
CODE_0197DF:          BPL CODE_0197E4                     ;; 0197DF : 10 03       ;
CODE_0197E1:          JSR.W InvertAccum                   ;; 0197E1 : 20 4A 80    ;
CODE_0197E4:          STA RAM_SpriteSpeedX,X              ;; 0197E4 : 95 B6       ;
CODE_0197E6:          LDA RAM_SpriteSpeedY,X              ;; 0197E6 : B5 AA       ;
CODE_0197E8:          PHA                                 ;; 0197E8 : 48          ;
CODE_0197E9:          JSR.W SetSomeYSpeed??               ;; 0197E9 : 20 04 9A    ;
CODE_0197EC:          PLA                                 ;; 0197EC : 68          ;
CODE_0197ED:          LSR                                 ;; 0197ED : 4A          ;
CODE_0197EE:          LSR                                 ;; 0197EE : 4A          ;
CODE_0197EF:          TAY                                 ;; 0197EF : A8          ;
CODE_0197F0:          LDA RAM_SpriteNum,X                 ;; 0197F0 : B5 9E       ; \ If Goomba, Y += #$13 
CODE_0197F2:          CMP.B #$0F                          ;; 0197F2 : C9 0F       ;  | 
CODE_0197F4:          BNE CODE_0197FB                     ;; 0197F4 : D0 05       ;  | 
CODE_0197F6:          TYA                                 ;; 0197F6 : 98          ;  | 
CODE_0197F7:          CLC                                 ;; 0197F7 : 18          ;  | 
CODE_0197F8:          ADC.B #$13                          ;; 0197F8 : 69 13       ;  | 
CODE_0197FA:          TAY                                 ;; 0197FA : A8          ; / 
CODE_0197FB:          LDA.W DATA_0197AF,Y                 ;; 0197FB : B9 AF 97    ;
CODE_0197FE:          LDY.W RAM_SprObjStatus,X            ;; 0197FE : BC 88 15    ;
CODE_019801:          BMI Return019805                    ;; 019801 : 30 02       ;
CODE_019803:          STA RAM_SpriteSpeedY,X              ;; 019803 : 95 AA       ;
Return019805:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_019806:          LDA.B #$06                          ;; 019806 : A9 06       ;
CODE_019808:          LDY.W RAM_SprOAMIndex,X             ;; 019808 : BC EA 15    ; Y = Index into sprite OAM 
CODE_01980B:          BNE CODE_01980F                     ;; 01980B : D0 02       ;
CODE_01980D:          LDA.B #$08                          ;; 01980D : A9 08       ;
CODE_01980F:          STA.W $1602,X                       ;; 01980F : 9D 02 16    ;
CODE_019812:          LDA.W RAM_SprOAMIndex,X             ;; 019812 : BD EA 15    ;
CODE_019815:          PHA                                 ;; 019815 : 48          ;
CODE_019816:          BEQ CODE_01981B                     ;; 019816 : F0 03       ;
CODE_019818:          CLC                                 ;; 019818 : 18          ;
CODE_019819:          ADC.B #$08                          ;; 019819 : 69 08       ;
CODE_01981B:          STA.W RAM_SprOAMIndex,X             ;; 01981B : 9D EA 15    ;
CODE_01981E:          JSR.W SubSprGfx2Entry1              ;; 01981E : 20 0D 9F    ;
CODE_019821:          PLA                                 ;; 019821 : 68          ;
CODE_019822:          STA.W RAM_SprOAMIndex,X             ;; 019822 : 9D EA 15    ;
CODE_019825:          LDA.W $1EEB                         ;; 019825 : AD EB 1E    ;
CODE_019828:          BMI Return0198A6                    ;; 019828 : 30 7C       ;
CODE_01982A:          LDA.W $1602,X                       ;; 01982A : BD 02 16    ;
CODE_01982D:          CMP.B #$06                          ;; 01982D : C9 06       ;
CODE_01982F:          BNE Return0198A6                    ;; 01982F : D0 75       ;
CODE_019831:          LDY.W RAM_SprOAMIndex,X             ;; 019831 : BC EA 15    ; Y = Index into sprite OAM 
CODE_019834:          LDA.W $1558,X                       ;; 019834 : BD 58 15    ;
CODE_019837:          BNE CODE_019842                     ;; 019837 : D0 09       ;
CODE_019839:          LDA.W $1540,X                       ;; 019839 : BD 40 15    ;
CODE_01983C:          BEQ Return0198A6                    ;; 01983C : F0 68       ;
CODE_01983E:          CMP.B #$30                          ;; 01983E : C9 30       ;
CODE_019840:          BCS CODE_01984D                     ;; 019840 : B0 0B       ;
CODE_019842:          LSR                                 ;; 019842 : 4A          ;
CODE_019843:          LDA.W OAM_Tile3DispX,Y              ;; 019843 : B9 08 03    ;
CODE_019846:          ADC.B #$00                          ;; 019846 : 69 00       ;
CODE_019848:          BCS CODE_01984D                     ;; 019848 : B0 03       ;
CODE_01984A:          STA.W OAM_Tile3DispX,Y              ;; 01984A : 99 08 03    ;
CODE_01984D:          LDA RAM_SpriteNum,X                 ;; 01984D : B5 9E       ; \ Branch away if a Buzzy Beetle 
CODE_01984F:          CMP.B #$11                          ;; 01984F : C9 11       ;  | 
CODE_019851:          BEQ Return0198A6                    ;; 019851 : F0 53       ; / 
CODE_019853:          JSR.W IsSprOffScreen                ;; 019853 : 20 CB 80    ;
CODE_019856:          BNE Return0198A6                    ;; 019856 : D0 4E       ;
CODE_019858:          LDA.W RAM_SpritePal,X               ;; 019858 : BD F6 15    ;
CODE_01985B:          ASL                                 ;; 01985B : 0A          ;
CODE_01985C:          LDA.B #$08                          ;; 01985C : A9 08       ;
CODE_01985E:          BCC CODE_019862                     ;; 01985E : 90 02       ;
CODE_019860:          LDA.B #$00                          ;; 019860 : A9 00       ;
CODE_019862:          STA $00                             ;; 019862 : 85 00       ;
CODE_019864:          LDA.W OAM_Tile3DispX,Y              ;; 019864 : B9 08 03    ;
CODE_019867:          CLC                                 ;; 019867 : 18          ;
CODE_019868:          ADC.B #$02                          ;; 019868 : 69 02       ;
CODE_01986A:          STA.W OAM_DispX,Y                   ;; 01986A : 99 00 03    ;
CODE_01986D:          CLC                                 ;; 01986D : 18          ;
CODE_01986E:          ADC.B #$04                          ;; 01986E : 69 04       ;
CODE_019870:          STA.W OAM_Tile2DispX,Y              ;; 019870 : 99 04 03    ;
CODE_019873:          LDA.W OAM_Tile3DispY,Y              ;; 019873 : B9 09 03    ;
CODE_019876:          CLC                                 ;; 019876 : 18          ;
CODE_019877:          ADC $00                             ;; 019877 : 65 00       ;
CODE_019879:          STA.W OAM_DispY,Y                   ;; 019879 : 99 01 03    ;
CODE_01987C:          STA.W OAM_Tile2DispY,Y              ;; 01987C : 99 05 03    ;
CODE_01987F:          PHY                                 ;; 01987F : 5A          ;
CODE_019880:          LDY.B #$64                          ;; 019880 : A0 64       ;
CODE_019882:          LDA RAM_FrameCounterB               ;; 019882 : A5 14       ;
CODE_019884:          AND.B #$F8                          ;; 019884 : 29 F8       ;
CODE_019886:          BNE CODE_01988A                     ;; 019886 : D0 02       ;
CODE_019888:          LDY.B #$4D                          ;; 019888 : A0 4D       ;
CODE_01988A:          TYA                                 ;; 01988A : 98          ;
CODE_01988B:          PLY                                 ;; 01988B : 7A          ;
CODE_01988C:          STA.W OAM_Tile,Y                    ;; 01988C : 99 02 03    ;
CODE_01988F:          STA.W OAM_Tile2,Y                   ;; 01988F : 99 06 03    ;
CODE_019892:          LDA $64                             ;; 019892 : A5 64       ;
CODE_019894:          STA.W OAM_Prop,Y                    ;; 019894 : 99 03 03    ;
CODE_019897:          STA.W OAM_Tile2Prop,Y               ;; 019897 : 99 07 03    ;
CODE_01989A:          TYA                                 ;; 01989A : 98          ;
CODE_01989B:          LSR                                 ;; 01989B : 4A          ;
CODE_01989C:          LSR                                 ;; 01989C : 4A          ;
CODE_01989D:          TAY                                 ;; 01989D : A8          ;
CODE_01989E:          LDA.B #$00                          ;; 01989E : A9 00       ;
CODE_0198A0:          STA.W OAM_TileSize,Y                ;; 0198A0 : 99 60 04    ;
CODE_0198A3:          STA.W $0461,Y                       ;; 0198A3 : 99 61 04    ;
Return0198A6:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
DATA_0198A7:          .db $E0,$20                         ;; 0198A7               ;
                                                          ;;                      ;
CODE_0198A9:          LDA RAM_SpritesLocked               ;; 0198A9 : A5 9D       ;
CODE_0198AB:          BEQ CODE_0198B0                     ;; 0198AB : F0 03       ;
CODE_0198AD:          JMP.W CODE_019A2A                   ;; 0198AD : 4C 2A 9A    ;
                                                          ;;                      ;
CODE_0198B0:          JSR.W SubUpdateSprPos               ;; 0198B0 : 20 32 90    ;
CODE_0198B3:          LDA.W $151C,X                       ;; 0198B3 : BD 1C 15    ;
CODE_0198B6:          AND.B #$1F                          ;; 0198B6 : 29 1F       ;
CODE_0198B8:          BNE CODE_0198BD                     ;; 0198B8 : D0 03       ;
CODE_0198BA:          JSR.W FaceMario                     ;; 0198BA : 20 7C 85    ;
CODE_0198BD:          LDA RAM_SpriteSpeedX,X              ;; 0198BD : B5 B6       ;
CODE_0198BF:          LDY.W RAM_SpriteDir,X               ;; 0198BF : BC 7C 15    ;
CODE_0198C2:          CPY.B #$00                          ;; 0198C2 : C0 00       ;
CODE_0198C4:          BNE CODE_0198D0                     ;; 0198C4 : D0 0A       ;
CODE_0198C6:          CMP.B #$20                          ;; 0198C6 : C9 20       ;
CODE_0198C8:          BPL CODE_0198D8                     ;; 0198C8 : 10 0E       ;
CODE_0198CA:          INC RAM_SpriteSpeedX,X              ;; 0198CA : F6 B6       ;
CODE_0198CC:          INC RAM_SpriteSpeedX,X              ;; 0198CC : F6 B6       ;
CODE_0198CE:          BRA CODE_0198D8                     ;; 0198CE : 80 08       ;
                                                          ;;                      ;
CODE_0198D0:          CMP.B #$E0                          ;; 0198D0 : C9 E0       ;
CODE_0198D2:          BMI CODE_0198D8                     ;; 0198D2 : 30 04       ;
CODE_0198D4:          DEC RAM_SpriteSpeedX,X              ;; 0198D4 : D6 B6       ;
CODE_0198D6:          DEC RAM_SpriteSpeedX,X              ;; 0198D6 : D6 B6       ;
CODE_0198D8:          JSR.W IsTouchingObjSide             ;; 0198D8 : 20 08 80    ;
CODE_0198DB:          BEQ CODE_0198EA                     ;; 0198DB : F0 0D       ;
CODE_0198DD:          PHA                                 ;; 0198DD : 48          ;
CODE_0198DE:          JSR.W CODE_01999E                   ;; 0198DE : 20 9E 99    ;
CODE_0198E1:          PLA                                 ;; 0198E1 : 68          ;
CODE_0198E2:          AND.B #$03                          ;; 0198E2 : 29 03       ;
CODE_0198E4:          TAY                                 ;; 0198E4 : A8          ;
CODE_0198E5:          LDA.W Return0198A6,Y                ;; 0198E5 : B9 A6 98    ;
CODE_0198E8:          STA RAM_SpriteSpeedX,X              ;; 0198E8 : 95 B6       ;
CODE_0198EA:          JSR.W IsOnGround                    ;; 0198EA : 20 0E 80    ;
CODE_0198ED:          BEQ CODE_0198F6                     ;; 0198ED : F0 07       ;
CODE_0198EF:          JSR.W SetSomeYSpeed??               ;; 0198EF : 20 04 9A    ;
CODE_0198F2:          LDA.B #$10                          ;; 0198F2 : A9 10       ;
CODE_0198F4:          STA RAM_SpriteSpeedY,X              ;; 0198F4 : 95 AA       ;
CODE_0198F6:          JSR.W IsTouchingCeiling             ;; 0198F6 : 20 14 80    ;
CODE_0198F9:          BEQ CODE_0198FD                     ;; 0198F9 : F0 02       ;
ADDR_0198FB:          STZ RAM_SpriteSpeedY,X              ;; 0198FB : 74 AA       ; Sprite Y Speed = 0 
CODE_0198FD:          LDA RAM_FrameCounter                ;; 0198FD : A5 13       ;
CODE_0198FF:          AND.B #$01                          ;; 0198FF : 29 01       ;
CODE_019901:          BNE CODE_01990D                     ;; 019901 : D0 0A       ;
CODE_019903:          LDA.W RAM_SpritePal,X               ;; 019903 : BD F6 15    ;
CODE_019906:          INC A                               ;; 019906 : 1A          ;
CODE_019907:          INC A                               ;; 019907 : 1A          ;
CODE_019908:          AND.B #$CF                          ;; 019908 : 29 CF       ;
CODE_01990A:          STA.W RAM_SpritePal,X               ;; 01990A : 9D F6 15    ;
CODE_01990D:          JMP.W CODE_01998C                   ;; 01990D : 4C 8C 99    ;
                                                          ;;                      ;
                                                          ;;                      ;
DATA_019910:          .db $F0,$EE,$EC                     ;; 019910               ;
                                                          ;;                      ;
HandleSprKicked:      LDA.W $187B,X                       ;; ?QPWZ? : BD 7B 18    ;
CODE_019916:          BEQ CODE_01991B                     ;; 019916 : F0 03       ;
CODE_019918:          JMP.W CODE_0198A9                   ;; 019918 : 4C A9 98    ;
                                                          ;;                      ;
CODE_01991B:          LDA.W RAM_Tweaker167A,X             ;; 01991B : BD 7A 16    ;
CODE_01991E:          AND.B #$10                          ;; 01991E : 29 10       ;
CODE_019920:          BEQ CODE_019928                     ;; 019920 : F0 06       ;
CODE_019922:          JSR.W CODE_01AA0B                   ;; 019922 : 20 0B AA    ;
CODE_019925:          JMP.W CODE_01A187                   ;; 019925 : 4C 87 A1    ;
                                                          ;;                      ;
CODE_019928:          LDA.W $1528,X                       ;; 019928 : BD 28 15    ;
CODE_01992B:          BNE CODE_019939                     ;; 01992B : D0 0C       ;
CODE_01992D:          LDA RAM_SpriteSpeedX,X              ;; 01992D : B5 B6       ;
CODE_01992F:          CLC                                 ;; 01992F : 18          ;
CODE_019930:          ADC.B #$20                          ;; 019930 : 69 20       ;
CODE_019932:          CMP.B #$40                          ;; 019932 : C9 40       ;
CODE_019934:          BCS CODE_019939                     ;; 019934 : B0 03       ;
CODE_019936:          JSR.W CODE_01AA0B                   ;; 019936 : 20 0B AA    ;
CODE_019939:          STZ.W $1528,X                       ;; 019939 : 9E 28 15    ;
CODE_01993C:          LDA RAM_SpritesLocked               ;; 01993C : A5 9D       ;
CODE_01993E:          ORA.W $163E,X                       ;; 01993E : 1D 3E 16    ;
CODE_019941:          BEQ CODE_019946                     ;; 019941 : F0 03       ;
CODE_019943:          JMP.W CODE_01998F                   ;; 019943 : 4C 8F 99    ;
                                                          ;;                      ;
CODE_019946:          JSR.W UpdateDirection               ;; 019946 : 20 15 9A    ;
CODE_019949:          LDA.W $15B8,X                       ;; 019949 : BD B8 15    ;
CODE_01994C:          PHA                                 ;; 01994C : 48          ;
CODE_01994D:          JSR.W SubUpdateSprPos               ;; 01994D : 20 32 90    ;
CODE_019950:          PLA                                 ;; 019950 : 68          ;
CODE_019951:          BEQ CODE_019969                     ;; 019951 : F0 16       ;
CODE_019953:          STA $00                             ;; 019953 : 85 00       ;
CODE_019955:          LDY.W $164A,X                       ;; 019955 : BC 4A 16    ;
CODE_019958:          BNE CODE_019969                     ;; 019958 : D0 0F       ;
CODE_01995A:          CMP.W $15B8,X                       ;; 01995A : DD B8 15    ;
CODE_01995D:          BEQ CODE_019969                     ;; 01995D : F0 0A       ;
CODE_01995F:          EOR RAM_SpriteSpeedX,X              ;; 01995F : 55 B6       ;
CODE_019961:          BMI CODE_019969                     ;; 019961 : 30 06       ;
CODE_019963:          LDA.B #$F8                          ;; 019963 : A9 F8       ; \ Set upward speed 
CODE_019965:          STA RAM_SpriteSpeedY,X              ;; 019965 : 95 AA       ; / 
CODE_019967:          BRA CODE_019975                     ;; 019967 : 80 0C       ;
                                                          ;;                      ;
CODE_019969:          JSR.W IsOnGround                    ;; 019969 : 20 0E 80    ;
CODE_01996C:          BEQ CODE_019984                     ;; 01996C : F0 16       ;
CODE_01996E:          JSR.W SetSomeYSpeed??               ;; 01996E : 20 04 9A    ;
CODE_019971:          LDA.B #$10                          ;; 019971 : A9 10       ; \ Set downward speed 
CODE_019973:          STA RAM_SpriteSpeedY,X              ;; 019973 : 95 AA       ; / 
CODE_019975:          LDA.W $1860                         ;; 019975 : AD 60 18    ;
CODE_019978:          CMP.B #$B5                          ;; 019978 : C9 B5       ;
CODE_01997A:          BEQ CODE_019980                     ;; 01997A : F0 04       ;
CODE_01997C:          CMP.B #$B4                          ;; 01997C : C9 B4       ;
CODE_01997E:          BNE CODE_019984                     ;; 01997E : D0 04       ;
CODE_019980:          LDA.B #$B8                          ;; 019980 : A9 B8       ;
CODE_019982:          STA RAM_SpriteSpeedY,X              ;; 019982 : 95 AA       ;
CODE_019984:          JSR.W IsTouchingObjSide             ;; 019984 : 20 08 80    ;
CODE_019987:          BEQ CODE_01998C                     ;; 019987 : F0 03       ;
CODE_019989:          JSR.W CODE_01999E                   ;; 019989 : 20 9E 99    ;
CODE_01998C:          JSR.W SubSprSpr+MarioSpr            ;; 01998C : 20 C1 8F    ;
CODE_01998F:          JSR.W SubOffscreen0Bnk1             ;; 01998F : 20 31 AC    ;
CODE_019992:          LDA RAM_SpriteNum,X                 ;; 019992 : B5 9E       ; \ Branch if throw block sprite 
CODE_019994:          CMP.B #$53                          ;; 019994 : C9 53       ;  | 
CODE_019996:          BEQ CODE_01999B                     ;; 019996 : F0 03       ; / 
CODE_019998:          JMP.W CODE_019A2A                   ;; 019998 : 4C 2A 9A    ;
                                                          ;;                      ;
CODE_01999B:          JMP.W StunThrowBlock                ;; 01999B : 4C D4 A1    ;
                                                          ;;                      ;
CODE_01999E:          LDA.B #$01                          ;; 01999E : A9 01       ;
CODE_0199A0:          STA.W $1DF9                         ;; 0199A0 : 8D F9 1D    ; / Play sound effect 
CODE_0199A3:          JSR.W CODE_0190A2                   ;; 0199A3 : 20 A2 90    ;
CODE_0199A6:          LDA.W RAM_OffscreenHorz,X           ;; 0199A6 : BD A0 15    ;
CODE_0199A9:          BNE CODE_0199D2                     ;; 0199A9 : D0 27       ;
CODE_0199AB:          LDA RAM_SpriteXLo,X                 ;; 0199AB : B5 E4       ;
CODE_0199AD:          SEC                                 ;; 0199AD : 38          ;
CODE_0199AE:          SBC RAM_ScreenBndryXLo              ;; 0199AE : E5 1A       ;
CODE_0199B0:          CLC                                 ;; 0199B0 : 18          ;
CODE_0199B1:          ADC.B #$14                          ;; 0199B1 : 69 14       ;
CODE_0199B3:          CMP.B #$1C                          ;; 0199B3 : C9 1C       ;
CODE_0199B5:          BCC CODE_0199D2                     ;; 0199B5 : 90 1B       ;
CODE_0199B7:          LDA.W RAM_SprObjStatus,X            ;; 0199B7 : BD 88 15    ;
CODE_0199BA:          AND.B #$40                          ;; 0199BA : 29 40       ;
CODE_0199BC:          ASL                                 ;; 0199BC : 0A          ;
CODE_0199BD:          ASL                                 ;; 0199BD : 0A          ;
CODE_0199BE:          ROL                                 ;; 0199BE : 2A          ;
CODE_0199BF:          AND.B #$01                          ;; 0199BF : 29 01       ;
CODE_0199C1:          STA.W $1933                         ;; 0199C1 : 8D 33 19    ;
CODE_0199C4:          LDY.B #$00                          ;; 0199C4 : A0 00       ;
CODE_0199C6:          LDA.W $18A7                         ;; 0199C6 : AD A7 18    ;
CODE_0199C9:          JSL.L CODE_00F160                   ;; 0199C9 : 22 60 F1 00 ;
CODE_0199CD:          LDA.B #$05                          ;; 0199CD : A9 05       ;
CODE_0199CF:          STA.W $1FE2,X                       ;; 0199CF : 9D E2 1F    ;
CODE_0199D2:          LDA RAM_SpriteNum,X                 ;; 0199D2 : B5 9E       ; \ If Throw Block, break it 
CODE_0199D4:          CMP.B #$53                          ;; 0199D4 : C9 53       ;  | 
CODE_0199D6:          BNE Return0199DB                    ;; 0199D6 : D0 03       ;  | 
CODE_0199D8:          JSR.W BreakThrowBlock               ;; 0199D8 : 20 DC 99    ; / 
Return0199DB:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
BreakThrowBlock:      STZ.W $14C8,X                       ;; ?QPWZ? : 9E C8 14    ; Free up sprite slot 
CODE_0199DF:          LDY.B #$FF                          ;; 0199DF : A0 FF       ; Is this for the shatter routine?? 
CODE_0199E1:          JSR.W IsSprOffScreen                ;; 0199E1 : 20 CB 80    ; \ Return if off screen 
CODE_0199E4:          BNE Return019A03                    ;; 0199E4 : D0 1D       ; / 
CODE_0199E6:          LDA RAM_SpriteXLo,X                 ;; 0199E6 : B5 E4       ; \ Store Y position in $9A-$9B 
CODE_0199E8:          STA RAM_BlockYLo                    ;; 0199E8 : 85 9A       ;  | 
CODE_0199EA:          LDA.W RAM_SpriteXHi,X               ;; 0199EA : BD E0 14    ;  | 
CODE_0199ED:          STA RAM_BlockYHi                    ;; 0199ED : 85 9B       ; / 
CODE_0199EF:          LDA RAM_SpriteYLo,X                 ;; 0199EF : B5 D8       ; \ Store X position in $98-$99 
CODE_0199F1:          STA RAM_BlockXLo                    ;; 0199F1 : 85 98       ;  | 
CODE_0199F3:          LDA.W RAM_SpriteYHi,X               ;; 0199F3 : BD D4 14    ;  | 
CODE_0199F6:          STA RAM_BlockXHi                    ;; 0199F6 : 85 99       ; / 
CODE_0199F8:          PHB                                 ;; 0199F8 : 8B          ; \ Shatter the brick 
CODE_0199F9:          LDA.B #$02                          ;; 0199F9 : A9 02       ;  | 
CODE_0199FB:          PHA                                 ;; 0199FB : 48          ;  | 
CODE_0199FC:          PLB                                 ;; 0199FC : AB          ;  | 
CODE_0199FD:          TYA                                 ;; 0199FD : 98          ;  | 
CODE_0199FE:          JSL.L ShatterBlock                  ;; 0199FE : 22 63 86 02 ;  | 
CODE_019A02:          PLB                                 ;; 019A02 : AB          ; / 
Return019A03:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
SetSomeYSpeed??:      LDA.W RAM_SprObjStatus,X            ;; ?QPWZ? : BD 88 15    ;
CODE_019A07:          BMI CODE_019A10                     ;; 019A07 : 30 07       ;
CODE_019A09:          LDA.B #$00                          ;; 019A09 : A9 00       ; \ Sprite Y speed = #$00 or #$18 
CODE_019A0B:          LDY.W $15B8,X                       ;; 019A0B : BC B8 15    ;  | Depending on 15B8,x ??? 
CODE_019A0E:          BEQ CODE_019A12                     ;; 019A0E : F0 02       ;  | 
CODE_019A10:          LDA.B #$18                          ;; 019A10 : A9 18       ;  | 
CODE_019A12:          STA RAM_SpriteSpeedY,X              ;; 019A12 : 95 AA       ; / 
Return019A14:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
UpdateDirection:      LDA.B #$00                          ;; ?QPWZ? : A9 00       ; \ Subroutine: Set direction from speed value 
CODE_019A17:          LDY RAM_SpriteSpeedX,X              ;; 019A17 : B4 B6       ;  | 
CODE_019A19:          BEQ Return019A21                    ;; 019A19 : F0 06       ;  | 
CODE_019A1B:          BPL CODE_019A1E                     ;; 019A1B : 10 01       ;  | 
CODE_019A1D:          INC A                               ;; 019A1D : 1A          ;  | 
CODE_019A1E:          STA.W RAM_SpriteDir,X               ;; 019A1E : 9D 7C 15    ;  | 
Return019A21:         RTS                                 ;; ?QPWZ? : 60          ; / 
                                                          ;;                      ;
                                                          ;;                      ;
ShellAniTiles:        .db $06,$07,$08,$07                 ;; ?QPWZ?               ;
                                                          ;;                      ;
ShellGfxProp:         .db $00,$00,$00,$40                 ;; ?QPWZ?               ;
                                                          ;;                      ;
CODE_019A2A:          LDA RAM_SpriteState,X               ;; 019A2A : B5 C2       ;
CODE_019A2C:          STA.W $1558,X                       ;; 019A2C : 9D 58 15    ;
CODE_019A2F:          LDA RAM_FrameCounterB               ;; 019A2F : A5 14       ;
CODE_019A31:          LSR                                 ;; 019A31 : 4A          ;
CODE_019A32:          LSR                                 ;; 019A32 : 4A          ;
CODE_019A33:          AND.B #$03                          ;; 019A33 : 29 03       ;
CODE_019A35:          TAY                                 ;; 019A35 : A8          ;
CODE_019A36:          PHY                                 ;; 019A36 : 5A          ;
CODE_019A37:          LDA.W ShellAniTiles,Y               ;; 019A37 : B9 22 9A    ;
CODE_019A3A:          JSR.W CODE_01980F                   ;; 019A3A : 20 0F 98    ;
CODE_019A3D:          STZ.W $1558,X                       ;; 019A3D : 9E 58 15    ;
CODE_019A40:          PLY                                 ;; 019A40 : 7A          ;
CODE_019A41:          LDA.W ShellGfxProp,Y                ;; 019A41 : B9 26 9A    ;
CODE_019A44:          LDY.W RAM_SprOAMIndex,X             ;; 019A44 : BC EA 15    ; Y = Index into sprite OAM 
CODE_019A47:          EOR.W OAM_Tile3Prop,Y               ;; 019A47 : 59 0B 03    ;
CODE_019A4A:          STA.W OAM_Tile3Prop,Y               ;; 019A4A : 99 0B 03    ;
Return019A4D:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
SpinJumpSmokeTiles:   .db $64,$62,$60,$62                 ;; ?QPWZ?               ;
                                                          ;;                      ;
HandleSprSpinJump:    LDA.W $1540,X                       ;; ?QPWZ? : BD 40 15    ; \ Erase sprite if time up 
CODE_019A55:          BEQ SpinJumpEraseSpr                ;; 019A55 : F0 20       ; / 
CODE_019A57:          JSR.W SubSprGfx2Entry1              ;; 019A57 : 20 0D 9F    ; Call generic gfx routine 
CODE_019A5A:          LDY.W RAM_SprOAMIndex,X             ;; 019A5A : BC EA 15    ; Y = Index into sprite OAM 
CODE_019A5D:          LDA.W $1540,X                       ;; 019A5D : BD 40 15    ; \ Load tile based on timer 
CODE_019A60:          LSR                                 ;; 019A60 : 4A          ;  | 
CODE_019A61:          LSR                                 ;; 019A61 : 4A          ;  | 
CODE_019A62:          LSR                                 ;; 019A62 : 4A          ;  | 
CODE_019A63:          AND.B #$03                          ;; 019A63 : 29 03       ;  | 
CODE_019A65:          PHX                                 ;; 019A65 : DA          ;  | 
CODE_019A66:          TAX                                 ;; 019A66 : AA          ;  | 
CODE_019A67:          LDA.W SpinJumpSmokeTiles,X          ;; 019A67 : BD 4E 9A    ;  | 
CODE_019A6A:          PLX                                 ;; 019A6A : FA          ;  / 
CODE_019A6B:          STA.W OAM_Tile,Y                    ;; 019A6B : 99 02 03    ; Overwrite tile 
CODE_019A6E:          STA.W OAM_Prop,Y                    ;; 019A6E : 99 03 03    ; \ Overwrite properties 
CODE_019A71:          AND.B #$30                          ;; 019A71 : 29 30       ;  | 
CODE_019A73:          STA.W OAM_Prop,Y                    ;; 019A73 : 99 03 03    ; / 
Return019A76:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
SpinJumpEraseSpr:     JSR.W OffScrEraseSprite             ;; ?QPWZ? : 20 80 AC    ; Permanently kill the sprite 
Return019A7A:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_019A7B:          LDA.W $1558,X                       ;; 019A7B : BD 58 15    ;
CODE_019A7E:          BEQ SpinJumpEraseSpr                ;; 019A7E : F0 F7       ;
CODE_019A80:          LDA.B #$04                          ;; 019A80 : A9 04       ;
CODE_019A82:          STA RAM_SpriteSpeedY,X              ;; 019A82 : 95 AA       ;
CODE_019A84:          ASL.W RAM_Tweaker190F,X             ;; 019A84 : 1E 0F 19    ;
CODE_019A87:          LSR.W RAM_Tweaker190F,X             ;; 019A87 : 5E 0F 19    ;
CODE_019A8A:          LDA RAM_SpriteSpeedX,X              ;; 019A8A : B5 B6       ;
CODE_019A8C:          BEQ CODE_019A9D                     ;; 019A8C : F0 0F       ;
CODE_019A8E:          BPL CODE_019A94                     ;; 019A8E : 10 04       ;
CODE_019A90:          INC RAM_SpriteSpeedX,X              ;; 019A90 : F6 B6       ;
CODE_019A92:          BRA CODE_019A9D                     ;; 019A92 : 80 09       ;
                                                          ;;                      ;
CODE_019A94:          DEC RAM_SpriteSpeedX,X              ;; 019A94 : D6 B6       ;
CODE_019A96:          JSR.W IsTouchingObjSide             ;; 019A96 : 20 08 80    ;
CODE_019A99:          BEQ CODE_019A9D                     ;; 019A99 : F0 02       ;
CODE_019A9B:          STZ RAM_SpriteSpeedX,X              ;; 019A9B : 74 B6       ; Sprite X Speed = 0 
CODE_019A9D:          LDA.B #$01                          ;; 019A9D : A9 01       ;
CODE_019A9F:          STA.W RAM_SprBehindScrn,X           ;; 019A9F : 9D 32 16    ;
HandleSprKilled:      LDA RAM_SpriteNum,X                 ;; ?QPWZ? : B5 9E       ; \ If Wiggler, call main sprite routine 
CODE_019AA4:          CMP.B #$86                          ;; 019AA4 : C9 86       ;  | 
CODE_019AA6:          BNE CODE_019AAB                     ;; 019AA6 : D0 03       ;  | 
CODE_019AA8:          JMP.W CallSpriteMain                ;; 019AA8 : 4C C3 85    ; / 
                                                          ;;                      ;
CODE_019AAB:          CMP.B #$1E                          ;; 019AAB : C9 1E       ; \ If Lakitu, $18E0 = #$FF 
CODE_019AAD:          BNE CODE_019AB4                     ;; 019AAD : D0 05       ;  | 
CODE_019AAF:          LDY.B #$FF                          ;; 019AAF : A0 FF       ;  | 
CODE_019AB1:          STY.W $18E0                         ;; 019AB1 : 8C E0 18    ; / 
CODE_019AB4:          CMP.B #$53                          ;; 019AB4 : C9 53       ; \ If Throw Block sprite... 
CODE_019AB6:          BNE CODE_019ABC                     ;; 019AB6 : D0 04       ;  | 
CODE_019AB8:          JSR.W BreakThrowBlock               ;; 019AB8 : 20 DC 99    ;  | ...break block... 
Return019ABB:         RTS                                 ;; ?QPWZ? : 60          ; / ...and return 
                                                          ;;                      ;
CODE_019ABC:          CMP.B #$4C                          ;; 019ABC : C9 4C       ; \ If Exploding Block Enemy 
CODE_019ABE:          BNE CODE_019AC4                     ;; 019ABE : D0 04       ;  | 
ADDR_019AC0:          JSL.L CODE_02E463                   ;; 019AC0 : 22 63 E4 02 ; / 
CODE_019AC4:          LDA.W RAM_Tweaker1656,X             ;; 019AC4 : BD 56 16    ; \ If "disappears in puff of smoke" is set... 
CODE_019AC7:          AND.B #$80                          ;; 019AC7 : 29 80       ;  | 
CODE_019AC9:          BEQ CODE_019AD6                     ;; 019AC9 : F0 0B       ;  | 
CODE_019ACB:          LDA.B #$04                          ;; 019ACB : A9 04       ;  | ...Sprite status = Spin Jump Killed... 
CODE_019ACD:          STA.W $14C8,X                       ;; 019ACD : 9D C8 14    ;  | 
CODE_019AD0:          LDA.B #$1F                          ;; 019AD0 : A9 1F       ;  | ...Set Time to show smoke cloud... 
CODE_019AD2:          STA.W $1540,X                       ;; 019AD2 : 9D 40 15    ;  | 
Return019AD5:         RTS                                 ;; ?QPWZ? : 60          ; / ... and return 
                                                          ;;                      ;
CODE_019AD6:          LDA RAM_SpritesLocked               ;; 019AD6 : A5 9D       ; \ Branch if sprites locked 
CODE_019AD8:          BNE CODE_019ADD                     ;; 019AD8 : D0 03       ; / 
CODE_019ADA:          JSR.W SubUpdateSprPos               ;; 019ADA : 20 32 90    ;
CODE_019ADD:          JSR.W SubOffscreen0Bnk1             ;; 019ADD : 20 31 AC    ;
CODE_019AE0:          JSR.W HandleSpriteDeath             ;; 019AE0 : 20 13 9B    ;
Return019AE3:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
HandleSprSmushed:     LDA RAM_SpritesLocked               ;; ?QPWZ? : A5 9D       ; \ Branch if sprites locked 
CODE_019AE6:          BNE CODE_019AFE                     ;; 019AE6 : D0 16       ; / 
CODE_019AE8:          LDA.W $1540,X                       ;; 019AE8 : BD 40 15    ; \ Free sprite slot when timer runs out 
CODE_019AEB:          BNE ShowSmushedGfx                  ;; 019AEB : D0 04       ;  | 
CODE_019AED:          STZ.W $14C8,X                       ;; 019AED : 9E C8 14    ; / 
Return019AF0:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
ShowSmushedGfx:       JSR.W SubUpdateSprPos               ;; ?QPWZ? : 20 32 90    ;
CODE_019AF4:          JSR.W IsOnGround                    ;; 019AF4 : 20 0E 80    ;
CODE_019AF7:          BEQ CODE_019AFE                     ;; 019AF7 : F0 05       ;
CODE_019AF9:          JSR.W SetSomeYSpeed??               ;; 019AF9 : 20 04 9A    ;
CODE_019AFC:          STZ RAM_SpriteSpeedX,X              ;; 019AFC : 74 B6       ; Sprite X Speed = 0 
CODE_019AFE:          LDA RAM_SpriteNum,X                 ;; 019AFE : B5 9E       ; \ If Dino Torch... 
CODE_019B00:          CMP.B #$6F                          ;; 019B00 : C9 6F       ;  | 
CODE_019B02:          BNE CODE_019B10                     ;; 019B02 : D0 0C       ;  | 
CODE_019B04:          JSR.W SubSprGfx2Entry1              ;; 019B04 : 20 0D 9F    ;  | ...call standard gfx routine... 
CODE_019B07:          LDY.W RAM_SprOAMIndex,X             ;; 019B07 : BC EA 15    ;  | 
CODE_019B0A:          LDA.B #$AC                          ;; 019B0A : A9 AC       ;  | ...and replace the tile with #$AC 
CODE_019B0C:          STA.W OAM_Tile,Y                    ;; 019B0C : 99 02 03    ;  | 
Return019B0F:         RTS                                 ;; ?QPWZ? : 60          ; / Return 
                                                          ;;                      ;
CODE_019B10:          JMP.W SmushedGfxRt                  ;; 019B10 : 4C 00 E7    ; Call smushed gfx routine 
                                                          ;;                      ;
HandleSpriteDeath:    LDA.W RAM_Tweaker167A,X             ;; ?QPWZ? : BD 7A 16    ; \ If the main routine handles the death state... 
CODE_019B16:          AND.B #$01                          ;; 019B16 : 29 01       ;  | 
CODE_019B18:          BEQ CODE_019B1D                     ;; 019B18 : F0 03       ;  | 
CODE_019B1A:          JMP.W CallSpriteMain                ;; 019B1A : 4C C3 85    ; / ...jump to the main routine 
                                                          ;;                      ;
CODE_019B1D:          STZ.W $1602,X                       ;; 019B1D : 9E 02 16    ;
CODE_019B20:          LDA.W RAM_Tweaker190F,X             ;; 019B20 : BD 0F 19    ; \ Branch if "Death frame 2 tiles high" 
CODE_019B23:          AND.B #$20                          ;; 019B23 : 29 20       ;  | is NOT set 
CODE_019B25:          BEQ CODE_019B64                     ;; 019B25 : F0 3D       ; / 
CODE_019B27:          LDA.W RAM_Tweaker1662,X             ;; 019B27 : BD 62 16    ; \ Branch if "Use shell as death frame" 
CODE_019B2A:          AND.B #$40                          ;; 019B2A : 29 40       ;  | is set 
CODE_019B2C:          BNE CODE_019B5F                     ;; 019B2C : D0 31       ; / 
CODE_019B2E:          LDA RAM_SpriteNum,X                 ;; 019B2E : B5 9E       ; \ Branch if Lakitu 
CODE_019B30:          CMP.B #$1E                          ;; 019B30 : C9 1E       ;  | 
CODE_019B32:          BEQ CODE_019B3D                     ;; 019B32 : F0 09       ; / 
CODE_019B34:          CMP.B #$4B                          ;; 019B34 : C9 4B       ; \ If Pipe Lakitu, 
CODE_019B36:          BNE CODE_019B44                     ;; 019B36 : D0 0C       ;  | 
ADDR_019B38:          LDA.B #$01                          ;; 019B38 : A9 01       ;  | set behind scenery flag 
ADDR_019B3A:          STA.W RAM_SprBehindScrn,X           ;; 019B3A : 9D 32 16    ; / 
CODE_019B3D:          LDA.B #$01                          ;; 019B3D : A9 01       ;
CODE_019B3F:          STA.W $1602,X                       ;; 019B3F : 9D 02 16    ;
CODE_019B42:          BRA CODE_019B4C                     ;; 019B42 : 80 08       ;
                                                          ;;                      ;
CODE_019B44:          LDA.W RAM_SpritePal,X               ;; 019B44 : BD F6 15    ; \ Set to flip tiles vertically 
CODE_019B47:          ORA.B #$80                          ;; 019B47 : 09 80       ;  | 
CODE_019B49:          STA.W RAM_SpritePal,X               ;; 019B49 : 9D F6 15    ; / 
CODE_019B4C:          LDA $64                             ;; 019B4C : A5 64       ; \ If sprite is behind scenery, 
CODE_019B4E:          PHA                                 ;; 019B4E : 48          ;  | 
CODE_019B4F:          LDY.W RAM_SprBehindScrn,X           ;; 019B4F : BC 32 16    ;  | 
CODE_019B52:          BEQ CODE_019B56                     ;; 019B52 : F0 02       ;  | 
CODE_019B54:          LDA.B #$10                          ;; 019B54 : A9 10       ;  | temorarily set layer priority for gfx routine 
CODE_019B56:          STA $64                             ;; 019B56 : 85 64       ;  | 
CODE_019B58:          JSR.W SubSprGfx1                    ;; 019B58 : 20 67 9D    ;  | Draw sprite 
CODE_019B5B:          PLA                                 ;; 019B5B : 68          ;  | 
CODE_019B5C:          STA $64                             ;; 019B5C : 85 64       ; / 
Return019B5E:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_019B5F:          LDA.B #$06                          ;; 019B5F : A9 06       ;
CODE_019B61:          STA.W $1602,X                       ;; 019B61 : 9D 02 16    ;
CODE_019B64:          LDA.B #$00                          ;; 019B64 : A9 00       ;
CODE_019B66:          CPY.B #$1C                          ;; 019B66 : C0 1C       ;
CODE_019B68:          BEQ CODE_019B6C                     ;; 019B68 : F0 02       ;
CODE_019B6A:          LDA.B #$80                          ;; 019B6A : A9 80       ;
CODE_019B6C:          STA $00                             ;; 019B6C : 85 00       ;
CODE_019B6E:          LDA $64                             ;; 019B6E : A5 64       ; \ If sprite is behind scenery, 
CODE_019B70:          PHA                                 ;; 019B70 : 48          ;  | 
CODE_019B71:          LDY.W RAM_SprBehindScrn,X           ;; 019B71 : BC 32 16    ;  | 
CODE_019B74:          BEQ CODE_019B78                     ;; 019B74 : F0 02       ;  | 
CODE_019B76:          LDA.B #$10                          ;; 019B76 : A9 10       ;  | temorarily set layer priority for gfx routine 
CODE_019B78:          STA $64                             ;; 019B78 : 85 64       ;  | 
CODE_019B7A:          LDA $00                             ;; 019B7A : A5 00       ;
CODE_019B7C:          JSR.W SubSprGfx2Entry0              ;; 019B7C : 20 09 9F    ;  | Draw sprite 
CODE_019B7F:          PLA                                 ;; 019B7F : 68          ;  | 
CODE_019B80:          STA $64                             ;; 019B80 : 85 64       ; / 
Return019B82:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
SprTilemap:           .db $82,$A0,$82,$A2,$84,$A4,$8C,$8A ;; ?QPWZ?               ;
                      .db $8E,$C8,$CA,$CA,$CE,$CC,$86,$4E ;; ?QPWZ?               ;
                      .db $E0,$E2,$E2,$CE,$E4,$E0,$E0,$A3 ;; ?QPWZ?               ;
                      .db $A3,$B3,$B3,$E9,$E8,$F9,$F8,$E8 ;; ?QPWZ?               ;
                      .db $E9,$F8,$F9,$E2,$E6,$AA,$A8,$A8 ;; ?QPWZ?               ;
                      .db $AA,$A2,$A2,$B2,$B2,$C3,$C2,$D3 ;; ?QPWZ?               ;
                      .db $D2,$C2,$C3,$D2,$D3,$E2,$E6,$CA ;; ?QPWZ?               ;
                      .db $CC,$CA,$AC,$CE,$AE,$CE,$83,$83 ;; ?QPWZ?               ;
                      .db $C4,$C4,$83,$83,$C5,$C5,$8A,$A6 ;; ?QPWZ?               ;
                      .db $A4,$A6,$A8,$80,$82,$80,$84,$84 ;; ?QPWZ?               ;
                      .db $84,$84,$94,$94,$94,$94,$A0,$B0 ;; ?QPWZ?               ;
                      .db $A0,$D0,$82,$80,$82,$00,$00,$00 ;; ?QPWZ?               ;
                      .db $86,$84,$88,$EC,$8C,$A8,$AA,$8E ;; ?QPWZ?               ;
                      .db $AC,$AE,$8E,$EC,$EE,$CE,$EE,$A8 ;; ?QPWZ?               ;
                      .db $EE,$40,$40,$A0,$C0,$A0,$C0,$A4 ;; ?QPWZ?               ;
                      .db $C4,$A4,$C4,$A0,$C0,$A0,$C0,$40 ;; ?QPWZ?               ;
                      .db $07,$27,$4C,$29,$4E,$2B,$82,$A0 ;; ?QPWZ?               ;
                      .db $84,$A4,$67,$69,$88,$CE,$8E,$AE ;; ?QPWZ?               ;
                      .db $A2,$A2,$B2,$B2,$00,$40,$44,$42 ;; ?QPWZ?               ;
                      .db $2C,$42,$28,$28,$28,$28,$4C,$4C ;; ?QPWZ?               ;
                      .db $4C,$4C,$83,$83,$6F,$6F,$AC,$BC ;; ?QPWZ?               ;
                      .db $AC,$A6,$8C,$AA,$86,$84,$DC,$EC ;; ?QPWZ?               ;
                      .db $DE,$EE,$06,$06,$16,$16,$07,$07 ;; ?QPWZ?               ;
                      .db $17,$17,$16,$16,$06,$06,$17,$17 ;; ?QPWZ?               ;
                      .db $07,$07,$84,$86,$00,$00,$00,$0E ;; ?QPWZ?               ;
                      .db $2A,$24,$02,$06,$0A,$20,$22,$28 ;; ?QPWZ?               ;
                      .db $26,$2E,$40,$42,$0C,$04,$2B,$6A ;; ?QPWZ?               ;
                      .db $ED,$88,$8C,$A8,$8E,$AA,$AE,$8C ;; ?QPWZ?               ;
                      .db $88,$A8,$AE,$AC,$8C,$8E,$CE,$EE ;; ?QPWZ?               ;
                      .db $C4,$C6,$82,$84,$86,$8C,$CE,$CE ;; ?QPWZ?               ;
                      .db $88,$89,$CE,$CE,$89,$88,$F3,$CE ;; ?QPWZ?               ;
                      .db $F3,$CE,$A7,$A9                 ;; ?QPWZ?               ;
                                                          ;;                      ;
SprTilemapOffset:     .db $09,$09,$10,$09,$00,$00,$00,$00 ;; ?QPWZ?               ;
                      .db $00,$00,$00,$00,$00,$37,$00,$25 ;; ?QPWZ?               ;
                      .db $25,$5A,$00,$4B,$4E,$8A,$8A,$8A ;; ?QPWZ?               ;
                      .db $8A,$56,$3A,$46,$47,$69,$6B,$73 ;; ?QPWZ?               ;
                      .db $00,$00,$80,$80,$80,$80,$8E,$90 ;; ?QPWZ?               ;
                      .db $00,$00,$3A,$F6,$94,$95,$63,$9A ;; ?QPWZ?               ;
                      .db $A6,$AA,$AE,$B2,$C2,$C4,$D5,$D9 ;; ?QPWZ?               ;
                      .db $D7,$D7,$E6,$E6,$E6,$E2,$99,$17 ;; ?QPWZ?               ;
                      .db $29,$E6,$E6,$E6,$00,$E8,$00,$8A ;; ?QPWZ?               ;
                      .db $E8,$00,$ED,$EA,$7F,$EA,$EA,$3A ;; ?QPWZ?               ;
                      .db $3A,$FA,$71,$7F                 ;; ?QPWZ?               ;
                                                          ;;                      ;
GeneralSprDispX:      .db $00,$08,$00,$08                 ;; ?QPWZ?               ;
                                                          ;;                      ;
GeneralSprDispY:      .db $00,$00,$08,$08                 ;; ?QPWZ?               ;
                                                          ;;                      ;
GeneralSprGfxProp:    .db $00,$00,$00,$00,$00,$40,$00,$40 ;; ?QPWZ?               ;
                      .db $00,$40,$80,$C0,$40,$40,$00,$00 ;; ?QPWZ?               ;
                      .db $40,$00,$C0,$80,$40,$40,$40,$40 ;; ?QPWZ?               ;
                                                          ;;                      ;
SubSprGfx0Entry0:     LDY.B #$00                          ;; ?QPWZ? : A0 00       ;
SubSprGfx0Entry1:     STA $05                             ;; ?QPWZ? : 85 05       ;
CODE_019CF7:          STY $0F                             ;; 019CF7 : 84 0F       ;
CODE_019CF9:          JSR.W GetDrawInfoBnk1               ;; 019CF9 : 20 65 A3    ;
CODE_019CFC:          LDY $0F                             ;; 019CFC : A4 0F       ;
CODE_019CFE:          TYA                                 ;; 019CFE : 98          ;
CODE_019CFF:          CLC                                 ;; 019CFF : 18          ;
CODE_019D00:          ADC $01                             ;; 019D00 : 65 01       ;
CODE_019D02:          STA $01                             ;; 019D02 : 85 01       ;
CODE_019D04:          LDY RAM_SpriteNum,X                 ;; 019D04 : B4 9E       ;
CODE_019D06:          LDA.W $1602,X                       ;; 019D06 : BD 02 16    ;
CODE_019D09:          ASL                                 ;; 019D09 : 0A          ;
CODE_019D0A:          ASL                                 ;; 019D0A : 0A          ;
CODE_019D0B:          ADC.W SprTilemapOffset,Y            ;; 019D0B : 79 7F 9C    ;
CODE_019D0E:          STA $02                             ;; 019D0E : 85 02       ;
CODE_019D10:          LDA.W RAM_SpritePal,X               ;; 019D10 : BD F6 15    ;
CODE_019D13:          ORA $64                             ;; 019D13 : 05 64       ;
CODE_019D15:          STA $03                             ;; 019D15 : 85 03       ;
CODE_019D17:          LDY.W RAM_SprOAMIndex,X             ;; 019D17 : BC EA 15    ; Y = Index into sprite OAM 
CODE_019D1A:          LDA.B #$03                          ;; 019D1A : A9 03       ;
CODE_019D1C:          STA $04                             ;; 019D1C : 85 04       ;
CODE_019D1E:          PHX                                 ;; 019D1E : DA          ;
CODE_019D1F:          LDX $04                             ;; 019D1F : A6 04       ;
CODE_019D21:          LDA $00                             ;; 019D21 : A5 00       ;
CODE_019D23:          CLC                                 ;; 019D23 : 18          ;
CODE_019D24:          ADC.W GeneralSprDispX,X             ;; 019D24 : 7D D3 9C    ;
CODE_019D27:          STA.W OAM_DispX,Y                   ;; 019D27 : 99 00 03    ;
CODE_019D2A:          LDA $01                             ;; 019D2A : A5 01       ;
CODE_019D2C:          CLC                                 ;; 019D2C : 18          ;
CODE_019D2D:          ADC.W GeneralSprDispY,X             ;; 019D2D : 7D D7 9C    ;
CODE_019D30:          STA.W OAM_DispY,Y                   ;; 019D30 : 99 01 03    ;
CODE_019D33:          LDA $02                             ;; 019D33 : A5 02       ;
CODE_019D35:          CLC                                 ;; 019D35 : 18          ;
CODE_019D36:          ADC $04                             ;; 019D36 : 65 04       ;
CODE_019D38:          TAX                                 ;; 019D38 : AA          ;
CODE_019D39:          LDA.W SprTilemap,X                  ;; 019D39 : BD 83 9B    ;
CODE_019D3C:          STA.W OAM_Tile,Y                    ;; 019D3C : 99 02 03    ;
CODE_019D3F:          LDA $05                             ;; 019D3F : A5 05       ;
CODE_019D41:          ASL                                 ;; 019D41 : 0A          ;
CODE_019D42:          ASL                                 ;; 019D42 : 0A          ;
CODE_019D43:          ADC $04                             ;; 019D43 : 65 04       ;
CODE_019D45:          TAX                                 ;; 019D45 : AA          ;
CODE_019D46:          LDA.W GeneralSprGfxProp,X           ;; 019D46 : BD DB 9C    ;
CODE_019D49:          ORA $03                             ;; 019D49 : 05 03       ;
CODE_019D4B:          STA.W OAM_Prop,Y                    ;; 019D4B : 99 03 03    ;
CODE_019D4E:          INY                                 ;; 019D4E : C8          ;
CODE_019D4F:          INY                                 ;; 019D4F : C8          ;
CODE_019D50:          INY                                 ;; 019D50 : C8          ;
CODE_019D51:          INY                                 ;; 019D51 : C8          ;
CODE_019D52:          DEC $04                             ;; 019D52 : C6 04       ;
CODE_019D54:          BPL CODE_019D1F                     ;; 019D54 : 10 C9       ;
CODE_019D56:          PLX                                 ;; 019D56 : FA          ;
CODE_019D57:          LDA.B #$03                          ;; 019D57 : A9 03       ;
CODE_019D59:          LDY.B #$00                          ;; 019D59 : A0 00       ;
CODE_019D5B:          JSR.W FinishOAMWriteRt              ;; 019D5B : 20 BB B7    ;
Return019D5E:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
GenericSprGfxRt1:     PHB                                 ;; ?QPWZ? : 8B          ;
CODE_019D60:          PHK                                 ;; 019D60 : 4B          ;
CODE_019D61:          PLB                                 ;; 019D61 : AB          ;
CODE_019D62:          JSR.W SubSprGfx1                    ;; 019D62 : 20 67 9D    ;
CODE_019D65:          PLB                                 ;; 019D65 : AB          ;
Return019D66:         RTL                                 ;; ?QPWZ? : 6B          ; Return 
                                                          ;;                      ;
SubSprGfx1:           LDA.W RAM_SpritePal,X               ;; ?QPWZ? : BD F6 15    ;
CODE_019D6A:          BPL SubSprGfx1Hlpr0                 ;; 019D6A : 10 04       ;
CODE_019D6C:          JSR.W SubSprGfx1Hlpr1               ;; 019D6C : 20 D9 9D    ;
Return019D6F:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
SubSprGfx1Hlpr0:      JSR.W GetDrawInfoBnk1               ;; ?QPWZ? : 20 65 A3    ;
CODE_019D73:          LDA.W RAM_SpriteDir,X               ;; 019D73 : BD 7C 15    ;
CODE_019D76:          STA $02                             ;; 019D76 : 85 02       ;
CODE_019D78:          TYA                                 ;; 019D78 : 98          ;
CODE_019D79:          LDY RAM_SpriteNum,X                 ;; 019D79 : B4 9E       ;
CODE_019D7B:          CPY.B #$0F                          ;; 019D7B : C0 0F       ;
CODE_019D7D:          BCS CODE_019D81                     ;; 019D7D : B0 02       ;
CODE_019D7F:          ADC.B #$04                          ;; 019D7F : 69 04       ;
CODE_019D81:          TAY                                 ;; 019D81 : A8          ;
CODE_019D82:          PHY                                 ;; 019D82 : 5A          ;
CODE_019D83:          LDY RAM_SpriteNum,X                 ;; 019D83 : B4 9E       ;
CODE_019D85:          LDA.W $1602,X                       ;; 019D85 : BD 02 16    ;
CODE_019D88:          ASL                                 ;; 019D88 : 0A          ;
CODE_019D89:          CLC                                 ;; 019D89 : 18          ;
CODE_019D8A:          ADC.W SprTilemapOffset,Y            ;; 019D8A : 79 7F 9C    ;
CODE_019D8D:          TAX                                 ;; 019D8D : AA          ;
CODE_019D8E:          PLY                                 ;; 019D8E : 7A          ;
CODE_019D8F:          LDA.W SprTilemap,X                  ;; 019D8F : BD 83 9B    ;
CODE_019D92:          STA.W OAM_Tile,Y                    ;; 019D92 : 99 02 03    ;
CODE_019D95:          LDA.W SprTilemap+1,X                ;; 019D95 : BD 84 9B    ;
CODE_019D98:          STA.W OAM_Tile2,Y                   ;; 019D98 : 99 06 03    ;
CODE_019D9B:          LDX.W $15E9                         ;; 019D9B : AE E9 15    ; X = Sprite index 
CODE_019D9E:          LDA $01                             ;; 019D9E : A5 01       ;
CODE_019DA0:          STA.W OAM_DispY,Y                   ;; 019DA0 : 99 01 03    ;
CODE_019DA3:          CLC                                 ;; 019DA3 : 18          ;
CODE_019DA4:          ADC.B #$10                          ;; 019DA4 : 69 10       ;
CODE_019DA6:          STA.W OAM_Tile2DispY,Y              ;; 019DA6 : 99 05 03    ;
CODE_019DA9:          LDA $00                             ;; 019DA9 : A5 00       ;
CODE_019DAB:          STA.W OAM_DispX,Y                   ;; 019DAB : 99 00 03    ;
CODE_019DAE:          STA.W OAM_Tile2DispX,Y              ;; 019DAE : 99 04 03    ;
CODE_019DB1:          LDA.W RAM_SpriteDir,X               ;; 019DB1 : BD 7C 15    ;
CODE_019DB4:          LSR                                 ;; 019DB4 : 4A          ;
CODE_019DB5:          LDA.B #$00                          ;; 019DB5 : A9 00       ;
CODE_019DB7:          ORA.W RAM_SpritePal,X               ;; 019DB7 : 1D F6 15    ;
CODE_019DBA:          BCS CODE_019DBE                     ;; 019DBA : B0 02       ;
CODE_019DBC:          ORA.B #$40                          ;; 019DBC : 09 40       ;
CODE_019DBE:          ORA $64                             ;; 019DBE : 05 64       ;
CODE_019DC0:          STA.W OAM_Prop,Y                    ;; 019DC0 : 99 03 03    ;
CODE_019DC3:          STA.W OAM_Tile2Prop,Y               ;; 019DC3 : 99 07 03    ;
CODE_019DC6:          TYA                                 ;; 019DC6 : 98          ;
CODE_019DC7:          LSR                                 ;; 019DC7 : 4A          ;
CODE_019DC8:          LSR                                 ;; 019DC8 : 4A          ;
CODE_019DC9:          TAY                                 ;; 019DC9 : A8          ;
CODE_019DCA:          LDA.B #$02                          ;; 019DCA : A9 02       ;
CODE_019DCC:          ORA.W RAM_OffscreenHorz,X           ;; 019DCC : 1D A0 15    ;
CODE_019DCF:          STA.W OAM_TileSize,Y                ;; 019DCF : 99 60 04    ;
CODE_019DD2:          STA.W $0461,Y                       ;; 019DD2 : 99 61 04    ;
CODE_019DD5:          JSR.W CODE_01A3DF                   ;; 019DD5 : 20 DF A3    ;
Return019DD8:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
SubSprGfx1Hlpr1:      JSR.W GetDrawInfoBnk1               ;; ?QPWZ? : 20 65 A3    ;
CODE_019DDC:          LDA.W RAM_SpriteDir,X               ;; 019DDC : BD 7C 15    ;
CODE_019DDF:          STA $02                             ;; 019DDF : 85 02       ;
CODE_019DE1:          TYA                                 ;; 019DE1 : 98          ;
CODE_019DE2:          CLC                                 ;; 019DE2 : 18          ;
CODE_019DE3:          ADC.B #$08                          ;; 019DE3 : 69 08       ;
CODE_019DE5:          TAY                                 ;; 019DE5 : A8          ;
CODE_019DE6:          PHY                                 ;; 019DE6 : 5A          ;
CODE_019DE7:          LDY RAM_SpriteNum,X                 ;; 019DE7 : B4 9E       ;
CODE_019DE9:          LDA.W $1602,X                       ;; 019DE9 : BD 02 16    ;
CODE_019DEC:          ASL                                 ;; 019DEC : 0A          ;
CODE_019DED:          CLC                                 ;; 019DED : 18          ;
CODE_019DEE:          ADC.W SprTilemapOffset,Y            ;; 019DEE : 79 7F 9C    ;
CODE_019DF1:          TAX                                 ;; 019DF1 : AA          ;
CODE_019DF2:          PLY                                 ;; 019DF2 : 7A          ;
CODE_019DF3:          LDA.W SprTilemap,X                  ;; 019DF3 : BD 83 9B    ;
CODE_019DF6:          STA.W OAM_Tile2,Y                   ;; 019DF6 : 99 06 03    ;
CODE_019DF9:          LDA.W SprTilemap+1,X                ;; 019DF9 : BD 84 9B    ;
CODE_019DFC:          STA.W OAM_Tile,Y                    ;; 019DFC : 99 02 03    ;
CODE_019DFF:          LDX.W $15E9                         ;; 019DFF : AE E9 15    ; X = Sprite index 
CODE_019E02:          LDA $01                             ;; 019E02 : A5 01       ;
CODE_019E04:          STA.W OAM_DispY,Y                   ;; 019E04 : 99 01 03    ;
CODE_019E07:          CLC                                 ;; 019E07 : 18          ;
CODE_019E08:          ADC.B #$10                          ;; 019E08 : 69 10       ;
CODE_019E0A:          STA.W OAM_Tile2DispY,Y              ;; 019E0A : 99 05 03    ;
CODE_019E0D:          JMP.W CODE_019DA9                   ;; 019E0D : 4C A9 9D    ;
                                                          ;;                      ;
                                                          ;;                      ;
KoopaWingDispXLo:     .db $FF,$F7,$09,$09                 ;; ?QPWZ?               ;
                                                          ;;                      ;
KoopaWingDispXHi:     .db $FF,$FF,$00,$00                 ;; ?QPWZ?               ;
                                                          ;;                      ;
KoopaWingDispY:       .db $FC,$F4,$FC,$F4                 ;; ?QPWZ?               ;
                                                          ;;                      ;
KoopaWingTiles:       .db $5D,$C6,$5D,$C6                 ;; ?QPWZ?               ;
                                                          ;;                      ;
KoopaWingGfxProp:     .db $46,$46,$06,$06                 ;; ?QPWZ?               ;
                                                          ;;                      ;
KoopaWingTileSize:    .db $00,$02,$00,$02                 ;; ?QPWZ?               ;
                                                          ;;                      ;
KoopaWingGfxRt:       LDY.B #$00                          ;; ?QPWZ? : A0 00       ; \ If not on ground, $02 = animation frame (00 or 01) 
CODE_019E2A:          JSR.W IsOnGround                    ;; 019E2A : 20 0E 80    ;  | else, $02 = 0 
CODE_019E2D:          BNE CODE_019E35                     ;; 019E2D : D0 06       ;  | 
CODE_019E2F:          LDA.W $1602,X                       ;; 019E2F : BD 02 16    ;  | 
CODE_019E32:          AND.B #$01                          ;; 019E32 : 29 01       ;  | 
CODE_019E34:          TAY                                 ;; 019E34 : A8          ;  | 
CODE_019E35:          STY $02                             ;; 019E35 : 84 02       ; / 
CODE_019E37:          LDA.W RAM_OffscreenVert,X           ;; 019E37 : BD 6C 18    ; \ Return if offscreen vertically 
CODE_019E3A:          BNE Return019E94                    ;; 019E3A : D0 58       ; / 
CODE_019E3C:          LDA RAM_SpriteXLo,X                 ;; 019E3C : B5 E4       ; \ $00 = X position low 
CODE_019E3E:          STA $00                             ;; 019E3E : 85 00       ; / 
CODE_019E40:          LDA.W RAM_SpriteXHi,X               ;; 019E40 : BD E0 14    ; \ $04 = X position high 
CODE_019E43:          STA $04                             ;; 019E43 : 85 04       ; / 
CODE_019E45:          LDA RAM_SpriteYLo,X                 ;; 019E45 : B5 D8       ; \ $01 = Y position low 
CODE_019E47:          STA $01                             ;; 019E47 : 85 01       ; / 
CODE_019E49:          LDY.W RAM_SprOAMIndex,X             ;; 019E49 : BC EA 15    ; Y = index to OAM 
CODE_019E4C:          PHX                                 ;; 019E4C : DA          ;
CODE_019E4D:          LDA.W RAM_SpriteDir,X               ;; 019E4D : BD 7C 15    ; \ X = index into tables 
CODE_019E50:          ASL                                 ;; 019E50 : 0A          ;  | 
CODE_019E51:          ADC $02                             ;; 019E51 : 65 02       ;  | 
CODE_019E53:          TAX                                 ;; 019E53 : AA          ; / 
CODE_019E54:          LDA $00                             ;; 019E54 : A5 00       ; \ Store X position (relative to screen) 
CODE_019E56:          CLC                                 ;; 019E56 : 18          ;  | 
CODE_019E57:          ADC.W KoopaWingDispXLo,X            ;; 019E57 : 7D 10 9E    ;  | 
CODE_019E5A:          STA $00                             ;; 019E5A : 85 00       ;  | 
CODE_019E5C:          LDA $04                             ;; 019E5C : A5 04       ;  | 
CODE_019E5E:          ADC.W KoopaWingDispXHi,X            ;; 019E5E : 7D 14 9E    ;  | 
CODE_019E61:          PHA                                 ;; 019E61 : 48          ;  | 
CODE_019E62:          LDA $00                             ;; 019E62 : A5 00       ;  | 
CODE_019E64:          SEC                                 ;; 019E64 : 38          ;  | 
CODE_019E65:          SBC RAM_ScreenBndryXLo              ;; 019E65 : E5 1A       ;  | 
CODE_019E67:          STA.W OAM_DispX,Y                   ;; 019E67 : 99 00 03    ; / 
CODE_019E6A:          PLA                                 ;; 019E6A : 68          ; \ Return if off screen horizontally 
CODE_019E6B:          SBC RAM_ScreenBndryXHi              ;; 019E6B : E5 1B       ;  | 
CODE_019E6D:          BNE CODE_019E93                     ;; 019E6D : D0 24       ; / 
CODE_019E6F:          LDA $01                             ;; 019E6F : A5 01       ; \ Store Y position (relative to screen) 
CODE_019E71:          SEC                                 ;; 019E71 : 38          ;  | 
CODE_019E72:          SBC RAM_ScreenBndryYLo              ;; 019E72 : E5 1C       ;  | 
CODE_019E74:          CLC                                 ;; 019E74 : 18          ;  | 
CODE_019E75:          ADC.W KoopaWingDispY,X              ;; 019E75 : 7D 18 9E    ;  | 
CODE_019E78:          STA.W OAM_DispY,Y                   ;; 019E78 : 99 01 03    ; / 
CODE_019E7B:          LDA.W KoopaWingTiles,X              ;; 019E7B : BD 1C 9E    ; \ Store tile 
CODE_019E7E:          STA.W OAM_Tile,Y                    ;; 019E7E : 99 02 03    ; / 
CODE_019E81:          LDA $64                             ;; 019E81 : A5 64       ; \ Store tile properties 
CODE_019E83:          ORA.W KoopaWingGfxProp,X            ;; 019E83 : 1D 20 9E    ;  | 
CODE_019E86:          STA.W OAM_Prop,Y                    ;; 019E86 : 99 03 03    ; / 
CODE_019E89:          TYA                                 ;; 019E89 : 98          ;
CODE_019E8A:          LSR                                 ;; 019E8A : 4A          ;
CODE_019E8B:          LSR                                 ;; 019E8B : 4A          ;
CODE_019E8C:          TAY                                 ;; 019E8C : A8          ;
CODE_019E8D:          LDA.W KoopaWingTileSize,X           ;; 019E8D : BD 24 9E    ; \ Store tile size 
CODE_019E90:          STA.W OAM_TileSize,Y                ;; 019E90 : 99 60 04    ; / 
CODE_019E93:          PLX                                 ;; 019E93 : FA          ;
Return019E94:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_019E95:          LDA RAM_SpriteYLo,X                 ;; 019E95 : B5 D8       ;
CODE_019E97:          PHA                                 ;; 019E97 : 48          ;
CODE_019E98:          CLC                                 ;; 019E98 : 18          ;
CODE_019E99:          ADC.B #$02                          ;; 019E99 : 69 02       ;
CODE_019E9B:          STA RAM_SpriteYLo,X                 ;; 019E9B : 95 D8       ;
CODE_019E9D:          LDA.W RAM_SpriteYHi,X               ;; 019E9D : BD D4 14    ;
CODE_019EA0:          PHA                                 ;; 019EA0 : 48          ;
CODE_019EA1:          ADC.B #$00                          ;; 019EA1 : 69 00       ;
CODE_019EA3:          STA.W RAM_SpriteYHi,X               ;; 019EA3 : 9D D4 14    ;
CODE_019EA6:          LDA RAM_SpriteXLo,X                 ;; 019EA6 : B5 E4       ;
CODE_019EA8:          PHA                                 ;; 019EA8 : 48          ;
CODE_019EA9:          SEC                                 ;; 019EA9 : 38          ;
CODE_019EAA:          SBC.B #$02                          ;; 019EAA : E9 02       ;
CODE_019EAC:          STA RAM_SpriteXLo,X                 ;; 019EAC : 95 E4       ;
CODE_019EAE:          LDA.W RAM_SpriteXHi,X               ;; 019EAE : BD E0 14    ;
CODE_019EB1:          PHA                                 ;; 019EB1 : 48          ;
CODE_019EB2:          SBC.B #$00                          ;; 019EB2 : E9 00       ;
CODE_019EB4:          STA.W RAM_SpriteXHi,X               ;; 019EB4 : 9D E0 14    ;
CODE_019EB7:          LDA.W RAM_SprOAMIndex,X             ;; 019EB7 : BD EA 15    ;
CODE_019EBA:          PHA                                 ;; 019EBA : 48          ;
CODE_019EBB:          CLC                                 ;; 019EBB : 18          ;
CODE_019EBC:          ADC.B #$04                          ;; 019EBC : 69 04       ;
CODE_019EBE:          STA.W RAM_SprOAMIndex,X             ;; 019EBE : 9D EA 15    ;
CODE_019EC1:          LDA.W RAM_SpriteDir,X               ;; 019EC1 : BD 7C 15    ;
CODE_019EC4:          PHA                                 ;; 019EC4 : 48          ;
CODE_019EC5:          STZ.W RAM_SpriteDir,X               ;; 019EC5 : 9E 7C 15    ;
CODE_019EC8:          LDA.W $1570,X                       ;; 019EC8 : BD 70 15    ;
CODE_019ECB:          LSR                                 ;; 019ECB : 4A          ;
CODE_019ECC:          LSR                                 ;; 019ECC : 4A          ;
CODE_019ECD:          LSR                                 ;; 019ECD : 4A          ;
CODE_019ECE:          AND.B #$01                          ;; 019ECE : 29 01       ;
CODE_019ED0:          TAY                                 ;; 019ED0 : A8          ;
CODE_019ED1:          JSR.W CODE_019E35                   ;; 019ED1 : 20 35 9E    ;
CODE_019ED4:          LDA RAM_SpriteXLo,X                 ;; 019ED4 : B5 E4       ;
CODE_019ED6:          CLC                                 ;; 019ED6 : 18          ;
CODE_019ED7:          ADC.B #$04                          ;; 019ED7 : 69 04       ;
CODE_019ED9:          STA RAM_SpriteXLo,X                 ;; 019ED9 : 95 E4       ;
CODE_019EDB:          LDA.W RAM_SpriteXHi,X               ;; 019EDB : BD E0 14    ;
CODE_019EDE:          ADC.B #$00                          ;; 019EDE : 69 00       ;
CODE_019EE0:          STA.W RAM_SpriteXHi,X               ;; 019EE0 : 9D E0 14    ;
CODE_019EE3:          LDA.W RAM_SprOAMIndex,X             ;; 019EE3 : BD EA 15    ;
CODE_019EE6:          CLC                                 ;; 019EE6 : 18          ;
CODE_019EE7:          ADC.B #$04                          ;; 019EE7 : 69 04       ;
CODE_019EE9:          STA.W RAM_SprOAMIndex,X             ;; 019EE9 : 9D EA 15    ;
CODE_019EEC:          INC.W RAM_SpriteDir,X               ;; 019EEC : FE 7C 15    ;
CODE_019EEF:          JSR.W CODE_019E37                   ;; 019EEF : 20 37 9E    ;
CODE_019EF2:          PLA                                 ;; 019EF2 : 68          ;
CODE_019EF3:          STA.W RAM_SpriteDir,X               ;; 019EF3 : 9D 7C 15    ;
CODE_019EF6:          PLA                                 ;; 019EF6 : 68          ;
CODE_019EF7:          STA.W RAM_SprOAMIndex,X             ;; 019EF7 : 9D EA 15    ;
CODE_019EFA:          PLA                                 ;; 019EFA : 68          ;
CODE_019EFB:          STA.W RAM_SpriteXHi,X               ;; 019EFB : 9D E0 14    ;
CODE_019EFE:          PLA                                 ;; 019EFE : 68          ;
CODE_019EFF:          STA RAM_SpriteXLo,X                 ;; 019EFF : 95 E4       ;
CODE_019F01:          PLA                                 ;; 019F01 : 68          ;
CODE_019F02:          STA.W RAM_SpriteYHi,X               ;; 019F02 : 9D D4 14    ;
CODE_019F05:          PLA                                 ;; 019F05 : 68          ;
CODE_019F06:          STA RAM_SpriteYLo,X                 ;; 019F06 : 95 D8       ;
Return019F08:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
SubSprGfx2Entry0:     STA $04                             ;; ?QPWZ? : 85 04       ;
CODE_019F0B:          BRA CODE_019F0F                     ;; 019F0B : 80 02       ;
                                                          ;;                      ;
SubSprGfx2Entry1:     STZ $04                             ;; ?QPWZ? : 64 04       ;
CODE_019F0F:          JSR.W GetDrawInfoBnk1               ;; 019F0F : 20 65 A3    ;
CODE_019F12:          LDA.W RAM_SpriteDir,X               ;; 019F12 : BD 7C 15    ;
CODE_019F15:          STA $02                             ;; 019F15 : 85 02       ;
CODE_019F17:          LDY RAM_SpriteNum,X                 ;; 019F17 : B4 9E       ;
CODE_019F19:          LDA.W $1602,X                       ;; 019F19 : BD 02 16    ;
CODE_019F1C:          CLC                                 ;; 019F1C : 18          ;
CODE_019F1D:          ADC.W SprTilemapOffset,Y            ;; 019F1D : 79 7F 9C    ;
CODE_019F20:          LDY.W RAM_SprOAMIndex,X             ;; 019F20 : BC EA 15    ; Y = Index into sprite OAM 
CODE_019F23:          TAX                                 ;; 019F23 : AA          ;
CODE_019F24:          LDA.W SprTilemap,X                  ;; 019F24 : BD 83 9B    ;
CODE_019F27:          STA.W OAM_Tile,Y                    ;; 019F27 : 99 02 03    ;
CODE_019F2A:          LDX.W $15E9                         ;; 019F2A : AE E9 15    ; X = Sprite index 
CODE_019F2D:          LDA $00                             ;; 019F2D : A5 00       ;
CODE_019F2F:          STA.W OAM_DispX,Y                   ;; 019F2F : 99 00 03    ;
CODE_019F32:          LDA $01                             ;; 019F32 : A5 01       ;
CODE_019F34:          STA.W OAM_DispY,Y                   ;; 019F34 : 99 01 03    ;
CODE_019F37:          LDA.W RAM_SpriteDir,X               ;; 019F37 : BD 7C 15    ;
CODE_019F3A:          LSR                                 ;; 019F3A : 4A          ;
CODE_019F3B:          LDA.B #$00                          ;; 019F3B : A9 00       ;
CODE_019F3D:          ORA.W RAM_SpritePal,X               ;; 019F3D : 1D F6 15    ;
CODE_019F40:          BCS CODE_019F44                     ;; 019F40 : B0 02       ;
CODE_019F42:          EOR.B #$40                          ;; 019F42 : 49 40       ;
CODE_019F44:          ORA $04                             ;; 019F44 : 05 04       ;
CODE_019F46:          ORA $64                             ;; 019F46 : 05 64       ;
CODE_019F48:          STA.W OAM_Prop,Y                    ;; 019F48 : 99 03 03    ;
CODE_019F4B:          TYA                                 ;; 019F4B : 98          ;
CODE_019F4C:          LSR                                 ;; 019F4C : 4A          ;
CODE_019F4D:          LSR                                 ;; 019F4D : 4A          ;
CODE_019F4E:          TAY                                 ;; 019F4E : A8          ;
CODE_019F4F:          LDA.B #$02                          ;; 019F4F : A9 02       ;
CODE_019F51:          ORA.W RAM_OffscreenHorz,X           ;; 019F51 : 1D A0 15    ;
CODE_019F54:          STA.W OAM_TileSize,Y                ;; 019F54 : 99 60 04    ;
CODE_019F57:          JSR.W CODE_01A3DF                   ;; 019F57 : 20 DF A3    ;
Return019F5A:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
DATA_019F5B:          .db $0B,$F5,$04,$FC,$04,$00         ;; 019F5B               ;
                                                          ;;                      ;
DATA_019F61:          .db $00,$FF,$00,$FF,$00,$00         ;; 019F61               ;
                                                          ;;                      ;
DATA_019F67:          .db $F3,$0D                         ;; 019F67               ;
                                                          ;;                      ;
DATA_019F69:          .db $FF,$00                         ;; 019F69               ;
                                                          ;;                      ;
ShellSpeedX:          .db $D2,$2E,$CC,$34,$00,$10         ;; ?QPWZ?               ;
                                                          ;;                      ;
HandleSprCarried:     JSR.W CODE_019F9B                   ;; ?QPWZ? : 20 9B 9F    ;
CODE_019F74:          LDA.W RAM_ChangingDir               ;; 019F74 : AD DD 13    ;
CODE_019F77:          BNE CODE_019F83                     ;; 019F77 : D0 0A       ;
CODE_019F79:          LDA.W RAM_YoshiInPipe               ;; 019F79 : AD 19 14    ; \ Branch if Yoshi going down pipe 
CODE_019F7C:          BNE CODE_019F83                     ;; 019F7C : D0 05       ; / 
CODE_019F7E:          LDA.W RAM_FaceCamImgTimer           ;; 019F7E : AD 99 14    ; \ Branch if Mario facing camera 
CODE_019F81:          BEQ CODE_019F86                     ;; 019F81 : F0 03       ; / 
CODE_019F83:          STZ.W RAM_SprOAMIndex,X             ;; 019F83 : 9E EA 15    ;
CODE_019F86:          LDA $64                             ;; 019F86 : A5 64       ;
CODE_019F88:          PHA                                 ;; 019F88 : 48          ;
CODE_019F89:          LDA.W RAM_YoshiInPipe               ;; 019F89 : AD 19 14    ;
CODE_019F8C:          BEQ CODE_019F92                     ;; 019F8C : F0 04       ;
CODE_019F8E:          LDA.B #$10                          ;; 019F8E : A9 10       ;
CODE_019F90:          STA $64                             ;; 019F90 : 85 64       ;
CODE_019F92:          JSR.W CODE_01A187                   ;; 019F92 : 20 87 A1    ;
CODE_019F95:          PLA                                 ;; 019F95 : 68          ;
CODE_019F96:          STA $64                             ;; 019F96 : 85 64       ;
Return019F98:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
DATA_019F99:          .db $FC,$04                         ;; 019F99               ;
                                                          ;;                      ;
CODE_019F9B:          LDA RAM_SpriteNum,X                 ;; 019F9B : B5 9E       ; \ Branch if not Balloon 
CODE_019F9D:          CMP.B #$7D                          ;; 019F9D : C9 7D       ;  | 
CODE_019F9F:          BNE CODE_019FE0                     ;; 019F9F : D0 3F       ; / 
CODE_019FA1:          LDA RAM_FrameCounter                ;; 019FA1 : A5 13       ;
CODE_019FA3:          AND.B #$03                          ;; 019FA3 : 29 03       ;
CODE_019FA5:          BNE CODE_019FBE                     ;; 019FA5 : D0 17       ;
CODE_019FA7:          DEC.W $1891                         ;; 019FA7 : CE 91 18    ;
CODE_019FAA:          BEQ CODE_019FC4                     ;; 019FAA : F0 18       ;
CODE_019FAC:          LDA.W $1891                         ;; 019FAC : AD 91 18    ;
CODE_019FAF:          CMP.B #$30                          ;; 019FAF : C9 30       ;
CODE_019FB1:          BCS CODE_019FBE                     ;; 019FB1 : B0 0B       ;
CODE_019FB3:          LDY.B #$01                          ;; 019FB3 : A0 01       ;
CODE_019FB5:          AND.B #$04                          ;; 019FB5 : 29 04       ;
CODE_019FB7:          BEQ CODE_019FBB                     ;; 019FB7 : F0 02       ;
CODE_019FB9:          LDY.B #$09                          ;; 019FB9 : A0 09       ;
CODE_019FBB:          STY.W $13F3                         ;; 019FBB : 8C F3 13    ;
CODE_019FBE:          LDA RAM_MarioAnimation              ;; 019FBE : A5 71       ; \ Branch if no Mario animation sequence in progress 
CODE_019FC0:          CMP.B #$01                          ;; 019FC0 : C9 01       ;  | 
CODE_019FC2:          BCC CODE_019FCA                     ;; 019FC2 : 90 06       ; / 
CODE_019FC4:          STZ.W $13F3                         ;; 019FC4 : 9C F3 13    ;
CODE_019FC7:          JMP.W OffScrEraseSprite             ;; 019FC7 : 4C 80 AC    ;
                                                          ;;                      ;
CODE_019FCA:          PHB                                 ;; 019FCA : 8B          ;
CODE_019FCB:          LDA.B #$02                          ;; 019FCB : A9 02       ;
CODE_019FCD:          PHA                                 ;; 019FCD : 48          ;
CODE_019FCE:          PLB                                 ;; 019FCE : AB          ;
CODE_019FCF:          JSL.L CODE_02D214                   ;; 019FCF : 22 14 D2 02 ;
CODE_019FD3:          PLB                                 ;; 019FD3 : AB          ;
CODE_019FD4:          JSR.W CODE_01A0B1                   ;; 019FD4 : 20 B1 A0    ;
CODE_019FD7:          LDY.W RAM_SprOAMIndex,X             ;; 019FD7 : BC EA 15    ; Y = Index into sprite OAM 
CODE_019FDA:          LDA.B #$F0                          ;; 019FDA : A9 F0       ;
CODE_019FDC:          STA.W OAM_DispY,Y                   ;; 019FDC : 99 01 03    ;
Return019FDF:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_019FE0:          JSR.W CODE_019140                   ;; 019FE0 : 20 40 91    ;
CODE_019FE3:          LDA RAM_MarioAnimation              ;; 019FE3 : A5 71       ; \ Branch if no Mario animation sequence in progress 
CODE_019FE5:          CMP.B #$01                          ;; 019FE5 : C9 01       ;  | 
CODE_019FE7:          BCC CODE_019FF4                     ;; 019FE7 : 90 0B       ; / 
CODE_019FE9:          LDA.W RAM_YoshiInPipe               ;; 019FE9 : AD 19 14    ; \ Branch if in pipe 
CODE_019FEC:          BNE CODE_019FF4                     ;; 019FEC : D0 06       ; / 
CODE_019FEE:          LDA.B #$09                          ;; 019FEE : A9 09       ; \ Sprite status = Stunned 
CODE_019FF0:          STA.W $14C8,X                       ;; 019FF0 : 9D C8 14    ; / 
Return019FF3:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_019FF4:          LDA.W $14C8,X                       ;; 019FF4 : BD C8 14    ; \ Return if sprite status == Normal 
CODE_019FF7:          CMP.B #$08                          ;; 019FF7 : C9 08       ;  | 
CODE_019FF9:          BEQ Return01A014                    ;; 019FF9 : F0 19       ; / 
CODE_019FFB:          LDA RAM_SpritesLocked               ;; 019FFB : A5 9D       ; \ Jump if sprites locked 
CODE_019FFD:          BEQ CODE_01A002                     ;; 019FFD : F0 03       ;  | 
CODE_019FFF:          JMP.W CODE_01A0B1                   ;; 019FFF : 4C B1 A0    ; / 
                                                          ;;                      ;
CODE_01A002:          JSR.W CODE_019624                   ;; 01A002 : 20 24 96    ;
CODE_01A005:          JSR.W SubSprSprInteract             ;; 01A005 : 20 0D A4    ;
CODE_01A008:          LDA.W RAM_YoshiInPipe               ;; 01A008 : AD 19 14    ;
CODE_01A00B:          BNE CODE_01A011                     ;; 01A00B : D0 04       ;
CODE_01A00D:          BIT RAM_ControllerA                 ;; 01A00D : 24 15       ;
CODE_01A00F:          BVC CODE_01A015                     ;; 01A00F : 50 04       ;
CODE_01A011:          JSR.W CODE_01A0B1                   ;; 01A011 : 20 B1 A0    ;
Return01A014:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01A015:          STZ.W $1626,X                       ;; 01A015 : 9E 26 16    ;
CODE_01A018:          LDY.B #$00                          ;; 01A018 : A0 00       ;
CODE_01A01A:          LDA RAM_SpriteNum,X                 ;; 01A01A : B5 9E       ; \ Branch if not Goomba 
CODE_01A01C:          CMP.B #$0F                          ;; 01A01C : C9 0F       ;  | 
CODE_01A01E:          BNE CODE_01A026                     ;; 01A01E : D0 06       ; / 
CODE_01A020:          LDA RAM_IsFlying                    ;; 01A020 : A5 72       ;
CODE_01A022:          BNE CODE_01A026                     ;; 01A022 : D0 02       ;
CODE_01A024:          LDY.B #$EC                          ;; 01A024 : A0 EC       ;
CODE_01A026:          STY RAM_SpriteSpeedY,X              ;; 01A026 : 94 AA       ;
CODE_01A028:          LDA.B #$09                          ;; 01A028 : A9 09       ; \ Sprite status = Carryable 
CODE_01A02A:          STA.W $14C8,X                       ;; 01A02A : 9D C8 14    ; / 
CODE_01A02D:          LDA RAM_ControllerA                 ;; 01A02D : A5 15       ;
CODE_01A02F:          AND.B #$08                          ;; 01A02F : 29 08       ;
CODE_01A031:          BNE CODE_01A068                     ;; 01A031 : D0 35       ;
CODE_01A033:          LDA RAM_SpriteNum,X                 ;; 01A033 : B5 9E       ; \ Branch if sprite >= #$15 
CODE_01A035:          CMP.B #$15                          ;; 01A035 : C9 15       ;  | 
CODE_01A037:          BCS CODE_01A041                     ;; 01A037 : B0 08       ; / 
CODE_01A039:          LDA RAM_ControllerA                 ;; 01A039 : A5 15       ;
CODE_01A03B:          AND.B #$04                          ;; 01A03B : 29 04       ;
CODE_01A03D:          BEQ CODE_01A079                     ;; 01A03D : F0 3A       ;
CODE_01A03F:          BRA CODE_01A047                     ;; 01A03F : 80 06       ;
                                                          ;;                      ;
CODE_01A041:          LDA RAM_ControllerA                 ;; 01A041 : A5 15       ;
CODE_01A043:          AND.B #$03                          ;; 01A043 : 29 03       ;
CODE_01A045:          BNE CODE_01A079                     ;; 01A045 : D0 32       ;
CODE_01A047:          LDY RAM_MarioDirection              ;; 01A047 : A4 76       ;
CODE_01A049:          LDA $D1                             ;; 01A049 : A5 D1       ;
CODE_01A04B:          CLC                                 ;; 01A04B : 18          ;
CODE_01A04C:          ADC.W DATA_019F67,Y                 ;; 01A04C : 79 67 9F    ;
CODE_01A04F:          STA RAM_SpriteXLo,X                 ;; 01A04F : 95 E4       ;
CODE_01A051:          LDA $D2                             ;; 01A051 : A5 D2       ;
CODE_01A053:          ADC.W DATA_019F69,Y                 ;; 01A053 : 79 69 9F    ;
CODE_01A056:          STA.W RAM_SpriteXHi,X               ;; 01A056 : 9D E0 14    ;
CODE_01A059:          JSR.W SubHorizPos                   ;; 01A059 : 20 30 AD    ;
CODE_01A05C:          LDA.W DATA_019F99,Y                 ;; 01A05C : B9 99 9F    ;
CODE_01A05F:          CLC                                 ;; 01A05F : 18          ;
CODE_01A060:          ADC RAM_MarioSpeedX                 ;; 01A060 : 65 7B       ;
CODE_01A062:          STA RAM_SpriteSpeedX,X              ;; 01A062 : 95 B6       ;
CODE_01A064:          STZ RAM_SpriteSpeedY,X              ;; 01A064 : 74 AA       ; Sprite Y Speed = 0 
CODE_01A066:          BRA CODE_01A0A6                     ;; 01A066 : 80 3E       ;
                                                          ;;                      ;
CODE_01A068:          JSL.L CODE_01AB6F                   ;; 01A068 : 22 6F AB 01 ;
CODE_01A06C:          LDA.B #$90                          ;; 01A06C : A9 90       ;
CODE_01A06E:          STA RAM_SpriteSpeedY,X              ;; 01A06E : 95 AA       ;
CODE_01A070:          LDA RAM_MarioSpeedX                 ;; 01A070 : A5 7B       ;
CODE_01A072:          STA RAM_SpriteSpeedX,X              ;; 01A072 : 95 B6       ;
CODE_01A074:          ASL                                 ;; 01A074 : 0A          ;
CODE_01A075:          ROR RAM_SpriteSpeedX,X              ;; 01A075 : 76 B6       ;
CODE_01A077:          BRA CODE_01A0A6                     ;; 01A077 : 80 2D       ;
                                                          ;;                      ;
CODE_01A079:          JSL.L CODE_01AB6F                   ;; 01A079 : 22 6F AB 01 ;
CODE_01A07D:          LDA.W $1540,X                       ;; 01A07D : BD 40 15    ;
CODE_01A080:          STA RAM_SpriteState,X               ;; 01A080 : 95 C2       ;
CODE_01A082:          LDA.B #$0A                          ;; 01A082 : A9 0A       ; \ Sprite status = Kicked 
CODE_01A084:          STA.W $14C8,X                       ;; 01A084 : 9D C8 14    ; / 
CODE_01A087:          LDY RAM_MarioDirection              ;; 01A087 : A4 76       ;
CODE_01A089:          LDA.W RAM_OnYoshi                   ;; 01A089 : AD 7A 18    ;
CODE_01A08C:          BEQ CODE_01A090                     ;; 01A08C : F0 02       ;
ADDR_01A08E:          INY                                 ;; 01A08E : C8          ;
ADDR_01A08F:          INY                                 ;; 01A08F : C8          ;
CODE_01A090:          LDA.W ShellSpeedX,Y                 ;; 01A090 : B9 6B 9F    ;
CODE_01A093:          STA RAM_SpriteSpeedX,X              ;; 01A093 : 95 B6       ;
CODE_01A095:          EOR RAM_MarioSpeedX                 ;; 01A095 : 45 7B       ;
CODE_01A097:          BMI CODE_01A0A6                     ;; 01A097 : 30 0D       ;
CODE_01A099:          LDA RAM_MarioSpeedX                 ;; 01A099 : A5 7B       ;
CODE_01A09B:          STA $00                             ;; 01A09B : 85 00       ;
CODE_01A09D:          ASL $00                             ;; 01A09D : 06 00       ;
CODE_01A09F:          ROR                                 ;; 01A09F : 6A          ;
CODE_01A0A0:          CLC                                 ;; 01A0A0 : 18          ;
CODE_01A0A1:          ADC.W ShellSpeedX,Y                 ;; 01A0A1 : 79 6B 9F    ;
CODE_01A0A4:          STA RAM_SpriteSpeedX,X              ;; 01A0A4 : 95 B6       ;
CODE_01A0A6:          LDA.B #$10                          ;; 01A0A6 : A9 10       ;
CODE_01A0A8:          STA.W RAM_DisableInter,X            ;; 01A0A8 : 9D 4C 15    ;
CODE_01A0AB:          LDA.B #$0C                          ;; 01A0AB : A9 0C       ;
CODE_01A0AD:          STA.W RAM_KickImgTimer              ;; 01A0AD : 8D 9A 14    ;
Return01A0B0:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01A0B1:          LDY.B #$00                          ;; 01A0B1 : A0 00       ;
CODE_01A0B3:          LDA RAM_MarioDirection              ;; 01A0B3 : A5 76       ; \ Y = Mario's direction 
CODE_01A0B5:          BNE CODE_01A0B8                     ;; 01A0B5 : D0 01       ;  | 
CODE_01A0B7:          INY                                 ;; 01A0B7 : C8          ; / 
CODE_01A0B8:          LDA.W RAM_FaceCamImgTimer           ;; 01A0B8 : AD 99 14    ;
CODE_01A0BB:          BEQ CODE_01A0C4                     ;; 01A0BB : F0 07       ;
CODE_01A0BD:          INY                                 ;; 01A0BD : C8          ;
CODE_01A0BE:          INY                                 ;; 01A0BE : C8          ;
CODE_01A0BF:          CMP.B #$05                          ;; 01A0BF : C9 05       ;
CODE_01A0C1:          BCC CODE_01A0C4                     ;; 01A0C1 : 90 01       ;
CODE_01A0C3:          INY                                 ;; 01A0C3 : C8          ;
CODE_01A0C4:          LDA.W RAM_YoshiInPipe               ;; 01A0C4 : AD 19 14    ;
CODE_01A0C7:          BEQ CODE_01A0CD                     ;; 01A0C7 : F0 04       ;
CODE_01A0C9:          CMP.B #$02                          ;; 01A0C9 : C9 02       ;
CODE_01A0CB:          BEQ CODE_01A0D4                     ;; 01A0CB : F0 07       ;
CODE_01A0CD:          LDA.W RAM_ChangingDir               ;; 01A0CD : AD DD 13    ;
CODE_01A0D0:          ORA RAM_IsClimbing                  ;; 01A0D0 : 05 74       ;
CODE_01A0D2:          BEQ CODE_01A0D6                     ;; 01A0D2 : F0 02       ;
CODE_01A0D4:          LDY.B #$05                          ;; 01A0D4 : A0 05       ;
CODE_01A0D6:          PHY                                 ;; 01A0D6 : 5A          ;
CODE_01A0D7:          LDY.B #$00                          ;; 01A0D7 : A0 00       ;
CODE_01A0D9:          LDA.W $1471                         ;; 01A0D9 : AD 71 14    ;
CODE_01A0DC:          CMP.B #$03                          ;; 01A0DC : C9 03       ;
CODE_01A0DE:          BEQ CODE_01A0E2                     ;; 01A0DE : F0 02       ;
CODE_01A0E0:          LDY.B #$3D                          ;; 01A0E0 : A0 3D       ;
CODE_01A0E2:          LDA.W RAM_MarioXPos,Y               ;; 01A0E2 : B9 94 00    ; \ $00 = Mario's X position 
CODE_01A0E5:          STA $00                             ;; 01A0E5 : 85 00       ;  | 
CODE_01A0E7:          LDA.W RAM_MarioXPosHi,Y             ;; 01A0E7 : B9 95 00    ;  | 
CODE_01A0EA:          STA $01                             ;; 01A0EA : 85 01       ; / 
CODE_01A0EC:          LDA.W RAM_MarioYPos,Y               ;; 01A0EC : B9 96 00    ; \ $02 = Mario's Y position 
CODE_01A0EF:          STA $02                             ;; 01A0EF : 85 02       ;  | 
CODE_01A0F1:          LDA.W RAM_MarioYPosHi,Y             ;; 01A0F1 : B9 97 00    ;  | 
CODE_01A0F4:          STA $03                             ;; 01A0F4 : 85 03       ; / 
CODE_01A0F6:          PLY                                 ;; 01A0F6 : 7A          ;
CODE_01A0F7:          LDA $00                             ;; 01A0F7 : A5 00       ;
CODE_01A0F9:          CLC                                 ;; 01A0F9 : 18          ;
CODE_01A0FA:          ADC.W DATA_019F5B,Y                 ;; 01A0FA : 79 5B 9F    ;
CODE_01A0FD:          STA RAM_SpriteXLo,X                 ;; 01A0FD : 95 E4       ;
CODE_01A0FF:          LDA $01                             ;; 01A0FF : A5 01       ;
CODE_01A101:          ADC.W DATA_019F61,Y                 ;; 01A101 : 79 61 9F    ;
CODE_01A104:          STA.W RAM_SpriteXHi,X               ;; 01A104 : 9D E0 14    ;
CODE_01A107:          LDA.B #$0D                          ;; 01A107 : A9 0D       ;
CODE_01A109:          LDY RAM_IsDucking                   ;; 01A109 : A4 73       ; \ Branch if ducking 
CODE_01A10B:          BNE CODE_01A111                     ;; 01A10B : D0 04       ; / 
CODE_01A10D:          LDY RAM_MarioPowerUp                ;; 01A10D : A4 19       ; \ Branch if Mario isn't small 
CODE_01A10F:          BNE CODE_01A113                     ;; 01A10F : D0 02       ; / 
CODE_01A111:          LDA.B #$0F                          ;; 01A111 : A9 0F       ;
CODE_01A113:          LDY.W RAM_PickUpImgTimer            ;; 01A113 : AC 98 14    ;
CODE_01A116:          BEQ CODE_01A11A                     ;; 01A116 : F0 02       ;
CODE_01A118:          LDA.B #$0F                          ;; 01A118 : A9 0F       ;
CODE_01A11A:          CLC                                 ;; 01A11A : 18          ;
CODE_01A11B:          ADC $02                             ;; 01A11B : 65 02       ;
CODE_01A11D:          STA RAM_SpriteYLo,X                 ;; 01A11D : 95 D8       ;
CODE_01A11F:          LDA $03                             ;; 01A11F : A5 03       ;
CODE_01A121:          ADC.B #$00                          ;; 01A121 : 69 00       ;
CODE_01A123:          STA.W RAM_SpriteYHi,X               ;; 01A123 : 9D D4 14    ;
CODE_01A126:          LDA.B #$01                          ;; 01A126 : A9 01       ;
CODE_01A128:          STA.W $148F                         ;; 01A128 : 8D 8F 14    ;
CODE_01A12B:          STA.W $1470                         ;; 01A12B : 8D 70 14    ; Set carrying enemy flag 
Return01A12E:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
StunGoomba:           LDA RAM_FrameCounterB               ;; ?QPWZ? : A5 14       ;
CODE_01A131:          LSR                                 ;; 01A131 : 4A          ;
CODE_01A132:          LSR                                 ;; 01A132 : 4A          ;
CODE_01A133:          LDY.W $1540,X                       ;; 01A133 : BC 40 15    ;
CODE_01A136:          CPY.B #$30                          ;; 01A136 : C0 30       ;
CODE_01A138:          BCC CODE_01A13B                     ;; 01A138 : 90 01       ;
CODE_01A13A:          LSR                                 ;; 01A13A : 4A          ;
CODE_01A13B:          AND.B #$01                          ;; 01A13B : 29 01       ;
CODE_01A13D:          STA.W $1602,X                       ;; 01A13D : 9D 02 16    ;
CODE_01A140:          CPY.B #$08                          ;; 01A140 : C0 08       ;
CODE_01A142:          BNE CODE_01A14D                     ;; 01A142 : D0 09       ;
ADDR_01A144:          JSR.W IsOnGround                    ;; 01A144 : 20 0E 80    ;
ADDR_01A147:          BEQ CODE_01A14D                     ;; 01A147 : F0 04       ;
ADDR_01A149:          LDA.B #$D8                          ;; 01A149 : A9 D8       ;
ADDR_01A14B:          STA RAM_SpriteSpeedY,X              ;; 01A14B : 95 AA       ;
CODE_01A14D:          LDA.B #$80                          ;; 01A14D : A9 80       ;
CODE_01A14F:          JMP.W SubSprGfx2Entry0              ;; 01A14F : 4C 09 9F    ;
                                                          ;;                      ;
StunMechaKoopa:       LDA RAM_ScreenBndryXLo              ;; ?QPWZ? : A5 1A       ;
CODE_01A154:          PHA                                 ;; 01A154 : 48          ;
CODE_01A155:          LDA.W $1540,X                       ;; 01A155 : BD 40 15    ;
CODE_01A158:          CMP.B #$30                          ;; 01A158 : C9 30       ;
CODE_01A15A:          BCS CODE_01A162                     ;; 01A15A : B0 06       ;
CODE_01A15C:          AND.B #$01                          ;; 01A15C : 29 01       ;
CODE_01A15E:          EOR RAM_ScreenBndryXLo              ;; 01A15E : 45 1A       ;
CODE_01A160:          STA RAM_ScreenBndryXLo              ;; 01A160 : 85 1A       ;
CODE_01A162:          JSL.L CODE_03B307                   ;; 01A162 : 22 07 B3 03 ;
CODE_01A166:          PLA                                 ;; 01A166 : 68          ;
CODE_01A167:          STA RAM_ScreenBndryXLo              ;; 01A167 : 85 1A       ;
CODE_01A169:          LDA.W $14C8,X                       ;; 01A169 : BD C8 14    ; \ If sprite status == Carried, 
CODE_01A16C:          CMP.B #$0B                          ;; 01A16C : C9 0B       ;  | 
CODE_01A16E:          BNE Return01A177                    ;; 01A16E : D0 07       ;  | 
CODE_01A170:          LDA RAM_MarioDirection              ;; 01A170 : A5 76       ;  | Sprite direction = Opposite direction of Mario 
CODE_01A172:          EOR.B #$01                          ;; 01A172 : 49 01       ;  | 
CODE_01A174:          STA.W RAM_SpriteDir,X               ;; 01A174 : 9D 7C 15    ; / 
Return01A177:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
StunFish:             JSR.W SetAnimationFrame             ;; ?QPWZ? : 20 5F 8E    ;
ADDR_01A17B:          LDA.W RAM_SpritePal,X               ;; 01A17B : BD F6 15    ;
ADDR_01A17E:          ORA.B #$80                          ;; 01A17E : 09 80       ;
ADDR_01A180:          STA.W RAM_SpritePal,X               ;; 01A180 : 9D F6 15    ;
ADDR_01A183:          JSR.W SubSprGfx2Entry1              ;; 01A183 : 20 0D 9F    ;
Return01A186:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01A187:          LDA.W RAM_Tweaker167A,X             ;; 01A187 : BD 7A 16    ; \ Branch if sprite changes into a shell 
CODE_01A18A:          AND.B #$08                          ;; 01A18A : 29 08       ;  | 
CODE_01A18C:          BEQ CODE_01A1D0                     ;; 01A18C : F0 42       ; / 
CODE_01A18E:          LDA RAM_SpriteNum,X                 ;; 01A18E : B5 9E       ;
CODE_01A190:          CMP.B #$A2                          ;; 01A190 : C9 A2       ;
CODE_01A192:          BEQ StunMechaKoopa                  ;; 01A192 : F0 BE       ;
CODE_01A194:          CMP.B #$15                          ;; 01A194 : C9 15       ;
CODE_01A196:          BEQ StunFish                        ;; 01A196 : F0 E0       ;
CODE_01A198:          CMP.B #$16                          ;; 01A198 : C9 16       ;
CODE_01A19A:          BEQ StunFish                        ;; 01A19A : F0 DC       ;
CODE_01A19C:          CMP.B #$0F                          ;; 01A19C : C9 0F       ;
CODE_01A19E:          BEQ StunGoomba                      ;; 01A19E : F0 8F       ;
CODE_01A1A0:          CMP.B #$53                          ;; 01A1A0 : C9 53       ;
CODE_01A1A2:          BEQ StunThrowBlock                  ;; 01A1A2 : F0 30       ;
CODE_01A1A4:          CMP.B #$2C                          ;; 01A1A4 : C9 2C       ;
CODE_01A1A6:          BEQ StunYoshiEgg                    ;; 01A1A6 : F0 40       ;
CODE_01A1A8:          CMP.B #$80                          ;; 01A1A8 : C9 80       ;
CODE_01A1AA:          BEQ StunKey                         ;; 01A1AA : F0 47       ;
CODE_01A1AC:          CMP.B #$7D                          ;; 01A1AC : C9 7D       ;
CODE_01A1AE:          BEQ Return01A1D3                    ;; 01A1AE : F0 23       ;
CODE_01A1B0:          CMP.B #$3E                          ;; 01A1B0 : C9 3E       ;
CODE_01A1B2:          BEQ StunPow                         ;; 01A1B2 : F0 49       ;
CODE_01A1B4:          CMP.B #$2F                          ;; 01A1B4 : C9 2F       ;
CODE_01A1B6:          BEQ StunSpringBoard                 ;; 01A1B6 : F0 71       ;
CODE_01A1B8:          CMP.B #$0D                          ;; 01A1B8 : C9 0D       ;
CODE_01A1BA:          BEQ StunBomb                        ;; 01A1BA : F0 30       ;
CODE_01A1BC:          CMP.B #$2D                          ;; 01A1BC : C9 2D       ;
CODE_01A1BE:          BEQ StunBabyYoshi                   ;; 01A1BE : F0 6C       ;
ADDR_01A1C0:          CMP.B #$85                          ;; 01A1C0 : C9 85       ;
ADDR_01A1C2:          BNE CODE_01A1D0                     ;; 01A1C2 : D0 0C       ;
ADDR_01A1C4:          JSR.W SubSprGfx2Entry1              ;; 01A1C4 : 20 0D 9F    ; \ Handle unused sprite 85 
ADDR_01A1C7:          LDY.W RAM_SprOAMIndex,X             ;; 01A1C7 : BC EA 15    ;  | 
ADDR_01A1CA:          LDA.B #$47                          ;; 01A1CA : A9 47       ;  | Set OAM with tile #$47 
ADDR_01A1CC:          STA.W OAM_Tile,Y                    ;; 01A1CC : 99 02 03    ; / 
Return01A1CF:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01A1D0:          JSR.W CODE_019806                   ;; 01A1D0 : 20 06 98    ;
Return01A1D3:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
StunThrowBlock:       LDA.W $1540,X                       ;; ?QPWZ? : BD 40 15    ;
CODE_01A1D7:          CMP.B #$40                          ;; 01A1D7 : C9 40       ;
CODE_01A1D9:          BCS CODE_01A1DE                     ;; 01A1D9 : B0 03       ;
CODE_01A1DB:          LSR                                 ;; 01A1DB : 4A          ;
CODE_01A1DC:          BCS StunYoshiEgg                    ;; 01A1DC : B0 0A       ;
CODE_01A1DE:          LDA.W RAM_SpritePal,X               ;; 01A1DE : BD F6 15    ;
CODE_01A1E1:          INC A                               ;; 01A1E1 : 1A          ;
CODE_01A1E2:          INC A                               ;; 01A1E2 : 1A          ;
CODE_01A1E3:          AND.B #$0F                          ;; 01A1E3 : 29 0F       ;
CODE_01A1E5:          STA.W RAM_SpritePal,X               ;; 01A1E5 : 9D F6 15    ;
StunYoshiEgg:         JSR.W SubSprGfx2Entry1              ;; ?QPWZ? : 20 0D 9F    ;
Return01A1EB:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
StunBomb:             JSR.W SubSprGfx2Entry1              ;; ?QPWZ? : 20 0D 9F    ;
CODE_01A1EF:          LDA.B #$CA                          ;; 01A1EF : A9 CA       ;
CODE_01A1F1:          BRA CODE_01A222                     ;; 01A1F1 : 80 2F       ;
                                                          ;;                      ;
StunKey:              JSR.W CODE_01A169                   ;; ?QPWZ? : 20 69 A1    ;
CODE_01A1F6:          JSR.W SubSprGfx2Entry1              ;; 01A1F6 : 20 0D 9F    ;
CODE_01A1F9:          LDA.B #$EC                          ;; 01A1F9 : A9 EC       ;
CODE_01A1FB:          BRA CODE_01A222                     ;; 01A1FB : 80 25       ;
                                                          ;;                      ;
StunPow:              LDY.W $163E,X                       ;; ?QPWZ? : BC 3E 16    ;
CODE_01A200:          BEQ CODE_01A218                     ;; 01A200 : F0 16       ;
CODE_01A202:          CPY.B #$01                          ;; 01A202 : C0 01       ;
CODE_01A204:          BNE CODE_01A209                     ;; 01A204 : D0 03       ;
CODE_01A206:          JMP.W CODE_019ACB                   ;; 01A206 : 4C CB 9A    ;
                                                          ;;                      ;
CODE_01A209:          JSR.W SmushedGfxRt                  ;; 01A209 : 20 00 E7    ;
CODE_01A20C:          LDY.W RAM_SprOAMIndex,X             ;; 01A20C : BC EA 15    ; Y = Index into sprite OAM 
CODE_01A20F:          LDA.W OAM_Prop,Y                    ;; 01A20F : B9 03 03    ;
CODE_01A212:          AND.B #$FE                          ;; 01A212 : 29 FE       ;
CODE_01A214:          STA.W OAM_Prop,Y                    ;; 01A214 : 99 03 03    ;
Return01A217:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01A218:          LDA.B #$01                          ;; 01A218 : A9 01       ;
CODE_01A21A:          STA.W RAM_SpriteDir,X               ;; 01A21A : 9D 7C 15    ;
CODE_01A21D:          JSR.W SubSprGfx2Entry1              ;; 01A21D : 20 0D 9F    ;
CODE_01A220:          LDA.B #$42                          ;; 01A220 : A9 42       ;
CODE_01A222:          LDY.W RAM_SprOAMIndex,X             ;; 01A222 : BC EA 15    ; Y = Index into sprite OAM 
CODE_01A225:          STA.W OAM_Tile,Y                    ;; 01A225 : 99 02 03    ;
Return01A228:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
StunSpringBoard:      JMP.W CODE_01E6F0                   ;; ?QPWZ? : 4C F0 E6    ;
                                                          ;;                      ;
StunBabyYoshi:        LDA RAM_SpritesLocked               ;; ?QPWZ? : A5 9D       ; \ Branch if sprites locked 
CODE_01A22E:          BNE CODE_01A27B                     ;; 01A22E : D0 4B       ; / 
CODE_01A230:          LDA RAM_SpriteXLo,X                 ;; 01A230 : B5 E4       ;
CODE_01A232:          CLC                                 ;; 01A232 : 18          ;
CODE_01A233:          ADC.B #$08                          ;; 01A233 : 69 08       ;
CODE_01A235:          STA $00                             ;; 01A235 : 85 00       ;
CODE_01A237:          LDA.W RAM_SpriteXHi,X               ;; 01A237 : BD E0 14    ;
CODE_01A23A:          ADC.B #$00                          ;; 01A23A : 69 00       ;
CODE_01A23C:          STA $08                             ;; 01A23C : 85 08       ;
CODE_01A23E:          LDA RAM_SpriteYLo,X                 ;; 01A23E : B5 D8       ;
CODE_01A240:          CLC                                 ;; 01A240 : 18          ;
CODE_01A241:          ADC.B #$08                          ;; 01A241 : 69 08       ;
CODE_01A243:          STA $01                             ;; 01A243 : 85 01       ;
CODE_01A245:          LDA.W RAM_SpriteYHi,X               ;; 01A245 : BD D4 14    ;
CODE_01A248:          ADC.B #$00                          ;; 01A248 : 69 00       ;
CODE_01A24A:          STA $09                             ;; 01A24A : 85 09       ;
CODE_01A24C:          JSL.L CODE_02B9FA                   ;; 01A24C : 22 FA B9 02 ;
CODE_01A250:          JSL.L CODE_02EA4E                   ;; 01A250 : 22 4E EA 02 ;
CODE_01A254:          LDA.W $163E,X                       ;; 01A254 : BD 3E 16    ;
CODE_01A257:          BNE CODE_01A27E                     ;; 01A257 : D0 25       ;
CODE_01A259:          DEC A                               ;; 01A259 : 3A          ;
CODE_01A25A:          STA.W $160E,X                       ;; 01A25A : 9D 0E 16    ;
CODE_01A25D:          LDA.W $14C8,X                       ;; 01A25D : BD C8 14    ; \ Branch if sprite status != Stunned 
CODE_01A260:          CMP.B #$09                          ;; 01A260 : C9 09       ;  | 
CODE_01A262:          BNE CODE_01A26D                     ;; 01A262 : D0 09       ; / 
CODE_01A264:          JSR.W IsOnGround                    ;; 01A264 : 20 0E 80    ;
CODE_01A267:          BEQ CODE_01A26D                     ;; 01A267 : F0 04       ;
CODE_01A269:          LDA.B #$F0                          ;; 01A269 : A9 F0       ;
CODE_01A26B:          STA RAM_SpriteSpeedY,X              ;; 01A26B : 95 AA       ;
CODE_01A26D:          LDY.B #$00                          ;; 01A26D : A0 00       ;
CODE_01A26F:          LDA RAM_FrameCounterB               ;; 01A26F : A5 14       ;
CODE_01A271:          AND.B #$18                          ;; 01A271 : 29 18       ;
CODE_01A273:          BNE CODE_01A277                     ;; 01A273 : D0 02       ;
CODE_01A275:          LDY.B #$03                          ;; 01A275 : A0 03       ;
CODE_01A277:          TYA                                 ;; 01A277 : 98          ;
CODE_01A278:          STA.W $1602,X                       ;; 01A278 : 9D 02 16    ;
CODE_01A27B:          JMP.W CODE_01A34F                   ;; 01A27B : 4C 4F A3    ;
                                                          ;;                      ;
CODE_01A27E:          STZ.W RAM_SprOAMIndex,X             ;; 01A27E : 9E EA 15    ;
CODE_01A281:          CMP.B #$20                          ;; 01A281 : C9 20       ;
CODE_01A283:          BEQ CODE_01A288                     ;; 01A283 : F0 03       ;
CODE_01A285:          JMP.W CODE_01A30A                   ;; 01A285 : 4C 0A A3    ;
                                                          ;;                      ;
CODE_01A288:          LDY.W $160E,X                       ;; 01A288 : BC 0E 16    ;
CODE_01A28B:          LDA.B #$00                          ;; 01A28B : A9 00       ; \ Clear sprite status 
CODE_01A28D:          STA.W $14C8,Y                       ;; 01A28D : 99 C8 14    ; / 
CODE_01A290:          LDA.B #$06                          ;; 01A290 : A9 06       ;
CODE_01A292:          STA.W $1DF9                         ;; 01A292 : 8D F9 1D    ; / Play sound effect 
CODE_01A295:          LDA.W $160E,Y                       ;; 01A295 : B9 0E 16    ;
CODE_01A298:          BNE CODE_01A2F4                     ;; 01A298 : D0 5A       ;
CODE_01A29A:          LDA.W RAM_SpriteNum,Y               ;; 01A29A : B9 9E 00    ; \ Branch if not Changing power up 
CODE_01A29D:          CMP.B #$81                          ;; 01A29D : C9 81       ;  | 
CODE_01A29F:          BNE CODE_01A2AD                     ;; 01A29F : D0 0C       ; / 
ADDR_01A2A1:          LDA RAM_FrameCounterB               ;; 01A2A1 : A5 14       ;
ADDR_01A2A3:          LSR                                 ;; 01A2A3 : 4A          ;
ADDR_01A2A4:          LSR                                 ;; 01A2A4 : 4A          ;
ADDR_01A2A5:          LSR                                 ;; 01A2A5 : 4A          ;
ADDR_01A2A6:          LSR                                 ;; 01A2A6 : 4A          ;
ADDR_01A2A7:          AND.B #$03                          ;; 01A2A7 : 29 03       ;
ADDR_01A2A9:          TAY                                 ;; 01A2A9 : A8          ;
ADDR_01A2AA:          LDA.W ChangingItemSprite,Y          ;; 01A2AA : B9 13 C3    ;
CODE_01A2AD:          CMP.B #$74                          ;; 01A2AD : C9 74       ;
CODE_01A2AF:          BCC CODE_01A2F4                     ;; 01A2AF : 90 43       ;
CODE_01A2B1:          CMP.B #$78                          ;; 01A2B1 : C9 78       ;
CODE_01A2B3:          BCS CODE_01A2F4                     ;; 01A2B3 : B0 3F       ;
CODE_01A2B5:          STZ.W $18AC                         ;; 01A2B5 : 9C AC 18    ;
CODE_01A2B8:          STZ.W RAM_YoshiHasWings             ;; 01A2B8 : 9C 1E 14    ; No Yoshi wings 
CODE_01A2BB:          LDA.B #$35                          ;; 01A2BB : A9 35       ; \ Sprite = Yoshi 
CODE_01A2BD:          STA.W RAM_SpriteNum,X               ;; 01A2BD : 9D 9E 00    ; / 
CODE_01A2C0:          LDA.B #$08                          ;; 01A2C0 : A9 08       ; \ Sprite status = Normal 
CODE_01A2C2:          STA.W $14C8,X                       ;; 01A2C2 : 9D C8 14    ; / 
CODE_01A2C5:          LDA.B #$1F                          ;; 01A2C5 : A9 1F       ;
CODE_01A2C7:          STA.W $1DFC                         ;; 01A2C7 : 8D FC 1D    ; / Play sound effect 
CODE_01A2CA:          LDA RAM_SpriteYLo,X                 ;; 01A2CA : B5 D8       ;
CODE_01A2CC:          SBC.B #$10                          ;; 01A2CC : E9 10       ;
CODE_01A2CE:          STA RAM_SpriteYLo,X                 ;; 01A2CE : 95 D8       ;
CODE_01A2D0:          LDA.W RAM_SpriteYHi,X               ;; 01A2D0 : BD D4 14    ;
CODE_01A2D3:          SBC.B #$00                          ;; 01A2D3 : E9 00       ;
CODE_01A2D5:          STA.W RAM_SpriteYHi,X               ;; 01A2D5 : 9D D4 14    ;
CODE_01A2D8:          LDA.W RAM_SpritePal,X               ;; 01A2D8 : BD F6 15    ;
CODE_01A2DB:          PHA                                 ;; 01A2DB : 48          ; \ Reset sprite tables 
CODE_01A2DC:          JSL.L InitSpriteTables              ;; 01A2DC : 22 D2 F7 07 ;  | 
CODE_01A2E0:          PLA                                 ;; 01A2E0 : 68          ; / 
CODE_01A2E1:          AND.B #$FE                          ;; 01A2E1 : 29 FE       ;
CODE_01A2E3:          STA.W RAM_SpritePal,X               ;; 01A2E3 : 9D F6 15    ;
CODE_01A2E6:          LDA.B #$0C                          ;; 01A2E6 : A9 0C       ;
CODE_01A2E8:          STA.W $1602,X                       ;; 01A2E8 : 9D 02 16    ;
CODE_01A2EB:          DEC.W $160E,X                       ;; 01A2EB : DE 0E 16    ;
CODE_01A2EE:          LDA.B #$40                          ;; 01A2EE : A9 40       ;
CODE_01A2F0:          STA.W $18E8                         ;; 01A2F0 : 8D E8 18    ;
Return01A2F3:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01A2F4:          INC.W $1570,X                       ;; 01A2F4 : FE 70 15    ;
CODE_01A2F7:          LDA.W $1570,X                       ;; 01A2F7 : BD 70 15    ;
CODE_01A2FA:          CMP.B #$05                          ;; 01A2FA : C9 05       ;
CODE_01A2FC:          BNE CODE_01A300                     ;; 01A2FC : D0 02       ;
CODE_01A2FE:          BRA CODE_01A2B5                     ;; 01A2FE : 80 B5       ;
                                                          ;;                      ;
CODE_01A300:          JSL.L CODE_05B34A                   ;; 01A300 : 22 4A B3 05 ;
CODE_01A304:          LDA.B #$01                          ;; 01A304 : A9 01       ;
CODE_01A306:          JSL.L GivePoints                    ;; 01A306 : 22 E5 AC 02 ;
CODE_01A30A:          LDA.W $163E,X                       ;; 01A30A : BD 3E 16    ;
CODE_01A30D:          LSR                                 ;; 01A30D : 4A          ;
CODE_01A30E:          LSR                                 ;; 01A30E : 4A          ;
CODE_01A30F:          LSR                                 ;; 01A30F : 4A          ;
CODE_01A310:          TAY                                 ;; 01A310 : A8          ;
CODE_01A311:          LDA.W DATA_01A35A,Y                 ;; 01A311 : B9 5A A3    ;
CODE_01A314:          STA.W $1602,X                       ;; 01A314 : 9D 02 16    ;
CODE_01A317:          STZ $01                             ;; 01A317 : 64 01       ;
CODE_01A319:          LDA.W $163E,X                       ;; 01A319 : BD 3E 16    ;
CODE_01A31C:          CMP.B #$20                          ;; 01A31C : C9 20       ;
CODE_01A31E:          BCC CODE_01A34F                     ;; 01A31E : 90 2F       ;
CODE_01A320:          SBC.B #$10                          ;; 01A320 : E9 10       ;
CODE_01A322:          LSR                                 ;; 01A322 : 4A          ;
CODE_01A323:          LSR                                 ;; 01A323 : 4A          ;
CODE_01A324:          LDY.W RAM_SpriteDir,X               ;; 01A324 : BC 7C 15    ;
CODE_01A327:          BEQ CODE_01A32E                     ;; 01A327 : F0 05       ;
CODE_01A329:          EOR.B #$FF                          ;; 01A329 : 49 FF       ;
CODE_01A32B:          INC A                               ;; 01A32B : 1A          ;
CODE_01A32C:          DEC $01                             ;; 01A32C : C6 01       ;
CODE_01A32E:          LDY.W $160E,X                       ;; 01A32E : BC 0E 16    ;
CODE_01A331:          CLC                                 ;; 01A331 : 18          ;
CODE_01A332:          ADC RAM_SpriteXLo,X                 ;; 01A332 : 75 E4       ;
CODE_01A334:          STA.W RAM_SpriteXLo,Y               ;; 01A334 : 99 E4 00    ;
CODE_01A337:          LDA.W RAM_SpriteXHi,X               ;; 01A337 : BD E0 14    ;
CODE_01A33A:          ADC $01                             ;; 01A33A : 65 01       ;
CODE_01A33C:          STA.W RAM_SpriteXHi,Y               ;; 01A33C : 99 E0 14    ;
CODE_01A33F:          LDA RAM_SpriteYLo,X                 ;; 01A33F : B5 D8       ;
CODE_01A341:          SEC                                 ;; 01A341 : 38          ;
CODE_01A342:          SBC.B #$02                          ;; 01A342 : E9 02       ;
CODE_01A344:          STA.W RAM_SpriteYLo,Y               ;; 01A344 : 99 D8 00    ;
CODE_01A347:          LDA.W RAM_SpriteYHi,X               ;; 01A347 : BD D4 14    ;
CODE_01A34A:          SBC.B #$00                          ;; 01A34A : E9 00       ;
CODE_01A34C:          STA.W RAM_SpriteYHi,Y               ;; 01A34C : 99 D4 14    ;
CODE_01A34F:          JSR.W CODE_01A169                   ;; 01A34F : 20 69 A1    ;
CODE_01A352:          JSR.W SubSprGfx2Entry1              ;; 01A352 : 20 0D 9F    ;
CODE_01A355:          JSL.L CODE_02EA25                   ;; 01A355 : 22 25 EA 02 ;
Return01A359:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
DATA_01A35A:          .db $00,$03,$02,$02,$01,$01,$01     ;; 01A35A               ;
                                                          ;;                      ;
DATA_01A361:          .db $10,$20                         ;; 01A361               ;
                                                          ;;                      ;
DATA_01A363:          .db $01,$02                         ;; 01A363               ;
                                                          ;;                      ;
GetDrawInfoBnk1:      STZ.W RAM_OffscreenVert,X           ;; ?QPWZ? : 9E 6C 18    ;
CODE_01A368:          STZ.W RAM_OffscreenHorz,X           ;; 01A368 : 9E A0 15    ;
CODE_01A36B:          LDA RAM_SpriteXLo,X                 ;; 01A36B : B5 E4       ;
CODE_01A36D:          CMP RAM_ScreenBndryXLo              ;; 01A36D : C5 1A       ;
CODE_01A36F:          LDA.W RAM_SpriteXHi,X               ;; 01A36F : BD E0 14    ;
CODE_01A372:          SBC RAM_ScreenBndryXHi              ;; 01A372 : E5 1B       ;
CODE_01A374:          BEQ CODE_01A379                     ;; 01A374 : F0 03       ;
CODE_01A376:          INC.W RAM_OffscreenHorz,X           ;; 01A376 : FE A0 15    ;
CODE_01A379:          LDA.W RAM_SpriteXHi,X               ;; 01A379 : BD E0 14    ;
CODE_01A37C:          XBA                                 ;; 01A37C : EB          ;
CODE_01A37D:          LDA RAM_SpriteXLo,X                 ;; 01A37D : B5 E4       ;
CODE_01A37F:          REP #$20                            ;; 01A37F : C2 20       ; Accum (16 bit) 
CODE_01A381:          SEC                                 ;; 01A381 : 38          ;
CODE_01A382:          SBC RAM_ScreenBndryXLo              ;; 01A382 : E5 1A       ;
CODE_01A384:          CLC                                 ;; 01A384 : 18          ;
CODE_01A385:          ADC.W #$0040                        ;; 01A385 : 69 40 00    ;
CODE_01A388:          CMP.W #$0180                        ;; 01A388 : C9 80 01    ;
CODE_01A38B:          SEP #$20                            ;; 01A38B : E2 20       ; Accum (8 bit) 
CODE_01A38D:          ROL                                 ;; 01A38D : 2A          ;
CODE_01A38E:          AND.B #$01                          ;; 01A38E : 29 01       ;
CODE_01A390:          STA.W $15C4,X                       ;; 01A390 : 9D C4 15    ;
CODE_01A393:          BNE CODE_01A3CB                     ;; 01A393 : D0 36       ;
CODE_01A395:          LDY.B #$00                          ;; 01A395 : A0 00       ;
CODE_01A397:          LDA.W $14C8,X                       ;; 01A397 : BD C8 14    ; \ Branch if sprite status == Stunned 
CODE_01A39A:          CMP.B #$09                          ;; 01A39A : C9 09       ;  | 
CODE_01A39C:          BEQ CODE_01A3A6                     ;; 01A39C : F0 08       ; / 
CODE_01A39E:          LDA.W RAM_Tweaker190F,X             ;; 01A39E : BD 0F 19    ; \ Branch if "Death frame 2 tiles high" 
CODE_01A3A1:          AND.B #$20                          ;; 01A3A1 : 29 20       ;  | is NOT set 
CODE_01A3A3:          BEQ CODE_01A3A6                     ;; 01A3A3 : F0 01       ; / 
CODE_01A3A5:          INY                                 ;; 01A3A5 : C8          ;
CODE_01A3A6:          LDA RAM_SpriteYLo,X                 ;; 01A3A6 : B5 D8       ;
CODE_01A3A8:          CLC                                 ;; 01A3A8 : 18          ;
CODE_01A3A9:          ADC.W DATA_01A361,Y                 ;; 01A3A9 : 79 61 A3    ;
CODE_01A3AC:          PHP                                 ;; 01A3AC : 08          ;
CODE_01A3AD:          CMP RAM_ScreenBndryYLo              ;; 01A3AD : C5 1C       ;
CODE_01A3AF:          ROL $00                             ;; 01A3AF : 26 00       ;
CODE_01A3B1:          PLP                                 ;; 01A3B1 : 28          ;
CODE_01A3B2:          LDA.W RAM_SpriteYHi,X               ;; 01A3B2 : BD D4 14    ;
CODE_01A3B5:          ADC.B #$00                          ;; 01A3B5 : 69 00       ;
CODE_01A3B7:          LSR $00                             ;; 01A3B7 : 46 00       ;
CODE_01A3B9:          SBC RAM_ScreenBndryYHi              ;; 01A3B9 : E5 1D       ;
CODE_01A3BB:          BEQ CODE_01A3C6                     ;; 01A3BB : F0 09       ;
CODE_01A3BD:          LDA.W RAM_OffscreenVert,X           ;; 01A3BD : BD 6C 18    ;
CODE_01A3C0:          ORA.W DATA_01A363,Y                 ;; 01A3C0 : 19 63 A3    ;
CODE_01A3C3:          STA.W RAM_OffscreenVert,X           ;; 01A3C3 : 9D 6C 18    ;
CODE_01A3C6:          DEY                                 ;; 01A3C6 : 88          ;
CODE_01A3C7:          BPL CODE_01A3A6                     ;; 01A3C7 : 10 DD       ;
CODE_01A3C9:          BRA CODE_01A3CD                     ;; 01A3C9 : 80 02       ;
                                                          ;;                      ;
CODE_01A3CB:          PLA                                 ;; 01A3CB : 68          ;
CODE_01A3CC:          PLA                                 ;; 01A3CC : 68          ;
CODE_01A3CD:          LDY.W RAM_SprOAMIndex,X             ;; 01A3CD : BC EA 15    ; Y = Index into sprite OAM 
CODE_01A3D0:          LDA RAM_SpriteXLo,X                 ;; 01A3D0 : B5 E4       ;
CODE_01A3D2:          SEC                                 ;; 01A3D2 : 38          ;
CODE_01A3D3:          SBC RAM_ScreenBndryXLo              ;; 01A3D3 : E5 1A       ;
CODE_01A3D5:          STA $00                             ;; 01A3D5 : 85 00       ;
CODE_01A3D7:          LDA RAM_SpriteYLo,X                 ;; 01A3D7 : B5 D8       ;
CODE_01A3D9:          SEC                                 ;; 01A3D9 : 38          ;
CODE_01A3DA:          SBC RAM_ScreenBndryYLo              ;; 01A3DA : E5 1C       ;
CODE_01A3DC:          STA $01                             ;; 01A3DC : 85 01       ;
Return01A3DE:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01A3DF:          LDA.W RAM_OffscreenVert,X           ;; 01A3DF : BD 6C 18    ;
CODE_01A3E2:          BEQ Return01A40A                    ;; 01A3E2 : F0 26       ;
CODE_01A3E4:          PHX                                 ;; 01A3E4 : DA          ;
CODE_01A3E5:          LSR                                 ;; 01A3E5 : 4A          ;
CODE_01A3E6:          BCC CODE_01A3F8                     ;; 01A3E6 : 90 10       ;
CODE_01A3E8:          PHA                                 ;; 01A3E8 : 48          ;
CODE_01A3E9:          LDA.B #$01                          ;; 01A3E9 : A9 01       ;
CODE_01A3EB:          STA.W OAM_TileSize,Y                ;; 01A3EB : 99 60 04    ;
CODE_01A3EE:          TYA                                 ;; 01A3EE : 98          ;
CODE_01A3EF:          ASL                                 ;; 01A3EF : 0A          ;
CODE_01A3F0:          ASL                                 ;; 01A3F0 : 0A          ;
CODE_01A3F1:          TAX                                 ;; 01A3F1 : AA          ;
CODE_01A3F2:          LDA.B #$80                          ;; 01A3F2 : A9 80       ;
CODE_01A3F4:          STA.W OAM_DispX,X                   ;; 01A3F4 : 9D 00 03    ;
CODE_01A3F7:          PLA                                 ;; 01A3F7 : 68          ;
CODE_01A3F8:          LSR                                 ;; 01A3F8 : 4A          ;
CODE_01A3F9:          BCC CODE_01A409                     ;; 01A3F9 : 90 0E       ;
CODE_01A3FB:          LDA.B #$01                          ;; 01A3FB : A9 01       ;
CODE_01A3FD:          STA.W $0461,Y                       ;; 01A3FD : 99 61 04    ;
CODE_01A400:          TYA                                 ;; 01A400 : 98          ;
CODE_01A401:          ASL                                 ;; 01A401 : 0A          ;
CODE_01A402:          ASL                                 ;; 01A402 : 0A          ;
CODE_01A403:          TAX                                 ;; 01A403 : AA          ;
CODE_01A404:          LDA.B #$80                          ;; 01A404 : A9 80       ;
CODE_01A406:          STA.W OAM_Tile2DispX,X              ;; 01A406 : 9D 04 03    ;
CODE_01A409:          PLX                                 ;; 01A409 : FA          ;
Return01A40A:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
DATA_01A40B:          .db $02,$0A                         ;; 01A40B               ;
                                                          ;;                      ;
SubSprSprInteract:    TXA                                 ;; ?QPWZ? : 8A          ;
CODE_01A40E:          BEQ Return01A40A                    ;; 01A40E : F0 FA       ;
CODE_01A410:          TAY                                 ;; 01A410 : A8          ;
CODE_01A411:          EOR RAM_FrameCounter                ;; 01A411 : 45 13       ; \ Return every other frame 
CODE_01A413:          LSR                                 ;; 01A413 : 4A          ;  | 
CODE_01A414:          BCC Return01A40A                    ;; 01A414 : 90 F4       ; / 
CODE_01A416:          DEX                                 ;; 01A416 : CA          ;
CODE_01A417:          LDA.W $14C8,X                       ;; 01A417 : BD C8 14    ; \ Jump to $01A4B0 if 
CODE_01A41A:          CMP.B #$08                          ;; 01A41A : C9 08       ;  | sprite status < 8 
CODE_01A41C:          BCS CODE_01A421                     ;; 01A41C : B0 03       ;  | 
CODE_01A41E:          JMP.W CODE_01A4B0                   ;; 01A41E : 4C B0 A4    ; / 
                                                          ;;                      ;
CODE_01A421:          LDA.W RAM_Tweaker1686,X             ;; 01A421 : BD 86 16    ;
CODE_01A424:          ORA.W RAM_Tweaker1686,Y             ;; 01A424 : 19 86 16    ;
CODE_01A427:          AND.B #$08                          ;; 01A427 : 29 08       ;
CODE_01A429:          ORA.W $1564,X                       ;; 01A429 : 1D 64 15    ;
CODE_01A42C:          ORA.W $1564,Y                       ;; 01A42C : 19 64 15    ;
CODE_01A42F:          ORA.W $15D0,X                       ;; 01A42F : 1D D0 15    ;
CODE_01A432:          ORA.W RAM_SprBehindScrn,X           ;; 01A432 : 1D 32 16    ;
CODE_01A435:          EOR.W RAM_SprBehindScrn,Y           ;; 01A435 : 59 32 16    ;
CODE_01A438:          BNE CODE_01A4B0                     ;; 01A438 : D0 76       ;
CODE_01A43A:          STX.W $1695                         ;; 01A43A : 8E 95 16    ;
CODE_01A43D:          LDA RAM_SpriteXLo,X                 ;; 01A43D : B5 E4       ;
CODE_01A43F:          STA $00                             ;; 01A43F : 85 00       ;
CODE_01A441:          LDA.W RAM_SpriteXHi,X               ;; 01A441 : BD E0 14    ;
CODE_01A444:          STA $01                             ;; 01A444 : 85 01       ;
CODE_01A446:          LDA.W RAM_SpriteXLo,Y               ;; 01A446 : B9 E4 00    ;
CODE_01A449:          STA $02                             ;; 01A449 : 85 02       ;
CODE_01A44B:          LDA.W RAM_SpriteXHi,Y               ;; 01A44B : B9 E0 14    ;
CODE_01A44E:          STA $03                             ;; 01A44E : 85 03       ;
CODE_01A450:          REP #$20                            ;; 01A450 : C2 20       ; Accum (16 bit) 
CODE_01A452:          LDA $00                             ;; 01A452 : A5 00       ;
CODE_01A454:          SEC                                 ;; 01A454 : 38          ;
CODE_01A455:          SBC $02                             ;; 01A455 : E5 02       ;
CODE_01A457:          CLC                                 ;; 01A457 : 18          ;
CODE_01A458:          ADC.W #$0010                        ;; 01A458 : 69 10 00    ;
CODE_01A45B:          CMP.W #$0020                        ;; 01A45B : C9 20 00    ;
CODE_01A45E:          SEP #$20                            ;; 01A45E : E2 20       ; Accum (8 bit) 
CODE_01A460:          BCS CODE_01A4B0                     ;; 01A460 : B0 4E       ;
CODE_01A462:          LDY.B #$00                          ;; 01A462 : A0 00       ;
CODE_01A464:          LDA.W RAM_Tweaker1662,X             ;; 01A464 : BD 62 16    ;
CODE_01A467:          AND.B #$0F                          ;; 01A467 : 29 0F       ;
CODE_01A469:          BEQ CODE_01A46C                     ;; 01A469 : F0 01       ;
CODE_01A46B:          INY                                 ;; 01A46B : C8          ;
CODE_01A46C:          LDA RAM_SpriteYLo,X                 ;; 01A46C : B5 D8       ;
CODE_01A46E:          CLC                                 ;; 01A46E : 18          ;
CODE_01A46F:          ADC.W DATA_01A40B,Y                 ;; 01A46F : 79 0B A4    ;
CODE_01A472:          STA $00                             ;; 01A472 : 85 00       ;
CODE_01A474:          LDA.W RAM_SpriteYHi,X               ;; 01A474 : BD D4 14    ;
CODE_01A477:          ADC.B #$00                          ;; 01A477 : 69 00       ;
CODE_01A479:          STA $01                             ;; 01A479 : 85 01       ;
CODE_01A47B:          LDY.W $15E9                         ;; 01A47B : AC E9 15    ; Y = Sprite index 
CODE_01A47E:          LDX.B #$00                          ;; 01A47E : A2 00       ;
CODE_01A480:          LDA.W RAM_Tweaker1662,Y             ;; 01A480 : B9 62 16    ;
CODE_01A483:          AND.B #$0F                          ;; 01A483 : 29 0F       ;
CODE_01A485:          BEQ CODE_01A488                     ;; 01A485 : F0 01       ;
CODE_01A487:          INX                                 ;; 01A487 : E8          ;
CODE_01A488:          LDA.W RAM_SpriteYLo,Y               ;; 01A488 : B9 D8 00    ;
CODE_01A48B:          CLC                                 ;; 01A48B : 18          ;
CODE_01A48C:          ADC.W DATA_01A40B,X                 ;; 01A48C : 7D 0B A4    ;
CODE_01A48F:          STA $02                             ;; 01A48F : 85 02       ;
CODE_01A491:          LDA.W RAM_SpriteYHi,Y               ;; 01A491 : B9 D4 14    ;
CODE_01A494:          ADC.B #$00                          ;; 01A494 : 69 00       ;
CODE_01A496:          STA $03                             ;; 01A496 : 85 03       ;
CODE_01A498:          LDX.W $1695                         ;; 01A498 : AE 95 16    ;
CODE_01A49B:          REP #$20                            ;; 01A49B : C2 20       ; Accum (16 bit) 
CODE_01A49D:          LDA $00                             ;; 01A49D : A5 00       ;
CODE_01A49F:          SEC                                 ;; 01A49F : 38          ;
CODE_01A4A0:          SBC $02                             ;; 01A4A0 : E5 02       ;
CODE_01A4A2:          CLC                                 ;; 01A4A2 : 18          ;
CODE_01A4A3:          ADC.W #$000C                        ;; 01A4A3 : 69 0C 00    ;
CODE_01A4A6:          CMP.W #$0018                        ;; 01A4A6 : C9 18 00    ;
CODE_01A4A9:          SEP #$20                            ;; 01A4A9 : E2 20       ; Accum (8 bit) 
CODE_01A4AB:          BCS CODE_01A4B0                     ;; 01A4AB : B0 03       ;
CODE_01A4AD:          JSR.W CODE_01A4BA                   ;; 01A4AD : 20 BA A4    ;
CODE_01A4B0:          DEX                                 ;; 01A4B0 : CA          ;
CODE_01A4B1:          BMI CODE_01A4B6                     ;; 01A4B1 : 30 03       ;
CODE_01A4B3:          JMP.W CODE_01A417                   ;; 01A4B3 : 4C 17 A4    ;
                                                          ;;                      ;
CODE_01A4B6:          LDX.W $15E9                         ;; 01A4B6 : AE E9 15    ; X = Sprite index 
Return01A4B9:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01A4BA:          LDA.W $14C8,Y                       ;; 01A4BA : B9 C8 14    ; \ Branch if sprite 2 status == Normal 
CODE_01A4BD:          CMP.B #$08                          ;; 01A4BD : C9 08       ;  | 
CODE_01A4BF:          BEQ CODE_01A4CE                     ;; 01A4BF : F0 0D       ; / 
CODE_01A4C1:          CMP.B #$09                          ;; 01A4C1 : C9 09       ; \ Branch if sprite 2 status == Carryable 
CODE_01A4C3:          BEQ CODE_01A4E2                     ;; 01A4C3 : F0 1D       ; / 
CODE_01A4C5:          CMP.B #$0A                          ;; 01A4C5 : C9 0A       ; \ Branch if sprite 2 status == Kicked 
CODE_01A4C7:          BEQ CODE_01A506                     ;; 01A4C7 : F0 3D       ; / 
CODE_01A4C9:          CMP.B #$0B                          ;; 01A4C9 : C9 0B       ; \ Branch if sprite 2 status == Carried 
CODE_01A4CB:          BEQ CODE_01A51A                     ;; 01A4CB : F0 4D       ; / 
Return01A4CD:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01A4CE:          LDA.W $14C8,X                       ;; 01A4CE : BD C8 14    ; \ Branch if sprite status == Normal 
CODE_01A4D1:          CMP.B #$08                          ;; 01A4D1 : C9 08       ;  | 
CODE_01A4D3:          BEQ CODE_01A53D                     ;; 01A4D3 : F0 68       ; / 
CODE_01A4D5:          CMP.B #$09                          ;; 01A4D5 : C9 09       ; \ Branch if sprite status == Carryable 
CODE_01A4D7:          BEQ CODE_01A540                     ;; 01A4D7 : F0 67       ; / 
CODE_01A4D9:          CMP.B #$0A                          ;; 01A4D9 : C9 0A       ; \ Branch if sprite status == Kicked 
CODE_01A4DB:          BEQ CODE_01A537                     ;; 01A4DB : F0 5A       ; / 
CODE_01A4DD:          CMP.B #$0B                          ;; 01A4DD : C9 0B       ; \ Branch if sprite status == Carried 
CODE_01A4DF:          BEQ CODE_01A534                     ;; 01A4DF : F0 53       ; / 
Return01A4E1:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01A4E2:          LDA.W RAM_SprObjStatus,Y            ;; 01A4E2 : B9 88 15    ; \ Branch if on ground 
CODE_01A4E5:          AND.B #$04                          ;; 01A4E5 : 29 04       ;  | 
CODE_01A4E7:          BNE CODE_01A4F2                     ;; 01A4E7 : D0 09       ; / 
CODE_01A4E9:          LDA.W RAM_SpriteNum,Y               ;; 01A4E9 : B9 9E 00    ; \ Branch if Goomba 
CODE_01A4EC:          CMP.B #$0F                          ;; 01A4EC : C9 0F       ;  | 
CODE_01A4EE:          BEQ CODE_01A534                     ;; 01A4EE : F0 44       ; / 
CODE_01A4F0:          BRA CODE_01A506                     ;; 01A4F0 : 80 14       ;
                                                          ;;                      ;
CODE_01A4F2:          LDA.W $14C8,X                       ;; 01A4F2 : BD C8 14    ; \ Branch if sprite status == Normal 
CODE_01A4F5:          CMP.B #$08                          ;; 01A4F5 : C9 08       ;  | 
CODE_01A4F7:          BEQ CODE_01A540                     ;; 01A4F7 : F0 47       ; / 
CODE_01A4F9:          CMP.B #$09                          ;; 01A4F9 : C9 09       ; \ Branch if sprite status == Carryable 
CODE_01A4FB:          BEQ CODE_01A555                     ;; 01A4FB : F0 58       ; / 
CODE_01A4FD:          CMP.B #$0A                          ;; 01A4FD : C9 0A       ; \ Branch if sprite status == Kicked 
CODE_01A4FF:          BEQ ADDR_01A53A                     ;; 01A4FF : F0 39       ; / 
CODE_01A501:          CMP.B #$0B                          ;; 01A501 : C9 0B       ; \ Branch if sprite status == Carried 
CODE_01A503:          BEQ CODE_01A534                     ;; 01A503 : F0 2F       ; / 
Return01A505:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01A506:          LDA.W $14C8,X                       ;; 01A506 : BD C8 14    ; \ Branch if sprite status == Normal 
CODE_01A509:          CMP.B #$08                          ;; 01A509 : C9 08       ;  | 
CODE_01A50B:          BEQ CODE_01A52E                     ;; 01A50B : F0 21       ; / 
CODE_01A50D:          CMP.B #$09                          ;; 01A50D : C9 09       ; \ Branch if sprite status == Carryable 
CODE_01A50F:          BEQ CODE_01A531                     ;; 01A50F : F0 20       ; / 
CODE_01A511:          CMP.B #$0A                          ;; 01A511 : C9 0A       ; \ Branch if sprite status == Kicked 
CODE_01A513:          BEQ CODE_01A534                     ;; 01A513 : F0 1F       ; / 
CODE_01A515:          CMP.B #$0B                          ;; 01A515 : C9 0B       ; \ Branch if sprite status == Carried 
CODE_01A517:          BEQ CODE_01A534                     ;; 01A517 : F0 1B       ; / 
Return01A519:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01A51A:          LDA.W $14C8,X                       ;; 01A51A : BD C8 14    ; \ Branch if sprite status == Normal 
CODE_01A51D:          CMP.B #$08                          ;; 01A51D : C9 08       ;  | 
CODE_01A51F:          BEQ CODE_01A534                     ;; 01A51F : F0 13       ; / 
CODE_01A521:          CMP.B #$09                          ;; 01A521 : C9 09       ; \ Branch if sprite status == Carryable 
CODE_01A523:          BEQ CODE_01A534                     ;; 01A523 : F0 0F       ; / 
ADDR_01A525:          CMP.B #$0A                          ;; 01A525 : C9 0A       ; \ Branch if sprite status == Kicked 
ADDR_01A527:          BEQ CODE_01A534                     ;; 01A527 : F0 0B       ; / 
ADDR_01A529:          CMP.B #$0B                          ;; 01A529 : C9 0B       ; \ Branch if sprite status == Carried 
ADDR_01A52B:          BEQ CODE_01A534                     ;; 01A52B : F0 07       ; / 
Return01A52D:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01A52E:          JMP.W CODE_01A625                   ;; 01A52E : 4C 25 A6    ;
                                                          ;;                      ;
CODE_01A531:          JMP.W CODE_01A642                   ;; 01A531 : 4C 42 A6    ;
                                                          ;;                      ;
CODE_01A534:          JMP.W CODE_01A685                   ;; 01A534 : 4C 85 A6    ;
                                                          ;;                      ;
CODE_01A537:          JMP.W CODE_01A5C4                   ;; 01A537 : 4C C4 A5    ;
                                                          ;;                      ;
ADDR_01A53A:          JMP.W CODE_01A5C4                   ;; 01A53A : 4C C4 A5    ;
                                                          ;;                      ;
CODE_01A53D:          JMP.W CODE_01A56D                   ;; 01A53D : 4C 6D A5    ;
                                                          ;;                      ;
CODE_01A540:          JSR.W CODE_01A6D9                   ;; 01A540 : 20 D9 A6    ;
CODE_01A543:          PHX                                 ;; 01A543 : DA          ;
CODE_01A544:          PHY                                 ;; 01A544 : 5A          ;
CODE_01A545:          TYA                                 ;; 01A545 : 98          ;
CODE_01A546:          TXY                                 ;; 01A546 : 9B          ;
CODE_01A547:          TAX                                 ;; 01A547 : AA          ;
CODE_01A548:          JSR.W CODE_01A6D9                   ;; 01A548 : 20 D9 A6    ;
CODE_01A54B:          PLY                                 ;; 01A54B : 7A          ;
CODE_01A54C:          PLX                                 ;; 01A54C : FA          ;
CODE_01A54D:          LDA.W $1558,X                       ;; 01A54D : BD 58 15    ;
CODE_01A550:          ORA.W $1558,Y                       ;; 01A550 : 19 58 15    ;
CODE_01A553:          BNE Return01A5C3                    ;; 01A553 : D0 6E       ;
CODE_01A555:          LDA.W $14C8,X                       ;; 01A555 : BD C8 14    ;
CODE_01A558:          CMP.B #$09                          ;; 01A558 : C9 09       ;
CODE_01A55A:          BNE CODE_01A56D                     ;; 01A55A : D0 11       ;
CODE_01A55C:          JSR.W IsOnGround                    ;; 01A55C : 20 0E 80    ;
CODE_01A55F:          BNE CODE_01A56D                     ;; 01A55F : D0 0C       ;
CODE_01A561:          LDA RAM_SpriteNum,X                 ;; 01A561 : B5 9E       ; \ Branch if not Goomba 
CODE_01A563:          CMP.B #$0F                          ;; 01A563 : C9 0F       ;  | 
CODE_01A565:          BNE CODE_01A56A                     ;; 01A565 : D0 03       ; / 
ADDR_01A567:          JMP.W CODE_01A685                   ;; 01A567 : 4C 85 A6    ;
                                                          ;;                      ;
CODE_01A56A:          JMP.W CODE_01A5C4                   ;; 01A56A : 4C C4 A5    ;
                                                          ;;                      ;
CODE_01A56D:          LDA RAM_SpriteXLo,X                 ;; 01A56D : B5 E4       ;
CODE_01A56F:          SEC                                 ;; 01A56F : 38          ;
CODE_01A570:          SBC.W RAM_SpriteXLo,Y               ;; 01A570 : F9 E4 00    ;
CODE_01A573:          LDA.W RAM_SpriteXHi,X               ;; 01A573 : BD E0 14    ;
CODE_01A576:          SBC.W RAM_SpriteXHi,Y               ;; 01A576 : F9 E0 14    ;
CODE_01A579:          ROL                                 ;; 01A579 : 2A          ;
CODE_01A57A:          AND.B #$01                          ;; 01A57A : 29 01       ;
CODE_01A57C:          STA $00                             ;; 01A57C : 85 00       ;
CODE_01A57E:          LDA.W RAM_Tweaker1686,Y             ;; 01A57E : B9 86 16    ;
CODE_01A581:          AND.B #$10                          ;; 01A581 : 29 10       ;
CODE_01A583:          BNE CODE_01A5A1                     ;; 01A583 : D0 1C       ;
CODE_01A585:          LDY.W $15E9                         ;; 01A585 : AC E9 15    ; Y = Sprite index 
CODE_01A588:          LDA.W RAM_SpriteDir,Y               ;; 01A588 : B9 7C 15    ;
CODE_01A58B:          PHA                                 ;; 01A58B : 48          ;
CODE_01A58C:          LDA $00                             ;; 01A58C : A5 00       ;
CODE_01A58E:          STA.W RAM_SpriteDir,Y               ;; 01A58E : 99 7C 15    ;
CODE_01A591:          PLA                                 ;; 01A591 : 68          ;
CODE_01A592:          CMP.W RAM_SpriteDir,Y               ;; 01A592 : D9 7C 15    ;
CODE_01A595:          BEQ CODE_01A5A1                     ;; 01A595 : F0 0A       ;
CODE_01A597:          LDA.W $15AC,Y                       ;; 01A597 : B9 AC 15    ;
CODE_01A59A:          BNE CODE_01A5A1                     ;; 01A59A : D0 05       ;
CODE_01A59C:          LDA.B #$08                          ;; 01A59C : A9 08       ; \ Set turning timer 
CODE_01A59E:          STA.W $15AC,Y                       ;; 01A59E : 99 AC 15    ; / 
CODE_01A5A1:          LDA.W RAM_Tweaker1686,X             ;; 01A5A1 : BD 86 16    ;
CODE_01A5A4:          AND.B #$10                          ;; 01A5A4 : 29 10       ;
CODE_01A5A6:          BNE Return01A5C3                    ;; 01A5A6 : D0 1B       ;
CODE_01A5A8:          LDA.W RAM_SpriteDir,X               ;; 01A5A8 : BD 7C 15    ;
CODE_01A5AB:          PHA                                 ;; 01A5AB : 48          ;
CODE_01A5AC:          LDA $00                             ;; 01A5AC : A5 00       ;
CODE_01A5AE:          EOR.B #$01                          ;; 01A5AE : 49 01       ;
CODE_01A5B0:          STA.W RAM_SpriteDir,X               ;; 01A5B0 : 9D 7C 15    ;
CODE_01A5B3:          PLA                                 ;; 01A5B3 : 68          ;
CODE_01A5B4:          CMP.W RAM_SpriteDir,X               ;; 01A5B4 : DD 7C 15    ;
CODE_01A5B7:          BEQ Return01A5C3                    ;; 01A5B7 : F0 0A       ;
CODE_01A5B9:          LDA.W $15AC,X                       ;; 01A5B9 : BD AC 15    ;
CODE_01A5BC:          BNE Return01A5C3                    ;; 01A5BC : D0 05       ;
CODE_01A5BE:          LDA.B #$08                          ;; 01A5BE : A9 08       ; \ Set turning timer 
CODE_01A5C0:          STA.W $15AC,X                       ;; 01A5C0 : 9D AC 15    ; / 
Return01A5C3:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01A5C4:          LDA.W RAM_SpriteNum,Y               ;; 01A5C4 : B9 9E 00    ;
CODE_01A5C7:          SEC                                 ;; 01A5C7 : 38          ;
CODE_01A5C8:          SBC.B #$83                          ;; 01A5C8 : E9 83       ;
CODE_01A5CA:          CMP.B #$02                          ;; 01A5CA : C9 02       ;
CODE_01A5CC:          BCS CODE_01A5DA                     ;; 01A5CC : B0 0C       ;
CODE_01A5CE:          JSR.W FlipSpriteDir                 ;; 01A5CE : 20 98 90    ;
CODE_01A5D1:          STZ RAM_SpriteSpeedY,X              ;; 01A5D1 : 74 AA       ; Sprite Y Speed = 0 
CODE_01A5D3:          PHX                                 ;; 01A5D3 : DA          ;
CODE_01A5D4:          TYX                                 ;; 01A5D4 : BB          ;
CODE_01A5D5:          JSR.W CODE_01B4E2                   ;; 01A5D5 : 20 E2 B4    ;
CODE_01A5D8:          PLX                                 ;; 01A5D8 : FA          ;
Return01A5D9:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01A5DA:          LDX.W $15E9                         ;; 01A5DA : AE E9 15    ; X = Sprite index 
CODE_01A5DD:          LDY.W $1695                         ;; 01A5DD : AC 95 16    ;
CODE_01A5E0:          JSR.W CODE_01A77C                   ;; 01A5E0 : 20 7C A7    ;
CODE_01A5E3:          LDA.B #$02                          ;; 01A5E3 : A9 02       ; \ Sprite status = Killed 
CODE_01A5E5:          STA.W $14C8,Y                       ;; 01A5E5 : 99 C8 14    ; / 
CODE_01A5E8:          PHX                                 ;; 01A5E8 : DA          ;
CODE_01A5E9:          TYX                                 ;; 01A5E9 : BB          ;
CODE_01A5EA:          JSL.L CODE_01AB72                   ;; 01A5EA : 22 72 AB 01 ;
CODE_01A5EE:          PLX                                 ;; 01A5EE : FA          ;
CODE_01A5EF:          LDA RAM_SpriteSpeedX,X              ;; 01A5EF : B5 B6       ;
CODE_01A5F1:          ASL                                 ;; 01A5F1 : 0A          ;
CODE_01A5F2:          LDA.B #$10                          ;; 01A5F2 : A9 10       ;
CODE_01A5F4:          BCC CODE_01A5F8                     ;; 01A5F4 : 90 02       ;
CODE_01A5F6:          LDA.B #$F0                          ;; 01A5F6 : A9 F0       ;
CODE_01A5F8:          STA.W RAM_SpriteSpeedX,Y            ;; 01A5F8 : 99 B6 00    ;
CODE_01A5FB:          LDA.B #$D0                          ;; 01A5FB : A9 D0       ;
CODE_01A5FD:          STA.W RAM_SpriteSpeedY,Y            ;; 01A5FD : 99 AA 00    ;
CODE_01A600:          PHY                                 ;; 01A600 : 5A          ;
CODE_01A601:          INC.W $1626,X                       ;; 01A601 : FE 26 16    ;
CODE_01A604:          LDY.W $1626,X                       ;; 01A604 : BC 26 16    ;
CODE_01A607:          CPY.B #$08                          ;; 01A607 : C0 08       ;
CODE_01A609:          BCS CODE_01A611                     ;; 01A609 : B0 06       ;
CODE_01A60B:          LDA.W Return01A61D,Y                ;; 01A60B : B9 1D A6    ;
CODE_01A60E:          STA.W $1DF9                         ;; 01A60E : 8D F9 1D    ; / Play sound effect 
CODE_01A611:          TYA                                 ;; 01A611 : 98          ;
CODE_01A612:          CMP.B #$08                          ;; 01A612 : C9 08       ;
CODE_01A614:          BCC CODE_01A618                     ;; 01A614 : 90 02       ;
CODE_01A616:          LDA.B #$08                          ;; 01A616 : A9 08       ;
CODE_01A618:          PLY                                 ;; 01A618 : 7A          ;
CODE_01A619:          JSL.L CODE_02ACE1                   ;; 01A619 : 22 E1 AC 02 ;
Return01A61D:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
DATA_01A61E:          .db $13,$14,$15,$16,$17,$18,$19     ;; 01A61E               ;
                                                          ;;                      ;
CODE_01A625:          LDA RAM_SpriteNum,X                 ;; 01A625 : B5 9E       ;
CODE_01A627:          SEC                                 ;; 01A627 : 38          ;
CODE_01A628:          SBC.B #$83                          ;; 01A628 : E9 83       ;
CODE_01A62A:          CMP.B #$02                          ;; 01A62A : C9 02       ;
CODE_01A62C:          BCS CODE_01A63D                     ;; 01A62C : B0 0F       ;
CODE_01A62E:          PHX                                 ;; 01A62E : DA          ;
CODE_01A62F:          TYX                                 ;; 01A62F : BB          ;
CODE_01A630:          JSR.W FlipSpriteDir                 ;; 01A630 : 20 98 90    ;
CODE_01A633:          PLX                                 ;; 01A633 : FA          ;
CODE_01A634:          LDA.B #$00                          ;; 01A634 : A9 00       ;
CODE_01A636:          STA.W RAM_SpriteSpeedY,Y            ;; 01A636 : 99 AA 00    ;
CODE_01A639:          JSR.W CODE_01B4E2                   ;; 01A639 : 20 E2 B4    ;
Return01A63C:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01A63D:          JSR.W CODE_01A77C                   ;; 01A63D : 20 7C A7    ;
CODE_01A640:          BRA CODE_01A64A                     ;; 01A640 : 80 08       ;
                                                          ;;                      ;
CODE_01A642:          JSR.W IsOnGround                    ;; 01A642 : 20 0E 80    ;
CODE_01A645:          BNE CODE_01A64A                     ;; 01A645 : D0 03       ;
ADDR_01A647:          JMP.W CODE_01A685                   ;; 01A647 : 4C 85 A6    ;
                                                          ;;                      ;
CODE_01A64A:          PHX                                 ;; 01A64A : DA          ;
CODE_01A64B:          LDA.W $1626,Y                       ;; 01A64B : B9 26 16    ;
CODE_01A64E:          INC A                               ;; 01A64E : 1A          ;
CODE_01A64F:          STA.W $1626,Y                       ;; 01A64F : 99 26 16    ;
CODE_01A652:          LDX.W $1626,Y                       ;; 01A652 : BE 26 16    ;
CODE_01A655:          CPX.B #$08                          ;; 01A655 : E0 08       ;
CODE_01A657:          BCS CODE_01A65F                     ;; 01A657 : B0 06       ;
CODE_01A659:          LDA.W Return01A61D,X                ;; 01A659 : BD 1D A6    ;
CODE_01A65C:          STA.W $1DF9                         ;; 01A65C : 8D F9 1D    ; / Play sound effect 
CODE_01A65F:          TXA                                 ;; 01A65F : 8A          ;
CODE_01A660:          CMP.B #$08                          ;; 01A660 : C9 08       ;
CODE_01A662:          BCC CODE_01A666                     ;; 01A662 : 90 02       ;
CODE_01A664:          LDA.B #$08                          ;; 01A664 : A9 08       ;
CODE_01A666:          PLX                                 ;; 01A666 : FA          ;
CODE_01A667:          JSL.L GivePoints                    ;; 01A667 : 22 E5 AC 02 ;
CODE_01A66B:          LDA.B #$02                          ;; 01A66B : A9 02       ; \ Sprite status = Killed 
CODE_01A66D:          STA.W $14C8,X                       ;; 01A66D : 9D C8 14    ; / 
CODE_01A670:          JSL.L CODE_01AB72                   ;; 01A670 : 22 72 AB 01 ;
CODE_01A674:          LDA.W RAM_SpriteSpeedX,Y            ;; 01A674 : B9 B6 00    ;
CODE_01A677:          ASL                                 ;; 01A677 : 0A          ;
CODE_01A678:          LDA.B #$10                          ;; 01A678 : A9 10       ;
CODE_01A67A:          BCC CODE_01A67E                     ;; 01A67A : 90 02       ;
CODE_01A67C:          LDA.B #$F0                          ;; 01A67C : A9 F0       ;
CODE_01A67E:          STA RAM_SpriteSpeedX,X              ;; 01A67E : 95 B6       ;
CODE_01A680:          LDA.B #$D0                          ;; 01A680 : A9 D0       ;
CODE_01A682:          STA RAM_SpriteSpeedY,X              ;; 01A682 : 95 AA       ;
Return01A684:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01A685:          LDA RAM_SpriteNum,X                 ;; 01A685 : B5 9E       ; \ Branch if Flying Question Block 
CODE_01A687:          CMP.B #$83                          ;; 01A687 : C9 83       ;  | 
CODE_01A689:          BEQ ADDR_01A69A                     ;; 01A689 : F0 0F       ;  | 
CODE_01A68B:          CMP.B #$84                          ;; 01A68B : C9 84       ;  | 
CODE_01A68D:          BEQ ADDR_01A69A                     ;; 01A68D : F0 0B       ; / 
CODE_01A68F:          LDA.B #$02                          ;; 01A68F : A9 02       ; \ Sprite status = Killed 
CODE_01A691:          STA.W $14C8,X                       ;; 01A691 : 9D C8 14    ; / 
CODE_01A694:          LDA.B #$D0                          ;; 01A694 : A9 D0       ;
CODE_01A696:          STA RAM_SpriteSpeedY,X              ;; 01A696 : 95 AA       ;
CODE_01A698:          BRA CODE_01A69D                     ;; 01A698 : 80 03       ;
                                                          ;;                      ;
ADDR_01A69A:          JSR.W CODE_01B4E2                   ;; 01A69A : 20 E2 B4    ;
CODE_01A69D:          LDA.W RAM_SpriteNum,Y               ;; 01A69D : B9 9E 00    ; \ Branch if Flying Question Block or Key 
CODE_01A6A0:          CMP.B #$80                          ;; 01A6A0 : C9 80       ;  | 
CODE_01A6A2:          BEQ CODE_01A6BB                     ;; 01A6A2 : F0 17       ;  | 
CODE_01A6A4:          CMP.B #$83                          ;; 01A6A4 : C9 83       ;  | 
CODE_01A6A6:          BEQ ADDR_01A6B8                     ;; 01A6A6 : F0 10       ;  | 
CODE_01A6A8:          CMP.B #$84                          ;; 01A6A8 : C9 84       ;  | 
CODE_01A6AA:          BEQ ADDR_01A6B8                     ;; 01A6AA : F0 0C       ; / 
CODE_01A6AC:          LDA.B #$02                          ;; 01A6AC : A9 02       ; \ Sprite status = Killed 
CODE_01A6AE:          STA.W $14C8,Y                       ;; 01A6AE : 99 C8 14    ; / 
CODE_01A6B1:          LDA.B #$D0                          ;; 01A6B1 : A9 D0       ;
CODE_01A6B3:          STA.W RAM_SpriteSpeedY,Y            ;; 01A6B3 : 99 AA 00    ;
CODE_01A6B6:          BRA CODE_01A6BB                     ;; 01A6B6 : 80 03       ;
                                                          ;;                      ;
ADDR_01A6B8:          JSR.W CODE_01A5D3                   ;; 01A6B8 : 20 D3 A5    ;
CODE_01A6BB:          JSL.L CODE_01AB6F                   ;; 01A6BB : 22 6F AB 01 ;
CODE_01A6BF:          LDA.B #$04                          ;; 01A6BF : A9 04       ;
CODE_01A6C1:          JSL.L GivePoints                    ;; 01A6C1 : 22 E5 AC 02 ;
CODE_01A6C5:          LDA RAM_SpriteSpeedX,X              ;; 01A6C5 : B5 B6       ;
CODE_01A6C7:          ASL                                 ;; 01A6C7 : 0A          ;
CODE_01A6C8:          LDA.B #$10                          ;; 01A6C8 : A9 10       ;
CODE_01A6CA:          BCS CODE_01A6CE                     ;; 01A6CA : B0 02       ;
CODE_01A6CC:          LDA.B #$F0                          ;; 01A6CC : A9 F0       ;
CODE_01A6CE:          STA RAM_SpriteSpeedX,X              ;; 01A6CE : 95 B6       ;
CODE_01A6D0:          EOR.B #$FF                          ;; 01A6D0 : 49 FF       ;
CODE_01A6D2:          INC A                               ;; 01A6D2 : 1A          ;
CODE_01A6D3:          STA.W RAM_SpriteSpeedX,Y            ;; 01A6D3 : 99 B6 00    ;
Return01A6D6:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
DATA_01A6D7:          .db $30,$D0                         ;; 01A6D7               ;
                                                          ;;                      ;
CODE_01A6D9:          STY $00                             ;; 01A6D9 : 84 00       ;
CODE_01A6DB:          JSR.W IsOnGround                    ;; 01A6DB : 20 0E 80    ;
CODE_01A6DE:          BEQ Return01A72D                    ;; 01A6DE : F0 4D       ;
CODE_01A6E0:          LDA.W RAM_SprObjStatus,Y            ;; 01A6E0 : B9 88 15    ; \ Branch if not on ground 
CODE_01A6E3:          AND.B #$04                          ;; 01A6E3 : 29 04       ;  | 
CODE_01A6E5:          BEQ Return01A72D                    ;; 01A6E5 : F0 46       ; / 
CODE_01A6E7:          LDA.W RAM_Tweaker1656,X             ;; 01A6E7 : BD 56 16    ; \ Return if doesn't kick/hop into shells 
CODE_01A6EA:          AND.B #$40                          ;; 01A6EA : 29 40       ;  | 
CODE_01A6EC:          BEQ Return01A72D                    ;; 01A6EC : F0 3F       ; / 
CODE_01A6EE:          LDA.W $1558,Y                       ;; 01A6EE : B9 58 15    ;
CODE_01A6F1:          ORA.W $1558,X                       ;; 01A6F1 : 1D 58 15    ;
CODE_01A6F4:          BNE Return01A72D                    ;; 01A6F4 : D0 37       ;
CODE_01A6F6:          STZ $02                             ;; 01A6F6 : 64 02       ;
CODE_01A6F8:          LDA RAM_SpriteXLo,X                 ;; 01A6F8 : B5 E4       ;
CODE_01A6FA:          SEC                                 ;; 01A6FA : 38          ;
CODE_01A6FB:          SBC.W RAM_SpriteXLo,Y               ;; 01A6FB : F9 E4 00    ;
CODE_01A6FE:          BMI CODE_01A702                     ;; 01A6FE : 30 02       ;
CODE_01A700:          INC $02                             ;; 01A700 : E6 02       ;
CODE_01A702:          CLC                                 ;; 01A702 : 18          ;
CODE_01A703:          ADC.B #$08                          ;; 01A703 : 69 08       ;
CODE_01A705:          CMP.B #$10                          ;; 01A705 : C9 10       ;
CODE_01A707:          BCC Return01A72D                    ;; 01A707 : 90 24       ;
CODE_01A709:          LDA.W RAM_SpriteDir,X               ;; 01A709 : BD 7C 15    ;
CODE_01A70C:          CMP $02                             ;; 01A70C : C5 02       ;
CODE_01A70E:          BNE Return01A72D                    ;; 01A70E : D0 1D       ;
CODE_01A710:          LDA RAM_SpriteNum,X                 ;; 01A710 : B5 9E       ; \ Branch if not Blue Shelless 
CODE_01A712:          CMP.B #$02                          ;; 01A712 : C9 02       ;  | 
CODE_01A714:          BNE HopIntoShell                    ;; 01A714 : D0 18       ; / 
CODE_01A716:          LDA.B #$20                          ;; 01A716 : A9 20       ;
CODE_01A718:          STA.W $163E,X                       ;; 01A718 : 9D 3E 16    ;
CODE_01A71B:          STA.W $1558,X                       ;; 01A71B : 9D 58 15    ;
CODE_01A71E:          LDA.B #$23                          ;; 01A71E : A9 23       ;
CODE_01A720:          STA.W $1564,X                       ;; 01A720 : 9D 64 15    ;
CODE_01A723:          TYA                                 ;; 01A723 : 98          ;
CODE_01A724:          STA.W $160E,X                       ;; 01A724 : 9D 0E 16    ;
Return01A727:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
PlayKickSfx:          LDA.B #$03                          ;; ?QPWZ? : A9 03       ; \ Play sound effect 
CODE_01A72A:          STA.W $1DF9                         ;; 01A72A : 8D F9 1D    ; / 
Return01A72D:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
HopIntoShell:         LDA.W $1540,Y                       ;; ?QPWZ? : B9 40 15    ; \ Return if timer is set 
CODE_01A731:          BNE Return01A777                    ;; 01A731 : D0 44       ; / 
CODE_01A733:          LDA.W RAM_SpriteNum,Y               ;; 01A733 : B9 9E 00    ; \ Return if sprite >= #$0F 
CODE_01A736:          CMP.B #$0F                          ;; 01A736 : C9 0F       ;  | 
CODE_01A738:          BCS Return01A777                    ;; 01A738 : B0 3D       ; / 
CODE_01A73A:          LDA.W RAM_SprObjStatus,Y            ;; 01A73A : B9 88 15    ; \ Return if not on ground 
CODE_01A73D:          AND.B #$04                          ;; 01A73D : 29 04       ;  | 
CODE_01A73F:          BEQ Return01A777                    ;; 01A73F : F0 36       ; / 
CODE_01A741:          LDA.W RAM_SpritePal,Y               ;; 01A741 : B9 F6 15    ; \ Branch if $15F6,y positive... 
CODE_01A744:          BPL CODE_01A75D                     ;; 01A744 : 10 17       ; / 
CODE_01A746:          AND.B #$7F                          ;; 01A746 : 29 7F       ; \ ...otherwise make it positive 
CODE_01A748:          STA.W RAM_SpritePal,Y               ;; 01A748 : 99 F6 15    ; / 
CODE_01A74B:          LDA.B #$E0                          ;; 01A74B : A9 E0       ; \ Set upward speed 
CODE_01A74D:          STA.W RAM_SpriteSpeedY,Y            ;; 01A74D : 99 AA 00    ; / 
CODE_01A750:          LDA.B #$20                          ;; 01A750 : A9 20       ; \ $1564,y = #$20 
CODE_01A752:          STA.W $1564,Y                       ;; 01A752 : 99 64 15    ; / 
CODE_01A755:          LDA.B #$20                          ;; 01A755 : A9 20       ; \ C2,x and 1558,x = #$20 
CODE_01A757:          STA RAM_SpriteState,X               ;; 01A757 : 95 C2       ;  | (These are for the shell sprite) 
CODE_01A759:          STA.W $1558,X                       ;; 01A759 : 9D 58 15    ; / 
Return01A75C:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01A75D:          LDA.B #$E0                          ;; 01A75D : A9 E0       ; \ Set upward speed 
CODE_01A75F:          STA RAM_SpriteSpeedY,X              ;; 01A75F : 95 AA       ; / 
CODE_01A761:          LDA.W $164A,X                       ;; 01A761 : BD 4A 16    ;
CODE_01A764:          CMP.B #$01                          ;; 01A764 : C9 01       ;
CODE_01A766:          LDA.B #$18                          ;; 01A766 : A9 18       ;
CODE_01A768:          BCC CODE_01A76C                     ;; 01A768 : 90 02       ;
ADDR_01A76A:          LDA.B #$2C                          ;; 01A76A : A9 2C       ;
CODE_01A76C:          STA.W $1558,X                       ;; 01A76C : 9D 58 15    ;
CODE_01A76F:          TXA                                 ;; 01A76F : 8A          ;
CODE_01A770:          STA.W $1594,Y                       ;; 01A770 : 99 94 15    ;
CODE_01A773:          TYA                                 ;; 01A773 : 98          ;
CODE_01A774:          STA.W $1594,X                       ;; 01A774 : 9D 94 15    ;
Return01A777:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
DATA_01A778:          .db $10,$F0                         ;; 01A778               ;
                                                          ;;                      ;
DATA_01A77A:          .db $00,$FF                         ;; 01A77A               ;
                                                          ;;                      ;
CODE_01A77C:          LDA RAM_SpriteNum,X                 ;; 01A77C : B5 9E       ;
CODE_01A77E:          CMP.B #$02                          ;; 01A77E : C9 02       ;
CODE_01A780:          BNE CODE_01A7C2                     ;; 01A780 : D0 40       ;
CODE_01A782:          LDA.W $187B,Y                       ;; 01A782 : B9 7B 18    ;
CODE_01A785:          BNE CODE_01A7C2                     ;; 01A785 : D0 3B       ;
CODE_01A787:          LDA.W RAM_SpriteDir,X               ;; 01A787 : BD 7C 15    ;
CODE_01A78A:          CMP.W RAM_SpriteDir,Y               ;; 01A78A : D9 7C 15    ;
CODE_01A78D:          BEQ CODE_01A7C2                     ;; 01A78D : F0 33       ;
CODE_01A78F:          STY $01                             ;; 01A78F : 84 01       ;
CODE_01A791:          LDY.W $1534,X                       ;; 01A791 : BC 34 15    ;
CODE_01A794:          BNE CODE_01A7C0                     ;; 01A794 : D0 2A       ;
CODE_01A796:          STZ.W $1528,X                       ;; 01A796 : 9E 28 15    ;
                                                          ;;                      ;
Instr01A799:          .db $9E,$3E,$16                     ;; ?QPWZ?               ;
                                                          ;;                      ;
CODE_01A79C:          TAY                                 ;; 01A79C : A8          ;
CODE_01A79D:          STY $00                             ;; 01A79D : 84 00       ;
CODE_01A79F:          LDA RAM_SpriteXLo,X                 ;; 01A79F : B5 E4       ;
CODE_01A7A1:          CLC                                 ;; 01A7A1 : 18          ;
CODE_01A7A2:          ADC.W DATA_01A778,Y                 ;; 01A7A2 : 79 78 A7    ;
CODE_01A7A5:          LDY $01                             ;; 01A7A5 : A4 01       ;
CODE_01A7A7:          STA.W RAM_SpriteXLo,Y               ;; 01A7A7 : 99 E4 00    ;
CODE_01A7AA:          LDA.W RAM_SpriteXHi,X               ;; 01A7AA : BD E0 14    ;
CODE_01A7AD:          LDY $00                             ;; 01A7AD : A4 00       ;
CODE_01A7AF:          ADC.W DATA_01A77A,Y                 ;; 01A7AF : 79 7A A7    ;
CODE_01A7B2:          LDY $01                             ;; 01A7B2 : A4 01       ;
CODE_01A7B4:          STA.W RAM_SpriteXHi,Y               ;; 01A7B4 : 99 E0 14    ;
CODE_01A7B7:          TYA                                 ;; 01A7B7 : 98          ;
CODE_01A7B8:          STA.W $160E,X                       ;; 01A7B8 : 9D 0E 16    ;
CODE_01A7BB:          LDA.B #$01                          ;; 01A7BB : A9 01       ;
CODE_01A7BD:          STA.W $1534,X                       ;; 01A7BD : 9D 34 15    ;
CODE_01A7C0:          PLA                                 ;; 01A7C0 : 68          ;
CODE_01A7C1:          PLA                                 ;; 01A7C1 : 68          ;
CODE_01A7C2:          LDX.W $1695                         ;; 01A7C2 : AE 95 16    ;
CODE_01A7C5:          LDY.W $15E9                         ;; 01A7C5 : AC E9 15    ; Y = Sprite index 
Return01A7C8:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
SpriteToSpawn:        .db $00,$01,$02,$03,$04,$05,$06,$07 ;; ?QPWZ?               ;
                      .db $04,$04,$05,$05,$07,$00,$00,$0F ;; ?QPWZ?               ;
                      .db $0F,$0F,$0D                     ;; ?QPWZ?               ;
                                                          ;;                      ;
MarioSprInteract:     PHB                                 ;; ?QPWZ? : 8B          ;
CODE_01A7DD:          PHK                                 ;; 01A7DD : 4B          ;
CODE_01A7DE:          PLB                                 ;; 01A7DE : AB          ;
CODE_01A7DF:          JSR.W MarioSprInteractRt            ;; 01A7DF : 20 E4 A7    ;
CODE_01A7E2:          PLB                                 ;; 01A7E2 : AB          ;
Return01A7E3:         RTL                                 ;; ?QPWZ? : 6B          ; Return 
                                                          ;;                      ;
MarioSprInteractRt:   LDA.W RAM_Tweaker167A,X             ;; ?QPWZ? : BD 7A 16    ; \ Branch if "Process interaction every frame" is set 
CODE_01A7E7:          AND.B #$20                          ;; 01A7E7 : 29 20       ;  | 
CODE_01A7E9:          BNE ProcessInteract                 ;; 01A7E9 : D0 0C       ; / 
CODE_01A7EB:          TXA                                 ;; 01A7EB : 8A          ; \ Otherwise, return every other frame 
CODE_01A7EC:          EOR RAM_FrameCounter                ;; 01A7EC : 45 13       ;  | 
CODE_01A7EE:          AND.B #$01                          ;; 01A7EE : 29 01       ;  | 
CODE_01A7F0:          ORA.W RAM_OffscreenHorz,X           ;; 01A7F0 : 1D A0 15    ;  | 
CODE_01A7F3:          BEQ ProcessInteract                 ;; 01A7F3 : F0 02       ;  | 
ReturnNoContact:      CLC                                 ;; ?QPWZ? : 18          ;  | 
Return01A7F6:         RTS                                 ;; ?QPWZ? : 60          ; / 
                                                          ;;                      ;
ProcessInteract:      JSR.W SubHorizPos                   ;; ?QPWZ? : 20 30 AD    ;
CODE_01A7FA:          LDA $0F                             ;; 01A7FA : A5 0F       ;
CODE_01A7FC:          CLC                                 ;; 01A7FC : 18          ;
CODE_01A7FD:          ADC.B #$50                          ;; 01A7FD : 69 50       ;
CODE_01A7FF:          CMP.B #$A0                          ;; 01A7FF : C9 A0       ;
CODE_01A801:          BCS ReturnNoContact                 ;; 01A801 : B0 F2       ; No contact, return 
CODE_01A803:          JSR.W CODE_01AD42                   ;; 01A803 : 20 42 AD    ;
CODE_01A806:          LDA $0E                             ;; 01A806 : A5 0E       ;
CODE_01A808:          CLC                                 ;; 01A808 : 18          ;
CODE_01A809:          ADC.B #$60                          ;; 01A809 : 69 60       ;
CODE_01A80B:          CMP.B #$C0                          ;; 01A80B : C9 C0       ;
CODE_01A80D:          BCS ReturnNoContact                 ;; 01A80D : B0 E6       ; No contact, return 
CODE_01A80F:          LDA RAM_MarioAnimation              ;; 01A80F : A5 71       ; \ If animation sequence activated... 
CODE_01A811:          CMP.B #$01                          ;; 01A811 : C9 01       ;  | 
CODE_01A813:          BCS ReturnNoContact                 ;; 01A813 : B0 E0       ; / ...no contact, return 
CODE_01A815:          LDA.B #$00                          ;; 01A815 : A9 00       ; \ Branch if bit 6 of $0D9B set? 
CODE_01A817:          BIT.W $0D9B                         ;; 01A817 : 2C 9B 0D    ;  | 
CODE_01A81A:          BVS CODE_01A822                     ;; 01A81A : 70 06       ; / 
CODE_01A81C:          LDA.W RAM_IsBehindScenery           ;; 01A81C : AD F9 13    ; \ If Mario and Sprite not on same side of scenery... 
CODE_01A81F:          EOR.W RAM_SprBehindScrn,X           ;; 01A81F : 5D 32 16    ;  | 
CODE_01A822:          BNE ReturnNoContact2                ;; 01A822 : D0 58       ; / ...no contact, return 
CODE_01A824:          JSL.L GetMarioClipping              ;; 01A824 : 22 64 B6 03 ;
CODE_01A828:          JSL.L GetSpriteClippingA            ;; 01A828 : 22 9F B6 03 ;
CODE_01A82C:          JSL.L CheckForContact               ;; 01A82C : 22 2B B7 03 ;
CODE_01A830:          BCC ReturnNoContact2                ;; 01A830 : 90 4A       ; No contact, return 
CODE_01A832:          LDA.W RAM_Tweaker167A,X             ;; 01A832 : BD 7A 16    ; \ Branch if sprite uses default Mario interaction 
CODE_01A835:          BPL DefaultInteractR                ;; 01A835 : 10 04       ; / 
CODE_01A837:          SEC                                 ;; 01A837 : 38          ; Contact, return 
Return01A838:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
DATA_01A839:          .db $F0,$10                         ;; 01A839               ;
                                                          ;;                      ;
DefaultInteractR:     LDA.W $1490                         ;; ?QPWZ? : AD 90 14    ; \ Branch if Mario doesn't have star 
CODE_01A83E:          BEQ CODE_01A87E                     ;; 01A83E : F0 3E       ; / 
CODE_01A840:          LDA.W RAM_Tweaker167A,X             ;; 01A840 : BD 7A 16    ; \ Branch if "Process interaction every frame" is set 
CODE_01A843:          AND.B #$02                          ;; 01A843 : 29 02       ;  | 
CODE_01A845:          BNE CODE_01A87E                     ;; 01A845 : D0 37       ; / 
CODE_01A847:          JSL.L CODE_01AB6F                   ;; 01A847 : 22 6F AB 01 ;
CODE_01A84B:          INC.W $18D2                         ;; 01A84B : EE D2 18    ;
CODE_01A84E:          LDA.W $18D2                         ;; 01A84E : AD D2 18    ;
CODE_01A851:          CMP.B #$08                          ;; 01A851 : C9 08       ;
CODE_01A853:          BCC CODE_01A85A                     ;; 01A853 : 90 05       ;
CODE_01A855:          LDA.B #$08                          ;; 01A855 : A9 08       ;
CODE_01A857:          STA.W $18D2                         ;; 01A857 : 8D D2 18    ;
CODE_01A85A:          JSL.L GivePoints                    ;; 01A85A : 22 E5 AC 02 ;
CODE_01A85E:          LDY.W $18D2                         ;; 01A85E : AC D2 18    ;
CODE_01A861:          CPY.B #$08                          ;; 01A861 : C0 08       ;
CODE_01A863:          BCS CODE_01A86B                     ;; 01A863 : B0 06       ;
CODE_01A865:          LDA.W Return01A61D,Y                ;; 01A865 : B9 1D A6    ;
CODE_01A868:          STA.W $1DF9                         ;; 01A868 : 8D F9 1D    ; / Play sound effect 
CODE_01A86B:          LDA.B #$02                          ;; 01A86B : A9 02       ; \ Sprite status = Killed 
CODE_01A86D:          STA.W $14C8,X                       ;; 01A86D : 9D C8 14    ; / 
CODE_01A870:          LDA.B #$D0                          ;; 01A870 : A9 D0       ;
CODE_01A872:          STA RAM_SpriteSpeedY,X              ;; 01A872 : 95 AA       ;
CODE_01A874:          JSR.W SubHorizPos                   ;; 01A874 : 20 30 AD    ;
CODE_01A877:          LDA.W DATA_01A839,Y                 ;; 01A877 : B9 39 A8    ;
CODE_01A87A:          STA RAM_SpriteSpeedX,X              ;; 01A87A : 95 B6       ;
ReturnNoContact2:     CLC                                 ;; ?QPWZ? : 18          ;
Return01A87D:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01A87E:          STZ.W $18D2                         ;; 01A87E : 9C D2 18    ;
CODE_01A881:          LDA.W RAM_DisableInter,X            ;; 01A881 : BD 4C 15    ;
CODE_01A884:          BNE CODE_01A895                     ;; 01A884 : D0 0F       ;
CODE_01A886:          LDA.B #$08                          ;; 01A886 : A9 08       ;
CODE_01A888:          STA.W RAM_DisableInter,X            ;; 01A888 : 9D 4C 15    ;
CODE_01A88B:          LDA.W $14C8,X                       ;; 01A88B : BD C8 14    ;
CODE_01A88E:          CMP.B #$09                          ;; 01A88E : C9 09       ;
CODE_01A890:          BNE CODE_01A897                     ;; 01A890 : D0 05       ;
CODE_01A892:          JSR.W CODE_01AA42                   ;; 01A892 : 20 42 AA    ;
CODE_01A895:          CLC                                 ;; 01A895 : 18          ;
Return01A896:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01A897:          LDA.B #$14                          ;; 01A897 : A9 14       ;
CODE_01A899:          STA $01                             ;; 01A899 : 85 01       ;
CODE_01A89B:          LDA $05                             ;; 01A89B : A5 05       ;
CODE_01A89D:          SEC                                 ;; 01A89D : 38          ;
CODE_01A89E:          SBC $01                             ;; 01A89E : E5 01       ;
CODE_01A8A0:          ROL $00                             ;; 01A8A0 : 26 00       ;
CODE_01A8A2:          CMP $D3                             ;; 01A8A2 : C5 D3       ;
CODE_01A8A4:          PHP                                 ;; 01A8A4 : 08          ;
CODE_01A8A5:          LSR $00                             ;; 01A8A5 : 46 00       ;
CODE_01A8A7:          LDA $0B                             ;; 01A8A7 : A5 0B       ;
CODE_01A8A9:          SBC.B #$00                          ;; 01A8A9 : E9 00       ;
CODE_01A8AB:          PLP                                 ;; 01A8AB : 28          ;
CODE_01A8AC:          SBC $D4                             ;; 01A8AC : E5 D4       ;
CODE_01A8AE:          BMI CODE_01A8E6                     ;; 01A8AE : 30 36       ;
CODE_01A8B0:          LDA RAM_MarioSpeedY                 ;; 01A8B0 : A5 7D       ;
CODE_01A8B2:          BPL CODE_01A8C0                     ;; 01A8B2 : 10 0C       ;
CODE_01A8B4:          LDA.W RAM_Tweaker190F,X             ;; 01A8B4 : BD 0F 19    ; \ TODO: Branch if Unknown Bit 11 is set 
CODE_01A8B7:          AND.B #$10                          ;; 01A8B7 : 29 10       ;  | 
CODE_01A8B9:          BNE CODE_01A8C0                     ;; 01A8B9 : D0 05       ; / 
CODE_01A8BB:          LDA.W $1697                         ;; 01A8BB : AD 97 16    ;
CODE_01A8BE:          BEQ CODE_01A8E6                     ;; 01A8BE : F0 26       ;
CODE_01A8C0:          JSR.W IsOnGround                    ;; 01A8C0 : 20 0E 80    ;
CODE_01A8C3:          BEQ CODE_01A8C9                     ;; 01A8C3 : F0 04       ;
CODE_01A8C5:          LDA RAM_IsFlying                    ;; 01A8C5 : A5 72       ;
CODE_01A8C7:          BEQ CODE_01A8E6                     ;; 01A8C7 : F0 1D       ;
CODE_01A8C9:          LDA.W RAM_Tweaker1656,X             ;; 01A8C9 : BD 56 16    ; \ Branch if can be jumped on 
CODE_01A8CC:          AND.B #$10                          ;; 01A8CC : 29 10       ;  | 
CODE_01A8CE:          BNE CODE_01A91C                     ;; 01A8CE : D0 4C       ; / 
CODE_01A8D0:          LDA.W RAM_IsSpinJump                ;; 01A8D0 : AD 0D 14    ;
CODE_01A8D3:          ORA.W RAM_OnYoshi                   ;; 01A8D3 : 0D 7A 18    ;
CODE_01A8D6:          BEQ CODE_01A8E6                     ;; 01A8D6 : F0 0E       ;
CODE_01A8D8:          LDA.B #$02                          ;; 01A8D8 : A9 02       ;
CODE_01A8DA:          STA.W $1DF9                         ;; 01A8DA : 8D F9 1D    ; / Play sound effect 
CODE_01A8DD:          JSL.L BoostMarioSpeed               ;; 01A8DD : 22 33 AA 01 ;
CODE_01A8E1:          JSL.L DisplayContactGfx             ;; 01A8E1 : 22 99 AB 01 ;
Return01A8E5:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01A8E6:          LDA.W $13ED                         ;; 01A8E6 : AD ED 13    ;
CODE_01A8E9:          BEQ CODE_01A8F9                     ;; 01A8E9 : F0 0E       ;
CODE_01A8EB:          LDA.W RAM_Tweaker190F,X             ;; 01A8EB : BD 0F 19    ; \ Branch if "Takes 5 fireballs to kill"... 
CODE_01A8EE:          AND.B #$04                          ;; 01A8EE : 29 04       ;  | ...is set 
CODE_01A8F0:          BNE CODE_01A8F9                     ;; 01A8F0 : D0 07       ; / 
CODE_01A8F2:          JSR.W PlayKickSfx                   ;; 01A8F2 : 20 28 A7    ;
CODE_01A8F5:          JSR.W CODE_01A847                   ;; 01A8F5 : 20 47 A8    ;
Return01A8F8:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01A8F9:          LDA.W $1497                         ;; 01A8F9 : AD 97 14    ; \ Return if Mario is invincible 
CODE_01A8FC:          BNE Return01A91B                    ;; 01A8FC : D0 1D       ; / 
CODE_01A8FE:          LDA.W RAM_OnYoshi                   ;; 01A8FE : AD 7A 18    ;
CODE_01A901:          BNE Return01A91B                    ;; 01A901 : D0 18       ;
CODE_01A903:          LDA.W RAM_Tweaker1686,X             ;; 01A903 : BD 86 16    ;
CODE_01A906:          AND.B #$10                          ;; 01A906 : 29 10       ;
CODE_01A908:          BNE CODE_01A911                     ;; 01A908 : D0 07       ;
CODE_01A90A:          JSR.W SubHorizPos                   ;; 01A90A : 20 30 AD    ;
CODE_01A90D:          TYA                                 ;; 01A90D : 98          ;
CODE_01A90E:          STA.W RAM_SpriteDir,X               ;; 01A90E : 9D 7C 15    ;
CODE_01A911:          LDA RAM_SpriteNum,X                 ;; 01A911 : B5 9E       ;
CODE_01A913:          CMP.B #$53                          ;; 01A913 : C9 53       ;
CODE_01A915:          BEQ Return01A91B                    ;; 01A915 : F0 04       ;
CODE_01A917:          JSL.L HurtMario                     ;; 01A917 : 22 B7 F5 00 ;
Return01A91B:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01A91C:          LDA.W RAM_IsSpinJump                ;; 01A91C : AD 0D 14    ;
CODE_01A91F:          ORA.W RAM_OnYoshi                   ;; 01A91F : 0D 7A 18    ;
CODE_01A922:          BEQ CODE_01A947                     ;; 01A922 : F0 23       ;
CODE_01A924:          JSL.L DisplayContactGfx             ;; 01A924 : 22 99 AB 01 ;
CODE_01A928:          LDA.B #$F8                          ;; 01A928 : A9 F8       ;
CODE_01A92A:          STA RAM_MarioSpeedY                 ;; 01A92A : 85 7D       ;
CODE_01A92C:          LDA.W RAM_OnYoshi                   ;; 01A92C : AD 7A 18    ;
CODE_01A92F:          BEQ CODE_01A935                     ;; 01A92F : F0 04       ;
CODE_01A931:          JSL.L BoostMarioSpeed               ;; 01A931 : 22 33 AA 01 ;
CODE_01A935:          JSR.W CODE_019ACB                   ;; 01A935 : 20 CB 9A    ;
CODE_01A938:          JSL.L CODE_07FC3B                   ;; 01A938 : 22 3B FC 07 ;
CODE_01A93C:          JSR.W CODE_01AB46                   ;; 01A93C : 20 46 AB    ;
CODE_01A93F:          LDA.B #$08                          ;; 01A93F : A9 08       ;
CODE_01A941:          STA.W $1DF9                         ;; 01A941 : 8D F9 1D    ; / Play sound effect 
CODE_01A944:          JMP.W CODE_01A9F2                   ;; 01A944 : 4C F2 A9    ;
                                                          ;;                      ;
CODE_01A947:          JSR.W CODE_01A8D8                   ;; 01A947 : 20 D8 A8    ;
CODE_01A94A:          LDA.W $187B,X                       ;; 01A94A : BD 7B 18    ;
CODE_01A94D:          BEQ CODE_01A95D                     ;; 01A94D : F0 0E       ;
CODE_01A94F:          JSR.W SubHorizPos                   ;; 01A94F : 20 30 AD    ;
CODE_01A952:          LDA.B #$18                          ;; 01A952 : A9 18       ;
CODE_01A954:          CPY.B #$00                          ;; 01A954 : C0 00       ;
CODE_01A956:          BEQ CODE_01A95A                     ;; 01A956 : F0 02       ;
CODE_01A958:          LDA.B #$E8                          ;; 01A958 : A9 E8       ;
CODE_01A95A:          STA RAM_MarioSpeedX                 ;; 01A95A : 85 7B       ;
Return01A95C:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01A95D:          JSR.W CODE_01AB46                   ;; 01A95D : 20 46 AB    ;
CODE_01A960:          LDY RAM_SpriteNum,X                 ;; 01A960 : B4 9E       ;
CODE_01A962:          LDA.W RAM_Tweaker1686,X             ;; 01A962 : BD 86 16    ;
CODE_01A965:          AND.B #$40                          ;; 01A965 : 29 40       ;
CODE_01A967:          BEQ CODE_01A9BE                     ;; 01A967 : F0 55       ;
CODE_01A969:          CPY.B #$72                          ;; 01A969 : C0 72       ;
CODE_01A96B:          BCC CODE_01A979                     ;; 01A96B : 90 0C       ;
CODE_01A96D:          PHX                                 ;; 01A96D : DA          ;
CODE_01A96E:          PHY                                 ;; 01A96E : 5A          ;
CODE_01A96F:          JSL.L CODE_02EAF2                   ;; 01A96F : 22 F2 EA 02 ;
CODE_01A973:          PLY                                 ;; 01A973 : 7A          ;
CODE_01A974:          PLX                                 ;; 01A974 : FA          ;
CODE_01A975:          LDA.B #$02                          ;; 01A975 : A9 02       ;
CODE_01A977:          BRA CODE_01A99B                     ;; 01A977 : 80 22       ;
                                                          ;;                      ;
CODE_01A979:          CPY.B #$6E                          ;; 01A979 : C0 6E       ;
CODE_01A97B:          BNE CODE_01A98A                     ;; 01A97B : D0 0D       ;
CODE_01A97D:          LDA.B #$02                          ;; 01A97D : A9 02       ;
CODE_01A97F:          STA RAM_SpriteState,X               ;; 01A97F : 95 C2       ;
CODE_01A981:          LDA.B #$FF                          ;; 01A981 : A9 FF       ;
CODE_01A983:          STA.W $1540,X                       ;; 01A983 : 9D 40 15    ;
CODE_01A986:          LDA.B #$6F                          ;; 01A986 : A9 6F       ;DINO TORCH SPRITE NUM                
CODE_01A988:          BRA CODE_01A99B                     ;; 01A988 : 80 11       ;
                                                          ;;                      ;
CODE_01A98A:          CPY.B #$3F                          ;; 01A98A : C0 3F       ;
CODE_01A98C:          BCC CODE_01A998                     ;; 01A98C : 90 0A       ;
CODE_01A98E:          LDA.B #$80                          ;; 01A98E : A9 80       ;
CODE_01A990:          STA.W $1540,X                       ;; 01A990 : 9D 40 15    ;
CODE_01A993:          LDA.W ADDR_01A79B,Y                 ;; 01A993 : B9 9B A7    ;
CODE_01A996:          BRA CODE_01A99B                     ;; 01A996 : 80 03       ;
                                                          ;;                      ;
CODE_01A998:          LDA.W SpriteToSpawn,Y               ;; 01A998 : B9 C9 A7    ;
CODE_01A99B:          STA RAM_SpriteNum,X                 ;; 01A99B : 95 9E       ;
CODE_01A99D:          LDA.W RAM_SpritePal,X               ;; 01A99D : BD F6 15    ;
CODE_01A9A0:          AND.B #$0E                          ;; 01A9A0 : 29 0E       ;
CODE_01A9A2:          STA $0F                             ;; 01A9A2 : 85 0F       ;
CODE_01A9A4:          JSL.L LoadSpriteTables              ;; 01A9A4 : 22 8B F7 07 ;
CODE_01A9A8:          LDA.W RAM_SpritePal,X               ;; 01A9A8 : BD F6 15    ;
CODE_01A9AB:          AND.B #$F1                          ;; 01A9AB : 29 F1       ;
CODE_01A9AD:          ORA $0F                             ;; 01A9AD : 05 0F       ;
CODE_01A9AF:          STA.W RAM_SpritePal,X               ;; 01A9AF : 9D F6 15    ;
CODE_01A9B2:          STZ RAM_SpriteSpeedY,X              ;; 01A9B2 : 74 AA       ; Sprite Y Speed = 0 
CODE_01A9B4:          LDA RAM_SpriteNum,X                 ;; 01A9B4 : B5 9E       ;
CODE_01A9B6:          CMP.B #$02                          ;; 01A9B6 : C9 02       ;
CODE_01A9B8:          BNE Return01A9BD                    ;; 01A9B8 : D0 03       ;
CODE_01A9BA:          INC.W $151C,X                       ;; 01A9BA : FE 1C 15    ;
Return01A9BD:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01A9BE:          LDA RAM_SpriteNum,X                 ;; 01A9BE : B5 9E       ;
CODE_01A9C0:          SEC                                 ;; 01A9C0 : 38          ;
CODE_01A9C1:          SBC.B #$04                          ;; 01A9C1 : E9 04       ;
CODE_01A9C3:          CMP.B #$0D                          ;; 01A9C3 : C9 0D       ;
CODE_01A9C5:          BCS CODE_01A9CC                     ;; 01A9C5 : B0 05       ;
CODE_01A9C7:          LDA.W $1407                         ;; 01A9C7 : AD 07 14    ;
CODE_01A9CA:          BNE CODE_01A9D3                     ;; 01A9CA : D0 07       ;
CODE_01A9CC:          LDA.W RAM_Tweaker1656,X             ;; 01A9CC : BD 56 16    ; \ Branch if doesn't die when jumped on 
CODE_01A9CF:          AND.B #$20                          ;; 01A9CF : 29 20       ;  | 
CODE_01A9D1:          BEQ CODE_01A9E2                     ;; 01A9D1 : F0 0F       ; / 
CODE_01A9D3:          LDA.B #$03                          ;; 01A9D3 : A9 03       ; \ Sprite status = Smushed 
CODE_01A9D5:          STA.W $14C8,X                       ;; 01A9D5 : 9D C8 14    ; / 
CODE_01A9D8:          LDA.B #$20                          ;; 01A9D8 : A9 20       ;
CODE_01A9DA:          STA.W $1540,X                       ;; 01A9DA : 9D 40 15    ;
CODE_01A9DD:          STZ RAM_SpriteSpeedX,X              ;; 01A9DD : 74 B6       ; \ Sprite Speed = 0 
CODE_01A9DF:          STZ RAM_SpriteSpeedY,X              ;; 01A9DF : 74 AA       ; / 
Return01A9E1:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01A9E2:          LDA.W RAM_Tweaker1662,X             ;; 01A9E2 : BD 62 16    ; \ Branch if Tweaker bit... 
CODE_01A9E5:          AND.B #$80                          ;; 01A9E5 : 29 80       ;  | ..."Falls straight down when killed"... 
CODE_01A9E7:          BEQ CODE_01AA01                     ;; 01A9E7 : F0 18       ; / ...is NOT set. 
CODE_01A9E9:          LDA.B #$02                          ;; 01A9E9 : A9 02       ; \ Sprite status = Falling off screen 
CODE_01A9EB:          STA.W $14C8,X                       ;; 01A9EB : 9D C8 14    ; / 
CODE_01A9EE:          STZ RAM_SpriteSpeedX,X              ;; 01A9EE : 74 B6       ; \ Sprite Speed = 0 
CODE_01A9F0:          STZ RAM_SpriteSpeedY,X              ;; 01A9F0 : 74 AA       ; / 
CODE_01A9F2:          LDA RAM_SpriteNum,X                 ;; 01A9F2 : B5 9E       ; \ Return if NOT Lakitu 
CODE_01A9F4:          CMP.B #$1E                          ;; 01A9F4 : C9 1E       ;  | 
CODE_01A9F6:          BNE Return01AA00                    ;; 01A9F6 : D0 08       ; / 
CODE_01A9F8:          LDY.W $18E1                         ;; 01A9F8 : AC E1 18    ;
CODE_01A9FB:          LDA.B #$1F                          ;; 01A9FB : A9 1F       ;
CODE_01A9FD:          STA.W $1540,Y                       ;; 01A9FD : 99 40 15    ;
Return01AA00:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01AA01:          LDY.W $14C8,X                       ;; 01AA01 : BC C8 14    ;
CODE_01AA04:          STZ.W $1626,X                       ;; 01AA04 : 9E 26 16    ;
CODE_01AA07:          CPY.B #$08                          ;; 01AA07 : C0 08       ;
CODE_01AA09:          BEQ SetStunnedTimer                 ;; 01AA09 : F0 09       ;
CODE_01AA0B:          LDA RAM_SpriteState,X               ;; 01AA0B : B5 C2       ;
CODE_01AA0D:          BNE SetStunnedTimer                 ;; 01AA0D : D0 05       ;
CODE_01AA0F:          STZ.W $1540,X                       ;; 01AA0F : 9E 40 15    ;
CODE_01AA12:          BRA SetAsStunned                    ;; 01AA12 : 80 19       ;
                                                          ;;                      ;
SetStunnedTimer:      LDA.B #$02                          ;; ?QPWZ? : A9 02       ; \ 
CODE_01AA16:          LDY RAM_SpriteNum,X                 ;; 01AA16 : B4 9E       ;  | 
CODE_01AA18:          CPY.B #$0F                          ;; 01AA18 : C0 0F       ;  | Set stunnned timer with: 
CODE_01AA1A:          BEQ CODE_01AA28                     ;; 01AA1A : F0 0C       ;  | 
CODE_01AA1C:          CPY.B #$11                          ;; 01AA1C : C0 11       ;  | #$FF for Goomba, Buzzy Beetle, Mechakoopa, or Bob-omb... 
CODE_01AA1E:          BEQ CODE_01AA28                     ;; 01AA1E : F0 08       ;  | #$02 for others 
CODE_01AA20:          CPY.B #$A2                          ;; 01AA20 : C0 A2       ;  | 
CODE_01AA22:          BEQ CODE_01AA28                     ;; 01AA22 : F0 04       ;  | 
CODE_01AA24:          CPY.B #$0D                          ;; 01AA24 : C0 0D       ;  | 
CODE_01AA26:          BNE CODE_01AA2A                     ;; 01AA26 : D0 02       ;  | 
CODE_01AA28:          LDA.B #$FF                          ;; 01AA28 : A9 FF       ;  | 
CODE_01AA2A:          STA.W $1540,X                       ;; 01AA2A : 9D 40 15    ; / 
SetAsStunned:         LDA.B #$09                          ;; ?QPWZ? : A9 09       ; \ Status = stunned 
CODE_01AA2F:          STA.W $14C8,X                       ;; 01AA2F : 9D C8 14    ; / 
Return01AA32:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
BoostMarioSpeed:      LDA RAM_IsClimbing                  ;; ?QPWZ? : A5 74       ; \ Return if climbing 
CODE_01AA35:          BNE Return01AA41                    ;; 01AA35 : D0 0A       ; / 
CODE_01AA37:          LDA.B #$D0                          ;; 01AA37 : A9 D0       ;
CODE_01AA39:          BIT RAM_ControllerA                 ;; 01AA39 : 24 15       ;
CODE_01AA3B:          BPL CODE_01AA3F                     ;; 01AA3B : 10 02       ;
CODE_01AA3D:          LDA.B #$A8                          ;; 01AA3D : A9 A8       ;
CODE_01AA3F:          STA RAM_MarioSpeedY                 ;; 01AA3F : 85 7D       ;
Return01AA41:         RTL                                 ;; ?QPWZ? : 6B          ; Return 
                                                          ;;                      ;
CODE_01AA42:          LDA.W RAM_IsSpinJump                ;; 01AA42 : AD 0D 14    ;
CODE_01AA45:          ORA.W RAM_OnYoshi                   ;; 01AA45 : 0D 7A 18    ;
CODE_01AA48:          BEQ CODE_01AA58                     ;; 01AA48 : F0 0E       ;
CODE_01AA4A:          LDA RAM_MarioSpeedY                 ;; 01AA4A : A5 7D       ;
CODE_01AA4C:          BMI CODE_01AA58                     ;; 01AA4C : 30 0A       ;
CODE_01AA4E:          LDA.W RAM_Tweaker1656,X             ;; 01AA4E : BD 56 16    ; \ Branch if can't be jumped on 
CODE_01AA51:          AND.B #$10                          ;; 01AA51 : 29 10       ;  | 
CODE_01AA53:          BEQ CODE_01AA58                     ;; 01AA53 : F0 03       ; / 
CODE_01AA55:          JMP.W CODE_01A924                   ;; 01AA55 : 4C 24 A9    ;
                                                          ;;                      ;
CODE_01AA58:          LDA RAM_ControllerA                 ;; 01AA58 : A5 15       ;
CODE_01AA5A:          AND.B #$40                          ;; 01AA5A : 29 40       ;
CODE_01AA5C:          BEQ CODE_01AA74                     ;; 01AA5C : F0 16       ;
CODE_01AA5E:          LDA.W $1470                         ;; 01AA5E : AD 70 14    ; \ Branch if carrying an enemy... 
CODE_01AA61:          ORA.W RAM_OnYoshi                   ;; 01AA61 : 0D 7A 18    ;  | ...or on Yoshi 
CODE_01AA64:          BNE CODE_01AA74                     ;; 01AA64 : D0 0E       ; / 
CODE_01AA66:          LDA.B #$0B                          ;; 01AA66 : A9 0B       ; \ Sprite status = Being carried 
CODE_01AA68:          STA.W $14C8,X                       ;; 01AA68 : 9D C8 14    ; / 
CODE_01AA6B:          INC.W $1470                         ;; 01AA6B : EE 70 14    ; Set carrying enemy flag 
CODE_01AA6E:          LDA.B #$08                          ;; 01AA6E : A9 08       ;
CODE_01AA70:          STA.W RAM_PickUpImgTimer            ;; 01AA70 : 8D 98 14    ;
Return01AA73:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01AA74:          LDA RAM_SpriteNum,X                 ;; 01AA74 : B5 9E       ; \ Branch if Key 
CODE_01AA76:          CMP.B #$80                          ;; 01AA76 : C9 80       ;  | 
CODE_01AA78:          BEQ CODE_01AAB7                     ;; 01AA78 : F0 3D       ; / 
CODE_01AA7A:          CMP.B #$3E                          ;; 01AA7A : C9 3E       ; \ Branch if P Switch 
CODE_01AA7C:          BEQ CODE_01AAB2                     ;; 01AA7C : F0 34       ; / 
CODE_01AA7E:          CMP.B #$0D                          ;; 01AA7E : C9 0D       ; \ Branch if Bobomb 
CODE_01AA80:          BEQ CODE_01AA97                     ;; 01AA80 : F0 15       ; / 
CODE_01AA82:          CMP.B #$2D                          ;; 01AA82 : C9 2D       ; \ Branch if Baby Yoshi 
CODE_01AA84:          BEQ CODE_01AA97                     ;; 01AA84 : F0 11       ; / 
CODE_01AA86:          CMP.B #$A2                          ;; 01AA86 : C9 A2       ; \ Branch if MechaKoopa 
CODE_01AA88:          BEQ CODE_01AA97                     ;; 01AA88 : F0 0D       ; / 
CODE_01AA8A:          CMP.B #$0F                          ;; 01AA8A : C9 0F       ; \ Branch if not Goomba 
CODE_01AA8C:          BNE CODE_01AA94                     ;; 01AA8C : D0 06       ; / 
ADDR_01AA8E:          LDA.B #$F0                          ;; 01AA8E : A9 F0       ;
ADDR_01AA90:          STA RAM_SpriteSpeedY,X              ;; 01AA90 : 95 AA       ;
ADDR_01AA92:          BRA CODE_01AA97                     ;; 01AA92 : 80 03       ;
                                                          ;;                      ;
CODE_01AA94:          JSR.W CODE_01AB46                   ;; 01AA94 : 20 46 AB    ;
CODE_01AA97:          JSR.W PlayKickSfx                   ;; 01AA97 : 20 28 A7    ;
CODE_01AA9A:          LDA.W $1540,X                       ;; 01AA9A : BD 40 15    ;
CODE_01AA9D:          STA RAM_SpriteState,X               ;; 01AA9D : 95 C2       ;
CODE_01AA9F:          LDA.B #$0A                          ;; 01AA9F : A9 0A       ; \ Sprite status = Kicked 
CODE_01AAA1:          STA.W $14C8,X                       ;; 01AAA1 : 9D C8 14    ; / 
CODE_01AAA4:          LDA.B #$10                          ;; 01AAA4 : A9 10       ;
CODE_01AAA6:          STA.W RAM_DisableInter,X            ;; 01AAA6 : 9D 4C 15    ;
CODE_01AAA9:          JSR.W SubHorizPos                   ;; 01AAA9 : 20 30 AD    ;
CODE_01AAAC:          LDA.W ShellSpeedX,Y                 ;; 01AAAC : B9 6B 9F    ;
CODE_01AAAF:          STA RAM_SpriteSpeedX,X              ;; 01AAAF : 95 B6       ;
Return01AAB1:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01AAB2:          LDA.W $163E,X                       ;; 01AAB2 : BD 3E 16    ;
CODE_01AAB5:          BNE Return01AB2C                    ;; 01AAB5 : D0 75       ;
CODE_01AAB7:          STZ.W RAM_DisableInter,X            ;; 01AAB7 : 9E 4C 15    ;
CODE_01AABA:          LDA RAM_SpriteYLo,X                 ;; 01AABA : B5 D8       ;
CODE_01AABC:          SEC                                 ;; 01AABC : 38          ;
CODE_01AABD:          SBC $D3                             ;; 01AABD : E5 D3       ;
CODE_01AABF:          CLC                                 ;; 01AABF : 18          ;
CODE_01AAC0:          ADC.B #$08                          ;; 01AAC0 : 69 08       ;
CODE_01AAC2:          CMP.B #$20                          ;; 01AAC2 : C9 20       ;
CODE_01AAC4:          BCC CODE_01AB31                     ;; 01AAC4 : 90 6B       ;
CODE_01AAC6:          BPL CODE_01AACD                     ;; 01AAC6 : 10 05       ;
CODE_01AAC8:          LDA.B #$10                          ;; 01AAC8 : A9 10       ;
CODE_01AACA:          STA RAM_MarioSpeedY                 ;; 01AACA : 85 7D       ;
Return01AACC:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01AACD:          LDA RAM_MarioSpeedY                 ;; 01AACD : A5 7D       ;
CODE_01AACF:          BMI Return01AB2C                    ;; 01AACF : 30 5B       ;
CODE_01AAD1:          STZ RAM_MarioSpeedY                 ;; 01AAD1 : 64 7D       ;
CODE_01AAD3:          STZ RAM_IsFlying                    ;; 01AAD3 : 64 72       ;
CODE_01AAD5:          INC.W $1471                         ;; 01AAD5 : EE 71 14    ;
CODE_01AAD8:          LDA.B #$1F                          ;; 01AAD8 : A9 1F       ;
CODE_01AADA:          LDY.W RAM_OnYoshi                   ;; 01AADA : AC 7A 18    ;
CODE_01AADD:          BEQ CODE_01AAE1                     ;; 01AADD : F0 02       ;
CODE_01AADF:          LDA.B #$2F                          ;; 01AADF : A9 2F       ;
CODE_01AAE1:          STA $00                             ;; 01AAE1 : 85 00       ;
CODE_01AAE3:          LDA RAM_SpriteYLo,X                 ;; 01AAE3 : B5 D8       ;
CODE_01AAE5:          SEC                                 ;; 01AAE5 : 38          ;
CODE_01AAE6:          SBC $00                             ;; 01AAE6 : E5 00       ;
CODE_01AAE8:          STA RAM_MarioYPos                   ;; 01AAE8 : 85 96       ;
CODE_01AAEA:          LDA.W RAM_SpriteYHi,X               ;; 01AAEA : BD D4 14    ;
CODE_01AAED:          SBC.B #$00                          ;; 01AAED : E9 00       ;
CODE_01AAEF:          STA RAM_MarioYPosHi                 ;; 01AAEF : 85 97       ;
CODE_01AAF1:          LDA RAM_SpriteNum,X                 ;; 01AAF1 : B5 9E       ;
CODE_01AAF3:          CMP.B #$3E                          ;; 01AAF3 : C9 3E       ;
CODE_01AAF5:          BNE Return01AB2C                    ;; 01AAF5 : D0 35       ;
CODE_01AAF7:          ASL.W RAM_Tweaker167A,X             ;; 01AAF7 : 1E 7A 16    ;
CODE_01AAFA:          LSR.W RAM_Tweaker167A,X             ;; 01AAFA : 5E 7A 16    ;
CODE_01AAFD:          LDA.B #$0B                          ;; 01AAFD : A9 0B       ;
CODE_01AAFF:          STA.W $1DF9                         ;; 01AAFF : 8D F9 1D    ; / Play sound effect 
CODE_01AB02:          LDA.W $0DDA                         ;; 01AB02 : AD DA 0D    ;
CODE_01AB05:          BMI CODE_01AB0C                     ;; 01AB05 : 30 05       ;
CODE_01AB07:          LDA.B #$0E                          ;; 01AB07 : A9 0E       ;
CODE_01AB09:          STA.W $1DFB                         ;; 01AB09 : 8D FB 1D    ; / Change music 
CODE_01AB0C:          LDA.B #$20                          ;; 01AB0C : A9 20       ;
CODE_01AB0E:          STA.W $163E,X                       ;; 01AB0E : 9D 3E 16    ;
CODE_01AB11:          LSR.W RAM_SpritePal,X               ;; 01AB11 : 5E F6 15    ;
CODE_01AB14:          ASL.W RAM_SpritePal,X               ;; 01AB14 : 1E F6 15    ;
CODE_01AB17:          LDY.W $151C,X                       ;; 01AB17 : BC 1C 15    ;
CODE_01AB1A:          LDA.B #$B0                          ;; 01AB1A : A9 B0       ;
CODE_01AB1C:          STA.W RAM_BluePowTimer,Y            ;; 01AB1C : 99 AD 14    ;
CODE_01AB1F:          LDA.B #$20                          ;; 01AB1F : A9 20       ; \ Set ground shake timer 
CODE_01AB21:          STA.W RAM_ShakeGrndTimer            ;; 01AB21 : 8D 87 18    ; / 
CODE_01AB24:          CPY.B #$01                          ;; 01AB24 : C0 01       ;
CODE_01AB26:          BNE Return01AB2C                    ;; 01AB26 : D0 04       ;
CODE_01AB28:          JSL.L CODE_02B9BD                   ;; 01AB28 : 22 BD B9 02 ;
Return01AB2C:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
DATA_01AB2D:          .db $01,$00,$FF,$FF                 ;; 01AB2D               ;
                                                          ;;                      ;
CODE_01AB31:          STZ RAM_MarioSpeedX                 ;; 01AB31 : 64 7B       ;
CODE_01AB33:          JSR.W SubHorizPos                   ;; 01AB33 : 20 30 AD    ;
CODE_01AB36:          TYA                                 ;; 01AB36 : 98          ;
CODE_01AB37:          ASL                                 ;; 01AB37 : 0A          ;
CODE_01AB38:          TAY                                 ;; 01AB38 : A8          ;
CODE_01AB39:          REP #$20                            ;; 01AB39 : C2 20       ; Accum (16 bit) 
CODE_01AB3B:          LDA RAM_MarioXPos                   ;; 01AB3B : A5 94       ;
CODE_01AB3D:          CLC                                 ;; 01AB3D : 18          ;
CODE_01AB3E:          ADC.W DATA_01AB2D,Y                 ;; 01AB3E : 79 2D AB    ;
CODE_01AB41:          STA RAM_MarioXPos                   ;; 01AB41 : 85 94       ;
CODE_01AB43:          SEP #$20                            ;; 01AB43 : E2 20       ; Accum (8 bit) 
Return01AB45:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01AB46:          PHY                                 ;; 01AB46 : 5A          ;
CODE_01AB47:          LDA.W $1697                         ;; 01AB47 : AD 97 16    ;
CODE_01AB4A:          CLC                                 ;; 01AB4A : 18          ;
CODE_01AB4B:          ADC.W $1626,X                       ;; 01AB4B : 7D 26 16    ;
CODE_01AB4E:          INC.W $1697                         ;; 01AB4E : EE 97 16    ;
CODE_01AB51:          TAY                                 ;; 01AB51 : A8          ;
CODE_01AB52:          INY                                 ;; 01AB52 : C8          ;
CODE_01AB53:          CPY.B #$08                          ;; 01AB53 : C0 08       ;
CODE_01AB55:          BCS CODE_01AB5D                     ;; 01AB55 : B0 06       ;
CODE_01AB57:          LDA.W Return01A61D,Y                ;; 01AB57 : B9 1D A6    ;
CODE_01AB5A:          STA.W $1DF9                         ;; 01AB5A : 8D F9 1D    ; / Play sound effect 
CODE_01AB5D:          TYA                                 ;; 01AB5D : 98          ;
CODE_01AB5E:          CMP.B #$08                          ;; 01AB5E : C9 08       ;
CODE_01AB60:          BCC CODE_01AB64                     ;; 01AB60 : 90 02       ;
CODE_01AB62:          LDA.B #$08                          ;; 01AB62 : A9 08       ;
CODE_01AB64:          JSL.L GivePoints                    ;; 01AB64 : 22 E5 AC 02 ;
CODE_01AB68:          PLY                                 ;; 01AB68 : 7A          ;
Return01AB69:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
DATA_01AB6A:          .db $0C,$FC,$EC,$DC,$CC             ;; 01AB6A               ;
                                                          ;;                      ;
CODE_01AB6F:          JSR.W PlayKickSfx                   ;; 01AB6F : 20 28 A7    ;
CODE_01AB72:          JSR.W IsSprOffScreen                ;; 01AB72 : 20 CB 80    ;
CODE_01AB75:          BNE Return01AB98                    ;; 01AB75 : D0 21       ;
CODE_01AB77:          PHY                                 ;; 01AB77 : 5A          ;
CODE_01AB78:          LDY.B #$03                          ;; 01AB78 : A0 03       ;
CODE_01AB7A:          LDA.W $17C0,Y                       ;; 01AB7A : B9 C0 17    ;
CODE_01AB7D:          BEQ CODE_01AB83                     ;; 01AB7D : F0 04       ;
CODE_01AB7F:          DEY                                 ;; 01AB7F : 88          ;
CODE_01AB80:          BPL CODE_01AB7A                     ;; 01AB80 : 10 F8       ;
CODE_01AB82:          INY                                 ;; 01AB82 : C8          ;
CODE_01AB83:          LDA.B #$02                          ;; 01AB83 : A9 02       ;
CODE_01AB85:          STA.W $17C0,Y                       ;; 01AB85 : 99 C0 17    ;
CODE_01AB88:          LDA RAM_SpriteXLo,X                 ;; 01AB88 : B5 E4       ;
CODE_01AB8A:          STA.W $17C8,Y                       ;; 01AB8A : 99 C8 17    ;
CODE_01AB8D:          LDA RAM_SpriteYLo,X                 ;; 01AB8D : B5 D8       ;
CODE_01AB8F:          STA.W $17C4,Y                       ;; 01AB8F : 99 C4 17    ;
CODE_01AB92:          LDA.B #$08                          ;; 01AB92 : A9 08       ;
CODE_01AB94:          STA.W $17CC,Y                       ;; 01AB94 : 99 CC 17    ;
CODE_01AB97:          PLY                                 ;; 01AB97 : 7A          ;
Return01AB98:         RTL                                 ;; ?QPWZ? : 6B          ; Return 
                                                          ;;                      ;
DisplayContactGfx:    JSR.W IsSprOffScreen                ;; ?QPWZ? : 20 CB 80    ;
CODE_01AB9C:          BNE Return01ABCB                    ;; 01AB9C : D0 2D       ;
CODE_01AB9E:          PHY                                 ;; 01AB9E : 5A          ;
CODE_01AB9F:          LDY.B #$03                          ;; 01AB9F : A0 03       ;
CODE_01ABA1:          LDA.W $17C0,Y                       ;; 01ABA1 : B9 C0 17    ;
CODE_01ABA4:          BEQ CODE_01ABAA                     ;; 01ABA4 : F0 04       ;
CODE_01ABA6:          DEY                                 ;; 01ABA6 : 88          ;
CODE_01ABA7:          BPL CODE_01ABA1                     ;; 01ABA7 : 10 F8       ;
CODE_01ABA9:          INY                                 ;; 01ABA9 : C8          ;
CODE_01ABAA:          LDA.B #$02                          ;; 01ABAA : A9 02       ;
CODE_01ABAC:          STA.W $17C0,Y                       ;; 01ABAC : 99 C0 17    ;
CODE_01ABAF:          LDA RAM_MarioXPos                   ;; 01ABAF : A5 94       ;
CODE_01ABB1:          STA.W $17C8,Y                       ;; 01ABB1 : 99 C8 17    ;
CODE_01ABB4:          LDA.W RAM_OnYoshi                   ;; 01ABB4 : AD 7A 18    ;
CODE_01ABB7:          CMP.B #$01                          ;; 01ABB7 : C9 01       ;
CODE_01ABB9:          LDA.B #$14                          ;; 01ABB9 : A9 14       ;
CODE_01ABBB:          BCC CODE_01ABBF                     ;; 01ABBB : 90 02       ;
CODE_01ABBD:          LDA.B #$1E                          ;; 01ABBD : A9 1E       ;
CODE_01ABBF:          CLC                                 ;; 01ABBF : 18          ;
CODE_01ABC0:          ADC RAM_MarioYPos                   ;; 01ABC0 : 65 96       ;
CODE_01ABC2:          STA.W $17C4,Y                       ;; 01ABC2 : 99 C4 17    ;
CODE_01ABC5:          LDA.B #$08                          ;; 01ABC5 : A9 08       ;
CODE_01ABC7:          STA.W $17CC,Y                       ;; 01ABC7 : 99 CC 17    ;
CODE_01ABCA:          PLY                                 ;; 01ABCA : 7A          ;
Return01ABCB:         RTL                                 ;; ?QPWZ? : 6B          ; Return 
                                                          ;;                      ;
SubSprXPosNoGrvty:    TXA                                 ;; ?QPWZ? : 8A          ;
CODE_01ABCD:          CLC                                 ;; 01ABCD : 18          ;
CODE_01ABCE:          ADC.B #$0C                          ;; 01ABCE : 69 0C       ;
CODE_01ABD0:          TAX                                 ;; 01ABD0 : AA          ;
CODE_01ABD1:          JSR.W SubSprYPosNoGrvty             ;; 01ABD1 : 20 D8 AB    ;
CODE_01ABD4:          LDX.W $15E9                         ;; 01ABD4 : AE E9 15    ; X = Sprite index 
Return01ABD7:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
SubSprYPosNoGrvty:    LDA RAM_SpriteSpeedY,X              ;; ?QPWZ? : B5 AA       ; Load current sprite's Y speed 
CODE_01ABDA:          BEQ CODE_01AC09                     ;; 01ABDA : F0 2D       ; If speed is 0, branch to $AC09 
CODE_01ABDC:          ASL                                 ;; 01ABDC : 0A          ; \  
CODE_01ABDD:          ASL                                 ;; 01ABDD : 0A          ;  |Multiply speed by 16 
CODE_01ABDE:          ASL                                 ;; 01ABDE : 0A          ;  | 
CODE_01ABDF:          ASL                                 ;; 01ABDF : 0A          ; /  
CODE_01ABE0:          CLC                                 ;; 01ABE0 : 18          ; \  
CODE_01ABE1:          ADC.W $14EC,X                       ;; 01ABE1 : 7D EC 14    ;  |Increase (unknown sprite table) by that value 
CODE_01ABE4:          STA.W $14EC,X                       ;; 01ABE4 : 9D EC 14    ; /  
CODE_01ABE7:          PHP                                 ;; 01ABE7 : 08          ;
CODE_01ABE8:          PHP                                 ;; 01ABE8 : 08          ;
CODE_01ABE9:          LDY.B #$00                          ;; 01ABE9 : A0 00       ;
CODE_01ABEB:          LDA RAM_SpriteSpeedY,X              ;; 01ABEB : B5 AA       ; Load current sprite's Y speed 
CODE_01ABED:          LSR                                 ;; 01ABED : 4A          ; \  
CODE_01ABEE:          LSR                                 ;; 01ABEE : 4A          ;  |Multiply speed by 16 
CODE_01ABEF:          LSR                                 ;; 01ABEF : 4A          ;  | 
CODE_01ABF0:          LSR                                 ;; 01ABF0 : 4A          ; /  
CODE_01ABF1:          CMP.B #$08                          ;; 01ABF1 : C9 08       ;
CODE_01ABF3:          BCC CODE_01ABF8                     ;; 01ABF3 : 90 03       ;
CODE_01ABF5:          ORA.B #$F0                          ;; 01ABF5 : 09 F0       ;
CODE_01ABF7:          DEY                                 ;; 01ABF7 : 88          ;
CODE_01ABF8:          PLP                                 ;; 01ABF8 : 28          ;
CODE_01ABF9:          PHA                                 ;; 01ABF9 : 48          ;
CODE_01ABFA:          ADC RAM_SpriteYLo,X                 ;; 01ABFA : 75 D8       ; \ Add value to current sprite's Y position 
CODE_01ABFC:          STA RAM_SpriteYLo,X                 ;; 01ABFC : 95 D8       ; /  
CODE_01ABFE:          TYA                                 ;; 01ABFE : 98          ;
CODE_01ABFF:          ADC.W RAM_SpriteYHi,X               ;; 01ABFF : 7D D4 14    ;
CODE_01AC02:          STA.W RAM_SpriteYHi,X               ;; 01AC02 : 9D D4 14    ;
CODE_01AC05:          PLA                                 ;; 01AC05 : 68          ;
CODE_01AC06:          PLP                                 ;; 01AC06 : 28          ;
CODE_01AC07:          ADC.B #$00                          ;; 01AC07 : 69 00       ;
CODE_01AC09:          STA.W $1491                         ;; 01AC09 : 8D 91 14    ;
Return01AC0C:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
SpriteOffScreen1:     .db $40,$B0                         ;; ?QPWZ?               ;
                                                          ;;                      ;
SpriteOffScreen2:     .db $01,$FF                         ;; ?QPWZ?               ;
                                                          ;;                      ;
SpriteOffScreen3:     .db $30,$C0,$A0,$C0,$A0,$F0,$60,$90 ;; ?QPWZ?               ;
SpriteOffScreen4:     .db $01,$FF,$01,$FF,$01,$FF,$01,$FF ;; ?QPWZ?               ;
                                                          ;;                      ;
SubOffscreen3Bnk1:    LDA.B #$06                          ;; ?QPWZ? : A9 06       ; \ Entry point of routine determines value of $03 
CODE_01AC23:          STA $03                             ;; 01AC23 : 85 03       ;  | 
CODE_01AC25:          BRA CODE_01AC2D                     ;; 01AC25 : 80 06       ;  | 
                                                          ;;                      ;
SubOffscreen2Bnk1:    LDA.B #$04                          ;; ?QPWZ? : A9 04       ;  | 
CODE_01AC29:          BRA CODE_01AC2D                     ;; 01AC29 : 80 02       ;  | 
                                                          ;;                      ;
SubOffscreen1Bnk1:    LDA.B #$02                          ;; ?QPWZ? : A9 02       ;  | 
CODE_01AC2D:          STA $03                             ;; 01AC2D : 85 03       ;  | 
CODE_01AC2F:          BRA CODE_01AC33                     ;; 01AC2F : 80 02       ;  | 
                                                          ;;                      ;
SubOffscreen0Bnk1:    STZ $03                             ;; ?QPWZ? : 64 03       ; / 
CODE_01AC33:          JSR.W IsSprOffScreen                ;; 01AC33 : 20 CB 80    ; \ if sprite is not off screen, return                                       
CODE_01AC36:          BEQ Return01ACA4                    ;; 01AC36 : F0 6C       ; /                                                                           
CODE_01AC38:          LDA RAM_IsVerticalLvl               ;; 01AC38 : A5 5B       ; \  vertical level                                    
CODE_01AC3A:          AND.B #$01                          ;; 01AC3A : 29 01       ;  | 
CODE_01AC3C:          BNE VerticalLevel                   ;; 01AC3C : D0 67       ; /                                                                           
CODE_01AC3E:          LDA RAM_SpriteYLo,X                 ;; 01AC3E : B5 D8       ; \                                                                           
CODE_01AC40:          CLC                                 ;; 01AC40 : 18          ;  | 
CODE_01AC41:          ADC.B #$50                          ;; 01AC41 : 69 50       ;  | if the sprite has gone off the bottom of the level... 
CODE_01AC43:          LDA.W RAM_SpriteYHi,X               ;; 01AC43 : BD D4 14    ;  | (if adding 0x50 to the sprite y position would make the high byte >= 2) 
CODE_01AC46:          ADC.B #$00                          ;; 01AC46 : 69 00       ;  | 
CODE_01AC48:          CMP.B #$02                          ;; 01AC48 : C9 02       ;  | 
CODE_01AC4A:          BPL OffScrEraseSprite               ;; 01AC4A : 10 34       ; /    ...erase the sprite                                                    
CODE_01AC4C:          LDA.W RAM_Tweaker167A,X             ;; 01AC4C : BD 7A 16    ; \ if "process offscreen" flag is set, return                                
CODE_01AC4F:          AND.B #$04                          ;; 01AC4F : 29 04       ;  | 
CODE_01AC51:          BNE Return01ACA4                    ;; 01AC51 : D0 51       ; /                                                                           
CODE_01AC53:          LDA RAM_FrameCounter                ;; 01AC53 : A5 13       ;
CODE_01AC55:          AND.B #$01                          ;; 01AC55 : 29 01       ;
CODE_01AC57:          ORA $03                             ;; 01AC57 : 05 03       ;
CODE_01AC59:          STA $01                             ;; 01AC59 : 85 01       ;
CODE_01AC5B:          TAY                                 ;; 01AC5B : A8          ;
CODE_01AC5C:          LDA RAM_ScreenBndryXLo              ;; 01AC5C : A5 1A       ;
CODE_01AC5E:          CLC                                 ;; 01AC5E : 18          ;
CODE_01AC5F:          ADC.W SpriteOffScreen3,Y            ;; 01AC5F : 79 11 AC    ;
CODE_01AC62:          ROL $00                             ;; 01AC62 : 26 00       ;
CODE_01AC64:          CMP RAM_SpriteXLo,X                 ;; 01AC64 : D5 E4       ;
CODE_01AC66:          PHP                                 ;; 01AC66 : 08          ;
CODE_01AC67:          LDA RAM_ScreenBndryXHi              ;; 01AC67 : A5 1B       ;
CODE_01AC69:          LSR $00                             ;; 01AC69 : 46 00       ;
CODE_01AC6B:          ADC.W SpriteOffScreen4,Y            ;; 01AC6B : 79 19 AC    ;
CODE_01AC6E:          PLP                                 ;; 01AC6E : 28          ;
CODE_01AC6F:          SBC.W RAM_SpriteXHi,X               ;; 01AC6F : FD E0 14    ;
CODE_01AC72:          STA $00                             ;; 01AC72 : 85 00       ;
CODE_01AC74:          LSR $01                             ;; 01AC74 : 46 01       ;
CODE_01AC76:          BCC CODE_01AC7C                     ;; 01AC76 : 90 04       ;
CODE_01AC78:          EOR.B #$80                          ;; 01AC78 : 49 80       ;
CODE_01AC7A:          STA $00                             ;; 01AC7A : 85 00       ;
CODE_01AC7C:          LDA $00                             ;; 01AC7C : A5 00       ;
CODE_01AC7E:          BPL Return01ACA4                    ;; 01AC7E : 10 24       ;
OffScrEraseSprite:    LDA RAM_SpriteNum,X                 ;; ?QPWZ? : B5 9E       ; \ If MagiKoopa... 
CODE_01AC82:          CMP.B #$1F                          ;; 01AC82 : C9 1F       ;  | 
CODE_01AC84:          BNE CODE_01AC8E                     ;; 01AC84 : D0 08       ;  | Sprite to respawn = MagiKoopa 
CODE_01AC86:          STA.W RAM_SpriteToRespawn           ;; 01AC86 : 8D C1 18    ;  | 
CODE_01AC89:          LDA.B #$FF                          ;; 01AC89 : A9 FF       ;  | Set timer until respawn 
CODE_01AC8B:          STA.W RAM_TimeTillRespawn           ;; 01AC8B : 8D C0 18    ; / 
CODE_01AC8E:          LDA.W $14C8,X                       ;; 01AC8E : BD C8 14    ; \ If sprite status < 8, permanently erase sprite 
CODE_01AC91:          CMP.B #$08                          ;; 01AC91 : C9 08       ;  | 
CODE_01AC93:          BCC OffScrKillSprite                ;; 01AC93 : 90 0C       ; / 
CODE_01AC95:          LDY.W RAM_SprIndexInLvl,X           ;; 01AC95 : BC 1A 16    ; \ Branch if should permanently erase sprite 
CODE_01AC98:          CPY.B #$FF                          ;; 01AC98 : C0 FF       ;  | 
CODE_01AC9A:          BEQ OffScrKillSprite                ;; 01AC9A : F0 05       ; / 
CODE_01AC9C:          LDA.B #$00                          ;; 01AC9C : A9 00       ; \ Allow sprite to be reloaded by level loading routine 
CODE_01AC9E:          STA.W RAM_SprLoadStatus,Y           ;; 01AC9E : 99 38 19    ; / 
OffScrKillSprite:     STZ.W $14C8,X                       ;; ?QPWZ? : 9E C8 14    ; Erase sprite 
Return01ACA4:         RTS                                 ;; ?QPWZ? : 60          ;
                                                          ;;                      ;
VerticalLevel:        LDA.W RAM_Tweaker167A,X             ;; ?QPWZ? : BD 7A 16    ; \ If "process offscreen" flag is set, return                
CODE_01ACA8:          AND.B #$04                          ;; 01ACA8 : 29 04       ;  | 
CODE_01ACAA:          BNE Return01ACA4                    ;; 01ACAA : D0 F8       ; /                                                           
CODE_01ACAC:          LDA RAM_FrameCounter                ;; 01ACAC : A5 13       ; \ Return every other frame 
CODE_01ACAE:          LSR                                 ;; 01ACAE : 4A          ;  | 
CODE_01ACAF:          BCS Return01ACA4                    ;; 01ACAF : B0 F3       ; /                                                           
CODE_01ACB1:          LDA RAM_SpriteXLo,X                 ;; 01ACB1 : B5 E4       ; \                                                           
CODE_01ACB3:          CMP.B #$00                          ;; 01ACB3 : C9 00       ;  | If the sprite has gone off the side of the level...      
CODE_01ACB5:          LDA.W RAM_SpriteXHi,X               ;; 01ACB5 : BD E0 14    ;  |                                                          
CODE_01ACB8:          SBC.B #$00                          ;; 01ACB8 : E9 00       ;  |                                                          
CODE_01ACBA:          CMP.B #$02                          ;; 01ACBA : C9 02       ;  |                                                          
CODE_01ACBC:          BCS OffScrEraseSprite               ;; 01ACBC : B0 C2       ; /  ...erase the sprite      
CODE_01ACBE:          LDA RAM_FrameCounter                ;; 01ACBE : A5 13       ;
CODE_01ACC0:          LSR                                 ;; 01ACC0 : 4A          ;
CODE_01ACC1:          AND.B #$01                          ;; 01ACC1 : 29 01       ;
CODE_01ACC3:          STA $01                             ;; 01ACC3 : 85 01       ;
CODE_01ACC5:          TAY                                 ;; 01ACC5 : A8          ;
CODE_01ACC6:          BEQ CODE_01ACD2                     ;; 01ACC6 : F0 0A       ;
CODE_01ACC8:          LDA RAM_SpriteNum,X                 ;; 01ACC8 : B5 9E       ; \ Return if Green Net Koopa 
CODE_01ACCA:          CMP.B #$22                          ;; 01ACCA : C9 22       ;  | 
CODE_01ACCC:          BEQ Return01ACA4                    ;; 01ACCC : F0 D6       ;  | 
CODE_01ACCE:          CMP.B #$24                          ;; 01ACCE : C9 24       ;  | 
CODE_01ACD0:          BEQ Return01ACA4                    ;; 01ACD0 : F0 D2       ; / 
CODE_01ACD2:          LDA RAM_ScreenBndryYLo              ;; 01ACD2 : A5 1C       ;
CODE_01ACD4:          CLC                                 ;; 01ACD4 : 18          ;
CODE_01ACD5:          ADC.W SpriteOffScreen1,Y            ;; 01ACD5 : 79 0D AC    ;
CODE_01ACD8:          ROL $00                             ;; 01ACD8 : 26 00       ;
CODE_01ACDA:          CMP RAM_SpriteYLo,X                 ;; 01ACDA : D5 D8       ;
CODE_01ACDC:          PHP                                 ;; 01ACDC : 08          ;
CODE_01ACDD:          LDA.W RAM_ScreenBndryYHi            ;; 01ACDD : AD 1D 00    ;
CODE_01ACE0:          LSR $00                             ;; 01ACE0 : 46 00       ;
CODE_01ACE2:          ADC.W SpriteOffScreen2,Y            ;; 01ACE2 : 79 0F AC    ;
CODE_01ACE5:          PLP                                 ;; 01ACE5 : 28          ;
CODE_01ACE6:          SBC.W RAM_SpriteYHi,X               ;; 01ACE6 : FD D4 14    ;
CODE_01ACE9:          STA $00                             ;; 01ACE9 : 85 00       ;
CODE_01ACEB:          LDY $01                             ;; 01ACEB : A4 01       ;
CODE_01ACED:          BEQ CODE_01ACF3                     ;; 01ACED : F0 04       ;
CODE_01ACEF:          EOR.B #$80                          ;; 01ACEF : 49 80       ;
CODE_01ACF1:          STA $00                             ;; 01ACF1 : 85 00       ;
CODE_01ACF3:          LDA $00                             ;; 01ACF3 : A5 00       ;
CODE_01ACF5:          BPL Return01ACA4                    ;; 01ACF5 : 10 AD       ;
CODE_01ACF7:          BMI OffScrEraseSprite               ;; 01ACF7 : 30 87       ;
GetRand:              PHY                                 ;; ?QPWZ? : 5A          ;
CODE_01ACFA:          LDY.B #$01                          ;; 01ACFA : A0 01       ;
CODE_01ACFC:          JSL.L CODE_01AD07                   ;; 01ACFC : 22 07 AD 01 ;
CODE_01AD00:          DEY                                 ;; 01AD00 : 88          ;
CODE_01AD01:          JSL.L CODE_01AD07                   ;; 01AD01 : 22 07 AD 01 ;
CODE_01AD05:          PLY                                 ;; 01AD05 : 7A          ;
Return01AD06:         RTL                                 ;; ?QPWZ? : 6B          ; Return 
                                                          ;;                      ;
CODE_01AD07:          LDA.W $148B                         ;; 01AD07 : AD 8B 14    ;
CODE_01AD0A:          ASL                                 ;; 01AD0A : 0A          ;
CODE_01AD0B:          ASL                                 ;; 01AD0B : 0A          ;
CODE_01AD0C:          SEC                                 ;; 01AD0C : 38          ;
CODE_01AD0D:          ADC.W $148B                         ;; 01AD0D : 6D 8B 14    ;
CODE_01AD10:          STA.W $148B                         ;; 01AD10 : 8D 8B 14    ;
CODE_01AD13:          ASL.W $148C                         ;; 01AD13 : 0E 8C 14    ;
CODE_01AD16:          LDA.B #$20                          ;; 01AD16 : A9 20       ;
CODE_01AD18:          BIT.W $148C                         ;; 01AD18 : 2C 8C 14    ;
CODE_01AD1B:          BCC CODE_01AD21                     ;; 01AD1B : 90 04       ;
CODE_01AD1D:          BEQ CODE_01AD26                     ;; 01AD1D : F0 07       ;
CODE_01AD1F:          BNE CODE_01AD23                     ;; 01AD1F : D0 02       ;
CODE_01AD21:          BNE CODE_01AD26                     ;; 01AD21 : D0 03       ;
CODE_01AD23:          INC.W $148C                         ;; 01AD23 : EE 8C 14    ;
CODE_01AD26:          LDA.W $148C                         ;; 01AD26 : AD 8C 14    ;
CODE_01AD29:          EOR.W $148B                         ;; 01AD29 : 4D 8B 14    ;
CODE_01AD2C:          STA.W RAM_RandomByte1,Y             ;; 01AD2C : 99 8D 14    ;
Return01AD2F:         RTL                                 ;; ?QPWZ? : 6B          ; Return 
                                                          ;;                      ;
SubHorizPos:          LDY.B #$00                          ;; ?QPWZ? : A0 00       ;
CODE_01AD32:          LDA $D1                             ;; 01AD32 : A5 D1       ;
CODE_01AD34:          SEC                                 ;; 01AD34 : 38          ;
CODE_01AD35:          SBC RAM_SpriteXLo,X                 ;; 01AD35 : F5 E4       ;
CODE_01AD37:          STA $0F                             ;; 01AD37 : 85 0F       ;
CODE_01AD39:          LDA $D2                             ;; 01AD39 : A5 D2       ;
CODE_01AD3B:          SBC.W RAM_SpriteXHi,X               ;; 01AD3B : FD E0 14    ;
CODE_01AD3E:          BPL Return01AD41                    ;; 01AD3E : 10 01       ;
CODE_01AD40:          INY                                 ;; 01AD40 : C8          ;
Return01AD41:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01AD42:          LDY.B #$00                          ;; 01AD42 : A0 00       ;
CODE_01AD44:          LDA $D3                             ;; 01AD44 : A5 D3       ;
CODE_01AD46:          SEC                                 ;; 01AD46 : 38          ;
CODE_01AD47:          SBC RAM_SpriteYLo,X                 ;; 01AD47 : F5 D8       ;
CODE_01AD49:          STA $0E                             ;; 01AD49 : 85 0E       ;
CODE_01AD4B:          LDA $D4                             ;; 01AD4B : A5 D4       ;
CODE_01AD4D:          SBC.W RAM_SpriteYHi,X               ;; 01AD4D : FD D4 14    ;
CODE_01AD50:          BPL Return01AD53                    ;; 01AD50 : 10 01       ;
CODE_01AD52:          INY                                 ;; 01AD52 : C8          ;
Return01AD53:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
DATA_01AD54:          .db $FF,$FF,$FF,$FF,$FF             ;; 01AD54               ;
                                                          ;;                      ;
InitFlying?Block:     LDA RAM_SpriteXLo,X                 ;; ?QPWZ? : B5 E4       ;
CODE_01AD5B:          LSR                                 ;; 01AD5B : 4A          ;
CODE_01AD5C:          LSR                                 ;; 01AD5C : 4A          ;
CODE_01AD5D:          LSR                                 ;; 01AD5D : 4A          ;
CODE_01AD5E:          LSR                                 ;; 01AD5E : 4A          ;
CODE_01AD5F:          AND.B #$03                          ;; 01AD5F : 29 03       ;
CODE_01AD61:          STA.W $151C,X                       ;; 01AD61 : 9D 1C 15    ;
CODE_01AD64:          INC.W RAM_SpriteDir,X               ;; 01AD64 : FE 7C 15    ;
Return01AD67:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
DATA_01AD68:          .db $FF,$01                         ;; 01AD68               ;
                                                          ;;                      ;
DATA_01AD6A:          .db $F4,$0C                         ;; 01AD6A               ;
                                                          ;;                      ;
DATA_01AD6C:          .db $F0,$10                         ;; 01AD6C               ;
                                                          ;;                      ;
Flying?Block:         LDA.W $163E,X                       ;; ?QPWZ? : BD 3E 16    ;
CODE_01AD71:          BEQ CODE_01AD80                     ;; 01AD71 : F0 0D       ;
CODE_01AD73:          STZ.W RAM_SprOAMIndex,X             ;; 01AD73 : 9E EA 15    ;
CODE_01AD76:          LDA.W RAM_OnYoshi                   ;; 01AD76 : AD 7A 18    ;
CODE_01AD79:          BNE CODE_01AD80                     ;; 01AD79 : D0 05       ;
CODE_01AD7B:          LDA.B #$04                          ;; 01AD7B : A9 04       ;
CODE_01AD7D:          STA.W RAM_SprOAMIndex,X             ;; 01AD7D : 9D EA 15    ;
CODE_01AD80:          JSR.W SubSprGfx2Entry1              ;; 01AD80 : 20 0D 9F    ;
CODE_01AD83:          LDY.W RAM_SprOAMIndex,X             ;; 01AD83 : BC EA 15    ; Y = Index into sprite OAM 
CODE_01AD86:          LDA.W OAM_DispY,Y                   ;; 01AD86 : B9 01 03    ;
CODE_01AD89:          DEC A                               ;; 01AD89 : 3A          ;
CODE_01AD8A:          STA.W OAM_DispY,Y                   ;; 01AD8A : 99 01 03    ;
CODE_01AD8D:          STZ.W $1528,X                       ;; 01AD8D : 9E 28 15    ;
CODE_01AD90:          LDA RAM_SpriteState,X               ;; 01AD90 : B5 C2       ;
CODE_01AD92:          BNE CODE_01ADF8                     ;; 01AD92 : D0 64       ;
CODE_01AD94:          JSR.W CODE_019E95                   ;; 01AD94 : 20 95 9E    ;
CODE_01AD97:          LDA RAM_SpritesLocked               ;; 01AD97 : A5 9D       ; \ Branch if sprites locked 
CODE_01AD99:          BNE CODE_01ADF8                     ;; 01AD99 : D0 5D       ; / 
CODE_01AD9B:          LDA RAM_FrameCounter                ;; 01AD9B : A5 13       ;
CODE_01AD9D:          AND.B #$01                          ;; 01AD9D : 29 01       ;
CODE_01AD9F:          BNE CODE_01ADB7                     ;; 01AD9F : D0 16       ;
CODE_01ADA1:          LDA.W $1594,X                       ;; 01ADA1 : BD 94 15    ;
CODE_01ADA4:          AND.B #$01                          ;; 01ADA4 : 29 01       ;
CODE_01ADA6:          TAY                                 ;; 01ADA6 : A8          ;
CODE_01ADA7:          LDA RAM_SpriteSpeedY,X              ;; 01ADA7 : B5 AA       ;
CODE_01ADA9:          CLC                                 ;; 01ADA9 : 18          ;
CODE_01ADAA:          ADC.W DATA_01AD68,Y                 ;; 01ADAA : 79 68 AD    ;
CODE_01ADAD:          STA RAM_SpriteSpeedY,X              ;; 01ADAD : 95 AA       ;
CODE_01ADAF:          CMP.W DATA_01AD6A,Y                 ;; 01ADAF : D9 6A AD    ;
CODE_01ADB2:          BNE CODE_01ADB7                     ;; 01ADB2 : D0 03       ;
CODE_01ADB4:          INC.W $1594,X                       ;; 01ADB4 : FE 94 15    ;
CODE_01ADB7:          JSR.W SubSprYPosNoGrvty             ;; 01ADB7 : 20 D8 AB    ;
CODE_01ADBA:          LDA RAM_SpriteNum,X                 ;; 01ADBA : B5 9E       ;
CODE_01ADBC:          CMP.B #$83                          ;; 01ADBC : C9 83       ;
CODE_01ADBE:          BEQ CODE_01ADE8                     ;; 01ADBE : F0 28       ;
CODE_01ADC0:          LDA.W $1540,X                       ;; 01ADC0 : BD 40 15    ;
CODE_01ADC3:          BNE CODE_01ADE6                     ;; 01ADC3 : D0 21       ;
CODE_01ADC5:          LDA RAM_FrameCounter                ;; 01ADC5 : A5 13       ;
CODE_01ADC7:          AND.B #$03                          ;; 01ADC7 : 29 03       ;
CODE_01ADC9:          BNE CODE_01ADE6                     ;; 01ADC9 : D0 1B       ;
CODE_01ADCB:          LDA.W $1534,X                       ;; 01ADCB : BD 34 15    ;
CODE_01ADCE:          AND.B #$01                          ;; 01ADCE : 29 01       ;
CODE_01ADD0:          TAY                                 ;; 01ADD0 : A8          ;
CODE_01ADD1:          LDA RAM_SpriteSpeedX,X              ;; 01ADD1 : B5 B6       ;
CODE_01ADD3:          CLC                                 ;; 01ADD3 : 18          ;
CODE_01ADD4:          ADC.W DATA_01AD68,Y                 ;; 01ADD4 : 79 68 AD    ;
CODE_01ADD7:          STA RAM_SpriteSpeedX,X              ;; 01ADD7 : 95 B6       ;
CODE_01ADD9:          CMP.W DATA_01AD6C,Y                 ;; 01ADD9 : D9 6C AD    ;
CODE_01ADDC:          BNE CODE_01ADE6                     ;; 01ADDC : D0 08       ;
CODE_01ADDE:          INC.W $1534,X                       ;; 01ADDE : FE 34 15    ;
CODE_01ADE1:          LDA.B #$20                          ;; 01ADE1 : A9 20       ;
CODE_01ADE3:          STA.W $1540,X                       ;; 01ADE3 : 9D 40 15    ;
CODE_01ADE6:          BRA CODE_01ADEC                     ;; 01ADE6 : 80 04       ;
                                                          ;;                      ;
CODE_01ADE8:          LDA.B #$F4                          ;; 01ADE8 : A9 F4       ;
CODE_01ADEA:          STA RAM_SpriteSpeedX,X              ;; 01ADEA : 95 B6       ;
CODE_01ADEC:          JSR.W SubSprXPosNoGrvty             ;; 01ADEC : 20 CC AB    ;
CODE_01ADEF:          LDA.W $1491                         ;; 01ADEF : AD 91 14    ;
CODE_01ADF2:          STA.W $1528,X                       ;; 01ADF2 : 9D 28 15    ;
CODE_01ADF5:          INC.W $1570,X                       ;; 01ADF5 : FE 70 15    ;
CODE_01ADF8:          JSR.W SubSprSprInteract             ;; 01ADF8 : 20 0D A4    ;
CODE_01ADFB:          JSR.W CODE_01B457                   ;; 01ADFB : 20 57 B4    ;
CODE_01ADFE:          JSR.W SubOffscreen0Bnk1             ;; 01ADFE : 20 31 AC    ;
CODE_01AE01:          LDA.W $1558,X                       ;; 01AE01 : BD 58 15    ;
CODE_01AE04:          CMP.B #$08                          ;; 01AE04 : C9 08       ;
CODE_01AE06:          BNE CODE_01AE5E                     ;; 01AE06 : D0 56       ;
CODE_01AE08:          LDY RAM_SpriteState,X               ;; 01AE08 : B4 C2       ;
CODE_01AE0A:          CPY.B #$02                          ;; 01AE0A : C0 02       ;
CODE_01AE0C:          BEQ CODE_01AE5E                     ;; 01AE0C : F0 50       ;
CODE_01AE0E:          PHA                                 ;; 01AE0E : 48          ;
CODE_01AE0F:          INC RAM_SpriteState,X               ;; 01AE0F : F6 C2       ;
CODE_01AE11:          LDA.B #$50                          ;; 01AE11 : A9 50       ;
CODE_01AE13:          STA.W $163E,X                       ;; 01AE13 : 9D 3E 16    ;
CODE_01AE16:          LDA RAM_SpriteXLo,X                 ;; 01AE16 : B5 E4       ;
CODE_01AE18:          STA RAM_BlockYLo                    ;; 01AE18 : 85 9A       ;
CODE_01AE1A:          LDA.W RAM_SpriteXHi,X               ;; 01AE1A : BD E0 14    ;
CODE_01AE1D:          STA RAM_BlockYHi                    ;; 01AE1D : 85 9B       ;
CODE_01AE1F:          LDA RAM_SpriteYLo,X                 ;; 01AE1F : B5 D8       ;
CODE_01AE21:          STA RAM_BlockXLo                    ;; 01AE21 : 85 98       ;
CODE_01AE23:          LDA.W RAM_SpriteYHi,X               ;; 01AE23 : BD D4 14    ;
CODE_01AE26:          STA RAM_BlockXHi                    ;; 01AE26 : 85 99       ;
CODE_01AE28:          LDA.B #$FF                          ;; 01AE28 : A9 FF       ; \ Set to permanently erase sprite 
CODE_01AE2A:          STA.W RAM_SprIndexInLvl,X           ;; 01AE2A : 9D 1A 16    ; / 
CODE_01AE2D:          LDY.W $151C,X                       ;; 01AE2D : BC 1C 15    ;
CODE_01AE30:          LDA RAM_MarioPowerUp                ;; 01AE30 : A5 19       ;
CODE_01AE32:          BNE CODE_01AE38                     ;; 01AE32 : D0 04       ;
CODE_01AE34:          INY                                 ;; 01AE34 : C8          ;
CODE_01AE35:          INY                                 ;; 01AE35 : C8          ;
CODE_01AE36:          INY                                 ;; 01AE36 : C8          ;
CODE_01AE37:          INY                                 ;; 01AE37 : C8          ;
CODE_01AE38:          LDA.W DATA_01AE88,Y                 ;; 01AE38 : B9 88 AE    ;
CODE_01AE3B:          STA $05                             ;; 01AE3B : 85 05       ;
CODE_01AE3D:          PHB                                 ;; 01AE3D : 8B          ;
CODE_01AE3E:          LDA.B #$02                          ;; 01AE3E : A9 02       ;
CODE_01AE40:          PHA                                 ;; 01AE40 : 48          ;
CODE_01AE41:          PLB                                 ;; 01AE41 : AB          ;
CODE_01AE42:          PHX                                 ;; 01AE42 : DA          ;
CODE_01AE43:          JSL.L CODE_02887D                   ;; 01AE43 : 22 7D 88 02 ;
CODE_01AE47:          PLX                                 ;; 01AE47 : FA          ;
CODE_01AE48:          LDY.W $185E                         ;; 01AE48 : AC 5E 18    ;
CODE_01AE4B:          LDA.B #$01                          ;; 01AE4B : A9 01       ;
CODE_01AE4D:          STA.W $1528,Y                       ;; 01AE4D : 99 28 15    ;
CODE_01AE50:          LDA.W RAM_SpriteNum,Y               ;; 01AE50 : B9 9E 00    ;
CODE_01AE53:          CMP.B #$75                          ;; 01AE53 : C9 75       ;
CODE_01AE55:          BNE CODE_01AE5C                     ;; 01AE55 : D0 05       ;
CODE_01AE57:          LDA.B #$FF                          ;; 01AE57 : A9 FF       ;
CODE_01AE59:          STA.W RAM_SpriteState,Y             ;; 01AE59 : 99 C2 00    ;
CODE_01AE5C:          PLB                                 ;; 01AE5C : AB          ;
CODE_01AE5D:          PLA                                 ;; 01AE5D : 68          ;
CODE_01AE5E:          LSR                                 ;; 01AE5E : 4A          ;
CODE_01AE5F:          TAY                                 ;; 01AE5F : A8          ;
CODE_01AE60:          LDA.W DATA_01AE7F,Y                 ;; 01AE60 : B9 7F AE    ;
CODE_01AE63:          STA $00                             ;; 01AE63 : 85 00       ;
CODE_01AE65:          LDY.W RAM_SprOAMIndex,X             ;; 01AE65 : BC EA 15    ; Y = Index into sprite OAM 
CODE_01AE68:          LDA.W OAM_DispY,Y                   ;; 01AE68 : B9 01 03    ;
CODE_01AE6B:          SEC                                 ;; 01AE6B : 38          ;
CODE_01AE6C:          SBC $00                             ;; 01AE6C : E5 00       ;
CODE_01AE6E:          STA.W OAM_DispY,Y                   ;; 01AE6E : 99 01 03    ;
CODE_01AE71:          LDA RAM_SpriteState,X               ;; 01AE71 : B5 C2       ;
CODE_01AE73:          CMP.B #$01                          ;; 01AE73 : C9 01       ;
CODE_01AE75:          LDA.B #$2A                          ;; 01AE75 : A9 2A       ;
CODE_01AE77:          BCC CODE_01AE7B                     ;; 01AE77 : 90 02       ;
CODE_01AE79:          LDA.B #$2E                          ;; 01AE79 : A9 2E       ;
CODE_01AE7B:          STA.W OAM_Tile,Y                    ;; 01AE7B : 99 02 03    ;
Return01AE7E:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
DATA_01AE7F:          .db $00,$03,$05,$07,$08,$08,$07,$05 ;; 01AE7F               ;
                      .db $03                             ;; ?QPWZ?               ;
                                                          ;;                      ;
DATA_01AE88:          .db $06,$02,$04,$05,$06,$01,$01,$05 ;; 01AE88               ;
                                                          ;;                      ;
Return01AE90:         RTS                                 ;; ?QPWZ? : 60          ;
                                                          ;;                      ;
PalaceSwitch:         JSL.L CODE_02CD2D                   ;; ?QPWZ? : 22 2D CD 02 ;
Return01AE95:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
InitThwomp:           LDA RAM_SpriteYLo,X                 ;; ?QPWZ? : B5 D8       ;
CODE_01AE98:          STA.W $151C,X                       ;; 01AE98 : 9D 1C 15    ;
CODE_01AE9B:          LDA RAM_SpriteXLo,X                 ;; 01AE9B : B5 E4       ;
CODE_01AE9D:          CLC                                 ;; 01AE9D : 18          ;
CODE_01AE9E:          ADC.B #$08                          ;; 01AE9E : 69 08       ;
CODE_01AEA0:          STA RAM_SpriteXLo,X                 ;; 01AEA0 : 95 E4       ;
Return01AEA2:         RTS                                 ;; ?QPWZ? : 60          ;
                                                          ;;                      ;
Thwomp:               JSR.W ThwompGfx                     ;; ?QPWZ? : 20 54 AF    ;
CODE_01AEA6:          LDA.W $14C8,X                       ;; 01AEA6 : BD C8 14    ;
CODE_01AEA9:          CMP.B #$08                          ;; 01AEA9 : C9 08       ;
CODE_01AEAB:          BNE Return01AEA2                    ;; 01AEAB : D0 F5       ;
CODE_01AEAD:          LDA RAM_SpritesLocked               ;; 01AEAD : A5 9D       ; \ Branch if sprites locked 
CODE_01AEAF:          BNE Return01AEA2                    ;; 01AEAF : D0 F1       ; / 
CODE_01AEB1:          JSR.W SubOffscreen0Bnk1             ;; 01AEB1 : 20 31 AC    ;
CODE_01AEB4:          JSR.W MarioSprInteractRt            ;; 01AEB4 : 20 E4 A7    ;
CODE_01AEB7:          LDA RAM_SpriteState,X               ;; 01AEB7 : B5 C2       ;
CODE_01AEB9:          JSL.L ExecutePtr                    ;; 01AEB9 : 22 DF 86 00 ;
                                                          ;;                      ;
ThwompStatePtrs:      .dw CODE_01AEC3                     ;; ?QPWZ? : C3 AE       ;
                      .dw CODE_01AEFA                     ;; ?QPWZ? : FA AE       ;
                      .dw CODE_01AF24                     ;; ?QPWZ? : 24 AF       ;
                                                          ;;                      ;
CODE_01AEC3:          LDA.W RAM_OffscreenVert,X           ;; 01AEC3 : BD 6C 18    ;
CODE_01AEC6:          BNE CODE_01AEEE                     ;; 01AEC6 : D0 26       ;
CODE_01AEC8:          LDA.W RAM_OffscreenHorz,X           ;; 01AEC8 : BD A0 15    ;
CODE_01AECB:          BNE Return01AEF9                    ;; 01AECB : D0 2C       ;
CODE_01AECD:          JSR.W SubHorizPos                   ;; 01AECD : 20 30 AD    ;
CODE_01AED0:          TYA                                 ;; 01AED0 : 98          ;
CODE_01AED1:          STA.W RAM_SpriteDir,X               ;; 01AED1 : 9D 7C 15    ;
CODE_01AED4:          STZ.W $1528,X                       ;; 01AED4 : 9E 28 15    ;
CODE_01AED7:          LDA $0F                             ;; 01AED7 : A5 0F       ;
CODE_01AED9:          CLC                                 ;; 01AED9 : 18          ;
CODE_01AEDA:          ADC.B #$40                          ;; 01AEDA : 69 40       ;
CODE_01AEDC:          CMP.B #$80                          ;; 01AEDC : C9 80       ;
CODE_01AEDE:          BCS CODE_01AEE5                     ;; 01AEDE : B0 05       ;
CODE_01AEE0:          LDA.B #$01                          ;; 01AEE0 : A9 01       ;
CODE_01AEE2:          STA.W $1528,X                       ;; 01AEE2 : 9D 28 15    ;
CODE_01AEE5:          LDA $0F                             ;; 01AEE5 : A5 0F       ;
CODE_01AEE7:          CLC                                 ;; 01AEE7 : 18          ;
CODE_01AEE8:          ADC.B #$24                          ;; 01AEE8 : 69 24       ;
CODE_01AEEA:          CMP.B #$50                          ;; 01AEEA : C9 50       ;
CODE_01AEEC:          BCS Return01AEF9                    ;; 01AEEC : B0 0B       ;
CODE_01AEEE:          LDA.B #$02                          ;; 01AEEE : A9 02       ;
CODE_01AEF0:          STA.W $1528,X                       ;; 01AEF0 : 9D 28 15    ;
CODE_01AEF3:          INC RAM_SpriteState,X               ;; 01AEF3 : F6 C2       ;
CODE_01AEF5:          LDA.B #$00                          ;; 01AEF5 : A9 00       ;
CODE_01AEF7:          STA RAM_SpriteSpeedY,X              ;; 01AEF7 : 95 AA       ;
Return01AEF9:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01AEFA:          JSR.W SubSprYPosNoGrvty             ;; 01AEFA : 20 D8 AB    ;
CODE_01AEFD:          LDA RAM_SpriteSpeedY,X              ;; 01AEFD : B5 AA       ;
CODE_01AEFF:          CMP.B #$3E                          ;; 01AEFF : C9 3E       ;
CODE_01AF01:          BCS CODE_01AF07                     ;; 01AF01 : B0 04       ;
CODE_01AF03:          ADC.B #$04                          ;; 01AF03 : 69 04       ;
CODE_01AF05:          STA RAM_SpriteSpeedY,X              ;; 01AF05 : 95 AA       ;
CODE_01AF07:          JSR.W CODE_019140                   ;; 01AF07 : 20 40 91    ;
CODE_01AF0A:          JSR.W IsOnGround                    ;; 01AF0A : 20 0E 80    ;
CODE_01AF0D:          BEQ Return01AF23                    ;; 01AF0D : F0 14       ;
CODE_01AF0F:          JSR.W SetSomeYSpeed??               ;; 01AF0F : 20 04 9A    ;
CODE_01AF12:          LDA.B #$18                          ;; 01AF12 : A9 18       ; \ Set ground shake timer 
CODE_01AF14:          STA.W RAM_ShakeGrndTimer            ;; 01AF14 : 8D 87 18    ; / 
CODE_01AF17:          LDA.B #$09                          ;; 01AF17 : A9 09       ;
CODE_01AF19:          STA.W $1DFC                         ;; 01AF19 : 8D FC 1D    ; / Play sound effect 
CODE_01AF1C:          LDA.B #$40                          ;; 01AF1C : A9 40       ;
CODE_01AF1E:          STA.W $1540,X                       ;; 01AF1E : 9D 40 15    ;
CODE_01AF21:          INC RAM_SpriteState,X               ;; 01AF21 : F6 C2       ;
Return01AF23:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01AF24:          LDA.W $1540,X                       ;; 01AF24 : BD 40 15    ;
CODE_01AF27:          BNE Return01AF3F                    ;; 01AF27 : D0 16       ;
CODE_01AF29:          STZ.W $1528,X                       ;; 01AF29 : 9E 28 15    ;
CODE_01AF2C:          LDA RAM_SpriteYLo,X                 ;; 01AF2C : B5 D8       ;
CODE_01AF2E:          CMP.W $151C,X                       ;; 01AF2E : DD 1C 15    ;
CODE_01AF31:          BNE CODE_01AF38                     ;; 01AF31 : D0 05       ;
CODE_01AF33:          LDA.B #$00                          ;; 01AF33 : A9 00       ;
CODE_01AF35:          STA RAM_SpriteState,X               ;; 01AF35 : 95 C2       ;
Return01AF37:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01AF38:          LDA.B #$F0                          ;; 01AF38 : A9 F0       ;
CODE_01AF3A:          STA RAM_SpriteSpeedY,X              ;; 01AF3A : 95 AA       ;
CODE_01AF3C:          JSR.W SubSprYPosNoGrvty             ;; 01AF3C : 20 D8 AB    ;
Return01AF3F:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
ThwompDispX:          .db $FC,$04,$FC,$04,$00             ;; ?QPWZ?               ;
                                                          ;;                      ;
ThwompDispY:          .db $00,$00,$10,$10,$08             ;; ?QPWZ?               ;
                                                          ;;                      ;
ThwompTiles:          .db $8E,$8E,$AE,$AE,$C8             ;; ?QPWZ?               ;
                                                          ;;                      ;
ThwompGfxProp:        .db $03,$43,$03,$43,$03             ;; ?QPWZ?               ;
                                                          ;;                      ;
ThwompGfx:            JSR.W GetDrawInfoBnk1               ;; ?QPWZ? : 20 65 A3    ;
CODE_01AF57:          LDA.W $1528,X                       ;; 01AF57 : BD 28 15    ;
CODE_01AF5A:          STA $02                             ;; 01AF5A : 85 02       ;
CODE_01AF5C:          PHX                                 ;; 01AF5C : DA          ;
CODE_01AF5D:          LDX.B #$03                          ;; 01AF5D : A2 03       ;
CODE_01AF5F:          CMP.B #$00                          ;; 01AF5F : C9 00       ;
CODE_01AF61:          BEQ CODE_01AF64                     ;; 01AF61 : F0 01       ;
CODE_01AF63:          INX                                 ;; 01AF63 : E8          ;
CODE_01AF64:          LDA $00                             ;; 01AF64 : A5 00       ;
CODE_01AF66:          CLC                                 ;; 01AF66 : 18          ;
CODE_01AF67:          ADC.W ThwompDispX,X                 ;; 01AF67 : 7D 40 AF    ;
CODE_01AF6A:          STA.W OAM_DispX,Y                   ;; 01AF6A : 99 00 03    ;
CODE_01AF6D:          LDA $01                             ;; 01AF6D : A5 01       ;
CODE_01AF6F:          CLC                                 ;; 01AF6F : 18          ;
CODE_01AF70:          ADC.W ThwompDispY,X                 ;; 01AF70 : 7D 45 AF    ;
CODE_01AF73:          STA.W OAM_DispY,Y                   ;; 01AF73 : 99 01 03    ;
CODE_01AF76:          LDA.W ThwompGfxProp,X               ;; 01AF76 : BD 4F AF    ;
CODE_01AF79:          ORA $64                             ;; 01AF79 : 05 64       ;
CODE_01AF7B:          STA.W OAM_Prop,Y                    ;; 01AF7B : 99 03 03    ;
CODE_01AF7E:          LDA.W ThwompTiles,X                 ;; 01AF7E : BD 4A AF    ;
CODE_01AF81:          CPX.B #$04                          ;; 01AF81 : E0 04       ;
CODE_01AF83:          BNE CODE_01AF8F                     ;; 01AF83 : D0 0A       ;
CODE_01AF85:          PHX                                 ;; 01AF85 : DA          ;
CODE_01AF86:          LDX $02                             ;; 01AF86 : A6 02       ;
CODE_01AF88:          CPX.B #$02                          ;; 01AF88 : E0 02       ;
CODE_01AF8A:          BNE CODE_01AF8E                     ;; 01AF8A : D0 02       ;
CODE_01AF8C:          LDA.B #$CA                          ;; 01AF8C : A9 CA       ;
CODE_01AF8E:          PLX                                 ;; 01AF8E : FA          ;
CODE_01AF8F:          STA.W OAM_Tile,Y                    ;; 01AF8F : 99 02 03    ;
CODE_01AF92:          INY                                 ;; 01AF92 : C8          ;
CODE_01AF93:          INY                                 ;; 01AF93 : C8          ;
CODE_01AF94:          INY                                 ;; 01AF94 : C8          ;
CODE_01AF95:          INY                                 ;; 01AF95 : C8          ;
CODE_01AF96:          DEX                                 ;; 01AF96 : CA          ;
CODE_01AF97:          BPL CODE_01AF64                     ;; 01AF97 : 10 CB       ;
CODE_01AF99:          PLX                                 ;; 01AF99 : FA          ;
CODE_01AF9A:          LDA.B #$04                          ;; 01AF9A : A9 04       ;
CODE_01AF9C:          JMP.W CODE_01B37E                   ;; 01AF9C : 4C 7E B3    ;
                                                          ;;                      ;
Thwimp:               LDA.W $14C8,X                       ;; ?QPWZ? : BD C8 14    ;
CODE_01AFA2:          CMP.B #$08                          ;; 01AFA2 : C9 08       ;
CODE_01AFA4:          BNE CODE_01B006                     ;; 01AFA4 : D0 60       ;
CODE_01AFA6:          LDA RAM_SpritesLocked               ;; 01AFA6 : A5 9D       ; \ Branch if sprites locked 
CODE_01AFA8:          BNE CODE_01B006                     ;; 01AFA8 : D0 5C       ; / 
CODE_01AFAA:          JSR.W SubOffscreen0Bnk1             ;; 01AFAA : 20 31 AC    ;
CODE_01AFAD:          JSR.W MarioSprInteractRt            ;; 01AFAD : 20 E4 A7    ;
CODE_01AFB0:          JSR.W SubSprXPosNoGrvty             ;; 01AFB0 : 20 CC AB    ;
CODE_01AFB3:          JSR.W SubSprYPosNoGrvty             ;; 01AFB3 : 20 D8 AB    ;
CODE_01AFB6:          JSR.W CODE_019140                   ;; 01AFB6 : 20 40 91    ;
CODE_01AFB9:          LDA RAM_SpriteSpeedY,X              ;; 01AFB9 : B5 AA       ;
CODE_01AFBB:          BMI CODE_01AFC3                     ;; 01AFBB : 30 06       ;
CODE_01AFBD:          CMP.B #$40                          ;; 01AFBD : C9 40       ;
CODE_01AFBF:          BCS CODE_01AFC8                     ;; 01AFBF : B0 07       ;
CODE_01AFC1:          ADC.B #$05                          ;; 01AFC1 : 69 05       ;
CODE_01AFC3:          CLC                                 ;; 01AFC3 : 18          ;
CODE_01AFC4:          ADC.B #$03                          ;; 01AFC4 : 69 03       ;
CODE_01AFC6:          BRA CODE_01AFCA                     ;; 01AFC6 : 80 02       ;
                                                          ;;                      ;
CODE_01AFC8:          LDA.B #$40                          ;; 01AFC8 : A9 40       ;
CODE_01AFCA:          STA RAM_SpriteSpeedY,X              ;; 01AFCA : 95 AA       ;
CODE_01AFCC:          JSR.W IsTouchingCeiling             ;; 01AFCC : 20 14 80    ; \ If touching ceiling, 
CODE_01AFCF:          BEQ CODE_01AFD5                     ;; 01AFCF : F0 04       ;  | 
CODE_01AFD1:          LDA.B #$10                          ;; 01AFD1 : A9 10       ;  | Y speed = #$10 
CODE_01AFD3:          STA RAM_SpriteSpeedY,X              ;; 01AFD3 : 95 AA       ; / 
CODE_01AFD5:          JSR.W IsOnGround                    ;; 01AFD5 : 20 0E 80    ;
CODE_01AFD8:          BEQ CODE_01B006                     ;; 01AFD8 : F0 2C       ;
CODE_01AFDA:          JSR.W SetSomeYSpeed??               ;; 01AFDA : 20 04 9A    ;
CODE_01AFDD:          STZ RAM_SpriteSpeedX,X              ;; 01AFDD : 74 B6       ; \ Sprite Speed = 0 
CODE_01AFDF:          STZ RAM_SpriteSpeedY,X              ;; 01AFDF : 74 AA       ; / 
CODE_01AFE1:          LDA.W $1540,X                       ;; 01AFE1 : BD 40 15    ;
CODE_01AFE4:          BEQ CODE_01AFFC                     ;; 01AFE4 : F0 16       ;
CODE_01AFE6:          DEC A                               ;; 01AFE6 : 3A          ;
CODE_01AFE7:          BNE CODE_01B006                     ;; 01AFE7 : D0 1D       ;
CODE_01AFE9:          LDA.B #$A0                          ;; 01AFE9 : A9 A0       ;
CODE_01AFEB:          STA RAM_SpriteSpeedY,X              ;; 01AFEB : 95 AA       ;
CODE_01AFED:          INC RAM_SpriteState,X               ;; 01AFED : F6 C2       ;
CODE_01AFEF:          LDA RAM_SpriteState,X               ;; 01AFEF : B5 C2       ;
CODE_01AFF1:          LSR                                 ;; 01AFF1 : 4A          ;
CODE_01AFF2:          LDA.B #$10                          ;; 01AFF2 : A9 10       ;
CODE_01AFF4:          BCC CODE_01AFF8                     ;; 01AFF4 : 90 02       ;
CODE_01AFF6:          LDA.B #$F0                          ;; 01AFF6 : A9 F0       ;
CODE_01AFF8:          STA RAM_SpriteSpeedX,X              ;; 01AFF8 : 95 B6       ;
CODE_01AFFA:          BRA CODE_01B006                     ;; 01AFFA : 80 0A       ;
                                                          ;;                      ;
CODE_01AFFC:          LDA.B #$01                          ;; 01AFFC : A9 01       ;
CODE_01AFFE:          STA.W $1DF9                         ;; 01AFFE : 8D F9 1D    ; / Play sound effect 
CODE_01B001:          LDA.B #$40                          ;; 01B001 : A9 40       ;
CODE_01B003:          STA.W $1540,X                       ;; 01B003 : 9D 40 15    ;
CODE_01B006:          LDA.B #$01                          ;; 01B006 : A9 01       ;
CODE_01B008:          JMP.W SubSprGfx0Entry0              ;; 01B008 : 4C F3 9C    ;
                                                          ;;                      ;
InitVerticalFish:     JSR.W FaceMario                     ;; ?QPWZ? : 20 7C 85    ;
CODE_01B00E:          INC.W $151C,X                       ;; 01B00E : FE 1C 15    ;
Return01B011:         RTS                                 ;; ?QPWZ? : 60          ;
                                                          ;;                      ;
                                                          ;;                      ;
DATA_01B012:          .db $10,$F0                         ;; 01B012               ;
                                                          ;;                      ;
InitFish:             JSR.W SubHorizPos                   ;; ?QPWZ? : 20 30 AD    ;
CODE_01B017:          LDA.W DATA_01B012,Y                 ;; 01B017 : B9 12 B0    ;
CODE_01B01A:          STA RAM_SpriteSpeedX,X              ;; 01B01A : 95 B6       ;
Return01B01C:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
DATA_01B01D:          .db $08,$F8                         ;; 01B01D               ;
                                                          ;;                      ;
DATA_01B01F:          .db $00,$00,$08,$F8                 ;; 01B01F               ;
                                                          ;;                      ;
DATA_01B023:          .db $F0,$10                         ;; 01B023               ;
                                                          ;;                      ;
DATA_01B025:          .db $E0,$E8,$D0,$D8                 ;; 01B025               ;
                                                          ;;                      ;
DATA_01B029:          .db $08,$F8,$10,$F0,$04,$FC,$14,$EC ;; 01B029               ;
DATA_01B031:          .db $03,$0C                         ;; 01B031               ;
                                                          ;;                      ;
Fish:                 LDA.W $14C8,X                       ;; ?QPWZ? : BD C8 14    ;
CODE_01B036:          CMP.B #$08                          ;; 01B036 : C9 08       ;
CODE_01B038:          BNE CODE_01B03E                     ;; 01B038 : D0 04       ;
CODE_01B03A:          LDA RAM_SpritesLocked               ;; 01B03A : A5 9D       ;
CODE_01B03C:          BEQ CODE_01B041                     ;; 01B03C : F0 03       ;
CODE_01B03E:          JMP.W CODE_01B10A                   ;; 01B03E : 4C 0A B1    ;
                                                          ;;                      ;
CODE_01B041:          JSR.W SetAnimationFrame             ;; 01B041 : 20 5F 8E    ;
CODE_01B044:          LDA.W $164A,X                       ;; 01B044 : BD 4A 16    ;
CODE_01B047:          BNE CODE_01B0A7                     ;; 01B047 : D0 5E       ;
CODE_01B049:          JSR.W SubUpdateSprPos               ;; 01B049 : 20 32 90    ;
CODE_01B04C:          JSR.W IsTouchingObjSide             ;; 01B04C : 20 08 80    ;
CODE_01B04F:          BEQ CODE_01B054                     ;; 01B04F : F0 03       ;
CODE_01B051:          JSR.W FlipSpriteDir                 ;; 01B051 : 20 98 90    ;
CODE_01B054:          JSR.W IsOnGround                    ;; 01B054 : 20 0E 80    ;
CODE_01B057:          BEQ CODE_01B09C                     ;; 01B057 : F0 43       ;
CODE_01B059:          LDA.W $190E                         ;; 01B059 : AD 0E 19    ;
CODE_01B05C:          BEQ CODE_01B062                     ;; 01B05C : F0 04       ;
CODE_01B05E:          JSL.L CODE_0284BC                   ;; 01B05E : 22 BC 84 02 ;
CODE_01B062:          JSL.L GetRand                       ;; 01B062 : 22 F9 AC 01 ;
CODE_01B066:          ADC RAM_FrameCounter                ;; 01B066 : 65 13       ;
CODE_01B068:          AND.B #$07                          ;; 01B068 : 29 07       ;
CODE_01B06A:          TAY                                 ;; 01B06A : A8          ;
CODE_01B06B:          LDA.W DATA_01B029,Y                 ;; 01B06B : B9 29 B0    ;
CODE_01B06E:          STA RAM_SpriteSpeedX,X              ;; 01B06E : 95 B6       ;
CODE_01B070:          JSL.L GetRand                       ;; 01B070 : 22 F9 AC 01 ;
CODE_01B074:          LDA.W RAM_RandomByte2               ;; 01B074 : AD 8E 14    ;
CODE_01B077:          AND.B #$03                          ;; 01B077 : 29 03       ;
CODE_01B079:          TAY                                 ;; 01B079 : A8          ;
CODE_01B07A:          LDA.W DATA_01B025,Y                 ;; 01B07A : B9 25 B0    ;
CODE_01B07D:          STA RAM_SpriteSpeedY,X              ;; 01B07D : 95 AA       ;
CODE_01B07F:          LDA.W RAM_RandomByte1               ;; 01B07F : AD 8D 14    ;
CODE_01B082:          AND.B #$40                          ;; 01B082 : 29 40       ;
CODE_01B084:          BNE CODE_01B08E                     ;; 01B084 : D0 08       ;
CODE_01B086:          LDA.W RAM_SpritePal,X               ;; 01B086 : BD F6 15    ;
CODE_01B089:          EOR.B #$80                          ;; 01B089 : 49 80       ;
CODE_01B08B:          STA.W RAM_SpritePal,X               ;; 01B08B : 9D F6 15    ;
CODE_01B08E:          JSL.L GetRand                       ;; 01B08E : 22 F9 AC 01 ;
CODE_01B092:          LDA.W RAM_RandomByte1               ;; 01B092 : AD 8D 14    ;
CODE_01B095:          AND.B #$80                          ;; 01B095 : 29 80       ;
CODE_01B097:          BNE CODE_01B09C                     ;; 01B097 : D0 03       ;
CODE_01B099:          JSR.W UpdateDirection               ;; 01B099 : 20 15 9A    ;
CODE_01B09C:          LDA.W $1602,X                       ;; 01B09C : BD 02 16    ;
CODE_01B09F:          CLC                                 ;; 01B09F : 18          ;
CODE_01B0A0:          ADC.B #$02                          ;; 01B0A0 : 69 02       ;
CODE_01B0A2:          STA.W $1602,X                       ;; 01B0A2 : 9D 02 16    ;
CODE_01B0A5:          BRA CODE_01B0EA                     ;; 01B0A5 : 80 43       ;
                                                          ;;                      ;
CODE_01B0A7:          JSR.W CODE_019140                   ;; 01B0A7 : 20 40 91    ;
CODE_01B0AA:          JSR.W UpdateDirection               ;; 01B0AA : 20 15 9A    ;
CODE_01B0AD:          ASL.W RAM_SpritePal,X               ;; 01B0AD : 1E F6 15    ;
CODE_01B0B0:          LSR.W RAM_SpritePal,X               ;; 01B0B0 : 5E F6 15    ;
CODE_01B0B3:          LDA.W RAM_SprObjStatus,X            ;; 01B0B3 : BD 88 15    ;
CODE_01B0B6:          LDY.W $151C,X                       ;; 01B0B6 : BC 1C 15    ;
CODE_01B0B9:          AND.W DATA_01B031,Y                 ;; 01B0B9 : 39 31 B0    ;
CODE_01B0BC:          BNE CODE_01B0C3                     ;; 01B0BC : D0 05       ;
CODE_01B0BE:          LDA.W $1540,X                       ;; 01B0BE : BD 40 15    ;
CODE_01B0C1:          BNE CODE_01B0CA                     ;; 01B0C1 : D0 07       ;
CODE_01B0C3:          LDA.B #$80                          ;; 01B0C3 : A9 80       ;
CODE_01B0C5:          STA.W $1540,X                       ;; 01B0C5 : 9D 40 15    ;
CODE_01B0C8:          INC RAM_SpriteState,X               ;; 01B0C8 : F6 C2       ;
CODE_01B0CA:          LDA RAM_SpriteState,X               ;; 01B0CA : B5 C2       ;
CODE_01B0CC:          AND.B #$01                          ;; 01B0CC : 29 01       ;
CODE_01B0CE:          TAY                                 ;; 01B0CE : A8          ;
CODE_01B0CF:          LDA.W $151C,X                       ;; 01B0CF : BD 1C 15    ;
CODE_01B0D2:          BEQ CODE_01B0D6                     ;; 01B0D2 : F0 02       ;
CODE_01B0D4:          INY                                 ;; 01B0D4 : C8          ;
CODE_01B0D5:          INY                                 ;; 01B0D5 : C8          ;
CODE_01B0D6:          LDA.W DATA_01B01D,Y                 ;; 01B0D6 : B9 1D B0    ;
CODE_01B0D9:          STA RAM_SpriteSpeedX,X              ;; 01B0D9 : 95 B6       ;
CODE_01B0DB:          LDA.W DATA_01B01F,Y                 ;; 01B0DB : B9 1F B0    ;
CODE_01B0DE:          STA RAM_SpriteSpeedY,X              ;; 01B0DE : 95 AA       ;
CODE_01B0E0:          JSR.W SubSprXPosNoGrvty             ;; 01B0E0 : 20 CC AB    ;
CODE_01B0E3:          AND.B #$0C                          ;; 01B0E3 : 29 0C       ;
CODE_01B0E5:          BNE CODE_01B0EA                     ;; 01B0E5 : D0 03       ;
CODE_01B0E7:          JSR.W SubSprYPosNoGrvty             ;; 01B0E7 : 20 D8 AB    ;
CODE_01B0EA:          JSR.W SubSprSprInteract             ;; 01B0EA : 20 0D A4    ;
CODE_01B0ED:          JSR.W MarioSprInteractRt            ;; 01B0ED : 20 E4 A7    ;
CODE_01B0F0:          BCC CODE_01B10A                     ;; 01B0F0 : 90 18       ;
CODE_01B0F2:          LDA.W $164A,X                       ;; 01B0F2 : BD 4A 16    ;
CODE_01B0F5:          BEQ CODE_01B107                     ;; 01B0F5 : F0 10       ;
CODE_01B0F7:          LDA.W $1490                         ;; 01B0F7 : AD 90 14    ; \ Branch if Mario has star 
CODE_01B0FA:          BNE CODE_01B107                     ;; 01B0FA : D0 0B       ; / 
CODE_01B0FC:          LDA.W RAM_OnYoshi                   ;; 01B0FC : AD 7A 18    ;
CODE_01B0FF:          BNE CODE_01B10A                     ;; 01B0FF : D0 09       ;
CODE_01B101:          JSL.L HurtMario                     ;; 01B101 : 22 B7 F5 00 ;
CODE_01B105:          BRA CODE_01B10A                     ;; 01B105 : 80 03       ;
                                                          ;;                      ;
CODE_01B107:          JSR.W CODE_01B12A                   ;; 01B107 : 20 2A B1    ;
CODE_01B10A:          LDA.W $1602,X                       ;; 01B10A : BD 02 16    ;
CODE_01B10D:          LSR                                 ;; 01B10D : 4A          ;
CODE_01B10E:          EOR.B #$01                          ;; 01B10E : 49 01       ;
CODE_01B110:          STA $00                             ;; 01B110 : 85 00       ;
CODE_01B112:          LDA.W RAM_SpritePal,X               ;; 01B112 : BD F6 15    ;
CODE_01B115:          AND.B #$FE                          ;; 01B115 : 29 FE       ;
CODE_01B117:          ORA $00                             ;; 01B117 : 05 00       ;
CODE_01B119:          STA.W RAM_SpritePal,X               ;; 01B119 : 9D F6 15    ;
CODE_01B11C:          JSR.W SubSprGfx2Entry1              ;; 01B11C : 20 0D 9F    ;
CODE_01B11F:          JSR.W SubOffscreen0Bnk1             ;; 01B11F : 20 31 AC    ;
CODE_01B122:          LSR.W RAM_SpritePal,X               ;; 01B122 : 5E F6 15    ;
CODE_01B125:          SEC                                 ;; 01B125 : 38          ;
CODE_01B126:          ROL.W RAM_SpritePal,X               ;; 01B126 : 3E F6 15    ;
Return01B129:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01B12A:          LDA.B #$10                          ;; 01B12A : A9 10       ;
CODE_01B12C:          STA.W RAM_KickImgTimer              ;; 01B12C : 8D 9A 14    ;
CODE_01B12F:          LDA.B #$03                          ;; 01B12F : A9 03       ;
CODE_01B131:          STA.W $1DF9                         ;; 01B131 : 8D F9 1D    ; / Play sound effect 
CODE_01B134:          JSR.W SubHorizPos                   ;; 01B134 : 20 30 AD    ;
CODE_01B137:          LDA.W DATA_01B023,Y                 ;; 01B137 : B9 23 B0    ;
CODE_01B13A:          STA RAM_SpriteSpeedX,X              ;; 01B13A : 95 B6       ;
CODE_01B13C:          LDA.B #$E0                          ;; 01B13C : A9 E0       ;
CODE_01B13E:          STA RAM_SpriteSpeedY,X              ;; 01B13E : 95 AA       ;
CODE_01B140:          LDA.B #$02                          ;; 01B140 : A9 02       ; \ Sprite status = Killed 
CODE_01B142:          STA.W $14C8,X                       ;; 01B142 : 9D C8 14    ; / 
CODE_01B145:          STY RAM_MarioDirection              ;; 01B145 : 84 76       ;
CODE_01B147:          LDA.B #$01                          ;; 01B147 : A9 01       ;
CODE_01B149:          JSL.L GivePoints                    ;; 01B149 : 22 E5 AC 02 ;
Return01B14D:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01B14E:          LDA RAM_FrameCounter                ;; 01B14E : A5 13       ;
CODE_01B150:          AND.B #$03                          ;; 01B150 : 29 03       ;
CODE_01B152:          ORA.W RAM_OffscreenVert,X           ;; 01B152 : 1D 6C 18    ;
CODE_01B155:          ORA RAM_SpritesLocked               ;; 01B155 : 05 9D       ;
CODE_01B157:          BNE Return01B191                    ;; 01B157 : D0 38       ;
CODE_01B159:          JSL.L GetRand                       ;; 01B159 : 22 F9 AC 01 ;
CODE_01B15D:          AND.B #$0F                          ;; 01B15D : 29 0F       ;
CODE_01B15F:          CLC                                 ;; 01B15F : 18          ;
CODE_01B160:          LDY.B #$00                          ;; 01B160 : A0 00       ;
CODE_01B162:          ADC.B #$FC                          ;; 01B162 : 69 FC       ;
CODE_01B164:          BPL CODE_01B167                     ;; 01B164 : 10 01       ;
CODE_01B166:          DEY                                 ;; 01B166 : 88          ;
CODE_01B167:          CLC                                 ;; 01B167 : 18          ;
CODE_01B168:          ADC RAM_SpriteXLo,X                 ;; 01B168 : 75 E4       ;
CODE_01B16A:          STA $02                             ;; 01B16A : 85 02       ;
CODE_01B16C:          TYA                                 ;; 01B16C : 98          ;
CODE_01B16D:          ADC.W RAM_SpriteXHi,X               ;; 01B16D : 7D E0 14    ;
CODE_01B170:          PHA                                 ;; 01B170 : 48          ;
CODE_01B171:          LDA $02                             ;; 01B171 : A5 02       ;
CODE_01B173:          CMP RAM_ScreenBndryXLo              ;; 01B173 : C5 1A       ;
CODE_01B175:          PLA                                 ;; 01B175 : 68          ;
CODE_01B176:          SBC RAM_ScreenBndryXHi              ;; 01B176 : E5 1B       ;
CODE_01B178:          BNE Return01B191                    ;; 01B178 : D0 17       ;
CODE_01B17A:          LDA.W RAM_RandomByte2               ;; 01B17A : AD 8E 14    ;
CODE_01B17D:          AND.B #$0F                          ;; 01B17D : 29 0F       ;
CODE_01B17F:          CLC                                 ;; 01B17F : 18          ;
CODE_01B180:          ADC.B #$FE                          ;; 01B180 : 69 FE       ;
CODE_01B182:          ADC RAM_SpriteYLo,X                 ;; 01B182 : 75 D8       ;
CODE_01B184:          STA $00                             ;; 01B184 : 85 00       ;
CODE_01B186:          LDA.W RAM_SpriteYHi,X               ;; 01B186 : BD D4 14    ;
CODE_01B189:          ADC.B #$00                          ;; 01B189 : 69 00       ;
CODE_01B18B:          STA $01                             ;; 01B18B : 85 01       ;
CODE_01B18D:          JSL.L CODE_0285BA                   ;; 01B18D : 22 BA 85 02 ;
Return01B191:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
GeneratedFish:        JSR.W CODE_01B209                   ;; ?QPWZ? : 20 09 B2    ;
CODE_01B195:          LDA RAM_SpritesLocked               ;; 01B195 : A5 9D       ; \ Branch if sprites locked 
CODE_01B197:          BNE Return01B1B0                    ;; 01B197 : D0 17       ; / 
CODE_01B199:          JSR.W SetAnimationFrame             ;; 01B199 : 20 5F 8E    ;
CODE_01B19C:          JSR.W SubSprXPosNoGrvty             ;; 01B19C : 20 CC AB    ;
CODE_01B19F:          JSR.W SubSprYPosNoGrvty             ;; 01B19F : 20 D8 AB    ;
CODE_01B1A2:          JSR.W CODE_019140                   ;; 01B1A2 : 20 40 91    ;
CODE_01B1A5:          LDA RAM_SpriteSpeedY,X              ;; 01B1A5 : B5 AA       ;
CODE_01B1A7:          CMP.B #$20                          ;; 01B1A7 : C9 20       ;
CODE_01B1A9:          BPL CODE_01B1AE                     ;; 01B1A9 : 10 03       ;
CODE_01B1AB:          CLC                                 ;; 01B1AB : 18          ;
CODE_01B1AC:          ADC.B #$01                          ;; 01B1AC : 69 01       ;
CODE_01B1AE:          STA RAM_SpriteSpeedY,X              ;; 01B1AE : 95 AA       ;
Return01B1B0:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
DATA_01B1B1:          .db $D0,$D0,$B0                     ;; 01B1B1               ;
                                                          ;;                      ;
JumpingFish:          LDA RAM_SpritesLocked               ;; ?QPWZ? : A5 9D       ; \ Branch if sprites locked 
CODE_01B1B6:          BNE CODE_01B209                     ;; 01B1B6 : D0 51       ; / 
CODE_01B1B8:          LDA.W $164A,X                       ;; 01B1B8 : BD 4A 16    ;
CODE_01B1BB:          STA.W $151C,X                       ;; 01B1BB : 9D 1C 15    ;
CODE_01B1BE:          JSR.W SubUpdateSprPos               ;; 01B1BE : 20 32 90    ;
CODE_01B1C1:          LDA.W $164A,X                       ;; 01B1C1 : BD 4A 16    ;
CODE_01B1C4:          BEQ CODE_01B1EA                     ;; 01B1C4 : F0 24       ;
CODE_01B1C6:          LDA RAM_SpriteState,X               ;; 01B1C6 : B5 C2       ;
CODE_01B1C8:          CMP.B #$03                          ;; 01B1C8 : C9 03       ;
CODE_01B1CA:          BEQ CODE_01B1DE                     ;; 01B1CA : F0 12       ;
CODE_01B1CC:          INC RAM_SpriteState,X               ;; 01B1CC : F6 C2       ;
CODE_01B1CE:          TAY                                 ;; 01B1CE : A8          ;
CODE_01B1CF:          LDA.W DATA_01B1B1,Y                 ;; 01B1CF : B9 B1 B1    ;
CODE_01B1D2:          STA RAM_SpriteSpeedY,X              ;; 01B1D2 : 95 AA       ;
CODE_01B1D4:          LDA.B #$10                          ;; 01B1D4 : A9 10       ;
CODE_01B1D6:          STA.W $1540,X                       ;; 01B1D6 : 9D 40 15    ;
CODE_01B1D9:          STZ.W $164A,X                       ;; 01B1D9 : 9E 4A 16    ;
CODE_01B1DC:          BRA CODE_01B206                     ;; 01B1DC : 80 28       ;
                                                          ;;                      ;
CODE_01B1DE:          DEC RAM_SpriteSpeedY,X              ;; 01B1DE : D6 AA       ;
CODE_01B1E0:          LDA RAM_FrameCounter                ;; 01B1E0 : A5 13       ;
CODE_01B1E2:          AND.B #$03                          ;; 01B1E2 : 29 03       ;
CODE_01B1E4:          BNE CODE_01B1E8                     ;; 01B1E4 : D0 02       ;
CODE_01B1E6:          DEC RAM_SpriteSpeedY,X              ;; 01B1E6 : D6 AA       ;
CODE_01B1E8:          BRA CODE_01B206                     ;; 01B1E8 : 80 1C       ;
                                                          ;;                      ;
CODE_01B1EA:          INC.W $1570,X                       ;; 01B1EA : FE 70 15    ;
CODE_01B1ED:          INC.W $1570,X                       ;; 01B1ED : FE 70 15    ;
CODE_01B1F0:          CMP.W $151C,X                       ;; 01B1F0 : DD 1C 15    ;
CODE_01B1F3:          BEQ CODE_01B206                     ;; 01B1F3 : F0 11       ;
CODE_01B1F5:          LDA.B #$10                          ;; 01B1F5 : A9 10       ;
CODE_01B1F7:          STA.W $1540,X                       ;; 01B1F7 : 9D 40 15    ;
CODE_01B1FA:          LDA RAM_SpriteState,X               ;; 01B1FA : B5 C2       ;
CODE_01B1FC:          CMP.B #$03                          ;; 01B1FC : C9 03       ;
CODE_01B1FE:          BNE CODE_01B206                     ;; 01B1FE : D0 06       ;
CODE_01B200:          STZ RAM_SpriteState,X               ;; 01B200 : 74 C2       ;
CODE_01B202:          LDA.B #$D0                          ;; 01B202 : A9 D0       ;
CODE_01B204:          STA RAM_SpriteSpeedY,X              ;; 01B204 : 95 AA       ;
CODE_01B206:          JSR.W SetAnimationFrame             ;; 01B206 : 20 5F 8E    ;
CODE_01B209:          JSR.W SubSprSpr+MarioSpr            ;; 01B209 : 20 C1 8F    ;
CODE_01B20C:          JSR.W UpdateDirection               ;; 01B20C : 20 15 9A    ;
CODE_01B20F:          JMP.W CODE_01B10A                   ;; 01B20F : 4C 0A B1    ;
                                                          ;;                      ;
                                                          ;;                      ;
DATA_01B212:          .db $08,$F8,$10,$F0                 ;; 01B212               ;
                                                          ;;                      ;
InitFloatSpkBall:     JSR.W FaceMario                     ;; ?QPWZ? : 20 7C 85    ;
CODE_01B219:          LDY.W RAM_SpriteDir,X               ;; 01B219 : BC 7C 15    ;
CODE_01B21C:          LDA RAM_SpriteXLo,X                 ;; 01B21C : B5 E4       ;
CODE_01B21E:          AND.B #$10                          ;; 01B21E : 29 10       ;
CODE_01B220:          BEQ CODE_01B224                     ;; 01B220 : F0 02       ;
CODE_01B222:          INY                                 ;; 01B222 : C8          ;
CODE_01B223:          INY                                 ;; 01B223 : C8          ;
CODE_01B224:          LDA.W DATA_01B212,Y                 ;; 01B224 : B9 12 B2    ;
CODE_01B227:          STA RAM_SpriteSpeedX,X              ;; 01B227 : 95 B6       ;
CODE_01B229:          BRA InitFloatingPlat                ;; 01B229 : 80 0B       ;
                                                          ;;                      ;
InitFallingPlat:      INC.W $1602,X                       ;; ?QPWZ? : FE 02 16    ;
InitOrangePlat:       LDA.W $190E                         ;; ?QPWZ? : AD 0E 19    ;
ADDR_01B231:          BNE InitFloatingPlat                ;; 01B231 : D0 03       ;
ADDR_01B233:          INC RAM_SpriteState,X               ;; 01B233 : F6 C2       ;
Return01B235:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
InitFloatingPlat:     LDA.B #$03                          ;; ?QPWZ? : A9 03       ;
CODE_01B238:          STA.W $151C,X                       ;; 01B238 : 9D 1C 15    ;
CODE_01B23B:          JSR.W CODE_019140                   ;; 01B23B : 20 40 91    ;
CODE_01B23E:          LDA.W $164A,X                       ;; 01B23E : BD 4A 16    ;
CODE_01B241:          BNE Return01B25D                    ;; 01B241 : D0 1A       ;
CODE_01B243:          DEC.W $151C,X                       ;; 01B243 : DE 1C 15    ;
CODE_01B246:          BMI CODE_01B262                     ;; 01B246 : 30 1A       ;
CODE_01B248:          LDA RAM_SpriteYLo,X                 ;; 01B248 : B5 D8       ;
CODE_01B24A:          CLC                                 ;; 01B24A : 18          ;
CODE_01B24B:          ADC.B #$08                          ;; 01B24B : 69 08       ;
CODE_01B24D:          STA RAM_SpriteYLo,X                 ;; 01B24D : 95 D8       ;
CODE_01B24F:          LDA.W RAM_SpriteYHi,X               ;; 01B24F : BD D4 14    ;
CODE_01B252:          ADC.B #$00                          ;; 01B252 : 69 00       ;
CODE_01B254:          STA.W RAM_SpriteYHi,X               ;; 01B254 : 9D D4 14    ;
CODE_01B257:          CMP.B #$02                          ;; 01B257 : C9 02       ;
CODE_01B259:          BCS Return01B25D                    ;; 01B259 : B0 02       ;
CODE_01B25B:          BRA CODE_01B23B                     ;; 01B25B : 80 DE       ;
                                                          ;;                      ;
Return01B25D:         RTS                                 ;; ?QPWZ? : 60          ;
                                                          ;;                      ;
InitChckbrdPlat:      INC.W $1602,X                       ;; ?QPWZ? : FE 02 16    ;
Return01B261:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01B262:          LDA.B #$01                          ;; 01B262 : A9 01       ; \ Sprite status = Initialization 
CODE_01B264:          STA.W $14C8,X                       ;; 01B264 : 9D C8 14    ; / 
Return01B267:         RTS                                 ;; ?QPWZ? : 60          ;
                                                          ;;                      ;
                                                          ;;                      ;
DATA_01B268:          .db $FF,$01                         ;; 01B268               ;
                                                          ;;                      ;
DATA_01B26A:          .db $F0,$10                         ;; 01B26A               ;
                                                          ;;                      ;
Platforms:            JSR.W CODE_01B2D1                   ;; ?QPWZ? : 20 D1 B2    ;
CODE_01B26F:          LDA RAM_SpritesLocked               ;; 01B26F : A5 9D       ; \ Branch if sprites locked 
CODE_01B271:          BNE Return01B2C2                    ;; 01B271 : D0 4F       ; / 
CODE_01B273:          LDA.W $1540,X                       ;; 01B273 : BD 40 15    ;
CODE_01B276:          BNE CODE_01B2A5                     ;; 01B276 : D0 2D       ;
CODE_01B278:          INC RAM_SpriteState,X               ;; 01B278 : F6 C2       ;
CODE_01B27A:          LDA RAM_SpriteState,X               ;; 01B27A : B5 C2       ;
CODE_01B27C:          AND.B #$03                          ;; 01B27C : 29 03       ;
CODE_01B27E:          BNE CODE_01B2A5                     ;; 01B27E : D0 25       ;
CODE_01B280:          LDA.W $151C,X                       ;; 01B280 : BD 1C 15    ;
CODE_01B283:          AND.B #$01                          ;; 01B283 : 29 01       ;
CODE_01B285:          TAY                                 ;; 01B285 : A8          ;
CODE_01B286:          LDA RAM_SpriteSpeedY,X              ;; 01B286 : B5 AA       ;
CODE_01B288:          CLC                                 ;; 01B288 : 18          ;
CODE_01B289:          ADC.W DATA_01B268,Y                 ;; 01B289 : 79 68 B2    ;
CODE_01B28C:          STA RAM_SpriteSpeedY,X              ;; 01B28C : 95 AA       ;
CODE_01B28E:          STA RAM_SpriteSpeedX,X              ;; 01B28E : 95 B6       ;
CODE_01B290:          CMP.W DATA_01B26A,Y                 ;; 01B290 : D9 6A B2    ;
CODE_01B293:          BNE CODE_01B2A5                     ;; 01B293 : D0 10       ;
CODE_01B295:          INC.W $151C,X                       ;; 01B295 : FE 1C 15    ;
CODE_01B298:          LDA.B #$18                          ;; 01B298 : A9 18       ;
CODE_01B29A:          LDY RAM_SpriteNum,X                 ;; 01B29A : B4 9E       ;
CODE_01B29C:          CPY.B #$55                          ;; 01B29C : C0 55       ;
CODE_01B29E:          BNE CODE_01B2A2                     ;; 01B29E : D0 02       ;
CODE_01B2A0:          LDA.B #$08                          ;; 01B2A0 : A9 08       ;
CODE_01B2A2:          STA.W $1540,X                       ;; 01B2A2 : 9D 40 15    ;
CODE_01B2A5:          LDA RAM_SpriteNum,X                 ;; 01B2A5 : B5 9E       ;
CODE_01B2A7:          CMP.B #$57                          ;; 01B2A7 : C9 57       ;
CODE_01B2A9:          BCS CODE_01B2B0                     ;; 01B2A9 : B0 05       ;
CODE_01B2AB:          JSR.W SubSprXPosNoGrvty             ;; 01B2AB : 20 CC AB    ;
CODE_01B2AE:          BRA CODE_01B2B6                     ;; 01B2AE : 80 06       ;
                                                          ;;                      ;
CODE_01B2B0:          JSR.W SubSprYPosNoGrvty             ;; 01B2B0 : 20 D8 AB    ;
CODE_01B2B3:          STZ.W $1491                         ;; 01B2B3 : 9C 91 14    ;
CODE_01B2B6:          LDA.W $1491                         ;; 01B2B6 : AD 91 14    ;
CODE_01B2B9:          STA.W $1528,X                       ;; 01B2B9 : 9D 28 15    ;
CODE_01B2BC:          JSR.W CODE_01B457                   ;; 01B2BC : 20 57 B4    ;
CODE_01B2BF:          JSR.W SubOffscreen1Bnk1             ;; 01B2BF : 20 2B AC    ;
Return01B2C2:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
DATA_01B2C3:          .db $00,$01,$00,$01,$00,$00,$00,$00 ;; 01B2C3               ;
                      .db $01,$01,$00,$00,$00,$00         ;; ?QPWZ?               ;
                                                          ;;                      ;
CODE_01B2D1:          LDA RAM_SpriteNum,X                 ;; 01B2D1 : B5 9E       ;
CODE_01B2D3:          SEC                                 ;; 01B2D3 : 38          ;
CODE_01B2D4:          SBC.B #$55                          ;; 01B2D4 : E9 55       ;
CODE_01B2D6:          TAY                                 ;; 01B2D6 : A8          ;
CODE_01B2D7:          LDA.W DATA_01B2C3,Y                 ;; 01B2D7 : B9 C3 B2    ;
CODE_01B2DA:          BEQ CODE_01B2DF                     ;; 01B2DA : F0 03       ;
CODE_01B2DC:          JMP.W CODE_01B395                   ;; 01B2DC : 4C 95 B3    ;
                                                          ;;                      ;
CODE_01B2DF:          JSR.W GetDrawInfoBnk1               ;; 01B2DF : 20 65 A3    ;
CODE_01B2E2:          LDA.W $1602,X                       ;; 01B2E2 : BD 02 16    ;
CODE_01B2E5:          STA $01                             ;; 01B2E5 : 85 01       ;
CODE_01B2E7:          LDA RAM_SpriteYLo,X                 ;; 01B2E7 : B5 D8       ;
CODE_01B2E9:          SEC                                 ;; 01B2E9 : 38          ;
CODE_01B2EA:          SBC RAM_ScreenBndryYLo              ;; 01B2EA : E5 1C       ;
CODE_01B2EC:          STA.W OAM_DispY,Y                   ;; 01B2EC : 99 01 03    ;
CODE_01B2EF:          STA.W OAM_Tile2DispY,Y              ;; 01B2EF : 99 05 03    ;
CODE_01B2F2:          STA.W OAM_Tile3DispY,Y              ;; 01B2F2 : 99 09 03    ;
CODE_01B2F5:          LDX $01                             ;; 01B2F5 : A6 01       ;
CODE_01B2F7:          BEQ CODE_01B2FF                     ;; 01B2F7 : F0 06       ;
CODE_01B2F9:          STA.W OAM_Tile4DispY,Y              ;; 01B2F9 : 99 0D 03    ;
CODE_01B2FC:          STA.W $0311,Y                       ;; 01B2FC : 99 11 03    ;
CODE_01B2FF:          LDX.W $15E9                         ;; 01B2FF : AE E9 15    ; X = Sprite index 
CODE_01B302:          LDA RAM_SpriteXLo,X                 ;; 01B302 : B5 E4       ;
CODE_01B304:          SEC                                 ;; 01B304 : 38          ;
CODE_01B305:          SBC RAM_ScreenBndryXLo              ;; 01B305 : E5 1A       ;
CODE_01B307:          STA.W OAM_DispX,Y                   ;; 01B307 : 99 00 03    ;
CODE_01B30A:          CLC                                 ;; 01B30A : 18          ;
CODE_01B30B:          ADC.B #$10                          ;; 01B30B : 69 10       ;
CODE_01B30D:          STA.W OAM_Tile2DispX,Y              ;; 01B30D : 99 04 03    ;
CODE_01B310:          CLC                                 ;; 01B310 : 18          ;
CODE_01B311:          ADC.B #$10                          ;; 01B311 : 69 10       ;
CODE_01B313:          STA.W OAM_Tile3DispX,Y              ;; 01B313 : 99 08 03    ;
CODE_01B316:          LDX $01                             ;; 01B316 : A6 01       ;
CODE_01B318:          BEQ CODE_01B326                     ;; 01B318 : F0 0C       ;
CODE_01B31A:          CLC                                 ;; 01B31A : 18          ;
CODE_01B31B:          ADC.B #$10                          ;; 01B31B : 69 10       ;
CODE_01B31D:          STA.W OAM_Tile4DispX,Y              ;; 01B31D : 99 0C 03    ;
CODE_01B320:          CLC                                 ;; 01B320 : 18          ;
CODE_01B321:          ADC.B #$10                          ;; 01B321 : 69 10       ;
CODE_01B323:          STA.W $0310,Y                       ;; 01B323 : 99 10 03    ;
CODE_01B326:          LDX.W $15E9                         ;; 01B326 : AE E9 15    ; X = Sprite index 
CODE_01B329:          LDA $01                             ;; 01B329 : A5 01       ;
CODE_01B32B:          BEQ CODE_01B344                     ;; 01B32B : F0 17       ;
CODE_01B32D:          LDA.B #$EA                          ;; 01B32D : A9 EA       ;
CODE_01B32F:          STA.W OAM_Tile,Y                    ;; 01B32F : 99 02 03    ;
CODE_01B332:          LDA.B #$EB                          ;; 01B332 : A9 EB       ;
CODE_01B334:          STA.W OAM_Tile2,Y                   ;; 01B334 : 99 06 03    ;
CODE_01B337:          STA.W OAM_Tile3,Y                   ;; 01B337 : 99 0A 03    ;
CODE_01B33A:          STA.W OAM_Tile4,Y                   ;; 01B33A : 99 0E 03    ;
CODE_01B33D:          LDA.B #$EC                          ;; 01B33D : A9 EC       ;
CODE_01B33F:          STA.W $0312,Y                       ;; 01B33F : 99 12 03    ;
CODE_01B342:          BRA CODE_01B359                     ;; 01B342 : 80 15       ;
                                                          ;;                      ;
CODE_01B344:          LDA.B #$60                          ;; 01B344 : A9 60       ;
CODE_01B346:          STA.W OAM_Tile,Y                    ;; 01B346 : 99 02 03    ;
CODE_01B349:          LDA.B #$61                          ;; 01B349 : A9 61       ;
CODE_01B34B:          STA.W OAM_Tile2,Y                   ;; 01B34B : 99 06 03    ;
CODE_01B34E:          STA.W OAM_Tile3,Y                   ;; 01B34E : 99 0A 03    ;
CODE_01B351:          STA.W OAM_Tile4,Y                   ;; 01B351 : 99 0E 03    ;
CODE_01B354:          LDA.B #$62                          ;; 01B354 : A9 62       ;
CODE_01B356:          STA.W $0312,Y                       ;; 01B356 : 99 12 03    ;
CODE_01B359:          LDA $64                             ;; 01B359 : A5 64       ;
CODE_01B35B:          ORA.W RAM_SpritePal,X               ;; 01B35B : 1D F6 15    ;
CODE_01B35E:          STA.W OAM_Prop,Y                    ;; 01B35E : 99 03 03    ;
CODE_01B361:          STA.W OAM_Tile2Prop,Y               ;; 01B361 : 99 07 03    ;
CODE_01B364:          STA.W OAM_Tile3Prop,Y               ;; 01B364 : 99 0B 03    ;
CODE_01B367:          STA.W OAM_Tile4Prop,Y               ;; 01B367 : 99 0F 03    ;
CODE_01B36A:          STA.W $0313,Y                       ;; 01B36A : 99 13 03    ;
CODE_01B36D:          LDA $01                             ;; 01B36D : A5 01       ;
CODE_01B36F:          BNE CODE_01B376                     ;; 01B36F : D0 05       ;
CODE_01B371:          LDA.B #$62                          ;; 01B371 : A9 62       ;
CODE_01B373:          STA.W OAM_Tile3,Y                   ;; 01B373 : 99 0A 03    ;
CODE_01B376:          LDA.B #$04                          ;; 01B376 : A9 04       ;
CODE_01B378:          LDY $01                             ;; 01B378 : A4 01       ;
CODE_01B37A:          BNE CODE_01B37E                     ;; 01B37A : D0 02       ;
CODE_01B37C:          LDA.B #$02                          ;; 01B37C : A9 02       ;
CODE_01B37E:          LDY.B #$02                          ;; 01B37E : A0 02       ;
CODE_01B380:          JMP.W FinishOAMWriteRt              ;; 01B380 : 4C BB B7    ;
                                                          ;;                      ;
                                                          ;;                      ;
DiagPlatTiles:        .db $CB,$E4,$CC,$E5,$CC,$E5,$CC,$E4 ;; ?QPWZ?               ;
                      .db $CB                             ;; ?QPWZ?               ;
                                                          ;;                      ;
FlyRockPlatTiles:     .db $85,$88,$86,$89,$86,$89,$86,$88 ;; ?QPWZ?               ;
                      .db $85                             ;; ?QPWZ?               ;
                                                          ;;                      ;
CODE_01B395:          JSR.W GetDrawInfoBnk1               ;; 01B395 : 20 65 A3    ;
CODE_01B398:          PHY                                 ;; 01B398 : 5A          ;
CODE_01B399:          LDY.B #$00                          ;; 01B399 : A0 00       ;
CODE_01B39B:          LDA RAM_SpriteNum,X                 ;; 01B39B : B5 9E       ;
CODE_01B39D:          CMP.B #$5E                          ;; 01B39D : C9 5E       ;
CODE_01B39F:          BNE CODE_01B3A2                     ;; 01B39F : D0 01       ;
ADDR_01B3A1:          INY                                 ;; 01B3A1 : C8          ;
CODE_01B3A2:          STY $00                             ;; 01B3A2 : 84 00       ;
CODE_01B3A4:          PLY                                 ;; 01B3A4 : 7A          ;
CODE_01B3A5:          LDA RAM_SpriteYLo,X                 ;; 01B3A5 : B5 D8       ;
CODE_01B3A7:          SEC                                 ;; 01B3A7 : 38          ;
CODE_01B3A8:          SBC RAM_ScreenBndryYLo              ;; 01B3A8 : E5 1C       ;
CODE_01B3AA:          STA.W OAM_DispY,Y                   ;; 01B3AA : 99 01 03    ;
CODE_01B3AD:          STA.W OAM_Tile3DispY,Y              ;; 01B3AD : 99 09 03    ;
CODE_01B3B0:          STA.W $0311,Y                       ;; 01B3B0 : 99 11 03    ;
CODE_01B3B3:          LDX $00                             ;; 01B3B3 : A6 00       ;
CODE_01B3B5:          BEQ CODE_01B3BD                     ;; 01B3B5 : F0 06       ;
ADDR_01B3B7:          STA.W $0319,Y                       ;; 01B3B7 : 99 19 03    ;
ADDR_01B3BA:          STA.W $0321,Y                       ;; 01B3BA : 99 21 03    ;
CODE_01B3BD:          CLC                                 ;; 01B3BD : 18          ;
CODE_01B3BE:          ADC.B #$10                          ;; 01B3BE : 69 10       ;
CODE_01B3C0:          STA.W OAM_Tile2DispY,Y              ;; 01B3C0 : 99 05 03    ;
CODE_01B3C3:          STA.W OAM_Tile4DispY,Y              ;; 01B3C3 : 99 0D 03    ;
CODE_01B3C6:          LDX $00                             ;; 01B3C6 : A6 00       ;
CODE_01B3C8:          BEQ CODE_01B3D0                     ;; 01B3C8 : F0 06       ;
ADDR_01B3CA:          STA.W $0315,Y                       ;; 01B3CA : 99 15 03    ;
ADDR_01B3CD:          STA.W $031D,Y                       ;; 01B3CD : 99 1D 03    ;
CODE_01B3D0:          LDA.B #$08                          ;; 01B3D0 : A9 08       ;
CODE_01B3D2:          LDX $00                             ;; 01B3D2 : A6 00       ;
CODE_01B3D4:          BNE CODE_01B3D8                     ;; 01B3D4 : D0 02       ;
CODE_01B3D6:          LDA.B #$04                          ;; 01B3D6 : A9 04       ;
CODE_01B3D8:          STA $01                             ;; 01B3D8 : 85 01       ;
CODE_01B3DA:          DEC A                               ;; 01B3DA : 3A          ;
CODE_01B3DB:          STA $02                             ;; 01B3DB : 85 02       ;
CODE_01B3DD:          LDX.W $15E9                         ;; 01B3DD : AE E9 15    ; X = Sprite index 
CODE_01B3E0:          LDA.W RAM_SpritePal,X               ;; 01B3E0 : BD F6 15    ;
CODE_01B3E3:          STA $03                             ;; 01B3E3 : 85 03       ;
CODE_01B3E5:          LDA RAM_SpriteNum,X                 ;; 01B3E5 : B5 9E       ;
CODE_01B3E7:          CMP.B #$5B                          ;; 01B3E7 : C9 5B       ;
CODE_01B3E9:          LDA.B #$00                          ;; 01B3E9 : A9 00       ;
CODE_01B3EB:          BCS CODE_01B3EF                     ;; 01B3EB : B0 02       ;
ADDR_01B3ED:          LDA.B #$09                          ;; 01B3ED : A9 09       ;
CODE_01B3EF:          PHA                                 ;; 01B3EF : 48          ;
CODE_01B3F0:          LDA RAM_SpriteXLo,X                 ;; 01B3F0 : B5 E4       ;
CODE_01B3F2:          SEC                                 ;; 01B3F2 : 38          ;
CODE_01B3F3:          SBC RAM_ScreenBndryXLo              ;; 01B3F3 : E5 1A       ;
CODE_01B3F5:          PLX                                 ;; 01B3F5 : FA          ;
CODE_01B3F6:          STA.W OAM_DispX,Y                   ;; 01B3F6 : 99 00 03    ;
CODE_01B3F9:          CLC                                 ;; 01B3F9 : 18          ;
CODE_01B3FA:          ADC.B #$08                          ;; 01B3FA : 69 08       ;
CODE_01B3FC:          PHA                                 ;; 01B3FC : 48          ;
CODE_01B3FD:          LDA.W DiagPlatTiles,X               ;; 01B3FD : BD 83 B3    ;
CODE_01B400:          STA.W OAM_Tile,Y                    ;; 01B400 : 99 02 03    ;
CODE_01B403:          LDA $64                             ;; 01B403 : A5 64       ;
CODE_01B405:          ORA $03                             ;; 01B405 : 05 03       ;
CODE_01B407:          PHX                                 ;; 01B407 : DA          ;
CODE_01B408:          LDX $01                             ;; 01B408 : A6 01       ;
CODE_01B40A:          CPX $02                             ;; 01B40A : E4 02       ;
CODE_01B40C:          PLX                                 ;; 01B40C : FA          ;
CODE_01B40D:          BCS CODE_01B411                     ;; 01B40D : B0 02       ;
CODE_01B40F:          ORA.B #$40                          ;; 01B40F : 09 40       ;
CODE_01B411:          STA.W OAM_Prop,Y                    ;; 01B411 : 99 03 03    ;
CODE_01B414:          PLA                                 ;; 01B414 : 68          ;
CODE_01B415:          INY                                 ;; 01B415 : C8          ;
CODE_01B416:          INY                                 ;; 01B416 : C8          ;
CODE_01B417:          INY                                 ;; 01B417 : C8          ;
CODE_01B418:          INY                                 ;; 01B418 : C8          ;
CODE_01B419:          INX                                 ;; 01B419 : E8          ;
CODE_01B41A:          DEC $01                             ;; 01B41A : C6 01       ;
CODE_01B41C:          BPL CODE_01B3F6                     ;; 01B41C : 10 D8       ;
CODE_01B41E:          LDX.W $15E9                         ;; 01B41E : AE E9 15    ; X = Sprite index 
CODE_01B421:          LDY.W RAM_SprOAMIndex,X             ;; 01B421 : BC EA 15    ; Y = Index into sprite OAM 
CODE_01B424:          LDA $00                             ;; 01B424 : A5 00       ;
CODE_01B426:          BNE CODE_01B444                     ;; 01B426 : D0 1C       ;
CODE_01B428:          LDA RAM_SpriteNum,X                 ;; 01B428 : B5 9E       ;
CODE_01B42A:          CMP.B #$5B                          ;; 01B42A : C9 5B       ;
CODE_01B42C:          BCS CODE_01B43A                     ;; 01B42C : B0 0C       ;
ADDR_01B42E:          LDA.B #$85                          ;; 01B42E : A9 85       ;
ADDR_01B430:          STA.W $0312,Y                       ;; 01B430 : 99 12 03    ;
ADDR_01B433:          LDA.B #$88                          ;; 01B433 : A9 88       ;
ADDR_01B435:          STA.W OAM_Tile4,Y                   ;; 01B435 : 99 0E 03    ;
ADDR_01B438:          BRA CODE_01B444                     ;; 01B438 : 80 0A       ;
                                                          ;;                      ;
CODE_01B43A:          LDA.B #$CB                          ;; 01B43A : A9 CB       ;
CODE_01B43C:          STA.W $0312,Y                       ;; 01B43C : 99 12 03    ;
CODE_01B43F:          LDA.B #$E4                          ;; 01B43F : A9 E4       ;
CODE_01B441:          STA.W OAM_Tile4,Y                   ;; 01B441 : 99 0E 03    ;
CODE_01B444:          LDA.B #$08                          ;; 01B444 : A9 08       ;
CODE_01B446:          LDY $00                             ;; 01B446 : A4 00       ;
CODE_01B448:          BNE CODE_01B44C                     ;; 01B448 : D0 02       ;
CODE_01B44A:          LDA.B #$04                          ;; 01B44A : A9 04       ;
CODE_01B44C:          JMP.W CODE_01B37E                   ;; 01B44C : 4C 7E B3    ;
                                                          ;;                      ;
InvisBlkMainRt:       PHB                                 ;; ?QPWZ? : 8B          ;
CODE_01B450:          PHK                                 ;; 01B450 : 4B          ;
CODE_01B451:          PLB                                 ;; 01B451 : AB          ;
CODE_01B452:          JSR.W CODE_01B457                   ;; 01B452 : 20 57 B4    ;
CODE_01B455:          PLB                                 ;; 01B455 : AB          ;
Return01B456:         RTL                                 ;; ?QPWZ? : 6B          ; Return 
                                                          ;;                      ;
CODE_01B457:          JSR.W ProcessInteract               ;; 01B457 : 20 F7 A7    ;
CODE_01B45A:          BCC CODE_01B4B2                     ;; 01B45A : 90 56       ;
CODE_01B45C:          LDA RAM_SpriteYLo,X                 ;; 01B45C : B5 D8       ;
CODE_01B45E:          SEC                                 ;; 01B45E : 38          ;
CODE_01B45F:          SBC RAM_ScreenBndryYLo              ;; 01B45F : E5 1C       ;
CODE_01B461:          STA $00                             ;; 01B461 : 85 00       ;
CODE_01B463:          LDA $80                             ;; 01B463 : A5 80       ;
CODE_01B465:          CLC                                 ;; 01B465 : 18          ;
CODE_01B466:          ADC.B #$18                          ;; 01B466 : 69 18       ;
CODE_01B468:          CMP $00                             ;; 01B468 : C5 00       ;
CODE_01B46A:          BPL CODE_01B4B4                     ;; 01B46A : 10 48       ;
CODE_01B46C:          LDA RAM_MarioSpeedY                 ;; 01B46C : A5 7D       ;
CODE_01B46E:          BMI CODE_01B4B2                     ;; 01B46E : 30 42       ;
CODE_01B470:          LDA RAM_MarioObjStatus              ;; 01B470 : A5 77       ;
CODE_01B472:          AND.B #$08                          ;; 01B472 : 29 08       ;
CODE_01B474:          BNE CODE_01B4B2                     ;; 01B474 : D0 3C       ;
CODE_01B476:          LDA.B #$10                          ;; 01B476 : A9 10       ;
CODE_01B478:          STA RAM_MarioSpeedY                 ;; 01B478 : 85 7D       ;
CODE_01B47A:          LDA.B #$01                          ;; 01B47A : A9 01       ;
CODE_01B47C:          STA.W $1471                         ;; 01B47C : 8D 71 14    ;
CODE_01B47F:          LDA.B #$1F                          ;; 01B47F : A9 1F       ;
CODE_01B481:          LDY.W RAM_OnYoshi                   ;; 01B481 : AC 7A 18    ;
CODE_01B484:          BEQ CODE_01B488                     ;; 01B484 : F0 02       ;
CODE_01B486:          LDA.B #$2F                          ;; 01B486 : A9 2F       ;
CODE_01B488:          STA $01                             ;; 01B488 : 85 01       ;
CODE_01B48A:          LDA RAM_SpriteYLo,X                 ;; 01B48A : B5 D8       ;
CODE_01B48C:          SEC                                 ;; 01B48C : 38          ;
CODE_01B48D:          SBC $01                             ;; 01B48D : E5 01       ;
CODE_01B48F:          STA RAM_MarioYPos                   ;; 01B48F : 85 96       ;
CODE_01B491:          LDA.W RAM_SpriteYHi,X               ;; 01B491 : BD D4 14    ;
CODE_01B494:          SBC.B #$00                          ;; 01B494 : E9 00       ;
CODE_01B496:          STA RAM_MarioYPosHi                 ;; 01B496 : 85 97       ;
CODE_01B498:          LDA RAM_MarioObjStatus              ;; 01B498 : A5 77       ;
CODE_01B49A:          AND.B #$03                          ;; 01B49A : 29 03       ;
CODE_01B49C:          BNE CODE_01B4B0                     ;; 01B49C : D0 12       ;
CODE_01B49E:          LDY.B #$00                          ;; 01B49E : A0 00       ;
CODE_01B4A0:          LDA.W $1528,X                       ;; 01B4A0 : BD 28 15    ;
CODE_01B4A3:          BPL CODE_01B4A6                     ;; 01B4A3 : 10 01       ;
CODE_01B4A5:          DEY                                 ;; 01B4A5 : 88          ;
CODE_01B4A6:          CLC                                 ;; 01B4A6 : 18          ;
CODE_01B4A7:          ADC RAM_MarioXPos                   ;; 01B4A7 : 65 94       ;
CODE_01B4A9:          STA RAM_MarioXPos                   ;; 01B4A9 : 85 94       ;
CODE_01B4AB:          TYA                                 ;; 01B4AB : 98          ;
CODE_01B4AC:          ADC RAM_MarioXPosHi                 ;; 01B4AC : 65 95       ;
CODE_01B4AE:          STA RAM_MarioXPosHi                 ;; 01B4AE : 85 95       ;
CODE_01B4B0:          SEC                                 ;; 01B4B0 : 38          ;
Return01B4B1:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01B4B2:          CLC                                 ;; 01B4B2 : 18          ;
Return01B4B3:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01B4B4:          LDA.W RAM_Tweaker190F,X             ;; 01B4B4 : BD 0F 19    ; \ Branch if "Make Platform Passable" is set 
CODE_01B4B7:          LSR                                 ;; 01B4B7 : 4A          ;  | 
CODE_01B4B8:          BCS CODE_01B4B2                     ;; 01B4B8 : B0 F8       ; / 
CODE_01B4BA:          LDA.B #$00                          ;; 01B4BA : A9 00       ;
CODE_01B4BC:          LDY RAM_IsDucking                   ;; 01B4BC : A4 73       ;
CODE_01B4BE:          BNE CODE_01B4C4                     ;; 01B4BE : D0 04       ;
CODE_01B4C0:          LDY RAM_MarioPowerUp                ;; 01B4C0 : A4 19       ;
CODE_01B4C2:          BNE CODE_01B4C6                     ;; 01B4C2 : D0 02       ;
CODE_01B4C4:          LDA.B #$08                          ;; 01B4C4 : A9 08       ;
CODE_01B4C6:          LDY.W RAM_OnYoshi                   ;; 01B4C6 : AC 7A 18    ;
CODE_01B4C9:          BEQ CODE_01B4CD                     ;; 01B4C9 : F0 02       ;
CODE_01B4CB:          ADC.B #$08                          ;; 01B4CB : 69 08       ;
CODE_01B4CD:          CLC                                 ;; 01B4CD : 18          ;
CODE_01B4CE:          ADC $80                             ;; 01B4CE : 65 80       ;
CODE_01B4D0:          CMP $00                             ;; 01B4D0 : C5 00       ;
CODE_01B4D2:          BCC CODE_01B505                     ;; 01B4D2 : 90 31       ;
CODE_01B4D4:          LDA RAM_MarioSpeedY                 ;; 01B4D4 : A5 7D       ;
CODE_01B4D6:          BPL CODE_01B4F7                     ;; 01B4D6 : 10 1F       ;
CODE_01B4D8:          LDA.B #$10                          ;; 01B4D8 : A9 10       ;
CODE_01B4DA:          STA RAM_MarioSpeedY                 ;; 01B4DA : 85 7D       ;
CODE_01B4DC:          LDA RAM_SpriteNum,X                 ;; 01B4DC : B5 9E       ;
CODE_01B4DE:          CMP.B #$83                          ;; 01B4DE : C9 83       ;
CODE_01B4E0:          BCC CODE_01B4F2                     ;; 01B4E0 : 90 10       ;
CODE_01B4E2:          LDA.B #$0F                          ;; 01B4E2 : A9 0F       ;
CODE_01B4E4:          STA.W $1564,X                       ;; 01B4E4 : 9D 64 15    ;
CODE_01B4E7:          LDA RAM_SpriteState,X               ;; 01B4E7 : B5 C2       ;
CODE_01B4E9:          BNE CODE_01B4F2                     ;; 01B4E9 : D0 07       ;
CODE_01B4EB:          INC RAM_SpriteState,X               ;; 01B4EB : F6 C2       ;
CODE_01B4ED:          LDA.B #$10                          ;; 01B4ED : A9 10       ;
CODE_01B4EF:          STA.W $1558,X                       ;; 01B4EF : 9D 58 15    ;
CODE_01B4F2:          LDA.B #$01                          ;; 01B4F2 : A9 01       ;
CODE_01B4F4:          STA.W $1DF9                         ;; 01B4F4 : 8D F9 1D    ; / Play sound effect 
CODE_01B4F7:          CLC                                 ;; 01B4F7 : 18          ;
Return01B4F8:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
DATA_01B4F9:          .db $0E,$F1,$10,$E0,$1F,$F1         ;; 01B4F9               ;
                                                          ;;                      ;
DATA_01B4FF:          .db $00,$FF,$00,$FF,$00,$FF         ;; 01B4FF               ;
                                                          ;;                      ;
CODE_01B505:          JSR.W SubHorizPos                   ;; 01B505 : 20 30 AD    ;
CODE_01B508:          LDA RAM_SpriteNum,X                 ;; 01B508 : B5 9E       ;
CODE_01B50A:          CMP.B #$A9                          ;; 01B50A : C9 A9       ;
CODE_01B50C:          BEQ CODE_01B520                     ;; 01B50C : F0 12       ;
CODE_01B50E:          CMP.B #$9C                          ;; 01B50E : C9 9C       ;
CODE_01B510:          BEQ CODE_01B51E                     ;; 01B510 : F0 0C       ;
CODE_01B512:          CMP.B #$BB                          ;; 01B512 : C9 BB       ;
CODE_01B514:          BEQ CODE_01B51E                     ;; 01B514 : F0 08       ;
CODE_01B516:          CMP.B #$60                          ;; 01B516 : C9 60       ;
CODE_01B518:          BEQ CODE_01B51E                     ;; 01B518 : F0 04       ;
CODE_01B51A:          CMP.B #$49                          ;; 01B51A : C9 49       ;
CODE_01B51C:          BNE CODE_01B522                     ;; 01B51C : D0 04       ;
CODE_01B51E:          INY                                 ;; 01B51E : C8          ;
CODE_01B51F:          INY                                 ;; 01B51F : C8          ;
CODE_01B520:          INY                                 ;; 01B520 : C8          ;
CODE_01B521:          INY                                 ;; 01B521 : C8          ;
CODE_01B522:          LDA.W DATA_01B4F9,Y                 ;; 01B522 : B9 F9 B4    ;
CODE_01B525:          CLC                                 ;; 01B525 : 18          ;
CODE_01B526:          ADC RAM_SpriteXLo,X                 ;; 01B526 : 75 E4       ;
CODE_01B528:          STA RAM_MarioXPos                   ;; 01B528 : 85 94       ;
CODE_01B52A:          LDA.W DATA_01B4FF,Y                 ;; 01B52A : B9 FF B4    ;
CODE_01B52D:          ADC.W RAM_SpriteXHi,X               ;; 01B52D : 7D E0 14    ;
CODE_01B530:          STA RAM_MarioXPosHi                 ;; 01B530 : 85 95       ;
CODE_01B532:          STZ RAM_MarioSpeedX                 ;; 01B532 : 64 7B       ;
CODE_01B534:          CLC                                 ;; 01B534 : 18          ;
Return01B535:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
OrangePlatform:       LDA RAM_SpriteState,X               ;; ?QPWZ? : B5 C2       ;
ADDR_01B538:          BEQ Platforms2                      ;; 01B538 : F0 29       ;
ADDR_01B53A:          JSR.W CODE_01B2D1                   ;; 01B53A : 20 D1 B2    ;
ADDR_01B53D:          LDA RAM_SpritesLocked               ;; 01B53D : A5 9D       ; \ Branch if sprites locked 
ADDR_01B53F:          BNE Return01B558                    ;; 01B53F : D0 17       ; / 
ADDR_01B541:          JSR.W SubSprXPosNoGrvty             ;; 01B541 : 20 CC AB    ;
ADDR_01B544:          LDA.W $1491                         ;; 01B544 : AD 91 14    ;
ADDR_01B547:          STA.W $1528,X                       ;; 01B547 : 9D 28 15    ;
ADDR_01B54A:          JSR.W CODE_01B457                   ;; 01B54A : 20 57 B4    ;
ADDR_01B54D:          BCC Return01B558                    ;; 01B54D : 90 09       ;
ADDR_01B54F:          LDA.B #$01                          ;; 01B54F : A9 01       ;
ADDR_01B551:          STA.W $1B9A                         ;; 01B551 : 8D 9A 1B    ;
ADDR_01B554:          LDA.B #$08                          ;; 01B554 : A9 08       ;
ADDR_01B556:          STA RAM_SpriteSpeedX,X              ;; 01B556 : 95 B6       ;
Return01B558:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
FloatingSpikeBall:    LDA.W $14C8,X                       ;; ?QPWZ? : BD C8 14    ;
CODE_01B55C:          CMP.B #$08                          ;; 01B55C : C9 08       ;
CODE_01B55E:          BEQ Platforms2                      ;; 01B55E : F0 03       ;
CODE_01B560:          JMP.W CODE_01B666                   ;; 01B560 : 4C 66 B6    ;
                                                          ;;                      ;
Platforms2:           LDA RAM_SpritesLocked               ;; ?QPWZ? : A5 9D       ;
CODE_01B565:          BEQ CODE_01B56A                     ;; 01B565 : F0 03       ;
CODE_01B567:          JMP.W CODE_01B64E                   ;; 01B567 : 4C 4E B6    ;
                                                          ;;                      ;
CODE_01B56A:          LDA.W RAM_SprObjStatus,X            ;; 01B56A : BD 88 15    ;
CODE_01B56D:          AND.B #$0C                          ;; 01B56D : 29 0C       ;
CODE_01B56F:          BNE CODE_01B574                     ;; 01B56F : D0 03       ;
CODE_01B571:          JSR.W SubSprYPosNoGrvty             ;; 01B571 : 20 D8 AB    ;
CODE_01B574:          STZ.W $1491                         ;; 01B574 : 9C 91 14    ;
CODE_01B577:          LDA RAM_SpriteNum,X                 ;; 01B577 : B5 9E       ;
CODE_01B579:          CMP.B #$A4                          ;; 01B579 : C9 A4       ;
CODE_01B57B:          BNE CODE_01B580                     ;; 01B57B : D0 03       ;
CODE_01B57D:          JSR.W SubSprXPosNoGrvty             ;; 01B57D : 20 CC AB    ;
CODE_01B580:          LDA RAM_SpriteSpeedY,X              ;; 01B580 : B5 AA       ;
CODE_01B582:          CMP.B #$40                          ;; 01B582 : C9 40       ;
CODE_01B584:          BPL CODE_01B588                     ;; 01B584 : 10 02       ;
CODE_01B586:          INC RAM_SpriteSpeedY,X              ;; 01B586 : F6 AA       ;
CODE_01B588:          LDA.W $164A,X                       ;; 01B588 : BD 4A 16    ;
CODE_01B58B:          BEQ CODE_01B5A6                     ;; 01B58B : F0 19       ;
CODE_01B58D:          LDY.B #$F8                          ;; 01B58D : A0 F8       ;
CODE_01B58F:          LDA RAM_SpriteNum,X                 ;; 01B58F : B5 9E       ;
CODE_01B591:          CMP.B #$5D                          ;; 01B591 : C9 5D       ;
CODE_01B593:          BCC CODE_01B597                     ;; 01B593 : 90 02       ;
CODE_01B595:          LDY.B #$FC                          ;; 01B595 : A0 FC       ;
CODE_01B597:          STY $00                             ;; 01B597 : 84 00       ;
CODE_01B599:          LDA RAM_SpriteSpeedY,X              ;; 01B599 : B5 AA       ;
CODE_01B59B:          BPL CODE_01B5A1                     ;; 01B59B : 10 04       ;
CODE_01B59D:          CMP $00                             ;; 01B59D : C5 00       ;
CODE_01B59F:          BCC CODE_01B5A6                     ;; 01B59F : 90 05       ;
CODE_01B5A1:          SEC                                 ;; 01B5A1 : 38          ;
CODE_01B5A2:          SBC.B #$02                          ;; 01B5A2 : E9 02       ;
CODE_01B5A4:          STA RAM_SpriteSpeedY,X              ;; 01B5A4 : 95 AA       ;
CODE_01B5A6:          LDA RAM_MarioSpeedY                 ;; 01B5A6 : A5 7D       ;
CODE_01B5A8:          PHA                                 ;; 01B5A8 : 48          ;
CODE_01B5A9:          LDA RAM_SpriteNum,X                 ;; 01B5A9 : B5 9E       ;
CODE_01B5AB:          CMP.B #$A4                          ;; 01B5AB : C9 A4       ;
CODE_01B5AD:          BNE CODE_01B5B5                     ;; 01B5AD : D0 06       ;
CODE_01B5AF:          JSR.W MarioSprInteractRt            ;; 01B5AF : 20 E4 A7    ;
CODE_01B5B2:          CLC                                 ;; 01B5B2 : 18          ;
CODE_01B5B3:          BRA CODE_01B5B8                     ;; 01B5B3 : 80 03       ;
                                                          ;;                      ;
CODE_01B5B5:          JSR.W CODE_01B457                   ;; 01B5B5 : 20 57 B4    ;
CODE_01B5B8:          PLA                                 ;; 01B5B8 : 68          ;
CODE_01B5B9:          STA $00                             ;; 01B5B9 : 85 00       ;
CODE_01B5BB:          STZ.W $185E                         ;; 01B5BB : 9C 5E 18    ;
CODE_01B5BE:          BCC CODE_01B5E7                     ;; 01B5BE : 90 27       ;
CODE_01B5C0:          LDA RAM_SpriteNum,X                 ;; 01B5C0 : B5 9E       ;
CODE_01B5C2:          CMP.B #$5D                          ;; 01B5C2 : C9 5D       ;
CODE_01B5C4:          BCC CODE_01B5DA                     ;; 01B5C4 : 90 14       ;
CODE_01B5C6:          LDY.B #$03                          ;; 01B5C6 : A0 03       ;
CODE_01B5C8:          LDA RAM_MarioPowerUp                ;; 01B5C8 : A5 19       ;
CODE_01B5CA:          BNE CODE_01B5CD                     ;; 01B5CA : D0 01       ;
ADDR_01B5CC:          DEY                                 ;; 01B5CC : 88          ;
CODE_01B5CD:          STY $00                             ;; 01B5CD : 84 00       ;
CODE_01B5CF:          LDA RAM_SpriteSpeedY,X              ;; 01B5CF : B5 AA       ;
CODE_01B5D1:          CMP $00                             ;; 01B5D1 : C5 00       ;
CODE_01B5D3:          BPL CODE_01B5DA                     ;; 01B5D3 : 10 05       ;
CODE_01B5D5:          CLC                                 ;; 01B5D5 : 18          ;
CODE_01B5D6:          ADC.B #$02                          ;; 01B5D6 : 69 02       ;
CODE_01B5D8:          STA RAM_SpriteSpeedY,X              ;; 01B5D8 : 95 AA       ;
CODE_01B5DA:          INC.W $185E                         ;; 01B5DA : EE 5E 18    ;
CODE_01B5DD:          LDA $00                             ;; 01B5DD : A5 00       ;
CODE_01B5DF:          CMP.B #$20                          ;; 01B5DF : C9 20       ;
CODE_01B5E1:          BCC CODE_01B5E7                     ;; 01B5E1 : 90 04       ;
CODE_01B5E3:          LSR                                 ;; 01B5E3 : 4A          ;
CODE_01B5E4:          LSR                                 ;; 01B5E4 : 4A          ;
CODE_01B5E5:          STA RAM_SpriteSpeedY,X              ;; 01B5E5 : 95 AA       ;
CODE_01B5E7:          LDA.W $185E                         ;; 01B5E7 : AD 5E 18    ;
CODE_01B5EA:          CMP.W $151C,X                       ;; 01B5EA : DD 1C 15    ;
CODE_01B5ED:          STA.W $151C,X                       ;; 01B5ED : 9D 1C 15    ;
CODE_01B5F0:          BEQ CODE_01B610                     ;; 01B5F0 : F0 1E       ;
CODE_01B5F2:          LDA.W $185E                         ;; 01B5F2 : AD 5E 18    ;
CODE_01B5F5:          BNE CODE_01B610                     ;; 01B5F5 : D0 19       ;
CODE_01B5F7:          LDA RAM_MarioSpeedY                 ;; 01B5F7 : A5 7D       ;
CODE_01B5F9:          BPL CODE_01B610                     ;; 01B5F9 : 10 15       ;
CODE_01B5FB:          LDY.B #$08                          ;; 01B5FB : A0 08       ;
CODE_01B5FD:          LDA RAM_MarioPowerUp                ;; 01B5FD : A5 19       ;
CODE_01B5FF:          BNE CODE_01B603                     ;; 01B5FF : D0 02       ;
CODE_01B601:          LDY.B #$06                          ;; 01B601 : A0 06       ;
CODE_01B603:          STY $00                             ;; 01B603 : 84 00       ;
CODE_01B605:          LDA RAM_SpriteSpeedY,X              ;; 01B605 : B5 AA       ;
CODE_01B607:          CMP.B #$20                          ;; 01B607 : C9 20       ;
CODE_01B609:          BPL CODE_01B610                     ;; 01B609 : 10 05       ;
CODE_01B60B:          CLC                                 ;; 01B60B : 18          ;
CODE_01B60C:          ADC $00                             ;; 01B60C : 65 00       ;
CODE_01B60E:          STA RAM_SpriteSpeedY,X              ;; 01B60E : 95 AA       ;
CODE_01B610:          LDA.B #$01                          ;; 01B610 : A9 01       ;
CODE_01B612:          AND RAM_FrameCounter                ;; 01B612 : 25 13       ;
CODE_01B614:          BNE CODE_01B64E                     ;; 01B614 : D0 38       ;
CODE_01B616:          LDA RAM_SpriteSpeedY,X              ;; 01B616 : B5 AA       ;
CODE_01B618:          BEQ CODE_01B624                     ;; 01B618 : F0 0A       ;
CODE_01B61A:          BPL CODE_01B61F                     ;; 01B61A : 10 03       ;
CODE_01B61C:          CLC                                 ;; 01B61C : 18          ;
CODE_01B61D:          ADC.B #$02                          ;; 01B61D : 69 02       ;
CODE_01B61F:          SEC                                 ;; 01B61F : 38          ;
CODE_01B620:          SBC.B #$01                          ;; 01B620 : E9 01       ;
CODE_01B622:          STA RAM_SpriteSpeedY,X              ;; 01B622 : 95 AA       ;
CODE_01B624:          LDY.W $185E                         ;; 01B624 : AC 5E 18    ;
CODE_01B627:          BEQ CODE_01B631                     ;; 01B627 : F0 08       ;
CODE_01B629:          LDY.B #$05                          ;; 01B629 : A0 05       ;
CODE_01B62B:          LDA RAM_MarioPowerUp                ;; 01B62B : A5 19       ;
CODE_01B62D:          BNE CODE_01B631                     ;; 01B62D : D0 02       ;
ADDR_01B62F:          LDY.B #$02                          ;; 01B62F : A0 02       ;
CODE_01B631:          STY $00                             ;; 01B631 : 84 00       ;
CODE_01B633:          LDA RAM_SpriteYLo,X                 ;; 01B633 : B5 D8       ;
CODE_01B635:          PHA                                 ;; 01B635 : 48          ;
CODE_01B636:          SEC                                 ;; 01B636 : 38          ;
CODE_01B637:          SBC $00                             ;; 01B637 : E5 00       ;
CODE_01B639:          STA RAM_SpriteYLo,X                 ;; 01B639 : 95 D8       ;
CODE_01B63B:          LDA.W RAM_SpriteYHi,X               ;; 01B63B : BD D4 14    ;
CODE_01B63E:          PHA                                 ;; 01B63E : 48          ;
CODE_01B63F:          SBC.B #$00                          ;; 01B63F : E9 00       ;
CODE_01B641:          STA.W RAM_SpriteYHi,X               ;; 01B641 : 9D D4 14    ;
CODE_01B644:          JSR.W CODE_019140                   ;; 01B644 : 20 40 91    ;
CODE_01B647:          PLA                                 ;; 01B647 : 68          ;
CODE_01B648:          STA.W RAM_SpriteYHi,X               ;; 01B648 : 9D D4 14    ;
CODE_01B64B:          PLA                                 ;; 01B64B : 68          ;
CODE_01B64C:          STA RAM_SpriteYLo,X                 ;; 01B64C : 95 D8       ;
CODE_01B64E:          JSR.W SubOffscreen0Bnk1             ;; 01B64E : 20 31 AC    ;
CODE_01B651:          LDA RAM_SpriteNum,X                 ;; 01B651 : B5 9E       ;
CODE_01B653:          CMP.B #$A4                          ;; 01B653 : C9 A4       ;
CODE_01B655:          BEQ CODE_01B666                     ;; 01B655 : F0 0F       ;
CODE_01B657:          JMP.W CODE_01B2D1                   ;; 01B657 : 4C D1 B2    ;
                                                          ;;                      ;
                                                          ;;                      ;
DATA_01B65A:          .db $F8,$08,$F8,$08                 ;; 01B65A               ;
                                                          ;;                      ;
DATA_01B65E:          .db $F8,$F8,$08,$08                 ;; 01B65E               ;
                                                          ;;                      ;
FloatMineGfxProp:     .db $31,$71,$A1,$F1                 ;; ?QPWZ?               ;
                                                          ;;                      ;
CODE_01B666:          JSR.W GetDrawInfoBnk1               ;; 01B666 : 20 65 A3    ;
CODE_01B669:          PHX                                 ;; 01B669 : DA          ;
CODE_01B66A:          LDX.B #$03                          ;; 01B66A : A2 03       ;
CODE_01B66C:          LDA $00                             ;; 01B66C : A5 00       ;
CODE_01B66E:          CLC                                 ;; 01B66E : 18          ;
CODE_01B66F:          ADC.W DATA_01B65A,X                 ;; 01B66F : 7D 5A B6    ;
CODE_01B672:          STA.W OAM_DispX,Y                   ;; 01B672 : 99 00 03    ;
CODE_01B675:          LDA $01                             ;; 01B675 : A5 01       ;
CODE_01B677:          CLC                                 ;; 01B677 : 18          ;
CODE_01B678:          ADC.W DATA_01B65E,X                 ;; 01B678 : 7D 5E B6    ;
CODE_01B67B:          STA.W OAM_DispY,Y                   ;; 01B67B : 99 01 03    ;
CODE_01B67E:          LDA RAM_FrameCounterB               ;; 01B67E : A5 14       ;
CODE_01B680:          LSR                                 ;; 01B680 : 4A          ;
CODE_01B681:          LSR                                 ;; 01B681 : 4A          ;
CODE_01B682:          AND.B #$04                          ;; 01B682 : 29 04       ;
CODE_01B684:          LSR                                 ;; 01B684 : 4A          ;
CODE_01B685:          ADC.B #$AA                          ;; 01B685 : 69 AA       ;
CODE_01B687:          STA.W OAM_Tile,Y                    ;; 01B687 : 99 02 03    ;
CODE_01B68A:          LDA.W FloatMineGfxProp,X            ;; 01B68A : BD 62 B6    ;
CODE_01B68D:          STA.W OAM_Prop,Y                    ;; 01B68D : 99 03 03    ;
CODE_01B690:          INY                                 ;; 01B690 : C8          ;
CODE_01B691:          INY                                 ;; 01B691 : C8          ;
CODE_01B692:          INY                                 ;; 01B692 : C8          ;
CODE_01B693:          INY                                 ;; 01B693 : C8          ;
CODE_01B694:          DEX                                 ;; 01B694 : CA          ;
CODE_01B695:          BPL CODE_01B66C                     ;; 01B695 : 10 D5       ;
CODE_01B697:          PLX                                 ;; 01B697 : FA          ;
CODE_01B698:          LDY.B #$02                          ;; 01B698 : A0 02       ;
CODE_01B69A:          LDA.B #$03                          ;; 01B69A : A9 03       ;
CODE_01B69C:          JMP.W FinishOAMWriteRt              ;; 01B69C : 4C BB B7    ;
                                                          ;;                      ;
                                                          ;;                      ;
BlkBridgeLength:      .db $20,$00                         ;; ?QPWZ?               ;
                                                          ;;                      ;
TurnBlkBridgeSpeed:   .db $01,$FF                         ;; ?QPWZ?               ;
                                                          ;;                      ;
BlkBridgeTiming:      .db $40,$40                         ;; ?QPWZ?               ;
                                                          ;;                      ;
TurnBlockBridge:      JSR.W SubOffscreen0Bnk1             ;; ?QPWZ? : 20 31 AC    ;
CODE_01B6A8:          JSR.W CODE_01B710                   ;; 01B6A8 : 20 10 B7    ;
CODE_01B6AB:          JSR.W CODE_01B852                   ;; 01B6AB : 20 52 B8    ;
CODE_01B6AE:          JSR.W CODE_01B6B2                   ;; 01B6AE : 20 B2 B6    ;
Return01B6B1:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01B6B2:          LDA RAM_SpriteState,X               ;; 01B6B2 : B5 C2       ;
CODE_01B6B4:          AND.B #$01                          ;; 01B6B4 : 29 01       ;
CODE_01B6B6:          TAY                                 ;; 01B6B6 : A8          ;
CODE_01B6B7:          LDA.W $151C,X                       ;; 01B6B7 : BD 1C 15    ;
CODE_01B6BA:          CMP.W BlkBridgeLength,Y             ;; 01B6BA : D9 9F B6    ;
CODE_01B6BD:          BEQ CODE_01B6D1                     ;; 01B6BD : F0 12       ;
CODE_01B6BF:          LDA.W $1540,X                       ;; 01B6BF : BD 40 15    ;
CODE_01B6C2:          ORA RAM_SpritesLocked               ;; 01B6C2 : 05 9D       ;
CODE_01B6C4:          BNE Return01B6D0                    ;; 01B6C4 : D0 0A       ;
CODE_01B6C6:          LDA.W $151C,X                       ;; 01B6C6 : BD 1C 15    ;
CODE_01B6C9:          CLC                                 ;; 01B6C9 : 18          ;
CODE_01B6CA:          ADC.W TurnBlkBridgeSpeed,Y          ;; 01B6CA : 79 A1 B6    ;
CODE_01B6CD:          STA.W $151C,X                       ;; 01B6CD : 9D 1C 15    ;
Return01B6D0:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01B6D1:          LDA.W BlkBridgeTiming,Y             ;; 01B6D1 : B9 A3 B6    ;
CODE_01B6D4:          STA.W $1540,X                       ;; 01B6D4 : 9D 40 15    ;
CODE_01B6D7:          INC RAM_SpriteState,X               ;; 01B6D7 : F6 C2       ;
Return01B6D9:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
HorzTurnBlkBridge:    JSR.W SubOffscreen0Bnk1             ;; ?QPWZ? : 20 31 AC    ;
CODE_01B6DD:          JSR.W CODE_01B710                   ;; 01B6DD : 20 10 B7    ;
CODE_01B6E0:          JSR.W CODE_01B852                   ;; 01B6E0 : 20 52 B8    ;
CODE_01B6E3:          JSR.W CODE_01B6E7                   ;; 01B6E3 : 20 E7 B6    ;
Return01B6E6:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01B6E7:          LDY RAM_SpriteState,X               ;; 01B6E7 : B4 C2       ;
CODE_01B6E9:          LDA.W $151C,X                       ;; 01B6E9 : BD 1C 15    ;
CODE_01B6EC:          CMP.W BlkBridgeLength,Y             ;; 01B6EC : D9 9F B6    ;
CODE_01B6EF:          BEQ CODE_01B703                     ;; 01B6EF : F0 12       ;
CODE_01B6F1:          LDA.W $1540,X                       ;; 01B6F1 : BD 40 15    ;
CODE_01B6F4:          ORA RAM_SpritesLocked               ;; 01B6F4 : 05 9D       ;
CODE_01B6F6:          BNE Return01B702                    ;; 01B6F6 : D0 0A       ;
CODE_01B6F8:          LDA.W $151C,X                       ;; 01B6F8 : BD 1C 15    ;
CODE_01B6FB:          CLC                                 ;; 01B6FB : 18          ;
CODE_01B6FC:          ADC.W TurnBlkBridgeSpeed,Y          ;; 01B6FC : 79 A1 B6    ;
CODE_01B6FF:          STA.W $151C,X                       ;; 01B6FF : 9D 1C 15    ;
Return01B702:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01B703:          LDA.W BlkBridgeTiming,Y             ;; 01B703 : B9 A3 B6    ;
CODE_01B706:          STA.W $1540,X                       ;; 01B706 : 9D 40 15    ;
CODE_01B709:          LDA RAM_SpriteState,X               ;; 01B709 : B5 C2       ;
CODE_01B70B:          EOR.B #$01                          ;; 01B70B : 49 01       ;
CODE_01B70D:          STA RAM_SpriteState,X               ;; 01B70D : 95 C2       ;
Return01B70F:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01B710:          JSR.W GetDrawInfoBnk1               ;; 01B710 : 20 65 A3    ;
CODE_01B713:          STZ $00                             ;; 01B713 : 64 00       ;
CODE_01B715:          STZ $01                             ;; 01B715 : 64 01       ;
CODE_01B717:          STZ $02                             ;; 01B717 : 64 02       ;
CODE_01B719:          STZ $03                             ;; 01B719 : 64 03       ;
CODE_01B71B:          LDA RAM_SpriteState,X               ;; 01B71B : B5 C2       ;
CODE_01B71D:          AND.B #$02                          ;; 01B71D : 29 02       ;
CODE_01B71F:          TAY                                 ;; 01B71F : A8          ;
CODE_01B720:          LDA.W $151C,X                       ;; 01B720 : BD 1C 15    ;
CODE_01B723:          STA.W $0000,Y                       ;; 01B723 : 99 00 00    ;
CODE_01B726:          LSR                                 ;; 01B726 : 4A          ;
CODE_01B727:          STA.W $0001,Y                       ;; 01B727 : 99 01 00    ;
CODE_01B72A:          LDY.W RAM_SprOAMIndex,X             ;; 01B72A : BC EA 15    ; Y = Index into sprite OAM 
CODE_01B72D:          LDA RAM_SpriteYLo,X                 ;; 01B72D : B5 D8       ;
CODE_01B72F:          SEC                                 ;; 01B72F : 38          ;
CODE_01B730:          SBC RAM_ScreenBndryYLo              ;; 01B730 : E5 1C       ;
CODE_01B732:          STA.W $0311,Y                       ;; 01B732 : 99 11 03    ;
CODE_01B735:          PHA                                 ;; 01B735 : 48          ;
CODE_01B736:          PHA                                 ;; 01B736 : 48          ;
CODE_01B737:          PHA                                 ;; 01B737 : 48          ;
CODE_01B738:          SEC                                 ;; 01B738 : 38          ;
CODE_01B739:          SBC $02                             ;; 01B739 : E5 02       ;
CODE_01B73B:          STA.W OAM_Tile3DispY,Y              ;; 01B73B : 99 09 03    ;
CODE_01B73E:          PLA                                 ;; 01B73E : 68          ;
CODE_01B73F:          SEC                                 ;; 01B73F : 38          ;
CODE_01B740:          SBC $03                             ;; 01B740 : E5 03       ;
CODE_01B742:          STA.W OAM_Tile4DispY,Y              ;; 01B742 : 99 0D 03    ;
CODE_01B745:          PLA                                 ;; 01B745 : 68          ;
CODE_01B746:          CLC                                 ;; 01B746 : 18          ;
CODE_01B747:          ADC $02                             ;; 01B747 : 65 02       ;
CODE_01B749:          STA.W OAM_DispY,Y                   ;; 01B749 : 99 01 03    ;
CODE_01B74C:          PLA                                 ;; 01B74C : 68          ;
CODE_01B74D:          CLC                                 ;; 01B74D : 18          ;
CODE_01B74E:          ADC $03                             ;; 01B74E : 65 03       ;
CODE_01B750:          STA.W OAM_Tile2DispY,Y              ;; 01B750 : 99 05 03    ;
CODE_01B753:          LDA RAM_SpriteXLo,X                 ;; 01B753 : B5 E4       ;
CODE_01B755:          SEC                                 ;; 01B755 : 38          ;
CODE_01B756:          SBC RAM_ScreenBndryXLo              ;; 01B756 : E5 1A       ;
CODE_01B758:          STA.W $0310,Y                       ;; 01B758 : 99 10 03    ;
CODE_01B75B:          PHA                                 ;; 01B75B : 48          ;
CODE_01B75C:          PHA                                 ;; 01B75C : 48          ;
CODE_01B75D:          PHA                                 ;; 01B75D : 48          ;
CODE_01B75E:          SEC                                 ;; 01B75E : 38          ;
CODE_01B75F:          SBC $00                             ;; 01B75F : E5 00       ;
CODE_01B761:          STA.W OAM_Tile3DispX,Y              ;; 01B761 : 99 08 03    ;
CODE_01B764:          PLA                                 ;; 01B764 : 68          ;
CODE_01B765:          SEC                                 ;; 01B765 : 38          ;
CODE_01B766:          SBC $01                             ;; 01B766 : E5 01       ;
CODE_01B768:          STA.W OAM_Tile4DispX,Y              ;; 01B768 : 99 0C 03    ;
CODE_01B76B:          PLA                                 ;; 01B76B : 68          ;
CODE_01B76C:          CLC                                 ;; 01B76C : 18          ;
CODE_01B76D:          ADC $00                             ;; 01B76D : 65 00       ;
CODE_01B76F:          STA.W OAM_DispX,Y                   ;; 01B76F : 99 00 03    ;
CODE_01B772:          PLA                                 ;; 01B772 : 68          ;
CODE_01B773:          CLC                                 ;; 01B773 : 18          ;
CODE_01B774:          ADC $01                             ;; 01B774 : 65 01       ;
CODE_01B776:          STA.W OAM_Tile2DispX,Y              ;; 01B776 : 99 04 03    ;
CODE_01B779:          LDA RAM_SpriteState,X               ;; 01B779 : B5 C2       ;
CODE_01B77B:          LSR                                 ;; 01B77B : 4A          ;
CODE_01B77C:          LSR                                 ;; 01B77C : 4A          ;
CODE_01B77D:          LDA.B #$40                          ;; 01B77D : A9 40       ;
CODE_01B77F:          STA.W OAM_Tile2,Y                   ;; 01B77F : 99 06 03    ;
CODE_01B782:          STA.W OAM_Tile4,Y                   ;; 01B782 : 99 0E 03    ;
CODE_01B785:          STA.W $0312,Y                       ;; 01B785 : 99 12 03    ;
CODE_01B788:          STA.W OAM_Tile3,Y                   ;; 01B788 : 99 0A 03    ;
CODE_01B78B:          STA.W OAM_Tile,Y                    ;; 01B78B : 99 02 03    ;
CODE_01B78E:          LDA $64                             ;; 01B78E : A5 64       ;
CODE_01B790:          STA.W OAM_Tile4Prop,Y               ;; 01B790 : 99 0F 03    ;
CODE_01B793:          STA.W OAM_Tile2Prop,Y               ;; 01B793 : 99 07 03    ;
CODE_01B796:          STA.W OAM_Tile3Prop,Y               ;; 01B796 : 99 0B 03    ;
CODE_01B799:          STA.W $0313,Y                       ;; 01B799 : 99 13 03    ;
CODE_01B79C:          ORA.B #$60                          ;; 01B79C : 09 60       ;
CODE_01B79E:          STA.W OAM_Prop,Y                    ;; 01B79E : 99 03 03    ;
CODE_01B7A1:          LDA $00                             ;; 01B7A1 : A5 00       ;
CODE_01B7A3:          PHA                                 ;; 01B7A3 : 48          ;
CODE_01B7A4:          LDA $02                             ;; 01B7A4 : A5 02       ;
CODE_01B7A6:          PHA                                 ;; 01B7A6 : 48          ;
CODE_01B7A7:          LDA.B #$04                          ;; 01B7A7 : A9 04       ;
CODE_01B7A9:          JSR.W CODE_01B37E                   ;; 01B7A9 : 20 7E B3    ;
CODE_01B7AC:          PLA                                 ;; 01B7AC : 68          ;
CODE_01B7AD:          STA $02                             ;; 01B7AD : 85 02       ;
CODE_01B7AF:          PLA                                 ;; 01B7AF : 68          ;
CODE_01B7B0:          STA $00                             ;; 01B7B0 : 85 00       ;
Return01B7B2:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
FinishOAMWrite:       PHB                                 ;; ?QPWZ? : 8B          ; Wrapper 
CODE_01B7B4:          PHK                                 ;; 01B7B4 : 4B          ;
CODE_01B7B5:          PLB                                 ;; 01B7B5 : AB          ;
CODE_01B7B6:          JSR.W FinishOAMWriteRt              ;; 01B7B6 : 20 BB B7    ;
CODE_01B7B9:          PLB                                 ;; 01B7B9 : AB          ;
Return01B7BA:         RTL                                 ;; ?QPWZ? : 6B          ; Return 
                                                          ;;                      ;
FinishOAMWriteRt:     STY $0B                             ;; ?QPWZ? : 84 0B       ;
CODE_01B7BD:          STA $08                             ;; 01B7BD : 85 08       ;
CODE_01B7BF:          LDY.W RAM_SprOAMIndex,X             ;; 01B7BF : BC EA 15    ; Y = Index into sprite OAM 
CODE_01B7C2:          LDA RAM_SpriteYLo,X                 ;; 01B7C2 : B5 D8       ;
CODE_01B7C4:          STA $00                             ;; 01B7C4 : 85 00       ;
CODE_01B7C6:          SEC                                 ;; 01B7C6 : 38          ;
CODE_01B7C7:          SBC RAM_ScreenBndryYLo              ;; 01B7C7 : E5 1C       ;
CODE_01B7C9:          STA $06                             ;; 01B7C9 : 85 06       ;
CODE_01B7CB:          LDA.W RAM_SpriteYHi,X               ;; 01B7CB : BD D4 14    ;
CODE_01B7CE:          STA $01                             ;; 01B7CE : 85 01       ;
CODE_01B7D0:          LDA RAM_SpriteXLo,X                 ;; 01B7D0 : B5 E4       ;
CODE_01B7D2:          STA $02                             ;; 01B7D2 : 85 02       ;
CODE_01B7D4:          SEC                                 ;; 01B7D4 : 38          ;
CODE_01B7D5:          SBC RAM_ScreenBndryXLo              ;; 01B7D5 : E5 1A       ;
CODE_01B7D7:          STA $07                             ;; 01B7D7 : 85 07       ;
CODE_01B7D9:          LDA.W RAM_SpriteXHi,X               ;; 01B7D9 : BD E0 14    ;
CODE_01B7DC:          STA $03                             ;; 01B7DC : 85 03       ;
CODE_01B7DE:          TYA                                 ;; 01B7DE : 98          ;
CODE_01B7DF:          LSR                                 ;; 01B7DF : 4A          ;
CODE_01B7E0:          LSR                                 ;; 01B7E0 : 4A          ;
CODE_01B7E1:          TAX                                 ;; 01B7E1 : AA          ;
CODE_01B7E2:          LDA $0B                             ;; 01B7E2 : A5 0B       ;
CODE_01B7E4:          BPL CODE_01B7F0                     ;; 01B7E4 : 10 0A       ;
CODE_01B7E6:          LDA.W OAM_TileSize,X                ;; 01B7E6 : BD 60 04    ;
CODE_01B7E9:          AND.B #$02                          ;; 01B7E9 : 29 02       ;
CODE_01B7EB:          STA.W OAM_TileSize,X                ;; 01B7EB : 9D 60 04    ;
CODE_01B7EE:          BRA CODE_01B7F3                     ;; 01B7EE : 80 03       ;
                                                          ;;                      ;
CODE_01B7F0:          STA.W OAM_TileSize,X                ;; 01B7F0 : 9D 60 04    ;
CODE_01B7F3:          LDX.B #$00                          ;; 01B7F3 : A2 00       ;
CODE_01B7F5:          LDA.W OAM_DispX,Y                   ;; 01B7F5 : B9 00 03    ;
CODE_01B7F8:          SEC                                 ;; 01B7F8 : 38          ;
CODE_01B7F9:          SBC $07                             ;; 01B7F9 : E5 07       ;
CODE_01B7FB:          BPL CODE_01B7FE                     ;; 01B7FB : 10 01       ;
CODE_01B7FD:          DEX                                 ;; 01B7FD : CA          ;
CODE_01B7FE:          CLC                                 ;; 01B7FE : 18          ;
CODE_01B7FF:          ADC $02                             ;; 01B7FF : 65 02       ;
CODE_01B801:          STA $04                             ;; 01B801 : 85 04       ;
CODE_01B803:          TXA                                 ;; 01B803 : 8A          ;
CODE_01B804:          ADC $03                             ;; 01B804 : 65 03       ;
CODE_01B806:          STA $05                             ;; 01B806 : 85 05       ;
CODE_01B808:          JSR.W CODE_01B844                   ;; 01B808 : 20 44 B8    ;
CODE_01B80B:          BCC CODE_01B819                     ;; 01B80B : 90 0C       ;
CODE_01B80D:          TYA                                 ;; 01B80D : 98          ;
CODE_01B80E:          LSR                                 ;; 01B80E : 4A          ;
CODE_01B80F:          LSR                                 ;; 01B80F : 4A          ;
CODE_01B810:          TAX                                 ;; 01B810 : AA          ;
CODE_01B811:          LDA.W OAM_TileSize,X                ;; 01B811 : BD 60 04    ;
CODE_01B814:          ORA.B #$01                          ;; 01B814 : 09 01       ;
CODE_01B816:          STA.W OAM_TileSize,X                ;; 01B816 : 9D 60 04    ;
CODE_01B819:          LDX.B #$00                          ;; 01B819 : A2 00       ;
CODE_01B81B:          LDA.W OAM_DispY,Y                   ;; 01B81B : B9 01 03    ;
CODE_01B81E:          SEC                                 ;; 01B81E : 38          ;
CODE_01B81F:          SBC $06                             ;; 01B81F : E5 06       ;
CODE_01B821:          BPL CODE_01B824                     ;; 01B821 : 10 01       ;
CODE_01B823:          DEX                                 ;; 01B823 : CA          ;
CODE_01B824:          CLC                                 ;; 01B824 : 18          ;
CODE_01B825:          ADC $00                             ;; 01B825 : 65 00       ;
CODE_01B827:          STA $09                             ;; 01B827 : 85 09       ;
CODE_01B829:          TXA                                 ;; 01B829 : 8A          ;
CODE_01B82A:          ADC $01                             ;; 01B82A : 65 01       ;
CODE_01B82C:          STA $0A                             ;; 01B82C : 85 0A       ;
CODE_01B82E:          JSR.W CODE_01C9BF                   ;; 01B82E : 20 BF C9    ;
CODE_01B831:          BCC CODE_01B838                     ;; 01B831 : 90 05       ;
CODE_01B833:          LDA.B #$F0                          ;; 01B833 : A9 F0       ;
CODE_01B835:          STA.W OAM_DispY,Y                   ;; 01B835 : 99 01 03    ;
CODE_01B838:          INY                                 ;; 01B838 : C8          ;
CODE_01B839:          INY                                 ;; 01B839 : C8          ;
CODE_01B83A:          INY                                 ;; 01B83A : C8          ;
CODE_01B83B:          INY                                 ;; 01B83B : C8          ;
CODE_01B83C:          DEC $08                             ;; 01B83C : C6 08       ;
CODE_01B83E:          BPL CODE_01B7DE                     ;; 01B83E : 10 9E       ;
CODE_01B840:          LDX.W $15E9                         ;; 01B840 : AE E9 15    ; X = Sprite index 
Return01B843:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01B844:          REP #$20                            ;; 01B844 : C2 20       ; Accum (16 bit) 
CODE_01B846:          LDA $04                             ;; 01B846 : A5 04       ;
CODE_01B848:          SEC                                 ;; 01B848 : 38          ;
CODE_01B849:          SBC RAM_ScreenBndryXLo              ;; 01B849 : E5 1A       ;
CODE_01B84B:          CMP.W #$0100                        ;; 01B84B : C9 00 01    ;
CODE_01B84E:          SEP #$20                            ;; 01B84E : E2 20       ; Accum (8 bit) 
Return01B850:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
Return01B851:         RTS                                 ;; ?QPWZ? : 60          ;
                                                          ;;                      ;
CODE_01B852:          LDA.W $15C4,X                       ;; 01B852 : BD C4 15    ;
CODE_01B855:          BNE Return01B8B1                    ;; 01B855 : D0 5A       ;
CODE_01B857:          LDA RAM_MarioAnimation              ;; 01B857 : A5 71       ;
CODE_01B859:          CMP.B #$01                          ;; 01B859 : C9 01       ;
CODE_01B85B:          BCS Return01B8B1                    ;; 01B85B : B0 54       ;
CODE_01B85D:          JSR.W CODE_01B8FF                   ;; 01B85D : 20 FF B8    ;
CODE_01B860:          BCC Return01B8B1                    ;; 01B860 : 90 4F       ;
CODE_01B862:          LDA RAM_SpriteYLo,X                 ;; 01B862 : B5 D8       ;
CODE_01B864:          SEC                                 ;; 01B864 : 38          ;
CODE_01B865:          SBC RAM_ScreenBndryYLo              ;; 01B865 : E5 1C       ;
CODE_01B867:          STA $02                             ;; 01B867 : 85 02       ;
CODE_01B869:          SEC                                 ;; 01B869 : 38          ;
CODE_01B86A:          SBC $0D                             ;; 01B86A : E5 0D       ;
CODE_01B86C:          STA $09                             ;; 01B86C : 85 09       ;
CODE_01B86E:          LDA $80                             ;; 01B86E : A5 80       ;
CODE_01B870:          CLC                                 ;; 01B870 : 18          ;
CODE_01B871:          ADC.B #$18                          ;; 01B871 : 69 18       ;
CODE_01B873:          CMP $09                             ;; 01B873 : C5 09       ;
CODE_01B875:          BCS ADDR_01B8B2                     ;; 01B875 : B0 3B       ;
CODE_01B877:          LDA RAM_MarioSpeedY                 ;; 01B877 : A5 7D       ;
CODE_01B879:          BMI Return01B8B1                    ;; 01B879 : 30 36       ;
CODE_01B87B:          STZ RAM_MarioSpeedY                 ;; 01B87B : 64 7D       ;
CODE_01B87D:          LDA.B #$01                          ;; 01B87D : A9 01       ;
CODE_01B87F:          STA.W $1471                         ;; 01B87F : 8D 71 14    ;
CODE_01B882:          LDA $0D                             ;; 01B882 : A5 0D       ;
CODE_01B884:          CLC                                 ;; 01B884 : 18          ;
CODE_01B885:          ADC.B #$1F                          ;; 01B885 : 69 1F       ;
CODE_01B887:          LDY.W RAM_OnYoshi                   ;; 01B887 : AC 7A 18    ;
CODE_01B88A:          BEQ CODE_01B88F                     ;; 01B88A : F0 03       ;
CODE_01B88C:          CLC                                 ;; 01B88C : 18          ;
CODE_01B88D:          ADC.B #$10                          ;; 01B88D : 69 10       ;
CODE_01B88F:          STA $00                             ;; 01B88F : 85 00       ;
CODE_01B891:          LDA RAM_SpriteYLo,X                 ;; 01B891 : B5 D8       ;
CODE_01B893:          SEC                                 ;; 01B893 : 38          ;
CODE_01B894:          SBC $00                             ;; 01B894 : E5 00       ;
CODE_01B896:          STA RAM_MarioYPos                   ;; 01B896 : 85 96       ;
CODE_01B898:          LDA.W RAM_SpriteYHi,X               ;; 01B898 : BD D4 14    ;
CODE_01B89B:          SBC.B #$00                          ;; 01B89B : E9 00       ;
CODE_01B89D:          STA RAM_MarioYPosHi                 ;; 01B89D : 85 97       ;
CODE_01B89F:          LDY.B #$00                          ;; 01B89F : A0 00       ;
CODE_01B8A1:          LDA.W $1491                         ;; 01B8A1 : AD 91 14    ;
CODE_01B8A4:          BPL CODE_01B8A7                     ;; 01B8A4 : 10 01       ;
ADDR_01B8A6:          DEY                                 ;; 01B8A6 : 88          ;
CODE_01B8A7:          CLC                                 ;; 01B8A7 : 18          ;
CODE_01B8A8:          ADC RAM_MarioXPos                   ;; 01B8A8 : 65 94       ;
CODE_01B8AA:          STA RAM_MarioXPos                   ;; 01B8AA : 85 94       ;
CODE_01B8AC:          TYA                                 ;; 01B8AC : 98          ;
CODE_01B8AD:          ADC RAM_MarioXPosHi                 ;; 01B8AD : 65 95       ;
CODE_01B8AF:          STA RAM_MarioXPosHi                 ;; 01B8AF : 85 95       ;
Return01B8B1:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
ADDR_01B8B2:          LDA $02                             ;; 01B8B2 : A5 02       ;
ADDR_01B8B4:          CLC                                 ;; 01B8B4 : 18          ;
ADDR_01B8B5:          ADC $0D                             ;; 01B8B5 : 65 0D       ;
ADDR_01B8B7:          STA $02                             ;; 01B8B7 : 85 02       ;
ADDR_01B8B9:          LDA.B #$FF                          ;; 01B8B9 : A9 FF       ;
ADDR_01B8BB:          LDY RAM_IsDucking                   ;; 01B8BB : A4 73       ;
ADDR_01B8BD:          BNE ADDR_01B8C3                     ;; 01B8BD : D0 04       ;
ADDR_01B8BF:          LDY RAM_MarioPowerUp                ;; 01B8BF : A4 19       ;
ADDR_01B8C1:          BNE ADDR_01B8C5                     ;; 01B8C1 : D0 02       ;
ADDR_01B8C3:          LDA.B #$08                          ;; 01B8C3 : A9 08       ;
ADDR_01B8C5:          CLC                                 ;; 01B8C5 : 18          ;
ADDR_01B8C6:          ADC $80                             ;; 01B8C6 : 65 80       ;
ADDR_01B8C8:          CMP $02                             ;; 01B8C8 : C5 02       ;
ADDR_01B8CA:          BCC ADDR_01B8D5                     ;; 01B8CA : 90 09       ;
ADDR_01B8CC:          LDA RAM_MarioSpeedY                 ;; 01B8CC : A5 7D       ;
ADDR_01B8CE:          BPL Return01B8D4                    ;; 01B8CE : 10 04       ;
ADDR_01B8D0:          LDA.B #$10                          ;; 01B8D0 : A9 10       ;
ADDR_01B8D2:          STA RAM_MarioSpeedY                 ;; 01B8D2 : 85 7D       ;
Return01B8D4:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
ADDR_01B8D5:          LDA $0E                             ;; 01B8D5 : A5 0E       ;
ADDR_01B8D7:          CLC                                 ;; 01B8D7 : 18          ;
ADDR_01B8D8:          ADC.B #$10                          ;; 01B8D8 : 69 10       ;
ADDR_01B8DA:          STA $00                             ;; 01B8DA : 85 00       ;
ADDR_01B8DC:          LDY.B #$00                          ;; 01B8DC : A0 00       ;
ADDR_01B8DE:          LDA RAM_SpriteXLo,X                 ;; 01B8DE : B5 E4       ;
ADDR_01B8E0:          SEC                                 ;; 01B8E0 : 38          ;
ADDR_01B8E1:          SBC RAM_ScreenBndryXLo              ;; 01B8E1 : E5 1A       ;
ADDR_01B8E3:          CMP $7E                             ;; 01B8E3 : C5 7E       ;
ADDR_01B8E5:          BCC ADDR_01B8EF                     ;; 01B8E5 : 90 08       ;
ADDR_01B8E7:          LDA $00                             ;; 01B8E7 : A5 00       ;
ADDR_01B8E9:          EOR.B #$FF                          ;; 01B8E9 : 49 FF       ;
ADDR_01B8EB:          INC A                               ;; 01B8EB : 1A          ;
ADDR_01B8EC:          STA $00                             ;; 01B8EC : 85 00       ;
ADDR_01B8EE:          DEY                                 ;; 01B8EE : 88          ;
ADDR_01B8EF:          LDA RAM_SpriteXLo,X                 ;; 01B8EF : B5 E4       ;
ADDR_01B8F1:          CLC                                 ;; 01B8F1 : 18          ;
ADDR_01B8F2:          ADC $00                             ;; 01B8F2 : 65 00       ;
ADDR_01B8F4:          STA RAM_MarioXPos                   ;; 01B8F4 : 85 94       ;
ADDR_01B8F6:          TYA                                 ;; 01B8F6 : 98          ;
ADDR_01B8F7:          ADC.W RAM_SpriteXHi,X               ;; 01B8F7 : 7D E0 14    ;
ADDR_01B8FA:          STA RAM_MarioXPosHi                 ;; 01B8FA : 85 95       ;
ADDR_01B8FC:          STZ RAM_MarioSpeedX                 ;; 01B8FC : 64 7B       ;
Return01B8FE:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01B8FF:          LDA $00                             ;; 01B8FF : A5 00       ;
CODE_01B901:          STA $0E                             ;; 01B901 : 85 0E       ;
CODE_01B903:          LDA $02                             ;; 01B903 : A5 02       ;
CODE_01B905:          STA $0D                             ;; 01B905 : 85 0D       ;
CODE_01B907:          LDA RAM_SpriteXLo,X                 ;; 01B907 : B5 E4       ;
CODE_01B909:          SEC                                 ;; 01B909 : 38          ;
CODE_01B90A:          SBC $00                             ;; 01B90A : E5 00       ;
CODE_01B90C:          STA $04                             ;; 01B90C : 85 04       ;
CODE_01B90E:          LDA.W RAM_SpriteXHi,X               ;; 01B90E : BD E0 14    ;
CODE_01B911:          SBC.B #$00                          ;; 01B911 : E9 00       ;
CODE_01B913:          STA $0A                             ;; 01B913 : 85 0A       ;
CODE_01B915:          LDA $00                             ;; 01B915 : A5 00       ;
CODE_01B917:          ASL                                 ;; 01B917 : 0A          ;
CODE_01B918:          CLC                                 ;; 01B918 : 18          ;
CODE_01B919:          ADC.B #$10                          ;; 01B919 : 69 10       ;
CODE_01B91B:          STA $06                             ;; 01B91B : 85 06       ;
CODE_01B91D:          LDA RAM_SpriteYLo,X                 ;; 01B91D : B5 D8       ;
CODE_01B91F:          SEC                                 ;; 01B91F : 38          ;
CODE_01B920:          SBC $02                             ;; 01B920 : E5 02       ;
CODE_01B922:          STA $05                             ;; 01B922 : 85 05       ;
CODE_01B924:          LDA.W RAM_SpriteYHi,X               ;; 01B924 : BD D4 14    ;
CODE_01B927:          SBC.B #$00                          ;; 01B927 : E9 00       ;
CODE_01B929:          STA $0B                             ;; 01B929 : 85 0B       ;
CODE_01B92B:          LDA $02                             ;; 01B92B : A5 02       ;
CODE_01B92D:          ASL                                 ;; 01B92D : 0A          ;
CODE_01B92E:          CLC                                 ;; 01B92E : 18          ;
CODE_01B92F:          ADC.B #$10                          ;; 01B92F : 69 10       ;
CODE_01B931:          STA $07                             ;; 01B931 : 85 07       ;
CODE_01B933:          JSL.L GetMarioClipping              ;; 01B933 : 22 64 B6 03 ;
CODE_01B937:          JSL.L CheckForContact               ;; 01B937 : 22 2B B7 03 ;
Return01B93B:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
HorzNetKoopaSpeed:    .db $08,$F8                         ;; ?QPWZ?               ;
                                                          ;;                      ;
InitHorzNetKoopa:     JSR.W SubHorizPos                   ;; ?QPWZ? : 20 30 AD    ;
CODE_01B941:          LDA.W HorzNetKoopaSpeed,Y           ;; 01B941 : B9 3C B9    ;
CODE_01B944:          STA RAM_SpriteSpeedX,X              ;; 01B944 : 95 B6       ;
CODE_01B946:          BRA CODE_01B950                     ;; 01B946 : 80 08       ;
                                                          ;;                      ;
InitVertNetKoopa:     INC RAM_SpriteState,X               ;; ?QPWZ? : F6 C2       ;
CODE_01B94A:          INC RAM_SpriteSpeedX,X              ;; 01B94A : F6 B6       ;
CODE_01B94C:          LDA.B #$F8                          ;; 01B94C : A9 F8       ;
CODE_01B94E:          STA RAM_SpriteSpeedY,X              ;; 01B94E : 95 AA       ;
CODE_01B950:          LDA RAM_SpriteXLo,X                 ;; 01B950 : B5 E4       ;
CODE_01B952:          LDY.B #$00                          ;; 01B952 : A0 00       ;
CODE_01B954:          AND.B #$10                          ;; 01B954 : 29 10       ;
CODE_01B956:          BNE CODE_01B959                     ;; 01B956 : D0 01       ;
CODE_01B958:          INY                                 ;; 01B958 : C8          ;
CODE_01B959:          TYA                                 ;; 01B959 : 98          ;
CODE_01B95A:          STA.W RAM_SprBehindScrn,X           ;; 01B95A : 9D 32 16    ;
CODE_01B95D:          LDA.W RAM_SpritePal,X               ;; 01B95D : BD F6 15    ;
CODE_01B960:          AND.B #$02                          ;; 01B960 : 29 02       ;
CODE_01B962:          BNE Return01B968                    ;; 01B962 : D0 04       ;
CODE_01B964:          ASL RAM_SpriteSpeedX,X              ;; 01B964 : 16 B6       ;
CODE_01B966:          ASL RAM_SpriteSpeedY,X              ;; 01B966 : 16 AA       ;
Return01B968:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
DATA_01B969:          .db $02,$02,$03,$04,$03,$02,$02,$02 ;; 01B969               ;
                      .db $01,$02                         ;; ?QPWZ?               ;
                                                          ;;                      ;
DATA_01B973:          .db $01,$01,$00,$00,$00,$01,$01,$01 ;; 01B973               ;
                      .db $01,$01                         ;; ?QPWZ?               ;
                                                          ;;                      ;
DATA_01B97D:          .db $03,$0C                         ;; 01B97D               ;
                                                          ;;                      ;
ClimbingKoopa:        LDA.W $1540,X                       ;; ?QPWZ? : BD 40 15    ;
CODE_01B982:          BEQ CODE_01B9FB                     ;; 01B982 : F0 77       ;
CODE_01B984:          CMP.B #$30                          ;; 01B984 : C9 30       ;
CODE_01B986:          BCC CODE_01B9A0                     ;; 01B986 : 90 18       ;
CODE_01B988:          CMP.B #$40                          ;; 01B988 : C9 40       ;
CODE_01B98A:          BCC CODE_01B9A3                     ;; 01B98A : 90 17       ;
CODE_01B98C:          BNE CODE_01B9A0                     ;; 01B98C : D0 12       ;
CODE_01B98E:          LDY RAM_SpritesLocked               ;; 01B98E : A4 9D       ;
CODE_01B990:          BNE CODE_01B9A0                     ;; 01B990 : D0 0E       ;
CODE_01B992:          LDA.W RAM_SprBehindScrn,X           ;; 01B992 : BD 32 16    ;
CODE_01B995:          EOR.B #$01                          ;; 01B995 : 49 01       ;
CODE_01B997:          STA.W RAM_SprBehindScrn,X           ;; 01B997 : 9D 32 16    ;
CODE_01B99A:          JSR.W FlipSpriteDir                 ;; 01B99A : 20 98 90    ;
CODE_01B99D:          JSR.W CODE_01BA7F                   ;; 01B99D : 20 7F BA    ;
CODE_01B9A0:          JMP.W CODE_01BA37                   ;; 01B9A0 : 4C 37 BA    ;
                                                          ;;                      ;
CODE_01B9A3:          LDY RAM_SpriteYLo,X                 ;; 01B9A3 : B4 D8       ;
CODE_01B9A5:          PHY                                 ;; 01B9A5 : 5A          ;
CODE_01B9A6:          LDY.W RAM_SpriteYHi,X               ;; 01B9A6 : BC D4 14    ;
CODE_01B9A9:          PHY                                 ;; 01B9A9 : 5A          ;
CODE_01B9AA:          LDY.B #$00                          ;; 01B9AA : A0 00       ;
CODE_01B9AC:          CMP.B #$38                          ;; 01B9AC : C9 38       ;
CODE_01B9AE:          BCC CODE_01B9B1                     ;; 01B9AE : 90 01       ;
CODE_01B9B0:          INY                                 ;; 01B9B0 : C8          ;
CODE_01B9B1:          LDA RAM_SpriteState,X               ;; 01B9B1 : B5 C2       ;
CODE_01B9B3:          BEQ CODE_01B9CC                     ;; 01B9B3 : F0 17       ;
CODE_01B9B5:          INY                                 ;; 01B9B5 : C8          ;
CODE_01B9B6:          INY                                 ;; 01B9B6 : C8          ;
CODE_01B9B7:          LDA RAM_SpriteYLo,X                 ;; 01B9B7 : B5 D8       ;
CODE_01B9B9:          SEC                                 ;; 01B9B9 : 38          ;
CODE_01B9BA:          SBC.B #$0C                          ;; 01B9BA : E9 0C       ;
CODE_01B9BC:          STA RAM_SpriteYLo,X                 ;; 01B9BC : 95 D8       ;
CODE_01B9BE:          LDA.W RAM_SpriteYHi,X               ;; 01B9BE : BD D4 14    ;
CODE_01B9C1:          SBC.B #$00                          ;; 01B9C1 : E9 00       ;
CODE_01B9C3:          STA.W RAM_SpriteYHi,X               ;; 01B9C3 : 9D D4 14    ;
CODE_01B9C6:          LDA.W RAM_SprBehindScrn,X           ;; 01B9C6 : BD 32 16    ;
CODE_01B9C9:          BEQ CODE_01B9CC                     ;; 01B9C9 : F0 01       ;
CODE_01B9CB:          INY                                 ;; 01B9CB : C8          ;
CODE_01B9CC:          LDA.W $1EEB                         ;; 01B9CC : AD EB 1E    ;
CODE_01B9CF:          BPL CODE_01B9D6                     ;; 01B9CF : 10 05       ;
ADDR_01B9D1:          INY                                 ;; 01B9D1 : C8          ;
ADDR_01B9D2:          INY                                 ;; 01B9D2 : C8          ;
ADDR_01B9D3:          INY                                 ;; 01B9D3 : C8          ;
ADDR_01B9D4:          INY                                 ;; 01B9D4 : C8          ;
ADDR_01B9D5:          INY                                 ;; 01B9D5 : C8          ;
CODE_01B9D6:          LDA.W DATA_01B969,Y                 ;; 01B9D6 : B9 69 B9    ;
CODE_01B9D9:          STA.W $1602,X                       ;; 01B9D9 : 9D 02 16    ;
CODE_01B9DC:          LDA.W DATA_01B973,Y                 ;; 01B9DC : B9 73 B9    ;
CODE_01B9DF:          STA $00                             ;; 01B9DF : 85 00       ;
CODE_01B9E1:          LDA.W RAM_SpritePal,X               ;; 01B9E1 : BD F6 15    ;
CODE_01B9E4:          PHA                                 ;; 01B9E4 : 48          ;
CODE_01B9E5:          AND.B #$FE                          ;; 01B9E5 : 29 FE       ;
CODE_01B9E7:          ORA $00                             ;; 01B9E7 : 05 00       ;
CODE_01B9E9:          STA.W RAM_SpritePal,X               ;; 01B9E9 : 9D F6 15    ;
CODE_01B9EC:          JSR.W SubSprGfx1                    ;; 01B9EC : 20 67 9D    ;
CODE_01B9EF:          PLA                                 ;; 01B9EF : 68          ;
CODE_01B9F0:          STA.W RAM_SpritePal,X               ;; 01B9F0 : 9D F6 15    ;
CODE_01B9F3:          PLA                                 ;; 01B9F3 : 68          ;
CODE_01B9F4:          STA.W RAM_SpriteYHi,X               ;; 01B9F4 : 9D D4 14    ;
CODE_01B9F7:          PLA                                 ;; 01B9F7 : 68          ;
CODE_01B9F8:          STA RAM_SpriteYLo,X                 ;; 01B9F8 : 95 D8       ;
Return01B9FA:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01B9FB:          LDA RAM_SpritesLocked               ;; 01B9FB : A5 9D       ; \ Branch if sprites locked 
CODE_01B9FD:          BNE CODE_01BA53                     ;; 01B9FD : D0 54       ; / 
CODE_01B9FF:          JSR.W CODE_019140                   ;; 01B9FF : 20 40 91    ;
CODE_01BA02:          LDY RAM_SpriteState,X               ;; 01BA02 : B4 C2       ;
CODE_01BA04:          LDA.W RAM_SprObjStatus,X            ;; 01BA04 : BD 88 15    ;
CODE_01BA07:          AND.W DATA_01B97D,Y                 ;; 01BA07 : 39 7D B9    ;
CODE_01BA0A:          BEQ CODE_01BA14                     ;; 01BA0A : F0 08       ;
CODE_01BA0C:          JSR.W FlipSpriteDir                 ;; 01BA0C : 20 98 90    ;
CODE_01BA0F:          JSR.W CODE_01BA7F                   ;; 01BA0F : 20 7F BA    ;
CODE_01BA12:          BRA CODE_01BA37                     ;; 01BA12 : 80 23       ;
                                                          ;;                      ;
CODE_01BA14:          LDA.W $185F                         ;; 01BA14 : AD 5F 18    ;
CODE_01BA17:          LDY RAM_SpriteSpeedY,X              ;; 01BA17 : B4 AA       ;
CODE_01BA19:          BEQ CODE_01BA27                     ;; 01BA19 : F0 0C       ;
CODE_01BA1B:          BPL CODE_01BA1F                     ;; 01BA1B : 10 02       ;
CODE_01BA1D:          BMI CODE_01BA2A                     ;; 01BA1D : 30 0B       ;
CODE_01BA1F:          CMP.B #$07                          ;; 01BA1F : C9 07       ;
CODE_01BA21:          BCC CODE_01BA0C                     ;; 01BA21 : 90 E9       ;
CODE_01BA23:          CMP.B #$1D                          ;; 01BA23 : C9 1D       ;
CODE_01BA25:          BCS CODE_01BA0C                     ;; 01BA25 : B0 E5       ;
CODE_01BA27:          LDA.W $1860                         ;; 01BA27 : AD 60 18    ;
CODE_01BA2A:          CMP.B #$07                          ;; 01BA2A : C9 07       ;
CODE_01BA2C:          BCC CODE_01BA32                     ;; 01BA2C : 90 04       ;
CODE_01BA2E:          CMP.B #$1D                          ;; 01BA2E : C9 1D       ;
CODE_01BA30:          BCC CODE_01BA37                     ;; 01BA30 : 90 05       ;
CODE_01BA32:          LDA.B #$50                          ;; 01BA32 : A9 50       ;
CODE_01BA34:          STA.W $1540,X                       ;; 01BA34 : 9D 40 15    ;
CODE_01BA37:          LDA RAM_SpritesLocked               ;; 01BA37 : A5 9D       ; \ Branch if sprites locked 
CODE_01BA39:          BNE CODE_01BA53                     ;; 01BA39 : D0 18       ; / 
CODE_01BA3B:          INC.W $1570,X                       ;; 01BA3B : FE 70 15    ;
CODE_01BA3E:          JSR.W UpdateDirection               ;; 01BA3E : 20 15 9A    ;
CODE_01BA41:          LDA RAM_SpriteState,X               ;; 01BA41 : B5 C2       ;
CODE_01BA43:          BNE CODE_01BA4A                     ;; 01BA43 : D0 05       ;
CODE_01BA45:          JSR.W SubSprXPosNoGrvty             ;; 01BA45 : 20 CC AB    ;
CODE_01BA48:          BRA CODE_01BA4D                     ;; 01BA48 : 80 03       ;
                                                          ;;                      ;
CODE_01BA4A:          JSR.W SubSprYPosNoGrvty             ;; 01BA4A : 20 D8 AB    ;
CODE_01BA4D:          JSR.W MarioSprInteractRt            ;; 01BA4D : 20 E4 A7    ;
CODE_01BA50:          JSR.W SubOffscreen0Bnk1             ;; 01BA50 : 20 31 AC    ;
CODE_01BA53:          LDA.W RAM_SpriteDir,X               ;; 01BA53 : BD 7C 15    ;
CODE_01BA56:          PHA                                 ;; 01BA56 : 48          ;
CODE_01BA57:          LDA.W $1570,X                       ;; 01BA57 : BD 70 15    ;
CODE_01BA5A:          AND.B #$08                          ;; 01BA5A : 29 08       ;
CODE_01BA5C:          LSR                                 ;; 01BA5C : 4A          ;
CODE_01BA5D:          LSR                                 ;; 01BA5D : 4A          ;
CODE_01BA5E:          LSR                                 ;; 01BA5E : 4A          ;
CODE_01BA5F:          STA.W RAM_SpriteDir,X               ;; 01BA5F : 9D 7C 15    ;
CODE_01BA62:          LDA $64                             ;; 01BA62 : A5 64       ;
CODE_01BA64:          PHA                                 ;; 01BA64 : 48          ;
CODE_01BA65:          LDA.W RAM_SprBehindScrn,X           ;; 01BA65 : BD 32 16    ;
CODE_01BA68:          STA.W $1602,X                       ;; 01BA68 : 9D 02 16    ;
CODE_01BA6B:          LDA.W RAM_SprBehindScrn,X           ;; 01BA6B : BD 32 16    ;
CODE_01BA6E:          BEQ CODE_01BA74                     ;; 01BA6E : F0 04       ;
CODE_01BA70:          LDA.B #$10                          ;; 01BA70 : A9 10       ;
CODE_01BA72:          STA $64                             ;; 01BA72 : 85 64       ;
CODE_01BA74:          JSR.W SubSprGfx1                    ;; 01BA74 : 20 67 9D    ;
CODE_01BA77:          PLA                                 ;; 01BA77 : 68          ;
CODE_01BA78:          STA $64                             ;; 01BA78 : 85 64       ;
CODE_01BA7A:          PLA                                 ;; 01BA7A : 68          ;
CODE_01BA7B:          STA.W RAM_SpriteDir,X               ;; 01BA7B : 9D 7C 15    ;
Return01BA7E:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01BA7F:          LDA RAM_SpriteSpeedY,X              ;; 01BA7F : B5 AA       ;
CODE_01BA81:          EOR.B #$FF                          ;; 01BA81 : 49 FF       ;
CODE_01BA83:          INC A                               ;; 01BA83 : 1A          ;
CODE_01BA84:          STA RAM_SpriteSpeedY,X              ;; 01BA84 : 95 AA       ;
Return01BA86:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
InitClimbingDoor:     LDA RAM_SpriteXLo,X                 ;; ?QPWZ? : B5 E4       ;
CODE_01BA89:          CLC                                 ;; 01BA89 : 18          ;
CODE_01BA8A:          ADC.B #$08                          ;; 01BA8A : 69 08       ;
CODE_01BA8C:          STA RAM_SpriteXLo,X                 ;; 01BA8C : 95 E4       ;
CODE_01BA8E:          LDA RAM_SpriteYLo,X                 ;; 01BA8E : B5 D8       ;
CODE_01BA90:          ADC.B #$07                          ;; 01BA90 : 69 07       ;
CODE_01BA92:          STA RAM_SpriteYLo,X                 ;; 01BA92 : 95 D8       ;
Return01BA94:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
DATA_01BA95:          .db $30,$54                         ;; 01BA95               ;
                                                          ;;                      ;
DATA_01BA97:          .db $00,$01,$02,$04,$06,$09,$0C,$0D ;; 01BA97               ;
                      .db $14,$0D,$0C,$09,$06,$04,$02,$01 ;; ?QPWZ?               ;
DATA_01BAA7:          .db $00,$00,$00,$00,$00,$01,$01,$01 ;; 01BAA7               ;
                      .db $02,$01,$01,$01,$00,$00,$00,$00 ;; ?QPWZ?               ;
DATA_01BAB7:          .db $00,$10,$00,$00,$10,$00,$01,$11 ;; 01BAB7               ;
                      .db $01,$05,$15,$05,$05,$15,$05,$00 ;; ?QPWZ?               ;
                      .db $00,$00,$03,$13,$03             ;; ?QPWZ?               ;
                                                          ;;                      ;
Return01BACC:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
ClimbingDoor:         JSR.W SubOffscreen0Bnk1             ;; ?QPWZ? : 20 31 AC    ;
CODE_01BAD0:          LDA.W RAM_DisableInter,X            ;; 01BAD0 : BD 4C 15    ;
CODE_01BAD3:          CMP.B #$01                          ;; 01BAD3 : C9 01       ;
CODE_01BAD5:          BNE CODE_01BAF5                     ;; 01BAD5 : D0 1E       ;
CODE_01BAD7:          LDA.B #$0F                          ;; 01BAD7 : A9 0F       ; \ Play sound effect 
CODE_01BAD9:          STA.W $1DF9                         ;; 01BAD9 : 8D F9 1D    ; / 
CODE_01BADC:          LDA.B #$19                          ;; 01BADC : A9 19       ;
CODE_01BADE:          JSL.L GenTileFromSpr2               ;; 01BADE : 22 00 C0 03 ;
CODE_01BAE2:          LDA.B #$1F                          ;; 01BAE2 : A9 1F       ;
CODE_01BAE4:          STA.W $1540,X                       ;; 01BAE4 : 9D 40 15    ;
CODE_01BAE7:          STA.W $149D                         ;; 01BAE7 : 8D 9D 14    ;
CODE_01BAEA:          LDA RAM_MarioXPos                   ;; 01BAEA : A5 94       ;
CODE_01BAEC:          SEC                                 ;; 01BAEC : 38          ;
CODE_01BAED:          SBC.B #$10                          ;; 01BAED : E9 10       ;
CODE_01BAEF:          SEC                                 ;; 01BAEF : 38          ;
CODE_01BAF0:          SBC RAM_SpriteXLo,X                 ;; 01BAF0 : F5 E4       ;
CODE_01BAF2:          STA.W $1878                         ;; 01BAF2 : 8D 78 18    ;
CODE_01BAF5:          LDA.W $1540,X                       ;; 01BAF5 : BD 40 15    ;
CODE_01BAF8:          ORA.W RAM_DisableInter,X            ;; 01BAF8 : 1D 4C 15    ;
CODE_01BAFB:          BNE CODE_01BB16                     ;; 01BAFB : D0 19       ;
CODE_01BAFD:          JSL.L GetSpriteClippingA            ;; 01BAFD : 22 9F B6 03 ;
CODE_01BB01:          JSR.W CODE_01BC1D                   ;; 01BB01 : 20 1D BC    ;
CODE_01BB04:          JSL.L CheckForContact               ;; 01BB04 : 22 2B B7 03 ;
CODE_01BB08:          BCC CODE_01BB16                     ;; 01BB08 : 90 0C       ;
CODE_01BB0A:          LDA.W $149E                         ;; 01BB0A : AD 9E 14    ;
CODE_01BB0D:          CMP.B #$01                          ;; 01BB0D : C9 01       ;
CODE_01BB0F:          BNE CODE_01BB16                     ;; 01BB0F : D0 05       ;
CODE_01BB11:          LDA.B #$06                          ;; 01BB11 : A9 06       ;
CODE_01BB13:          STA.W RAM_DisableInter,X            ;; 01BB13 : 9D 4C 15    ;
CODE_01BB16:          LDA.W $1540,X                       ;; 01BB16 : BD 40 15    ;
CODE_01BB19:          BEQ Return01BACC                    ;; 01BB19 : F0 B1       ;
CODE_01BB1B:          CMP.B #$01                          ;; 01BB1B : C9 01       ;
CODE_01BB1D:          BNE CODE_01BB27                     ;; 01BB1D : D0 08       ;
CODE_01BB1F:          PHA                                 ;; 01BB1F : 48          ;
CODE_01BB20:          LDA.B #$1A                          ;; 01BB20 : A9 1A       ;
CODE_01BB22:          JSL.L GenTileFromSpr2               ;; 01BB22 : 22 00 C0 03 ;
CODE_01BB26:          PLA                                 ;; 01BB26 : 68          ;
CODE_01BB27:          CMP.B #$10                          ;; 01BB27 : C9 10       ;
CODE_01BB29:          BNE CODE_01BB33                     ;; 01BB29 : D0 08       ;
CODE_01BB2B:          LDA.W RAM_IsBehindScenery           ;; 01BB2B : AD F9 13    ;
CODE_01BB2E:          EOR.B #$01                          ;; 01BB2E : 49 01       ;
CODE_01BB30:          STA.W RAM_IsBehindScenery           ;; 01BB30 : 8D F9 13    ;
CODE_01BB33:          LDA.B #$30                          ;; 01BB33 : A9 30       ;
CODE_01BB35:          STA.W RAM_SprOAMIndex,X             ;; 01BB35 : 9D EA 15    ;
CODE_01BB38:          STA $03                             ;; 01BB38 : 85 03       ;
CODE_01BB3A:          TAY                                 ;; 01BB3A : A8          ;
CODE_01BB3B:          LDA RAM_SpriteXLo,X                 ;; 01BB3B : B5 E4       ;
CODE_01BB3D:          SEC                                 ;; 01BB3D : 38          ;
CODE_01BB3E:          SBC RAM_ScreenBndryXLo              ;; 01BB3E : E5 1A       ;
CODE_01BB40:          STA $00                             ;; 01BB40 : 85 00       ;
CODE_01BB42:          LDA RAM_SpriteYLo,X                 ;; 01BB42 : B5 D8       ;
CODE_01BB44:          SEC                                 ;; 01BB44 : 38          ;
CODE_01BB45:          SBC RAM_ScreenBndryYLo              ;; 01BB45 : E5 1C       ;
CODE_01BB47:          STA $01                             ;; 01BB47 : 85 01       ;
CODE_01BB49:          LDA.W $1540,X                       ;; 01BB49 : BD 40 15    ;
CODE_01BB4C:          LSR                                 ;; 01BB4C : 4A          ;
CODE_01BB4D:          STA $02                             ;; 01BB4D : 85 02       ;
CODE_01BB4F:          TAX                                 ;; 01BB4F : AA          ;
CODE_01BB50:          LDA.W DATA_01BAA7,X                 ;; 01BB50 : BD A7 BA    ;
CODE_01BB53:          STA $06                             ;; 01BB53 : 85 06       ;
CODE_01BB55:          LDA $00                             ;; 01BB55 : A5 00       ;
CODE_01BB57:          CLC                                 ;; 01BB57 : 18          ;
CODE_01BB58:          ADC.W DATA_01BA97,X                 ;; 01BB58 : 7D 97 BA    ;
CODE_01BB5B:          STA.W OAM_DispX,Y                   ;; 01BB5B : 99 00 03    ;
CODE_01BB5E:          STA.W OAM_Tile2DispX,Y              ;; 01BB5E : 99 04 03    ;
CODE_01BB61:          STA.W OAM_Tile3DispX,Y              ;; 01BB61 : 99 08 03    ;
CODE_01BB64:          LDA $06                             ;; 01BB64 : A5 06       ;
CODE_01BB66:          CMP.B #$02                          ;; 01BB66 : C9 02       ;
CODE_01BB68:          BEQ CODE_01BB8E                     ;; 01BB68 : F0 24       ;
CODE_01BB6A:          LDA $00                             ;; 01BB6A : A5 00       ;
CODE_01BB6C:          CLC                                 ;; 01BB6C : 18          ;
CODE_01BB6D:          ADC.B #$20                          ;; 01BB6D : 69 20       ;
CODE_01BB6F:          SEC                                 ;; 01BB6F : 38          ;
CODE_01BB70:          SBC.W DATA_01BA97,X                 ;; 01BB70 : FD 97 BA    ;
CODE_01BB73:          STA.W OAM_Tile4DispX,Y              ;; 01BB73 : 99 0C 03    ;
CODE_01BB76:          STA.W $0310,Y                       ;; 01BB76 : 99 10 03    ;
CODE_01BB79:          STA.W $0314,Y                       ;; 01BB79 : 99 14 03    ;
CODE_01BB7C:          LDA $06                             ;; 01BB7C : A5 06       ;
CODE_01BB7E:          BNE CODE_01BB8E                     ;; 01BB7E : D0 0E       ;
CODE_01BB80:          LDA $00                             ;; 01BB80 : A5 00       ;
CODE_01BB82:          CLC                                 ;; 01BB82 : 18          ;
CODE_01BB83:          ADC.B #$10                          ;; 01BB83 : 69 10       ;
CODE_01BB85:          STA.W $0318,Y                       ;; 01BB85 : 99 18 03    ;
CODE_01BB88:          STA.W $031C,Y                       ;; 01BB88 : 99 1C 03    ;
CODE_01BB8B:          STA.W $0320,Y                       ;; 01BB8B : 99 20 03    ;
CODE_01BB8E:          LDA $01                             ;; 01BB8E : A5 01       ;
CODE_01BB90:          STA.W OAM_DispY,Y                   ;; 01BB90 : 99 01 03    ;
CODE_01BB93:          STA.W OAM_Tile4DispY,Y              ;; 01BB93 : 99 0D 03    ;
CODE_01BB96:          STA.W $0319,Y                       ;; 01BB96 : 99 19 03    ;
CODE_01BB99:          CLC                                 ;; 01BB99 : 18          ;
CODE_01BB9A:          ADC.B #$10                          ;; 01BB9A : 69 10       ;
CODE_01BB9C:          STA.W OAM_Tile2DispY,Y              ;; 01BB9C : 99 05 03    ;
CODE_01BB9F:          STA.W $0311,Y                       ;; 01BB9F : 99 11 03    ;
CODE_01BBA2:          STA.W $031D,Y                       ;; 01BBA2 : 99 1D 03    ;
CODE_01BBA5:          CLC                                 ;; 01BBA5 : 18          ;
CODE_01BBA6:          ADC.B #$10                          ;; 01BBA6 : 69 10       ;
CODE_01BBA8:          STA.W OAM_Tile3DispY,Y              ;; 01BBA8 : 99 09 03    ;
CODE_01BBAB:          STA.W $0315,Y                       ;; 01BBAB : 99 15 03    ;
CODE_01BBAE:          STA.W $0321,Y                       ;; 01BBAE : 99 21 03    ;
CODE_01BBB1:          LDA.B #$08                          ;; 01BBB1 : A9 08       ;
CODE_01BBB3:          STA $07                             ;; 01BBB3 : 85 07       ;
CODE_01BBB5:          LDA $06                             ;; 01BBB5 : A5 06       ;
CODE_01BBB7:          ASL                                 ;; 01BBB7 : 0A          ;
CODE_01BBB8:          ASL                                 ;; 01BBB8 : 0A          ;
CODE_01BBB9:          ASL                                 ;; 01BBB9 : 0A          ;
CODE_01BBBA:          ADC $06                             ;; 01BBBA : 65 06       ;
CODE_01BBBC:          TAX                                 ;; 01BBBC : AA          ;
CODE_01BBBD:          LDA.W DATA_01BAB7,X                 ;; 01BBBD : BD B7 BA    ;
CODE_01BBC0:          STA.W OAM_Tile,Y                    ;; 01BBC0 : 99 02 03    ;
CODE_01BBC3:          INY                                 ;; 01BBC3 : C8          ;
CODE_01BBC4:          INY                                 ;; 01BBC4 : C8          ;
CODE_01BBC5:          INY                                 ;; 01BBC5 : C8          ;
CODE_01BBC6:          INY                                 ;; 01BBC6 : C8          ;
CODE_01BBC7:          INX                                 ;; 01BBC7 : E8          ;
CODE_01BBC8:          DEC $07                             ;; 01BBC8 : C6 07       ;
CODE_01BBCA:          BPL CODE_01BBBD                     ;; 01BBCA : 10 F1       ;
CODE_01BBCC:          LDY $03                             ;; 01BBCC : A4 03       ;
CODE_01BBCE:          LDX.B #$08                          ;; 01BBCE : A2 08       ;
CODE_01BBD0:          LDA $64                             ;; 01BBD0 : A5 64       ;
CODE_01BBD2:          ORA.B #$09                          ;; 01BBD2 : 09 09       ;
CODE_01BBD4:          CPX.B #$06                          ;; 01BBD4 : E0 06       ;
CODE_01BBD6:          BCS CODE_01BBDA                     ;; 01BBD6 : B0 02       ;
CODE_01BBD8:          ORA.B #$40                          ;; 01BBD8 : 09 40       ;
CODE_01BBDA:          CPX.B #$00                          ;; 01BBDA : E0 00       ;
CODE_01BBDC:          BEQ CODE_01BBE6                     ;; 01BBDC : F0 08       ;
CODE_01BBDE:          CPX.B #$03                          ;; 01BBDE : E0 03       ;
CODE_01BBE0:          BEQ CODE_01BBE6                     ;; 01BBE0 : F0 04       ;
CODE_01BBE2:          CPX.B #$06                          ;; 01BBE2 : E0 06       ;
CODE_01BBE4:          BNE CODE_01BBE8                     ;; 01BBE4 : D0 02       ;
CODE_01BBE6:          ORA.B #$80                          ;; 01BBE6 : 09 80       ;
CODE_01BBE8:          STA.W OAM_Prop,Y                    ;; 01BBE8 : 99 03 03    ;
CODE_01BBEB:          INY                                 ;; 01BBEB : C8          ;
CODE_01BBEC:          INY                                 ;; 01BBEC : C8          ;
CODE_01BBED:          INY                                 ;; 01BBED : C8          ;
CODE_01BBEE:          INY                                 ;; 01BBEE : C8          ;
CODE_01BBEF:          DEX                                 ;; 01BBEF : CA          ;
CODE_01BBF0:          BPL CODE_01BBD0                     ;; 01BBF0 : 10 DE       ;
CODE_01BBF2:          LDA $06                             ;; 01BBF2 : A5 06       ;
CODE_01BBF4:          PHA                                 ;; 01BBF4 : 48          ;
CODE_01BBF5:          LDX.W $15E9                         ;; 01BBF5 : AE E9 15    ; X = Sprite index 
CODE_01BBF8:          LDA.B #$08                          ;; 01BBF8 : A9 08       ;
CODE_01BBFA:          JSR.W CODE_01B37E                   ;; 01BBFA : 20 7E B3    ;
CODE_01BBFD:          LDY.B #$0C                          ;; 01BBFD : A0 0C       ;
CODE_01BBFF:          PLA                                 ;; 01BBFF : 68          ;
CODE_01BC00:          BEQ Return01BC1C                    ;; 01BC00 : F0 1A       ;
CODE_01BC02:          CMP.B #$02                          ;; 01BC02 : C9 02       ;
CODE_01BC04:          BNE CODE_01BC11                     ;; 01BC04 : D0 0B       ;
CODE_01BC06:          LDA.B #$03                          ;; 01BC06 : A9 03       ;
CODE_01BC08:          STA.W $0463,Y                       ;; 01BC08 : 99 63 04    ;
CODE_01BC0B:          STA.W $0464,Y                       ;; 01BC0B : 99 64 04    ;
CODE_01BC0E:          STA.W $0465,Y                       ;; 01BC0E : 99 65 04    ;
CODE_01BC11:          LDA.B #$03                          ;; 01BC11 : A9 03       ;
CODE_01BC13:          STA.W $0466,Y                       ;; 01BC13 : 99 66 04    ;
CODE_01BC16:          STA.W $0467,Y                       ;; 01BC16 : 99 67 04    ;
CODE_01BC19:          STA.W $0468,Y                       ;; 01BC19 : 99 68 04    ;
Return01BC1C:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01BC1D:          LDA RAM_MarioXPos                   ;; 01BC1D : A5 94       ; \ $00 = Mario X Low 
CODE_01BC1F:          STA $00                             ;; 01BC1F : 85 00       ; / 
CODE_01BC21:          LDA RAM_MarioYPos                   ;; 01BC21 : A5 96       ; \ $01 = Mario Y Low 
CODE_01BC23:          STA $01                             ;; 01BC23 : 85 01       ; / 
CODE_01BC25:          LDA.B #$10                          ;; 01BC25 : A9 10       ; \ $02 = $03 = #$10 
CODE_01BC27:          STA $02                             ;; 01BC27 : 85 02       ;  | 
CODE_01BC29:          STA $03                             ;; 01BC29 : 85 03       ; / 
CODE_01BC2B:          LDA RAM_MarioXPosHi                 ;; 01BC2B : A5 95       ; \ $08 = Mario X High 
CODE_01BC2D:          STA $08                             ;; 01BC2D : 85 08       ; / 
CODE_01BC2F:          LDA RAM_MarioYPosHi                 ;; 01BC2F : A5 97       ; \ $09 = Mario Y High 
CODE_01BC31:          STA $09                             ;; 01BC31 : 85 09       ; / 
Return01BC33:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
MagiKoopasMagicPals:  .db $05,$07,$09,$0B                 ;; ?QPWZ?               ;
                                                          ;;                      ;
MagikoopasMagic:      LDA RAM_SpritesLocked               ;; ?QPWZ? : A5 9D       ;
CODE_01BC3A:          BEQ CODE_01BC3F                     ;; 01BC3A : F0 03       ;
CODE_01BC3C:          JMP.W CODE_01BCBD                   ;; 01BC3C : 4C BD BC    ;
                                                          ;;                      ;
CODE_01BC3F:          JSR.W CODE_01B14E                   ;; 01BC3F : 20 4E B1    ;
CODE_01BC42:          JSR.W SubSprYPosNoGrvty             ;; 01BC42 : 20 D8 AB    ;
CODE_01BC45:          JSR.W SubSprXPosNoGrvty             ;; 01BC45 : 20 CC AB    ;
CODE_01BC48:          LDA RAM_SpriteSpeedY,X              ;; 01BC48 : B5 AA       ;
CODE_01BC4A:          PHA                                 ;; 01BC4A : 48          ;
CODE_01BC4B:          LDA.B #$FF                          ;; 01BC4B : A9 FF       ;
CODE_01BC4D:          STA RAM_SpriteSpeedY,X              ;; 01BC4D : 95 AA       ;
CODE_01BC4F:          JSR.W CODE_019140                   ;; 01BC4F : 20 40 91    ;
CODE_01BC52:          PLA                                 ;; 01BC52 : 68          ;
CODE_01BC53:          STA RAM_SpriteSpeedY,X              ;; 01BC53 : 95 AA       ;
CODE_01BC55:          JSR.W IsTouchingCeiling             ;; 01BC55 : 20 14 80    ;
CODE_01BC58:          BEQ CODE_01BCBD                     ;; 01BC58 : F0 63       ;
CODE_01BC5A:          LDA.W RAM_OffscreenHorz,X           ;; 01BC5A : BD A0 15    ;
CODE_01BC5D:          BNE CODE_01BCBD                     ;; 01BC5D : D0 5E       ;
CODE_01BC5F:          LDA.B #$01                          ;; 01BC5F : A9 01       ; \ Play sound effect 
CODE_01BC61:          STA.W $1DF9                         ;; 01BC61 : 8D F9 1D    ; / 
CODE_01BC64:          STZ.W $14C8,X                       ;; 01BC64 : 9E C8 14    ;
CODE_01BC67:          LDA.W $185F                         ;; 01BC67 : AD 5F 18    ;
CODE_01BC6A:          SEC                                 ;; 01BC6A : 38          ;
CODE_01BC6B:          SBC.B #$11                          ;; 01BC6B : E9 11       ;
CODE_01BC6D:          CMP.B #$1D                          ;; 01BC6D : C9 1D       ;
CODE_01BC6F:          BCS CODE_01BCB9                     ;; 01BC6F : B0 48       ;
CODE_01BC71:          JSL.L GetRand                       ;; 01BC71 : 22 F9 AC 01 ;
CODE_01BC75:          ADC.W RAM_RandomByte2               ;; 01BC75 : 6D 8E 14    ;
CODE_01BC78:          ADC RAM_MarioSpeedX                 ;; 01BC78 : 65 7B       ;
CODE_01BC7A:          ADC RAM_FrameCounter                ;; 01BC7A : 65 13       ;
CODE_01BC7C:          LDY.B #$78                          ;; 01BC7C : A0 78       ;
CODE_01BC7E:          CMP.B #$35                          ;; 01BC7E : C9 35       ;
CODE_01BC80:          BEQ StoreSpriteNum                  ;; 01BC80 : F0 0E       ;
CODE_01BC82:          LDY.B #$21                          ;; 01BC82 : A0 21       ;
CODE_01BC84:          CMP.B #$08                          ;; 01BC84 : C9 08       ;
CODE_01BC86:          BCC StoreSpriteNum                  ;; 01BC86 : 90 08       ;
CODE_01BC88:          LDY.B #$27                          ;; 01BC88 : A0 27       ;
CODE_01BC8A:          CMP.B #$F7                          ;; 01BC8A : C9 F7       ;
CODE_01BC8C:          BCS StoreSpriteNum                  ;; 01BC8C : B0 02       ;
CODE_01BC8E:          LDY.B #$07                          ;; 01BC8E : A0 07       ;
StoreSpriteNum:       STY RAM_SpriteNum,X                 ;; ?QPWZ? : 94 9E       ;
CODE_01BC92:          LDA.B #$08                          ;; 01BC92 : A9 08       ; \ Sprite status = Normal 
CODE_01BC94:          STA.W $14C8,X                       ;; 01BC94 : 9D C8 14    ; / 
CODE_01BC97:          JSL.L InitSpriteTables              ;; 01BC97 : 22 D2 F7 07 ;
CODE_01BC9B:          LDA RAM_BlockYHi                    ;; 01BC9B : A5 9B       ; \ Sprite X position = block X position 
CODE_01BC9D:          STA.W RAM_SpriteXHi,X               ;; 01BC9D : 9D E0 14    ;  | 
CODE_01BCA0:          LDA RAM_BlockYLo                    ;; 01BCA0 : A5 9A       ;  | 
CODE_01BCA2:          AND.B #$F0                          ;; 01BCA2 : 29 F0       ;  | 
CODE_01BCA4:          STA RAM_SpriteXLo,X                 ;; 01BCA4 : 95 E4       ;  | 
CODE_01BCA6:          LDA RAM_BlockXHi                    ;; 01BCA6 : A5 99       ; / 
CODE_01BCA8:          STA.W RAM_SpriteYHi,X               ;; 01BCA8 : 9D D4 14    ; \ Sprite Y position = block Y position 
CODE_01BCAB:          LDA RAM_BlockXLo                    ;; 01BCAB : A5 98       ;  | 
CODE_01BCAD:          AND.B #$F0                          ;; 01BCAD : 29 F0       ;  | 
CODE_01BCAF:          STA RAM_SpriteYLo,X                 ;; 01BCAF : 95 D8       ; / 
CODE_01BCB1:          LDA.B #$02                          ;; 01BCB1 : A9 02       ; \ Block to generate = #$02 
CODE_01BCB3:          STA RAM_BlockBlock                  ;; 01BCB3 : 85 9C       ; / 
CODE_01BCB5:          JSL.L GenerateTile                  ;; 01BCB5 : 22 B0 BE 00 ;
CODE_01BCB9:          JSR.W CODE_01BD98                   ;; 01BCB9 : 20 98 BD    ;
Return01BCBC:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01BCBD:          JSR.W SubSprSpr+MarioSpr            ;; 01BCBD : 20 C1 8F    ;
CODE_01BCC0:          LDA RAM_FrameCounter                ;; 01BCC0 : A5 13       ;
CODE_01BCC2:          LSR                                 ;; 01BCC2 : 4A          ;
CODE_01BCC3:          LSR                                 ;; 01BCC3 : 4A          ;
CODE_01BCC4:          AND.B #$03                          ;; 01BCC4 : 29 03       ;
CODE_01BCC6:          TAY                                 ;; 01BCC6 : A8          ;
CODE_01BCC7:          LDA.W MagiKoopasMagicPals,Y         ;; 01BCC7 : B9 34 BC    ;
CODE_01BCCA:          STA.W RAM_SpritePal,X               ;; 01BCCA : 9D F6 15    ;
CODE_01BCCD:          JSR.W MagiKoopasMagicGfx            ;; 01BCCD : 20 F0 BC    ;
CODE_01BCD0:          JSR.W SubOffscreen0Bnk1             ;; 01BCD0 : 20 31 AC    ;
CODE_01BCD3:          LDA RAM_SpriteYLo,X                 ;; 01BCD3 : B5 D8       ;
CODE_01BCD5:          SEC                                 ;; 01BCD5 : 38          ;
CODE_01BCD6:          SBC RAM_ScreenBndryYLo              ;; 01BCD6 : E5 1C       ;
CODE_01BCD8:          CMP.B #$E0                          ;; 01BCD8 : C9 E0       ;
CODE_01BCDA:          BCC Return01BCDF                    ;; 01BCDA : 90 03       ;
CODE_01BCDC:          STZ.W $14C8,X                       ;; 01BCDC : 9E C8 14    ;
Return01BCDF:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
MagiKoopasMagicDisp:  .db $00,$01,$02,$05,$08,$0B,$0E,$0F ;; ?QPWZ?               ;
                      .db $10,$0F,$0E,$0B,$08,$05,$02,$01 ;; ?QPWZ?               ;
                                                          ;;                      ;
MagiKoopasMagicGfx:   JSR.W GetDrawInfoBnk1               ;; ?QPWZ? : 20 65 A3    ;
CODE_01BCF3:          LDA RAM_FrameCounterB               ;; 01BCF3 : A5 14       ;
CODE_01BCF5:          LSR                                 ;; 01BCF5 : 4A          ;
CODE_01BCF6:          AND.B #$0F                          ;; 01BCF6 : 29 0F       ;
CODE_01BCF8:          STA $03                             ;; 01BCF8 : 85 03       ;
CODE_01BCFA:          CLC                                 ;; 01BCFA : 18          ;
CODE_01BCFB:          ADC.B #$0C                          ;; 01BCFB : 69 0C       ;
CODE_01BCFD:          AND.B #$0F                          ;; 01BCFD : 29 0F       ;
CODE_01BCFF:          STA $02                             ;; 01BCFF : 85 02       ;
CODE_01BD01:          LDA $01                             ;; 01BD01 : A5 01       ;
CODE_01BD03:          SEC                                 ;; 01BD03 : 38          ;
CODE_01BD04:          SBC.B #$04                          ;; 01BD04 : E9 04       ;
CODE_01BD06:          STA $01                             ;; 01BD06 : 85 01       ;
CODE_01BD08:          LDA $00                             ;; 01BD08 : A5 00       ;
CODE_01BD0A:          SEC                                 ;; 01BD0A : 38          ;
CODE_01BD0B:          SBC.B #$04                          ;; 01BD0B : E9 04       ;
CODE_01BD0D:          STA $00                             ;; 01BD0D : 85 00       ;
CODE_01BD0F:          LDX $02                             ;; 01BD0F : A6 02       ;
CODE_01BD11:          LDA $01                             ;; 01BD11 : A5 01       ;
CODE_01BD13:          CLC                                 ;; 01BD13 : 18          ;
CODE_01BD14:          ADC.W MagiKoopasMagicDisp,X         ;; 01BD14 : 7D E0 BC    ;
CODE_01BD17:          STA.W OAM_DispY,Y                   ;; 01BD17 : 99 01 03    ;
CODE_01BD1A:          LDX $03                             ;; 01BD1A : A6 03       ;
CODE_01BD1C:          LDA $00                             ;; 01BD1C : A5 00       ;
CODE_01BD1E:          CLC                                 ;; 01BD1E : 18          ;
CODE_01BD1F:          ADC.W MagiKoopasMagicDisp,X         ;; 01BD1F : 7D E0 BC    ;
CODE_01BD22:          STA.W OAM_DispX,Y                   ;; 01BD22 : 99 00 03    ;
CODE_01BD25:          LDA $02                             ;; 01BD25 : A5 02       ;
CODE_01BD27:          CLC                                 ;; 01BD27 : 18          ;
CODE_01BD28:          ADC.B #$05                          ;; 01BD28 : 69 05       ;
CODE_01BD2A:          AND.B #$0F                          ;; 01BD2A : 29 0F       ;
CODE_01BD2C:          STA $02                             ;; 01BD2C : 85 02       ;
CODE_01BD2E:          TAX                                 ;; 01BD2E : AA          ;
CODE_01BD2F:          LDA $01                             ;; 01BD2F : A5 01       ;
CODE_01BD31:          CLC                                 ;; 01BD31 : 18          ;
CODE_01BD32:          ADC.W MagiKoopasMagicDisp,X         ;; 01BD32 : 7D E0 BC    ;
CODE_01BD35:          STA.W OAM_Tile2DispY,Y              ;; 01BD35 : 99 05 03    ;
CODE_01BD38:          LDA $03                             ;; 01BD38 : A5 03       ;
CODE_01BD3A:          CLC                                 ;; 01BD3A : 18          ;
CODE_01BD3B:          ADC.B #$05                          ;; 01BD3B : 69 05       ;
CODE_01BD3D:          AND.B #$0F                          ;; 01BD3D : 29 0F       ;
CODE_01BD3F:          STA $03                             ;; 01BD3F : 85 03       ;
CODE_01BD41:          TAX                                 ;; 01BD41 : AA          ;
CODE_01BD42:          LDA $00                             ;; 01BD42 : A5 00       ;
CODE_01BD44:          CLC                                 ;; 01BD44 : 18          ;
CODE_01BD45:          ADC.W MagiKoopasMagicDisp,X         ;; 01BD45 : 7D E0 BC    ;
CODE_01BD48:          STA.W OAM_Tile2DispX,Y              ;; 01BD48 : 99 04 03    ;
CODE_01BD4B:          LDA $02                             ;; 01BD4B : A5 02       ;
CODE_01BD4D:          CLC                                 ;; 01BD4D : 18          ;
CODE_01BD4E:          ADC.B #$05                          ;; 01BD4E : 69 05       ;
CODE_01BD50:          AND.B #$0F                          ;; 01BD50 : 29 0F       ;
CODE_01BD52:          STA $02                             ;; 01BD52 : 85 02       ;
CODE_01BD54:          TAX                                 ;; 01BD54 : AA          ;
CODE_01BD55:          LDA $01                             ;; 01BD55 : A5 01       ;
CODE_01BD57:          CLC                                 ;; 01BD57 : 18          ;
CODE_01BD58:          ADC.W MagiKoopasMagicDisp,X         ;; 01BD58 : 7D E0 BC    ;
CODE_01BD5B:          STA.W OAM_Tile3DispY,Y              ;; 01BD5B : 99 09 03    ;
CODE_01BD5E:          LDA $03                             ;; 01BD5E : A5 03       ;
CODE_01BD60:          CLC                                 ;; 01BD60 : 18          ;
CODE_01BD61:          ADC.B #$05                          ;; 01BD61 : 69 05       ;
CODE_01BD63:          AND.B #$0F                          ;; 01BD63 : 29 0F       ;
CODE_01BD65:          STA $03                             ;; 01BD65 : 85 03       ;
CODE_01BD67:          TAX                                 ;; 01BD67 : AA          ;
CODE_01BD68:          LDA $00                             ;; 01BD68 : A5 00       ;
CODE_01BD6A:          CLC                                 ;; 01BD6A : 18          ;
CODE_01BD6B:          ADC.W MagiKoopasMagicDisp,X         ;; 01BD6B : 7D E0 BC    ;
CODE_01BD6E:          STA.W OAM_Tile3DispX,Y              ;; 01BD6E : 99 08 03    ;
CODE_01BD71:          LDX.W $15E9                         ;; 01BD71 : AE E9 15    ; X = Sprite index 
CODE_01BD74:          LDA.W RAM_SpritePal,X               ;; 01BD74 : BD F6 15    ;
CODE_01BD77:          ORA $64                             ;; 01BD77 : 05 64       ;
CODE_01BD79:          STA.W OAM_Prop,Y                    ;; 01BD79 : 99 03 03    ;
CODE_01BD7C:          STA.W OAM_Tile2Prop,Y               ;; 01BD7C : 99 07 03    ;
CODE_01BD7F:          STA.W OAM_Tile3Prop,Y               ;; 01BD7F : 99 0B 03    ;
CODE_01BD82:          LDA.B #$88                          ;; 01BD82 : A9 88       ;
CODE_01BD84:          STA.W OAM_Tile,Y                    ;; 01BD84 : 99 02 03    ;
CODE_01BD87:          LDA.B #$89                          ;; 01BD87 : A9 89       ;
CODE_01BD89:          STA.W OAM_Tile2,Y                   ;; 01BD89 : 99 06 03    ;
CODE_01BD8C:          LDA.B #$98                          ;; 01BD8C : A9 98       ;
CODE_01BD8E:          STA.W OAM_Tile3,Y                   ;; 01BD8E : 99 0A 03    ;
CODE_01BD91:          LDY.B #$00                          ;; 01BD91 : A0 00       ; \ 3 8x8 tiles 
CODE_01BD93:          LDA.B #$02                          ;; 01BD93 : A9 02       ;  | 
CODE_01BD95:          JMP.W FinishOAMWriteRt              ;; 01BD95 : 4C BB B7    ;
                                                          ;;                      ;
CODE_01BD98:          LDY.B #$03                          ;; 01BD98 : A0 03       ;
CODE_01BD9A:          LDA.W $17C0,Y                       ;; 01BD9A : B9 C0 17    ;
CODE_01BD9D:          BEQ CODE_01BDA3                     ;; 01BD9D : F0 04       ;
CODE_01BD9F:          DEY                                 ;; 01BD9F : 88          ;
CODE_01BDA0:          BPL CODE_01BD9A                     ;; 01BDA0 : 10 F8       ;
Return01BDA2:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01BDA3:          LDA.B #$01                          ;; 01BDA3 : A9 01       ;
CODE_01BDA5:          STA.W $17C0,Y                       ;; 01BDA5 : 99 C0 17    ;
CODE_01BDA8:          LDA RAM_SpriteXLo,X                 ;; 01BDA8 : B5 E4       ;
CODE_01BDAA:          STA.W $17C8,Y                       ;; 01BDAA : 99 C8 17    ;
CODE_01BDAD:          LDA RAM_SpriteYLo,X                 ;; 01BDAD : B5 D8       ;
CODE_01BDAF:          STA.W $17C4,Y                       ;; 01BDAF : 99 C4 17    ;
CODE_01BDB2:          LDA.B #$1B                          ;; 01BDB2 : A9 1B       ;
CODE_01BDB4:          STA.W $17CC,Y                       ;; 01BDB4 : 99 CC 17    ;
Return01BDB7:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
InitMagikoopa:        LDY.B #$09                          ;; ?QPWZ? : A0 09       ;
CODE_01BDBA:          CPY.W $15E9                         ;; 01BDBA : CC E9 15    ;
CODE_01BDBD:          BEQ CODE_01BDCF                     ;; 01BDBD : F0 10       ;
CODE_01BDBF:          LDA.W $14C8,Y                       ;; 01BDBF : B9 C8 14    ;
CODE_01BDC2:          BEQ CODE_01BDCF                     ;; 01BDC2 : F0 0B       ;
CODE_01BDC4:          LDA.W RAM_SpriteNum,Y               ;; 01BDC4 : B9 9E 00    ;
CODE_01BDC7:          CMP.B #$1F                          ;; 01BDC7 : C9 1F       ;
CODE_01BDC9:          BNE CODE_01BDCF                     ;; 01BDC9 : D0 04       ;
ADDR_01BDCB:          STZ.W $14C8,X                       ;; 01BDCB : 9E C8 14    ;
Return01BDCE:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01BDCF:          DEY                                 ;; 01BDCF : 88          ;
CODE_01BDD0:          BPL CODE_01BDBA                     ;; 01BDD0 : 10 E8       ;
CODE_01BDD2:          STZ.W $18BF                         ;; 01BDD2 : 9C BF 18    ;
Return01BDD5:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
Magikoopa:            LDA.B #$01                          ;; ?QPWZ? : A9 01       ;
CODE_01BDD8:          STA.W $15D0,X                       ;; 01BDD8 : 9D D0 15    ;
CODE_01BDDB:          LDA.W RAM_OffscreenHorz,X           ;; 01BDDB : BD A0 15    ;
CODE_01BDDE:          BEQ CODE_01BDE2                     ;; 01BDDE : F0 02       ;
CODE_01BDE0:          STZ RAM_SpriteState,X               ;; 01BDE0 : 74 C2       ;
CODE_01BDE2:          LDA RAM_SpriteState,X               ;; 01BDE2 : B5 C2       ;
CODE_01BDE4:          AND.B #$03                          ;; 01BDE4 : 29 03       ;
CODE_01BDE6:          JSL.L ExecutePtr                    ;; 01BDE6 : 22 DF 86 00 ;
                                                          ;;                      ;
MagiKoopaPtrs:        .dw CODE_01BDF2                     ;; ?QPWZ? : F2 BD       ;
                      .dw CODE_01BE5F                     ;; ?QPWZ? : 5F BE       ;
                      .dw CODE_01BE6E                     ;; ?QPWZ? : 6E BE       ;
                      .dw CODE_01BF16                     ;; ?QPWZ? : 16 BF       ;
                                                          ;;                      ;
CODE_01BDF2:          LDA.W $18BF                         ;; 01BDF2 : AD BF 18    ;
CODE_01BDF5:          BEQ CODE_01BDFB                     ;; 01BDF5 : F0 04       ;
ADDR_01BDF7:          STZ.W $14C8,X                       ;; 01BDF7 : 9E C8 14    ;
Return01BDFA:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01BDFB:          LDA RAM_SpritesLocked               ;; 01BDFB : A5 9D       ; \ Branch if sprites locked 
CODE_01BDFD:          BNE Return01BE5E                    ;; 01BDFD : D0 5F       ; / 
CODE_01BDFF:          LDY.B #$24                          ;; 01BDFF : A0 24       ;
CODE_01BE01:          STY $40                             ;; 01BE01 : 84 40       ;
CODE_01BE03:          LDA.W $1540,X                       ;; 01BE03 : BD 40 15    ;
CODE_01BE06:          BNE Return01BE5E                    ;; 01BE06 : D0 56       ;
CODE_01BE08:          JSL.L GetRand                       ;; 01BE08 : 22 F9 AC 01 ;
CODE_01BE0C:          CMP.B #$D1                          ;; 01BE0C : C9 D1       ;
CODE_01BE0E:          BCS Return01BE5E                    ;; 01BE0E : B0 4E       ;
CODE_01BE10:          CLC                                 ;; 01BE10 : 18          ;
CODE_01BE11:          ADC RAM_ScreenBndryYLo              ;; 01BE11 : 65 1C       ;
CODE_01BE13:          AND.B #$F0                          ;; 01BE13 : 29 F0       ;
CODE_01BE15:          STA RAM_SpriteYLo,X                 ;; 01BE15 : 95 D8       ;
CODE_01BE17:          LDA RAM_ScreenBndryYHi              ;; 01BE17 : A5 1D       ;
CODE_01BE19:          ADC.B #$00                          ;; 01BE19 : 69 00       ;
CODE_01BE1B:          STA.W RAM_SpriteYHi,X               ;; 01BE1B : 9D D4 14    ;
CODE_01BE1E:          JSL.L GetRand                       ;; 01BE1E : 22 F9 AC 01 ;
CODE_01BE22:          CLC                                 ;; 01BE22 : 18          ;
CODE_01BE23:          ADC RAM_ScreenBndryXLo              ;; 01BE23 : 65 1A       ;
CODE_01BE25:          AND.B #$F0                          ;; 01BE25 : 29 F0       ;
CODE_01BE27:          STA RAM_SpriteXLo,X                 ;; 01BE27 : 95 E4       ;
CODE_01BE29:          LDA RAM_ScreenBndryXHi              ;; 01BE29 : A5 1B       ;
CODE_01BE2B:          ADC.B #$00                          ;; 01BE2B : 69 00       ;
CODE_01BE2D:          STA.W RAM_SpriteXHi,X               ;; 01BE2D : 9D E0 14    ;
CODE_01BE30:          JSR.W SubHorizPos                   ;; 01BE30 : 20 30 AD    ;
CODE_01BE33:          LDA $0F                             ;; 01BE33 : A5 0F       ;
CODE_01BE35:          CLC                                 ;; 01BE35 : 18          ;
CODE_01BE36:          ADC.B #$20                          ;; 01BE36 : 69 20       ;
CODE_01BE38:          CMP.B #$40                          ;; 01BE38 : C9 40       ;
CODE_01BE3A:          BCC Return01BE5E                    ;; 01BE3A : 90 22       ;
CODE_01BE3C:          STZ RAM_SpriteSpeedY,X              ;; 01BE3C : 74 AA       ; Sprite Y Speed = 0 
CODE_01BE3E:          LDA.B #$01                          ;; 01BE3E : A9 01       ;
CODE_01BE40:          STA RAM_SpriteSpeedX,X              ;; 01BE40 : 95 B6       ;
CODE_01BE42:          JSR.W CODE_019140                   ;; 01BE42 : 20 40 91    ;
CODE_01BE45:          JSR.W IsOnGround                    ;; 01BE45 : 20 0E 80    ;
CODE_01BE48:          BEQ Return01BE5E                    ;; 01BE48 : F0 14       ;
CODE_01BE4A:          LDA.W $1862                         ;; 01BE4A : AD 62 18    ;
CODE_01BE4D:          BNE Return01BE5E                    ;; 01BE4D : D0 0F       ;
CODE_01BE4F:          INC RAM_SpriteState,X               ;; 01BE4F : F6 C2       ;
CODE_01BE51:          STZ.W $1570,X                       ;; 01BE51 : 9E 70 15    ;
CODE_01BE54:          JSR.W CODE_01BE82                   ;; 01BE54 : 20 82 BE    ;
CODE_01BE57:          JSR.W SubHorizPos                   ;; 01BE57 : 20 30 AD    ;
CODE_01BE5A:          TYA                                 ;; 01BE5A : 98          ;
CODE_01BE5B:          STA.W RAM_SpriteDir,X               ;; 01BE5B : 9D 7C 15    ;
Return01BE5E:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01BE5F:          JSR.W CODE_01C004                   ;; 01BE5F : 20 04 C0    ;
CODE_01BE62:          STZ.W $1602,X                       ;; 01BE62 : 9E 02 16    ;
CODE_01BE65:          JSR.W SubSprGfx1                    ;; 01BE65 : 20 67 9D    ;
Return01BE68:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
DATA_01BE69:          .db $04,$02,$00                     ;; 01BE69               ;
                                                          ;;                      ;
DATA_01BE6C:          .db $10,$F8                         ;; 01BE6C               ;
                                                          ;;                      ;
CODE_01BE6E:          STZ.W $15D0,X                       ;; 01BE6E : 9E D0 15    ;
CODE_01BE71:          JSR.W SubSprSpr+MarioSpr            ;; 01BE71 : 20 C1 8F    ;
CODE_01BE74:          JSR.W SubHorizPos                   ;; 01BE74 : 20 30 AD    ;
CODE_01BE77:          TYA                                 ;; 01BE77 : 98          ;
CODE_01BE78:          STA.W RAM_SpriteDir,X               ;; 01BE78 : 9D 7C 15    ;
CODE_01BE7B:          LDA.W $1540,X                       ;; 01BE7B : BD 40 15    ;
CODE_01BE7E:          BNE CODE_01BE86                     ;; 01BE7E : D0 06       ;
CODE_01BE80:          INC RAM_SpriteState,X               ;; 01BE80 : F6 C2       ;
CODE_01BE82:          LDY.B #$34                          ;; 01BE82 : A0 34       ;
CODE_01BE84:          STY $40                             ;; 01BE84 : 84 40       ;
CODE_01BE86:          CMP.B #$40                          ;; 01BE86 : C9 40       ;
CODE_01BE88:          BNE CODE_01BE96                     ;; 01BE88 : D0 0C       ;
CODE_01BE8A:          PHA                                 ;; 01BE8A : 48          ;
CODE_01BE8B:          LDA RAM_SpritesLocked               ;; 01BE8B : A5 9D       ;
CODE_01BE8D:          ORA.W RAM_OffscreenHorz,X           ;; 01BE8D : 1D A0 15    ;
CODE_01BE90:          BNE CODE_01BE95                     ;; 01BE90 : D0 03       ;
CODE_01BE92:          JSR.W CODE_01BF1D                   ;; 01BE92 : 20 1D BF    ;JUMP TO GENERATE MAGIC         
CODE_01BE95:          PLA                                 ;; 01BE95 : 68          ;
CODE_01BE96:          LSR                                 ;; 01BE96 : 4A          ;
CODE_01BE97:          LSR                                 ;; 01BE97 : 4A          ;
CODE_01BE98:          LSR                                 ;; 01BE98 : 4A          ;
CODE_01BE99:          LSR                                 ;; 01BE99 : 4A          ;
CODE_01BE9A:          LSR                                 ;; 01BE9A : 4A          ;
CODE_01BE9B:          LSR                                 ;; 01BE9B : 4A          ;
CODE_01BE9C:          TAY                                 ;; 01BE9C : A8          ;
CODE_01BE9D:          PHY                                 ;; 01BE9D : 5A          ;
CODE_01BE9E:          LDA.W $1540,X                       ;; 01BE9E : BD 40 15    ;
CODE_01BEA1:          LSR                                 ;; 01BEA1 : 4A          ;
CODE_01BEA2:          LSR                                 ;; 01BEA2 : 4A          ;
CODE_01BEA3:          LSR                                 ;; 01BEA3 : 4A          ;
CODE_01BEA4:          AND.B #$01                          ;; 01BEA4 : 29 01       ;
CODE_01BEA6:          ORA.W DATA_01BE69,Y                 ;; 01BEA6 : 19 69 BE    ;
CODE_01BEA9:          STA.W $1602,X                       ;; 01BEA9 : 9D 02 16    ;
CODE_01BEAC:          JSR.W SubSprGfx1                    ;; 01BEAC : 20 67 9D    ;
CODE_01BEAF:          LDA.W $1602,X                       ;; 01BEAF : BD 02 16    ;
CODE_01BEB2:          SEC                                 ;; 01BEB2 : 38          ;
CODE_01BEB3:          SBC.B #$02                          ;; 01BEB3 : E9 02       ;
CODE_01BEB5:          CMP.B #$02                          ;; 01BEB5 : C9 02       ;
CODE_01BEB7:          BCC CODE_01BEC6                     ;; 01BEB7 : 90 0D       ;
CODE_01BEB9:          LSR                                 ;; 01BEB9 : 4A          ;
CODE_01BEBA:          BCC CODE_01BEC6                     ;; 01BEBA : 90 0A       ;
CODE_01BEBC:          LDA.W RAM_SprOAMIndex,X             ;; 01BEBC : BD EA 15    ;
CODE_01BEBF:          TAX                                 ;; 01BEBF : AA          ;
CODE_01BEC0:          INC.W OAM_DispY,X                   ;; 01BEC0 : FE 01 03    ;
CODE_01BEC3:          LDX.W $15E9                         ;; 01BEC3 : AE E9 15    ; X = Sprite index 
CODE_01BEC6:          PLY                                 ;; 01BEC6 : 7A          ;
CODE_01BEC7:          CPY.B #$01                          ;; 01BEC7 : C0 01       ;
CODE_01BEC9:          BNE CODE_01BECE                     ;; 01BEC9 : D0 03       ;
CODE_01BECB:          JSR.W CODE_01B14E                   ;; 01BECB : 20 4E B1    ;
CODE_01BECE:          LDA.W $1602,X                       ;; 01BECE : BD 02 16    ;
CODE_01BED1:          CMP.B #$04                          ;; 01BED1 : C9 04       ;
CODE_01BED3:          BCC Return01BF15                    ;; 01BED3 : 90 40       ;
CODE_01BED5:          LDY.W RAM_SpriteDir,X               ;; 01BED5 : BC 7C 15    ;
CODE_01BED8:          LDA RAM_SpriteXLo,X                 ;; 01BED8 : B5 E4       ;
CODE_01BEDA:          CLC                                 ;; 01BEDA : 18          ;
CODE_01BEDB:          ADC.W DATA_01BE6C,Y                 ;; 01BEDB : 79 6C BE    ;
CODE_01BEDE:          SEC                                 ;; 01BEDE : 38          ;
CODE_01BEDF:          SBC RAM_ScreenBndryXLo              ;; 01BEDF : E5 1A       ;
CODE_01BEE1:          LDY.W RAM_SprOAMIndex,X             ;; 01BEE1 : BC EA 15    ; Y = Index into sprite OAM 
CODE_01BEE4:          STA.W OAM_Tile3DispX,Y              ;; 01BEE4 : 99 08 03    ;
CODE_01BEE7:          LDA RAM_SpriteYLo,X                 ;; 01BEE7 : B5 D8       ;
CODE_01BEE9:          SEC                                 ;; 01BEE9 : 38          ;
CODE_01BEEA:          SBC RAM_ScreenBndryYLo              ;; 01BEEA : E5 1C       ;
CODE_01BEEC:          CLC                                 ;; 01BEEC : 18          ;
CODE_01BEED:          ADC.B #$10                          ;; 01BEED : 69 10       ;
CODE_01BEEF:          STA.W OAM_Tile3DispY,Y              ;; 01BEEF : 99 09 03    ;
CODE_01BEF2:          LDA.W RAM_SpriteDir,X               ;; 01BEF2 : BD 7C 15    ;
CODE_01BEF5:          LSR                                 ;; 01BEF5 : 4A          ;
CODE_01BEF6:          LDA.B #$00                          ;; 01BEF6 : A9 00       ;
CODE_01BEF8:          BCS CODE_01BEFC                     ;; 01BEF8 : B0 02       ;
CODE_01BEFA:          ORA.B #$40                          ;; 01BEFA : 09 40       ;
CODE_01BEFC:          ORA $64                             ;; 01BEFC : 05 64       ;
CODE_01BEFE:          ORA.W RAM_SpritePal,X               ;; 01BEFE : 1D F6 15    ;
CODE_01BF01:          STA.W OAM_Tile3Prop,Y               ;; 01BF01 : 99 0B 03    ;
CODE_01BF04:          LDA.B #$99                          ;; 01BF04 : A9 99       ;
CODE_01BF06:          STA.W OAM_Tile3,Y                   ;; 01BF06 : 99 0A 03    ;
CODE_01BF09:          TYA                                 ;; 01BF09 : 98          ;
CODE_01BF0A:          LSR                                 ;; 01BF0A : 4A          ;
CODE_01BF0B:          LSR                                 ;; 01BF0B : 4A          ;
CODE_01BF0C:          TAY                                 ;; 01BF0C : A8          ;
CODE_01BF0D:          LDA.B #$00                          ;; 01BF0D : A9 00       ;
CODE_01BF0F:          ORA.W RAM_OffscreenHorz,X           ;; 01BF0F : 1D A0 15    ;
CODE_01BF12:          STA.W $0462,Y                       ;; 01BF12 : 99 62 04    ;
Return01BF15:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01BF16:          JSR.W CODE_01BFE3                   ;; 01BF16 : 20 E3 BF    ;
CODE_01BF19:          JSR.W SubSprGfx1                    ;; 01BF19 : 20 67 9D    ;
Return01BF1C:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01BF1D:          LDY.B #$09                          ;; 01BF1D : A0 09       ;
CODE_01BF1F:          LDA.W $14C8,Y                       ;; 01BF1F : B9 C8 14    ;
CODE_01BF22:          BEQ CODE_01BF28                     ;; 01BF22 : F0 04       ;
CODE_01BF24:          DEY                                 ;; 01BF24 : 88          ;
CODE_01BF25:          BPL CODE_01BF1F                     ;; 01BF25 : 10 F8       ;
Return01BF27:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01BF28:          LDA.B #$10                          ;; 01BF28 : A9 10       ; \ Play sound effect 
CODE_01BF2A:          STA.W $1DF9                         ;; 01BF2A : 8D F9 1D    ; / 
CODE_01BF2D:          LDA.B #$08                          ;; 01BF2D : A9 08       ; \ Sprite status = Normal 
CODE_01BF2F:          STA.W $14C8,Y                       ;; 01BF2F : 99 C8 14    ; / 
CODE_01BF32:          LDA.B #$20                          ;; 01BF32 : A9 20       ;GENERATES MAGIC HERE!   !@#            
CODE_01BF34:          STA.W RAM_SpriteNum,Y               ;; 01BF34 : 99 9E 00    ;
CODE_01BF37:          LDA RAM_SpriteXLo,X                 ;; 01BF37 : B5 E4       ;
CODE_01BF39:          STA.W RAM_SpriteXLo,Y               ;; 01BF39 : 99 E4 00    ;
CODE_01BF3C:          LDA.W RAM_SpriteXHi,X               ;; 01BF3C : BD E0 14    ;
CODE_01BF3F:          STA.W RAM_SpriteXHi,Y               ;; 01BF3F : 99 E0 14    ;
CODE_01BF42:          LDA RAM_SpriteYLo,X                 ;; 01BF42 : B5 D8       ;
CODE_01BF44:          CLC                                 ;; 01BF44 : 18          ;
CODE_01BF45:          ADC.B #$0A                          ;; 01BF45 : 69 0A       ;
CODE_01BF47:          STA.W RAM_SpriteYLo,Y               ;; 01BF47 : 99 D8 00    ;
CODE_01BF4A:          LDA.W RAM_SpriteYHi,X               ;; 01BF4A : BD D4 14    ;
CODE_01BF4D:          ADC.B #$00                          ;; 01BF4D : 69 00       ;
CODE_01BF4F:          STA.W RAM_SpriteYHi,Y               ;; 01BF4F : 99 D4 14    ;
CODE_01BF52:          TYX                                 ;; 01BF52 : BB          ;
CODE_01BF53:          JSL.L InitSpriteTables              ;; 01BF53 : 22 D2 F7 07 ;
CODE_01BF57:          LDA.B #$20                          ;; 01BF57 : A9 20       ;
CODE_01BF59:          JSR.W CODE_01BF6A                   ;; 01BF59 : 20 6A BF    ;
CODE_01BF5C:          LDX.W $15E9                         ;; 01BF5C : AE E9 15    ; X = Sprite index 
CODE_01BF5F:          LDA $00                             ;; 01BF5F : A5 00       ;PULLS SPEED FROM RAM HERE?                   
CODE_01BF61:          STA.W RAM_SpriteSpeedY,Y            ;; 01BF61 : 99 AA 00    ;
CODE_01BF64:          LDA $01                             ;; 01BF64 : A5 01       ;
CODE_01BF66:          STA.W RAM_SpriteSpeedX,Y            ;; 01BF66 : 99 B6 00    ;
Return01BF69:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01BF6A:          STA $01                             ;; 01BF6A : 85 01       ;FILLS OUT RAM TO USE FOR SPEED?                   
CODE_01BF6C:          PHX                                 ;; 01BF6C : DA          ;
CODE_01BF6D:          PHY                                 ;; 01BF6D : 5A          ;
CODE_01BF6E:          JSR.W CODE_01AD42                   ;; 01BF6E : 20 42 AD    ;
CODE_01BF71:          STY $02                             ;; 01BF71 : 84 02       ;
CODE_01BF73:          LDA $0E                             ;; 01BF73 : A5 0E       ;
CODE_01BF75:          BPL CODE_01BF7C                     ;; 01BF75 : 10 05       ;
CODE_01BF77:          EOR.B #$FF                          ;; 01BF77 : 49 FF       ;
CODE_01BF79:          CLC                                 ;; 01BF79 : 18          ;
CODE_01BF7A:          ADC.B #$01                          ;; 01BF7A : 69 01       ;
CODE_01BF7C:          STA $0C                             ;; 01BF7C : 85 0C       ;
CODE_01BF7E:          JSR.W SubHorizPos                   ;; 01BF7E : 20 30 AD    ;
CODE_01BF81:          STY $03                             ;; 01BF81 : 84 03       ;
CODE_01BF83:          LDA $0F                             ;; 01BF83 : A5 0F       ;
CODE_01BF85:          BPL CODE_01BF8C                     ;; 01BF85 : 10 05       ;
CODE_01BF87:          EOR.B #$FF                          ;; 01BF87 : 49 FF       ;
CODE_01BF89:          CLC                                 ;; 01BF89 : 18          ;
CODE_01BF8A:          ADC.B #$01                          ;; 01BF8A : 69 01       ;
CODE_01BF8C:          STA $0D                             ;; 01BF8C : 85 0D       ;
CODE_01BF8E:          LDY.B #$00                          ;; 01BF8E : A0 00       ;
CODE_01BF90:          LDA $0D                             ;; 01BF90 : A5 0D       ;
CODE_01BF92:          CMP $0C                             ;; 01BF92 : C5 0C       ;
CODE_01BF94:          BCS CODE_01BF9F                     ;; 01BF94 : B0 09       ;
CODE_01BF96:          INY                                 ;; 01BF96 : C8          ;
CODE_01BF97:          PHA                                 ;; 01BF97 : 48          ;
CODE_01BF98:          LDA $0C                             ;; 01BF98 : A5 0C       ;
CODE_01BF9A:          STA $0D                             ;; 01BF9A : 85 0D       ;
CODE_01BF9C:          PLA                                 ;; 01BF9C : 68          ;
CODE_01BF9D:          STA $0C                             ;; 01BF9D : 85 0C       ;
CODE_01BF9F:          LDA.B #$00                          ;; 01BF9F : A9 00       ;
CODE_01BFA1:          STA $0B                             ;; 01BFA1 : 85 0B       ;
CODE_01BFA3:          STA $00                             ;; 01BFA3 : 85 00       ;
CODE_01BFA5:          LDX $01                             ;; 01BFA5 : A6 01       ;
CODE_01BFA7:          LDA $0B                             ;; 01BFA7 : A5 0B       ;
CODE_01BFA9:          CLC                                 ;; 01BFA9 : 18          ;
CODE_01BFAA:          ADC $0C                             ;; 01BFAA : 65 0C       ;
CODE_01BFAC:          CMP $0D                             ;; 01BFAC : C5 0D       ;
CODE_01BFAE:          BCC CODE_01BFB4                     ;; 01BFAE : 90 04       ;
CODE_01BFB0:          SBC $0D                             ;; 01BFB0 : E5 0D       ;
CODE_01BFB2:          INC $00                             ;; 01BFB2 : E6 00       ;
CODE_01BFB4:          STA $0B                             ;; 01BFB4 : 85 0B       ;
CODE_01BFB6:          DEX                                 ;; 01BFB6 : CA          ;
CODE_01BFB7:          BNE CODE_01BFA7                     ;; 01BFB7 : D0 EE       ;
CODE_01BFB9:          TYA                                 ;; 01BFB9 : 98          ;
CODE_01BFBA:          BEQ CODE_01BFC6                     ;; 01BFBA : F0 0A       ;
CODE_01BFBC:          LDA $00                             ;; 01BFBC : A5 00       ;
CODE_01BFBE:          PHA                                 ;; 01BFBE : 48          ;
CODE_01BFBF:          LDA $01                             ;; 01BFBF : A5 01       ;
CODE_01BFC1:          STA $00                             ;; 01BFC1 : 85 00       ;
CODE_01BFC3:          PLA                                 ;; 01BFC3 : 68          ;
CODE_01BFC4:          STA $01                             ;; 01BFC4 : 85 01       ;
CODE_01BFC6:          LDA $00                             ;; 01BFC6 : A5 00       ;
CODE_01BFC8:          LDY $02                             ;; 01BFC8 : A4 02       ;
CODE_01BFCA:          BEQ CODE_01BFD3                     ;; 01BFCA : F0 07       ;
CODE_01BFCC:          EOR.B #$FF                          ;; 01BFCC : 49 FF       ;
CODE_01BFCE:          CLC                                 ;; 01BFCE : 18          ;
CODE_01BFCF:          ADC.B #$01                          ;; 01BFCF : 69 01       ;
CODE_01BFD1:          STA $00                             ;; 01BFD1 : 85 00       ;
CODE_01BFD3:          LDA $01                             ;; 01BFD3 : A5 01       ;
CODE_01BFD5:          LDY $03                             ;; 01BFD5 : A4 03       ;
CODE_01BFD7:          BEQ CODE_01BFE0                     ;; 01BFD7 : F0 07       ;
CODE_01BFD9:          EOR.B #$FF                          ;; 01BFD9 : 49 FF       ;
CODE_01BFDB:          CLC                                 ;; 01BFDB : 18          ;
CODE_01BFDC:          ADC.B #$01                          ;; 01BFDC : 69 01       ;
CODE_01BFDE:          STA $01                             ;; 01BFDE : 85 01       ;
CODE_01BFE0:          PLY                                 ;; 01BFE0 : 7A          ;
CODE_01BFE1:          PLX                                 ;; 01BFE1 : FA          ;
Return01BFE2:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01BFE3:          LDA.W $1540,X                       ;; 01BFE3 : BD 40 15    ;
CODE_01BFE6:          BNE Return01C000                    ;; 01BFE6 : D0 18       ;
CODE_01BFE8:          LDA.B #$02                          ;; 01BFE8 : A9 02       ;
CODE_01BFEA:          STA.W $1540,X                       ;; 01BFEA : 9D 40 15    ;
CODE_01BFED:          DEC.W $1570,X                       ;; 01BFED : DE 70 15    ;
CODE_01BFF0:          LDA.W $1570,X                       ;; 01BFF0 : BD 70 15    ;
CODE_01BFF3:          CMP.B #$00                          ;; 01BFF3 : C9 00       ;
CODE_01BFF5:          BNE CODE_01C001                     ;; 01BFF5 : D0 0A       ;
CODE_01BFF7:          INC RAM_SpriteState,X               ;; 01BFF7 : F6 C2       ;
CODE_01BFF9:          LDA.B #$10                          ;; 01BFF9 : A9 10       ;
CODE_01BFFB:          STA.W $1540,X                       ;; 01BFFB : 9D 40 15    ;
CODE_01BFFE:          PLA                                 ;; 01BFFE : 68          ;
CODE_01BFFF:          PLA                                 ;; 01BFFF : 68          ;
Return01C000:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01C001:          JMP.W CODE_01C028                   ;; 01C001 : 4C 28 C0    ;
                                                          ;;                      ;
CODE_01C004:          LDA.W $1540,X                       ;; 01C004 : BD 40 15    ;
CODE_01C007:          BNE CODE_01C05E                     ;; 01C007 : D0 55       ;
CODE_01C009:          LDA.B #$04                          ;; 01C009 : A9 04       ;
CODE_01C00B:          STA.W $1540,X                       ;; 01C00B : 9D 40 15    ;
CODE_01C00E:          INC.W $1570,X                       ;; 01C00E : FE 70 15    ;
CODE_01C011:          LDA.W $1570,X                       ;; 01C011 : BD 70 15    ;
CODE_01C014:          CMP.B #$09                          ;; 01C014 : C9 09       ;
CODE_01C016:          BNE CODE_01C01C                     ;; 01C016 : D0 04       ;
CODE_01C018:          LDY.B #$24                          ;; 01C018 : A0 24       ;
CODE_01C01A:          STY $40                             ;; 01C01A : 84 40       ;
CODE_01C01C:          CMP.B #$09                          ;; 01C01C : C9 09       ;
CODE_01C01E:          BNE CODE_01C028                     ;; 01C01E : D0 08       ;
CODE_01C020:          INC RAM_SpriteState,X               ;; 01C020 : F6 C2       ;
CODE_01C022:          LDA.B #$70                          ;; 01C022 : A9 70       ;
CODE_01C024:          STA.W $1540,X                       ;; 01C024 : 9D 40 15    ;
Return01C027:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01C028:          LDA.W $1570,X                       ;; 01C028 : BD 70 15    ;
CODE_01C02B:          DEC A                               ;; 01C02B : 3A          ;
CODE_01C02C:          ASL                                 ;; 01C02C : 0A          ;
CODE_01C02D:          ASL                                 ;; 01C02D : 0A          ;
CODE_01C02E:          ASL                                 ;; 01C02E : 0A          ;
CODE_01C02F:          ASL                                 ;; 01C02F : 0A          ;
CODE_01C030:          TAX                                 ;; 01C030 : AA          ;
CODE_01C031:          STZ $00                             ;; 01C031 : 64 00       ;
CODE_01C033:          LDY.W $0681                         ;; 01C033 : AC 81 06    ;
CODE_01C036:          LDA.L MagiKoopaPals,X               ;; 01C036 : BF 02 B9 03 ;
CODE_01C03A:          STA.W $0684,Y                       ;; 01C03A : 99 84 06    ;
CODE_01C03D:          INY                                 ;; 01C03D : C8          ;
CODE_01C03E:          INX                                 ;; 01C03E : E8          ;
CODE_01C03F:          INC $00                             ;; 01C03F : E6 00       ;
CODE_01C041:          LDA $00                             ;; 01C041 : A5 00       ;
CODE_01C043:          CMP.B #$10                          ;; 01C043 : C9 10       ;
CODE_01C045:          BNE CODE_01C036                     ;; 01C045 : D0 EF       ;
CODE_01C047:          LDX.W $0681                         ;; 01C047 : AE 81 06    ;
CODE_01C04A:          LDA.B #$10                          ;; 01C04A : A9 10       ;
CODE_01C04C:          STA.W $0682,X                       ;; 01C04C : 9D 82 06    ;
CODE_01C04F:          LDA.B #$F0                          ;; 01C04F : A9 F0       ;
CODE_01C051:          STA.W $0683,X                       ;; 01C051 : 9D 83 06    ;
CODE_01C054:          STZ.W $0694,X                       ;; 01C054 : 9E 94 06    ;
CODE_01C057:          TXA                                 ;; 01C057 : 8A          ;
CODE_01C058:          CLC                                 ;; 01C058 : 18          ;
CODE_01C059:          ADC.B #$12                          ;; 01C059 : 69 12       ;
CODE_01C05B:          STA.W $0681                         ;; 01C05B : 8D 81 06    ;
CODE_01C05E:          LDX.W $15E9                         ;; 01C05E : AE E9 15    ; X = Sprite index 
Return01C061:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
ADDR_01C062:          JSR.W InitGoalTape                  ;; 01C062 : 20 75 C0    ; \ Unreachable 
ADDR_01C065:          LDA RAM_SpriteYLo,X                 ;; 01C065 : B5 D8       ;  | Call Goal Tape INIT, then 
ADDR_01C067:          SEC                                 ;; 01C067 : 38          ;  | Sprite Y position -= #$4C 
ADDR_01C068:          SBC.B #$4C                          ;; 01C068 : E9 4C       ;  | 
ADDR_01C06A:          STA RAM_SpriteYLo,X                 ;; 01C06A : 95 D8       ;  | 
ADDR_01C06C:          LDA.W RAM_SpriteYHi,X               ;; 01C06C : BD D4 14    ;  | 
ADDR_01C06F:          SBC.B #$00                          ;; 01C06F : E9 00       ;  | 
ADDR_01C071:          STA.W RAM_SpriteYHi,X               ;; 01C071 : 9D D4 14    ;  | 
Return01C074:         RTS                                 ;; ?QPWZ? : 60          ; / 
                                                          ;;                      ;
InitGoalTape:         LDA RAM_SpriteXLo,X                 ;; ?QPWZ? : B5 E4       ;
CODE_01C077:          SEC                                 ;; 01C077 : 38          ;
CODE_01C078:          SBC.B #$08                          ;; 01C078 : E9 08       ;
CODE_01C07A:          STA RAM_SpriteState,X               ;; 01C07A : 95 C2       ;
CODE_01C07C:          LDA.W RAM_SpriteXHi,X               ;; 01C07C : BD E0 14    ;
CODE_01C07F:          SBC.B #$00                          ;; 01C07F : E9 00       ;
CODE_01C081:          STA.W $151C,X                       ;; 01C081 : 9D 1C 15    ;
CODE_01C084:          LDA RAM_SpriteYLo,X                 ;; 01C084 : B5 D8       ;
CODE_01C086:          STA.W $1528,X                       ;; 01C086 : 9D 28 15    ;
CODE_01C089:          LDA.W RAM_SpriteYHi,X               ;; 01C089 : BD D4 14    ; \ Save extra bits into $187B,x 
CODE_01C08C:          STA.W $187B,X                       ;; 01C08C : 9D 7B 18    ; / 
CODE_01C08F:          AND.B #$01                          ;; 01C08F : 29 01       ; \ Clear extra bits out of position 
CODE_01C091:          STA.W RAM_SpriteYHi,X               ;; 01C091 : 9D D4 14    ; / 
CODE_01C094:          STA.W $1534,X                       ;; 01C094 : 9D 34 15    ;
Return01C097:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
GoalTape:             JSR.W CODE_01C12D                   ;; ?QPWZ? : 20 2D C1    ;
CODE_01C09B:          LDA RAM_SpritesLocked               ;; 01C09B : A5 9D       ; \ Branch if sprites locked 
CODE_01C09D:          BNE Return01C0A4                    ;; 01C09D : D0 05       ; / 
CODE_01C09F:          LDA.W $1602,X                       ;; 01C09F : BD 02 16    ;
CODE_01C0A2:          BEQ CODE_01C0A7                     ;; 01C0A2 : F0 03       ;
Return01C0A4:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
DATA_01C0A5:          .db $10,$F0                         ;; 01C0A5               ;
                                                          ;;                      ;
CODE_01C0A7:          LDA.W $1540,X                       ;; 01C0A7 : BD 40 15    ;
CODE_01C0AA:          BNE CODE_01C0B4                     ;; 01C0AA : D0 08       ;
CODE_01C0AC:          LDA.B #$7C                          ;; 01C0AC : A9 7C       ;
CODE_01C0AE:          STA.W $1540,X                       ;; 01C0AE : 9D 40 15    ;
CODE_01C0B1:          INC.W RAM_SprObjStatus,X            ;; 01C0B1 : FE 88 15    ;
CODE_01C0B4:          LDA.W RAM_SprObjStatus,X            ;; 01C0B4 : BD 88 15    ;
CODE_01C0B7:          AND.B #$01                          ;; 01C0B7 : 29 01       ;
CODE_01C0B9:          TAY                                 ;; 01C0B9 : A8          ;
CODE_01C0BA:          LDA.W DATA_01C0A5,Y                 ;; 01C0BA : B9 A5 C0    ;
CODE_01C0BD:          STA RAM_SpriteSpeedY,X              ;; 01C0BD : 95 AA       ;
CODE_01C0BF:          JSR.W SubSprYPosNoGrvty             ;; 01C0BF : 20 D8 AB    ;
CODE_01C0C2:          LDA RAM_SpriteState,X               ;; 01C0C2 : B5 C2       ;
CODE_01C0C4:          STA $00                             ;; 01C0C4 : 85 00       ;
CODE_01C0C6:          LDA.W $151C,X                       ;; 01C0C6 : BD 1C 15    ;
CODE_01C0C9:          STA $01                             ;; 01C0C9 : 85 01       ;
CODE_01C0CB:          REP #$20                            ;; 01C0CB : C2 20       ; Accum (16 bit) 
CODE_01C0CD:          LDA RAM_MarioXPos                   ;; 01C0CD : A5 94       ;
CODE_01C0CF:          SEC                                 ;; 01C0CF : 38          ;
CODE_01C0D0:          SBC $00                             ;; 01C0D0 : E5 00       ;
CODE_01C0D2:          CMP.W #$0010                        ;; 01C0D2 : C9 10 00    ;
CODE_01C0D5:          SEP #$20                            ;; 01C0D5 : E2 20       ; Accum (8 bit) 
CODE_01C0D7:          BCS Return01C12C                    ;; 01C0D7 : B0 53       ;
CODE_01C0D9:          LDA.W $1528,X                       ;; 01C0D9 : BD 28 15    ;
CODE_01C0DC:          CMP RAM_MarioYPos                   ;; 01C0DC : C5 96       ;
CODE_01C0DE:          LDA.W $1534,X                       ;; 01C0DE : BD 34 15    ;
CODE_01C0E1:          AND.B #$01                          ;; 01C0E1 : 29 01       ;
CODE_01C0E3:          SBC RAM_MarioYPosHi                 ;; 01C0E3 : E5 97       ;
CODE_01C0E5:          BCC Return01C12C                    ;; 01C0E5 : 90 45       ;
CODE_01C0E7:          LDA.W $187B,X                       ;; 01C0E7 : BD 7B 18    ; \ $141C = #01 if Goal Tape triggers secret exit 
CODE_01C0EA:          LSR                                 ;; 01C0EA : 4A          ;  | 
CODE_01C0EB:          LSR                                 ;; 01C0EB : 4A          ;  | 
CODE_01C0EC:          STA.W $141C                         ;; 01C0EC : 8D 1C 14    ; / 
CODE_01C0EF:          LDA.B #$0C                          ;; 01C0EF : A9 0C       ;
CODE_01C0F1:          STA.W $1DFB                         ;; 01C0F1 : 8D FB 1D    ; / Change music 
CODE_01C0F4:          LDA.B #$FF                          ;; 01C0F4 : A9 FF       ;
CODE_01C0F6:          STA.W $0DDA                         ;; 01C0F6 : 8D DA 0D    ;
CODE_01C0F9:          LDA.B #$FF                          ;; 01C0F9 : A9 FF       ;
CODE_01C0FB:          STA.W $1493                         ;; 01C0FB : 8D 93 14    ;
CODE_01C0FE:          STZ.W $1490                         ;; 01C0FE : 9C 90 14    ; Zero out star timer 
CODE_01C101:          INC.W $1602,X                       ;; 01C101 : FE 02 16    ;
CODE_01C104:          JSR.W MarioSprInteractRt            ;; 01C104 : 20 E4 A7    ;
CODE_01C107:          BCC CODE_01C125                     ;; 01C107 : 90 1C       ;
CODE_01C109:          LDA.B #$09                          ;; 01C109 : A9 09       ; \ Play sound effect 
CODE_01C10B:          STA.W $1DFC                         ;; 01C10B : 8D FC 1D    ; / 
CODE_01C10E:          INC.W $160E,X                       ;; 01C10E : FE 0E 16    ;
CODE_01C111:          LDA.W $1528,X                       ;; 01C111 : BD 28 15    ;
CODE_01C114:          SEC                                 ;; 01C114 : 38          ;
CODE_01C115:          SBC RAM_SpriteYLo,X                 ;; 01C115 : F5 D8       ;
CODE_01C117:          STA.W $1594,X                       ;; 01C117 : 9D 94 15    ;
CODE_01C11A:          LDA.B #$80                          ;; 01C11A : A9 80       ;
CODE_01C11C:          STA.W $1540,X                       ;; 01C11C : 9D 40 15    ;
CODE_01C11F:          JSL.L CODE_07F252                   ;; 01C11F : 22 52 F2 07 ;
CODE_01C123:          BRA CODE_01C128                     ;; 01C123 : 80 03       ;
                                                          ;;                      ;
CODE_01C125:          STZ.W RAM_Tweaker1686,X             ;; 01C125 : 9E 86 16    ;
CODE_01C128:          JSL.L TriggerGoalTape               ;; 01C128 : 22 80 FA 00 ;
Return01C12C:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01C12D:          LDA.W $160E,X                       ;; 01C12D : BD 0E 16    ;
CODE_01C130:          BNE CODE_01C175                     ;; 01C130 : D0 43       ;
CODE_01C132:          JSR.W GetDrawInfoBnk1               ;; 01C132 : 20 65 A3    ;
CODE_01C135:          LDA $00                             ;; 01C135 : A5 00       ;
CODE_01C137:          SEC                                 ;; 01C137 : 38          ;
CODE_01C138:          SBC.B #$08                          ;; 01C138 : E9 08       ;
CODE_01C13A:          STA.W OAM_DispX,Y                   ;; 01C13A : 99 00 03    ;
CODE_01C13D:          CLC                                 ;; 01C13D : 18          ;
CODE_01C13E:          ADC.B #$08                          ;; 01C13E : 69 08       ;
CODE_01C140:          STA.W OAM_Tile2DispX,Y              ;; 01C140 : 99 04 03    ;
CODE_01C143:          CLC                                 ;; 01C143 : 18          ;
CODE_01C144:          ADC.B #$08                          ;; 01C144 : 69 08       ;
CODE_01C146:          STA.W OAM_Tile3DispX,Y              ;; 01C146 : 99 08 03    ;
CODE_01C149:          LDA $01                             ;; 01C149 : A5 01       ;
CODE_01C14B:          CLC                                 ;; 01C14B : 18          ;
CODE_01C14C:          ADC.B #$08                          ;; 01C14C : 69 08       ;
CODE_01C14E:          STA.W OAM_DispY,Y                   ;; 01C14E : 99 01 03    ;
CODE_01C151:          STA.W OAM_Tile2DispY,Y              ;; 01C151 : 99 05 03    ;
CODE_01C154:          STA.W OAM_Tile3DispY,Y              ;; 01C154 : 99 09 03    ;
CODE_01C157:          LDA.B #$D4                          ;; 01C157 : A9 D4       ;
CODE_01C159:          STA.W OAM_Tile,Y                    ;; 01C159 : 99 02 03    ;
CODE_01C15C:          INC A                               ;; 01C15C : 1A          ;
CODE_01C15D:          STA.W OAM_Tile2,Y                   ;; 01C15D : 99 06 03    ;
CODE_01C160:          STA.W OAM_Tile3,Y                   ;; 01C160 : 99 0A 03    ;
CODE_01C163:          LDA.B #$32                          ;; 01C163 : A9 32       ;
CODE_01C165:          STA.W OAM_Prop,Y                    ;; 01C165 : 99 03 03    ;
CODE_01C168:          STA.W OAM_Tile2Prop,Y               ;; 01C168 : 99 07 03    ;
CODE_01C16B:          STA.W OAM_Tile3Prop,Y               ;; 01C16B : 99 0B 03    ;
CODE_01C16E:          LDY.B #$00                          ;; 01C16E : A0 00       ;
CODE_01C170:          LDA.B #$02                          ;; 01C170 : A9 02       ;
CODE_01C172:          JMP.W FinishOAMWriteRt              ;; 01C172 : 4C BB B7    ;
                                                          ;;                      ;
CODE_01C175:          LDA.W $1540,X                       ;; 01C175 : BD 40 15    ;
CODE_01C178:          BEQ CODE_01C17F                     ;; 01C178 : F0 05       ;
CODE_01C17A:          JSL.L CODE_07F1CA                   ;; 01C17A : 22 CA F1 07 ;
Return01C17E:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01C17F:          STZ.W $14C8,X                       ;; 01C17F : 9E C8 14    ;
Return01C182:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
GrowingVine:          LDA $64                             ;; ?QPWZ? : A5 64       ;
CODE_01C185:          PHA                                 ;; 01C185 : 48          ;
CODE_01C186:          LDA.W $1540,X                       ;; 01C186 : BD 40 15    ;
CODE_01C189:          CMP.B #$20                          ;; 01C189 : C9 20       ;
CODE_01C18B:          BCC CODE_01C191                     ;; 01C18B : 90 04       ;
CODE_01C18D:          LDA.B #$10                          ;; 01C18D : A9 10       ;
CODE_01C18F:          STA $64                             ;; 01C18F : 85 64       ;
CODE_01C191:          JSR.W SubSprGfx2Entry1              ;; 01C191 : 20 0D 9F    ;
CODE_01C194:          LDY.W RAM_SprOAMIndex,X             ;; 01C194 : BC EA 15    ; Y = Index into sprite OAM 
CODE_01C197:          LDA RAM_FrameCounterB               ;; 01C197 : A5 14       ;
CODE_01C199:          LSR                                 ;; 01C199 : 4A          ;
CODE_01C19A:          LSR                                 ;; 01C19A : 4A          ;
CODE_01C19B:          LSR                                 ;; 01C19B : 4A          ;
CODE_01C19C:          LSR                                 ;; 01C19C : 4A          ;
CODE_01C19D:          LDA.B #$AC                          ;; 01C19D : A9 AC       ;
CODE_01C19F:          BCC CODE_01C1A3                     ;; 01C19F : 90 02       ;
CODE_01C1A1:          LDA.B #$AE                          ;; 01C1A1 : A9 AE       ;
CODE_01C1A3:          STA.W OAM_Tile,Y                    ;; 01C1A3 : 99 02 03    ;
CODE_01C1A6:          PLA                                 ;; 01C1A6 : 68          ;
CODE_01C1A7:          STA $64                             ;; 01C1A7 : 85 64       ;
CODE_01C1A9:          LDA RAM_SpritesLocked               ;; 01C1A9 : A5 9D       ; \ Branch if sprites locked 
CODE_01C1AB:          BNE Return01C1ED                    ;; 01C1AB : D0 40       ; / 
CODE_01C1AD:          LDA.B #$F0                          ;; 01C1AD : A9 F0       ;
CODE_01C1AF:          STA RAM_SpriteSpeedY,X              ;; 01C1AF : 95 AA       ;
CODE_01C1B1:          JSR.W SubSprYPosNoGrvty             ;; 01C1B1 : 20 D8 AB    ;
CODE_01C1B4:          LDA.W $1540,X                       ;; 01C1B4 : BD 40 15    ;
CODE_01C1B7:          CMP.B #$20                          ;; 01C1B7 : C9 20       ;
CODE_01C1B9:          BCS CODE_01C1CB                     ;; 01C1B9 : B0 10       ;
CODE_01C1BB:          JSR.W CODE_019140                   ;; 01C1BB : 20 40 91    ;
CODE_01C1BE:          LDA.W RAM_SprObjStatus,X            ;; 01C1BE : BD 88 15    ;
CODE_01C1C1:          BNE CODE_01C1C8                     ;; 01C1C1 : D0 05       ;
CODE_01C1C3:          LDA.W RAM_SpriteYHi,X               ;; 01C1C3 : BD D4 14    ;
CODE_01C1C6:          BPL CODE_01C1CB                     ;; 01C1C6 : 10 03       ;
CODE_01C1C8:          JMP.W OffScrEraseSprite             ;; 01C1C8 : 4C 80 AC    ;
                                                          ;;                      ;
CODE_01C1CB:          LDA RAM_SpriteYLo,X                 ;; 01C1CB : B5 D8       ;
CODE_01C1CD:          AND.B #$0F                          ;; 01C1CD : 29 0F       ;
CODE_01C1CF:          CMP.B #$00                          ;; 01C1CF : C9 00       ;
CODE_01C1D1:          BNE Return01C1ED                    ;; 01C1D1 : D0 1A       ;
CODE_01C1D3:          LDA RAM_SpriteXLo,X                 ;; 01C1D3 : B5 E4       ; \ $9A = Sprite X position 
CODE_01C1D5:          STA RAM_BlockYLo                    ;; 01C1D5 : 85 9A       ;  | for block creation 
CODE_01C1D7:          LDA.W RAM_SpriteXHi,X               ;; 01C1D7 : BD E0 14    ;  | 
CODE_01C1DA:          STA RAM_BlockYHi                    ;; 01C1DA : 85 9B       ; / 
CODE_01C1DC:          LDA RAM_SpriteYLo,X                 ;; 01C1DC : B5 D8       ; \ $98 = Sprite Y position 
CODE_01C1DE:          STA RAM_BlockXLo                    ;; 01C1DE : 85 98       ;  | for block creation 
CODE_01C1E0:          LDA.W RAM_SpriteYHi,X               ;; 01C1E0 : BD D4 14    ;  | 
CODE_01C1E3:          STA RAM_BlockXHi                    ;; 01C1E3 : 85 99       ; / 
CODE_01C1E5:          LDA.B #$03                          ;; 01C1E5 : A9 03       ; \ Block to generate = Vine 
CODE_01C1E7:          STA RAM_BlockBlock                  ;; 01C1E7 : 85 9C       ; / 
CODE_01C1E9:          JSL.L GenerateTile                  ;; 01C1E9 : 22 B0 BE 00 ; Generate the tile 
Return01C1ED:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
DATA_01C1EE:          .db $FF,$01                         ;; 01C1EE               ;
                                                          ;;                      ;
DATA_01C1F0:          .db $F0,$10                         ;; 01C1F0               ;
                                                          ;;                      ;
BalloonKeyFlyObjs:    LDA.W $14C8,X                       ;; ?QPWZ? : BD C8 14    ;
CODE_01C1F5:          CMP.B #$0C                          ;; 01C1F5 : C9 0C       ;
CODE_01C1F7:          BEQ CODE_01C255                     ;; 01C1F7 : F0 5C       ;
CODE_01C1F9:          LDA RAM_SpritesLocked               ;; 01C1F9 : A5 9D       ; \ Branch if sprites locked 
CODE_01C1FB:          BNE CODE_01C255                     ;; 01C1FB : D0 58       ; / 
CODE_01C1FD:          LDA RAM_SpriteNum,X                 ;; 01C1FD : B5 9E       ;
CODE_01C1FF:          CMP.B #$7D                          ;; 01C1FF : C9 7D       ;
CODE_01C201:          BNE CODE_01C21D                     ;; 01C201 : D0 1A       ;
CODE_01C203:          LDA.W $1540,X                       ;; 01C203 : BD 40 15    ;
CODE_01C206:          BEQ CODE_01C21D                     ;; 01C206 : F0 15       ;
ADDR_01C208:          LDA $64                             ;; 01C208 : A5 64       ;
ADDR_01C20A:          PHA                                 ;; 01C20A : 48          ;
ADDR_01C20B:          LDA.B #$10                          ;; 01C20B : A9 10       ;
ADDR_01C20D:          STA $64                             ;; 01C20D : 85 64       ;
ADDR_01C20F:          JSR.W CODE_01C61A                   ;; 01C20F : 20 1A C6    ;
ADDR_01C212:          PLA                                 ;; 01C212 : 68          ;
ADDR_01C213:          STA $64                             ;; 01C213 : 85 64       ;
ADDR_01C215:          LDA.B #$F8                          ;; 01C215 : A9 F8       ;
ADDR_01C217:          STA RAM_SpriteSpeedY,X              ;; 01C217 : 95 AA       ;
ADDR_01C219:          JSR.W SubSprYPosNoGrvty             ;; 01C219 : 20 D8 AB    ;
Return01C21C:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01C21D:          LDA RAM_FrameCounter                ;; 01C21D : A5 13       ;
CODE_01C21F:          AND.B #$01                          ;; 01C21F : 29 01       ;
CODE_01C221:          BNE CODE_01C239                     ;; 01C221 : D0 16       ;
CODE_01C223:          LDA.W $151C,X                       ;; 01C223 : BD 1C 15    ;
CODE_01C226:          AND.B #$01                          ;; 01C226 : 29 01       ;
CODE_01C228:          TAY                                 ;; 01C228 : A8          ;
CODE_01C229:          LDA RAM_SpriteSpeedY,X              ;; 01C229 : B5 AA       ;
CODE_01C22B:          CLC                                 ;; 01C22B : 18          ;
CODE_01C22C:          ADC.W DATA_01C1EE,Y                 ;; 01C22C : 79 EE C1    ;
CODE_01C22F:          STA RAM_SpriteSpeedY,X              ;; 01C22F : 95 AA       ;
CODE_01C231:          CMP.W DATA_01C1F0,Y                 ;; 01C231 : D9 F0 C1    ;
CODE_01C234:          BNE CODE_01C239                     ;; 01C234 : D0 03       ;
CODE_01C236:          INC.W $151C,X                       ;; 01C236 : FE 1C 15    ;
CODE_01C239:          LDA.B #$0C                          ;; 01C239 : A9 0C       ;
CODE_01C23B:          STA RAM_SpriteSpeedX,X              ;; 01C23B : 95 B6       ;
CODE_01C23D:          JSR.W SubSprXPosNoGrvty             ;; 01C23D : 20 CC AB    ;
CODE_01C240:          LDA RAM_SpriteSpeedY,X              ;; 01C240 : B5 AA       ;
CODE_01C242:          PHA                                 ;; 01C242 : 48          ;
CODE_01C243:          CLC                                 ;; 01C243 : 18          ;
CODE_01C244:          SEC                                 ;; 01C244 : 38          ;
CODE_01C245:          SBC.B #$02                          ;; 01C245 : E9 02       ;
CODE_01C247:          STA RAM_SpriteSpeedY,X              ;; 01C247 : 95 AA       ;
CODE_01C249:          JSR.W SubSprYPosNoGrvty             ;; 01C249 : 20 D8 AB    ;
CODE_01C24C:          PLA                                 ;; 01C24C : 68          ;
CODE_01C24D:          STA RAM_SpriteSpeedY,X              ;; 01C24D : 95 AA       ;
CODE_01C24F:          JSR.W SubOffscreen0Bnk1             ;; 01C24F : 20 31 AC    ;
CODE_01C252:          INC.W $1570,X                       ;; 01C252 : FE 70 15    ;
CODE_01C255:          LDA RAM_SpriteNum,X                 ;; 01C255 : B5 9E       ;
CODE_01C257:          CMP.B #$7D                          ;; 01C257 : C9 7D       ;
CODE_01C259:          BNE CODE_01C262                     ;; 01C259 : D0 07       ;
CODE_01C25B:          LDA.B #$01                          ;; 01C25B : A9 01       ;
CODE_01C25D:          STA.W RAM_SpriteDir,X               ;; 01C25D : 9D 7C 15    ;
CODE_01C260:          BRA CODE_01C27F                     ;; 01C260 : 80 1D       ;
                                                          ;;                      ;
CODE_01C262:          LDA RAM_SpriteState,X               ;; 01C262 : B5 C2       ;
CODE_01C264:          CMP.B #$02                          ;; 01C264 : C9 02       ;
CODE_01C266:          BNE CODE_01C27C                     ;; 01C266 : D0 14       ;
CODE_01C268:          LDA RAM_FrameCounter                ;; 01C268 : A5 13       ;
CODE_01C26A:          AND.B #$03                          ;; 01C26A : 29 03       ;
CODE_01C26C:          BNE CODE_01C271                     ;; 01C26C : D0 03       ;
CODE_01C26E:          JSR.W CODE_01B14E                   ;; 01C26E : 20 4E B1    ;
CODE_01C271:          LDA RAM_FrameCounterB               ;; 01C271 : A5 14       ;
CODE_01C273:          LSR                                 ;; 01C273 : 4A          ;
CODE_01C274:          AND.B #$0E                          ;; 01C274 : 29 0E       ;
CODE_01C276:          EOR.W RAM_SpritePal,X               ;; 01C276 : 5D F6 15    ;
CODE_01C279:          STA.W RAM_SpritePal,X               ;; 01C279 : 9D F6 15    ;
CODE_01C27C:          JSR.W CODE_019E95                   ;; 01C27C : 20 95 9E    ;
CODE_01C27F:          LDA RAM_SpriteState,X               ;; 01C27F : B5 C2       ;
CODE_01C281:          BEQ CODE_01C287                     ;; 01C281 : F0 04       ;
CODE_01C283:          JSR.W GetDrawInfoBnk1               ;; 01C283 : 20 65 A3    ;
Return01C286:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01C287:          JSR.W CODE_01C61A                   ;; 01C287 : 20 1A C6    ;
CODE_01C28A:          JSR.W MarioSprInteractRt            ;; 01C28A : 20 E4 A7    ;
CODE_01C28D:          BCC Return01C2D2                    ;; 01C28D : 90 43       ;
CODE_01C28F:          LDA RAM_SpriteNum,X                 ;; 01C28F : B5 9E       ;
CODE_01C291:          CMP.B #$7E                          ;; 01C291 : C9 7E       ;
CODE_01C293:          BNE CODE_01C2A6                     ;; 01C293 : D0 11       ;
ADDR_01C295:          JSR.W CODE_01C4F0                   ;; 01C295 : 20 F0 C4    ;
ADDR_01C298:          LDA.B #$05                          ;; 01C298 : A9 05       ;
ADDR_01C29A:          JSL.L ADDR_05B329                   ;; 01C29A : 22 29 B3 05 ;
ADDR_01C29E:          LDA.B #$03                          ;; 01C29E : A9 03       ;
ADDR_01C2A0:          JSL.L GivePoints                    ;; 01C2A0 : 22 E5 AC 02 ;
ADDR_01C2A4:          BRA ADDR_01C30F                     ;; 01C2A4 : 80 69       ;
                                                          ;;                      ;
CODE_01C2A6:          CMP.B #$7F                          ;; 01C2A6 : C9 7F       ;
CODE_01C2A8:          BNE CODE_01C2AF                     ;; 01C2A8 : D0 05       ;
ADDR_01C2AA:          JSR.W GiveMario1Up                  ;; 01C2AA : 20 FE C5    ;
ADDR_01C2AD:          BRA ADDR_01C30F                     ;; 01C2AD : 80 60       ;
                                                          ;;                      ;
CODE_01C2AF:          CMP.B #$80                          ;; 01C2AF : C9 80       ;
CODE_01C2B1:          BNE CODE_01C2CE                     ;; 01C2B1 : D0 1B       ;
ADDR_01C2B3:          LDA RAM_MarioSpeedY                 ;; 01C2B3 : A5 7D       ;
ADDR_01C2B5:          BMI Return01C2D2                    ;; 01C2B5 : 30 1B       ;
ADDR_01C2B7:          LDA.B #$09                          ;; 01C2B7 : A9 09       ; \ Sprite status = Carryable 
ADDR_01C2B9:          STA.W $14C8,X                       ;; 01C2B9 : 9D C8 14    ; / 
ADDR_01C2BC:          LDA.B #$D0                          ;; 01C2BC : A9 D0       ;
ADDR_01C2BE:          STA RAM_MarioSpeedY                 ;; 01C2BE : 85 7D       ;
ADDR_01C2C0:          STZ RAM_SpriteSpeedY,X              ;; 01C2C0 : 74 AA       ; Sprite Y Speed = 0 
ADDR_01C2C2:          STZ.W $1540,X                       ;; 01C2C2 : 9E 40 15    ;
ADDR_01C2C5:          LDA.W RAM_Tweaker167A,X             ;; 01C2C5 : BD 7A 16    ; \ Use default interation with Mario 
ADDR_01C2C8:          AND.B #$7F                          ;; 01C2C8 : 29 7F       ;  | 
ADDR_01C2CA:          STA.W RAM_Tweaker167A,X             ;; 01C2CA : 9D 7A 16    ; / 
Return01C2CD:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01C2CE:          CMP.B #$7D                          ;; 01C2CE : C9 7D       ;
CODE_01C2D0:          BEQ CODE_01C2D3                     ;; 01C2D0 : F0 01       ;
Return01C2D2:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01C2D3:          LDY.B #$0B                          ;; 01C2D3 : A0 0B       ;
CODE_01C2D5:          LDA.W $14C8,Y                       ;; 01C2D5 : B9 C8 14    ;
CODE_01C2D8:          CMP.B #$0B                          ;; 01C2D8 : C9 0B       ;
CODE_01C2DA:          BNE CODE_01C2E8                     ;; 01C2DA : D0 0C       ;
CODE_01C2DC:          LDA.W RAM_SpriteNum,Y               ;; 01C2DC : B9 9E 00    ;
CODE_01C2DF:          CMP.B #$7D                          ;; 01C2DF : C9 7D       ;
CODE_01C2E1:          BEQ CODE_01C2E8                     ;; 01C2E1 : F0 05       ;
CODE_01C2E3:          LDA.B #$09                          ;; 01C2E3 : A9 09       ; \ Sprite status = Carryable 
CODE_01C2E5:          STA.W $14C8,Y                       ;; 01C2E5 : 99 C8 14    ; / 
CODE_01C2E8:          DEY                                 ;; 01C2E8 : 88          ;
CODE_01C2E9:          BPL CODE_01C2D5                     ;; 01C2E9 : 10 EA       ;
CODE_01C2EB:          LDA.B #$00                          ;; 01C2EB : A9 00       ;
CODE_01C2ED:          LDY.W $13F3                         ;; 01C2ED : AC F3 13    ;
CODE_01C2F0:          BNE CODE_01C2F4                     ;; 01C2F0 : D0 02       ;
CODE_01C2F2:          LDA.B #$0B                          ;; 01C2F2 : A9 0B       ; \ Sprite status = Being carried 
CODE_01C2F4:          STA.W $14C8,X                       ;; 01C2F4 : 9D C8 14    ; / 
CODE_01C2F7:          LDA RAM_MarioSpeedY                 ;; 01C2F7 : A5 7D       ;
CODE_01C2F9:          STA RAM_SpriteSpeedY,X              ;; 01C2F9 : 95 AA       ;
CODE_01C2FB:          LDA RAM_MarioSpeedX                 ;; 01C2FB : A5 7B       ;
CODE_01C2FD:          STA RAM_SpriteSpeedX,X              ;; 01C2FD : 95 B6       ;
CODE_01C2FF:          LDA.B #$09                          ;; 01C2FF : A9 09       ;
CODE_01C301:          STA.W $13F3                         ;; 01C301 : 8D F3 13    ;
CODE_01C304:          LDA.B #$FF                          ;; 01C304 : A9 FF       ;
CODE_01C306:          STA.W $1891                         ;; 01C306 : 8D 91 18    ;
CODE_01C309:          LDA.B #$1E                          ;; 01C309 : A9 1E       ; \ Play sound effect 
CODE_01C30B:          STA.W $1DF9                         ;; 01C30B : 8D F9 1D    ; / 
Return01C30E:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
ADDR_01C30F:          STZ.W $14C8,X                       ;; 01C30F : 9E C8 14    ;
Return01C312:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
ChangingItemSprite:   .db $74,$75,$77,$76                 ;; ?QPWZ?               ;
                                                          ;;                      ;
ChangingItem:         LDA.B #$01                          ;; ?QPWZ? : A9 01       ;
CODE_01C319:          STA.W $151C,X                       ;; 01C319 : 9D 1C 15    ;
CODE_01C31C:          LDA.W $15D0,X                       ;; 01C31C : BD D0 15    ;
CODE_01C31F:          BNE CODE_01C324                     ;; 01C31F : D0 03       ;
CODE_01C321:          INC.W $187B,X                       ;; 01C321 : FE 7B 18    ;
CODE_01C324:          LDA.W $187B,X                       ;; 01C324 : BD 7B 18    ; \ Determine which power-up to act like 
CODE_01C327:          LSR                                 ;; 01C327 : 4A          ;  | 
CODE_01C328:          LSR                                 ;; 01C328 : 4A          ;  | 
CODE_01C329:          LSR                                 ;; 01C329 : 4A          ;  | 
CODE_01C32A:          LSR                                 ;; 01C32A : 4A          ;  | 
CODE_01C32B:          LSR                                 ;; 01C32B : 4A          ;  | 
CODE_01C32C:          LSR                                 ;; 01C32C : 4A          ;  | 
CODE_01C32D:          AND.B #$03                          ;; 01C32D : 29 03       ;  | 
CODE_01C32F:          TAY                                 ;; 01C32F : A8          ;  | 
CODE_01C330:          LDA.W ChangingItemSprite,Y          ;; 01C330 : B9 13 C3    ;  / 
CODE_01C333:          STA RAM_SpriteNum,X                 ;; 01C333 : 95 9E       ; \ Change into the appropriate power up 
CODE_01C335:          JSL.L LoadSpriteTables              ;; 01C335 : 22 8B F7 07 ; / 
CODE_01C339:          JSR.W PowerUpRt                     ;; 01C339 : 20 53 C3    ; Run the power up code 
CODE_01C33C:          LDA.B #$81                          ;; 01C33C : A9 81       ; \ Change it back to the turning item 
CODE_01C33E:          STA RAM_SpriteNum,X                 ;; 01C33E : 95 9E       ;  | 
CODE_01C340:          JSL.L LoadSpriteTables              ;; 01C340 : 22 8B F7 07 ; / 
Return01C344:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
EatenBerryGfxProp:    .db $02,$02,$04,$06                 ;; ?QPWZ?               ;
                                                          ;;                      ;
FireFlower:           LDA RAM_FrameCounterB               ;; ?QPWZ? : A5 14       ; \ Flip flower every 8 frames 
CODE_01C34B:          AND.B #$08                          ;; 01C34B : 29 08       ;  | 
CODE_01C34D:          LSR                                 ;; 01C34D : 4A          ;  | 
CODE_01C34E:          LSR                                 ;; 01C34E : 4A          ;  | 
CODE_01C34F:          LSR                                 ;; 01C34F : 4A          ;  | ($157C,x = 0 or 1) 
CODE_01C350:          STA.W RAM_SpriteDir,X               ;; 01C350 : 9D 7C 15    ; / 
PowerUpRt:            LDA.W $160E,X                       ;; ?QPWZ? : BD 0E 16    ;
CODE_01C356:          BEQ CODE_01C371                     ;; 01C356 : F0 19       ;
DrawBerryGfx:         JSR.W SubSprGfx2Entry1              ;; ?QPWZ? : 20 0D 9F    ;
CODE_01C35B:          LDY.W RAM_SprOAMIndex,X             ;; 01C35B : BC EA 15    ; Y = Index into sprite OAM 
CODE_01C35E:          LDA.B #$80                          ;; 01C35E : A9 80       ; \ Set berry tile to OAM 
CODE_01C360:          STA.W OAM_Tile,Y                    ;; 01C360 : 99 02 03    ; / 
CODE_01C363:          PHX                                 ;; 01C363 : DA          ; \ Set gfx properties of berry 
CODE_01C364:          LDX.W $18D6                         ;; 01C364 : AE D6 18    ;  | X = type of berry being eaten 
CODE_01C367:          LDA.W EatenBerryGfxProp,X           ;; 01C367 : BD 45 C3    ;  | 
CODE_01C36A:          ORA $64                             ;; 01C36A : 05 64       ;  | 
CODE_01C36C:          STA.W OAM_Prop,Y                    ;; 01C36C : 99 03 03    ; / 
CODE_01C36F:          PLX                                 ;; 01C36F : FA          ; X = sprite index 
Return01C370:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01C371:          LDA $64                             ;; 01C371 : A5 64       ;
CODE_01C373:          PHA                                 ;; 01C373 : 48          ;
CODE_01C374:          JSR.W CODE_01C4AC                   ;; 01C374 : 20 AC C4    ;
CODE_01C377:          LDA.W $1534,X                       ;; 01C377 : BD 34 15    ;
CODE_01C37A:          BEQ CODE_01C38F                     ;; 01C37A : F0 13       ;
CODE_01C37C:          LDA RAM_SpritesLocked               ;; 01C37C : A5 9D       ; \ Branch if sprites locked 
CODE_01C37E:          BNE CODE_01C387                     ;; 01C37E : D0 07       ; / 
CODE_01C380:          LDA.B #$10                          ;; 01C380 : A9 10       ;
CODE_01C382:          STA RAM_SpriteSpeedY,X              ;; 01C382 : 95 AA       ;
CODE_01C384:          JSR.W SubSprYPosNoGrvty             ;; 01C384 : 20 D8 AB    ;
CODE_01C387:          LDA RAM_FrameCounterB               ;; 01C387 : A5 14       ;
CODE_01C389:          AND.B #$0C                          ;; 01C389 : 29 0C       ;
CODE_01C38B:          BNE CODE_01C3AB                     ;; 01C38B : D0 1E       ;
CODE_01C38D:          PLA                                 ;; 01C38D : 68          ;
Return01C38E:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01C38F:          LDA.W $1540,X                       ;; 01C38F : BD 40 15    ;
CODE_01C392:          BEQ CODE_01C3AE                     ;; 01C392 : F0 1A       ;
CODE_01C394:          JSR.W CODE_019140                   ;; 01C394 : 20 40 91    ;
CODE_01C397:          LDA.W $1528,X                       ;; 01C397 : BD 28 15    ;
CODE_01C39A:          BNE CODE_01C3A0                     ;; 01C39A : D0 04       ;
CODE_01C39C:          LDA.B #$10                          ;; 01C39C : A9 10       ;
CODE_01C39E:          STA $64                             ;; 01C39E : 85 64       ;
CODE_01C3A0:          LDA RAM_SpritesLocked               ;; 01C3A0 : A5 9D       ; \ Branch if sprites locked 
CODE_01C3A2:          BNE CODE_01C3AB                     ;; 01C3A2 : D0 07       ; / 
CODE_01C3A4:          LDA.B #$FC                          ;; 01C3A4 : A9 FC       ;
CODE_01C3A6:          STA RAM_SpriteSpeedY,X              ;; 01C3A6 : 95 AA       ;
CODE_01C3A8:          JSR.W SubSprYPosNoGrvty             ;; 01C3A8 : 20 D8 AB    ;
CODE_01C3AB:          JMP.W CODE_01C48D                   ;; 01C3AB : 4C 8D C4    ;
                                                          ;;                      ;
CODE_01C3AE:          LDA RAM_SpritesLocked               ;; 01C3AE : A5 9D       ; \ Branch if sprites locked 
CODE_01C3B0:          BNE CODE_01C3AB                     ;; 01C3B0 : D0 F9       ; / 
CODE_01C3B2:          LDA.W $14C8,X                       ;; 01C3B2 : BD C8 14    ;
CODE_01C3B5:          CMP.B #$0C                          ;; 01C3B5 : C9 0C       ;
CODE_01C3B7:          BEQ CODE_01C3AB                     ;; 01C3B7 : F0 F2       ;
CODE_01C3B9:          LDA RAM_SpriteNum,X                 ;; 01C3B9 : B5 9E       ;
CODE_01C3BB:          CMP.B #$76                          ;; 01C3BB : C9 76       ; \ Useless code, branch nowhere if not a star 
CODE_01C3BD:          BNE CODE_01C3BF                     ;; 01C3BD : D0 00       ; / 
CODE_01C3BF:          INC.W $1570,X                       ;; 01C3BF : FE 70 15    ;
CODE_01C3C2:          JSR.W CODE_018DBB                   ;; 01C3C2 : 20 BB 8D    ;
CODE_01C3C5:          LDA RAM_SpriteNum,X                 ;; 01C3C5 : B5 9E       ;
CODE_01C3C7:          CMP.B #$75                          ;; 01C3C7 : C9 75       ; flower 
CODE_01C3C9:          BNE CODE_01C3D2                     ;; 01C3C9 : D0 07       ;
CODE_01C3CB:          LDA.W $151C,X                       ;; 01C3CB : BD 1C 15    ;
CODE_01C3CE:          BNE CODE_01C3D2                     ;; 01C3CE : D0 02       ;
CODE_01C3D0:          STZ RAM_SpriteSpeedX,X              ;; 01C3D0 : 74 B6       ; Sprite X Speed = 0 
CODE_01C3D2:          CMP.B #$76                          ;; 01C3D2 : C9 76       ; star 
CODE_01C3D4:          BEQ CODE_01C3E1                     ;; 01C3D4 : F0 0B       ;
CODE_01C3D6:          CMP.B #$21                          ;; 01C3D6 : C9 21       ; sprite coin 
CODE_01C3D8:          BEQ CODE_01C3E1                     ;; 01C3D8 : F0 07       ;
CODE_01C3DA:          LDA.W $151C,X                       ;; 01C3DA : BD 1C 15    ;
CODE_01C3DD:          BNE CODE_01C3E1                     ;; 01C3DD : D0 02       ;
CODE_01C3DF:          ASL RAM_SpriteSpeedX,X              ;; 01C3DF : 16 B6       ;
CODE_01C3E1:          LDA RAM_SpriteState,X               ;; 01C3E1 : B5 C2       ;
CODE_01C3E3:          BEQ CODE_01C3F3                     ;; 01C3E3 : F0 0E       ;
CODE_01C3E5:          BMI CODE_01C3F1                     ;; 01C3E5 : 30 0A       ;
CODE_01C3E7:          JSR.W CODE_019140                   ;; 01C3E7 : 20 40 91    ;
CODE_01C3EA:          LDA.W RAM_SprObjStatus,X            ;; 01C3EA : BD 88 15    ;
CODE_01C3ED:          BNE CODE_01C3F1                     ;; 01C3ED : D0 02       ;
CODE_01C3EF:          STZ RAM_SpriteState,X               ;; 01C3EF : 74 C2       ;
CODE_01C3F1:          BRA CODE_01C437                     ;; 01C3F1 : 80 44       ;
                                                          ;;                      ;
CODE_01C3F3:          LDA.W $0D9B                         ;; 01C3F3 : AD 9B 0D    ;
CODE_01C3F6:          CMP.B #$C1                          ;; 01C3F6 : C9 C1       ;
CODE_01C3F8:          BEQ CODE_01C42C                     ;; 01C3F8 : F0 32       ;
CODE_01C3FA:          BIT.W $0D9B                         ;; 01C3FA : 2C 9B 0D    ;
CODE_01C3FD:          BVC CODE_01C42C                     ;; 01C3FD : 50 2D       ;
ADDR_01C3FF:          STZ.W RAM_SprObjStatus,X            ;; 01C3FF : 9E 88 15    ;
ADDR_01C402:          STZ RAM_SpriteSpeedX,X              ;; 01C402 : 74 B6       ; Sprite X Speed = 0 
ADDR_01C404:          LDA.W RAM_SpriteYHi,X               ;; 01C404 : BD D4 14    ;
ADDR_01C407:          BNE ADDR_01C41E                     ;; 01C407 : D0 15       ;
ADDR_01C409:          LDA RAM_SpriteYLo,X                 ;; 01C409 : B5 D8       ;
ADDR_01C40B:          CMP.B #$A0                          ;; 01C40B : C9 A0       ;
ADDR_01C40D:          BCC ADDR_01C41E                     ;; 01C40D : 90 0F       ;
ADDR_01C40F:          AND.B #$F0                          ;; 01C40F : 29 F0       ;
ADDR_01C411:          STA RAM_SpriteYLo,X                 ;; 01C411 : 95 D8       ;
ADDR_01C413:          LDA.W RAM_SprObjStatus,X            ;; 01C413 : BD 88 15    ;
ADDR_01C416:          ORA.B #$04                          ;; 01C416 : 09 04       ;
ADDR_01C418:          STA.W RAM_SprObjStatus,X            ;; 01C418 : 9D 88 15    ;
ADDR_01C41B:          JSR.W CODE_018DBB                   ;; 01C41B : 20 BB 8D    ;
ADDR_01C41E:          JSR.W SubSprXPosNoGrvty             ;; 01C41E : 20 CC AB    ;
ADDR_01C421:          JSR.W SubSprYPosNoGrvty             ;; 01C421 : 20 D8 AB    ;
ADDR_01C424:          INC RAM_SpriteSpeedY,X              ;; 01C424 : F6 AA       ;
ADDR_01C426:          INC RAM_SpriteSpeedY,X              ;; 01C426 : F6 AA       ;
ADDR_01C428:          INC RAM_SpriteSpeedY,X              ;; 01C428 : F6 AA       ;
ADDR_01C42A:          BRA CODE_01C42F                     ;; 01C42A : 80 03       ;
                                                          ;;                      ;
CODE_01C42C:          JSR.W SubUpdateSprPos               ;; 01C42C : 20 32 90    ;
CODE_01C42F:          LDA RAM_FrameCounter                ;; 01C42F : A5 13       ;
CODE_01C431:          AND.B #$03                          ;; 01C431 : 29 03       ;
CODE_01C433:          BEQ CODE_01C437                     ;; 01C433 : F0 02       ;
CODE_01C435:          DEC RAM_SpriteSpeedY,X              ;; 01C435 : D6 AA       ;
CODE_01C437:          JSR.W SubOffscreen0Bnk1             ;; 01C437 : 20 31 AC    ;
CODE_01C43A:          JSR.W IsTouchingCeiling             ;; 01C43A : 20 14 80    ;
CODE_01C43D:          BEQ CODE_01C443                     ;; 01C43D : F0 04       ;
CODE_01C43F:          LDA.B #$00                          ;; 01C43F : A9 00       ;
CODE_01C441:          STA RAM_SpriteSpeedY,X              ;; 01C441 : 95 AA       ;
CODE_01C443:          JSR.W IsOnGround                    ;; 01C443 : 20 0E 80    ;
CODE_01C446:          BNE CODE_01C44A                     ;; 01C446 : D0 02       ;
CODE_01C448:          BRA CODE_01C47E                     ;; 01C448 : 80 34       ;
                                                          ;;                      ;
CODE_01C44A:          LDA RAM_SpriteNum,X                 ;; 01C44A : B5 9E       ;
CODE_01C44C:          CMP.B #$21                          ;; 01C44C : C9 21       ; sprite coin 
CODE_01C44E:          BNE CODE_01C46C                     ;; 01C44E : D0 1C       ;
CODE_01C450:          JSR.W CODE_018DBB                   ;; 01C450 : 20 BB 8D    ;
CODE_01C453:          LDA RAM_SpriteSpeedY,X              ;; 01C453 : B5 AA       ;
CODE_01C455:          INC A                               ;; 01C455 : 1A          ;
CODE_01C456:          PHA                                 ;; 01C456 : 48          ;
CODE_01C457:          JSR.W SetSomeYSpeed??               ;; 01C457 : 20 04 9A    ;
CODE_01C45A:          PLA                                 ;; 01C45A : 68          ;
CODE_01C45B:          LSR                                 ;; 01C45B : 4A          ;
CODE_01C45C:          JSR.W CODE_01CCEC                   ;; 01C45C : 20 EC CC    ;
CODE_01C45F:          CMP.B #$FC                          ;; 01C45F : C9 FC       ;
CODE_01C461:          BCS CODE_01C46A                     ;; 01C461 : B0 07       ;
CODE_01C463:          LDY.W RAM_SprObjStatus,X            ;; 01C463 : BC 88 15    ;
CODE_01C466:          BMI CODE_01C46A                     ;; 01C466 : 30 02       ;
CODE_01C468:          STA RAM_SpriteSpeedY,X              ;; 01C468 : 95 AA       ;
CODE_01C46A:          BRA CODE_01C47E                     ;; 01C46A : 80 12       ;
                                                          ;;                      ;
CODE_01C46C:          JSR.W SetSomeYSpeed??               ;; 01C46C : 20 04 9A    ;
CODE_01C46F:          LDA.W $151C,X                       ;; 01C46F : BD 1C 15    ;
CODE_01C472:          BNE CODE_01C47A                     ;; 01C472 : D0 06       ;
CODE_01C474:          LDA RAM_SpriteNum,X                 ;; 01C474 : B5 9E       ;
CODE_01C476:          CMP.B #$76                          ;; 01C476 : C9 76       ; star 
CODE_01C478:          BNE CODE_01C47E                     ;; 01C478 : D0 04       ;
CODE_01C47A:          LDA.B #$C8                          ;; 01C47A : A9 C8       ;
CODE_01C47C:          STA RAM_SpriteSpeedY,X              ;; 01C47C : 95 AA       ;
CODE_01C47E:          LDA.W $1558,X                       ;; 01C47E : BD 58 15    ;
CODE_01C481:          ORA RAM_SpriteState,X               ;; 01C481 : 15 C2       ;
CODE_01C483:          BNE CODE_01C48D                     ;; 01C483 : D0 08       ;
CODE_01C485:          JSR.W IsTouchingObjSide             ;; 01C485 : 20 08 80    ;
CODE_01C488:          BEQ CODE_01C48D                     ;; 01C488 : F0 03       ;
CODE_01C48A:          JSR.W FlipSpriteDir                 ;; 01C48A : 20 98 90    ;
CODE_01C48D:          LDA.W $1540,X                       ;; 01C48D : BD 40 15    ;
CODE_01C490:          CMP.B #$36                          ;; 01C490 : C9 36       ;
CODE_01C492:          BCS CODE_01C4A8                     ;; 01C492 : B0 14       ;
CODE_01C494:          LDA RAM_SpriteState,X               ;; 01C494 : B5 C2       ;
CODE_01C496:          BEQ CODE_01C49C                     ;; 01C496 : F0 04       ;
CODE_01C498:          CMP.B #$FF                          ;; 01C498 : C9 FF       ;
CODE_01C49A:          BNE CODE_01C4A1                     ;; 01C49A : D0 05       ;
CODE_01C49C:          LDA.W RAM_SprBehindScrn,X           ;; 01C49C : BD 32 16    ;
CODE_01C49F:          BEQ CODE_01C4A5                     ;; 01C49F : F0 04       ;
CODE_01C4A1:          LDA.B #$10                          ;; 01C4A1 : A9 10       ;
CODE_01C4A3:          STA $64                             ;; 01C4A3 : 85 64       ;
CODE_01C4A5:          JSR.W CODE_01C61A                   ;; 01C4A5 : 20 1A C6    ;
CODE_01C4A8:          PLA                                 ;; 01C4A8 : 68          ;
CODE_01C4A9:          STA $64                             ;; 01C4A9 : 85 64       ;
Return01C4AB:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01C4AC:          JSR.W CODE_01A80F                   ;; 01C4AC : 20 0F A8    ;
CODE_01C4AF:          BCC Return01C4AB                    ;; 01C4AF : 90 FA       ;
CODE_01C4B1:          LDA.W $151C,X                       ;; 01C4B1 : BD 1C 15    ;
CODE_01C4B4:          BEQ CODE_01C4BA                     ;; 01C4B4 : F0 04       ;
CODE_01C4B6:          LDA RAM_SpriteState,X               ;; 01C4B6 : B5 C2       ;
CODE_01C4B8:          BNE Return01C4FA                    ;; 01C4B8 : D0 40       ;
CODE_01C4BA:          LDA.W RAM_DisableInter,X            ;; 01C4BA : BD 4C 15    ;
CODE_01C4BD:          BNE Return01C4FA                    ;; 01C4BD : D0 3B       ;
CODE_01C4BF:          LDA.W $1540,X                       ;; 01C4BF : BD 40 15    ;
CODE_01C4C2:          CMP.B #$18                          ;; 01C4C2 : C9 18       ;
CODE_01C4C4:          BCS Return01C4FA                    ;; 01C4C4 : B0 34       ;
CODE_01C4C6:          STZ.W $14C8,X                       ;; 01C4C6 : 9E C8 14    ;
CODE_01C4C9:          LDA RAM_SpriteNum,X                 ;; 01C4C9 : B5 9E       ;
CODE_01C4CB:          CMP.B #$21                          ;; 01C4CB : C9 21       ;
CODE_01C4CD:          BNE TouchedPowerUp                  ;; 01C4CD : D0 69       ;
CODE_01C4CF:          JSL.L CODE_05B34A                   ;; 01C4CF : 22 4A B3 05 ;
CODE_01C4D3:          LDA.W RAM_SpritePal,X               ;; 01C4D3 : BD F6 15    ;
CODE_01C4D6:          AND.B #$0E                          ;; 01C4D6 : 29 0E       ;
CODE_01C4D8:          CMP.B #$02                          ;; 01C4D8 : C9 02       ;
CODE_01C4DA:          BEQ CODE_01C4E0                     ;; 01C4DA : F0 04       ;
CODE_01C4DC:          LDA.B #$01                          ;; 01C4DC : A9 01       ;
CODE_01C4DE:          BRA CODE_01C4EC                     ;; 01C4DE : 80 0C       ;
                                                          ;;                      ;
CODE_01C4E0:          LDA.W $18DD                         ;; 01C4E0 : AD DD 18    ;
CODE_01C4E3:          INC.W $18DD                         ;; 01C4E3 : EE DD 18    ;
CODE_01C4E6:          CMP.B #$0A                          ;; 01C4E6 : C9 0A       ;
CODE_01C4E8:          BCC CODE_01C4EC                     ;; 01C4E8 : 90 02       ;
CODE_01C4EA:          LDA.B #$0A                          ;; 01C4EA : A9 0A       ;
CODE_01C4EC:          JSL.L GivePoints                    ;; 01C4EC : 22 E5 AC 02 ;
CODE_01C4F0:          LDY.B #$03                          ;; 01C4F0 : A0 03       ;
CODE_01C4F2:          LDA.W $17C0,Y                       ;; 01C4F2 : B9 C0 17    ;
CODE_01C4F5:          BEQ CODE_01C4FB                     ;; 01C4F5 : F0 04       ;
CODE_01C4F7:          DEY                                 ;; 01C4F7 : 88          ;
CODE_01C4F8:          BPL CODE_01C4F2                     ;; 01C4F8 : 10 F8       ;
Return01C4FA:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01C4FB:          LDA.B #$05                          ;; 01C4FB : A9 05       ;
CODE_01C4FD:          STA.W $17C0,Y                       ;; 01C4FD : 99 C0 17    ;
CODE_01C500:          LDA RAM_SpriteXLo,X                 ;; 01C500 : B5 E4       ;
CODE_01C502:          STA.W $17C8,Y                       ;; 01C502 : 99 C8 17    ;
CODE_01C505:          LDA RAM_SpriteYLo,X                 ;; 01C505 : B5 D8       ;
CODE_01C507:          STA.W $17C4,Y                       ;; 01C507 : 99 C4 17    ;
CODE_01C50A:          LDA.B #$10                          ;; 01C50A : A9 10       ;
CODE_01C50C:          STA.W $17CC,Y                       ;; 01C50C : 99 CC 17    ;
Return01C50F:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
ItemBoxSprite:        .db $00,$01,$01,$01,$00,$01,$04,$02 ;; ?QPWZ?               ;
                      .db $00,$00,$00,$00,$00,$01,$04,$02 ;; ?QPWZ?               ;
                      .db $00,$00,$00,$00                 ;; ?QPWZ?               ;
                                                          ;;                      ;
GivePowerPtrIndex:    .db $00,$01,$01,$01,$04,$04,$04,$01 ;; ?QPWZ?               ;
                      .db $02,$02,$02,$02,$03,$03,$01,$03 ;; ?QPWZ?               ;
                      .db $05,$05,$05,$05                 ;; ?QPWZ?               ;
                                                          ;;                      ;
TouchedPowerUp:       SEC                                 ;; ?QPWZ? : 38          ; \ Index created from... 
CODE_01C539:          SBC.B #$74                          ;; 01C539 : E9 74       ;  | ... powerup touched (upper 2 bits)  
CODE_01C53B:          ASL                                 ;; 01C53B : 0A          ;  | 
CODE_01C53C:          ASL                                 ;; 01C53C : 0A          ;  | 
CODE_01C53D:          ORA RAM_MarioPowerUp                ;; 01C53D : 05 19       ;  | ... Mario's status (lower 3 bits) 
CODE_01C53F:          TAY                                 ;; 01C53F : A8          ; / 
CODE_01C540:          LDA.W ItemBoxSprite,Y               ;; 01C540 : B9 10 C5    ; \ Put appropriate item in item box 
CODE_01C543:          BEQ NoItem                          ;; 01C543 : F0 08       ;  | 
CODE_01C545:          STA.W $0DC2                         ;; 01C545 : 8D C2 0D    ; / 
CODE_01C548:          LDA.B #$0B                          ;; 01C548 : A9 0B       ; \  
CODE_01C54A:          STA.W $1DFC                         ;; 01C54A : 8D FC 1D    ; / Play sound effect 
NoItem:               LDA.W GivePowerPtrIndex,Y           ;; ?QPWZ? : B9 24 C5    ; \ Call routine to change Mario's status 
CODE_01C550:          JSL.L ExecutePtr                    ;; 01C550 : 22 DF 86 00 ; / 
                                                          ;;                      ;
HandlePowerUpPtrs:    .dw GiveMarioMushroom               ;; ?QPWZ? : 61 C5       ; 0 - Big 
                      .dw CODE_01C56F                     ;; ?QPWZ? : 6F C5       ; 1 - No change 
                      .dw GiveMarioStar                   ;; ?QPWZ? : 92 C5       ; 2 - Star 
                      .dw GiveMarioCape                   ;; ?QPWZ? : 98 C5       ; 3 - Cape 
                      .dw GiveMarioFire                   ;; ?QPWZ? : EC C5       ; 4 - Fire 
                      .dw GiveMario1Up                    ;; ?QPWZ? : FE C5       ; 5 - 1Up 13
                                                          ;;                      ;
Return01C560:         RTS                                 ;; ?QPWZ? : 60          ;
                                                          ;;                      ;
GiveMarioMushroom:    LDA.B #$02                          ;; ?QPWZ? : A9 02       ; \ Set growing action 
CODE_01C563:          STA RAM_MarioAnimation              ;; 01C563 : 85 71       ; / 
CODE_01C565:          LDA.B #$2F                          ;; 01C565 : A9 2F       ; \  
CODE_01C567:          STA.W $1496,Y                       ;; 01C567 : 99 96 14    ;  | Set animation timer 
CODE_01C56A:          STA RAM_SpritesLocked               ;; 01C56A : 85 9D       ; / Set lock sprites timer 
CODE_01C56C:          JMP.W CODE_01C56F                   ;; 01C56C : 4C 6F C5    ; JMP to next instruction? 
                                                          ;;                      ;
CODE_01C56F:          LDA.B #$04                          ;; 01C56F : A9 04       ;
CODE_01C571:          LDY.W $1534,X                       ;; 01C571 : BC 34 15    ;
CODE_01C574:          BNE CODE_01C57A                     ;; 01C574 : D0 04       ;
CODE_01C576:          JSL.L GivePoints                    ;; 01C576 : 22 E5 AC 02 ;
CODE_01C57A:          LDA.B #$0A                          ;; 01C57A : A9 0A       ; \ 
CODE_01C57C:          STA.W $1DF9                         ;; 01C57C : 8D F9 1D    ; / 
Return01C57F:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01C580:          LDA.B #$FF                          ;; 01C580 : A9 FF       ; \ Set star timer 
CODE_01C582:          STA.W $1490                         ;; 01C582 : 8D 90 14    ; / 
CODE_01C585:          LDA.B #$0D                          ;; 01C585 : A9 0D       ;
CODE_01C587:          STA.W $1DFB                         ;; 01C587 : 8D FB 1D    ; / Change music 
CODE_01C58A:          ASL.W $0DDA                         ;; 01C58A : 0E DA 0D    ;
CODE_01C58D:          SEC                                 ;; 01C58D : 38          ;
CODE_01C58E:          ROR.W $0DDA                         ;; 01C58E : 6E DA 0D    ;
Return01C591:         RTL                                 ;; ?QPWZ? : 6B          ; Return 
                                                          ;;                      ;
GiveMarioStar:        JSL.L CODE_01C580                   ;; ?QPWZ? : 22 80 C5 01 ;
CODE_01C596:          BRA CODE_01C56F                     ;; 01C596 : 80 D7       ;
                                                          ;;                      ;
GiveMarioCape:        LDA.B #$02                          ;; ?QPWZ? : A9 02       ;
CODE_01C59A:          STA RAM_MarioPowerUp                ;; 01C59A : 85 19       ;
CODE_01C59C:          LDA.B #$0D                          ;; 01C59C : A9 0D       ; \ Play sound effect 
CODE_01C59E:          STA.W $1DF9                         ;; 01C59E : 8D F9 1D    ; / 
CODE_01C5A1:          LDA.B #$04                          ;; 01C5A1 : A9 04       ;
CODE_01C5A3:          JSL.L GivePoints                    ;; 01C5A3 : 22 E5 AC 02 ;
CODE_01C5A7:          JSL.L CODE_01C5AE                   ;; 01C5A7 : 22 AE C5 01 ;
CODE_01C5AB:          INC RAM_SpritesLocked               ;; 01C5AB : E6 9D       ;
Return01C5AD:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01C5AE:          LDA $81                             ;; 01C5AE : A5 81       ;
CODE_01C5B0:          ORA $7F                             ;; 01C5B0 : 05 7F       ;
CODE_01C5B2:          BNE Return01C5EB                    ;; 01C5B2 : D0 37       ;
CODE_01C5B4:          LDA.B #$03                          ;; 01C5B4 : A9 03       ;
CODE_01C5B6:          STA RAM_MarioAnimation              ;; 01C5B6 : 85 71       ;
CODE_01C5B8:          LDA.B #$18                          ;; 01C5B8 : A9 18       ;
CODE_01C5BA:          STA.W $1496                         ;; 01C5BA : 8D 96 14    ;
CODE_01C5BD:          LDY.B #$03                          ;; 01C5BD : A0 03       ;
CODE_01C5BF:          LDA.W $17C0,Y                       ;; 01C5BF : B9 C0 17    ;
CODE_01C5C2:          BEQ CODE_01C5D4                     ;; 01C5C2 : F0 10       ;
CODE_01C5C4:          DEY                                 ;; 01C5C4 : 88          ;
CODE_01C5C5:          BPL CODE_01C5BF                     ;; 01C5C5 : 10 F8       ;
CODE_01C5C7:          DEC.W $1863                         ;; 01C5C7 : CE 63 18    ;
CODE_01C5CA:          BPL CODE_01C5D1                     ;; 01C5CA : 10 05       ;
CODE_01C5CC:          LDA.B #$03                          ;; 01C5CC : A9 03       ;
CODE_01C5CE:          STA.W $1863                         ;; 01C5CE : 8D 63 18    ;
CODE_01C5D1:          LDY.W $1863                         ;; 01C5D1 : AC 63 18    ;
CODE_01C5D4:          LDA.B #$81                          ;; 01C5D4 : A9 81       ;
CODE_01C5D6:          STA.W $17C0,Y                       ;; 01C5D6 : 99 C0 17    ;
CODE_01C5D9:          LDA.B #$1B                          ;; 01C5D9 : A9 1B       ;
CODE_01C5DB:          STA.W $17CC,Y                       ;; 01C5DB : 99 CC 17    ;
CODE_01C5DE:          LDA RAM_MarioYPos                   ;; 01C5DE : A5 96       ;
CODE_01C5E0:          CLC                                 ;; 01C5E0 : 18          ;
CODE_01C5E1:          ADC.B #$08                          ;; 01C5E1 : 69 08       ;
CODE_01C5E3:          STA.W $17C4,Y                       ;; 01C5E3 : 99 C4 17    ;
CODE_01C5E6:          LDA RAM_MarioXPos                   ;; 01C5E6 : A5 94       ;
CODE_01C5E8:          STA.W $17C8,Y                       ;; 01C5E8 : 99 C8 17    ;
Return01C5EB:         RTL                                 ;; ?QPWZ? : 6B          ; Return 
                                                          ;;                      ;
GiveMarioFire:        LDA.B #$20                          ;; ?QPWZ? : A9 20       ;
CODE_01C5EE:          STA.W RAM_FlashingPalTimer          ;; 01C5EE : 8D 9B 14    ;
CODE_01C5F1:          STA RAM_SpritesLocked               ;; 01C5F1 : 85 9D       ;
CODE_01C5F3:          LDA.B #$04                          ;; 01C5F3 : A9 04       ;
CODE_01C5F5:          STA RAM_MarioAnimation              ;; 01C5F5 : 85 71       ;
CODE_01C5F7:          LDA.B #$03                          ;; 01C5F7 : A9 03       ;
CODE_01C5F9:          STA RAM_MarioPowerUp                ;; 01C5F9 : 85 19       ;
CODE_01C5FB:          JMP.W CODE_01C56F                   ;; 01C5FB : 4C 6F C5    ;
                                                          ;;                      ;
GiveMario1Up:         LDA.B #$08                          ;; ?QPWZ? : A9 08       ;
CODE_01C600:          CLC                                 ;; 01C600 : 18          ;
CODE_01C601:          ADC.W $1594,X                       ;; 01C601 : 7D 94 15    ;
CODE_01C604:          JSL.L GivePoints                    ;; 01C604 : 22 E5 AC 02 ;
Return01C608:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
PowerUpTiles:         .db $24,$26,$48,$0E,$24,$00,$00,$00 ;; ?QPWZ?               ;
                      .db $00,$E4,$E8,$24,$EC             ;; ?QPWZ?               ;
                                                          ;;                      ;
StarPalValues:        .db $00,$04,$08,$04                 ;; ?QPWZ?               ;
                                                          ;;                      ;
CODE_01C61A:          JSR.W GetDrawInfoBnk1               ;; 01C61A : 20 65 A3    ;
CODE_01C61D:          STZ $0A                             ;; 01C61D : 64 0A       ;
CODE_01C61F:          LDA.W $140F                         ;; 01C61F : AD 0F 14    ;
CODE_01C622:          BNE CODE_01C636                     ;; 01C622 : D0 12       ;
CODE_01C624:          LDA.W $0D9B                         ;; 01C624 : AD 9B 0D    ;
CODE_01C627:          CMP.B #$C1                          ;; 01C627 : C9 C1       ;
CODE_01C629:          BEQ CODE_01C636                     ;; 01C629 : F0 0B       ;
CODE_01C62B:          BIT.W $0D9B                         ;; 01C62B : 2C 9B 0D    ;
CODE_01C62E:          BVC CODE_01C636                     ;; 01C62E : 50 06       ;
CODE_01C630:          LDA.B #$D8                          ;; 01C630 : A9 D8       ;
CODE_01C632:          STA.W RAM_SprOAMIndex,X             ;; 01C632 : 9D EA 15    ;
CODE_01C635:          TAY                                 ;; 01C635 : A8          ;
CODE_01C636:          LDA RAM_SpriteNum,X                 ;; 01C636 : B5 9E       ;
CODE_01C638:          CMP.B #$21                          ;; 01C638 : C9 21       ; sprite coin 
CODE_01C63A:          BNE PowerUpGfxRt                    ;; 01C63A : D0 65       ;
CODE_01C63C:          JSL.L CoinSprGfx                    ;; 01C63C : 22 41 C6 01 ;
Return01C640:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CoinSprGfx:           JSR.W CoinSprGfxSub                 ;; ?QPWZ? : 20 45 C6    ;
Return01C644:         RTL                                 ;; ?QPWZ? : 6B          ; Return 
                                                          ;;                      ;
CoinSprGfxSub:        JSR.W GetDrawInfoBnk1               ;; ?QPWZ? : 20 65 A3    ;
CODE_01C648:          LDA $00                             ;; 01C648 : A5 00       ;
CODE_01C64A:          STA.W OAM_DispX,Y                   ;; 01C64A : 99 00 03    ;
CODE_01C64D:          LDA $01                             ;; 01C64D : A5 01       ;
CODE_01C64F:          STA.W OAM_DispY,Y                   ;; 01C64F : 99 01 03    ;
CODE_01C652:          LDA.B #$E8                          ;; 01C652 : A9 E8       ;
CODE_01C654:          STA.W OAM_Tile,Y                    ;; 01C654 : 99 02 03    ;
CODE_01C657:          LDA.W RAM_SpritePal,X               ;; 01C657 : BD F6 15    ;
CODE_01C65A:          ORA $64                             ;; 01C65A : 05 64       ;
CODE_01C65C:          STA.W OAM_Prop,Y                    ;; 01C65C : 99 03 03    ;
CODE_01C65F:          TXA                                 ;; 01C65F : 8A          ;
CODE_01C660:          CLC                                 ;; 01C660 : 18          ;
CODE_01C661:          ADC RAM_FrameCounterB               ;; 01C661 : 65 14       ;
CODE_01C663:          LSR                                 ;; 01C663 : 4A          ;
CODE_01C664:          LSR                                 ;; 01C664 : 4A          ;
CODE_01C665:          AND.B #$03                          ;; 01C665 : 29 03       ;
CODE_01C667:          BNE CODE_01C670                     ;; 01C667 : D0 07       ;
CODE_01C669:          LDY.B #$02                          ;; 01C669 : A0 02       ;
CODE_01C66B:          BRA CODE_01C69A                     ;; 01C66B : 80 2D       ;
                                                          ;;                      ;
                                                          ;;                      ;
MovingCoinTiles:      .db $EA,$FA,$EA                     ;; ?QPWZ?               ;
                                                          ;;                      ;
CODE_01C670:          PHX                                 ;; 01C670 : DA          ;
CODE_01C671:          TAX                                 ;; 01C671 : AA          ;
CODE_01C672:          LDA $00                             ;; 01C672 : A5 00       ;
CODE_01C674:          CLC                                 ;; 01C674 : 18          ;
CODE_01C675:          ADC.B #$04                          ;; 01C675 : 69 04       ;
CODE_01C677:          STA.W OAM_DispX,Y                   ;; 01C677 : 99 00 03    ;
CODE_01C67A:          STA.W OAM_Tile2DispX,Y              ;; 01C67A : 99 04 03    ;
CODE_01C67D:          LDA $01                             ;; 01C67D : A5 01       ;
CODE_01C67F:          CLC                                 ;; 01C67F : 18          ;
CODE_01C680:          ADC.B #$08                          ;; 01C680 : 69 08       ;
CODE_01C682:          STA.W OAM_Tile2DispY,Y              ;; 01C682 : 99 05 03    ;
CODE_01C685:          LDA.L MovingCoinTiles-1,X           ;; 01C685 : BF 6C C6 01 ;
CODE_01C689:          STA.W OAM_Tile,Y                    ;; 01C689 : 99 02 03    ;
CODE_01C68C:          STA.W OAM_Tile2,Y                   ;; 01C68C : 99 06 03    ;
CODE_01C68F:          LDA.W OAM_Prop,Y                    ;; 01C68F : B9 03 03    ;
CODE_01C692:          ORA.B #$80                          ;; 01C692 : 09 80       ;
CODE_01C694:          STA.W OAM_Tile2Prop,Y               ;; 01C694 : 99 07 03    ;
CODE_01C697:          PLX                                 ;; 01C697 : FA          ;
CODE_01C698:          LDY.B #$00                          ;; 01C698 : A0 00       ;
CODE_01C69A:          LDA.B #$01                          ;; 01C69A : A9 01       ;
CODE_01C69C:          JSL.L FinishOAMWrite                ;; 01C69C : 22 B3 B7 01 ;
Return01C6A0:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
PowerUpGfxRt:         CMP.B #$76                          ;; ?QPWZ? : C9 76       ; \ Setup flashing palette for star 
CODE_01C6A3:          BNE NoFlashingPal                   ;; 01C6A3 : D0 0D       ;  | 
CODE_01C6A5:          LDA RAM_FrameCounter                ;; 01C6A5 : A5 13       ;  |  
CODE_01C6A7:          LSR                                 ;; 01C6A7 : 4A          ;  | 
CODE_01C6A8:          AND.B #$03                          ;; 01C6A8 : 29 03       ;  | 
CODE_01C6AA:          PHY                                 ;; 01C6AA : 5A          ;  | 
CODE_01C6AB:          TAY                                 ;; 01C6AB : A8          ;  | 
CODE_01C6AC:          LDA.W StarPalValues,Y               ;; 01C6AC : B9 16 C6    ;  | 
CODE_01C6AF:          PLY                                 ;; 01C6AF : 7A          ;  | 
CODE_01C6B0:          STA $0A                             ;; 01C6B0 : 85 0A       ; / $0A contains palette info, will be applied later 
NoFlashingPal:        LDA $00                             ;; ?QPWZ? : A5 00       ; \ Set tile x position 
CODE_01C6B4:          STA.W OAM_DispX,Y                   ;; 01C6B4 : 99 00 03    ; / 
CODE_01C6B7:          LDA $01                             ;; 01C6B7 : A5 01       ; \ Set tile y position 
CODE_01C6B9:          DEC A                               ;; 01C6B9 : 3A          ;  | 
CODE_01C6BA:          STA.W OAM_DispY,Y                   ;; 01C6BA : 99 01 03    ; / 
CODE_01C6BD:          LDA.W RAM_SpriteDir,X               ;; 01C6BD : BD 7C 15    ; \ Flip flower/cape if 157C,x is set 
CODE_01C6C0:          LSR                                 ;; 01C6C0 : 4A          ;  | 
CODE_01C6C1:          LDA.B #$00                          ;; 01C6C1 : A9 00       ;  | 
CODE_01C6C3:          BCS CODE_01C6C7                     ;; 01C6C3 : B0 02       ;  | 
CODE_01C6C5:          ORA.B #$40                          ;; 01C6C5 : 09 40       ; / 
CODE_01C6C7:          ORA $64                             ;; 01C6C7 : 05 64       ; \ Add in level priority information 
CODE_01C6C9:          ORA.W RAM_SpritePal,X               ;; 01C6C9 : 1D F6 15    ;  | Add in palette/gfx page 
CODE_01C6CC:          EOR $0A                             ;; 01C6CC : 45 0A       ;  | Adjust palette for star 
CODE_01C6CE:          STA.W OAM_Prop,Y                    ;; 01C6CE : 99 03 03    ; / Set property byte 
CODE_01C6D1:          LDA RAM_SpriteNum,X                 ;; 01C6D1 : B5 9E       ; \ Set powerup tile 
CODE_01C6D3:          SEC                                 ;; 01C6D3 : 38          ;  | 
CODE_01C6D4:          SBC.B #$74                          ;; 01C6D4 : E9 74       ;  | 
CODE_01C6D6:          TAX                                 ;; 01C6D6 : AA          ;  | X = Sprite number - #$74 
CODE_01C6D7:          LDA.W PowerUpTiles,X                ;; 01C6D7 : BD 09 C6    ;  | 
CODE_01C6DA:          STA.W OAM_Tile,Y                    ;; 01C6DA : 99 02 03    ; / 
CODE_01C6DD:          LDX.W $15E9                         ;; 01C6DD : AE E9 15    ; X = sprite index 
CODE_01C6E0:          LDA.B #$00                          ;; 01C6E0 : A9 00       ;
CODE_01C6E2:          JSR.W CODE_01B37E                   ;; 01C6E2 : 20 7E B3    ;
Return01C6E5:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
DATA_01C6E6:          .db $02,$FE                         ;; 01C6E6               ;
                                                          ;;                      ;
DATA_01C6E8:          .db $20,$E0                         ;; 01C6E8               ;
                                                          ;;                      ;
DATA_01C6EA:          .db $0A,$F6,$08                     ;; 01C6EA               ;
                                                          ;;                      ;
Feather:              LDA RAM_SpritesLocked               ;; ?QPWZ? : A5 9D       ; \ Branch if sprites locked 
CODE_01C6EF:          BNE CODE_01C744                     ;; 01C6EF : D0 53       ; / 
CODE_01C6F1:          LDA RAM_SpriteState,X               ;; 01C6F1 : B5 C2       ;
CODE_01C6F3:          BEQ CODE_01C701                     ;; 01C6F3 : F0 0C       ;
CODE_01C6F5:          JSR.W CODE_019140                   ;; 01C6F5 : 20 40 91    ;
CODE_01C6F8:          LDA.W RAM_SprObjStatus,X            ;; 01C6F8 : BD 88 15    ;
CODE_01C6FB:          BNE CODE_01C6FF                     ;; 01C6FB : D0 02       ;
ADDR_01C6FD:          STZ RAM_SpriteState,X               ;; 01C6FD : 74 C2       ;
CODE_01C6FF:          BRA CODE_01C741                     ;; 01C6FF : 80 40       ;
                                                          ;;                      ;
CODE_01C701:          LDA.W $14C8,X                       ;; 01C701 : BD C8 14    ;
CODE_01C704:          CMP.B #$0C                          ;; 01C704 : C9 0C       ;
CODE_01C706:          BEQ CODE_01C744                     ;; 01C706 : F0 3C       ;
CODE_01C708:          LDA.W RAM_DisableInter,X            ;; 01C708 : BD 4C 15    ;
CODE_01C70B:          BEQ CODE_01C715                     ;; 01C70B : F0 08       ;
CODE_01C70D:          JSR.W SubSprYPosNoGrvty             ;; 01C70D : 20 D8 AB    ;
CODE_01C710:          INC RAM_SpriteSpeedY,X              ;; 01C710 : F6 AA       ;
CODE_01C712:          JMP.W CODE_01C741                   ;; 01C712 : 4C 41 C7    ;
                                                          ;;                      ;
CODE_01C715:          LDA.W $1528,X                       ;; 01C715 : BD 28 15    ;
CODE_01C718:          AND.B #$01                          ;; 01C718 : 29 01       ;
CODE_01C71A:          TAY                                 ;; 01C71A : A8          ;
CODE_01C71B:          LDA RAM_SpriteSpeedX,X              ;; 01C71B : B5 B6       ;
CODE_01C71D:          CLC                                 ;; 01C71D : 18          ;
CODE_01C71E:          ADC.W DATA_01C6E6,Y                 ;; 01C71E : 79 E6 C6    ;
CODE_01C721:          STA RAM_SpriteSpeedX,X              ;; 01C721 : 95 B6       ;
CODE_01C723:          CMP.W DATA_01C6E8,Y                 ;; 01C723 : D9 E8 C6    ;
CODE_01C726:          BNE CODE_01C72B                     ;; 01C726 : D0 03       ;
CODE_01C728:          INC.W $1528,X                       ;; 01C728 : FE 28 15    ;
CODE_01C72B:          LDA RAM_SpriteSpeedX,X              ;; 01C72B : B5 B6       ;
CODE_01C72D:          BPL CODE_01C730                     ;; 01C72D : 10 01       ;
CODE_01C72F:          INY                                 ;; 01C72F : C8          ;
CODE_01C730:          LDA.W DATA_01C6EA,Y                 ;; 01C730 : B9 EA C6    ;
CODE_01C733:          CLC                                 ;; 01C733 : 18          ;
CODE_01C734:          ADC.B #$06                          ;; 01C734 : 69 06       ;
CODE_01C736:          STA RAM_SpriteSpeedY,X              ;; 01C736 : 95 AA       ;
CODE_01C738:          JSR.W SubOffscreen0Bnk1             ;; 01C738 : 20 31 AC    ;
CODE_01C73B:          JSR.W SubSprXPosNoGrvty             ;; 01C73B : 20 CC AB    ;
CODE_01C73E:          JSR.W SubSprYPosNoGrvty             ;; 01C73E : 20 D8 AB    ;
CODE_01C741:          JSR.W UpdateDirection               ;; 01C741 : 20 15 9A    ;
CODE_01C744:          JSR.W CODE_01C4AC                   ;; 01C744 : 20 AC C4    ;
CODE_01C747:          JMP.W CODE_01C61A                   ;; 01C747 : 4C 1A C6    ;
                                                          ;;                      ;
InitBrwnChainPlat:    LDA.B #$80                          ;; ?QPWZ? : A9 80       ;
CODE_01C74C:          STA.W $151C,X                       ;; 01C74C : 9D 1C 15    ;
CODE_01C74F:          LDA.B #$01                          ;; 01C74F : A9 01       ;
CODE_01C751:          STA.W $1528,X                       ;; 01C751 : 9D 28 15    ;
CODE_01C754:          LDA RAM_SpriteXLo,X                 ;; 01C754 : B5 E4       ;
CODE_01C756:          CLC                                 ;; 01C756 : 18          ;
CODE_01C757:          ADC.B #$78                          ;; 01C757 : 69 78       ;
CODE_01C759:          STA RAM_SpriteXLo,X                 ;; 01C759 : 95 E4       ;
CODE_01C75B:          LDA.W RAM_SpriteXHi,X               ;; 01C75B : BD E0 14    ;
CODE_01C75E:          ADC.B #$00                          ;; 01C75E : 69 00       ;
CODE_01C760:          STA.W RAM_SpriteXHi,X               ;; 01C760 : 9D E0 14    ;
CODE_01C763:          LDA RAM_SpriteYLo,X                 ;; 01C763 : B5 D8       ;
CODE_01C765:          CLC                                 ;; 01C765 : 18          ;
CODE_01C766:          ADC.B #$68                          ;; 01C766 : 69 68       ;
CODE_01C768:          STA RAM_SpriteYLo,X                 ;; 01C768 : 95 D8       ;
CODE_01C76A:          LDA.W RAM_SpriteYHi,X               ;; 01C76A : BD D4 14    ;
CODE_01C76D:          ADC.B #$00                          ;; 01C76D : 69 00       ;
CODE_01C76F:          STA.W RAM_SpriteYHi,X               ;; 01C76F : 9D D4 14    ;
Return01C772:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
BrownChainedPlat:     JSR.W SubOffscreen2Bnk1             ;; ?QPWZ? : 20 27 AC    ;
CODE_01C776:          LDA RAM_SpritesLocked               ;; 01C776 : A5 9D       ; \ Branch if sprites locked 
CODE_01C778:          BNE CODE_01C795                     ;; 01C778 : D0 1B       ; / 
CODE_01C77A:          LDA RAM_FrameCounter                ;; 01C77A : A5 13       ;
CODE_01C77C:          AND.B #$03                          ;; 01C77C : 29 03       ;
CODE_01C77E:          ORA.W $1602,X                       ;; 01C77E : 1D 02 16    ;
CODE_01C781:          BNE CODE_01C795                     ;; 01C781 : D0 12       ;
CODE_01C783:          LDA.B #$01                          ;; 01C783 : A9 01       ;
CODE_01C785:          LDY.W $1504,X                       ;; 01C785 : BC 04 15    ;
CODE_01C788:          BEQ CODE_01C795                     ;; 01C788 : F0 0B       ;
CODE_01C78A:          BMI CODE_01C78E                     ;; 01C78A : 30 02       ;
CODE_01C78C:          LDA.B #$FF                          ;; 01C78C : A9 FF       ;
CODE_01C78E:          CLC                                 ;; 01C78E : 18          ;
CODE_01C78F:          ADC.W $1504,X                       ;; 01C78F : 7D 04 15    ;
CODE_01C792:          STA.W $1504,X                       ;; 01C792 : 9D 04 15    ;
CODE_01C795:          LDA.W $151C,X                       ;; 01C795 : BD 1C 15    ;
CODE_01C798:          PHA                                 ;; 01C798 : 48          ;
CODE_01C799:          LDA.W $1528,X                       ;; 01C799 : BD 28 15    ;
CODE_01C79C:          PHA                                 ;; 01C79C : 48          ;
CODE_01C79D:          LDA.B #$00                          ;; 01C79D : A9 00       ;
CODE_01C79F:          SEC                                 ;; 01C79F : 38          ;
CODE_01C7A0:          SBC.W $151C,X                       ;; 01C7A0 : FD 1C 15    ;
CODE_01C7A3:          STA.W $151C,X                       ;; 01C7A3 : 9D 1C 15    ;
CODE_01C7A6:          LDA.B #$02                          ;; 01C7A6 : A9 02       ;
CODE_01C7A8:          SBC.W $1528,X                       ;; 01C7A8 : FD 28 15    ;
CODE_01C7AB:          AND.B #$01                          ;; 01C7AB : 29 01       ;
CODE_01C7AD:          STA.W $1528,X                       ;; 01C7AD : 9D 28 15    ;
CODE_01C7B0:          JSR.W CODE_01CACB                   ;; 01C7B0 : 20 CB CA    ;
CODE_01C7B3:          JSR.W CODE_01CB20                   ;; 01C7B3 : 20 20 CB    ;
CODE_01C7B6:          JSR.W CODE_01CB53                   ;; 01C7B6 : 20 53 CB    ;
CODE_01C7B9:          PLA                                 ;; 01C7B9 : 68          ;
CODE_01C7BA:          STA.W $1528,X                       ;; 01C7BA : 9D 28 15    ;
CODE_01C7BD:          PLA                                 ;; 01C7BD : 68          ;
CODE_01C7BE:          STA.W $151C,X                       ;; 01C7BE : 9D 1C 15    ;
CODE_01C7C1:          LDA.W $14B8                         ;; 01C7C1 : AD B8 14    ;
CODE_01C7C4:          PHA                                 ;; 01C7C4 : 48          ;
CODE_01C7C5:          SEC                                 ;; 01C7C5 : 38          ;
CODE_01C7C6:          SBC RAM_SpriteState,X               ;; 01C7C6 : F5 C2       ;
CODE_01C7C8:          STA.W $1491                         ;; 01C7C8 : 8D 91 14    ;
CODE_01C7CB:          PLA                                 ;; 01C7CB : 68          ;
CODE_01C7CC:          STA RAM_SpriteState,X               ;; 01C7CC : 95 C2       ;
CODE_01C7CE:          LDY.W RAM_SprOAMIndex,X             ;; 01C7CE : BC EA 15    ; Y = Index into sprite OAM 
CODE_01C7D1:          LDA.W $14BA                         ;; 01C7D1 : AD BA 14    ;
CODE_01C7D4:          SEC                                 ;; 01C7D4 : 38          ;
CODE_01C7D5:          SBC RAM_ScreenBndryYLo              ;; 01C7D5 : E5 1C       ;
CODE_01C7D7:          SEC                                 ;; 01C7D7 : 38          ;
CODE_01C7D8:          SBC.B #$08                          ;; 01C7D8 : E9 08       ;
CODE_01C7DA:          STA.W OAM_DispY,Y                   ;; 01C7DA : 99 01 03    ;
CODE_01C7DD:          LDA.W $14B8                         ;; 01C7DD : AD B8 14    ;
CODE_01C7E0:          SEC                                 ;; 01C7E0 : 38          ;
CODE_01C7E1:          SBC RAM_ScreenBndryXLo              ;; 01C7E1 : E5 1A       ;
CODE_01C7E3:          SEC                                 ;; 01C7E3 : 38          ;
CODE_01C7E4:          SBC.B #$08                          ;; 01C7E4 : E9 08       ;
CODE_01C7E6:          STA.W OAM_DispX,Y                   ;; 01C7E6 : 99 00 03    ;
CODE_01C7E9:          LDA.B #$A2                          ;; 01C7E9 : A9 A2       ;
CODE_01C7EB:          STA.W OAM_Tile,Y                    ;; 01C7EB : 99 02 03    ;
CODE_01C7EE:          LDA.B #$31                          ;; 01C7EE : A9 31       ;
CODE_01C7F0:          STA.W OAM_Prop,Y                    ;; 01C7F0 : 99 03 03    ;
CODE_01C7F3:          LDY.B #$00                          ;; 01C7F3 : A0 00       ;
CODE_01C7F5:          LDA.W $14BA                         ;; 01C7F5 : AD BA 14    ;
CODE_01C7F8:          SEC                                 ;; 01C7F8 : 38          ;
CODE_01C7F9:          SBC.W $14B2                         ;; 01C7F9 : ED B2 14    ;
CODE_01C7FC:          BPL CODE_01C802                     ;; 01C7FC : 10 04       ;
CODE_01C7FE:          EOR.B #$FF                          ;; 01C7FE : 49 FF       ;
CODE_01C800:          INC A                               ;; 01C800 : 1A          ;
CODE_01C801:          INY                                 ;; 01C801 : C8          ;
CODE_01C802:          STY $00                             ;; 01C802 : 84 00       ;
CODE_01C804:          STA.W $4205                         ;; 01C804 : 8D 05 42    ; Dividend (High-Byte)
CODE_01C807:          STZ.W $4204                         ;; 01C807 : 9C 04 42    ; Dividend (Low Byte)
CODE_01C80A:          LDA.B #$05                          ;; 01C80A : A9 05       ;
CODE_01C80C:          STA.W $4206                         ;; 01C80C : 8D 06 42    ; Divisor B
CODE_01C80F:          JSR.W DoNothing                     ;; 01C80F : 20 94 CC    ;
CODE_01C812:          LDA.W $4214                         ;; 01C812 : AD 14 42    ; Quotient of Divide Result (Low Byte)
CODE_01C815:          STA $02                             ;; 01C815 : 85 02       ;
CODE_01C817:          STA $06                             ;; 01C817 : 85 06       ;
CODE_01C819:          LDA.W $4215                         ;; 01C819 : AD 15 42    ; Quotient of Divide Result (High Byte)
CODE_01C81C:          STA $03                             ;; 01C81C : 85 03       ;
CODE_01C81E:          STA $07                             ;; 01C81E : 85 07       ;
CODE_01C820:          LDY.B #$00                          ;; 01C820 : A0 00       ;
CODE_01C822:          LDA.W $14B8                         ;; 01C822 : AD B8 14    ;
CODE_01C825:          SEC                                 ;; 01C825 : 38          ;
CODE_01C826:          SBC.W $14B0                         ;; 01C826 : ED B0 14    ;
CODE_01C829:          BPL CODE_01C82F                     ;; 01C829 : 10 04       ;
CODE_01C82B:          EOR.B #$FF                          ;; 01C82B : 49 FF       ;
CODE_01C82D:          INC A                               ;; 01C82D : 1A          ;
CODE_01C82E:          INY                                 ;; 01C82E : C8          ;
CODE_01C82F:          STY $01                             ;; 01C82F : 84 01       ;
CODE_01C831:          STA.W $4205                         ;; 01C831 : 8D 05 42    ; Dividend (High-Byte)
CODE_01C834:          STZ.W $4204                         ;; 01C834 : 9C 04 42    ; Dividend (Low Byte)
CODE_01C837:          LDA.B #$05                          ;; 01C837 : A9 05       ;
CODE_01C839:          STA.W $4206                         ;; 01C839 : 8D 06 42    ; Divisor B
CODE_01C83C:          JSR.W DoNothing                     ;; 01C83C : 20 94 CC    ;
CODE_01C83F:          LDA.W $4214                         ;; 01C83F : AD 14 42    ; Quotient of Divide Result (Low Byte)
CODE_01C842:          STA $04                             ;; 01C842 : 85 04       ;
CODE_01C844:          STA $08                             ;; 01C844 : 85 08       ;
CODE_01C846:          LDA.W $4215                         ;; 01C846 : AD 15 42    ; Quotient of Divide Result (High Byte)
CODE_01C849:          STA $05                             ;; 01C849 : 85 05       ;
CODE_01C84B:          STA $09                             ;; 01C84B : 85 09       ;
CODE_01C84D:          LDY.W RAM_SprOAMIndex,X             ;; 01C84D : BC EA 15    ; Y = Index into sprite OAM 
CODE_01C850:          INY                                 ;; 01C850 : C8          ;
CODE_01C851:          INY                                 ;; 01C851 : C8          ;
CODE_01C852:          INY                                 ;; 01C852 : C8          ;
CODE_01C853:          INY                                 ;; 01C853 : C8          ;
CODE_01C854:          LDA.W $14B2                         ;; 01C854 : AD B2 14    ;
CODE_01C857:          SEC                                 ;; 01C857 : 38          ;
CODE_01C858:          SBC RAM_ScreenBndryYLo              ;; 01C858 : E5 1C       ;
CODE_01C85A:          SEC                                 ;; 01C85A : 38          ;
CODE_01C85B:          SBC.B #$08                          ;; 01C85B : E9 08       ;
CODE_01C85D:          STA $0A                             ;; 01C85D : 85 0A       ;
CODE_01C85F:          STA.W OAM_DispY,Y                   ;; 01C85F : 99 01 03    ;
CODE_01C862:          LDA.W $14B0                         ;; 01C862 : AD B0 14    ;
CODE_01C865:          SEC                                 ;; 01C865 : 38          ;
CODE_01C866:          SBC RAM_ScreenBndryXLo              ;; 01C866 : E5 1A       ;
CODE_01C868:          SEC                                 ;; 01C868 : 38          ;
CODE_01C869:          SBC.B #$08                          ;; 01C869 : E9 08       ;
CODE_01C86B:          STA $0B                             ;; 01C86B : 85 0B       ;
CODE_01C86D:          STA.W OAM_DispX,Y                   ;; 01C86D : 99 00 03    ;
CODE_01C870:          LDA.B #$A2                          ;; 01C870 : A9 A2       ;
CODE_01C872:          STA.W OAM_Tile,Y                    ;; 01C872 : 99 02 03    ;
CODE_01C875:          LDA.B #$31                          ;; 01C875 : A9 31       ;
CODE_01C877:          STA.W OAM_Prop,Y                    ;; 01C877 : 99 03 03    ;
CODE_01C87A:          LDX.B #$03                          ;; 01C87A : A2 03       ;
CODE_01C87C:          INY                                 ;; 01C87C : C8          ;
CODE_01C87D:          INY                                 ;; 01C87D : C8          ;
CODE_01C87E:          INY                                 ;; 01C87E : C8          ;
CODE_01C87F:          INY                                 ;; 01C87F : C8          ;
CODE_01C880:          LDA $00                             ;; 01C880 : A5 00       ;
CODE_01C882:          BNE CODE_01C88E                     ;; 01C882 : D0 0A       ;
CODE_01C884:          LDA $0A                             ;; 01C884 : A5 0A       ;
CODE_01C886:          CLC                                 ;; 01C886 : 18          ;
CODE_01C887:          ADC $07                             ;; 01C887 : 65 07       ;
CODE_01C889:          STA.W OAM_DispY,Y                   ;; 01C889 : 99 01 03    ;
CODE_01C88C:          BRA CODE_01C896                     ;; 01C88C : 80 08       ;
                                                          ;;                      ;
CODE_01C88E:          LDA $0A                             ;; 01C88E : A5 0A       ;
CODE_01C890:          SEC                                 ;; 01C890 : 38          ;
CODE_01C891:          SBC $07                             ;; 01C891 : E5 07       ;
CODE_01C893:          STA.W OAM_DispY,Y                   ;; 01C893 : 99 01 03    ;
CODE_01C896:          LDA $06                             ;; 01C896 : A5 06       ;
CODE_01C898:          CLC                                 ;; 01C898 : 18          ;
CODE_01C899:          ADC $02                             ;; 01C899 : 65 02       ;
CODE_01C89B:          STA $06                             ;; 01C89B : 85 06       ;
CODE_01C89D:          LDA $07                             ;; 01C89D : A5 07       ;
CODE_01C89F:          ADC $03                             ;; 01C89F : 65 03       ;
CODE_01C8A1:          STA $07                             ;; 01C8A1 : 85 07       ;
CODE_01C8A3:          LDA $01                             ;; 01C8A3 : A5 01       ;
CODE_01C8A5:          BNE CODE_01C8B1                     ;; 01C8A5 : D0 0A       ;
CODE_01C8A7:          LDA $0B                             ;; 01C8A7 : A5 0B       ;
CODE_01C8A9:          CLC                                 ;; 01C8A9 : 18          ;
CODE_01C8AA:          ADC $09                             ;; 01C8AA : 65 09       ;
CODE_01C8AC:          STA.W OAM_DispX,Y                   ;; 01C8AC : 99 00 03    ;
CODE_01C8AF:          BRA CODE_01C8B9                     ;; 01C8AF : 80 08       ;
                                                          ;;                      ;
CODE_01C8B1:          LDA $0B                             ;; 01C8B1 : A5 0B       ;
CODE_01C8B3:          SEC                                 ;; 01C8B3 : 38          ;
CODE_01C8B4:          SBC $09                             ;; 01C8B4 : E5 09       ;
CODE_01C8B6:          STA.W OAM_DispX,Y                   ;; 01C8B6 : 99 00 03    ;
CODE_01C8B9:          LDA $08                             ;; 01C8B9 : A5 08       ;
CODE_01C8BB:          CLC                                 ;; 01C8BB : 18          ;
CODE_01C8BC:          ADC $04                             ;; 01C8BC : 65 04       ;
CODE_01C8BE:          STA $08                             ;; 01C8BE : 85 08       ;
CODE_01C8C0:          LDA $09                             ;; 01C8C0 : A5 09       ;
CODE_01C8C2:          ADC $05                             ;; 01C8C2 : 65 05       ;
CODE_01C8C4:          STA $09                             ;; 01C8C4 : 85 09       ;
CODE_01C8C6:          LDA.B #$A2                          ;; 01C8C6 : A9 A2       ;
CODE_01C8C8:          STA.W OAM_Tile,Y                    ;; 01C8C8 : 99 02 03    ;
CODE_01C8CB:          LDA.B #$31                          ;; 01C8CB : A9 31       ;
CODE_01C8CD:          STA.W OAM_Prop,Y                    ;; 01C8CD : 99 03 03    ;
CODE_01C8D0:          DEX                                 ;; 01C8D0 : CA          ;
CODE_01C8D1:          BPL CODE_01C87C                     ;; 01C8D1 : 10 A9       ;
CODE_01C8D3:          LDX.B #$03                          ;; 01C8D3 : A2 03       ;
CODE_01C8D5:          STX $02                             ;; 01C8D5 : 86 02       ;
CODE_01C8D7:          INY                                 ;; 01C8D7 : C8          ;
CODE_01C8D8:          INY                                 ;; 01C8D8 : C8          ;
CODE_01C8D9:          INY                                 ;; 01C8D9 : C8          ;
CODE_01C8DA:          INY                                 ;; 01C8DA : C8          ;
CODE_01C8DB:          LDA.W $14BA                         ;; 01C8DB : AD BA 14    ;
CODE_01C8DE:          SEC                                 ;; 01C8DE : 38          ;
CODE_01C8DF:          SBC RAM_ScreenBndryYLo              ;; 01C8DF : E5 1C       ;
CODE_01C8E1:          SEC                                 ;; 01C8E1 : 38          ;
CODE_01C8E2:          SBC.B #$10                          ;; 01C8E2 : E9 10       ;
CODE_01C8E4:          STA.W OAM_DispY,Y                   ;; 01C8E4 : 99 01 03    ;
CODE_01C8E7:          LDA.W $14B8                         ;; 01C8E7 : AD B8 14    ;
CODE_01C8EA:          SEC                                 ;; 01C8EA : 38          ;
CODE_01C8EB:          SBC RAM_ScreenBndryXLo              ;; 01C8EB : E5 1A       ;
CODE_01C8ED:          CLC                                 ;; 01C8ED : 18          ;
CODE_01C8EE:          ADC.W DATA_01C9B7,X                 ;; 01C8EE : 7D B7 C9    ;
CODE_01C8F1:          STA.W OAM_DispX,Y                   ;; 01C8F1 : 99 00 03    ;
CODE_01C8F4:          LDA.W BrwnChainPlatTiles,X          ;; 01C8F4 : BD BB C9    ;
CODE_01C8F7:          STA.W OAM_Tile,Y                    ;; 01C8F7 : 99 02 03    ;
CODE_01C8FA:          LDA.B #$31                          ;; 01C8FA : A9 31       ;
CODE_01C8FC:          STA.W OAM_Prop,Y                    ;; 01C8FC : 99 03 03    ;
CODE_01C8FF:          DEX                                 ;; 01C8FF : CA          ;
CODE_01C900:          BPL CODE_01C8D5                     ;; 01C900 : 10 D3       ;
CODE_01C902:          LDX.W $15E9                         ;; 01C902 : AE E9 15    ; X = Sprite index 
CODE_01C905:          LDA.B #$09                          ;; 01C905 : A9 09       ;
CODE_01C907:          STA $08                             ;; 01C907 : 85 08       ;
CODE_01C909:          LDA.W $14B2                         ;; 01C909 : AD B2 14    ;
CODE_01C90C:          SEC                                 ;; 01C90C : 38          ;
CODE_01C90D:          SBC.B #$08                          ;; 01C90D : E9 08       ;
CODE_01C90F:          STA $00                             ;; 01C90F : 85 00       ;
CODE_01C911:          LDA.W $14B3                         ;; 01C911 : AD B3 14    ;
CODE_01C914:          SBC.B #$00                          ;; 01C914 : E9 00       ;
CODE_01C916:          STA $01                             ;; 01C916 : 85 01       ;
CODE_01C918:          LDA.W $14B0                         ;; 01C918 : AD B0 14    ;
CODE_01C91B:          SEC                                 ;; 01C91B : 38          ;
CODE_01C91C:          SBC.B #$08                          ;; 01C91C : E9 08       ;
CODE_01C91E:          STA $02                             ;; 01C91E : 85 02       ;
CODE_01C920:          LDA.W $14B1                         ;; 01C920 : AD B1 14    ;
CODE_01C923:          SBC.B #$00                          ;; 01C923 : E9 00       ;
CODE_01C925:          STA $03                             ;; 01C925 : 85 03       ;
CODE_01C927:          LDY.W RAM_SprOAMIndex,X             ;; 01C927 : BC EA 15    ; Y = Index into sprite OAM 
CODE_01C92A:          LDA.W OAM_Tile2DispY,Y              ;; 01C92A : B9 05 03    ;
CODE_01C92D:          STA $06                             ;; 01C92D : 85 06       ;
CODE_01C92F:          LDA.W OAM_Tile2DispX,Y              ;; 01C92F : B9 04 03    ;
CODE_01C932:          STA $07                             ;; 01C932 : 85 07       ;
CODE_01C934:          TYA                                 ;; 01C934 : 98          ;
CODE_01C935:          LSR                                 ;; 01C935 : 4A          ;
CODE_01C936:          LSR                                 ;; 01C936 : 4A          ;
CODE_01C937:          TAX                                 ;; 01C937 : AA          ;
CODE_01C938:          LDA.B #$02                          ;; 01C938 : A9 02       ;
CODE_01C93A:          STA.W OAM_TileSize,X                ;; 01C93A : 9D 60 04    ;
CODE_01C93D:          LDX.B #$00                          ;; 01C93D : A2 00       ;
CODE_01C93F:          LDA.W OAM_DispX,Y                   ;; 01C93F : B9 00 03    ;
CODE_01C942:          SEC                                 ;; 01C942 : 38          ;
CODE_01C943:          SBC $07                             ;; 01C943 : E5 07       ;
CODE_01C945:          BPL CODE_01C948                     ;; 01C945 : 10 01       ;
CODE_01C947:          DEX                                 ;; 01C947 : CA          ;
CODE_01C948:          CLC                                 ;; 01C948 : 18          ;
CODE_01C949:          ADC $02                             ;; 01C949 : 65 02       ;
CODE_01C94B:          STA $04                             ;; 01C94B : 85 04       ;
CODE_01C94D:          TXA                                 ;; 01C94D : 8A          ;
CODE_01C94E:          ADC $03                             ;; 01C94E : 65 03       ;
CODE_01C950:          STA $05                             ;; 01C950 : 85 05       ;
CODE_01C952:          JSR.W CODE_01B844                   ;; 01C952 : 20 44 B8    ;
CODE_01C955:          BCC CODE_01C960                     ;; 01C955 : 90 09       ;
CODE_01C957:          TYA                                 ;; 01C957 : 98          ;
CODE_01C958:          LSR                                 ;; 01C958 : 4A          ;
CODE_01C959:          LSR                                 ;; 01C959 : 4A          ;
CODE_01C95A:          TAX                                 ;; 01C95A : AA          ;
CODE_01C95B:          LDA.B #$03                          ;; 01C95B : A9 03       ;
CODE_01C95D:          STA.W OAM_TileSize,X                ;; 01C95D : 9D 60 04    ;
CODE_01C960:          LDX.B #$00                          ;; 01C960 : A2 00       ;
CODE_01C962:          LDA.W OAM_DispY,Y                   ;; 01C962 : B9 01 03    ;
CODE_01C965:          SEC                                 ;; 01C965 : 38          ;
CODE_01C966:          SBC $06                             ;; 01C966 : E5 06       ;
CODE_01C968:          BPL CODE_01C96B                     ;; 01C968 : 10 01       ;
CODE_01C96A:          DEX                                 ;; 01C96A : CA          ;
CODE_01C96B:          CLC                                 ;; 01C96B : 18          ;
CODE_01C96C:          ADC $00                             ;; 01C96C : 65 00       ;
CODE_01C96E:          STA $09                             ;; 01C96E : 85 09       ;
CODE_01C970:          TXA                                 ;; 01C970 : 8A          ;
CODE_01C971:          ADC $01                             ;; 01C971 : 65 01       ;
CODE_01C973:          STA $0A                             ;; 01C973 : 85 0A       ;
CODE_01C975:          JSR.W CODE_01C9BF                   ;; 01C975 : 20 BF C9    ;
CODE_01C978:          BCC CODE_01C97F                     ;; 01C978 : 90 05       ;
CODE_01C97A:          LDA.B #$F0                          ;; 01C97A : A9 F0       ;
CODE_01C97C:          STA.W OAM_DispY,Y                   ;; 01C97C : 99 01 03    ;
CODE_01C97F:          LDA $08                             ;; 01C97F : A5 08       ;
CODE_01C981:          CMP.B #$09                          ;; 01C981 : C9 09       ;
CODE_01C983:          BNE CODE_01C999                     ;; 01C983 : D0 14       ;
CODE_01C985:          LDA $04                             ;; 01C985 : A5 04       ;
CODE_01C987:          STA.W $14B8                         ;; 01C987 : 8D B8 14    ;
CODE_01C98A:          LDA $05                             ;; 01C98A : A5 05       ;
CODE_01C98C:          STA.W $14B9                         ;; 01C98C : 8D B9 14    ;
CODE_01C98F:          LDA $09                             ;; 01C98F : A5 09       ;
CODE_01C991:          STA.W $14BA                         ;; 01C991 : 8D BA 14    ;
CODE_01C994:          LDA $0A                             ;; 01C994 : A5 0A       ;
CODE_01C996:          STA.W $14BB                         ;; 01C996 : 8D BB 14    ;
CODE_01C999:          INY                                 ;; 01C999 : C8          ;
CODE_01C99A:          INY                                 ;; 01C99A : C8          ;
CODE_01C99B:          INY                                 ;; 01C99B : C8          ;
CODE_01C99C:          INY                                 ;; 01C99C : C8          ;
CODE_01C99D:          DEC $08                             ;; 01C99D : C6 08       ;
CODE_01C99F:          BPL CODE_01C934                     ;; 01C99F : 10 93       ;
CODE_01C9A1:          LDX.W $15E9                         ;; 01C9A1 : AE E9 15    ; X = Sprite index 
CODE_01C9A4:          LDY.W RAM_SprOAMIndex,X             ;; 01C9A4 : BC EA 15    ; Y = Index into sprite OAM 
CODE_01C9A7:          LDA.B #$F0                          ;; 01C9A7 : A9 F0       ;
CODE_01C9A9:          STA.W OAM_Tile2DispY,Y              ;; 01C9A9 : 99 05 03    ;
CODE_01C9AC:          LDA RAM_SpritesLocked               ;; 01C9AC : A5 9D       ; \ Branch if sprites locked 
CODE_01C9AE:          BNE Return01C9B6                    ;; 01C9AE : D0 06       ; / 
CODE_01C9B0:          JSR.W CODE_01CCF0                   ;; 01C9B0 : 20 F0 CC    ;
CODE_01C9B3:          JMP.W CODE_01C9EC                   ;; 01C9B3 : 4C EC C9    ;
                                                          ;;                      ;
Return01C9B6:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
DATA_01C9B7:          .db $E0,$F0,$00,$10                 ;; 01C9B7               ;
                                                          ;;                      ;
BrwnChainPlatTiles:   .db $60,$61,$61,$62                 ;; ?QPWZ?               ;
                                                          ;;                      ;
CODE_01C9BF:          REP #$20                            ;; 01C9BF : C2 20       ; Accum (16 bit) 
CODE_01C9C1:          LDA $09                             ;; 01C9C1 : A5 09       ;
CODE_01C9C3:          PHA                                 ;; 01C9C3 : 48          ;
CODE_01C9C4:          CLC                                 ;; 01C9C4 : 18          ;
CODE_01C9C5:          ADC.W #$0010                        ;; 01C9C5 : 69 10 00    ;
CODE_01C9C8:          STA $09                             ;; 01C9C8 : 85 09       ;
CODE_01C9CA:          SEC                                 ;; 01C9CA : 38          ;
CODE_01C9CB:          SBC RAM_ScreenBndryYLo              ;; 01C9CB : E5 1C       ;
CODE_01C9CD:          CMP.W #$0100                        ;; 01C9CD : C9 00 01    ;
CODE_01C9D0:          PLA                                 ;; 01C9D0 : 68          ;
CODE_01C9D1:          STA $09                             ;; 01C9D1 : 85 09       ;
CODE_01C9D3:          SEP #$20                            ;; 01C9D3 : E2 20       ; Accum (8 bit) 
Return01C9D5:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
DATA_01C9D6:          .db $01,$FF                         ;; 01C9D6               ;
                                                          ;;                      ;
DATA_01C9D8:          .db $40,$C0                         ;; 01C9D8               ;
                                                          ;;                      ;
CODE_01C9DA:          LDA.W $160E,X                       ;; 01C9DA : BD 0E 16    ;
CODE_01C9DD:          BEQ Return01C9EB                    ;; 01C9DD : F0 0C       ;
CODE_01C9DF:          STZ.W $160E,X                       ;; 01C9DF : 9E 0E 16    ;
CODE_01C9E2:          PHX                                 ;; 01C9E2 : DA          ;
CODE_01C9E3:          JSL.L CODE_00E2BD                   ;; 01C9E3 : 22 BD E2 00 ;
CODE_01C9E7:          PLX                                 ;; 01C9E7 : FA          ;
CODE_01C9E8:          STX.W $15E9                         ;; 01C9E8 : 8E E9 15    ;
Return01C9EB:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01C9EC:          LDA.W $14B9                         ;; 01C9EC : AD B9 14    ;
CODE_01C9EF:          XBA                                 ;; 01C9EF : EB          ;
CODE_01C9F0:          LDA.W $14B8                         ;; 01C9F0 : AD B8 14    ;
CODE_01C9F3:          REP #$20                            ;; 01C9F3 : C2 20       ; Accum (16 bit) 
CODE_01C9F5:          SEC                                 ;; 01C9F5 : 38          ;
CODE_01C9F6:          SBC RAM_ScreenBndryXLo              ;; 01C9F6 : E5 1A       ;
CODE_01C9F8:          CLC                                 ;; 01C9F8 : 18          ;
CODE_01C9F9:          ADC.W #$0010                        ;; 01C9F9 : 69 10 00    ;
CODE_01C9FC:          CMP.W #$0120                        ;; 01C9FC : C9 20 01    ;
CODE_01C9FF:          SEP #$20                            ;; 01C9FF : E2 20       ; Accum (8 bit) 
CODE_01CA01:          ROL                                 ;; 01CA01 : 2A          ;
CODE_01CA02:          AND.B #$01                          ;; 01CA02 : 29 01       ;
CODE_01CA04:          ORA RAM_SpritesLocked               ;; 01CA04 : 05 9D       ;
CODE_01CA06:          STA.W $15C4,X                       ;; 01CA06 : 9D C4 15    ;
CODE_01CA09:          BNE Return01C9D5                    ;; 01CA09 : D0 CA       ;
CODE_01CA0B:          JSR.W CODE_01CA9C                   ;; 01CA0B : 20 9C CA    ;
CODE_01CA0E:          STZ.W $1602,X                       ;; 01CA0E : 9E 02 16    ;
CODE_01CA11:          BCC CODE_01C9DA                     ;; 01CA11 : 90 C7       ;
CODE_01CA13:          LDA.B #$01                          ;; 01CA13 : A9 01       ;
CODE_01CA15:          STA.W $160E,X                       ;; 01CA15 : 9D 0E 16    ;
CODE_01CA18:          LDA.W $14BA                         ;; 01CA18 : AD BA 14    ;
CODE_01CA1B:          SEC                                 ;; 01CA1B : 38          ;
CODE_01CA1C:          SBC RAM_ScreenBndryYLo              ;; 01CA1C : E5 1C       ;
CODE_01CA1E:          STA $03                             ;; 01CA1E : 85 03       ;
CODE_01CA20:          SEC                                 ;; 01CA20 : 38          ;
CODE_01CA21:          SBC.B #$08                          ;; 01CA21 : E9 08       ;
CODE_01CA23:          STA $0E                             ;; 01CA23 : 85 0E       ;
CODE_01CA25:          LDA $80                             ;; 01CA25 : A5 80       ;
CODE_01CA27:          CLC                                 ;; 01CA27 : 18          ;
CODE_01CA28:          ADC.B #$18                          ;; 01CA28 : 69 18       ;
CODE_01CA2A:          CMP $0E                             ;; 01CA2A : C5 0E       ;
CODE_01CA2C:          BCS Return01CA9B                    ;; 01CA2C : B0 6D       ;
CODE_01CA2E:          LDA RAM_MarioSpeedY                 ;; 01CA2E : A5 7D       ;
CODE_01CA30:          BMI CODE_01C9E2                     ;; 01CA30 : 30 B0       ;
CODE_01CA32:          STZ RAM_MarioSpeedY                 ;; 01CA32 : 64 7D       ;
CODE_01CA34:          LDA.B #$03                          ;; 01CA34 : A9 03       ;
CODE_01CA36:          STA.W $1471                         ;; 01CA36 : 8D 71 14    ;
CODE_01CA39:          STA.W $1602,X                       ;; 01CA39 : 9D 02 16    ;
CODE_01CA3C:          LDA.B #$28                          ;; 01CA3C : A9 28       ;
CODE_01CA3E:          LDY.W RAM_OnYoshi                   ;; 01CA3E : AC 7A 18    ;
CODE_01CA41:          BEQ CODE_01CA45                     ;; 01CA41 : F0 02       ;
CODE_01CA43:          LDA.B #$38                          ;; 01CA43 : A9 38       ;
CODE_01CA45:          STA $0F                             ;; 01CA45 : 85 0F       ;
CODE_01CA47:          LDA.W $14BA                         ;; 01CA47 : AD BA 14    ;
CODE_01CA4A:          SEC                                 ;; 01CA4A : 38          ;
CODE_01CA4B:          SBC $0F                             ;; 01CA4B : E5 0F       ;
CODE_01CA4D:          STA RAM_MarioYPos                   ;; 01CA4D : 85 96       ;
CODE_01CA4F:          LDA.W $14BB                         ;; 01CA4F : AD BB 14    ;
CODE_01CA52:          SBC.B #$00                          ;; 01CA52 : E9 00       ;
CODE_01CA54:          STA RAM_MarioYPosHi                 ;; 01CA54 : 85 97       ;
CODE_01CA56:          LDA RAM_MarioObjStatus              ;; 01CA56 : A5 77       ;
CODE_01CA58:          AND.B #$03                          ;; 01CA58 : 29 03       ;
CODE_01CA5A:          BNE CODE_01CA6E                     ;; 01CA5A : D0 12       ;
CODE_01CA5C:          LDY.B #$00                          ;; 01CA5C : A0 00       ;
CODE_01CA5E:          LDA.W $1491                         ;; 01CA5E : AD 91 14    ;
CODE_01CA61:          BPL CODE_01CA64                     ;; 01CA61 : 10 01       ;
CODE_01CA63:          DEY                                 ;; 01CA63 : 88          ;
CODE_01CA64:          CLC                                 ;; 01CA64 : 18          ;
CODE_01CA65:          ADC RAM_MarioXPos                   ;; 01CA65 : 65 94       ;
CODE_01CA67:          STA RAM_MarioXPos                   ;; 01CA67 : 85 94       ;
CODE_01CA69:          TYA                                 ;; 01CA69 : 98          ;
CODE_01CA6A:          ADC RAM_MarioXPosHi                 ;; 01CA6A : 65 95       ;
CODE_01CA6C:          STA RAM_MarioXPosHi                 ;; 01CA6C : 85 95       ;
CODE_01CA6E:          JSR.W CODE_01C9E2                   ;; 01CA6E : 20 E2 C9    ;
CODE_01CA71:          LDA $16                             ;; 01CA71 : A5 16       ;
CODE_01CA73:          BMI CODE_01CA79                     ;; 01CA73 : 30 04       ;
CODE_01CA75:          LDA.B #$FF                          ;; 01CA75 : A9 FF       ;
CODE_01CA77:          STA $78                             ;; 01CA77 : 85 78       ;
CODE_01CA79:          LDA RAM_FrameCounter                ;; 01CA79 : A5 13       ;
CODE_01CA7B:          LSR                                 ;; 01CA7B : 4A          ;
CODE_01CA7C:          BCC Return01CA9B                    ;; 01CA7C : 90 1D       ;
CODE_01CA7E:          LDA.W $151C,X                       ;; 01CA7E : BD 1C 15    ;
CODE_01CA81:          CLC                                 ;; 01CA81 : 18          ;
CODE_01CA82:          ADC.B #$80                          ;; 01CA82 : 69 80       ;
CODE_01CA84:          LDA.W $1528,X                       ;; 01CA84 : BD 28 15    ;
CODE_01CA87:          ADC.B #$00                          ;; 01CA87 : 69 00       ;
CODE_01CA89:          AND.B #$01                          ;; 01CA89 : 29 01       ;
CODE_01CA8B:          TAY                                 ;; 01CA8B : A8          ;
CODE_01CA8C:          LDA.W $1504,X                       ;; 01CA8C : BD 04 15    ;
CODE_01CA8F:          CMP.W DATA_01C9D8,Y                 ;; 01CA8F : D9 D8 C9    ;
CODE_01CA92:          BEQ Return01CA9B                    ;; 01CA92 : F0 07       ;
CODE_01CA94:          CLC                                 ;; 01CA94 : 18          ;
CODE_01CA95:          ADC.W DATA_01C9D6,Y                 ;; 01CA95 : 79 D6 C9    ;
CODE_01CA98:          STA.W $1504,X                       ;; 01CA98 : 9D 04 15    ;
Return01CA9B:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01CA9C:          LDA.W $14B8                         ;; 01CA9C : AD B8 14    ;
CODE_01CA9F:          SEC                                 ;; 01CA9F : 38          ;
CODE_01CAA0:          SBC.B #$18                          ;; 01CAA0 : E9 18       ;
CODE_01CAA2:          STA $04                             ;; 01CAA2 : 85 04       ;
CODE_01CAA4:          LDA.W $14B9                         ;; 01CAA4 : AD B9 14    ;
CODE_01CAA7:          SBC.B #$00                          ;; 01CAA7 : E9 00       ;
CODE_01CAA9:          STA $0A                             ;; 01CAA9 : 85 0A       ;
CODE_01CAAB:          LDA.B #$40                          ;; 01CAAB : A9 40       ;
CODE_01CAAD:          STA $06                             ;; 01CAAD : 85 06       ;
CODE_01CAAF:          LDA.W $14BA                         ;; 01CAAF : AD BA 14    ;
CODE_01CAB2:          SEC                                 ;; 01CAB2 : 38          ;
CODE_01CAB3:          SBC.B #$0C                          ;; 01CAB3 : E9 0C       ;
CODE_01CAB5:          STA $05                             ;; 01CAB5 : 85 05       ;
CODE_01CAB7:          LDA.W $14BB                         ;; 01CAB7 : AD BB 14    ;
CODE_01CABA:          SBC.B #$00                          ;; 01CABA : E9 00       ;
CODE_01CABC:          STA $0B                             ;; 01CABC : 85 0B       ;
CODE_01CABE:          LDA.B #$13                          ;; 01CABE : A9 13       ;
CODE_01CAC0:          STA $07                             ;; 01CAC0 : 85 07       ;
CODE_01CAC2:          JSL.L GetMarioClipping              ;; 01CAC2 : 22 64 B6 03 ;
CODE_01CAC6:          JSL.L CheckForContact               ;; 01CAC6 : 22 2B B7 03 ;
Return01CACA:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01CACB:          LDA.B #$50                          ;; 01CACB : A9 50       ;
CODE_01CACD:          STA.W $14BC                         ;; 01CACD : 8D BC 14    ;
CODE_01CAD0:          STZ.W $14BF                         ;; 01CAD0 : 9C BF 14    ;
CODE_01CAD3:          STZ.W $14BD                         ;; 01CAD3 : 9C BD 14    ;
CODE_01CAD6:          STZ.W $14C0                         ;; 01CAD6 : 9C C0 14    ;
CODE_01CAD9:          LDA RAM_SpriteXLo,X                 ;; 01CAD9 : B5 E4       ;
CODE_01CADB:          STA.W $14B4                         ;; 01CADB : 8D B4 14    ;
CODE_01CADE:          LDA.W RAM_SpriteXHi,X               ;; 01CADE : BD E0 14    ;
CODE_01CAE1:          STA.W $14B5                         ;; 01CAE1 : 8D B5 14    ;
CODE_01CAE4:          LDA.W $14B4                         ;; 01CAE4 : AD B4 14    ;
CODE_01CAE7:          SEC                                 ;; 01CAE7 : 38          ;
CODE_01CAE8:          SBC.W $14BC                         ;; 01CAE8 : ED BC 14    ;
CODE_01CAEB:          STA.W $14B0                         ;; 01CAEB : 8D B0 14    ;
CODE_01CAEE:          LDA.W $14B5                         ;; 01CAEE : AD B5 14    ;
CODE_01CAF1:          SBC.W $14BD                         ;; 01CAF1 : ED BD 14    ;
CODE_01CAF4:          STA.W $14B1                         ;; 01CAF4 : 8D B1 14    ;
CODE_01CAF7:          LDA RAM_SpriteYLo,X                 ;; 01CAF7 : B5 D8       ;
CODE_01CAF9:          STA.W $14B6                         ;; 01CAF9 : 8D B6 14    ;
CODE_01CAFC:          LDA.W RAM_SpriteYHi,X               ;; 01CAFC : BD D4 14    ;
CODE_01CAFF:          STA.W $14B7                         ;; 01CAFF : 8D B7 14    ;
CODE_01CB02:          LDA.W $14B6                         ;; 01CB02 : AD B6 14    ;
CODE_01CB05:          SEC                                 ;; 01CB05 : 38          ;
CODE_01CB06:          SBC.W $14BF                         ;; 01CB06 : ED BF 14    ;
CODE_01CB09:          STA.W $14B2                         ;; 01CB09 : 8D B2 14    ;
CODE_01CB0C:          LDA.W $14B7                         ;; 01CB0C : AD B7 14    ;
CODE_01CB0F:          SBC.W $14C0                         ;; 01CB0F : ED C0 14    ;
CODE_01CB12:          STA.W $14B3                         ;; 01CB12 : 8D B3 14    ;
CODE_01CB15:          LDA.W $151C,X                       ;; 01CB15 : BD 1C 15    ;
CODE_01CB18:          STA $36                             ;; 01CB18 : 85 36       ;
CODE_01CB1A:          LDA.W $1528,X                       ;; 01CB1A : BD 28 15    ;
CODE_01CB1D:          STA $37                             ;; 01CB1D : 85 37       ;
Return01CB1F:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01CB20:          LDA $37                             ;; 01CB20 : A5 37       ;
CODE_01CB22:          STA.W $1866                         ;; 01CB22 : 8D 66 18    ;
CODE_01CB25:          PHX                                 ;; 01CB25 : DA          ;
CODE_01CB26:          REP #$30                            ;; 01CB26 : C2 30       ; Index (16 bit) Accum (16 bit) 
CODE_01CB28:          LDA $36                             ;; 01CB28 : A5 36       ;
CODE_01CB2A:          ASL                                 ;; 01CB2A : 0A          ;
CODE_01CB2B:          AND.W #$01FF                        ;; 01CB2B : 29 FF 01    ;
CODE_01CB2E:          TAX                                 ;; 01CB2E : AA          ;
CODE_01CB2F:          LDA.L CircleCoords,X                ;; 01CB2F : BF DB F7 07 ;
CODE_01CB33:          STA.W $14C2                         ;; 01CB33 : 8D C2 14    ;
CODE_01CB36:          LDA $36                             ;; 01CB36 : A5 36       ;
CODE_01CB38:          CLC                                 ;; 01CB38 : 18          ;
CODE_01CB39:          ADC.W #$0080                        ;; 01CB39 : 69 80 00    ;
CODE_01CB3C:          STA $00                             ;; 01CB3C : 85 00       ;
CODE_01CB3E:          ASL                                 ;; 01CB3E : 0A          ;
CODE_01CB3F:          AND.W #$01FF                        ;; 01CB3F : 29 FF 01    ;
CODE_01CB42:          TAX                                 ;; 01CB42 : AA          ;
CODE_01CB43:          LDA.L CircleCoords,X                ;; 01CB43 : BF DB F7 07 ;
CODE_01CB47:          STA.W $14C5                         ;; 01CB47 : 8D C5 14    ;
CODE_01CB4A:          SEP #$30                            ;; 01CB4A : E2 30       ; Index (8 bit) Accum (8 bit) 
CODE_01CB4C:          LDA $01                             ;; 01CB4C : A5 01       ;
CODE_01CB4E:          STA.W $1867                         ;; 01CB4E : 8D 67 18    ;
CODE_01CB51:          PLX                                 ;; 01CB51 : FA          ;
Return01CB52:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01CB53:          REP #$20                            ;; 01CB53 : C2 20       ; Accum (16 bit) 
CODE_01CB55:          LDA.W $14C5                         ;; 01CB55 : AD C5 14    ;
CODE_01CB58:          STA $02                             ;; 01CB58 : 85 02       ;
CODE_01CB5A:          LDA.W $14BC                         ;; 01CB5A : AD BC 14    ;
CODE_01CB5D:          STA $00                             ;; 01CB5D : 85 00       ;
CODE_01CB5F:          SEP #$20                            ;; 01CB5F : E2 20       ; Accum (8 bit) 
CODE_01CB61:          JSR.W CODE_01CC28                   ;; 01CB61 : 20 28 CC    ;
CODE_01CB64:          LDA.W $1867                         ;; 01CB64 : AD 67 18    ;
CODE_01CB67:          LSR                                 ;; 01CB67 : 4A          ;
CODE_01CB68:          REP #$20                            ;; 01CB68 : C2 20       ; Accum (16 bit) 
CODE_01CB6A:          LDA $04                             ;; 01CB6A : A5 04       ;
CODE_01CB6C:          BCC CODE_01CB72                     ;; 01CB6C : 90 04       ;
CODE_01CB6E:          EOR.W #$FFFF                        ;; 01CB6E : 49 FF FF    ;
CODE_01CB71:          INC A                               ;; 01CB71 : 1A          ;
CODE_01CB72:          STA $08                             ;; 01CB72 : 85 08       ;
CODE_01CB74:          LDA $06                             ;; 01CB74 : A5 06       ;
CODE_01CB76:          BCC CODE_01CB7C                     ;; 01CB76 : 90 04       ;
CODE_01CB78:          EOR.W #$FFFF                        ;; 01CB78 : 49 FF FF    ;
CODE_01CB7B:          INC A                               ;; 01CB7B : 1A          ;
CODE_01CB7C:          STA $0A                             ;; 01CB7C : 85 0A       ;
CODE_01CB7E:          LDA.W $14C2                         ;; 01CB7E : AD C2 14    ;
CODE_01CB81:          STA $02                             ;; 01CB81 : 85 02       ;
CODE_01CB83:          LDA.W $14BF                         ;; 01CB83 : AD BF 14    ;
CODE_01CB86:          STA $00                             ;; 01CB86 : 85 00       ;
CODE_01CB88:          SEP #$20                            ;; 01CB88 : E2 20       ; Accum (8 bit) 
CODE_01CB8A:          JSR.W CODE_01CC28                   ;; 01CB8A : 20 28 CC    ;
CODE_01CB8D:          LDA.W $1866                         ;; 01CB8D : AD 66 18    ;
CODE_01CB90:          LSR                                 ;; 01CB90 : 4A          ;
CODE_01CB91:          REP #$20                            ;; 01CB91 : C2 20       ; Accum (16 bit) 
CODE_01CB93:          LDA $04                             ;; 01CB93 : A5 04       ;
CODE_01CB95:          BCC CODE_01CB9B                     ;; 01CB95 : 90 04       ;
CODE_01CB97:          EOR.W #$FFFF                        ;; 01CB97 : 49 FF FF    ;
CODE_01CB9A:          INC A                               ;; 01CB9A : 1A          ;
CODE_01CB9B:          STA $04                             ;; 01CB9B : 85 04       ;
CODE_01CB9D:          LDA $06                             ;; 01CB9D : A5 06       ;
CODE_01CB9F:          BCC CODE_01CBA5                     ;; 01CB9F : 90 04       ;
CODE_01CBA1:          EOR.W #$FFFF                        ;; 01CBA1 : 49 FF FF    ;
CODE_01CBA4:          INC A                               ;; 01CBA4 : 1A          ;
CODE_01CBA5:          STA $06                             ;; 01CBA5 : 85 06       ;
CODE_01CBA7:          LDA $04                             ;; 01CBA7 : A5 04       ;
CODE_01CBA9:          CLC                                 ;; 01CBA9 : 18          ;
CODE_01CBAA:          ADC $08                             ;; 01CBAA : 65 08       ;
CODE_01CBAC:          STA $04                             ;; 01CBAC : 85 04       ;
CODE_01CBAE:          LDA $06                             ;; 01CBAE : A5 06       ;
CODE_01CBB0:          ADC $0A                             ;; 01CBB0 : 65 0A       ;
CODE_01CBB2:          STA $06                             ;; 01CBB2 : 85 06       ;
CODE_01CBB4:          LDA $05                             ;; 01CBB4 : A5 05       ;
CODE_01CBB6:          CLC                                 ;; 01CBB6 : 18          ;
CODE_01CBB7:          ADC.W $14B0                         ;; 01CBB7 : 6D B0 14    ;
CODE_01CBBA:          STA.W $14B8                         ;; 01CBBA : 8D B8 14    ;
CODE_01CBBD:          LDA.W $14C5                         ;; 01CBBD : AD C5 14    ;
CODE_01CBC0:          STA $02                             ;; 01CBC0 : 85 02       ;
CODE_01CBC2:          LDA.W $14BF                         ;; 01CBC2 : AD BF 14    ;
CODE_01CBC5:          STA $00                             ;; 01CBC5 : 85 00       ;
CODE_01CBC7:          SEP #$20                            ;; 01CBC7 : E2 20       ; Accum (8 bit) 
CODE_01CBC9:          JSR.W CODE_01CC28                   ;; 01CBC9 : 20 28 CC    ;
CODE_01CBCC:          LDA.W $1867                         ;; 01CBCC : AD 67 18    ;
CODE_01CBCF:          LSR                                 ;; 01CBCF : 4A          ;
CODE_01CBD0:          REP #$20                            ;; 01CBD0 : C2 20       ; Accum (16 bit) 
CODE_01CBD2:          LDA $04                             ;; 01CBD2 : A5 04       ;
CODE_01CBD4:          BCC CODE_01CBDA                     ;; 01CBD4 : 90 04       ;
CODE_01CBD6:          EOR.W #$FFFF                        ;; 01CBD6 : 49 FF FF    ;
CODE_01CBD9:          INC A                               ;; 01CBD9 : 1A          ;
CODE_01CBDA:          STA $08                             ;; 01CBDA : 85 08       ;
CODE_01CBDC:          LDA $06                             ;; 01CBDC : A5 06       ;
CODE_01CBDE:          BCC CODE_01CBE4                     ;; 01CBDE : 90 04       ;
CODE_01CBE0:          EOR.W #$FFFF                        ;; 01CBE0 : 49 FF FF    ;
CODE_01CBE3:          INC A                               ;; 01CBE3 : 1A          ;
CODE_01CBE4:          STA $0A                             ;; 01CBE4 : 85 0A       ;
CODE_01CBE6:          LDA.W $14C2                         ;; 01CBE6 : AD C2 14    ;
CODE_01CBE9:          STA $02                             ;; 01CBE9 : 85 02       ;
CODE_01CBEB:          LDA.W $14BC                         ;; 01CBEB : AD BC 14    ;
CODE_01CBEE:          STA $00                             ;; 01CBEE : 85 00       ;
CODE_01CBF0:          SEP #$20                            ;; 01CBF0 : E2 20       ; Accum (8 bit) 
CODE_01CBF2:          JSR.W CODE_01CC28                   ;; 01CBF2 : 20 28 CC    ;
CODE_01CBF5:          LDA.W $1866                         ;; 01CBF5 : AD 66 18    ;
CODE_01CBF8:          LSR                                 ;; 01CBF8 : 4A          ;
CODE_01CBF9:          REP #$20                            ;; 01CBF9 : C2 20       ; Accum (16 bit) 
CODE_01CBFB:          LDA $04                             ;; 01CBFB : A5 04       ;
CODE_01CBFD:          BCC CODE_01CC03                     ;; 01CBFD : 90 04       ;
CODE_01CBFF:          EOR.W #$FFFF                        ;; 01CBFF : 49 FF FF    ;
CODE_01CC02:          INC A                               ;; 01CC02 : 1A          ;
CODE_01CC03:          STA $04                             ;; 01CC03 : 85 04       ;
CODE_01CC05:          LDA $06                             ;; 01CC05 : A5 06       ;
CODE_01CC07:          BCC CODE_01CC0D                     ;; 01CC07 : 90 04       ;
CODE_01CC09:          EOR.W #$FFFF                        ;; 01CC09 : 49 FF FF    ;
CODE_01CC0C:          INC A                               ;; 01CC0C : 1A          ;
CODE_01CC0D:          STA $06                             ;; 01CC0D : 85 06       ;
CODE_01CC0F:          LDA $04                             ;; 01CC0F : A5 04       ;
CODE_01CC11:          SEC                                 ;; 01CC11 : 38          ;
CODE_01CC12:          SBC $08                             ;; 01CC12 : E5 08       ;
CODE_01CC14:          STA $04                             ;; 01CC14 : 85 04       ;
CODE_01CC16:          LDA $06                             ;; 01CC16 : A5 06       ;
CODE_01CC18:          SBC $0A                             ;; 01CC18 : E5 0A       ;
CODE_01CC1A:          STA $06                             ;; 01CC1A : 85 06       ;
CODE_01CC1C:          LDA.W $14B2                         ;; 01CC1C : AD B2 14    ;
CODE_01CC1F:          SEC                                 ;; 01CC1F : 38          ;
CODE_01CC20:          SBC $05                             ;; 01CC20 : E5 05       ;
CODE_01CC22:          STA.W $14BA                         ;; 01CC22 : 8D BA 14    ;
CODE_01CC25:          SEP #$20                            ;; 01CC25 : E2 20       ; Accum (8 bit) 
Return01CC27:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01CC28:          LDA $00                             ;; 01CC28 : A5 00       ;
CODE_01CC2A:          STA.W $4202                         ;; 01CC2A : 8D 02 42    ; Multiplicand A
CODE_01CC2D:          LDA $02                             ;; 01CC2D : A5 02       ;
CODE_01CC2F:          STA.W $4203                         ;; 01CC2F : 8D 03 42    ; Multplier B
CODE_01CC32:          JSR.W DoNothing                     ;; 01CC32 : 20 94 CC    ;
CODE_01CC35:          LDA.W $4216                         ;; 01CC35 : AD 16 42    ; Product/Remainder Result (Low Byte)
CODE_01CC38:          STA $04                             ;; 01CC38 : 85 04       ;
CODE_01CC3A:          LDA.W $4217                         ;; 01CC3A : AD 17 42    ; Product/Remainder Result (High Byte)
CODE_01CC3D:          STA $05                             ;; 01CC3D : 85 05       ;
CODE_01CC3F:          LDA $00                             ;; 01CC3F : A5 00       ;
CODE_01CC41:          STA.W $4202                         ;; 01CC41 : 8D 02 42    ; Multiplicand A
CODE_01CC44:          LDA $03                             ;; 01CC44 : A5 03       ;
CODE_01CC46:          STA.W $4203                         ;; 01CC46 : 8D 03 42    ; Multplier B
CODE_01CC49:          JSR.W DoNothing                     ;; 01CC49 : 20 94 CC    ;
CODE_01CC4C:          LDA.W $4216                         ;; 01CC4C : AD 16 42    ; Product/Remainder Result (Low Byte)
CODE_01CC4F:          CLC                                 ;; 01CC4F : 18          ;
CODE_01CC50:          ADC $05                             ;; 01CC50 : 65 05       ;
CODE_01CC52:          STA $05                             ;; 01CC52 : 85 05       ;
CODE_01CC54:          LDA.W $4217                         ;; 01CC54 : AD 17 42    ; Product/Remainder Result (High Byte)
CODE_01CC57:          ADC.B #$00                          ;; 01CC57 : 69 00       ;
CODE_01CC59:          STA $06                             ;; 01CC59 : 85 06       ;
CODE_01CC5B:          LDA $01                             ;; 01CC5B : A5 01       ;
CODE_01CC5D:          STA.W $4202                         ;; 01CC5D : 8D 02 42    ; Multiplicand A
CODE_01CC60:          LDA $02                             ;; 01CC60 : A5 02       ;
CODE_01CC62:          STA.W $4203                         ;; 01CC62 : 8D 03 42    ; Multplier B
CODE_01CC65:          JSR.W DoNothing                     ;; 01CC65 : 20 94 CC    ;
CODE_01CC68:          LDA.W $4216                         ;; 01CC68 : AD 16 42    ; Product/Remainder Result (Low Byte)
CODE_01CC6B:          CLC                                 ;; 01CC6B : 18          ;
CODE_01CC6C:          ADC $05                             ;; 01CC6C : 65 05       ;
CODE_01CC6E:          STA $05                             ;; 01CC6E : 85 05       ;
CODE_01CC70:          LDA.W $4217                         ;; 01CC70 : AD 17 42    ; Product/Remainder Result (High Byte)
CODE_01CC73:          ADC $06                             ;; 01CC73 : 65 06       ;
CODE_01CC75:          STA $06                             ;; 01CC75 : 85 06       ;
CODE_01CC77:          LDA $01                             ;; 01CC77 : A5 01       ;
CODE_01CC79:          STA.W $4202                         ;; 01CC79 : 8D 02 42    ; Multiplicand A
CODE_01CC7C:          LDA $03                             ;; 01CC7C : A5 03       ;
CODE_01CC7E:          STA.W $4203                         ;; 01CC7E : 8D 03 42    ; Multplier B
CODE_01CC81:          JSR.W DoNothing                     ;; 01CC81 : 20 94 CC    ;
CODE_01CC84:          LDA.W $4216                         ;; 01CC84 : AD 16 42    ; Product/Remainder Result (Low Byte)
CODE_01CC87:          CLC                                 ;; 01CC87 : 18          ;
CODE_01CC88:          ADC $06                             ;; 01CC88 : 65 06       ;
CODE_01CC8A:          STA $06                             ;; 01CC8A : 85 06       ;
CODE_01CC8C:          LDA.W $4217                         ;; 01CC8C : AD 17 42    ; Product/Remainder Result (High Byte)
CODE_01CC8F:          ADC.B #$00                          ;; 01CC8F : 69 00       ;
CODE_01CC91:          STA $07                             ;; 01CC91 : 85 07       ;
Return01CC93:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
DoNothing:            NOP                                 ;; ?QPWZ? : EA          ; \ Do nothing at all 
CODE_01CC95:          NOP                                 ;; 01CC95 : EA          ;  | 
CODE_01CC96:          NOP                                 ;; 01CC96 : EA          ;  | 
CODE_01CC97:          NOP                                 ;; 01CC97 : EA          ;  | 
CODE_01CC98:          NOP                                 ;; 01CC98 : EA          ;  | 
CODE_01CC99:          NOP                                 ;; 01CC99 : EA          ;  | 
CODE_01CC9A:          NOP                                 ;; 01CC9A : EA          ;  | 
CODE_01CC9B:          NOP                                 ;; 01CC9B : EA          ;  | 
Return01CC9C:         RTS                                 ;; ?QPWZ? : 60          ; / 
                                                          ;;                      ;
CODE_01CC9D:          LDA.W $14B5                         ;; 01CC9D : AD B5 14    ;
CODE_01CCA0:          ORA.W $14B7                         ;; 01CCA0 : 0D B7 14    ;
CODE_01CCA3:          BNE CODE_01CCC5                     ;; 01CCA3 : D0 20       ;
CODE_01CCA5:          JSR.W CODE_01CCC7                   ;; 01CCA5 : 20 C7 CC    ;
CODE_01CCA8:          JSR.W CODE_01CB20                   ;; 01CCA8 : 20 20 CB    ;
CODE_01CCAB:          JSR.W CODE_01CB53                   ;; 01CCAB : 20 53 CB    ;
CODE_01CCAE:          LDA.W $14BA                         ;; 01CCAE : AD BA 14    ;
CODE_01CCB1:          AND.B #$F0                          ;; 01CCB1 : 29 F0       ;
CODE_01CCB3:          STA $00                             ;; 01CCB3 : 85 00       ;
CODE_01CCB5:          LDA.W $14B8                         ;; 01CCB5 : AD B8 14    ;
CODE_01CCB8:          LSR                                 ;; 01CCB8 : 4A          ;
CODE_01CCB9:          LSR                                 ;; 01CCB9 : 4A          ;
CODE_01CCBA:          LSR                                 ;; 01CCBA : 4A          ;
CODE_01CCBB:          LSR                                 ;; 01CCBB : 4A          ;
CODE_01CCBC:          ORA $00                             ;; 01CCBC : 05 00       ;
CODE_01CCBE:          TAY                                 ;; 01CCBE : A8          ;
CODE_01CCBF:          LDA.W $0AF6,Y                       ;; 01CCBF : B9 F6 0A    ;
CODE_01CCC2:          CMP.B #$15                          ;; 01CCC2 : C9 15       ;
Return01CCC4:         RTL                                 ;; ?QPWZ? : 6B          ; Return 
                                                          ;;                      ;
CODE_01CCC5:          CLC                                 ;; 01CCC5 : 18          ;
Return01CCC6:         RTL                                 ;; ?QPWZ? : 6B          ; Return 
                                                          ;;                      ;
CODE_01CCC7:          REP #$20                            ;; 01CCC7 : C2 20       ; Accum (16 bit) 
CODE_01CCC9:          LDA $2A                             ;; 01CCC9 : A5 2A       ;
CODE_01CCCB:          STA.W $14B0                         ;; 01CCCB : 8D B0 14    ;
CODE_01CCCE:          LDA $2C                             ;; 01CCCE : A5 2C       ;
CODE_01CCD0:          STA.W $14B2                         ;; 01CCD0 : 8D B2 14    ;
CODE_01CCD3:          LDA.W $14B4                         ;; 01CCD3 : AD B4 14    ;
CODE_01CCD6:          SEC                                 ;; 01CCD6 : 38          ;
CODE_01CCD7:          SBC.W $14B0                         ;; 01CCD7 : ED B0 14    ;
CODE_01CCDA:          STA.W $14BC                         ;; 01CCDA : 8D BC 14    ;
CODE_01CCDD:          LDA.W $14B6                         ;; 01CCDD : AD B6 14    ;
CODE_01CCE0:          SEC                                 ;; 01CCE0 : 38          ;
CODE_01CCE1:          SBC.W $14B2                         ;; 01CCE1 : ED B2 14    ;
CODE_01CCE4:          STA.W $14BF                         ;; 01CCE4 : 8D BF 14    ;
CODE_01CCE7:          SEP #$20                            ;; 01CCE7 : E2 20       ; Accum (8 bit) 
Return01CCE9:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
Return01CCEA:         RTS                                 ;; ?QPWZ? : 60          ;
                                                          ;;                      ;
Return01CCEB:         RTS                                 ;; ?QPWZ? : 60          ;
                                                          ;;                      ;
CODE_01CCEC:          EOR.B #$FF                          ;; 01CCEC : 49 FF       ;
CODE_01CCEE:          INC A                               ;; 01CCEE : 1A          ;
Return01CCEF:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01CCF0:          LDA.W $1504,X                       ;; 01CCF0 : BD 04 15    ;
CODE_01CCF3:          ASL                                 ;; 01CCF3 : 0A          ;
CODE_01CCF4:          ASL                                 ;; 01CCF4 : 0A          ;
CODE_01CCF5:          ASL                                 ;; 01CCF5 : 0A          ;
CODE_01CCF6:          ASL                                 ;; 01CCF6 : 0A          ;
CODE_01CCF7:          CLC                                 ;; 01CCF7 : 18          ;
CODE_01CCF8:          ADC.W $1510,X                       ;; 01CCF8 : 7D 10 15    ;
CODE_01CCFB:          STA.W $1510,X                       ;; 01CCFB : 9D 10 15    ;
CODE_01CCFE:          PHP                                 ;; 01CCFE : 08          ;
CODE_01CCFF:          LDY.B #$00                          ;; 01CCFF : A0 00       ;
CODE_01CD01:          LDA.W $1504,X                       ;; 01CD01 : BD 04 15    ;
CODE_01CD04:          LSR                                 ;; 01CD04 : 4A          ;
CODE_01CD05:          LSR                                 ;; 01CD05 : 4A          ;
CODE_01CD06:          LSR                                 ;; 01CD06 : 4A          ;
CODE_01CD07:          LSR                                 ;; 01CD07 : 4A          ;
CODE_01CD08:          CMP.B #$08                          ;; 01CD08 : C9 08       ;
CODE_01CD0A:          BCC CODE_01CD0F                     ;; 01CD0A : 90 03       ;
CODE_01CD0C:          ORA.B #$F0                          ;; 01CD0C : 09 F0       ;
CODE_01CD0E:          DEY                                 ;; 01CD0E : 88          ;
CODE_01CD0F:          PLP                                 ;; 01CD0F : 28          ;
CODE_01CD10:          ADC.W $151C,X                       ;; 01CD10 : 7D 1C 15    ;
CODE_01CD13:          STA.W $151C,X                       ;; 01CD13 : 9D 1C 15    ;
CODE_01CD16:          TYA                                 ;; 01CD16 : 98          ;
CODE_01CD17:          ADC.W $1528,X                       ;; 01CD17 : 7D 28 15    ;
CODE_01CD1A:          STA.W $1528,X                       ;; 01CD1A : 9D 28 15    ;
Return01CD1D:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
DATA_01CD1E:          .db $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF ;; 01CD1E               ;
                      .db $FF,$FF,$FF,$FF                 ;; ?QPWZ?               ;
                                                          ;;                      ;
PipeKoopaKids:        JSL.L CODE_03CC09                   ;; ?QPWZ? : 22 09 CC 03 ;
Return01CD2E:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
InitKoopaKid:         LDA RAM_SpriteYLo,X                 ;; ?QPWZ? : B5 D8       ;
CODE_01CD31:          LSR                                 ;; 01CD31 : 4A          ;
CODE_01CD32:          LSR                                 ;; 01CD32 : 4A          ;
CODE_01CD33:          LSR                                 ;; 01CD33 : 4A          ;
CODE_01CD34:          LSR                                 ;; 01CD34 : 4A          ;
CODE_01CD35:          STA RAM_SpriteState,X               ;; 01CD35 : 95 C2       ;
CODE_01CD37:          CMP.B #$05                          ;; 01CD37 : C9 05       ;
CODE_01CD39:          BCC CODE_01CD4E                     ;; 01CD39 : 90 13       ;
CODE_01CD3B:          LDA.B #$78                          ;; 01CD3B : A9 78       ;
CODE_01CD3D:          STA RAM_SpriteXLo,X                 ;; 01CD3D : 95 E4       ;
CODE_01CD3F:          LDA.B #$40                          ;; 01CD3F : A9 40       ;
CODE_01CD41:          STA RAM_SpriteYLo,X                 ;; 01CD41 : 95 D8       ;
CODE_01CD43:          LDA.B #$01                          ;; 01CD43 : A9 01       ;
CODE_01CD45:          STA.W RAM_SpriteYHi,X               ;; 01CD45 : 9D D4 14    ;
CODE_01CD48:          LDA.B #$80                          ;; 01CD48 : A9 80       ;
CODE_01CD4A:          STA.W $1540,X                       ;; 01CD4A : 9D 40 15    ;
Return01CD4D:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01CD4E:          LDY.B #$90                          ;; 01CD4E : A0 90       ;
CODE_01CD50:          STY RAM_SpriteYLo,X                 ;; 01CD50 : 94 D8       ;
CODE_01CD52:          CMP.B #$03                          ;; 01CD52 : C9 03       ;
CODE_01CD54:          BCC CODE_01CD5E                     ;; 01CD54 : 90 08       ;
CODE_01CD56:          JSL.L CODE_00FCF5                   ;; 01CD56 : 22 F5 FC 00 ;
CODE_01CD5A:          JSR.W FaceMario                     ;; 01CD5A : 20 7C 85    ;
Return01CD5D:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01CD5E:          LDA.B #$01                          ;; 01CD5E : A9 01       ;
CODE_01CD60:          STA.W RAM_SpriteDir,X               ;; 01CD60 : 9D 7C 15    ;
CODE_01CD63:          LDA.B #$20                          ;; 01CD63 : A9 20       ;
CODE_01CD65:          STA $38                             ;; 01CD65 : 85 38       ;
CODE_01CD67:          STA $39                             ;; 01CD67 : 85 39       ;
CODE_01CD69:          JSL.L CODE_03DD7D                   ;; 01CD69 : 22 7D DD 03 ;
CODE_01CD6D:          LDY RAM_SpriteState,X               ;; 01CD6D : B4 C2       ;
CODE_01CD6F:          LDA.W DATA_01CD92,Y                 ;; 01CD6F : B9 92 CD    ;
CODE_01CD72:          STA.W $187B,X                       ;; 01CD72 : 9D 7B 18    ;
CODE_01CD75:          CMP.B #$01                          ;; 01CD75 : C9 01       ;
CODE_01CD77:          BEQ CODE_01CD87                     ;; 01CD77 : F0 0E       ;
CODE_01CD79:          CMP.B #$00                          ;; 01CD79 : C9 00       ;
CODE_01CD7B:          BNE CODE_01CD81                     ;; 01CD7B : D0 04       ;
CODE_01CD7D:          LDA.B #$70                          ;; 01CD7D : A9 70       ;
CODE_01CD7F:          STA RAM_SpriteXLo,X                 ;; 01CD7F : 95 E4       ;
CODE_01CD81:          LDA.B #$01                          ;; 01CD81 : A9 01       ;
CODE_01CD83:          STA.W RAM_SpriteXHi,X               ;; 01CD83 : 9D E0 14    ;
Return01CD86:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01CD87:          LDA.B #$26                          ;; 01CD87 : A9 26       ;
CODE_01CD89:          STA.W $1534,X                       ;; 01CD89 : 9D 34 15    ;
CODE_01CD8C:          LDA.B #$D8                          ;; 01CD8C : A9 D8       ;
CODE_01CD8E:          STA.W $160E,X                       ;; 01CD8E : 9D 0E 16    ;
Return01CD91:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
DATA_01CD92:          .db $01,$01,$00,$02,$02,$03,$03     ;; 01CD92               ;
                                                          ;;                      ;
DATA_01CD99:          .db $00,$09,$12                     ;; 01CD99               ;
                                                          ;;                      ;
DATA_01CD9C:          .db $00,$01,$02,$03,$04,$05,$06,$07 ;; 01CD9C               ;
                      .db $08                             ;; ?QPWZ?               ;
                                                          ;;                      ;
DATA_01CDA5:          .db $00,$80                         ;; 01CDA5               ;
                                                          ;;                      ;
CODE_01CDA7:          JSR.W GetDrawInfoBnk1               ;; 01CDA7 : 20 65 A3    ;
Return01CDAA:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
WallKoopaKids:        STZ.W $13FB                         ;; ?QPWZ? : 9C FB 13    ;
CODE_01CDAE:          LDA.W $1602,X                       ;; 01CDAE : BD 02 16    ;
CODE_01CDB1:          CMP.B #$1B                          ;; 01CDB1 : C9 1B       ;
CODE_01CDB3:          BCS CODE_01CDD5                     ;; 01CDB3 : B0 20       ;
CODE_01CDB5:          LDA.W $15AC,X                       ;; 01CDB5 : BD AC 15    ;
CODE_01CDB8:          CMP.B #$08                          ;; 01CDB8 : C9 08       ;
CODE_01CDBA:          LDY.W RAM_SpriteDir,X               ;; 01CDBA : BC 7C 15    ;
CODE_01CDBD:          LDA.W DATA_01CDA5,Y                 ;; 01CDBD : B9 A5 CD    ;
CODE_01CDC0:          BCS CODE_01CDC4                     ;; 01CDC0 : B0 02       ;
CODE_01CDC2:          EOR.B #$80                          ;; 01CDC2 : 49 80       ;
CODE_01CDC4:          STA $00                             ;; 01CDC4 : 85 00       ;
CODE_01CDC6:          LDY RAM_SpriteState,X               ;; 01CDC6 : B4 C2       ;
CODE_01CDC8:          LDA.W DATA_01CD99,Y                 ;; 01CDC8 : B9 99 CD    ;
CODE_01CDCB:          LDY.W $1602,X                       ;; 01CDCB : BC 02 16    ;
CODE_01CDCE:          CLC                                 ;; 01CDCE : 18          ;
CODE_01CDCF:          ADC.W DATA_01CD9C,Y                 ;; 01CDCF : 79 9C CD    ;
CODE_01CDD2:          CLC                                 ;; 01CDD2 : 18          ;
CODE_01CDD3:          ADC $00                             ;; 01CDD3 : 65 00       ;
CODE_01CDD5:          STA.W $1BA2                         ;; 01CDD5 : 8D A2 1B    ;
CODE_01CDD8:          JSL.L CODE_03DEDF                   ;; 01CDD8 : 22 DF DE 03 ;
CODE_01CDDC:          JSR.W CODE_01CDA7                   ;; 01CDDC : 20 A7 CD    ;
CODE_01CDDF:          LDA RAM_SpritesLocked               ;; 01CDDF : A5 9D       ; \ Branch if sprites locked 
CODE_01CDE1:          BNE Return01CE3D                    ;; 01CDE1 : D0 5A       ; / 
CODE_01CDE3:          JSR.W CODE_01D2A8                   ;; 01CDE3 : 20 A8 D2    ;
CODE_01CDE6:          JSR.W CODE_01D3B1                   ;; 01CDE6 : 20 B1 D3    ;
CODE_01CDE9:          LDA.W $187B,X                       ;; 01CDE9 : BD 7B 18    ;
CODE_01CDEC:          CMP.B #$01                          ;; 01CDEC : C9 01       ;
CODE_01CDEE:          BEQ CODE_01CE0B                     ;; 01CDEE : F0 1B       ;
CODE_01CDF0:          LDA.W $163E,X                       ;; 01CDF0 : BD 3E 16    ;
CODE_01CDF3:          BNE CODE_01CE0B                     ;; 01CDF3 : D0 16       ;
CODE_01CDF5:          LDA.W RAM_SpriteDir,X               ;; 01CDF5 : BD 7C 15    ;
CODE_01CDF8:          PHA                                 ;; 01CDF8 : 48          ;
CODE_01CDF9:          JSR.W SubHorizPos                   ;; 01CDF9 : 20 30 AD    ;
CODE_01CDFC:          TYA                                 ;; 01CDFC : 98          ;
CODE_01CDFD:          STA.W RAM_SpriteDir,X               ;; 01CDFD : 9D 7C 15    ;
CODE_01CE00:          PLA                                 ;; 01CE00 : 68          ;
CODE_01CE01:          CMP.W RAM_SpriteDir,X               ;; 01CE01 : DD 7C 15    ;
CODE_01CE04:          BEQ CODE_01CE0B                     ;; 01CE04 : F0 05       ;
CODE_01CE06:          LDA.B #$10                          ;; 01CE06 : A9 10       ; \ Set turning timer 
CODE_01CE08:          STA.W $15AC,X                       ;; 01CE08 : 9D AC 15    ; / 
CODE_01CE0B:          LDA.W $151C,X                       ;; 01CE0B : BD 1C 15    ;
CODE_01CE0E:          JSL.L ExecutePtr                    ;; 01CE0E : 22 DF 86 00 ;
                                                          ;;                      ;
MortonPtrs1:          .dw CODE_01CE1E                     ;; ?QPWZ? : 1E CE       ;
                      .dw CODE_01CE3E                     ;; ?QPWZ? : 3E CE       ;
                      .dw CODE_01CE5F                     ;; ?QPWZ? : 5F CE       ;
                      .dw CODE_01CF7D                     ;; ?QPWZ? : 7D CF       ;
                      .dw CODE_01CFE0                     ;; ?QPWZ? : E0 CF       ;
                      .dw CODE_01D043                     ;; ?QPWZ? : 43 D0       ;
                                                          ;;                      ;
CODE_01CE1E:          LDA.W $187B,X                       ;; 01CE1E : BD 7B 18    ;
CODE_01CE21:          CMP.B #$01                          ;; 01CE21 : C9 01       ;
CODE_01CE23:          BNE CODE_01CE34                     ;; 01CE23 : D0 0F       ;
CODE_01CE25:          STZ.W $1411                         ;; 01CE25 : 9C 11 14    ;
CODE_01CE28:          INC.W $18A8                         ;; 01CE28 : EE A8 18    ;
CODE_01CE2B:          STZ.W $18AA                         ;; 01CE2B : 9C AA 18    ;
CODE_01CE2E:          INC RAM_SpritesLocked               ;; 01CE2E : E6 9D       ;
CODE_01CE30:          INC.W $151C,X                       ;; 01CE30 : FE 1C 15    ;
Return01CE33:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01CE34:          LDA RAM_ScreenBndryXLo              ;; 01CE34 : A5 1A       ;
CODE_01CE36:          CMP.B #$7E                          ;; 01CE36 : C9 7E       ;
CODE_01CE38:          BCC Return01CE3D                    ;; 01CE38 : 90 03       ;
CODE_01CE3A:          INC.W $151C,X                       ;; 01CE3A : FE 1C 15    ;
Return01CE3D:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01CE3E:          STZ RAM_MarioSpeedX                 ;; 01CE3E : 64 7B       ;
CODE_01CE40:          JSR.W SubSprYPosNoGrvty             ;; 01CE40 : 20 D8 AB    ;
CODE_01CE43:          LDA RAM_SpriteSpeedY,X              ;; 01CE43 : B5 AA       ;
CODE_01CE45:          CMP.B #$40                          ;; 01CE45 : C9 40       ;
CODE_01CE47:          BPL CODE_01CE4C                     ;; 01CE47 : 10 03       ;
CODE_01CE49:          CLC                                 ;; 01CE49 : 18          ;
CODE_01CE4A:          ADC.B #$03                          ;; 01CE4A : 69 03       ;
CODE_01CE4C:          STA RAM_SpriteSpeedY,X              ;; 01CE4C : 95 AA       ;
CODE_01CE4E:          JSR.W CODE_01D0C0                   ;; 01CE4E : 20 C0 D0    ;
CODE_01CE51:          BCC Return01CE3D                    ;; 01CE51 : 90 EA       ;
CODE_01CE53:          INC.W $151C,X                       ;; 01CE53 : FE 1C 15    ;
CODE_01CE56:          LDA RAM_SpriteState,X               ;; 01CE56 : B5 C2       ;
CODE_01CE58:          CMP.B #$02                          ;; 01CE58 : C9 02       ;
CODE_01CE5A:          BCC Return01CE3D                    ;; 01CE5A : 90 E1       ;
CODE_01CE5C:          JMP.W CODE_01CEA8                   ;; 01CE5C : 4C A8 CE    ;
                                                          ;;                      ;
CODE_01CE5F:          LDA RAM_SpriteState,X               ;; 01CE5F : B5 C2       ;
CODE_01CE61:          JSL.L ExecutePtr                    ;; 01CE61 : 22 DF 86 00 ;
                                                          ;;                      ;
MortonPtrs2:          .dw CODE_01D116                     ;; ?QPWZ? : 16 D1       ;
                      .dw CODE_01D116                     ;; ?QPWZ? : 16 D1       ;
                      .dw CODE_01CE6B                     ;; ?QPWZ? : 6B CE       ;
                                                          ;;                      ;
CODE_01CE6B:          LDA.W $1528,X                       ;; 01CE6B : BD 28 15    ;
CODE_01CE6E:          JSL.L ExecutePtr                    ;; 01CE6E : 22 DF 86 00 ;
                                                          ;;                      ;
Ptrs01CE72:           .dw CODE_01CE78                     ;; ?QPWZ? : 78 CE       ;
                      .dw CODE_01CEB6                     ;; ?QPWZ? : B6 CE       ;
                      .dw CODE_01CEFD                     ;; ?QPWZ? : FD CE       ;
                                                          ;;                      ;
CODE_01CE78:          STZ $36                             ;; 01CE78 : 64 36       ;
CODE_01CE7A:          STZ $37                             ;; 01CE7A : 64 37       ;
CODE_01CE7C:          LDA.W $1540,X                       ;; 01CE7C : BD 40 15    ;
CODE_01CE7F:          BEQ CODE_01CEA5                     ;; 01CE7F : F0 24       ;
CODE_01CE81:          LDY.B #$03                          ;; 01CE81 : A0 03       ;
CODE_01CE83:          AND.B #$30                          ;; 01CE83 : 29 30       ;
CODE_01CE85:          BNE CODE_01CE88                     ;; 01CE85 : D0 01       ;
CODE_01CE87:          INY                                 ;; 01CE87 : C8          ;
CODE_01CE88:          TYA                                 ;; 01CE88 : 98          ;
CODE_01CE89:          LDY.W $15AC,X                       ;; 01CE89 : BC AC 15    ;
CODE_01CE8C:          BEQ CODE_01CE90                     ;; 01CE8C : F0 02       ;
ADDR_01CE8E:          LDA.B #$05                          ;; 01CE8E : A9 05       ;
CODE_01CE90:          STA.W $1602,X                       ;; 01CE90 : 9D 02 16    ;
CODE_01CE93:          LDA.W $1540,X                       ;; 01CE93 : BD 40 15    ;
CODE_01CE96:          AND.B #$3F                          ;; 01CE96 : 29 3F       ;
CODE_01CE98:          CMP.B #$2E                          ;; 01CE98 : C9 2E       ;
CODE_01CE9A:          BNE Return01CEA4                    ;; 01CE9A : D0 08       ;
CODE_01CE9C:          LDA.B #$30                          ;; 01CE9C : A9 30       ;
CODE_01CE9E:          STA.W $163E,X                       ;; 01CE9E : 9D 3E 16    ;
CODE_01CEA1:          JSR.W CODE_01D059                   ;; 01CEA1 : 20 59 D0    ;
Return01CEA4:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01CEA5:          INC.W $1528,X                       ;; 01CEA5 : FE 28 15    ;
CODE_01CEA8:          LDA.B #$FF                          ;; 01CEA8 : A9 FF       ;
CODE_01CEAA:          STA.W $1540,X                       ;; 01CEAA : 9D 40 15    ;
Return01CEAD:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
DATA_01CEAE:          .db $30,$D0                         ;; 01CEAE               ;
                                                          ;;                      ;
DATA_01CEB0:          .db $1B,$1C,$1D,$1B                 ;; 01CEB0               ;
                                                          ;;                      ;
DATA_01CEB4:          .db $14,$EC                         ;; 01CEB4               ;
                                                          ;;                      ;
CODE_01CEB6:          LDA.W $1540,X                       ;; 01CEB6 : BD 40 15    ;
CODE_01CEB9:          BNE CODE_01CEDC                     ;; 01CEB9 : D0 21       ;
CODE_01CEBB:          JSR.W SubHorizPos                   ;; 01CEBB : 20 30 AD    ;
CODE_01CEBE:          TYA                                 ;; 01CEBE : 98          ;
CODE_01CEBF:          CMP.W RAM_SpriteXHi,X               ;; 01CEBF : DD E0 14    ;
CODE_01CEC2:          BNE CODE_01CEDC                     ;; 01CEC2 : D0 18       ;
CODE_01CEC4:          INC.W $1528,X                       ;; 01CEC4 : FE 28 15    ;
CODE_01CEC7:          LDA.W DATA_01CEB4,Y                 ;; 01CEC7 : B9 B4 CE    ;
CODE_01CECA:          STA.W $160E,X                       ;; 01CECA : 9D 0E 16    ;
CODE_01CECD:          LDA.B #$30                          ;; 01CECD : A9 30       ;
CODE_01CECF:          STA.W $1540,X                       ;; 01CECF : 9D 40 15    ;
CODE_01CED2:          LDA.B #$60                          ;; 01CED2 : A9 60       ;
CODE_01CED4:          STA.W $1558,X                       ;; 01CED4 : 9D 58 15    ;
CODE_01CED7:          LDA.B #$D8                          ;; 01CED7 : A9 D8       ;
CODE_01CED9:          STA RAM_SpriteSpeedY,X              ;; 01CED9 : 95 AA       ;
Return01CEDB:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01CEDC:          JSR.W SubHorizPos                   ;; 01CEDC : 20 30 AD    ;
CODE_01CEDF:          LDA RAM_SpriteSpeedX,X              ;; 01CEDF : B5 B6       ;
CODE_01CEE1:          CMP.W DATA_01CEAE,Y                 ;; 01CEE1 : D9 AE CE    ;
CODE_01CEE4:          BEQ CODE_01CEEC                     ;; 01CEE4 : F0 06       ;
CODE_01CEE6:          CLC                                 ;; 01CEE6 : 18          ;
CODE_01CEE7:          ADC.W DATA_01D4E7,Y                 ;; 01CEE7 : 79 E7 D4    ;
CODE_01CEEA:          STA RAM_SpriteSpeedX,X              ;; 01CEEA : 95 B6       ;
CODE_01CEEC:          JSR.W SubSprXPosNoGrvty             ;; 01CEEC : 20 CC AB    ;
CODE_01CEEF:          LDA RAM_FrameCounterB               ;; 01CEEF : A5 14       ;
CODE_01CEF1:          LSR                                 ;; 01CEF1 : 4A          ;
CODE_01CEF2:          LSR                                 ;; 01CEF2 : 4A          ;
CODE_01CEF3:          AND.B #$03                          ;; 01CEF3 : 29 03       ;
CODE_01CEF5:          TAY                                 ;; 01CEF5 : A8          ;
CODE_01CEF6:          LDA.W DATA_01CEB0,Y                 ;; 01CEF6 : B9 B0 CE    ;
CODE_01CEF9:          STA.W $1602,X                       ;; 01CEF9 : 9D 02 16    ;
Return01CEFC:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01CEFD:          LDA.W $1540,X                       ;; 01CEFD : BD 40 15    ;
CODE_01CF00:          BEQ CODE_01CF1C                     ;; 01CF00 : F0 1A       ;
CODE_01CF02:          DEC A                               ;; 01CF02 : 3A          ;
CODE_01CF03:          BNE CODE_01CF0F                     ;; 01CF03 : D0 0A       ;
CODE_01CF05:          LDA.W $160E,X                       ;; 01CF05 : BD 0E 16    ;
CODE_01CF08:          STA RAM_SpriteSpeedX,X              ;; 01CF08 : 95 B6       ;
CODE_01CF0A:          LDA.B #$08                          ;; 01CF0A : A9 08       ; \ Play sound effect 
CODE_01CF0C:          STA.W $1DFC                         ;; 01CF0C : 8D FC 1D    ; / 
CODE_01CF0F:          LDA RAM_SpriteSpeedX,X              ;; 01CF0F : B5 B6       ;
CODE_01CF11:          BEQ Return01CF1B                    ;; 01CF11 : F0 08       ;
CODE_01CF13:          BPL CODE_01CF19                     ;; 01CF13 : 10 04       ;
CODE_01CF15:          INC RAM_SpriteSpeedX,X              ;; 01CF15 : F6 B6       ;
CODE_01CF17:          INC RAM_SpriteSpeedX,X              ;; 01CF17 : F6 B6       ;
CODE_01CF19:          DEC RAM_SpriteSpeedX,X              ;; 01CF19 : D6 B6       ;
Return01CF1B:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01CF1C:          JSR.W CODE_01D0C0                   ;; 01CF1C : 20 C0 D0    ;
CODE_01CF1F:          BCC CODE_01CF2F                     ;; 01CF1F : 90 0E       ;
CODE_01CF21:          LDA RAM_SpriteSpeedY,X              ;; 01CF21 : B5 AA       ;
CODE_01CF23:          BMI CODE_01CF2F                     ;; 01CF23 : 30 0A       ;
CODE_01CF25:          STZ RAM_SpriteSpeedX,X              ;; 01CF25 : 74 B6       ; \ Sprite Speed = 0 
CODE_01CF27:          STZ RAM_SpriteSpeedY,X              ;; 01CF27 : 74 AA       ; / 
CODE_01CF29:          STZ.W $1528,X                       ;; 01CF29 : 9E 28 15    ;
CODE_01CF2C:          JMP.W CODE_01CEA8                   ;; 01CF2C : 4C A8 CE    ;
                                                          ;;                      ;
CODE_01CF2F:          JSR.W SubSprXPosNoGrvty             ;; 01CF2F : 20 CC AB    ;
CODE_01CF32:          JSR.W SubSprYPosNoGrvty             ;; 01CF32 : 20 D8 AB    ;
CODE_01CF35:          LDA RAM_FrameCounter                ;; 01CF35 : A5 13       ;
CODE_01CF37:          LSR                                 ;; 01CF37 : 4A          ;
CODE_01CF38:          BCS CODE_01CF44                     ;; 01CF38 : B0 0A       ;
CODE_01CF3A:          LDA RAM_SpriteSpeedY,X              ;; 01CF3A : B5 AA       ;
CODE_01CF3C:          BMI CODE_01CF42                     ;; 01CF3C : 30 04       ;
CODE_01CF3E:          CMP.B #$70                          ;; 01CF3E : C9 70       ;
CODE_01CF40:          BCS CODE_01CF44                     ;; 01CF40 : B0 02       ;
CODE_01CF42:          INC RAM_SpriteSpeedY,X              ;; 01CF42 : F6 AA       ;
CODE_01CF44:          LDA.W $1558,X                       ;; 01CF44 : BD 58 15    ;
CODE_01CF47:          BNE CODE_01CF4F                     ;; 01CF47 : D0 06       ;
CODE_01CF49:          LDA $36                             ;; 01CF49 : A5 36       ;
CODE_01CF4B:          ORA $37                             ;; 01CF4B : 05 37       ;
CODE_01CF4D:          BEQ CODE_01CF67                     ;; 01CF4D : F0 18       ;
CODE_01CF4F:          LDA RAM_SpriteSpeedX,X              ;; 01CF4F : B5 B6       ;
CODE_01CF51:          ASL                                 ;; 01CF51 : 0A          ;
CODE_01CF52:          LDA.B #$04                          ;; 01CF52 : A9 04       ;
CODE_01CF54:          LDY.B #$00                          ;; 01CF54 : A0 00       ;
CODE_01CF56:          BCC CODE_01CF5B                     ;; 01CF56 : 90 03       ;
ADDR_01CF58:          LDA.B #$FC                          ;; 01CF58 : A9 FC       ;
ADDR_01CF5A:          DEY                                 ;; 01CF5A : 88          ;
CODE_01CF5B:          CLC                                 ;; 01CF5B : 18          ;
CODE_01CF5C:          ADC $36                             ;; 01CF5C : 65 36       ;
CODE_01CF5E:          STA $36                             ;; 01CF5E : 85 36       ;
CODE_01CF60:          TYA                                 ;; 01CF60 : 98          ;
CODE_01CF61:          ADC $37                             ;; 01CF61 : 65 37       ;
CODE_01CF63:          AND.B #$01                          ;; 01CF63 : 29 01       ;
CODE_01CF65:          STA $37                             ;; 01CF65 : 85 37       ;
CODE_01CF67:          LDA.B #$06                          ;; 01CF67 : A9 06       ;
CODE_01CF69:          LDY RAM_SpriteSpeedY,X              ;; 01CF69 : B4 AA       ;
CODE_01CF6B:          BMI CODE_01CF79                     ;; 01CF6B : 30 0C       ;
CODE_01CF6D:          CPY.B #$08                          ;; 01CF6D : C0 08       ;
CODE_01CF6F:          BCC CODE_01CF79                     ;; 01CF6F : 90 08       ;
CODE_01CF71:          LDA.B #$05                          ;; 01CF71 : A9 05       ;
CODE_01CF73:          CPY.B #$10                          ;; 01CF73 : C0 10       ;
CODE_01CF75:          BCC CODE_01CF79                     ;; 01CF75 : 90 02       ;
CODE_01CF77:          LDA.B #$02                          ;; 01CF77 : A9 02       ;
CODE_01CF79:          STA.W $1602,X                       ;; 01CF79 : 9D 02 16    ;
Return01CF7C:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01CF7D:          JSR.W SubSprYPosNoGrvty             ;; 01CF7D : 20 D8 AB    ;
CODE_01CF80:          INC RAM_SpriteSpeedY,X              ;; 01CF80 : F6 AA       ;
CODE_01CF82:          JSR.W CODE_01D0C0                   ;; 01CF82 : 20 C0 D0    ;
CODE_01CF85:          LDA.W $1540,X                       ;; 01CF85 : BD 40 15    ;
CODE_01CF88:          BEQ CODE_01CFB7                     ;; 01CF88 : F0 2D       ;
CODE_01CF8A:          CMP.B #$40                          ;; 01CF8A : C9 40       ;
CODE_01CF8C:          BCC CODE_01CF9E                     ;; 01CF8C : 90 10       ;
CODE_01CF8E:          BEQ CODE_01CFC6                     ;; 01CF8E : F0 36       ;
CODE_01CF90:          LDY.B #$06                          ;; 01CF90 : A0 06       ;
CODE_01CF92:          LDA RAM_FrameCounterB               ;; 01CF92 : A5 14       ;
CODE_01CF94:          AND.B #$04                          ;; 01CF94 : 29 04       ;
CODE_01CF96:          BEQ CODE_01CF99                     ;; 01CF96 : F0 01       ;
CODE_01CF98:          INY                                 ;; 01CF98 : C8          ;
CODE_01CF99:          TYA                                 ;; 01CF99 : 98          ;
CODE_01CF9A:          STA.W $1602,X                       ;; 01CF9A : 9D 02 16    ;
Return01CF9D:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01CF9E:          LDY.W $18A6                         ;; 01CF9E : AC A6 18    ;
CODE_01CFA1:          LDA $38                             ;; 01CFA1 : A5 38       ;
CODE_01CFA3:          CMP.B #$20                          ;; 01CFA3 : C9 20       ;
CODE_01CFA5:          BEQ CODE_01CFA9                     ;; 01CFA5 : F0 02       ;
CODE_01CFA7:          INC $38                             ;; 01CFA7 : E6 38       ;
CODE_01CFA9:          LDA $39                             ;; 01CFA9 : A5 39       ;
CODE_01CFAB:          CMP.B #$20                          ;; 01CFAB : C9 20       ;
CODE_01CFAD:          BEQ CODE_01CFB1                     ;; 01CFAD : F0 02       ;
CODE_01CFAF:          DEC $39                             ;; 01CFAF : C6 39       ;
CODE_01CFB1:          LDA.B #$07                          ;; 01CFB1 : A9 07       ;
CODE_01CFB3:          STA.W $1602,X                       ;; 01CFB3 : 9D 02 16    ;
Return01CFB6:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01CFB7:          LDA.B #$02                          ;; 01CFB7 : A9 02       ;
CODE_01CFB9:          STA.W $151C,X                       ;; 01CFB9 : 9D 1C 15    ;
CODE_01CFBC:          LDA RAM_SpriteState,X               ;; 01CFBC : B5 C2       ;
CODE_01CFBE:          BEQ Return01CFC5                    ;; 01CFBE : F0 05       ;
CODE_01CFC0:          LDA.B #$20                          ;; 01CFC0 : A9 20       ;
CODE_01CFC2:          STA.W $164A,X                       ;; 01CFC2 : 9D 4A 16    ;
Return01CFC5:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01CFC6:          INC.W $1626,X                       ;; 01CFC6 : FE 26 16    ;
CODE_01CFC9:          LDA.W $1626,X                       ;; 01CFC9 : BD 26 16    ;
CODE_01CFCC:          CMP.B #$03                          ;; 01CFCC : C9 03       ;
CODE_01CFCE:          BCC Return01CFDF                    ;; 01CFCE : 90 0F       ;
CODE_01CFD0:          LDA.B #$1F                          ;; 01CFD0 : A9 1F       ; \ Play sound effect 
CODE_01CFD2:          STA.W $1DF9                         ;; 01CFD2 : 8D F9 1D    ; / 
CODE_01CFD5:          LDA.B #$04                          ;; 01CFD5 : A9 04       ;
CODE_01CFD7:          STA.W $151C,X                       ;; 01CFD7 : 9D 1C 15    ;
CODE_01CFDA:          LDA.B #$13                          ;; 01CFDA : A9 13       ;
CODE_01CFDC:          STA.W $1540,X                       ;; 01CFDC : 9D 40 15    ;
Return01CFDF:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01CFE0:          LDY.W $1540,X                       ;; 01CFE0 : BC 40 15    ;
CODE_01CFE3:          BEQ CODE_01CFFC                     ;; 01CFE3 : F0 17       ;
CODE_01CFE5:          LDA RAM_SpriteYLo,X                 ;; 01CFE5 : B5 D8       ;
CODE_01CFE7:          SEC                                 ;; 01CFE7 : 38          ;
CODE_01CFE8:          SBC.B #$01                          ;; 01CFE8 : E9 01       ;
CODE_01CFEA:          STA RAM_SpriteYLo,X                 ;; 01CFEA : 95 D8       ;
CODE_01CFEC:          BCS CODE_01CFF1                     ;; 01CFEC : B0 03       ;
ADDR_01CFEE:          DEC.W RAM_SpriteYHi,X               ;; 01CFEE : DE D4 14    ;
CODE_01CFF1:          DEC $39                             ;; 01CFF1 : C6 39       ;
CODE_01CFF3:          TYA                                 ;; 01CFF3 : 98          ;
CODE_01CFF4:          AND.B #$03                          ;; 01CFF4 : 29 03       ;
CODE_01CFF6:          BEQ CODE_01CFFA                     ;; 01CFF6 : F0 02       ;
CODE_01CFF8:          DEC $38                             ;; 01CFF8 : C6 38       ;
CODE_01CFFA:          BRA CODE_01D00F                     ;; 01CFFA : 80 13       ;
                                                          ;;                      ;
CODE_01CFFC:          LDA $36                             ;; 01CFFC : A5 36       ;
CODE_01CFFE:          CLC                                 ;; 01CFFE : 18          ;
CODE_01CFFF:          ADC.B #$06                          ;; 01CFFF : 69 06       ;
CODE_01D001:          STA $36                             ;; 01D001 : 85 36       ;
CODE_01D003:          LDA $37                             ;; 01D003 : A5 37       ;
CODE_01D005:          ADC.B #$00                          ;; 01D005 : 69 00       ;
CODE_01D007:          AND.B #$01                          ;; 01D007 : 29 01       ;
CODE_01D009:          STA $37                             ;; 01D009 : 85 37       ;
CODE_01D00B:          INC $38                             ;; 01D00B : E6 38       ;
CODE_01D00D:          INC $39                             ;; 01D00D : E6 39       ;
CODE_01D00F:          LDA $39                             ;; 01D00F : A5 39       ;
CODE_01D011:          CMP.B #$A0                          ;; 01D011 : C9 A0       ;
CODE_01D013:          BCC Return01D042                    ;; 01D013 : 90 2D       ;
CODE_01D015:          LDA.W RAM_OffscreenHorz,X           ;; 01D015 : BD A0 15    ;
CODE_01D018:          BNE CODE_01D032                     ;; 01D018 : D0 18       ;
CODE_01D01A:          LDA.B #$01                          ;; 01D01A : A9 01       ;
CODE_01D01C:          STA.W $17C0                         ;; 01D01C : 8D C0 17    ;
CODE_01D01F:          LDA RAM_SpriteXLo,X                 ;; 01D01F : B5 E4       ;
CODE_01D021:          SBC.B #$08                          ;; 01D021 : E9 08       ;
CODE_01D023:          STA.W $17C8                         ;; 01D023 : 8D C8 17    ;
CODE_01D026:          LDA RAM_SpriteYLo,X                 ;; 01D026 : B5 D8       ;
CODE_01D028:          ADC.B #$08                          ;; 01D028 : 69 08       ;
CODE_01D02A:          STA.W $17C4                         ;; 01D02A : 8D C4 17    ;
CODE_01D02D:          LDA.B #$1B                          ;; 01D02D : A9 1B       ;
CODE_01D02F:          STA.W $17CC                         ;; 01D02F : 8D CC 17    ;
CODE_01D032:          LDA.B #$D0                          ;; 01D032 : A9 D0       ;
CODE_01D034:          STA RAM_SpriteYLo,X                 ;; 01D034 : 95 D8       ;
CODE_01D036:          JSL.L CODE_03DEDF                   ;; 01D036 : 22 DF DE 03 ;
CODE_01D03A:          INC.W $151C,X                       ;; 01D03A : FE 1C 15    ;
CODE_01D03D:          LDA.B #$30                          ;; 01D03D : A9 30       ;
CODE_01D03F:          STA.W $1540,X                       ;; 01D03F : 9D 40 15    ;
Return01D042:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01D043:          LDA.W $1540,X                       ;; 01D043 : BD 40 15    ;
CODE_01D046:          BNE Return01D056                    ;; 01D046 : D0 0E       ;
CODE_01D048:          INC.W $13C6                         ;; 01D048 : EE C6 13    ;
CODE_01D04B:          DEC.W $1493                         ;; 01D04B : CE 93 14    ;
CODE_01D04E:          LDA.B #$0B                          ;; 01D04E : A9 0B       ;
CODE_01D050:          STA.W $1DFB                         ;; 01D050 : 8D FB 1D    ; / Change music 
CODE_01D053:          STZ.W $14C8,X                       ;; 01D053 : 9E C8 14    ;
Return01D056:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
DATA_01D057:          .db $FF,$F1                         ;; 01D057               ;
                                                          ;;                      ;
CODE_01D059:          LDA.B #$17                          ;; 01D059 : A9 17       ; \ Play sound effect 
CODE_01D05B:          STA.W $1DFC                         ;; 01D05B : 8D FC 1D    ; / 
CODE_01D05E:          LDY.B #$04                          ;; 01D05E : A0 04       ;
CODE_01D060:          LDA.W $14C8,Y                       ;; 01D060 : B9 C8 14    ;
CODE_01D063:          BEQ CODE_01D069                     ;; 01D063 : F0 04       ;
CODE_01D065:          DEY                                 ;; 01D065 : 88          ;
CODE_01D066:          BPL CODE_01D060                     ;; 01D066 : 10 F8       ;
Return01D068:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01D069:          LDA.B #$08                          ;; 01D069 : A9 08       ; \ Sprite status = Normal 
CODE_01D06B:          STA.W $14C8,Y                       ;; 01D06B : 99 C8 14    ; / 
CODE_01D06E:          LDA.B #$34                          ;; 01D06E : A9 34       ;
CODE_01D070:          STA.W RAM_SpriteNum,Y               ;; 01D070 : 99 9E 00    ;
CODE_01D073:          LDA RAM_SpriteXLo,X                 ;; 01D073 : B5 E4       ;
CODE_01D075:          STA $00                             ;; 01D075 : 85 00       ;
CODE_01D077:          LDA.W RAM_SpriteXHi,X               ;; 01D077 : BD E0 14    ;
CODE_01D07A:          STA $01                             ;; 01D07A : 85 01       ;
CODE_01D07C:          LDA RAM_SpriteYLo,X                 ;; 01D07C : B5 D8       ;
CODE_01D07E:          CLC                                 ;; 01D07E : 18          ;
CODE_01D07F:          ADC.B #$03                          ;; 01D07F : 69 03       ;
CODE_01D081:          STA.W RAM_SpriteYLo,Y               ;; 01D081 : 99 D8 00    ;
CODE_01D084:          LDA.W RAM_SpriteYHi,X               ;; 01D084 : BD D4 14    ;
CODE_01D087:          ADC.B #$00                          ;; 01D087 : 69 00       ;
CODE_01D089:          STA.W RAM_SpriteYHi,Y               ;; 01D089 : 99 D4 14    ;
CODE_01D08C:          LDA.W RAM_SpriteDir,X               ;; 01D08C : BD 7C 15    ;
CODE_01D08F:          PHX                                 ;; 01D08F : DA          ;
CODE_01D090:          TAX                                 ;; 01D090 : AA          ;
CODE_01D091:          LDA $00                             ;; 01D091 : A5 00       ;
CODE_01D093:          CLC                                 ;; 01D093 : 18          ;
CODE_01D094:          ADC.W DATA_01D057,X                 ;; 01D094 : 7D 57 D0    ;
CODE_01D097:          STA.W RAM_SpriteXLo,Y               ;; 01D097 : 99 E4 00    ;
CODE_01D09A:          LDA $01                             ;; 01D09A : A5 01       ;
CODE_01D09C:          ADC.B #$FF                          ;; 01D09C : 69 FF       ;
CODE_01D09E:          STA.W RAM_SpriteXHi,Y               ;; 01D09E : 99 E0 14    ;
CODE_01D0A1:          PLX                                 ;; 01D0A1 : FA          ;
CODE_01D0A2:          PHX                                 ;; 01D0A2 : DA          ;
CODE_01D0A3:          TYX                                 ;; 01D0A3 : BB          ;
CODE_01D0A4:          JSL.L InitSpriteTables              ;; 01D0A4 : 22 D2 F7 07 ;
CODE_01D0A8:          PLX                                 ;; 01D0A8 : FA          ;
CODE_01D0A9:          PHX                                 ;; 01D0A9 : DA          ;
CODE_01D0AA:          LDA.W RAM_SpriteDir,X               ;; 01D0AA : BD 7C 15    ;
CODE_01D0AD:          STA.W RAM_SpriteDir,Y               ;; 01D0AD : 99 7C 15    ;
CODE_01D0B0:          TAX                                 ;; 01D0B0 : AA          ;
CODE_01D0B1:          LDA.W DATA_01D0BE,X                 ;; 01D0B1 : BD BE D0    ;
CODE_01D0B4:          STA.W RAM_SpriteSpeedX,Y            ;; 01D0B4 : 99 B6 00    ;
CODE_01D0B7:          LDA.B #$30                          ;; 01D0B7 : A9 30       ;
CODE_01D0B9:          STA.W $1540,Y                       ;; 01D0B9 : 99 40 15    ;
CODE_01D0BC:          PLX                                 ;; 01D0BC : FA          ;
Return01D0BD:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
DATA_01D0BE:          .db $20,$E0                         ;; 01D0BE               ;
                                                          ;;                      ;
CODE_01D0C0:          LDA RAM_SpriteSpeedY,X              ;; 01D0C0 : B5 AA       ;
CODE_01D0C2:          BMI CODE_01D0DC                     ;; 01D0C2 : 30 18       ;
CODE_01D0C4:          LDA.W RAM_SpriteYHi,X               ;; 01D0C4 : BD D4 14    ;
CODE_01D0C7:          BNE CODE_01D0DC                     ;; 01D0C7 : D0 13       ;
CODE_01D0C9:          LDA $39                             ;; 01D0C9 : A5 39       ;
CODE_01D0CB:          LSR                                 ;; 01D0CB : 4A          ;
CODE_01D0CC:          TAY                                 ;; 01D0CC : A8          ;
CODE_01D0CD:          LDA RAM_SpriteYLo,X                 ;; 01D0CD : B5 D8       ;
CODE_01D0CF:          CMP.W ADDR_01D0D6,Y                 ;; 01D0CF : D9 D6 D0    ;
CODE_01D0D2:          BCC CODE_01D0DC                     ;; 01D0D2 : 90 08       ;
                                                          ;;                      ;
Instr01D0D4:          .db $B9,$D6,$D0                     ;; ?QPWZ?               ;
                                                          ;;                      ;
CODE_01D0D7:          STA RAM_SpriteYLo,X                 ;; 01D0D7 : 95 D8       ;
CODE_01D0D9:          STZ RAM_SpriteSpeedY,X              ;; 01D0D9 : 74 AA       ; Sprite Y Speed = 0 
Return01D0DB:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01D0DC:          CLC                                 ;; 01D0DC : 18          ;
Return01D0DD:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
DATA_01D0DE:          .db $80,$83,$85,$88,$8A,$8B,$8D,$8F ;; 01D0DE               ;
                      .db $90,$91,$91,$92,$92,$93,$93,$94 ;; ?QPWZ?               ;
                      .db $94,$95,$95,$96,$96,$97,$97,$98 ;; ?QPWZ?               ;
                      .db $98,$98,$99,$99,$9A,$9A,$9B,$9B ;; ?QPWZ?               ;
                      .db $9C,$9C,$9C,$9C,$9D,$9D,$9D,$9D ;; ?QPWZ?               ;
                      .db $9E,$9E,$9E,$9E,$9E,$9F,$9F,$9F ;; ?QPWZ?               ;
                      .db $9F,$9F,$9F,$9F,$9F,$9F,$9F,$9F ;; ?QPWZ?               ;
                                                          ;;                      ;
CODE_01D116:          LDA.W $1528,X                       ;; 01D116 : BD 28 15    ;
CODE_01D119:          JSL.L ExecutePtr                    ;; 01D119 : 22 DF 86 00 ;
                                                          ;;                      ;
MortonPtrs3:          .dw CODE_01D146                     ;; ?QPWZ? : 46 D1       ;
                      .dw CODE_01D23F                     ;; ?QPWZ? : 3F D2       ;
                                                          ;;                      ;
Return01D121:         RTS                                 ;; ?QPWZ? : 60          ;
                                                          ;;                      ;
                                                          ;;                      ;
DATA_01D122:          .db $F0,$00,$10,$00,$F0,$00,$10,$00 ;; 01D122               ;
                      .db $E8,$00,$18,$00                 ;; ?QPWZ?               ;
                                                          ;;                      ;
DATA_01D12E:          .db $00,$F0,$00,$10,$00,$F0,$00,$10 ;; 01D12E               ;
                      .db $00,$E8,$00,$18,$26,$26,$D8,$D8 ;; ?QPWZ?               ;
DATA_01D13E:          .db $90,$30,$30,$90                 ;; 01D13E               ;
                                                          ;;                      ;
DATA_01D142:          .db $00,$01,$02,$01                 ;; 01D142               ;
                                                          ;;                      ;
CODE_01D146:          LDA RAM_FrameCounterB               ;; 01D146 : A5 14       ;
CODE_01D148:          LSR                                 ;; 01D148 : 4A          ;
CODE_01D149:          LDY.W $1626,X                       ;; 01D149 : BC 26 16    ;
CODE_01D14C:          CPY.B #$02                          ;; 01D14C : C0 02       ;
CODE_01D14E:          BCS CODE_01D151                     ;; 01D14E : B0 01       ;
CODE_01D150:          LSR                                 ;; 01D150 : 4A          ;
CODE_01D151:          AND.B #$03                          ;; 01D151 : 29 03       ;
CODE_01D153:          TAY                                 ;; 01D153 : A8          ;
CODE_01D154:          LDA.W DATA_01D142,Y                 ;; 01D154 : B9 42 D1    ;
CODE_01D157:          LDY.W $15AC,X                       ;; 01D157 : BC AC 15    ;
CODE_01D15A:          BEQ CODE_01D15E                     ;; 01D15A : F0 02       ;
CODE_01D15C:          LDA.B #$05                          ;; 01D15C : A9 05       ;
CODE_01D15E:          STA.W $1602,X                       ;; 01D15E : 9D 02 16    ;
CODE_01D161:          LDA.W $164A,X                       ;; 01D161 : BD 4A 16    ;
CODE_01D164:          BEQ CODE_01D17C                     ;; 01D164 : F0 16       ;
CODE_01D166:          LDY RAM_SpriteXLo,X                 ;; 01D166 : B4 E4       ;
CODE_01D168:          CPY.B #$50                          ;; 01D168 : C0 50       ;
CODE_01D16A:          BCC CODE_01D17C                     ;; 01D16A : 90 10       ;
CODE_01D16C:          CPY.B #$80                          ;; 01D16C : C0 80       ;
CODE_01D16E:          BCS CODE_01D17C                     ;; 01D16E : B0 0C       ;
CODE_01D170:          DEC.W $164A,X                       ;; 01D170 : DE 4A 16    ;
CODE_01D173:          LSR                                 ;; 01D173 : 4A          ;
CODE_01D174:          BCS CODE_01D17C                     ;; 01D174 : B0 06       ;
CODE_01D176:          INC.W $1534,X                       ;; 01D176 : FE 34 15    ;
CODE_01D179:          DEC.W $160E,X                       ;; 01D179 : DE 0E 16    ;
CODE_01D17C:          LDA.W $1534,X                       ;; 01D17C : BD 34 15    ;
CODE_01D17F:          STA $05                             ;; 01D17F : 85 05       ;
CODE_01D181:          STA $06                             ;; 01D181 : 85 06       ;
CODE_01D183:          STA $0B                             ;; 01D183 : 85 0B       ;
CODE_01D185:          STA $0C                             ;; 01D185 : 85 0C       ;
CODE_01D187:          LDA.W $160E,X                       ;; 01D187 : BD 0E 16    ;
CODE_01D18A:          STA $07                             ;; 01D18A : 85 07       ;
CODE_01D18C:          STA $08                             ;; 01D18C : 85 08       ;
CODE_01D18E:          STA $09                             ;; 01D18E : 85 09       ;
CODE_01D190:          STA $0A                             ;; 01D190 : 85 0A       ;
CODE_01D192:          LDA $36                             ;; 01D192 : A5 36       ;
CODE_01D194:          ASL                                 ;; 01D194 : 0A          ;
CODE_01D195:          BEQ CODE_01D19A                     ;; 01D195 : F0 03       ;
CODE_01D197:          JMP.W CODE_01D224                   ;; 01D197 : 4C 24 D2    ;
                                                          ;;                      ;
CODE_01D19A:          LDY.W $1594,X                       ;; 01D19A : BC 94 15    ;
CODE_01D19D:          TYA                                 ;; 01D19D : 98          ;
CODE_01D19E:          LSR                                 ;; 01D19E : 4A          ;
CODE_01D19F:          BCS CODE_01D1B5                     ;; 01D19F : B0 14       ;
CODE_01D1A1:          LDA RAM_SpriteXLo,X                 ;; 01D1A1 : B5 E4       ;
CODE_01D1A3:          CPY.B #$00                          ;; 01D1A3 : C0 00       ;
CODE_01D1A5:          BNE CODE_01D1AE                     ;; 01D1A5 : D0 07       ;
CODE_01D1A7:          CMP.W $1534,X                       ;; 01D1A7 : DD 34 15    ;
CODE_01D1AA:          BCC CODE_01D215                     ;; 01D1AA : 90 69       ;
CODE_01D1AC:          BRA CODE_01D1D8                     ;; 01D1AC : 80 2A       ;
                                                          ;;                      ;
CODE_01D1AE:          CMP.W $160E,X                       ;; 01D1AE : DD 0E 16    ;
CODE_01D1B1:          BCS CODE_01D215                     ;; 01D1B1 : B0 62       ;
CODE_01D1B3:          BRA CODE_01D1D8                     ;; 01D1B3 : 80 23       ;
                                                          ;;                      ;
CODE_01D1B5:          LDA.W RAM_SpriteDir,X               ;; 01D1B5 : BD 7C 15    ;
CODE_01D1B8:          BNE CODE_01D1BE                     ;; 01D1B8 : D0 04       ;
ADDR_01D1BA:          INY                                 ;; 01D1BA : C8          ;
ADDR_01D1BB:          INY                                 ;; 01D1BB : C8          ;
ADDR_01D1BC:          INY                                 ;; 01D1BC : C8          ;
ADDR_01D1BD:          INY                                 ;; 01D1BD : C8          ;
CODE_01D1BE:          LDA.W $0005,Y                       ;; 01D1BE : B9 05 00    ;
CODE_01D1C1:          STA RAM_SpriteXLo,X                 ;; 01D1C1 : 95 E4       ;
CODE_01D1C3:          LDY.W $1594,X                       ;; 01D1C3 : BC 94 15    ;
CODE_01D1C6:          LDA RAM_SpriteYLo,X                 ;; 01D1C6 : B5 D8       ;
CODE_01D1C8:          CPY.B #$03                          ;; 01D1C8 : C0 03       ;
CODE_01D1CA:          BEQ ADDR_01D1D3                     ;; 01D1CA : F0 07       ;
CODE_01D1CC:          CMP.W DATA_01D13E,Y                 ;; 01D1CC : D9 3E D1    ;
CODE_01D1CF:          BCC CODE_01D215                     ;; 01D1CF : 90 44       ;
CODE_01D1D1:          BRA CODE_01D1D8                     ;; 01D1D1 : 80 05       ;
                                                          ;;                      ;
ADDR_01D1D3:          CMP.W DATA_01D13E,Y                 ;; 01D1D3 : D9 3E D1    ;
ADDR_01D1D6:          BCS CODE_01D215                     ;; 01D1D6 : B0 3D       ;
CODE_01D1D8:          LDA.W $1626,X                       ;; 01D1D8 : BD 26 16    ;
CODE_01D1DB:          CMP.B #$02                          ;; 01D1DB : C9 02       ;
CODE_01D1DD:          BCC CODE_01D1E1                     ;; 01D1DD : 90 02       ;
CODE_01D1DF:          LDA.B #$02                          ;; 01D1DF : A9 02       ;
CODE_01D1E1:          ASL                                 ;; 01D1E1 : 0A          ;
CODE_01D1E2:          ASL                                 ;; 01D1E2 : 0A          ;
CODE_01D1E3:          ADC.W $1594,X                       ;; 01D1E3 : 7D 94 15    ;
CODE_01D1E6:          TAY                                 ;; 01D1E6 : A8          ;
CODE_01D1E7:          LDA.W DATA_01D122,Y                 ;; 01D1E7 : B9 22 D1    ;
CODE_01D1EA:          STA RAM_SpriteSpeedX,X              ;; 01D1EA : 95 B6       ;
CODE_01D1EC:          LDA.W DATA_01D12E,Y                 ;; 01D1EC : B9 2E D1    ;
CODE_01D1EF:          STA RAM_SpriteSpeedY,X              ;; 01D1EF : 95 AA       ;
CODE_01D1F1:          JSR.W SubSprXPosNoGrvty             ;; 01D1F1 : 20 CC AB    ;
CODE_01D1F4:          JSR.W SubSprYPosNoGrvty             ;; 01D1F4 : 20 D8 AB    ;
CODE_01D1F7:          LDA.W $1594,X                       ;; 01D1F7 : BD 94 15    ;
CODE_01D1FA:          LDY.W RAM_SpriteDir,X               ;; 01D1FA : BC 7C 15    ;
CODE_01D1FD:          BNE CODE_01D201                     ;; 01D1FD : D0 02       ;
ADDR_01D1FF:          EOR.B #$02                          ;; 01D1FF : 49 02       ;
CODE_01D201:          CMP.B #$02                          ;; 01D201 : C9 02       ;
CODE_01D203:          BNE Return01D214                    ;; 01D203 : D0 0F       ;
CODE_01D205:          JSR.W SubHorizPos                   ;; 01D205 : 20 30 AD    ;
CODE_01D208:          LDA $0F                             ;; 01D208 : A5 0F       ;
CODE_01D20A:          CLC                                 ;; 01D20A : 18          ;
CODE_01D20B:          ADC.B #$10                          ;; 01D20B : 69 10       ;
CODE_01D20D:          CMP.B #$20                          ;; 01D20D : C9 20       ;
CODE_01D20F:          BCS Return01D214                    ;; 01D20F : B0 03       ;
CODE_01D211:          INC.W $1528,X                       ;; 01D211 : FE 28 15    ;
Return01D214:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01D215:          LDY.W RAM_SpriteDir,X               ;; 01D215 : BC 7C 15    ;
CODE_01D218:          LDA.W $1594,X                       ;; 01D218 : BD 94 15    ;
CODE_01D21B:          CLC                                 ;; 01D21B : 18          ;
CODE_01D21C:          ADC.W DATA_01D23D,Y                 ;; 01D21C : 79 3D D2    ;
CODE_01D21F:          AND.B #$03                          ;; 01D21F : 29 03       ;
CODE_01D221:          STA.W $1594,X                       ;; 01D221 : 9D 94 15    ;
CODE_01D224:          LDY.W RAM_SpriteDir,X               ;; 01D224 : BC 7C 15    ;
CODE_01D227:          LDA $36                             ;; 01D227 : A5 36       ;
CODE_01D229:          CLC                                 ;; 01D229 : 18          ;
CODE_01D22A:          ADC.W DATA_01D239,Y                 ;; 01D22A : 79 39 D2    ;
CODE_01D22D:          STA $36                             ;; 01D22D : 85 36       ;
CODE_01D22F:          LDA $37                             ;; 01D22F : A5 37       ;
CODE_01D231:          ADC.W DATA_01D23B,Y                 ;; 01D231 : 79 3B D2    ;
CODE_01D234:          AND.B #$01                          ;; 01D234 : 29 01       ;
CODE_01D236:          STA $37                             ;; 01D236 : 85 37       ;
Return01D238:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
DATA_01D239:          .db $FC,$04                         ;; 01D239               ;
                                                          ;;                      ;
DATA_01D23B:          .db $FF,$00                         ;; 01D23B               ;
                                                          ;;                      ;
DATA_01D23D:          .db $FF,$01                         ;; 01D23D               ;
                                                          ;;                      ;
CODE_01D23F:          LDA.W $1540,X                       ;; 01D23F : BD 40 15    ;
CODE_01D242:          BEQ CODE_01D25E                     ;; 01D242 : F0 1A       ;
CODE_01D244:          CMP.B #$01                          ;; 01D244 : C9 01       ;
CODE_01D246:          BNE Return01D2A7                    ;; 01D246 : D0 5F       ;
CODE_01D248:          STZ.W $1528,X                       ;; 01D248 : 9E 28 15    ;
CODE_01D24B:          JSR.W SubHorizPos                   ;; 01D24B : 20 30 AD    ;
CODE_01D24E:          TYA                                 ;; 01D24E : 98          ;
CODE_01D24F:          STA.W RAM_SpriteDir,X               ;; 01D24F : 9D 7C 15    ;
CODE_01D252:          ASL                                 ;; 01D252 : 0A          ;
CODE_01D253:          EOR.B #$02                          ;; 01D253 : 49 02       ;
CODE_01D255:          STA.W $1594,X                       ;; 01D255 : 9D 94 15    ;
CODE_01D258:          LDA.B #$0A                          ;; 01D258 : A9 0A       ; \ Set turning timer 
CODE_01D25A:          STA.W $15AC,X                       ;; 01D25A : 9D AC 15    ; / 
Return01D25D:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01D25E:          LDA.B #$06                          ;; 01D25E : A9 06       ;
CODE_01D260:          STA.W $1602,X                       ;; 01D260 : 9D 02 16    ;
CODE_01D263:          JSR.W SubSprYPosNoGrvty             ;; 01D263 : 20 D8 AB    ;
CODE_01D266:          LDA RAM_SpriteSpeedY,X              ;; 01D266 : B5 AA       ;
CODE_01D268:          CMP.B #$70                          ;; 01D268 : C9 70       ;
CODE_01D26A:          BCS CODE_01D271                     ;; 01D26A : B0 05       ;
CODE_01D26C:          CLC                                 ;; 01D26C : 18          ;
CODE_01D26D:          ADC.B #$04                          ;; 01D26D : 69 04       ;
CODE_01D26F:          STA RAM_SpriteSpeedY,X              ;; 01D26F : 95 AA       ;
CODE_01D271:          LDA $36                             ;; 01D271 : A5 36       ;
CODE_01D273:          ORA $37                             ;; 01D273 : 05 37       ;
CODE_01D275:          BEQ CODE_01D286                     ;; 01D275 : F0 0F       ;
CODE_01D277:          LDA $36                             ;; 01D277 : A5 36       ;
CODE_01D279:          CLC                                 ;; 01D279 : 18          ;
CODE_01D27A:          ADC.B #$08                          ;; 01D27A : 69 08       ;
CODE_01D27C:          STA $36                             ;; 01D27C : 85 36       ;
CODE_01D27E:          LDA $37                             ;; 01D27E : A5 37       ;
CODE_01D280:          ADC.B #$00                          ;; 01D280 : 69 00       ;
CODE_01D282:          AND.B #$01                          ;; 01D282 : 29 01       ;
CODE_01D284:          STA $37                             ;; 01D284 : 85 37       ;
CODE_01D286:          JSR.W CODE_01D0C0                   ;; 01D286 : 20 C0 D0    ;
CODE_01D289:          BCC Return01D2A7                    ;; 01D289 : 90 1C       ;
CODE_01D28B:          LDA.B #$20                          ;; 01D28B : A9 20       ; \ Set ground shake timer 
CODE_01D28D:          STA.W RAM_ShakeGrndTimer            ;; 01D28D : 8D 87 18    ; / 
CODE_01D290:          LDA RAM_IsFlying                    ;; 01D290 : A5 72       ;
CODE_01D292:          BNE CODE_01D299                     ;; 01D292 : D0 05       ;
CODE_01D294:          LDA.B #$28                          ;; 01D294 : A9 28       ; \ Lock Mario in place 
CODE_01D296:          STA.W RAM_LockMarioTimer            ;; 01D296 : 8D BD 18    ; / 
CODE_01D299:          LDA.B #$09                          ;; 01D299 : A9 09       ; \ Play sound effect 
CODE_01D29B:          STA.W $1DFC                         ;; 01D29B : 8D FC 1D    ; / 
CODE_01D29E:          LDA.B #$28                          ;; 01D29E : A9 28       ;
CODE_01D2A0:          STA.W $1540,X                       ;; 01D2A0 : 9D 40 15    ;
CODE_01D2A3:          STZ $36                             ;; 01D2A3 : 64 36       ;
CODE_01D2A5:          STZ $37                             ;; 01D2A5 : 64 37       ;
Return01D2A7:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01D2A8:          LDA.W $151C,X                       ;; 01D2A8 : BD 1C 15    ;
CODE_01D2AB:          CMP.B #$03                          ;; 01D2AB : C9 03       ;
CODE_01D2AD:          BCS Return01D318                    ;; 01D2AD : B0 69       ;
CODE_01D2AF:          LDA.W $187B,X                       ;; 01D2AF : BD 7B 18    ;
CODE_01D2B2:          CMP.B #$03                          ;; 01D2B2 : C9 03       ;
CODE_01D2B4:          BNE CODE_01D2BD                     ;; 01D2B4 : D0 07       ;
ADDR_01D2B6:          LDA.W $1528,X                       ;; 01D2B6 : BD 28 15    ;
ADDR_01D2B9:          CMP.B #$03                          ;; 01D2B9 : C9 03       ;
ADDR_01D2BB:          BCS Return01D318                    ;; 01D2BB : B0 5B       ;
CODE_01D2BD:          JSL.L GetMarioClipping              ;; 01D2BD : 22 64 B6 03 ;
CODE_01D2C1:          JSR.W CODE_01D40B                   ;; 01D2C1 : 20 0B D4    ;
CODE_01D2C4:          JSL.L CheckForContact               ;; 01D2C4 : 22 2B B7 03 ;
CODE_01D2C8:          BCC Return01D318                    ;; 01D2C8 : 90 4E       ;
CODE_01D2CA:          LDA.W $1FE2,X                       ;; 01D2CA : BD E2 1F    ;
CODE_01D2CD:          BNE Return01D318                    ;; 01D2CD : D0 49       ;
CODE_01D2CF:          LDA.B #$08                          ;; 01D2CF : A9 08       ;
CODE_01D2D1:          STA.W $1FE2,X                       ;; 01D2D1 : 9D E2 1F    ;
CODE_01D2D4:          LDA RAM_IsFlying                    ;; 01D2D4 : A5 72       ;
CODE_01D2D6:          BEQ CODE_01D319                     ;; 01D2D6 : F0 41       ;
CODE_01D2D8:          LDA.W $1602,X                       ;; 01D2D8 : BD 02 16    ;
CODE_01D2DB:          CMP.B #$10                          ;; 01D2DB : C9 10       ;
CODE_01D2DD:          BCS CODE_01D2E3                     ;; 01D2DD : B0 04       ;
CODE_01D2DF:          CMP.B #$06                          ;; 01D2DF : C9 06       ;
CODE_01D2E1:          BCS ADDR_01D31E                     ;; 01D2E1 : B0 3B       ;
CODE_01D2E3:          LDA RAM_MarioYPos                   ;; 01D2E3 : A5 96       ;
CODE_01D2E5:          CLC                                 ;; 01D2E5 : 18          ;
CODE_01D2E6:          ADC.B #$08                          ;; 01D2E6 : 69 08       ;
CODE_01D2E8:          CMP RAM_SpriteYLo,X                 ;; 01D2E8 : D5 D8       ;
CODE_01D2EA:          BCS ADDR_01D31E                     ;; 01D2EA : B0 32       ;
CODE_01D2EC:          LDA.W $1594,X                       ;; 01D2EC : BD 94 15    ;
CODE_01D2EF:          LSR                                 ;; 01D2EF : 4A          ;
CODE_01D2F0:          BCS CODE_01D334                     ;; 01D2F0 : B0 42       ;
CODE_01D2F2:          LDA RAM_MarioSpeedY                 ;; 01D2F2 : A5 7D       ;
CODE_01D2F4:          BMI Return01D31D                    ;; 01D2F4 : 30 27       ;
CODE_01D2F6:          JSR.W CODE_01D351                   ;; 01D2F6 : 20 51 D3    ;
CODE_01D2F9:          LDA.B #$D0                          ;; 01D2F9 : A9 D0       ;
CODE_01D2FB:          STA RAM_MarioSpeedY                 ;; 01D2FB : 85 7D       ;
CODE_01D2FD:          LDA.B #$02                          ;; 01D2FD : A9 02       ; \ Play sound effect 
CODE_01D2FF:          STA.W $1DF9                         ;; 01D2FF : 8D F9 1D    ; / 
CODE_01D302:          LDA.W $1602,X                       ;; 01D302 : BD 02 16    ;
CODE_01D305:          CMP.B #$1B                          ;; 01D305 : C9 1B       ;
CODE_01D307:          BCC CODE_01D379                     ;; 01D307 : 90 70       ;
ADDR_01D309:          LDY.B #$20                          ;; 01D309 : A0 20       ;
ADDR_01D30B:          LDA RAM_SpriteXLo,X                 ;; 01D30B : B5 E4       ;
ADDR_01D30D:          SEC                                 ;; 01D30D : 38          ;
ADDR_01D30E:          SBC.B #$08                          ;; 01D30E : E9 08       ;
ADDR_01D310:          CMP RAM_MarioXPos                   ;; 01D310 : C5 94       ;
ADDR_01D312:          BMI ADDR_01D316                     ;; 01D312 : 30 02       ;
ADDR_01D314:          LDY.B #$E0                          ;; 01D314 : A0 E0       ;
ADDR_01D316:          STY RAM_MarioSpeedX                 ;; 01D316 : 84 7B       ;
Return01D318:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01D319:          JSL.L HurtMario                     ;; 01D319 : 22 B7 F5 00 ;
Return01D31D:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
ADDR_01D31E:          LDA.B #$01                          ;; 01D31E : A9 01       ; \ Play sound effect 
ADDR_01D320:          STA.W $1DF9                         ;; 01D320 : 8D F9 1D    ; / 
ADDR_01D323:          LDA RAM_MarioSpeedY                 ;; 01D323 : A5 7D       ;
ADDR_01D325:          BPL ADDR_01D32C                     ;; 01D325 : 10 05       ;
ADDR_01D327:          LDA.B #$10                          ;; 01D327 : A9 10       ;
ADDR_01D329:          STA RAM_MarioSpeedY                 ;; 01D329 : 85 7D       ;
Return01D32B:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
ADDR_01D32C:          JSR.W ADDR_01D309                   ;; 01D32C : 20 09 D3    ;
ADDR_01D32F:          LDA.B #$D0                          ;; 01D32F : A9 D0       ;
ADDR_01D331:          STA RAM_MarioSpeedY                 ;; 01D331 : 85 7D       ;
Return01D333:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01D334:          LDA.B #$01                          ;; 01D334 : A9 01       ; \ Play sound effect 
CODE_01D336:          STA.W $1DF9                         ;; 01D336 : 8D F9 1D    ; / 
CODE_01D339:          LDA RAM_MarioSpeedY                 ;; 01D339 : A5 7D       ;
CODE_01D33B:          BPL CODE_01D342                     ;; 01D33B : 10 05       ;
ADDR_01D33D:          LDA.B #$20                          ;; 01D33D : A9 20       ;
ADDR_01D33F:          STA RAM_MarioSpeedY                 ;; 01D33F : 85 7D       ;
Return01D341:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01D342:          LDY.B #$20                          ;; 01D342 : A0 20       ;
CODE_01D344:          LDA RAM_SpriteXLo,X                 ;; 01D344 : B5 E4       ;
CODE_01D346:          BPL CODE_01D34A                     ;; 01D346 : 10 02       ;
ADDR_01D348:          LDY.B #$E0                          ;; 01D348 : A0 E0       ;
CODE_01D34A:          STY RAM_MarioSpeedX                 ;; 01D34A : 84 7B       ;
CODE_01D34C:          LDA.B #$B0                          ;; 01D34C : A9 B0       ;
CODE_01D34E:          STA RAM_MarioSpeedY                 ;; 01D34E : 85 7D       ;
Return01D350:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01D351:          LDA RAM_SpriteXLo,X                 ;; 01D351 : B5 E4       ;
CODE_01D353:          PHA                                 ;; 01D353 : 48          ;
CODE_01D354:          SEC                                 ;; 01D354 : 38          ;
CODE_01D355:          SBC.B #$08                          ;; 01D355 : E9 08       ;
CODE_01D357:          STA RAM_SpriteXLo,X                 ;; 01D357 : 95 E4       ;
CODE_01D359:          LDA.W RAM_SpriteXHi,X               ;; 01D359 : BD E0 14    ;
CODE_01D35C:          PHA                                 ;; 01D35C : 48          ;
CODE_01D35D:          SBC.B #$00                          ;; 01D35D : E9 00       ;
CODE_01D35F:          STA.W RAM_SpriteXHi,X               ;; 01D35F : 9D E0 14    ;
CODE_01D362:          LDA RAM_SpriteYLo,X                 ;; 01D362 : B5 D8       ;
CODE_01D364:          PHA                                 ;; 01D364 : 48          ;
CODE_01D365:          CLC                                 ;; 01D365 : 18          ;
CODE_01D366:          ADC.B #$08                          ;; 01D366 : 69 08       ;
CODE_01D368:          STA RAM_SpriteYLo,X                 ;; 01D368 : 95 D8       ;
CODE_01D36A:          JSL.L DisplayContactGfx             ;; 01D36A : 22 99 AB 01 ;
CODE_01D36E:          PLA                                 ;; 01D36E : 68          ;
CODE_01D36F:          STA RAM_SpriteYLo,X                 ;; 01D36F : 95 D8       ;
CODE_01D371:          PLA                                 ;; 01D371 : 68          ;
CODE_01D372:          STA.W RAM_SpriteXHi,X               ;; 01D372 : 9D E0 14    ;
CODE_01D375:          PLA                                 ;; 01D375 : 68          ;
CODE_01D376:          STA RAM_SpriteXLo,X                 ;; 01D376 : 95 E4       ;
Return01D378:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01D379:          LDA.B #$18                          ;; 01D379 : A9 18       ;
CODE_01D37B:          STA $38                             ;; 01D37B : 85 38       ;
CODE_01D37D:          PHX                                 ;; 01D37D : DA          ;
CODE_01D37E:          LDA $39                             ;; 01D37E : A5 39       ;
CODE_01D380:          LSR                                 ;; 01D380 : 4A          ;
CODE_01D381:          TAX                                 ;; 01D381 : AA          ;
CODE_01D382:          LDA.B #$28                          ;; 01D382 : A9 28       ;
CODE_01D384:          STA $39                             ;; 01D384 : 85 39       ;
CODE_01D386:          LSR                                 ;; 01D386 : 4A          ;
CODE_01D387:          TAY                                 ;; 01D387 : A8          ;
CODE_01D388:          LDA.W ADDR_01D0D6,Y                 ;; 01D388 : B9 D6 D0    ;
CODE_01D38B:          SEC                                 ;; 01D38B : 38          ;
CODE_01D38C:          SBC.W ADDR_01D0D6,X                 ;; 01D38C : FD D6 D0    ;
CODE_01D38F:          PLX                                 ;; 01D38F : FA          ;
CODE_01D390:          CLC                                 ;; 01D390 : 18          ;
CODE_01D391:          ADC RAM_SpriteYLo,X                 ;; 01D391 : 75 D8       ;
CODE_01D393:          STA RAM_SpriteYLo,X                 ;; 01D393 : 95 D8       ;
CODE_01D395:          LDA.W RAM_SpriteYHi,X               ;; 01D395 : BD D4 14    ;
CODE_01D398:          ADC.B #$00                          ;; 01D398 : 69 00       ;
CODE_01D39A:          STA.W RAM_SpriteYHi,X               ;; 01D39A : 9D D4 14    ;
CODE_01D39D:          STZ RAM_SpriteSpeedX,X              ;; 01D39D : 74 B6       ; \ Sprite Speed = 0 
CODE_01D39F:          STZ RAM_SpriteSpeedY,X              ;; 01D39F : 74 AA       ; / 
CODE_01D3A1:          LDA.B #$80                          ;; 01D3A1 : A9 80       ;
CODE_01D3A3:          STA.W $1540,X                       ;; 01D3A3 : 9D 40 15    ;
CODE_01D3A6:          LDA.B #$03                          ;; 01D3A6 : A9 03       ;
CODE_01D3A8:          STA.W $151C,X                       ;; 01D3A8 : 9D 1C 15    ;
CODE_01D3AB:          LDA.B #$28                          ;; 01D3AB : A9 28       ; \ Play sound effect 
CODE_01D3AD:          STA.W $1DFC                         ;; 01D3AD : 8D FC 1D    ; / 
Return01D3B0:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01D3B1:          LDA.W $151C,X                       ;; 01D3B1 : BD 1C 15    ;
CODE_01D3B4:          CMP.B #$03                          ;; 01D3B4 : C9 03       ;
CODE_01D3B6:          BCS Return01D40A                    ;; 01D3B6 : B0 52       ;
CODE_01D3B8:          LDY.B #$0A                          ;; 01D3B8 : A0 0A       ;
CODE_01D3BA:          STY.W $1695                         ;; 01D3BA : 8C 95 16    ;
CODE_01D3BD:          LDA.W RAM_ExSpriteNum,Y             ;; 01D3BD : B9 0B 17    ;
CODE_01D3C0:          CMP.B #$05                          ;; 01D3C0 : C9 05       ;
CODE_01D3C2:          BNE CODE_01D405                     ;; 01D3C2 : D0 41       ;
ADDR_01D3C4:          LDA.W RAM_ExSpriteXLo,Y             ;; 01D3C4 : B9 1F 17    ;
ADDR_01D3C7:          STA $00                             ;; 01D3C7 : 85 00       ;
ADDR_01D3C9:          LDA.W RAM_ExSpriteXHi,Y             ;; 01D3C9 : B9 33 17    ;
ADDR_01D3CC:          STA $08                             ;; 01D3CC : 85 08       ;
ADDR_01D3CE:          LDA.W RAM_ExSpriteYLo,Y             ;; 01D3CE : B9 15 17    ;
ADDR_01D3D1:          STA $01                             ;; 01D3D1 : 85 01       ;
ADDR_01D3D3:          LDA.W RAM_ExSpriteYHi,Y             ;; 01D3D3 : B9 29 17    ;
ADDR_01D3D6:          STA $09                             ;; 01D3D6 : 85 09       ;
ADDR_01D3D8:          LDA.B #$08                          ;; 01D3D8 : A9 08       ;
ADDR_01D3DA:          STA $02                             ;; 01D3DA : 85 02       ;
ADDR_01D3DC:          STA $03                             ;; 01D3DC : 85 03       ;
ADDR_01D3DE:          PHY                                 ;; 01D3DE : 5A          ;
ADDR_01D3DF:          JSR.W CODE_01D40B                   ;; 01D3DF : 20 0B D4    ;
ADDR_01D3E2:          PLY                                 ;; 01D3E2 : 7A          ;
ADDR_01D3E3:          JSL.L CheckForContact               ;; 01D3E3 : 22 2B B7 03 ;
ADDR_01D3E7:          BCC CODE_01D405                     ;; 01D3E7 : 90 1C       ;
ADDR_01D3E9:          LDA.B #$01                          ;; 01D3E9 : A9 01       ; \ Extended sprite = Smoke puff 
ADDR_01D3EB:          STA.W RAM_ExSpriteNum,Y             ;; 01D3EB : 99 0B 17    ; / 
ADDR_01D3EE:          LDA.B #$0F                          ;; 01D3EE : A9 0F       ;
ADDR_01D3F0:          STA.W $176F,Y                       ;; 01D3F0 : 99 6F 17    ;
ADDR_01D3F3:          LDA.B #$01                          ;; 01D3F3 : A9 01       ; \ Play sound effect 
ADDR_01D3F5:          STA.W $1DF9                         ;; 01D3F5 : 8D F9 1D    ; / 
ADDR_01D3F8:          INC.W $1626,X                       ;; 01D3F8 : FE 26 16    ;
ADDR_01D3FB:          LDA.W $1626,X                       ;; 01D3FB : BD 26 16    ;
ADDR_01D3FE:          CMP.B #$0C                          ;; 01D3FE : C9 0C       ;
ADDR_01D400:          BCC CODE_01D405                     ;; 01D400 : 90 03       ;
ADDR_01D402:          JSR.W CODE_01CFD0                   ;; 01D402 : 20 D0 CF    ;
CODE_01D405:          DEY                                 ;; 01D405 : 88          ;
CODE_01D406:          CPY.B #$07                          ;; 01D406 : C0 07       ;
CODE_01D408:          BNE CODE_01D3BA                     ;; 01D408 : D0 B0       ;
Return01D40A:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01D40B:          LDA RAM_SpriteXLo,X                 ;; 01D40B : B5 E4       ;
CODE_01D40D:          SEC                                 ;; 01D40D : 38          ;
CODE_01D40E:          SBC.B #$08                          ;; 01D40E : E9 08       ;
CODE_01D410:          STA $04                             ;; 01D410 : 85 04       ;
CODE_01D412:          LDA.W RAM_SpriteXHi,X               ;; 01D412 : BD E0 14    ;
CODE_01D415:          SBC.B #$00                          ;; 01D415 : E9 00       ;
CODE_01D417:          STA $0A                             ;; 01D417 : 85 0A       ;
CODE_01D419:          LDA.B #$10                          ;; 01D419 : A9 10       ;
CODE_01D41B:          STA $06                             ;; 01D41B : 85 06       ;
CODE_01D41D:          LDA.B #$10                          ;; 01D41D : A9 10       ;
CODE_01D41F:          STA $07                             ;; 01D41F : 85 07       ;
CODE_01D421:          LDA.W $1602,X                       ;; 01D421 : BD 02 16    ;
CODE_01D424:          CMP.B #$69                          ;; 01D424 : C9 69       ;
CODE_01D426:          LDA.B #$08                          ;; 01D426 : A9 08       ;
CODE_01D428:          BCC CODE_01D42C                     ;; 01D428 : 90 02       ;
ADDR_01D42A:          ADC.B #$0A                          ;; 01D42A : 69 0A       ;
CODE_01D42C:          CLC                                 ;; 01D42C : 18          ;
CODE_01D42D:          ADC RAM_SpriteYLo,X                 ;; 01D42D : 75 D8       ;
CODE_01D42F:          STA $05                             ;; 01D42F : 85 05       ;
CODE_01D431:          LDA.W RAM_SpriteYHi,X               ;; 01D431 : BD D4 14    ;
CODE_01D434:          ADC.B #$00                          ;; 01D434 : 69 00       ;
CODE_01D436:          STA $0B                             ;; 01D436 : 85 0B       ;
Return01D438:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
DATA_01D439:          .db $A8,$B0,$B8,$C0,$C8             ;; 01D439               ;
                                                          ;;                      ;
ADDR_01D43E:          STZ.W $14C8,X                       ;; 01D43E : 9E C8 14    ; \ Unreachable 
Return01D441:         RTS                                 ;; ?QPWZ? : 60          ; / Erase sprite 
                                                          ;;                      ;
                                                          ;;                      ;
DATA_01D442:          .db $00,$F0,$00,$10                 ;; 01D442               ;
                                                          ;;                      ;
LudwigFireTiles:      .db $4A,$4C,$6A,$6C                 ;; ?QPWZ?               ;
                                                          ;;                      ;
DATA_01D44A:          .db $45,$45,$05,$05                 ;; 01D44A               ;
                                                          ;;                      ;
BossFireball:         LDA RAM_SpritesLocked               ;; ?QPWZ? : A5 9D       ;
CODE_01D450:          ORA.W $13FB                         ;; 01D450 : 0D FB 13    ;
CODE_01D453:          BNE CODE_01D487                     ;; 01D453 : D0 32       ;
CODE_01D455:          LDA.W $1540,X                       ;; 01D455 : BD 40 15    ;
CODE_01D458:          CMP.B #$10                          ;; 01D458 : C9 10       ;
CODE_01D45A:          BCS CODE_01D487                     ;; 01D45A : B0 2B       ;
CODE_01D45C:          TAY                                 ;; 01D45C : A8          ;
CODE_01D45D:          BNE CODE_01D468                     ;; 01D45D : D0 09       ;
CODE_01D45F:          JSR.W SetAnimationFrame             ;; 01D45F : 20 5F 8E    ;
CODE_01D462:          JSR.W SetAnimationFrame             ;; 01D462 : 20 5F 8E    ;
CODE_01D465:          JSR.W MarioSprInteractRt            ;; 01D465 : 20 E4 A7    ;
CODE_01D468:          JSR.W SubSprXPosNoGrvty             ;; 01D468 : 20 CC AB    ;
CODE_01D46B:          LDA RAM_SpriteXLo,X                 ;; 01D46B : B5 E4       ;
CODE_01D46D:          CLC                                 ;; 01D46D : 18          ;
CODE_01D46E:          ADC.B #$20                          ;; 01D46E : 69 20       ;
CODE_01D470:          STA $00                             ;; 01D470 : 85 00       ;
CODE_01D472:          LDA.W RAM_SpriteXHi,X               ;; 01D472 : BD E0 14    ;
CODE_01D475:          ADC.B #$00                          ;; 01D475 : 69 00       ;
CODE_01D477:          STA $01                             ;; 01D477 : 85 01       ;
CODE_01D479:          REP #$20                            ;; 01D479 : C2 20       ; Accum (16 bit) 
CODE_01D47B:          LDA $00                             ;; 01D47B : A5 00       ;
CODE_01D47D:          CMP.W #$0230                        ;; 01D47D : C9 30 02    ;
CODE_01D480:          SEP #$20                            ;; 01D480 : E2 20       ; Accum (8 bit) 
CODE_01D482:          BCC CODE_01D487                     ;; 01D482 : 90 03       ;
CODE_01D484:          STZ.W $14C8,X                       ;; 01D484 : 9E C8 14    ;
CODE_01D487:          JSR.W GetDrawInfoBnk1               ;; 01D487 : 20 65 A3    ;
CODE_01D48A:          LDA.W $1602,X                       ;; 01D48A : BD 02 16    ;
CODE_01D48D:          ASL                                 ;; 01D48D : 0A          ;
CODE_01D48E:          STA $03                             ;; 01D48E : 85 03       ;
CODE_01D490:          LDA.W RAM_SpriteDir,X               ;; 01D490 : BD 7C 15    ;
CODE_01D493:          ASL                                 ;; 01D493 : 0A          ;
CODE_01D494:          STA $02                             ;; 01D494 : 85 02       ;
CODE_01D496:          LDA.W DATA_01D439,X                 ;; 01D496 : BD 39 D4    ;
CODE_01D499:          STA.W RAM_SprOAMIndex,X             ;; 01D499 : 9D EA 15    ;
CODE_01D49C:          TAY                                 ;; 01D49C : A8          ;
CODE_01D49D:          PHX                                 ;; 01D49D : DA          ;
CODE_01D49E:          LDA.W $1540,X                       ;; 01D49E : BD 40 15    ;
CODE_01D4A1:          LDX.B #$01                          ;; 01D4A1 : A2 01       ;
CODE_01D4A3:          CMP.B #$08                          ;; 01D4A3 : C9 08       ;
CODE_01D4A5:          BCC CODE_01D4A8                     ;; 01D4A5 : 90 01       ;
CODE_01D4A7:          DEX                                 ;; 01D4A7 : CA          ;
CODE_01D4A8:          PHX                                 ;; 01D4A8 : DA          ;
CODE_01D4A9:          PHX                                 ;; 01D4A9 : DA          ;
CODE_01D4AA:          TXA                                 ;; 01D4AA : 8A          ;
CODE_01D4AB:          CLC                                 ;; 01D4AB : 18          ;
CODE_01D4AC:          ADC $02                             ;; 01D4AC : 65 02       ;
CODE_01D4AE:          TAX                                 ;; 01D4AE : AA          ;
CODE_01D4AF:          LDA $00                             ;; 01D4AF : A5 00       ;
CODE_01D4B1:          CLC                                 ;; 01D4B1 : 18          ;
CODE_01D4B2:          ADC.W DATA_01D442,X                 ;; 01D4B2 : 7D 42 D4    ;
CODE_01D4B5:          STA.W OAM_DispX,Y                   ;; 01D4B5 : 99 00 03    ;
CODE_01D4B8:          LDA RAM_FrameCounterB               ;; 01D4B8 : A5 14       ;
CODE_01D4BA:          LSR                                 ;; 01D4BA : 4A          ;
CODE_01D4BB:          LSR                                 ;; 01D4BB : 4A          ;
CODE_01D4BC:          ROR                                 ;; 01D4BC : 6A          ;
CODE_01D4BD:          AND.B #$80                          ;; 01D4BD : 29 80       ;
CODE_01D4BF:          ORA.W DATA_01D44A,X                 ;; 01D4BF : 1D 4A D4    ;
CODE_01D4C2:          STA.W OAM_Prop,Y                    ;; 01D4C2 : 99 03 03    ;
CODE_01D4C5:          LDA $01                             ;; 01D4C5 : A5 01       ;
CODE_01D4C7:          INC A                               ;; 01D4C7 : 1A          ;
CODE_01D4C8:          INC A                               ;; 01D4C8 : 1A          ;
CODE_01D4C9:          STA.W OAM_DispY,Y                   ;; 01D4C9 : 99 01 03    ;
CODE_01D4CC:          PLA                                 ;; 01D4CC : 68          ;
CODE_01D4CD:          CLC                                 ;; 01D4CD : 18          ;
CODE_01D4CE:          ADC $03                             ;; 01D4CE : 65 03       ;
CODE_01D4D0:          TAX                                 ;; 01D4D0 : AA          ;
CODE_01D4D1:          LDA.W LudwigFireTiles,X             ;; 01D4D1 : BD 46 D4    ;
CODE_01D4D4:          STA.W OAM_Tile,Y                    ;; 01D4D4 : 99 02 03    ;
CODE_01D4D7:          PLX                                 ;; 01D4D7 : FA          ;
CODE_01D4D8:          INY                                 ;; 01D4D8 : C8          ;
CODE_01D4D9:          INY                                 ;; 01D4D9 : C8          ;
CODE_01D4DA:          INY                                 ;; 01D4DA : C8          ;
CODE_01D4DB:          INY                                 ;; 01D4DB : C8          ;
CODE_01D4DC:          DEX                                 ;; 01D4DC : CA          ;
CODE_01D4DD:          BPL CODE_01D4A8                     ;; 01D4DD : 10 C9       ;
CODE_01D4DF:          PLX                                 ;; 01D4DF : FA          ;
CODE_01D4E0:          LDY.B #$02                          ;; 01D4E0 : A0 02       ;
CODE_01D4E2:          LDA.B #$01                          ;; 01D4E2 : A9 01       ;
CODE_01D4E4:          JMP.W FinishOAMWriteRt              ;; 01D4E4 : 4C BB B7    ;
                                                          ;;                      ;
                                                          ;;                      ;
DATA_01D4E7:          .db $01,$FF                         ;; 01D4E7               ;
                                                          ;;                      ;
DATA_01D4E9:          .db $0F,$00                         ;; 01D4E9               ;
                                                          ;;                      ;
DATA_01D4EB:          .db $00,$02,$04,$06,$08,$0A,$0C,$0E ;; 01D4EB               ;
                      .db $0E,$0C,$0A,$08,$06,$04,$02,$00 ;; ?QPWZ?               ;
                                                          ;;                      ;
ParachuteSprites:     LDA.W $14C8,X                       ;; ?QPWZ? : BD C8 14    ;
CODE_01D4FE:          CMP.B #$08                          ;; 01D4FE : C9 08       ;
CODE_01D500:          BEQ CODE_01D505                     ;; 01D500 : F0 03       ;
ADDR_01D502:          JMP.W CODE_01D671                   ;; 01D502 : 4C 71 D6    ;
                                                          ;;                      ;
CODE_01D505:          LDA RAM_SpritesLocked               ;; 01D505 : A5 9D       ; \ Branch if sprites locked 
CODE_01D507:          BNE CODE_01D558                     ;; 01D507 : D0 4F       ; / 
CODE_01D509:          LDA.W $1540,X                       ;; 01D509 : BD 40 15    ;
CODE_01D50C:          BNE CODE_01D558                     ;; 01D50C : D0 4A       ;
CODE_01D50E:          LDA RAM_FrameCounter                ;; 01D50E : A5 13       ;
CODE_01D510:          LSR                                 ;; 01D510 : 4A          ;
CODE_01D511:          BCC CODE_01D51A                     ;; 01D511 : 90 07       ;
CODE_01D513:          INC RAM_SpriteYLo,X                 ;; 01D513 : F6 D8       ;
CODE_01D515:          BNE CODE_01D51A                     ;; 01D515 : D0 03       ;
CODE_01D517:          INC.W RAM_SpriteYHi,X               ;; 01D517 : FE D4 14    ;
CODE_01D51A:          LDA.W $151C,X                       ;; 01D51A : BD 1C 15    ;
CODE_01D51D:          BNE CODE_01D558                     ;; 01D51D : D0 39       ;
CODE_01D51F:          LDA RAM_FrameCounter                ;; 01D51F : A5 13       ;
CODE_01D521:          LSR                                 ;; 01D521 : 4A          ;
CODE_01D522:          BCC CODE_01D53A                     ;; 01D522 : 90 16       ;
CODE_01D524:          LDA RAM_SpriteState,X               ;; 01D524 : B5 C2       ;
CODE_01D526:          AND.B #$01                          ;; 01D526 : 29 01       ;
CODE_01D528:          TAY                                 ;; 01D528 : A8          ;
CODE_01D529:          LDA.W $1570,X                       ;; 01D529 : BD 70 15    ;
CODE_01D52C:          CLC                                 ;; 01D52C : 18          ;
CODE_01D52D:          ADC.W DATA_01D4E7,Y                 ;; 01D52D : 79 E7 D4    ;
CODE_01D530:          STA.W $1570,X                       ;; 01D530 : 9D 70 15    ;
CODE_01D533:          CMP.W DATA_01D4E9,Y                 ;; 01D533 : D9 E9 D4    ;
CODE_01D536:          BNE CODE_01D53A                     ;; 01D536 : D0 02       ;
CODE_01D538:          INC RAM_SpriteState,X               ;; 01D538 : F6 C2       ;
CODE_01D53A:          LDA RAM_SpriteSpeedX,X              ;; 01D53A : B5 B6       ;
CODE_01D53C:          PHA                                 ;; 01D53C : 48          ;
CODE_01D53D:          LDY.W $1570,X                       ;; 01D53D : BC 70 15    ;
CODE_01D540:          LDA RAM_SpriteState,X               ;; 01D540 : B5 C2       ;
CODE_01D542:          LSR                                 ;; 01D542 : 4A          ;
CODE_01D543:          LDA.W DATA_01D4EB,Y                 ;; 01D543 : B9 EB D4    ;
CODE_01D546:          BCC CODE_01D54B                     ;; 01D546 : 90 03       ;
CODE_01D548:          EOR.B #$FF                          ;; 01D548 : 49 FF       ;
CODE_01D54A:          INC A                               ;; 01D54A : 1A          ;
CODE_01D54B:          CLC                                 ;; 01D54B : 18          ;
CODE_01D54C:          ADC RAM_SpriteSpeedX,X              ;; 01D54C : 75 B6       ;
CODE_01D54E:          STA RAM_SpriteSpeedX,X              ;; 01D54E : 95 B6       ;
CODE_01D550:          JSR.W SubSprXPosNoGrvty             ;; 01D550 : 20 CC AB    ;
CODE_01D553:          PLA                                 ;; 01D553 : 68          ;
CODE_01D554:          STA RAM_SpriteSpeedX,X              ;; 01D554 : 95 B6       ;
CODE_01D556:          BRA CODE_01D558                     ;; 01D556 : 80 00       ;
                                                          ;;                      ;
CODE_01D558:          JSR.W SubOffscreen0Bnk1             ;; 01D558 : 20 31 AC    ;
CODE_01D55B:          JMP.W CODE_01D5B3                   ;; 01D55B : 4C B3 D5    ;
                                                          ;;                      ;
                                                          ;;                      ;
DATA_01D55E:          .db $0D,$0D,$0D,$0D,$0C,$0C,$0C,$0C ;; 01D55E               ;
                      .db $0C,$0C,$0C,$0C,$0D,$0D,$0D,$0D ;; ?QPWZ?               ;
DATA_01D56E:          .db $00,$00,$00,$00,$00,$00,$00,$00 ;; 01D56E               ;
                      .db $01,$01,$01,$01,$01,$01,$01,$01 ;; ?QPWZ?               ;
DATA_01D57E:          .db $F8,$F8,$FA,$FA,$FC,$FC,$FE,$FE ;; 01D57E               ;
                      .db $02,$02,$04,$04,$06,$06,$08,$08 ;; ?QPWZ?               ;
DATA_01D58E:          .db $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF ;; 01D58E               ;
                      .db $00,$00,$00,$00,$00,$00,$00,$00 ;; ?QPWZ?               ;
DATA_01D59E:          .db $0E,$0E,$0F,$0F,$10,$10,$10,$10 ;; 01D59E               ;
                      .db $10,$10,$10,$10,$0F,$0F,$0E,$0E ;; ?QPWZ?               ;
DATA_01D5AE:          .db $0F,$0D                         ;; 01D5AE               ;
                                                          ;;                      ;
DATA_01D5B0:          .db $01,$05,$00                     ;; 01D5B0               ;
                                                          ;;                      ;
CODE_01D5B3:          STZ.W $185E                         ;; 01D5B3 : 9C 5E 18    ;
CODE_01D5B6:          LDY.B #$F0                          ;; 01D5B6 : A0 F0       ;
CODE_01D5B8:          LDA.W $1540,X                       ;; 01D5B8 : BD 40 15    ;
CODE_01D5BB:          BEQ CODE_01D5C7                     ;; 01D5BB : F0 0A       ;
CODE_01D5BD:          LSR                                 ;; 01D5BD : 4A          ;
CODE_01D5BE:          EOR.B #$0F                          ;; 01D5BE : 49 0F       ;
CODE_01D5C0:          STA.W $185E                         ;; 01D5C0 : 8D 5E 18    ;
CODE_01D5C3:          CLC                                 ;; 01D5C3 : 18          ;
CODE_01D5C4:          ADC.B #$F0                          ;; 01D5C4 : 69 F0       ;
CODE_01D5C6:          TAY                                 ;; 01D5C6 : A8          ;
CODE_01D5C7:          STY $00                             ;; 01D5C7 : 84 00       ;
CODE_01D5C9:          LDA RAM_SpriteYLo,X                 ;; 01D5C9 : B5 D8       ;
CODE_01D5CB:          PHA                                 ;; 01D5CB : 48          ;
CODE_01D5CC:          CLC                                 ;; 01D5CC : 18          ;
CODE_01D5CD:          ADC $00                             ;; 01D5CD : 65 00       ;
CODE_01D5CF:          STA RAM_SpriteYLo,X                 ;; 01D5CF : 95 D8       ;
CODE_01D5D1:          LDA.W RAM_SpriteYHi,X               ;; 01D5D1 : BD D4 14    ;
CODE_01D5D4:          PHA                                 ;; 01D5D4 : 48          ;
CODE_01D5D5:          ADC.B #$FF                          ;; 01D5D5 : 69 FF       ;
CODE_01D5D7:          STA.W RAM_SpriteYHi,X               ;; 01D5D7 : 9D D4 14    ;
CODE_01D5DA:          LDA.W RAM_SpritePal,X               ;; 01D5DA : BD F6 15    ;
CODE_01D5DD:          PHA                                 ;; 01D5DD : 48          ;
CODE_01D5DE:          AND.B #$F1                          ;; 01D5DE : 29 F1       ;
CODE_01D5E0:          ORA.B #$06                          ;; 01D5E0 : 09 06       ;
CODE_01D5E2:          STA.W RAM_SpritePal,X               ;; 01D5E2 : 9D F6 15    ;
CODE_01D5E5:          LDY.W $1570,X                       ;; 01D5E5 : BC 70 15    ;
CODE_01D5E8:          LDA.W DATA_01D55E,Y                 ;; 01D5E8 : B9 5E D5    ;
CODE_01D5EB:          STA.W $1602,X                       ;; 01D5EB : 9D 02 16    ;
CODE_01D5EE:          LDA.W DATA_01D56E,Y                 ;; 01D5EE : B9 6E D5    ;
CODE_01D5F1:          STA.W RAM_SpriteDir,X               ;; 01D5F1 : 9D 7C 15    ;
CODE_01D5F4:          JSR.W SubSprGfx2Entry1              ;; 01D5F4 : 20 0D 9F    ;
CODE_01D5F7:          PLA                                 ;; 01D5F7 : 68          ;
CODE_01D5F8:          STA.W RAM_SpritePal,X               ;; 01D5F8 : 9D F6 15    ;
CODE_01D5FB:          LDA.W RAM_SprOAMIndex,X             ;; 01D5FB : BD EA 15    ;
CODE_01D5FE:          CLC                                 ;; 01D5FE : 18          ;
CODE_01D5FF:          ADC.B #$04                          ;; 01D5FF : 69 04       ;
CODE_01D601:          STA.W RAM_SprOAMIndex,X             ;; 01D601 : 9D EA 15    ;
CODE_01D604:          LDY.W $1570,X                       ;; 01D604 : BC 70 15    ;
CODE_01D607:          LDA RAM_SpriteXLo,X                 ;; 01D607 : B5 E4       ;
CODE_01D609:          PHA                                 ;; 01D609 : 48          ;
CODE_01D60A:          CLC                                 ;; 01D60A : 18          ;
CODE_01D60B:          ADC.W DATA_01D57E,Y                 ;; 01D60B : 79 7E D5    ;
CODE_01D60E:          STA RAM_SpriteXLo,X                 ;; 01D60E : 95 E4       ;
CODE_01D610:          LDA.W RAM_SpriteXHi,X               ;; 01D610 : BD E0 14    ;
CODE_01D613:          PHA                                 ;; 01D613 : 48          ;
CODE_01D614:          ADC.W DATA_01D58E,Y                 ;; 01D614 : 79 8E D5    ;
CODE_01D617:          STA.W RAM_SpriteXHi,X               ;; 01D617 : 9D E0 14    ;
CODE_01D61A:          STZ $00                             ;; 01D61A : 64 00       ;
CODE_01D61C:          LDA.W DATA_01D59E,Y                 ;; 01D61C : B9 9E D5    ;
CODE_01D61F:          SEC                                 ;; 01D61F : 38          ;
CODE_01D620:          SBC.W $185E                         ;; 01D620 : ED 5E 18    ;
CODE_01D623:          BPL CODE_01D627                     ;; 01D623 : 10 02       ;
CODE_01D625:          DEC $00                             ;; 01D625 : C6 00       ;
CODE_01D627:          CLC                                 ;; 01D627 : 18          ;
CODE_01D628:          ADC RAM_SpriteYLo,X                 ;; 01D628 : 75 D8       ;
CODE_01D62A:          STA RAM_SpriteYLo,X                 ;; 01D62A : 95 D8       ;
CODE_01D62C:          LDA.W RAM_SpriteYHi,X               ;; 01D62C : BD D4 14    ;
CODE_01D62F:          ADC $00                             ;; 01D62F : 65 00       ;
CODE_01D631:          STA.W RAM_SpriteYHi,X               ;; 01D631 : 9D D4 14    ;
CODE_01D634:          LDA.W $1602,X                       ;; 01D634 : BD 02 16    ;
CODE_01D637:          SEC                                 ;; 01D637 : 38          ;
CODE_01D638:          SBC.B #$0C                          ;; 01D638 : E9 0C       ;
CODE_01D63A:          CMP.B #$01                          ;; 01D63A : C9 01       ;
CODE_01D63C:          BNE CODE_01D642                     ;; 01D63C : D0 04       ;
CODE_01D63E:          CLC                                 ;; 01D63E : 18          ;
CODE_01D63F:          ADC.W RAM_SpriteDir,X               ;; 01D63F : 7D 7C 15    ;
CODE_01D642:          STA.W $1602,X                       ;; 01D642 : 9D 02 16    ;
CODE_01D645:          LDA.W $1540,X                       ;; 01D645 : BD 40 15    ;
CODE_01D648:          BEQ CODE_01D64D                     ;; 01D648 : F0 03       ;
CODE_01D64A:          STZ.W $1602,X                       ;; 01D64A : 9E 02 16    ;
CODE_01D64D:          LDY.W $1602,X                       ;; 01D64D : BC 02 16    ;
CODE_01D650:          LDA.W DATA_01D5B0,Y                 ;; 01D650 : B9 B0 D5    ;
CODE_01D653:          JSR.W SubSprGfx0Entry0              ;; 01D653 : 20 F3 9C    ;
CODE_01D656:          JSR.W SubSprSpr+MarioSpr            ;; 01D656 : 20 C1 8F    ;
CODE_01D659:          LDA.W $1540,X                       ;; 01D659 : BD 40 15    ;
CODE_01D65C:          BEQ CODE_01D693                     ;; 01D65C : F0 35       ;
CODE_01D65E:          DEC A                               ;; 01D65E : 3A          ;
CODE_01D65F:          BNE CODE_01D681                     ;; 01D65F : D0 20       ;
CODE_01D661:          STZ RAM_SpriteSpeedY,X              ;; 01D661 : 74 AA       ; Sprite Y Speed = 0 
CODE_01D663:          PLA                                 ;; 01D663 : 68          ;
CODE_01D664:          PLA                                 ;; 01D664 : 68          ;
CODE_01D665:          PLA                                 ;; 01D665 : 68          ;
CODE_01D666:          STA.W RAM_SpriteYHi,X               ;; 01D666 : 9D D4 14    ;
CODE_01D669:          PLA                                 ;; 01D669 : 68          ;
CODE_01D66A:          STA RAM_SpriteYLo,X                 ;; 01D66A : 95 D8       ;
CODE_01D66C:          LDA.B #$80                          ;; 01D66C : A9 80       ;
CODE_01D66E:          STA.W $1540,X                       ;; 01D66E : 9D 40 15    ;
CODE_01D671:          LDA RAM_SpriteNum,X                 ;; 01D671 : B5 9E       ;
CODE_01D673:          SEC                                 ;; 01D673 : 38          ;
CODE_01D674:          SBC.B #$3F                          ;; 01D674 : E9 3F       ;
CODE_01D676:          TAY                                 ;; 01D676 : A8          ;
CODE_01D677:          LDA.W DATA_01D5AE,Y                 ;; 01D677 : B9 AE D5    ;
CODE_01D67A:          STA RAM_SpriteNum,X                 ;; 01D67A : 95 9E       ;
CODE_01D67C:          JSL.L LoadSpriteTables              ;; 01D67C : 22 8B F7 07 ;
Return01D680:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01D681:          JSR.W CODE_019140                   ;; 01D681 : 20 40 91    ;
CODE_01D684:          JSR.W IsOnGround                    ;; 01D684 : 20 0E 80    ;
CODE_01D687:          BEQ CODE_01D68C                     ;; 01D687 : F0 03       ;
CODE_01D689:          JSR.W SetSomeYSpeed??               ;; 01D689 : 20 04 9A    ;
CODE_01D68C:          JSR.W SubSprYPosNoGrvty             ;; 01D68C : 20 D8 AB    ;
CODE_01D68F:          INC RAM_SpriteSpeedY,X              ;; 01D68F : F6 AA       ;
CODE_01D691:          BRA CODE_01D6B5                     ;; 01D691 : 80 22       ;
                                                          ;;                      ;
CODE_01D693:          TXA                                 ;; 01D693 : 8A          ;
CODE_01D694:          EOR RAM_FrameCounter                ;; 01D694 : 45 13       ;
CODE_01D696:          LSR                                 ;; 01D696 : 4A          ;
CODE_01D697:          BCC CODE_01D6B5                     ;; 01D697 : 90 1C       ;
CODE_01D699:          JSR.W CODE_019140                   ;; 01D699 : 20 40 91    ;
CODE_01D69C:          JSR.W IsTouchingObjSide             ;; 01D69C : 20 08 80    ;
CODE_01D69F:          BEQ CODE_01D6AB                     ;; 01D69F : F0 0A       ;
ADDR_01D6A1:          LDA.B #$01                          ;; 01D6A1 : A9 01       ;
ADDR_01D6A3:          STA.W $151C,X                       ;; 01D6A3 : 9D 1C 15    ;
ADDR_01D6A6:          LDA.B #$07                          ;; 01D6A6 : A9 07       ;
ADDR_01D6A8:          STA.W $1570,X                       ;; 01D6A8 : 9D 70 15    ;
CODE_01D6AB:          JSR.W IsOnGround                    ;; 01D6AB : 20 0E 80    ;
CODE_01D6AE:          BEQ CODE_01D6B5                     ;; 01D6AE : F0 05       ;
CODE_01D6B0:          LDA.B #$20                          ;; 01D6B0 : A9 20       ;
CODE_01D6B2:          STA.W $1540,X                       ;; 01D6B2 : 9D 40 15    ;
CODE_01D6B5:          PLA                                 ;; 01D6B5 : 68          ;
CODE_01D6B6:          STA.W RAM_SpriteXHi,X               ;; 01D6B6 : 9D E0 14    ;
CODE_01D6B9:          PLA                                 ;; 01D6B9 : 68          ;
CODE_01D6BA:          STA RAM_SpriteXLo,X                 ;; 01D6BA : 95 E4       ;
CODE_01D6BC:          PLA                                 ;; 01D6BC : 68          ;
CODE_01D6BD:          STA.W RAM_SpriteYHi,X               ;; 01D6BD : 9D D4 14    ;
CODE_01D6C0:          PLA                                 ;; 01D6C0 : 68          ;
CODE_01D6C1:          STA RAM_SpriteYLo,X                 ;; 01D6C1 : 95 D8       ;
Return01D6C3:         RTS                                 ;; ?QPWZ? : 60          ;
                                                          ;;                      ;
InitLineRope:         CPX.B #$06                          ;; ?QPWZ? : E0 06       ;
CODE_01D6C6:          BCC CODE_01D6E0                     ;; 01D6C6 : 90 18       ;
CODE_01D6C8:          LDA.W $1692                         ;; 01D6C8 : AD 92 16    ;
CODE_01D6CB:          BEQ CODE_01D6E0                     ;; 01D6CB : F0 13       ;
CODE_01D6CD:          INC.W RAM_Tweaker1662,X             ;; 01D6CD : FE 62 16    ;
CODE_01D6D0:          BRA CODE_01D6E0                     ;; 01D6D0 : 80 0E       ;
                                                          ;;                      ;
InitLinePlat:         LDA RAM_SpriteXLo,X                 ;; ?QPWZ? : B5 E4       ;
CODE_01D6D4:          AND.B #$10                          ;; 01D6D4 : 29 10       ;
CODE_01D6D6:          EOR.B #$10                          ;; 01D6D6 : 49 10       ;
CODE_01D6D8:          STA.W $1602,X                       ;; 01D6D8 : 9D 02 16    ;
CODE_01D6DB:          BEQ CODE_01D6E0                     ;; 01D6DB : F0 03       ;
CODE_01D6DD:          INC.W RAM_Tweaker1662,X             ;; 01D6DD : FE 62 16    ;
CODE_01D6E0:          INC.W $1540,X                       ;; 01D6E0 : FE 40 15    ;
CODE_01D6E3:          JSR.W LineFuzzy+Plats               ;; 01D6E3 : 20 4A D7    ;
CODE_01D6E6:          JSR.W LineFuzzy+Plats               ;; 01D6E6 : 20 4A D7    ;
CODE_01D6E9:          INC.W $1626,X                       ;; 01D6E9 : FE 26 16    ;
Return01D6EC:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
InitLineGuidedSpr:    INC.W $187B,X                       ;; ?QPWZ? : FE 7B 18    ;
CODE_01D6F0:          LDA RAM_SpriteXLo,X                 ;; 01D6F0 : B5 E4       ;
CODE_01D6F2:          AND.B #$10                          ;; 01D6F2 : 29 10       ;
CODE_01D6F4:          BNE CODE_01D707                     ;; 01D6F4 : D0 11       ;
CODE_01D6F6:          LDA RAM_SpriteXLo,X                 ;; 01D6F6 : B5 E4       ;
CODE_01D6F8:          SEC                                 ;; 01D6F8 : 38          ;
CODE_01D6F9:          SBC.B #$40                          ;; 01D6F9 : E9 40       ;
CODE_01D6FB:          STA RAM_SpriteXLo,X                 ;; 01D6FB : 95 E4       ;
CODE_01D6FD:          LDA.W RAM_SpriteXHi,X               ;; 01D6FD : BD E0 14    ;
CODE_01D700:          SBC.B #$01                          ;; 01D700 : E9 01       ;
CODE_01D702:          STA.W RAM_SpriteXHi,X               ;; 01D702 : 9D E0 14    ;
CODE_01D705:          BRA InitLineBrwnPlat                ;; 01D705 : 80 0A       ;
                                                          ;;                      ;
CODE_01D707:          INC.W RAM_SpriteDir,X               ;; 01D707 : FE 7C 15    ;
CODE_01D70A:          LDA RAM_SpriteXLo,X                 ;; 01D70A : B5 E4       ;
CODE_01D70C:          CLC                                 ;; 01D70C : 18          ;
CODE_01D70D:          ADC.B #$0F                          ;; 01D70D : 69 0F       ;
CODE_01D70F:          STA RAM_SpriteXLo,X                 ;; 01D70F : 95 E4       ;
InitLineBrwnPlat:     LDA.B #$02                          ;; ?QPWZ? : A9 02       ;
CODE_01D713:          STA.W $1540,X                       ;; 01D713 : 9D 40 15    ;
Return01D716:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
DATA_01D717:          .db $F8,$00                         ;; 01D717               ;
                                                          ;;                      ;
LineRope+Chainsaw:    TXA                                 ;; ?QPWZ? : 8A          ;
CODE_01D71A:          ASL                                 ;; 01D71A : 0A          ;
CODE_01D71B:          ASL                                 ;; 01D71B : 0A          ;
CODE_01D71C:          EOR RAM_FrameCounterB               ;; 01D71C : 45 14       ;
CODE_01D71E:          STA $02                             ;; 01D71E : 85 02       ;
CODE_01D720:          AND.B #$07                          ;; 01D720 : 29 07       ;
CODE_01D722:          ORA RAM_SpritesLocked               ;; 01D722 : 05 9D       ;
CODE_01D724:          BNE LineGrinder                     ;; 01D724 : D0 14       ;
CODE_01D726:          LDA $02                             ;; 01D726 : A5 02       ;
CODE_01D728:          LSR                                 ;; 01D728 : 4A          ;
CODE_01D729:          LSR                                 ;; 01D729 : 4A          ;
CODE_01D72A:          LSR                                 ;; 01D72A : 4A          ;
CODE_01D72B:          AND.B #$01                          ;; 01D72B : 29 01       ;
CODE_01D72D:          TAY                                 ;; 01D72D : A8          ;
CODE_01D72E:          LDA.W DATA_01D717,Y                 ;; 01D72E : B9 17 D7    ;
CODE_01D731:          STA $00                             ;; 01D731 : 85 00       ;
CODE_01D733:          LDA.B #$F2                          ;; 01D733 : A9 F2       ;
CODE_01D735:          STA $01                             ;; 01D735 : 85 01       ;
CODE_01D737:          JSR.W CODE_018063                   ;; 01D737 : 20 63 80    ;
LineGrinder:          LDA RAM_FrameCounter                ;; ?QPWZ? : A5 13       ;
CODE_01D73C:          AND.B #$07                          ;; 01D73C : 29 07       ;
CODE_01D73E:          ORA.W $1626,X                       ;; 01D73E : 1D 26 16    ;
CODE_01D741:          ORA RAM_SpritesLocked               ;; 01D741 : 05 9D       ;
CODE_01D743:          BNE LineFuzzy+Plats                 ;; 01D743 : D0 05       ;
CODE_01D745:          LDA.B #$04                          ;; 01D745 : A9 04       ; \ Play sound effect 
CODE_01D747:          STA.W $1DFA                         ;; 01D747 : 8D FA 1D    ; / 
LineFuzzy+Plats:      JMP.W CODE_01D9A7                   ;; ?QPWZ? : 4C A7 D9    ;
                                                          ;;                      ;
CODE_01D74D:          JSR.W SubOffscreen1Bnk1             ;; 01D74D : 20 2B AC    ;
CODE_01D750:          LDA.W $1540,X                       ;; 01D750 : BD 40 15    ;
CODE_01D753:          BNE CODE_01D75C                     ;; 01D753 : D0 07       ;
CODE_01D755:          LDA RAM_SpritesLocked               ;; 01D755 : A5 9D       ;
CODE_01D757:          ORA.W $1626,X                       ;; 01D757 : 1D 26 16    ;
CODE_01D75A:          BNE Return01D6EC                    ;; 01D75A : D0 90       ;
CODE_01D75C:          LDA RAM_SpriteState,X               ;; 01D75C : B5 C2       ;
CODE_01D75E:          JSL.L ExecutePtr                    ;; 01D75E : 22 DF 86 00 ;
                                                          ;;                      ;
Ptrs01D762:           .dw CODE_01D7F4                     ;; ?QPWZ? : F4 D7       ;
                      .dw CODE_01D768                     ;; ?QPWZ? : 68 D7       ;
                      .dw CODE_01DB44                     ;; ?QPWZ? : 44 DB       ;
                                                          ;;                      ;
CODE_01D768:          LDA RAM_SpritesLocked               ;; 01D768 : A5 9D       ; \ Branch if sprites locked 
CODE_01D76A:          BNE Return01D791                    ;; 01D76A : D0 25       ; / 
CODE_01D76C:          LDA.W RAM_SpriteDir,X               ;; 01D76C : BD 7C 15    ;
CODE_01D76F:          BNE CODE_01D792                     ;; 01D76F : D0 21       ;
CODE_01D771:          LDY.W $1534,X                       ;; 01D771 : BC 34 15    ;
CODE_01D774:          JSR.W CODE_01D7B0                   ;; 01D774 : 20 B0 D7    ;
CODE_01D777:          INC.W $1534,X                       ;; 01D777 : FE 34 15    ;
CODE_01D77A:          LDA.W $187B,X                       ;; 01D77A : BD 7B 18    ;
CODE_01D77D:          BEQ CODE_01D787                     ;; 01D77D : F0 08       ;
CODE_01D77F:          LDA RAM_FrameCounter                ;; 01D77F : A5 13       ;
CODE_01D781:          LSR                                 ;; 01D781 : 4A          ;
CODE_01D782:          BCC CODE_01D787                     ;; 01D782 : 90 03       ;
CODE_01D784:          INC.W $1534,X                       ;; 01D784 : FE 34 15    ;
CODE_01D787:          LDA.W $1534,X                       ;; 01D787 : BD 34 15    ;
CODE_01D78A:          CMP.W $1570,X                       ;; 01D78A : DD 70 15    ;
CODE_01D78D:          BCC Return01D791                    ;; 01D78D : 90 02       ;
CODE_01D78F:          STZ RAM_SpriteState,X               ;; 01D78F : 74 C2       ;
Return01D791:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01D792:          LDY.W $1570,X                       ;; 01D792 : BC 70 15    ;
CODE_01D795:          DEY                                 ;; 01D795 : 88          ;
CODE_01D796:          JSR.W CODE_01D7B0                   ;; 01D796 : 20 B0 D7    ;
CODE_01D799:          DEC.W $1570,X                       ;; 01D799 : DE 70 15    ;
CODE_01D79C:          BEQ CODE_01D7AD                     ;; 01D79C : F0 0F       ;
CODE_01D79E:          LDA.W $187B,X                       ;; 01D79E : BD 7B 18    ;
CODE_01D7A1:          BEQ Return01D7AF                    ;; 01D7A1 : F0 0C       ;
CODE_01D7A3:          LDA RAM_FrameCounter                ;; 01D7A3 : A5 13       ;
CODE_01D7A5:          LSR                                 ;; 01D7A5 : 4A          ;
CODE_01D7A6:          BCC Return01D7AF                    ;; 01D7A6 : 90 07       ;
CODE_01D7A8:          DEC.W $1570,X                       ;; 01D7A8 : DE 70 15    ;
CODE_01D7AB:          BNE Return01D7AF                    ;; 01D7AB : D0 02       ;
CODE_01D7AD:          STZ RAM_SpriteState,X               ;; 01D7AD : 74 C2       ;
Return01D7AF:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01D7B0:          PHB                                 ;; 01D7B0 : 8B          ; Sprites calling this routine must be modified 
CODE_01D7B1:          LDA.B #$07                          ;; 01D7B1 : A9 07       ; to set $151C,x and $1528,x to a location in 
CODE_01D7B3:          PHA                                 ;; 01D7B3 : 48          ; LineTable instead of $07/F9DB+something 
CODE_01D7B4:          PLB                                 ;; 01D7B4 : AB          ;
CODE_01D7B5:          LDA.W $151C,X                       ;; 01D7B5 : BD 1C 15    ;
CODE_01D7B8:          STA $04                             ;; 01D7B8 : 85 04       ;
CODE_01D7BA:          LDA.W $1528,X                       ;; 01D7BA : BD 28 15    ;
CODE_01D7BD:          STA $05                             ;; 01D7BD : 85 05       ;
CODE_01D7BF:          LDA ($04),Y                         ;; 01D7BF : B1 04       ;
CODE_01D7C1:          AND.B #$0F                          ;; 01D7C1 : 29 0F       ;
CODE_01D7C3:          STA $06                             ;; 01D7C3 : 85 06       ;
CODE_01D7C5:          LDA ($04),Y                         ;; 01D7C5 : B1 04       ;
CODE_01D7C7:          PLB                                 ;; 01D7C7 : AB          ;
CODE_01D7C8:          LSR                                 ;; 01D7C8 : 4A          ;
CODE_01D7C9:          LSR                                 ;; 01D7C9 : 4A          ;
CODE_01D7CA:          LSR                                 ;; 01D7CA : 4A          ;
CODE_01D7CB:          LSR                                 ;; 01D7CB : 4A          ;
CODE_01D7CC:          STA $07                             ;; 01D7CC : 85 07       ;
CODE_01D7CE:          LDA RAM_SpriteYLo,X                 ;; 01D7CE : B5 D8       ;
CODE_01D7D0:          AND.B #$F0                          ;; 01D7D0 : 29 F0       ;
CODE_01D7D2:          CLC                                 ;; 01D7D2 : 18          ;
CODE_01D7D3:          ADC $07                             ;; 01D7D3 : 65 07       ;
CODE_01D7D5:          STA RAM_SpriteYLo,X                 ;; 01D7D5 : 95 D8       ;
CODE_01D7D7:          LDA RAM_SpriteXLo,X                 ;; 01D7D7 : B5 E4       ;
CODE_01D7D9:          AND.B #$F0                          ;; 01D7D9 : 29 F0       ;
CODE_01D7DB:          CLC                                 ;; 01D7DB : 18          ;
CODE_01D7DC:          ADC $06                             ;; 01D7DC : 65 06       ;
CODE_01D7DE:          STA RAM_SpriteXLo,X                 ;; 01D7DE : 95 E4       ;
Return01D7E0:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
DATA_01D7E1:          .db $FC,$04,$FC,$04                 ;; 01D7E1               ;
                                                          ;;                      ;
DATA_01D7E5:          .db $FF,$00,$FF,$00                 ;; 01D7E5               ;
                                                          ;;                      ;
DATA_01D7E9:          .db $FC,$FC,$04,$04                 ;; 01D7E9               ;
                                                          ;;                      ;
DATA_01D7ED:          .db $FF,$FF,$00,$00                 ;; 01D7ED               ;
                                                          ;;                      ;
CODE_01D7F1:          JMP.W CODE_01D89F                   ;; 01D7F1 : 4C 9F D8    ;
                                                          ;;                      ;
CODE_01D7F4:          LDY.B #$03                          ;; 01D7F4 : A0 03       ;
CODE_01D7F6:          STY.W $1695                         ;; 01D7F6 : 8C 95 16    ;
CODE_01D7F9:          LDA RAM_SpriteXLo,X                 ;; 01D7F9 : B5 E4       ;
CODE_01D7FB:          CLC                                 ;; 01D7FB : 18          ;
CODE_01D7FC:          ADC.W DATA_01D7E1,Y                 ;; 01D7FC : 79 E1 D7    ;
CODE_01D7FF:          STA $02                             ;; 01D7FF : 85 02       ;
CODE_01D801:          LDA.W RAM_SpriteXHi,X               ;; 01D801 : BD E0 14    ;
CODE_01D804:          ADC.W DATA_01D7E5,Y                 ;; 01D804 : 79 E5 D7    ;
CODE_01D807:          STA $03                             ;; 01D807 : 85 03       ;
CODE_01D809:          LDA RAM_SpriteYLo,X                 ;; 01D809 : B5 D8       ;
CODE_01D80B:          CLC                                 ;; 01D80B : 18          ;
CODE_01D80C:          ADC.W DATA_01D7E9,Y                 ;; 01D80C : 79 E9 D7    ;
CODE_01D80F:          STA $00                             ;; 01D80F : 85 00       ;
CODE_01D811:          LDA.W RAM_SpriteYHi,X               ;; 01D811 : BD D4 14    ;
CODE_01D814:          ADC.W DATA_01D7ED,Y                 ;; 01D814 : 79 ED D7    ;
CODE_01D817:          STA $01                             ;; 01D817 : 85 01       ;
CODE_01D819:          LDA.W $1540,X                       ;; 01D819 : BD 40 15    ;
CODE_01D81C:          BNE CODE_01D83A                     ;; 01D81C : D0 1C       ;
CODE_01D81E:          LDA $00                             ;; 01D81E : A5 00       ;
CODE_01D820:          AND.B #$F0                          ;; 01D820 : 29 F0       ;
CODE_01D822:          STA $04                             ;; 01D822 : 85 04       ;
CODE_01D824:          LDA RAM_SpriteYLo,X                 ;; 01D824 : B5 D8       ;
CODE_01D826:          AND.B #$F0                          ;; 01D826 : 29 F0       ;
CODE_01D828:          CMP $04                             ;; 01D828 : C5 04       ;
CODE_01D82A:          BNE CODE_01D83A                     ;; 01D82A : D0 0E       ;
CODE_01D82C:          LDA $02                             ;; 01D82C : A5 02       ;
CODE_01D82E:          AND.B #$F0                          ;; 01D82E : 29 F0       ;
CODE_01D830:          STA $05                             ;; 01D830 : 85 05       ;
CODE_01D832:          LDA RAM_SpriteXLo,X                 ;; 01D832 : B5 E4       ;
CODE_01D834:          AND.B #$F0                          ;; 01D834 : 29 F0       ;
CODE_01D836:          CMP $05                             ;; 01D836 : C5 05       ;
CODE_01D838:          BEQ CODE_01D861                     ;; 01D838 : F0 27       ;
CODE_01D83A:          JSR.W CODE_01D94D                   ;; 01D83A : 20 4D D9    ;WIERD ROUTINE INVOLVING POSITIONS.  ALL VARIABLES SET ABOVE...         
CODE_01D83D:          BNE CODE_01D7F1                     ;; 01D83D : D0 B2       ;
CODE_01D83F:          LDA.W $1693                         ;; 01D83F : AD 93 16    ;"# OF CUSTOM BLOCK???"               
CODE_01D842:          CMP.B #$94                          ;; 01D842 : C9 94       ;
CODE_01D844:          BEQ CODE_01D851                     ;; 01D844 : F0 0B       ;
CODE_01D846:          CMP.B #$95                          ;; 01D846 : C9 95       ;
CODE_01D848:          BNE CODE_01D856                     ;; 01D848 : D0 0C       ;
CODE_01D84A:          LDA.W RAM_OnOffStatus               ;; 01D84A : AD AF 14    ;
CODE_01D84D:          BEQ CODE_01D861                     ;; 01D84D : F0 12       ;
CODE_01D84F:          BNE CODE_01D856                     ;; 01D84F : D0 05       ;
CODE_01D851:          LDA.W RAM_OnOffStatus               ;; 01D851 : AD AF 14    ;
CODE_01D854:          BNE CODE_01D861                     ;; 01D854 : D0 0B       ;
CODE_01D856:          LDA.W $1693                         ;; 01D856 : AD 93 16    ;
CODE_01D859:          CMP.B #$76                          ;; 01D859 : C9 76       ;
CODE_01D85B:          BCC CODE_01D861                     ;; 01D85B : 90 04       ;
CODE_01D85D:          CMP.B #$9A                          ;; 01D85D : C9 9A       ;
CODE_01D85F:          BCC CODE_01D895                     ;; 01D85F : 90 34       ;
CODE_01D861:          LDY.W $1695                         ;; 01D861 : AC 95 16    ;
CODE_01D864:          DEY                                 ;; 01D864 : 88          ;
CODE_01D865:          BPL CODE_01D7F6                     ;; 01D865 : 10 8F       ;
CODE_01D867:          LDA RAM_SpriteState,X               ;; 01D867 : B5 C2       ;
CODE_01D869:          CMP.B #$02                          ;; 01D869 : C9 02       ; ?? #00 - platforms stop at end rather than fall off 
CODE_01D86B:          BEQ Return01D894                    ;; 01D86B : F0 27       ;
CODE_01D86D:          LDA.B #$02                          ;; 01D86D : A9 02       ;
CODE_01D86F:          STA RAM_SpriteState,X               ;; 01D86F : 95 C2       ;
CODE_01D871:          LDY.W $160E,X                       ;; 01D871 : BC 0E 16    ;
CODE_01D874:          LDA.W RAM_SpriteDir,X               ;; 01D874 : BD 7C 15    ;
CODE_01D877:          BEQ CODE_01D87E                     ;; 01D877 : F0 05       ;
CODE_01D879:          TYA                                 ;; 01D879 : 98          ;
CODE_01D87A:          CLC                                 ;; 01D87A : 18          ;
CODE_01D87B:          ADC.B #$20                          ;; 01D87B : 69 20       ;
CODE_01D87D:          TAY                                 ;; 01D87D : A8          ;
CODE_01D87E:          LDA.W DATA_01DD11,Y                 ;; 01D87E : B9 11 DD    ;
CODE_01D881:          BPL CODE_01D884                     ;; 01D881 : 10 01       ;
CODE_01D883:          ASL                                 ;; 01D883 : 0A          ;
CODE_01D884:          PHY                                 ;; 01D884 : 5A          ;
CODE_01D885:          ASL                                 ;; 01D885 : 0A          ;
CODE_01D886:          STA RAM_SpriteSpeedY,X              ;; 01D886 : 95 AA       ;SPEED SETTINGS!   
CODE_01D888:          PLY                                 ;; 01D888 : 7A          ;
CODE_01D889:          LDA.W DATA_01DD51,Y                 ;; 01D889 : B9 51 DD    ;
CODE_01D88C:          ASL                                 ;; 01D88C : 0A          ;
CODE_01D88D:          STA RAM_SpriteSpeedX,X              ;; 01D88D : 95 B6       ;
CODE_01D88F:          LDA.B #$10                          ;; 01D88F : A9 10       ;
CODE_01D891:          STA.W $1540,X                       ;; 01D891 : 9D 40 15    ;
Return01D894:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01D895:          PHA                                 ;; 01D895 : 48          ;
CODE_01D896:          SEC                                 ;; 01D896 : 38          ;
CODE_01D897:          SBC.B #$76                          ;; 01D897 : E9 76       ;
CODE_01D899:          TAY                                 ;; 01D899 : A8          ;
CODE_01D89A:          PLA                                 ;; 01D89A : 68          ;
CODE_01D89B:          CMP.B #$96                          ;; 01D89B : C9 96       ;
CODE_01D89D:          BCC CODE_01D8A4                     ;; 01D89D : 90 05       ;
CODE_01D89F:          LDY.W $160E,X                       ;; 01D89F : BC 0E 16    ;
CODE_01D8A2:          BRA CODE_01D8C8                     ;; 01D8A2 : 80 24       ;
                                                          ;;                      ;
CODE_01D8A4:          LDA RAM_SpriteYLo,X                 ;; 01D8A4 : B5 D8       ;
CODE_01D8A6:          STA $08                             ;; 01D8A6 : 85 08       ;
CODE_01D8A8:          LDA.W RAM_SpriteYHi,X               ;; 01D8A8 : BD D4 14    ;
CODE_01D8AB:          STA $09                             ;; 01D8AB : 85 09       ;
CODE_01D8AD:          LDA RAM_SpriteXLo,X                 ;; 01D8AD : B5 E4       ;
CODE_01D8AF:          STA $0A                             ;; 01D8AF : 85 0A       ;
CODE_01D8B1:          LDA.W RAM_SpriteXHi,X               ;; 01D8B1 : BD E0 14    ;
CODE_01D8B4:          STA $0B                             ;; 01D8B4 : 85 0B       ;
CODE_01D8B6:          LDA $00                             ;; 01D8B6 : A5 00       ;
CODE_01D8B8:          STA RAM_SpriteYLo,X                 ;; 01D8B8 : 95 D8       ;
CODE_01D8BA:          LDA $01                             ;; 01D8BA : A5 01       ;
CODE_01D8BC:          STA.W RAM_SpriteYHi,X               ;; 01D8BC : 9D D4 14    ;
CODE_01D8BF:          LDA $02                             ;; 01D8BF : A5 02       ;
CODE_01D8C1:          STA RAM_SpriteXLo,X                 ;; 01D8C1 : 95 E4       ;
CODE_01D8C3:          LDA $03                             ;; 01D8C3 : A5 03       ;
CODE_01D8C5:          STA.W RAM_SpriteXHi,X               ;; 01D8C5 : 9D E0 14    ;
CODE_01D8C8:          PHB                                 ;; 01D8C8 : 8B          ;
CODE_01D8C9:          LDA.B #$07                          ;; 01D8C9 : A9 07       ;
CODE_01D8CB:          PHA                                 ;; 01D8CB : 48          ;
CODE_01D8CC:          PLB                                 ;; 01D8CC : AB          ;
CODE_01D8CD:          LDA.W CODE_01FBF3,Y                 ;; 01D8CD : B9 F3 FB    ;
CODE_01D8D0:          STA.W $151C,X                       ;; 01D8D0 : 9D 1C 15    ;
CODE_01D8D3:          LDA.W CODE_01FC13,Y                 ;; 01D8D3 : B9 13 FC    ;
CODE_01D8D6:          STA.W $1528,X                       ;; 01D8D6 : 9D 28 15    ;
CODE_01D8D9:          PLB                                 ;; 01D8D9 : AB          ;
CODE_01D8DA:          LDA.W DATA_01DCD1,Y                 ;; 01D8DA : B9 D1 DC    ;
CODE_01D8DD:          STA.W $1570,X                       ;; 01D8DD : 9D 70 15    ;
CODE_01D8E0:          STZ.W $1534,X                       ;; 01D8E0 : 9E 34 15    ;
CODE_01D8E3:          TYA                                 ;; 01D8E3 : 98          ;
CODE_01D8E4:          STA.W $160E,X                       ;; 01D8E4 : 9D 0E 16    ;
CODE_01D8E7:          LDA.W $1540,X                       ;; 01D8E7 : BD 40 15    ;
CODE_01D8EA:          BNE CODE_01D933                     ;; 01D8EA : D0 47       ;
CODE_01D8EC:          STZ.W RAM_SpriteDir,X               ;; 01D8EC : 9E 7C 15    ;
CODE_01D8EF:          LDA.W DATA_01DCF1,Y                 ;; 01D8EF : B9 F1 DC    ;
CODE_01D8F2:          BEQ CODE_01D8FF                     ;; 01D8F2 : F0 0B       ;
CODE_01D8F4:          TAY                                 ;; 01D8F4 : A8          ;
CODE_01D8F5:          LDA RAM_SpriteYLo,X                 ;; 01D8F5 : B5 D8       ;
CODE_01D8F7:          CPY.B #$01                          ;; 01D8F7 : C0 01       ;
CODE_01D8F9:          BNE CODE_01D8FD                     ;; 01D8F9 : D0 02       ;
CODE_01D8FB:          EOR.B #$0F                          ;; 01D8FB : 49 0F       ;
CODE_01D8FD:          BRA CODE_01D901                     ;; 01D8FD : 80 02       ;
                                                          ;;                      ;
CODE_01D8FF:          LDA RAM_SpriteXLo,X                 ;; 01D8FF : B5 E4       ;
CODE_01D901:          AND.B #$0F                          ;; 01D901 : 29 0F       ;
CODE_01D903:          CMP.B #$0A                          ;; 01D903 : C9 0A       ;
CODE_01D905:          BCC CODE_01D910                     ;; 01D905 : 90 09       ;
CODE_01D907:          LDA RAM_SpriteState,X               ;; 01D907 : B5 C2       ;
CODE_01D909:          CMP.B #$02                          ;; 01D909 : C9 02       ;
CODE_01D90B:          BEQ CODE_01D910                     ;; 01D90B : F0 03       ;
CODE_01D90D:          INC.W RAM_SpriteDir,X               ;; 01D90D : FE 7C 15    ;
CODE_01D910:          LDA RAM_SpriteYLo,X                 ;; 01D910 : B5 D8       ;
CODE_01D912:          STA $0C                             ;; 01D912 : 85 0C       ;
CODE_01D914:          LDA RAM_SpriteXLo,X                 ;; 01D914 : B5 E4       ;
CODE_01D916:          STA $0D                             ;; 01D916 : 85 0D       ;
CODE_01D918:          JSR.W CODE_01D768                   ;; 01D918 : 20 68 D7    ;
CODE_01D91B:          LDA $0C                             ;; 01D91B : A5 0C       ;
CODE_01D91D:          SEC                                 ;; 01D91D : 38          ;
CODE_01D91E:          SBC RAM_SpriteYLo,X                 ;; 01D91E : F5 D8       ;
CODE_01D920:          CLC                                 ;; 01D920 : 18          ;
CODE_01D921:          ADC.B #$08                          ;; 01D921 : 69 08       ;
CODE_01D923:          CMP.B #$10                          ;; 01D923 : C9 10       ;
CODE_01D925:          BCS CODE_01D938                     ;; 01D925 : B0 11       ;
CODE_01D927:          LDA $0D                             ;; 01D927 : A5 0D       ;
CODE_01D929:          SEC                                 ;; 01D929 : 38          ;
CODE_01D92A:          SBC RAM_SpriteXLo,X                 ;; 01D92A : F5 E4       ;
CODE_01D92C:          CLC                                 ;; 01D92C : 18          ;
CODE_01D92D:          ADC.B #$08                          ;; 01D92D : 69 08       ;
CODE_01D92F:          CMP.B #$10                          ;; 01D92F : C9 10       ;
CODE_01D931:          BCS CODE_01D938                     ;; 01D931 : B0 05       ;
CODE_01D933:          LDA.B #$01                          ;; 01D933 : A9 01       ;
CODE_01D935:          STA RAM_SpriteState,X               ;; 01D935 : 95 C2       ;
Return01D937:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01D938:          LDA $08                             ;; 01D938 : A5 08       ;
CODE_01D93A:          STA RAM_SpriteYLo,X                 ;; 01D93A : 95 D8       ;
CODE_01D93C:          LDA $09                             ;; 01D93C : A5 09       ;
CODE_01D93E:          STA.W RAM_SpriteYHi,X               ;; 01D93E : 9D D4 14    ;
CODE_01D941:          LDA $0A                             ;; 01D941 : A5 0A       ;
CODE_01D943:          STA RAM_SpriteXLo,X                 ;; 01D943 : 95 E4       ;
CODE_01D945:          LDA $0B                             ;; 01D945 : A5 0B       ;
CODE_01D947:          STA.W RAM_SpriteXHi,X               ;; 01D947 : 9D E0 14    ;
CODE_01D94A:          JMP.W CODE_01D861                   ;; 01D94A : 4C 61 D8    ;
                                                          ;;                      ;
CODE_01D94D:          LDA $00                             ;; 01D94D : A5 00       ;
CODE_01D94F:          AND.B #$F0                          ;; 01D94F : 29 F0       ;
CODE_01D951:          STA $06                             ;; 01D951 : 85 06       ;
CODE_01D953:          LDA $02                             ;; 01D953 : A5 02       ;
CODE_01D955:          LSR                                 ;; 01D955 : 4A          ;
CODE_01D956:          LSR                                 ;; 01D956 : 4A          ;
CODE_01D957:          LSR                                 ;; 01D957 : 4A          ;
CODE_01D958:          LSR                                 ;; 01D958 : 4A          ;
CODE_01D959:          PHA                                 ;; 01D959 : 48          ;
CODE_01D95A:          ORA $06                             ;; 01D95A : 05 06       ;
CODE_01D95C:          PHA                                 ;; 01D95C : 48          ;
CODE_01D95D:          LDA RAM_IsVerticalLvl               ;; 01D95D : A5 5B       ;
CODE_01D95F:          AND.B #$01                          ;; 01D95F : 29 01       ;
CODE_01D961:          BEQ CODE_01D977                     ;; 01D961 : F0 14       ;
CODE_01D963:          PLA                                 ;; 01D963 : 68          ;
CODE_01D964:          LDX $01                             ;; 01D964 : A6 01       ;
CODE_01D966:          CLC                                 ;; 01D966 : 18          ;
CODE_01D967:          ADC.L DATA_00BA80,X                 ;; 01D967 : 7F 80 BA 00 ;
CODE_01D96B:          STA $05                             ;; 01D96B : 85 05       ;
CODE_01D96D:          LDA.L DATA_00BABC,X                 ;; 01D96D : BF BC BA 00 ;
CODE_01D971:          ADC $03                             ;; 01D971 : 65 03       ;
CODE_01D973:          STA $06                             ;; 01D973 : 85 06       ;
CODE_01D975:          BRA CODE_01D989                     ;; 01D975 : 80 12       ;
                                                          ;;                      ;
CODE_01D977:          PLA                                 ;; 01D977 : 68          ;
CODE_01D978:          LDX $03                             ;; 01D978 : A6 03       ;
CODE_01D97A:          CLC                                 ;; 01D97A : 18          ;
CODE_01D97B:          ADC.L DATA_00BA60,X                 ;; 01D97B : 7F 60 BA 00 ;
CODE_01D97F:          STA $05                             ;; 01D97F : 85 05       ;
CODE_01D981:          LDA.L DATA_00BA9C,X                 ;; 01D981 : BF 9C BA 00 ;
CODE_01D985:          ADC $01                             ;; 01D985 : 65 01       ;
CODE_01D987:          STA $06                             ;; 01D987 : 85 06       ;
CODE_01D989:          LDA.B #$7E                          ;; 01D989 : A9 7E       ;
CODE_01D98B:          STA $07                             ;; 01D98B : 85 07       ;
CODE_01D98D:          LDX.W $15E9                         ;; 01D98D : AE E9 15    ; X = Sprite index 
CODE_01D990:          LDA [$05]                           ;; 01D990 : A7 05       ;
CODE_01D992:          STA.W $1693                         ;; 01D992 : 8D 93 16    ;
CODE_01D995:          INC $07                             ;; 01D995 : E6 07       ;
CODE_01D997:          LDA [$05]                           ;; 01D997 : A7 05       ;
CODE_01D999:          PLY                                 ;; 01D999 : 7A          ;
CODE_01D99A:          STY $05                             ;; 01D99A : 84 05       ;
CODE_01D99C:          PHA                                 ;; 01D99C : 48          ;
CODE_01D99D:          LDA $05                             ;; 01D99D : A5 05       ;
CODE_01D99F:          AND.B #$07                          ;; 01D99F : 29 07       ;
CODE_01D9A1:          TAY                                 ;; 01D9A1 : A8          ;
CODE_01D9A2:          PLA                                 ;; 01D9A2 : 68          ;
CODE_01D9A3:          AND.W DATA_018000,Y                 ;; 01D9A3 : 39 00 80    ;
Return01D9A6:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01D9A7:          LDA RAM_SpriteNum,X                 ;; 01D9A7 : B5 9E       ;LINE GUIDE PLATFORM FUZZY       
CODE_01D9A9:          CMP.B #$64                          ;; 01D9A9 : C9 64       ;DETERMINE SPRITE ITS DEALING WITH                
CODE_01D9AB:          BEQ CODE_01D9D3                     ;; 01D9AB : F0 26       ;
CODE_01D9AD:          CMP.B #$65                          ;; 01D9AD : C9 65       ;
CODE_01D9AF:          BCC CODE_01D9D0                     ;; 01D9AF : 90 1F       ;PLATFORM!          
CODE_01D9B1:          CMP.B #$68                          ;; 01D9B1 : C9 68       ;
CODE_01D9B3:          BNE CODE_01D9BA                     ;; 01D9B3 : D0 05       ;
CODE_01D9B5:          JSR.W CODE_01DBD4                   ;; 01D9B5 : 20 D4 DB    ;
CODE_01D9B8:          BRA CODE_01D9C1                     ;; 01D9B8 : 80 07       ;
                                                          ;;                      ;
CODE_01D9BA:          CMP.B #$67                          ;; 01D9BA : C9 67       ;
CODE_01D9BC:          BNE CODE_01D9C6                     ;; 01D9BC : D0 08       ;
CODE_01D9BE:          JSR.W CODE_01DC0B                   ;; 01D9BE : 20 0B DC    ;
CODE_01D9C1:          JSR.W MarioSprInteractRt            ;; 01D9C1 : 20 E4 A7    ;
CODE_01D9C4:          BRA CODE_01D9CD                     ;; 01D9C4 : 80 07       ;
                                                          ;;                      ;
CODE_01D9C6:          JSR.W MarioSprInteractRt            ;; 01D9C6 : 20 E4 A7    ;
CODE_01D9C9:          JSL.L CODE_03C263                   ;; 01D9C9 : 22 63 C2 03 ;
CODE_01D9CD:          JMP.W CODE_01D74D                   ;; 01D9CD : 4C 4D D7    ;
                                                          ;;                      ;
CODE_01D9D0:          JMP.W CODE_01DAA2                   ;; 01D9D0 : 4C A2 DA    ;
                                                          ;;                      ;
CODE_01D9D3:          JSR.W CODE_01DC54                   ;; 01D9D3 : 20 54 DC    ;
CODE_01D9D6:          LDA RAM_SpriteXLo,X                 ;; 01D9D6 : B5 E4       ;
CODE_01D9D8:          PHA                                 ;; 01D9D8 : 48          ;
CODE_01D9D9:          LDA RAM_SpriteYLo,X                 ;; 01D9D9 : B5 D8       ;
CODE_01D9DB:          PHA                                 ;; 01D9DB : 48          ;
CODE_01D9DC:          JSR.W CODE_01D74D                   ;; 01D9DC : 20 4D D7    ;
CODE_01D9DF:          PLA                                 ;; 01D9DF : 68          ;
CODE_01D9E0:          SEC                                 ;; 01D9E0 : 38          ;
CODE_01D9E1:          SBC RAM_SpriteYLo,X                 ;; 01D9E1 : F5 D8       ;
CODE_01D9E3:          EOR.B #$FF                          ;; 01D9E3 : 49 FF       ;
CODE_01D9E5:          INC A                               ;; 01D9E5 : 1A          ;
CODE_01D9E6:          STA.W $185E                         ;; 01D9E6 : 8D 5E 18    ;
CODE_01D9E9:          PLA                                 ;; 01D9E9 : 68          ;
CODE_01D9EA:          SEC                                 ;; 01D9EA : 38          ;
CODE_01D9EB:          SBC RAM_SpriteXLo,X                 ;; 01D9EB : F5 E4       ;
CODE_01D9ED:          EOR.B #$FF                          ;; 01D9ED : 49 FF       ;
CODE_01D9EF:          INC A                               ;; 01D9EF : 1A          ;
CODE_01D9F0:          STA.W $18B6                         ;; 01D9F0 : 8D B6 18    ;
CODE_01D9F3:          LDA RAM_MarioObjStatus              ;; 01D9F3 : A5 77       ;
CODE_01D9F5:          AND.B #$03                          ;; 01D9F5 : 29 03       ;
CODE_01D9F7:          BNE Return01DA09                    ;; 01D9F7 : D0 10       ;
CODE_01D9F9:          JSR.W CODE_01A80F                   ;; 01D9F9 : 20 0F A8    ;
CODE_01D9FC:          BCS CODE_01DA0A                     ;; 01D9FC : B0 0C       ;
CODE_01D9FE:          LDA.W $163E,X                       ;; 01D9FE : BD 3E 16    ;
CODE_01DA01:          BEQ Return01DA09                    ;; 01DA01 : F0 06       ;
CODE_01DA03:          STZ.W $163E,X                       ;; 01DA03 : 9E 3E 16    ;
CODE_01DA06:          STZ.W $18BE                         ;; 01DA06 : 9C BE 18    ;
Return01DA09:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01DA0A:          LDA.W $14C8,X                       ;; 01DA0A : BD C8 14    ;
CODE_01DA0D:          BEQ CODE_01DA37                     ;; 01DA0D : F0 28       ;
CODE_01DA0F:          LDA.W $1470                         ;; 01DA0F : AD 70 14    ; \ Branch if carrying an enemy... 
CODE_01DA12:          ORA.W RAM_OnYoshi                   ;; 01DA12 : 0D 7A 18    ;  | ...or if on Yoshi 
CODE_01DA15:          BNE CODE_01D9FE                     ;; 01DA15 : D0 E7       ; / 
CODE_01DA17:          LDA.B #$03                          ;; 01DA17 : A9 03       ;
CODE_01DA19:          STA.W $163E,X                       ;; 01DA19 : 9D 3E 16    ;
CODE_01DA1C:          LDA.W RAM_DisableInter,X            ;; 01DA1C : BD 4C 15    ;
CODE_01DA1F:          BNE Return01DA8F                    ;; 01DA1F : D0 6E       ;
CODE_01DA21:          LDA.W $18BE                         ;; 01DA21 : AD BE 18    ;
CODE_01DA24:          BNE CODE_01DA2F                     ;; 01DA24 : D0 09       ;
CODE_01DA26:          LDA RAM_ControllerA                 ;; 01DA26 : A5 15       ;
CODE_01DA28:          AND.B #$08                          ;; 01DA28 : 29 08       ;
CODE_01DA2A:          BEQ Return01DA8F                    ;; 01DA2A : F0 63       ;
CODE_01DA2C:          STA.W $18BE                         ;; 01DA2C : 8D BE 18    ;
CODE_01DA2F:          BIT $16                             ;; 01DA2F : 24 16       ;
CODE_01DA31:          BPL CODE_01DA3F                     ;; 01DA31 : 10 0C       ;
CODE_01DA33:          LDA.B #$B0                          ;; 01DA33 : A9 B0       ;
CODE_01DA35:          STA RAM_MarioSpeedY                 ;; 01DA35 : 85 7D       ;
CODE_01DA37:          STZ.W $18BE                         ;; 01DA37 : 9C BE 18    ;
CODE_01DA3A:          LDA.B #$10                          ;; 01DA3A : A9 10       ;
CODE_01DA3C:          STA.W RAM_DisableInter,X            ;; 01DA3C : 9D 4C 15    ;
CODE_01DA3F:          LDY.B #$00                          ;; 01DA3F : A0 00       ;
CODE_01DA41:          LDA.W $185E                         ;; 01DA41 : AD 5E 18    ;
CODE_01DA44:          BPL CODE_01DA47                     ;; 01DA44 : 10 01       ;
CODE_01DA46:          DEY                                 ;; 01DA46 : 88          ;
CODE_01DA47:          CLC                                 ;; 01DA47 : 18          ;
CODE_01DA48:          ADC RAM_MarioYPos                   ;; 01DA48 : 65 96       ;
CODE_01DA4A:          STA RAM_MarioYPos                   ;; 01DA4A : 85 96       ;
CODE_01DA4C:          TYA                                 ;; 01DA4C : 98          ;
CODE_01DA4D:          ADC RAM_MarioYPosHi                 ;; 01DA4D : 65 97       ;
CODE_01DA4F:          STA RAM_MarioYPosHi                 ;; 01DA4F : 85 97       ;
CODE_01DA51:          LDA RAM_SpriteYLo,X                 ;; 01DA51 : B5 D8       ;
CODE_01DA53:          STA $00                             ;; 01DA53 : 85 00       ;
CODE_01DA55:          LDA.W RAM_SpriteYHi,X               ;; 01DA55 : BD D4 14    ;
CODE_01DA58:          STA $01                             ;; 01DA58 : 85 01       ;
CODE_01DA5A:          REP #$20                            ;; 01DA5A : C2 20       ; Accum (16 bit) 
CODE_01DA5C:          LDA RAM_MarioYPos                   ;; 01DA5C : A5 96       ;
CODE_01DA5E:          SEC                                 ;; 01DA5E : 38          ;
CODE_01DA5F:          SBC $00                             ;; 01DA5F : E5 00       ;
CODE_01DA61:          CMP.W #$0000                        ;; 01DA61 : C9 00 00    ;
CODE_01DA64:          BPL CODE_01DA68                     ;; 01DA64 : 10 02       ;
ADDR_01DA66:          INC RAM_MarioYPos                   ;; 01DA66 : E6 96       ;
CODE_01DA68:          SEP #$20                            ;; 01DA68 : E2 20       ; Accum (8 bit) 
CODE_01DA6A:          LDA.W $18B6                         ;; 01DA6A : AD B6 18    ;
CODE_01DA6D:          JSR.W CODE_01DA90                   ;; 01DA6D : 20 90 DA    ;
CODE_01DA70:          LDA RAM_SpriteXLo,X                 ;; 01DA70 : B5 E4       ;
CODE_01DA72:          SEC                                 ;; 01DA72 : 38          ;
CODE_01DA73:          SBC.B #$08                          ;; 01DA73 : E9 08       ;
CODE_01DA75:          CMP RAM_MarioXPos                   ;; 01DA75 : C5 94       ;
CODE_01DA77:          BEQ CODE_01DA84                     ;; 01DA77 : F0 0B       ;
CODE_01DA79:          BPL CODE_01DA7F                     ;; 01DA79 : 10 04       ;
CODE_01DA7B:          LDA.B #$FF                          ;; 01DA7B : A9 FF       ;
CODE_01DA7D:          BRA CODE_01DA81                     ;; 01DA7D : 80 02       ;
                                                          ;;                      ;
CODE_01DA7F:          LDA.B #$01                          ;; 01DA7F : A9 01       ;
CODE_01DA81:          JSR.W CODE_01DA90                   ;; 01DA81 : 20 90 DA    ;
CODE_01DA84:          LDA.W $1626,X                       ;; 01DA84 : BD 26 16    ;
CODE_01DA87:          BEQ Return01DA8F                    ;; 01DA87 : F0 06       ;
CODE_01DA89:          STZ.W $1626,X                       ;; 01DA89 : 9E 26 16    ;
CODE_01DA8C:          STZ.W $1540,X                       ;; 01DA8C : 9E 40 15    ;
Return01DA8F:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01DA90:          LDY.B #$00                          ;; 01DA90 : A0 00       ;
CODE_01DA92:          CMP.B #$00                          ;; 01DA92 : C9 00       ;
CODE_01DA94:          BPL CODE_01DA97                     ;; 01DA94 : 10 01       ;
CODE_01DA96:          DEY                                 ;; 01DA96 : 88          ;
CODE_01DA97:          CLC                                 ;; 01DA97 : 18          ;
CODE_01DA98:          ADC RAM_MarioXPos                   ;; 01DA98 : 65 94       ;
CODE_01DA9A:          STA RAM_MarioXPos                   ;; 01DA9A : 85 94       ;
CODE_01DA9C:          TYA                                 ;; 01DA9C : 98          ;
CODE_01DA9D:          ADC RAM_MarioXPosHi                 ;; 01DA9D : 65 95       ;
CODE_01DA9F:          STA RAM_MarioXPosHi                 ;; 01DA9F : 85 95       ;
Return01DAA1:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01DAA2:          LDY.B #$18                          ;; 01DAA2 : A0 18       ;LINE GUIDED PLATFORM CODE               
CODE_01DAA4:          LDA.W $1602,X                       ;; 01DAA4 : BD 02 16    ;
CODE_01DAA7:          BEQ CODE_01DAAB                     ;; 01DAA7 : F0 02       ;
CODE_01DAA9:          LDY.B #$28                          ;; 01DAA9 : A0 28       ;CONDITIONAL DEPENDING ON PLATFORM TYPE?               
CODE_01DAAB:          STY $00                             ;; 01DAAB : 84 00       ;
CODE_01DAAD:          LDA RAM_SpriteXLo,X                 ;; 01DAAD : B5 E4       ;
CODE_01DAAF:          PHA                                 ;; 01DAAF : 48          ;
CODE_01DAB0:          SEC                                 ;; 01DAB0 : 38          ;
CODE_01DAB1:          SBC $00                             ;; 01DAB1 : E5 00       ;
CODE_01DAB3:          STA RAM_SpriteXLo,X                 ;; 01DAB3 : 95 E4       ;
CODE_01DAB5:          LDA.W RAM_SpriteXHi,X               ;; 01DAB5 : BD E0 14    ;
CODE_01DAB8:          PHA                                 ;; 01DAB8 : 48          ;
CODE_01DAB9:          SBC.B #$00                          ;; 01DAB9 : E9 00       ;
CODE_01DABB:          STA.W RAM_SpriteXHi,X               ;; 01DABB : 9D E0 14    ;
CODE_01DABE:          LDA RAM_SpriteYLo,X                 ;; 01DABE : B5 D8       ;
CODE_01DAC0:          PHA                                 ;; 01DAC0 : 48          ;
CODE_01DAC1:          SEC                                 ;; 01DAC1 : 38          ;
CODE_01DAC2:          SBC.B #$08                          ;; 01DAC2 : E9 08       ;
CODE_01DAC4:          STA RAM_SpriteYLo,X                 ;; 01DAC4 : 95 D8       ;
CODE_01DAC6:          LDA.W RAM_SpriteYHi,X               ;; 01DAC6 : BD D4 14    ;
CODE_01DAC9:          PHA                                 ;; 01DAC9 : 48          ;
CODE_01DACA:          SBC.B #$00                          ;; 01DACA : E9 00       ;
CODE_01DACC:          STA.W RAM_SpriteYHi,X               ;; 01DACC : 9D D4 14    ;
CODE_01DACF:          JSR.W CODE_01B2DF                   ;; 01DACF : 20 DF B2    ;DRAW GFX  .  RELIES ON NEW POSITIONS MADE UP THERE.      
CODE_01DAD2:          PLA                                 ;; 01DAD2 : 68          ;RESTORE POSITIONS                     
CODE_01DAD3:          STA.W RAM_SpriteYHi,X               ;; 01DAD3 : 9D D4 14    ;
CODE_01DAD6:          PLA                                 ;; 01DAD6 : 68          ;
CODE_01DAD7:          STA RAM_SpriteYLo,X                 ;; 01DAD7 : 95 D8       ;
CODE_01DAD9:          PLA                                 ;; 01DAD9 : 68          ;
CODE_01DADA:          STA.W RAM_SpriteXHi,X               ;; 01DADA : 9D E0 14    ;
CODE_01DADD:          PLA                                 ;; 01DADD : 68          ;
CODE_01DADE:          STA RAM_SpriteXLo,X                 ;; 01DADE : 95 E4       ;
CODE_01DAE0:          LDA RAM_SpriteXLo,X                 ;; 01DAE0 : B5 E4       ;
CODE_01DAE2:          PHA                                 ;; 01DAE2 : 48          ;
CODE_01DAE3:          JSR.W CODE_01D74D                   ;; 01DAE3 : 20 4D D7    ;LINE GUIDE HANDLER???        
CODE_01DAE6:          PLA                                 ;; 01DAE6 : 68          ;
CODE_01DAE7:          SEC                                 ;; 01DAE7 : 38          ;
CODE_01DAE8:          SBC RAM_SpriteXLo,X                 ;; 01DAE8 : F5 E4       ;
CODE_01DAEA:          LDY.W $1528,X                       ;; 01DAEA : BC 28 15    ;
CODE_01DAED:          PHY                                 ;; 01DAED : 5A          ;
CODE_01DAEE:          EOR.B #$FF                          ;; 01DAEE : 49 FF       ;
CODE_01DAF0:          INC A                               ;; 01DAF0 : 1A          ;
CODE_01DAF1:          STA.W $1528,X                       ;; 01DAF1 : 9D 28 15    ;
CODE_01DAF4:          LDY.B #$18                          ;; 01DAF4 : A0 18       ;
CODE_01DAF6:          LDA.W $1602,X                       ;; 01DAF6 : BD 02 16    ;
CODE_01DAF9:          BEQ CODE_01DAFD                     ;; 01DAF9 : F0 02       ;
CODE_01DAFB:          LDY.B #$28                          ;; 01DAFB : A0 28       ;
CODE_01DAFD:          STY $00                             ;; 01DAFD : 84 00       ;
CODE_01DAFF:          LDA RAM_SpriteXLo,X                 ;; 01DAFF : B5 E4       ;
CODE_01DB01:          PHA                                 ;; 01DB01 : 48          ;
CODE_01DB02:          SEC                                 ;; 01DB02 : 38          ;
CODE_01DB03:          SBC $00                             ;; 01DB03 : E5 00       ;
CODE_01DB05:          STA RAM_SpriteXLo,X                 ;; 01DB05 : 95 E4       ;
CODE_01DB07:          LDA.W RAM_SpriteXHi,X               ;; 01DB07 : BD E0 14    ;
CODE_01DB0A:          PHA                                 ;; 01DB0A : 48          ;
CODE_01DB0B:          SBC.B #$00                          ;; 01DB0B : E9 00       ;
CODE_01DB0D:          STA.W RAM_SpriteXHi,X               ;; 01DB0D : 9D E0 14    ;
CODE_01DB10:          LDA RAM_SpriteYLo,X                 ;; 01DB10 : B5 D8       ;
CODE_01DB12:          PHA                                 ;; 01DB12 : 48          ;
CODE_01DB13:          SEC                                 ;; 01DB13 : 38          ;
CODE_01DB14:          SBC.B #$08                          ;; 01DB14 : E9 08       ;
CODE_01DB16:          STA RAM_SpriteYLo,X                 ;; 01DB16 : 95 D8       ;
CODE_01DB18:          LDA.W RAM_SpriteYHi,X               ;; 01DB18 : BD D4 14    ;
CODE_01DB1B:          PHA                                 ;; 01DB1B : 48          ;
CODE_01DB1C:          SBC.B #$00                          ;; 01DB1C : E9 00       ;
CODE_01DB1E:          STA.W RAM_SpriteYHi,X               ;; 01DB1E : 9D D4 14    ;
CODE_01DB21:          JSR.W CODE_01B457                   ;; 01DB21 : 20 57 B4    ;CUSTOM INTERACTION HANDLER         
CODE_01DB24:          BCC CODE_01DB31                     ;; 01DB24 : 90 0B       ;
CODE_01DB26:          LDA.W $1626,X                       ;; 01DB26 : BD 26 16    ;
CODE_01DB29:          BEQ CODE_01DB31                     ;; 01DB29 : F0 06       ;
CODE_01DB2B:          STZ.W $1626,X                       ;; 01DB2B : 9E 26 16    ;
CODE_01DB2E:          STZ.W $1540,X                       ;; 01DB2E : 9E 40 15    ;
CODE_01DB31:          PLA                                 ;; 01DB31 : 68          ;
CODE_01DB32:          STA.W RAM_SpriteYHi,X               ;; 01DB32 : 9D D4 14    ;
CODE_01DB35:          PLA                                 ;; 01DB35 : 68          ;
CODE_01DB36:          STA RAM_SpriteYLo,X                 ;; 01DB36 : 95 D8       ;
CODE_01DB38:          PLA                                 ;; 01DB38 : 68          ;
CODE_01DB39:          STA.W RAM_SpriteXHi,X               ;; 01DB39 : 9D E0 14    ;
CODE_01DB3C:          PLA                                 ;; 01DB3C : 68          ;
CODE_01DB3D:          STA RAM_SpriteXLo,X                 ;; 01DB3D : 95 E4       ;
CODE_01DB3F:          PLA                                 ;; 01DB3F : 68          ;
CODE_01DB40:          STA.W $1528,X                       ;; 01DB40 : 9D 28 15    ;
Return01DB43:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01DB44:          LDA RAM_SpritesLocked               ;; 01DB44 : A5 9D       ; \ Branch if sprites locked 
CODE_01DB46:          BNE Return01DB59                    ;; 01DB46 : D0 11       ; / 
CODE_01DB48:          JSR.W SubUpdateSprPos               ;; 01DB48 : 20 32 90    ;
CODE_01DB4B:          LDA.W $1540,X                       ;; 01DB4B : BD 40 15    ;
CODE_01DB4E:          BNE Return01DB59                    ;; 01DB4E : D0 09       ;
CODE_01DB50:          LDA RAM_SpriteSpeedY,X              ;; 01DB50 : B5 AA       ;
CODE_01DB52:          CMP.B #$20                          ;; 01DB52 : C9 20       ;
CODE_01DB54:          BMI Return01DB59                    ;; 01DB54 : 30 03       ;
CODE_01DB56:          JSR.W CODE_01D7F4                   ;; 01DB56 : 20 F4 D7    ;
Return01DB59:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
DATA_01DB5A:          .db $18,$E8                         ;; 01DB5A               ;
                                                          ;;                      ;
Grinder:              JSR.W CODE_01DBA2                   ;; ?QPWZ? : 20 A2 DB    ;
CODE_01DB5F:          LDA.W $14C8,X                       ;; 01DB5F : BD C8 14    ;
CODE_01DB62:          CMP.B #$08                          ;; 01DB62 : C9 08       ;
CODE_01DB64:          BNE Return01DB95                    ;; 01DB64 : D0 2F       ;
CODE_01DB66:          LDA RAM_SpritesLocked               ;; 01DB66 : A5 9D       ; \ Branch if sprites locked 
CODE_01DB68:          BNE Return01DB95                    ;; 01DB68 : D0 2B       ; / 
CODE_01DB6A:          LDA RAM_FrameCounter                ;; 01DB6A : A5 13       ;
CODE_01DB6C:          AND.B #$03                          ;; 01DB6C : 29 03       ;
CODE_01DB6E:          BNE CODE_01DB75                     ;; 01DB6E : D0 05       ;
CODE_01DB70:          LDA.B #$04                          ;; 01DB70 : A9 04       ; \ Play sound effect 
CODE_01DB72:          STA.W $1DFA                         ;; 01DB72 : 8D FA 1D    ; / 
CODE_01DB75:          JSR.W SubOffscreen0Bnk1             ;; 01DB75 : 20 31 AC    ;
CODE_01DB78:          JSR.W MarioSprInteractRt            ;; 01DB78 : 20 E4 A7    ;
CODE_01DB7B:          LDY.W RAM_SpriteDir,X               ;; 01DB7B : BC 7C 15    ;
CODE_01DB7E:          LDA.W DATA_01DB5A,Y                 ;; 01DB7E : B9 5A DB    ;
CODE_01DB81:          STA RAM_SpriteSpeedX,X              ;; 01DB81 : 95 B6       ;
CODE_01DB83:          JSR.W SubUpdateSprPos               ;; 01DB83 : 20 32 90    ;
CODE_01DB86:          JSR.W IsOnGround                    ;; 01DB86 : 20 0E 80    ;
CODE_01DB89:          BEQ CODE_01DB8D                     ;; 01DB89 : F0 02       ;
CODE_01DB8B:          STZ RAM_SpriteSpeedY,X              ;; 01DB8B : 74 AA       ; Sprite Y Speed = 0 
CODE_01DB8D:          JSR.W IsTouchingObjSide             ;; 01DB8D : 20 08 80    ;
CODE_01DB90:          BEQ Return01DB95                    ;; 01DB90 : F0 03       ;
CODE_01DB92:          JSR.W FlipSpriteDir                 ;; 01DB92 : 20 98 90    ;
Return01DB95:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
DATA_01DB96:          .db $F8,$08,$F8,$08                 ;; 01DB96               ;
                                                          ;;                      ;
DATA_01DB9A:          .db $00,$00,$10,$10                 ;; 01DB9A               ;
                                                          ;;                      ;
DATA_01DB9E:          .db $03,$43,$83,$C3                 ;; 01DB9E               ;
                                                          ;;                      ;
CODE_01DBA2:          JSR.W GetDrawInfoBnk1               ;; 01DBA2 : 20 65 A3    ;
CODE_01DBA5:          PHX                                 ;; 01DBA5 : DA          ;
CODE_01DBA6:          LDX.B #$03                          ;; 01DBA6 : A2 03       ;
CODE_01DBA8:          LDA $00                             ;; 01DBA8 : A5 00       ;
CODE_01DBAA:          CLC                                 ;; 01DBAA : 18          ;
CODE_01DBAB:          ADC.W DATA_01DB96,X                 ;; 01DBAB : 7D 96 DB    ;
CODE_01DBAE:          STA.W OAM_DispX,Y                   ;; 01DBAE : 99 00 03    ;
CODE_01DBB1:          LDA $01                             ;; 01DBB1 : A5 01       ;
CODE_01DBB3:          CLC                                 ;; 01DBB3 : 18          ;
CODE_01DBB4:          ADC.W DATA_01DB9A,X                 ;; 01DBB4 : 7D 9A DB    ;
CODE_01DBB7:          STA.W OAM_DispY,Y                   ;; 01DBB7 : 99 01 03    ;
CODE_01DBBA:          LDA RAM_FrameCounterB               ;; 01DBBA : A5 14       ;
CODE_01DBBC:          AND.B #$02                          ;; 01DBBC : 29 02       ;
CODE_01DBBE:          ORA.B #$6C                          ;; 01DBBE : 09 6C       ;
CODE_01DBC0:          STA.W OAM_Tile,Y                    ;; 01DBC0 : 99 02 03    ;
CODE_01DBC3:          LDA.W DATA_01DB9E,X                 ;; 01DBC3 : BD 9E DB    ;
CODE_01DBC6:          STA.W OAM_Prop,Y                    ;; 01DBC6 : 99 03 03    ;
CODE_01DBC9:          INY                                 ;; 01DBC9 : C8          ;
CODE_01DBCA:          INY                                 ;; 01DBCA : C8          ;
CODE_01DBCB:          INY                                 ;; 01DBCB : C8          ;
CODE_01DBCC:          INY                                 ;; 01DBCC : C8          ;
CODE_01DBCD:          DEX                                 ;; 01DBCD : CA          ;
CODE_01DBCE:          BPL CODE_01DBA8                     ;; 01DBCE : 10 D8       ;
CODE_01DBD0:          LDA.B #$03                          ;; 01DBD0 : A9 03       ;
CODE_01DBD2:          BRA CODE_01DC03                     ;; 01DBD2 : 80 2F       ;
                                                          ;;                      ;
CODE_01DBD4:          JSR.W SubSprGfx2Entry1              ;; 01DBD4 : 20 0D 9F    ;
CODE_01DBD7:          LDY.W RAM_SprOAMIndex,X             ;; 01DBD7 : BC EA 15    ; Y = Index into sprite OAM 
CODE_01DBDA:          LDA.W OAM_DispX,Y                   ;; 01DBDA : B9 00 03    ;
CODE_01DBDD:          SEC                                 ;; 01DBDD : 38          ;
CODE_01DBDE:          SBC.B #$08                          ;; 01DBDE : E9 08       ;
CODE_01DBE0:          STA.W OAM_DispX,Y                   ;; 01DBE0 : 99 00 03    ;
CODE_01DBE3:          LDA.W OAM_DispY,Y                   ;; 01DBE3 : B9 01 03    ;
CODE_01DBE6:          SEC                                 ;; 01DBE6 : 38          ;
CODE_01DBE7:          SBC.B #$08                          ;; 01DBE7 : E9 08       ;
CODE_01DBE9:          STA.W OAM_DispY,Y                   ;; 01DBE9 : 99 01 03    ;
CODE_01DBEC:          PHX                                 ;; 01DBEC : DA          ;
CODE_01DBED:          LDA RAM_FrameCounterB               ;; 01DBED : A5 14       ;
CODE_01DBEF:          LSR                                 ;; 01DBEF : 4A          ;
CODE_01DBF0:          LSR                                 ;; 01DBF0 : 4A          ;
CODE_01DBF1:          AND.B #$01                          ;; 01DBF1 : 29 01       ;
CODE_01DBF3:          TAX                                 ;; 01DBF3 : AA          ;
CODE_01DBF4:          LDA.B #$C8                          ;; 01DBF4 : A9 C8       ;
CODE_01DBF6:          STA.W OAM_Tile,Y                    ;; 01DBF6 : 99 02 03    ;
CODE_01DBF9:          LDA.W DATA_01DC09,X                 ;; 01DBF9 : BD 09 DC    ;
CODE_01DBFC:          ORA $64                             ;; 01DBFC : 05 64       ;
CODE_01DBFE:          STA.W OAM_Prop,Y                    ;; 01DBFE : 99 03 03    ;
CODE_01DC01:          LDA.B #$00                          ;; 01DC01 : A9 00       ;
CODE_01DC03:          PLX                                 ;; 01DC03 : FA          ;
CODE_01DC04:          LDY.B #$02                          ;; 01DC04 : A0 02       ;
CODE_01DC06:          JMP.W FinishOAMWriteRt              ;; 01DC06 : 4C BB B7    ;
                                                          ;;                      ;
                                                          ;;                      ;
DATA_01DC09:          .db $05,$45                         ;; 01DC09               ;
                                                          ;;                      ;
CODE_01DC0B:          JSR.W GetDrawInfoBnk1               ;; 01DC0B : 20 65 A3    ;
CODE_01DC0E:          PHX                                 ;; 01DC0E : DA          ;
CODE_01DC0F:          LDX.B #$03                          ;; 01DC0F : A2 03       ;
CODE_01DC11:          LDA $00                             ;; 01DC11 : A5 00       ;
CODE_01DC13:          CLC                                 ;; 01DC13 : 18          ;
CODE_01DC14:          ADC.W DATA_01DC3B,X                 ;; 01DC14 : 7D 3B DC    ;
CODE_01DC17:          STA.W OAM_DispX,Y                   ;; 01DC17 : 99 00 03    ;
CODE_01DC1A:          LDA $01                             ;; 01DC1A : A5 01       ;
CODE_01DC1C:          CLC                                 ;; 01DC1C : 18          ;
CODE_01DC1D:          ADC.W DATA_01DC3F,X                 ;; 01DC1D : 7D 3F DC    ;
CODE_01DC20:          STA.W OAM_DispY,Y                   ;; 01DC20 : 99 01 03    ;
CODE_01DC23:          LDA RAM_FrameCounterB               ;; 01DC23 : A5 14       ;
CODE_01DC25:          AND.B #$02                          ;; 01DC25 : 29 02       ;
CODE_01DC27:          ORA.B #$6C                          ;; 01DC27 : 09 6C       ;
CODE_01DC29:          STA.W OAM_Tile,Y                    ;; 01DC29 : 99 02 03    ;
CODE_01DC2C:          LDA.W DATA_01DC43,X                 ;; 01DC2C : BD 43 DC    ;
CODE_01DC2F:          STA.W OAM_Prop,Y                    ;; 01DC2F : 99 03 03    ;
CODE_01DC32:          INY                                 ;; 01DC32 : C8          ;
CODE_01DC33:          INY                                 ;; 01DC33 : C8          ;
CODE_01DC34:          INY                                 ;; 01DC34 : C8          ;
CODE_01DC35:          INY                                 ;; 01DC35 : C8          ;
CODE_01DC36:          DEX                                 ;; 01DC36 : CA          ;
CODE_01DC37:          BPL CODE_01DC11                     ;; 01DC37 : 10 D8       ;
CODE_01DC39:          BRA CODE_01DBD0                     ;; 01DC39 : 80 95       ;
                                                          ;;                      ;
                                                          ;;                      ;
DATA_01DC3B:          .db $F0,$00,$F0,$00                 ;; 01DC3B               ;
                                                          ;;                      ;
DATA_01DC3F:          .db $F0,$F0,$00,$00                 ;; 01DC3F               ;
                                                          ;;                      ;
DATA_01DC43:          .db $33,$73,$B3,$F3                 ;; 01DC43               ;
                                                          ;;                      ;
RopeMotorTiles:       .db $C0,$C2,$E0,$C2                 ;; ?QPWZ?               ;
                                                          ;;                      ;
LineGuideRopeTiles:   .db $C0,$CE,$CE,$CE,$CE,$CE,$CE,$CE ;; ?QPWZ?               ;
                      .db $CE                             ;; ?QPWZ?               ;
                                                          ;;                      ;
CODE_01DC54:          JSR.W GetDrawInfoBnk1               ;; 01DC54 : 20 65 A3    ;
CODE_01DC57:          LDA $00                             ;; 01DC57 : A5 00       ;
CODE_01DC59:          SEC                                 ;; 01DC59 : 38          ;
CODE_01DC5A:          SBC.B #$08                          ;; 01DC5A : E9 08       ;
CODE_01DC5C:          STA $00                             ;; 01DC5C : 85 00       ;
CODE_01DC5E:          LDA $01                             ;; 01DC5E : A5 01       ;
CODE_01DC60:          SEC                                 ;; 01DC60 : 38          ;
CODE_01DC61:          SBC.B #$08                          ;; 01DC61 : E9 08       ;
CODE_01DC63:          STA $01                             ;; 01DC63 : 85 01       ;
CODE_01DC65:          TXA                                 ;; 01DC65 : 8A          ;
CODE_01DC66:          ASL                                 ;; 01DC66 : 0A          ;
CODE_01DC67:          ASL                                 ;; 01DC67 : 0A          ;
CODE_01DC68:          EOR RAM_FrameCounterB               ;; 01DC68 : 45 14       ;
CODE_01DC6A:          LSR                                 ;; 01DC6A : 4A          ;
CODE_01DC6B:          LSR                                 ;; 01DC6B : 4A          ;
CODE_01DC6C:          LSR                                 ;; 01DC6C : 4A          ;
CODE_01DC6D:          AND.B #$03                          ;; 01DC6D : 29 03       ;
CODE_01DC6F:          STA $02                             ;; 01DC6F : 85 02       ;
CODE_01DC71:          LDA.B #$05                          ;; 01DC71 : A9 05       ;
CODE_01DC73:          CPX.B #$06                          ;; 01DC73 : E0 06       ;
CODE_01DC75:          BCC CODE_01DC7E                     ;; 01DC75 : 90 07       ;
CODE_01DC77:          LDY.W $1692                         ;; 01DC77 : AC 92 16    ;
CODE_01DC7A:          BEQ CODE_01DC7E                     ;; 01DC7A : F0 02       ;
CODE_01DC7C:          LDA.B #$09                          ;; 01DC7C : A9 09       ;
CODE_01DC7E:          STA $03                             ;; 01DC7E : 85 03       ;
CODE_01DC80:          LDY.W RAM_SprOAMIndex,X             ;; 01DC80 : BC EA 15    ; Y = Index into sprite OAM 
CODE_01DC83:          LDX.B #$00                          ;; 01DC83 : A2 00       ;
CODE_01DC85:          LDA $00                             ;; 01DC85 : A5 00       ;
CODE_01DC87:          STA.W OAM_DispX,Y                   ;; 01DC87 : 99 00 03    ;
CODE_01DC8A:          LDA $01                             ;; 01DC8A : A5 01       ;
CODE_01DC8C:          STA.W OAM_DispY,Y                   ;; 01DC8C : 99 01 03    ;
CODE_01DC8F:          CLC                                 ;; 01DC8F : 18          ;
CODE_01DC90:          ADC.B #$10                          ;; 01DC90 : 69 10       ;
CODE_01DC92:          STA $01                             ;; 01DC92 : 85 01       ;
CODE_01DC94:          LDA.W LineGuideRopeTiles,X          ;; 01DC94 : BD 4B DC    ;
CODE_01DC97:          CPX.B #$00                          ;; 01DC97 : E0 00       ;
CODE_01DC99:          BNE CODE_01DCA2                     ;; 01DC99 : D0 07       ;
CODE_01DC9B:          PHX                                 ;; 01DC9B : DA          ;
CODE_01DC9C:          LDX $02                             ;; 01DC9C : A6 02       ;
CODE_01DC9E:          LDA.W RopeMotorTiles,X              ;; 01DC9E : BD 47 DC    ;
CODE_01DCA1:          PLX                                 ;; 01DCA1 : FA          ;
CODE_01DCA2:          STA.W OAM_Tile,Y                    ;; 01DCA2 : 99 02 03    ;
CODE_01DCA5:          LDA.B #$37                          ;; 01DCA5 : A9 37       ;
CODE_01DCA7:          CPX.B #$01                          ;; 01DCA7 : E0 01       ;
CODE_01DCA9:          BCC CODE_01DCAD                     ;; 01DCA9 : 90 02       ;
CODE_01DCAB:          LDA.B #$31                          ;; 01DCAB : A9 31       ;
CODE_01DCAD:          STA.W OAM_Prop,Y                    ;; 01DCAD : 99 03 03    ;
CODE_01DCB0:          INY                                 ;; 01DCB0 : C8          ;
CODE_01DCB1:          INY                                 ;; 01DCB1 : C8          ;
CODE_01DCB2:          INY                                 ;; 01DCB2 : C8          ;
CODE_01DCB3:          INY                                 ;; 01DCB3 : C8          ;
CODE_01DCB4:          INX                                 ;; 01DCB4 : E8          ;
CODE_01DCB5:          CPX $03                             ;; 01DCB5 : E4 03       ;
CODE_01DCB7:          BNE CODE_01DC85                     ;; 01DCB7 : D0 CC       ;
CODE_01DCB9:          LDA.B #$DE                          ;; 01DCB9 : A9 DE       ;
CODE_01DCBB:          STA.W $02FE,Y                       ;; 01DCBB : 99 FE 02    ;
CODE_01DCBE:          LDX.W $15E9                         ;; 01DCBE : AE E9 15    ; X = Sprite index 
CODE_01DCC1:          LDA.B #$04                          ;; 01DCC1 : A9 04       ;
CODE_01DCC3:          CPX.B #$06                          ;; 01DCC3 : E0 06       ;
CODE_01DCC5:          BCC CODE_01DCCE                     ;; 01DCC5 : 90 07       ;
CODE_01DCC7:          LDY.W $1692                         ;; 01DCC7 : AC 92 16    ;
CODE_01DCCA:          BEQ CODE_01DCCE                     ;; 01DCCA : F0 02       ;
CODE_01DCCC:          LDA.B #$08                          ;; 01DCCC : A9 08       ;
CODE_01DCCE:          JMP.W CODE_01DC04                   ;; 01DCCE : 4C 04 DC    ;
                                                          ;;                      ;
                                                          ;;                      ;
DATA_01DCD1:          .db $15,$15,$15,$15,$0C,$10,$10,$10 ;; 01DCD1               ;
                      .db $10,$0C,$0C,$10,$10,$10,$10,$0C ;; ?QPWZ?               ;
                      .db $15,$15,$10,$10,$10,$10,$10,$10 ;; ?QPWZ?               ;
                      .db $10,$10,$10,$10,$10,$10,$15,$15 ;; ?QPWZ?               ;
DATA_01DCF1:          .db $00,$00,$00,$00,$00,$00,$01,$02 ;; 01DCF1               ;
                      .db $00,$00,$00,$00,$02,$01,$00,$00 ;; ?QPWZ?               ;
                      .db $00,$00,$01,$02,$01,$02,$00,$00 ;; ?QPWZ?               ;
                      .db $00,$00,$02,$02,$00,$00,$00,$00 ;; ?QPWZ?               ;
DATA_01DD11:          .db $00,$10,$00,$F0,$F4,$FC,$F0,$10 ;; 01DD11               ;
                      .db $04,$0C,$0C,$00,$10,$F0,$FC,$F4 ;; ?QPWZ?               ;
                      .db $F0,$10,$F0,$10,$F0,$10,$F8,$F8 ;; ?QPWZ?               ;
                      .db $08,$08,$10,$10,$00,$00,$F0,$10 ;; ?QPWZ?               ;
                      .db $10,$00,$F0,$F0,$0C,$04,$10,$F0 ;; ?QPWZ?               ;
                      .db $00,$F4,$F4,$FC,$F0,$10,$00,$0C ;; ?QPWZ?               ;
                      .db $10,$F0,$10,$00,$10,$F0,$08,$08 ;; ?QPWZ?               ;
                      .db $F8,$F8,$F0,$F0,$00,$00,$10,$F0 ;; ?QPWZ?               ;
DATA_01DD51:          .db $10,$00,$10,$00,$0C,$10,$04,$00 ;; 01DD51               ;
                      .db $10,$0C,$0C,$10,$04,$00,$10,$0C ;; ?QPWZ?               ;
                      .db $10,$10,$08,$08,$08,$08,$10,$10 ;; ?QPWZ?               ;
                      .db $10,$10,$00,$00,$10,$10,$10,$10 ;; ?QPWZ?               ;
                      .db $00,$F0,$00,$F0,$F4,$F0,$00,$FC ;; ?QPWZ?               ;
                      .db $F0,$F4,$F4,$F0,$00,$FC,$F0,$F4 ;; ?QPWZ?               ;
                      .db $F0,$F0,$F8,$F8,$F8,$F8,$F0,$F0 ;; ?QPWZ?               ;
                      .db $F0,$F0,$00,$00,$F0,$F0,$F0     ;; ?QPWZ?               ;
                                                          ;;                      ;
DATA_01DD90:          .db $F0                             ;; 01DD90               ;
                                                          ;;                      ;
DATA_01DD91:          .db $50,$78,$A0,$A0,$A0,$78,$50,$50 ;; 01DD91               ;
DATA_01DD99:          .db $78                             ;; 01DD99               ;
                                                          ;;                      ;
DATA_01DD9A:          .db $F0,$F0,$F0,$18,$40,$40,$40,$18 ;; 01DD9A               ;
DATA_01DDA2:          .db $18,$03,$00,$00,$01,$01,$02,$02 ;; 01DDA2               ;
                      .db $03,$FF                         ;; ?QPWZ?               ;
                                                          ;;                      ;
InitBonusGame:        LDA.W $1B94                         ;; ?QPWZ? : AD 94 1B    ;
CODE_01DDAF:          BEQ CODE_01DDB5                     ;; 01DDAF : F0 04       ;
ADDR_01DDB1:          STZ.W $14C8,X                       ;; 01DDB1 : 9E C8 14    ;
Return01DDB4:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01DDB5:          LDX.B #$09                          ;; 01DDB5 : A2 09       ;
CODE_01DDB7:          LDA.B #$08                          ;; 01DDB7 : A9 08       ; \ Sprite status = Normal 
CODE_01DDB9:          STA.W $14C8,X                       ;; 01DDB9 : 9D C8 14    ; / 
CODE_01DDBC:          LDA.B #$82                          ;; 01DDBC : A9 82       ;
CODE_01DDBE:          STA.W RAM_SpriteNum,X               ;; 01DDBE : 9D 9E 00    ;
CODE_01DDC1:          LDA.W DATA_01DD90,X                 ;; 01DDC1 : BD 90 DD    ;
CODE_01DDC4:          STA RAM_SpriteXLo,X                 ;; 01DDC4 : 95 E4       ;
CODE_01DDC6:          LDA.B #$00                          ;; 01DDC6 : A9 00       ;
CODE_01DDC8:          STA.W RAM_SpriteXHi,X               ;; 01DDC8 : 9D E0 14    ;
CODE_01DDCB:          LDA.W DATA_01DD99,X                 ;; 01DDCB : BD 99 DD    ;
CODE_01DDCE:          STA RAM_SpriteYLo,X                 ;; 01DDCE : 95 D8       ;
CODE_01DDD0:          ASL                                 ;; 01DDD0 : 0A          ;
CODE_01DDD1:          LDA.B #$00                          ;; 01DDD1 : A9 00       ;
CODE_01DDD3:          BCS CODE_01DDD6                     ;; 01DDD3 : B0 01       ;
CODE_01DDD5:          INC A                               ;; 01DDD5 : 1A          ;
CODE_01DDD6:          STA.W RAM_SpriteYHi,X               ;; 01DDD6 : 9D D4 14    ;
CODE_01DDD9:          JSL.L InitSpriteTables              ;; 01DDD9 : 22 D2 F7 07 ;
CODE_01DDDD:          LDA.W DATA_01DDA2,X                 ;; 01DDDD : BD A2 DD    ;
CODE_01DDE0:          STA.W RAM_SpriteDir,X               ;; 01DDE0 : 9D 7C 15    ;
CODE_01DDE3:          TXA                                 ;; 01DDE3 : 8A          ;
CODE_01DDE4:          CLC                                 ;; 01DDE4 : 18          ;
CODE_01DDE5:          ADC RAM_FrameCounter                ;; 01DDE5 : 65 13       ;
CODE_01DDE7:          AND.B #$07                          ;; 01DDE7 : 29 07       ;
CODE_01DDE9:          STA.W $1570,X                       ;; 01DDE9 : 9D 70 15    ;
CODE_01DDEC:          DEX                                 ;; 01DDEC : CA          ;
CODE_01DDED:          BNE CODE_01DDB7                     ;; 01DDED : D0 C8       ;
CODE_01DDEF:          STZ.W $188F                         ;; 01DDEF : 9C 8F 18    ;
CODE_01DDF2:          STZ.W $1890                         ;; 01DDF2 : 9C 90 18    ;
CODE_01DDF5:          JSL.L GetRand                       ;; 01DDF5 : 22 F9 AC 01 ;
CODE_01DDF9:          EOR RAM_FrameCounter                ;; 01DDF9 : 45 13       ;
CODE_01DDFB:          ADC RAM_FrameCounterB               ;; 01DDFB : 65 14       ;
CODE_01DDFD:          AND.B #$07                          ;; 01DDFD : 29 07       ;
CODE_01DDFF:          TAY                                 ;; 01DDFF : A8          ;
CODE_01DE00:          LDA.W DATA_01DE21,Y                 ;; 01DE00 : B9 21 DE    ;
CODE_01DE03:          STA.W $1579                         ;; 01DE03 : 8D 79 15    ;
CODE_01DE06:          LDA.B #$01                          ;; 01DE06 : A9 01       ;
CODE_01DE08:          STA $CB                             ;; 01DE08 : 85 CB       ;
CODE_01DE0A:          INC.W $1B94                         ;; 01DE0A : EE 94 1B    ;
CODE_01DE0D:          LDX.W $15E9                         ;; 01DE0D : AE E9 15    ; X = Sprite index 
Return01DE10:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
DATA_01DE11:          .db $10,$00,$F0,$00                 ;; 01DE11               ;
                                                          ;;                      ;
DATA_01DE15:          .db $00,$10,$00,$F0                 ;; 01DE15               ;
                                                          ;;                      ;
DATA_01DE19:          .db $A0,$A0,$50,$50                 ;; 01DE19               ;
                                                          ;;                      ;
DATA_01DE1D:          .db $F0,$40,$40,$F0                 ;; 01DE1D               ;
                                                          ;;                      ;
DATA_01DE21:          .db $01,$01,$01,$04,$04,$04,$07,$07 ;; 01DE21               ;
                      .db $07                             ;; ?QPWZ?               ;
                                                          ;;                      ;
BonusGame:            STZ.W RAM_OffscreenHorz,X           ;; ?QPWZ? : 9E A0 15    ;
CODE_01DE2D:          CPX.B #$01                          ;; 01DE2D : E0 01       ;
CODE_01DE2F:          BNE CODE_01DE34                     ;; 01DE2F : D0 03       ;
CODE_01DE31:          JSR.W CODE_01E26A                   ;; 01DE31 : 20 6A E2    ;
CODE_01DE34:          JSR.W CODE_01DF19                   ;; 01DE34 : 20 19 DF    ;
CODE_01DE37:          LDA RAM_SpritesLocked               ;; 01DE37 : A5 9D       ; \ Return if sprites locked 
CODE_01DE39:          BNE Return01DE40                    ;; 01DE39 : D0 05       ; / 
CODE_01DE3B:          LDA.W $188F                         ;; 01DE3B : AD 8F 18    ;
CODE_01DE3E:          BEQ CODE_01DE41                     ;; 01DE3E : F0 01       ;
Return01DE40:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01DE41:          LDA RAM_SpriteState,X               ;; 01DE41 : B5 C2       ;
CODE_01DE43:          BNE CODE_01DE8C                     ;; 01DE43 : D0 47       ;
CODE_01DE45:          LDA RAM_FrameCounterB               ;; 01DE45 : A5 14       ;
CODE_01DE47:          AND.B #$03                          ;; 01DE47 : 29 03       ;
CODE_01DE49:          BNE CODE_01DE58                     ;; 01DE49 : D0 0D       ;
CODE_01DE4B:          INC.W $1570,X                       ;; 01DE4B : FE 70 15    ;
CODE_01DE4E:          LDA.W $1570,X                       ;; 01DE4E : BD 70 15    ;
CODE_01DE51:          CMP.B #$09                          ;; 01DE51 : C9 09       ;
CODE_01DE53:          BNE CODE_01DE58                     ;; 01DE53 : D0 03       ;
CODE_01DE55:          STZ.W $1570,X                       ;; 01DE55 : 9E 70 15    ;
CODE_01DE58:          JSR.W MarioSprInteractRt            ;; 01DE58 : 20 E4 A7    ;
CODE_01DE5B:          BCC CODE_01DE8C                     ;; 01DE5B : 90 2F       ;
CODE_01DE5D:          LDA RAM_MarioSpeedY                 ;; 01DE5D : A5 7D       ;
CODE_01DE5F:          BPL CODE_01DE8C                     ;; 01DE5F : 10 2B       ;
CODE_01DE61:          LDA.B #$F4                          ;; 01DE61 : A9 F4       ;
CODE_01DE63:          LDY RAM_MarioPowerUp                ;; 01DE63 : A4 19       ;
CODE_01DE65:          BEQ CODE_01DE69                     ;; 01DE65 : F0 02       ;
CODE_01DE67:          LDA.B #$00                          ;; 01DE67 : A9 00       ;
CODE_01DE69:          CLC                                 ;; 01DE69 : 18          ;
CODE_01DE6A:          ADC RAM_SpriteYLo,X                 ;; 01DE6A : 75 D8       ;
CODE_01DE6C:          SEC                                 ;; 01DE6C : 38          ;
CODE_01DE6D:          SBC RAM_ScreenBndryYLo              ;; 01DE6D : E5 1C       ;
CODE_01DE6F:          CMP $80                             ;; 01DE6F : C5 80       ;
CODE_01DE71:          BCS CODE_01DE8C                     ;; 01DE71 : B0 19       ;
CODE_01DE73:          LDA.B #$10                          ;; 01DE73 : A9 10       ;
CODE_01DE75:          STA RAM_MarioSpeedY                 ;; 01DE75 : 85 7D       ;
CODE_01DE77:          LDA.B #$0B                          ;; 01DE77 : A9 0B       ; \ Play sound effect 
CODE_01DE79:          STA.W $1DF9                         ;; 01DE79 : 8D F9 1D    ; / 
CODE_01DE7C:          INC RAM_SpriteState,X               ;; 01DE7C : F6 C2       ;
CODE_01DE7E:          LDY.W $1570,X                       ;; 01DE7E : BC 70 15    ;
CODE_01DE81:          LDA.W DATA_01DE21,Y                 ;; 01DE81 : B9 21 DE    ;
CODE_01DE84:          STA.W $1570,X                       ;; 01DE84 : 9D 70 15    ;
CODE_01DE87:          LDA.B #$10                          ;; 01DE87 : A9 10       ;
CODE_01DE89:          STA.W $1540,X                       ;; 01DE89 : 9D 40 15    ;
CODE_01DE8C:          LDY.W RAM_SpriteDir,X               ;; 01DE8C : BC 7C 15    ;
CODE_01DE8F:          BMI Return01DEAF                    ;; 01DE8F : 30 1E       ;
CODE_01DE91:          LDA RAM_SpriteXLo,X                 ;; 01DE91 : B5 E4       ;
CODE_01DE93:          CMP.W DATA_01DE19,Y                 ;; 01DE93 : D9 19 DE    ;
CODE_01DE96:          BNE CODE_01DE9F                     ;; 01DE96 : D0 07       ;
CODE_01DE98:          LDA RAM_SpriteYLo,X                 ;; 01DE98 : B5 D8       ;
CODE_01DE9A:          CMP.W DATA_01DE1D,Y                 ;; 01DE9A : D9 1D DE    ;
CODE_01DE9D:          BEQ CODE_01DEB0                     ;; 01DE9D : F0 11       ;
CODE_01DE9F:          LDA.W DATA_01DE11,Y                 ;; 01DE9F : B9 11 DE    ;
CODE_01DEA2:          STA RAM_SpriteSpeedX,X              ;; 01DEA2 : 95 B6       ;
CODE_01DEA4:          LDA.W DATA_01DE15,Y                 ;; 01DEA4 : B9 15 DE    ;
CODE_01DEA7:          STA RAM_SpriteSpeedY,X              ;; 01DEA7 : 95 AA       ;
CODE_01DEA9:          JSR.W SubSprXPosNoGrvty             ;; 01DEA9 : 20 CC AB    ;
CODE_01DEAC:          JSR.W SubSprYPosNoGrvty             ;; 01DEAC : 20 D8 AB    ;
Return01DEAF:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01DEB0:          LDY.B #$09                          ;; 01DEB0 : A0 09       ;
CODE_01DEB2:          LDA.W RAM_SpriteState,Y             ;; 01DEB2 : B9 C2 00    ;
CODE_01DEB5:          BEQ CODE_01DED7                     ;; 01DEB5 : F0 20       ;
CODE_01DEB7:          LDA.W RAM_SpriteYLo,Y               ;; 01DEB7 : B9 D8 00    ;
CODE_01DEBA:          CLC                                 ;; 01DEBA : 18          ;
CODE_01DEBB:          ADC.B #$04                          ;; 01DEBB : 69 04       ;
CODE_01DEBD:          AND.B #$F8                          ;; 01DEBD : 29 F8       ;
CODE_01DEBF:          STA.W RAM_SpriteYLo,Y               ;; 01DEBF : 99 D8 00    ;
CODE_01DEC2:          LDA.W RAM_SpriteXLo,Y               ;; 01DEC2 : B9 E4 00    ;
CODE_01DEC5:          CLC                                 ;; 01DEC5 : 18          ;
CODE_01DEC6:          ADC.B #$04                          ;; 01DEC6 : 69 04       ;
CODE_01DEC8:          AND.B #$F8                          ;; 01DEC8 : 29 F8       ;
CODE_01DECA:          STA.W RAM_SpriteXLo,Y               ;; 01DECA : 99 E4 00    ;
CODE_01DECD:          DEY                                 ;; 01DECD : 88          ;
CODE_01DECE:          BNE CODE_01DEB2                     ;; 01DECE : D0 E2       ;
CODE_01DED0:          INC.W $188F                         ;; 01DED0 : EE 8F 18    ;
CODE_01DED3:          JSR.W CODE_01DFD9                   ;; 01DED3 : 20 D9 DF    ;
Return01DED6:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01DED7:          LDA.W RAM_SpriteDir,X               ;; 01DED7 : BD 7C 15    ;
CODE_01DEDA:          INC A                               ;; 01DEDA : 1A          ;
CODE_01DEDB:          AND.B #$03                          ;; 01DEDB : 29 03       ;
CODE_01DEDD:          TAY                                 ;; 01DEDD : A8          ;
CODE_01DEDE:          STA.W RAM_SpriteDir,X               ;; 01DEDE : 9D 7C 15    ;
CODE_01DEE1:          BRA CODE_01DE9F                     ;; 01DEE1 : 80 BC       ;
                                                          ;;                      ;
                                                          ;;                      ;
DATA_01DEE3:          .db $58                             ;; 01DEE3               ;
                                                          ;;                      ;
DATA_01DEE4:          .db $59                             ;; 01DEE4               ;
                                                          ;;                      ;
DATA_01DEE5:          .db $83                             ;; 01DEE5               ;
                                                          ;;                      ;
DATA_01DEE6:          .db $83,$48,$49,$58,$59,$83,$83,$48 ;; 01DEE6               ;
                      .db $49,$34,$35,$83,$83,$24,$25,$34 ;; ?QPWZ?               ;
                      .db $35,$83,$83,$24,$25,$36,$37,$83 ;; ?QPWZ?               ;
                      .db $83,$26,$27,$36,$37,$83,$83,$26 ;; ?QPWZ?               ;
                      .db $27                             ;; ?QPWZ?               ;
                                                          ;;                      ;
DATA_01DF07:          .db $04,$04,$04,$08,$08,$08,$0A,$0A ;; 01DF07               ;
                      .db $0A                             ;; ?QPWZ?               ;
                                                          ;;                      ;
DATA_01DF10:          .db $00,$03,$05,$07,$08,$08,$07,$05 ;; 01DF10               ;
                      .db $03                             ;; ?QPWZ?               ;
                                                          ;;                      ;
CODE_01DF19:          LDA.W $1540,X                       ;; 01DF19 : BD 40 15    ;
CODE_01DF1C:          LSR                                 ;; 01DF1C : 4A          ;
CODE_01DF1D:          TAY                                 ;; 01DF1D : A8          ;
CODE_01DF1E:          LDA.W DATA_01DF10,Y                 ;; 01DF1E : B9 10 DF    ;
CODE_01DF21:          STA $00                             ;; 01DF21 : 85 00       ;
CODE_01DF23:          LDY.W RAM_SprOAMIndex,X             ;; 01DF23 : BC EA 15    ; Y = Index into sprite OAM 
CODE_01DF26:          LDA RAM_SpriteXLo,X                 ;; 01DF26 : B5 E4       ;
CODE_01DF28:          SEC                                 ;; 01DF28 : 38          ;
CODE_01DF29:          SBC RAM_ScreenBndryXLo              ;; 01DF29 : E5 1A       ;
CODE_01DF2B:          STA.W $0310,Y                       ;; 01DF2B : 99 10 03    ;
CODE_01DF2E:          STA.W OAM_DispX,Y                   ;; 01DF2E : 99 00 03    ;
CODE_01DF31:          STA.W OAM_Tile3DispX,Y              ;; 01DF31 : 99 08 03    ;
CODE_01DF34:          CLC                                 ;; 01DF34 : 18          ;
CODE_01DF35:          ADC.B #$08                          ;; 01DF35 : 69 08       ;
CODE_01DF37:          STA.W OAM_Tile2DispX,Y              ;; 01DF37 : 99 04 03    ;
CODE_01DF3A:          STA.W OAM_Tile4DispX,Y              ;; 01DF3A : 99 0C 03    ;
CODE_01DF3D:          LDA.W RAM_DisableInter,X            ;; 01DF3D : BD 4C 15    ;
CODE_01DF40:          CLC                                 ;; 01DF40 : 18          ;
CODE_01DF41:          BEQ CODE_01DF4E                     ;; 01DF41 : F0 0B       ;
CODE_01DF43:          LSR                                 ;; 01DF43 : 4A          ;
CODE_01DF44:          LSR                                 ;; 01DF44 : 4A          ;
CODE_01DF45:          LSR                                 ;; 01DF45 : 4A          ;
CODE_01DF46:          LSR                                 ;; 01DF46 : 4A          ;
CODE_01DF47:          BRA CODE_01DF4D                     ;; 01DF47 : 80 04       ;
                                                          ;;                      ;
ADDR_01DF49:          CLC                                 ;; 01DF49 : 18          ; \ Unreachable instructions 
ADDR_01DF4A:          ADC.W $15E9                         ;; 01DF4A : 6D E9 15    ; / 
CODE_01DF4D:          LSR                                 ;; 01DF4D : 4A          ;
CODE_01DF4E:          PHP                                 ;; 01DF4E : 08          ;
CODE_01DF4F:          LDA RAM_SpriteYLo,X                 ;; 01DF4F : B5 D8       ;
CODE_01DF51:          SEC                                 ;; 01DF51 : 38          ;
CODE_01DF52:          SBC $00                             ;; 01DF52 : E5 00       ;
CODE_01DF54:          SEC                                 ;; 01DF54 : 38          ;
CODE_01DF55:          SBC RAM_ScreenBndryYLo              ;; 01DF55 : E5 1C       ;
CODE_01DF57:          STA.W $0311,Y                       ;; 01DF57 : 99 11 03    ;
CODE_01DF5A:          PLP                                 ;; 01DF5A : 28          ;
CODE_01DF5B:          BCS CODE_01DF6C                     ;; 01DF5B : B0 0F       ;
CODE_01DF5D:          STA.W OAM_DispY,Y                   ;; 01DF5D : 99 01 03    ;
CODE_01DF60:          STA.W OAM_Tile2DispY,Y              ;; 01DF60 : 99 05 03    ;
CODE_01DF63:          CLC                                 ;; 01DF63 : 18          ;
CODE_01DF64:          ADC.B #$08                          ;; 01DF64 : 69 08       ;
CODE_01DF66:          STA.W OAM_Tile3DispY,Y              ;; 01DF66 : 99 09 03    ;
CODE_01DF69:          STA.W OAM_Tile4DispY,Y              ;; 01DF69 : 99 0D 03    ;
CODE_01DF6C:          LDA.W $1570,X                       ;; 01DF6C : BD 70 15    ;
CODE_01DF6F:          PHX                                 ;; 01DF6F : DA          ;
CODE_01DF70:          PHA                                 ;; 01DF70 : 48          ;
CODE_01DF71:          ASL                                 ;; 01DF71 : 0A          ;
CODE_01DF72:          ASL                                 ;; 01DF72 : 0A          ;
CODE_01DF73:          TAX                                 ;; 01DF73 : AA          ;
CODE_01DF74:          LDA.W DATA_01DEE3,X                 ;; 01DF74 : BD E3 DE    ;
CODE_01DF77:          STA.W OAM_Tile,Y                    ;; 01DF77 : 99 02 03    ;
CODE_01DF7A:          LDA.W DATA_01DEE4,X                 ;; 01DF7A : BD E4 DE    ;
CODE_01DF7D:          STA.W OAM_Tile2,Y                   ;; 01DF7D : 99 06 03    ;
CODE_01DF80:          LDA.W DATA_01DEE5,X                 ;; 01DF80 : BD E5 DE    ;
CODE_01DF83:          STA.W OAM_Tile3,Y                   ;; 01DF83 : 99 0A 03    ;
CODE_01DF86:          LDA.W DATA_01DEE6,X                 ;; 01DF86 : BD E6 DE    ;
CODE_01DF89:          STA.W OAM_Tile4,Y                   ;; 01DF89 : 99 0E 03    ;
CODE_01DF8C:          LDA.B #$E4                          ;; 01DF8C : A9 E4       ;
CODE_01DF8E:          STA.W $0312,Y                       ;; 01DF8E : 99 12 03    ;
CODE_01DF91:          PLX                                 ;; 01DF91 : FA          ;
CODE_01DF92:          LDA $64                             ;; 01DF92 : A5 64       ;
CODE_01DF94:          ORA.W DATA_01DF07,X                 ;; 01DF94 : 1D 07 DF    ;
CODE_01DF97:          STA.W OAM_Prop,Y                    ;; 01DF97 : 99 03 03    ;
CODE_01DF9A:          STA.W OAM_Tile2Prop,Y               ;; 01DF9A : 99 07 03    ;
CODE_01DF9D:          STA.W OAM_Tile3Prop,Y               ;; 01DF9D : 99 0B 03    ;
CODE_01DFA0:          STA.W OAM_Tile4Prop,Y               ;; 01DFA0 : 99 0F 03    ;
CODE_01DFA3:          ORA.B #$01                          ;; 01DFA3 : 09 01       ;
CODE_01DFA5:          STA.W $0313,Y                       ;; 01DFA5 : 99 13 03    ;
CODE_01DFA8:          PLX                                 ;; 01DFA8 : FA          ;
CODE_01DFA9:          TYA                                 ;; 01DFA9 : 98          ;
CODE_01DFAA:          LSR                                 ;; 01DFAA : 4A          ;
CODE_01DFAB:          LSR                                 ;; 01DFAB : 4A          ;
CODE_01DFAC:          TAY                                 ;; 01DFAC : A8          ;
CODE_01DFAD:          LDA.B #$00                          ;; 01DFAD : A9 00       ;
CODE_01DFAF:          STA.W OAM_TileSize,Y                ;; 01DFAF : 99 60 04    ;
CODE_01DFB2:          STA.W $0461,Y                       ;; 01DFB2 : 99 61 04    ;
CODE_01DFB5:          STA.W $0462,Y                       ;; 01DFB5 : 99 62 04    ;
CODE_01DFB8:          STA.W $0463,Y                       ;; 01DFB8 : 99 63 04    ;
CODE_01DFBB:          LDA.B #$02                          ;; 01DFBB : A9 02       ;
CODE_01DFBD:          STA.W $0464,Y                       ;; 01DFBD : 99 64 04    ;
Return01DFC0:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
DATA_01DFC1:          .db $00,$01,$02,$02,$03,$04,$04,$05 ;; 01DFC1               ;
                      .db $06,$06,$07,$00,$00,$08,$04,$02 ;; ?QPWZ?               ;
                      .db $08,$06,$03,$08,$07,$01,$08,$05 ;; ?QPWZ?               ;
                                                          ;;                      ;
CODE_01DFD9:          LDA.B #$07                          ;; 01DFD9 : A9 07       ;
CODE_01DFDB:          STA $00                             ;; 01DFDB : 85 00       ;
CODE_01DFDD:          LDX.B #$02                          ;; 01DFDD : A2 02       ;
CODE_01DFDF:          STX $01                             ;; 01DFDF : 86 01       ;
CODE_01DFE1:          LDA $00                             ;; 01DFE1 : A5 00       ;
CODE_01DFE3:          ASL                                 ;; 01DFE3 : 0A          ;
CODE_01DFE4:          ADC $00                             ;; 01DFE4 : 65 00       ;
CODE_01DFE6:          CLC                                 ;; 01DFE6 : 18          ;
CODE_01DFE7:          ADC $01                             ;; 01DFE7 : 65 01       ;
CODE_01DFE9:          TAY                                 ;; 01DFE9 : A8          ;
CODE_01DFEA:          LDA.W DATA_01DFC1,Y                 ;; 01DFEA : B9 C1 DF    ;
CODE_01DFED:          TAY                                 ;; 01DFED : A8          ;
CODE_01DFEE:          LDA.W DATA_01DD9A,Y                 ;; 01DFEE : B9 9A DD    ;
CODE_01DFF1:          STA $02                             ;; 01DFF1 : 85 02       ;
CODE_01DFF3:          LDA.W DATA_01DD91,Y                 ;; 01DFF3 : B9 91 DD    ;
CODE_01DFF6:          STA $03                             ;; 01DFF6 : 85 03       ;
CODE_01DFF8:          LDY.B #$09                          ;; 01DFF8 : A0 09       ;
CODE_01DFFA:          LDA.W RAM_SpriteYLo,Y               ;; 01DFFA : B9 D8 00    ;
CODE_01DFFD:          CMP $02                             ;; 01DFFD : C5 02       ;
CODE_01DFFF:          BNE CODE_01E008                     ;; 01DFFF : D0 07       ;
CODE_01E001:          LDA.W RAM_SpriteXLo,Y               ;; 01E001 : B9 E4 00    ;
CODE_01E004:          CMP $03                             ;; 01E004 : C5 03       ;
CODE_01E006:          BEQ CODE_01E00D                     ;; 01E006 : F0 05       ;
CODE_01E008:          DEY                                 ;; 01E008 : 88          ;
CODE_01E009:          CPY.B #$01                          ;; 01E009 : C0 01       ;
CODE_01E00B:          BNE CODE_01DFFA                     ;; 01E00B : D0 ED       ;
CODE_01E00D:          LDA.W $1570,Y                       ;; 01E00D : B9 70 15    ;
CODE_01E010:          STA $04,X                           ;; 01E010 : 95 04       ;
CODE_01E012:          STY $07,X                           ;; 01E012 : 94 07       ;
CODE_01E014:          DEX                                 ;; 01E014 : CA          ;
CODE_01E015:          BPL CODE_01DFDF                     ;; 01E015 : 10 C8       ;
CODE_01E017:          LDA $04                             ;; 01E017 : A5 04       ;
CODE_01E019:          CMP $05                             ;; 01E019 : C5 05       ;
CODE_01E01B:          BNE CODE_01E035                     ;; 01E01B : D0 18       ;
CODE_01E01D:          CMP $06                             ;; 01E01D : C5 06       ;
CODE_01E01F:          BNE CODE_01E035                     ;; 01E01F : D0 14       ;
CODE_01E021:          INC.W $1890                         ;; 01E021 : EE 90 18    ;
CODE_01E024:          LDA.B #$70                          ;; 01E024 : A9 70       ;
CODE_01E026:          LDY $07                             ;; 01E026 : A4 07       ;
CODE_01E028:          STA.W RAM_DisableInter,Y            ;; 01E028 : 99 4C 15    ;
CODE_01E02B:          LDY $08                             ;; 01E02B : A4 08       ;
CODE_01E02D:          STA.W RAM_DisableInter,Y            ;; 01E02D : 99 4C 15    ;
CODE_01E030:          LDY $09                             ;; 01E030 : A4 09       ;
CODE_01E032:          STA.W RAM_DisableInter,Y            ;; 01E032 : 99 4C 15    ;
CODE_01E035:          DEC $00                             ;; 01E035 : C6 00       ;
CODE_01E037:          BPL CODE_01DFDD                     ;; 01E037 : 10 A4       ;
CODE_01E039:          LDX.W $15E9                         ;; 01E039 : AE E9 15    ; X = Sprite index 
CODE_01E03C:          LDY.B #$29                          ;; 01E03C : A0 29       ;
CODE_01E03E:          LDA.W $1890                         ;; 01E03E : AD 90 18    ;
CODE_01E041:          STA.W $1920                         ;; 01E041 : 8D 20 19    ;
CODE_01E044:          BNE CODE_01E04C                     ;; 01E044 : D0 06       ;
ADDR_01E046:          LDA.B #$58                          ;; 01E046 : A9 58       ;
ADDR_01E048:          STA.W $14AB                         ;; 01E048 : 8D AB 14    ;
ADDR_01E04B:          INY                                 ;; 01E04B : C8          ;
CODE_01E04C:          STY.W $1DFC                         ;; 01E04C : 8C FC 1D    ; / Play sound effect 
Return01E04F:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
InitFireball:         LDA RAM_SpriteYLo,X                 ;; ?QPWZ? : B5 D8       ;
CODE_01E052:          STA.W $1528,X                       ;; 01E052 : 9D 28 15    ;
CODE_01E055:          LDA.W RAM_SpriteYHi,X               ;; 01E055 : BD D4 14    ;
CODE_01E058:          STA.W $151C,X                       ;; 01E058 : 9D 1C 15    ;
CODE_01E05B:          LDA RAM_SpriteYLo,X                 ;; 01E05B : B5 D8       ;
CODE_01E05D:          CLC                                 ;; 01E05D : 18          ;
CODE_01E05E:          ADC.B #$10                          ;; 01E05E : 69 10       ;
CODE_01E060:          STA RAM_SpriteYLo,X                 ;; 01E060 : 95 D8       ;
CODE_01E062:          LDA.W RAM_SpriteYHi,X               ;; 01E062 : BD D4 14    ;
CODE_01E065:          ADC.B #$00                          ;; 01E065 : 69 00       ;
CODE_01E067:          STA.W RAM_SpriteYHi,X               ;; 01E067 : 9D D4 14    ;
CODE_01E06A:          JSR.W CODE_019140                   ;; 01E06A : 20 40 91    ;
CODE_01E06D:          LDA.W $164A,X                       ;; 01E06D : BD 4A 16    ;
CODE_01E070:          BEQ CODE_01E05B                     ;; 01E070 : F0 E9       ;
CODE_01E072:          JSR.W CODE_01E0E2                   ;; 01E072 : 20 E2 E0    ;
CODE_01E075:          LDA.B #$20                          ;; 01E075 : A9 20       ;
CODE_01E077:          STA.W $1540,X                       ;; 01E077 : 9D 40 15    ;
Return01E07A:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
DATA_01E07B:          .db $F0,$DC,$D0,$C8,$C0,$B8,$B2,$AC ;; 01E07B               ;
                      .db $A6,$A0,$9A,$96,$92,$8C,$88,$84 ;; ?QPWZ?               ;
                      .db $80,$04,$08,$0C,$10,$14         ;; ?QPWZ?               ;
                                                          ;;                      ;
DATA_01E091:          .db $70,$20                         ;; 01E091               ;
                                                          ;;                      ;
Fireballs:            STZ.W $15D0,X                       ;; ?QPWZ? : 9E D0 15    ;
CODE_01E096:          LDA.W $1540,X                       ;; 01E096 : BD 40 15    ;
CODE_01E099:          BEQ CODE_01E0A7                     ;; 01E099 : F0 0C       ;
CODE_01E09B:          STA.W $15D0,X                       ;; 01E09B : 9D D0 15    ;
CODE_01E09E:          DEC A                               ;; 01E09E : 3A          ;
CODE_01E09F:          BNE Return01E0A6                    ;; 01E09F : D0 05       ;
CODE_01E0A1:          LDA.B #$27                          ;; 01E0A1 : A9 27       ; \ Play sound effect 
CODE_01E0A3:          STA.W $1DFC                         ;; 01E0A3 : 8D FC 1D    ; / 
Return01E0A6:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01E0A7:          LDA RAM_SpritesLocked               ;; 01E0A7 : A5 9D       ;
CODE_01E0A9:          BEQ CODE_01E0AE                     ;; 01E0A9 : F0 03       ;
CODE_01E0AB:          JMP.W CODE_01E12D                   ;; 01E0AB : 4C 2D E1    ;
                                                          ;;                      ;
CODE_01E0AE:          JSR.W MarioSprInteractRt            ;; 01E0AE : 20 E4 A7    ;
CODE_01E0B1:          JSR.W SetAnimationFrame             ;; 01E0B1 : 20 5F 8E    ;
CODE_01E0B4:          JSR.W SetAnimationFrame             ;; 01E0B4 : 20 5F 8E    ;
CODE_01E0B7:          LDA.W RAM_SpritePal,X               ;; 01E0B7 : BD F6 15    ;
CODE_01E0BA:          AND.B #$7F                          ;; 01E0BA : 29 7F       ;
CODE_01E0BC:          LDY RAM_SpriteSpeedY,X              ;; 01E0BC : B4 AA       ;
CODE_01E0BE:          BMI CODE_01E0C8                     ;; 01E0BE : 30 08       ;
CODE_01E0C0:          INC.W $1602,X                       ;; 01E0C0 : FE 02 16    ;
CODE_01E0C3:          INC.W $1602,X                       ;; 01E0C3 : FE 02 16    ;
CODE_01E0C6:          ORA.B #$80                          ;; 01E0C6 : 09 80       ;
CODE_01E0C8:          STA.W RAM_SpritePal,X               ;; 01E0C8 : 9D F6 15    ;
CODE_01E0CB:          JSR.W CODE_019140                   ;; 01E0CB : 20 40 91    ;
CODE_01E0CE:          LDA.W $164A,X                       ;; 01E0CE : BD 4A 16    ;
CODE_01E0D1:          BEQ CODE_01E106                     ;; 01E0D1 : F0 33       ;
CODE_01E0D3:          LDA RAM_SpriteSpeedY,X              ;; 01E0D3 : B5 AA       ;
CODE_01E0D5:          BMI CODE_01E106                     ;; 01E0D5 : 30 2F       ;
CODE_01E0D7:          JSL.L GetRand                       ;; 01E0D7 : 22 F9 AC 01 ;
CODE_01E0DB:          AND.B #$3F                          ;; 01E0DB : 29 3F       ;
CODE_01E0DD:          ADC.B #$60                          ;; 01E0DD : 69 60       ;
CODE_01E0DF:          STA.W $1540,X                       ;; 01E0DF : 9D 40 15    ;
CODE_01E0E2:          LDA RAM_SpriteYLo,X                 ;; 01E0E2 : B5 D8       ;
CODE_01E0E4:          SEC                                 ;; 01E0E4 : 38          ;
CODE_01E0E5:          SBC.W $1528,X                       ;; 01E0E5 : FD 28 15    ;
CODE_01E0E8:          STA $00                             ;; 01E0E8 : 85 00       ;
CODE_01E0EA:          LDA.W RAM_SpriteYHi,X               ;; 01E0EA : BD D4 14    ;
CODE_01E0ED:          SBC.W $151C,X                       ;; 01E0ED : FD 1C 15    ;
CODE_01E0F0:          LSR                                 ;; 01E0F0 : 4A          ;
CODE_01E0F1:          ROR $00                             ;; 01E0F1 : 66 00       ;
CODE_01E0F3:          LDA $00                             ;; 01E0F3 : A5 00       ;
CODE_01E0F5:          LSR                                 ;; 01E0F5 : 4A          ;
CODE_01E0F6:          LSR                                 ;; 01E0F6 : 4A          ;
CODE_01E0F7:          LSR                                 ;; 01E0F7 : 4A          ;
CODE_01E0F8:          TAY                                 ;; 01E0F8 : A8          ;
CODE_01E0F9:          LDA.W DATA_01E07B,Y                 ;; 01E0F9 : B9 7B E0    ;
CODE_01E0FC:          BMI CODE_01E103                     ;; 01E0FC : 30 05       ;
ADDR_01E0FE:          STA.W $1564,X                       ;; 01E0FE : 9D 64 15    ;
ADDR_01E101:          LDA.B #$80                          ;; 01E101 : A9 80       ;
CODE_01E103:          STA RAM_SpriteSpeedY,X              ;; 01E103 : 95 AA       ;
Return01E105:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01E106:          JSR.W SubSprYPosNoGrvty             ;; 01E106 : 20 D8 AB    ;
CODE_01E109:          LDA RAM_FrameCounterB               ;; 01E109 : A5 14       ;
CODE_01E10B:          AND.B #$07                          ;; 01E10B : 29 07       ;
CODE_01E10D:          ORA RAM_SpriteState,X               ;; 01E10D : 15 C2       ;
CODE_01E10F:          BNE CODE_01E115                     ;; 01E10F : D0 04       ;
CODE_01E111:          JSL.L CODE_0285DF                   ;; 01E111 : 22 DF 85 02 ;
CODE_01E115:          LDA.W $1564,X                       ;; 01E115 : BD 64 15    ;
CODE_01E118:          BNE CODE_01E12A                     ;; 01E118 : D0 10       ;
CODE_01E11A:          LDA RAM_SpriteSpeedY,X              ;; 01E11A : B5 AA       ;
CODE_01E11C:          BMI CODE_01E125                     ;; 01E11C : 30 07       ;
CODE_01E11E:          LDY RAM_SpriteState,X               ;; 01E11E : B4 C2       ;
CODE_01E120:          CMP.W DATA_01E091,Y                 ;; 01E120 : D9 91 E0    ;
CODE_01E123:          BCS CODE_01E12A                     ;; 01E123 : B0 05       ;
CODE_01E125:          CLC                                 ;; 01E125 : 18          ;
CODE_01E126:          ADC.B #$02                          ;; 01E126 : 69 02       ;
CODE_01E128:          STA RAM_SpriteSpeedY,X              ;; 01E128 : 95 AA       ;
CODE_01E12A:          JSR.W SubOffscreen0Bnk1             ;; 01E12A : 20 31 AC    ;
CODE_01E12D:          LDA RAM_SpriteState,X               ;; 01E12D : B5 C2       ;
CODE_01E12F:          BEQ CODE_01E198                     ;; 01E12F : F0 67       ;
CODE_01E131:          LDY RAM_SpritesLocked               ;; 01E131 : A4 9D       ;
CODE_01E133:          BNE CODE_01E164                     ;; 01E133 : D0 2F       ;
CODE_01E135:          LDA.W RAM_SprObjStatus,X            ;; 01E135 : BD 88 15    ; \ Branch if not on ground 
CODE_01E138:          AND.B #$04                          ;; 01E138 : 29 04       ;  | 
CODE_01E13A:          BEQ CODE_01E151                     ;; 01E13A : F0 15       ; / 
CODE_01E13C:          STZ RAM_SpriteSpeedY,X              ;; 01E13C : 74 AA       ; Sprite Y Speed = 0 
CODE_01E13E:          LDA.W $1558,X                       ;; 01E13E : BD 58 15    ;
CODE_01E141:          BEQ CODE_01E14A                     ;; 01E141 : F0 07       ;
CODE_01E143:          CMP.B #$01                          ;; 01E143 : C9 01       ;
CODE_01E145:          BNE CODE_01E14F                     ;; 01E145 : D0 08       ;
CODE_01E147:          JMP.W CODE_019ACB                   ;; 01E147 : 4C CB 9A    ;
                                                          ;;                      ;
CODE_01E14A:          LDA.B #$80                          ;; 01E14A : A9 80       ;
CODE_01E14C:          STA.W $1558,X                       ;; 01E14C : 9D 58 15    ;
CODE_01E14F:          BRA CODE_01E164                     ;; 01E14F : 80 13       ;
                                                          ;;                      ;
CODE_01E151:          TXA                                 ;; 01E151 : 8A          ;
CODE_01E152:          ASL                                 ;; 01E152 : 0A          ;
CODE_01E153:          ASL                                 ;; 01E153 : 0A          ;
CODE_01E154:          CLC                                 ;; 01E154 : 18          ;
CODE_01E155:          ADC RAM_FrameCounter                ;; 01E155 : 65 13       ;
CODE_01E157:          LDY.B #$F0                          ;; 01E157 : A0 F0       ;
CODE_01E159:          AND.B #$04                          ;; 01E159 : 29 04       ;
CODE_01E15B:          BEQ CODE_01E15F                     ;; 01E15B : F0 02       ;
CODE_01E15D:          LDY.B #$10                          ;; 01E15D : A0 10       ;
CODE_01E15F:          STY RAM_SpriteSpeedX,X              ;; 01E15F : 94 B6       ;
CODE_01E161:          JSR.W SubSprXPosNoGrvty             ;; 01E161 : 20 CC AB    ;
CODE_01E164:          LDA RAM_SpriteYLo,X                 ;; 01E164 : B5 D8       ;
CODE_01E166:          CMP.B #$F0                          ;; 01E166 : C9 F0       ;
CODE_01E168:          BCC CODE_01E16D                     ;; 01E168 : 90 03       ;
ADDR_01E16A:          STZ.W $14C8,X                       ;; 01E16A : 9E C8 14    ;
CODE_01E16D:          JSR.W SubSprGfx2Entry1              ;; 01E16D : 20 0D 9F    ;
CODE_01E170:          LDY.W RAM_SprOAMIndex,X             ;; 01E170 : BC EA 15    ; Y = Index into sprite OAM 
CODE_01E173:          PHX                                 ;; 01E173 : DA          ;
CODE_01E174:          LDA RAM_FrameCounterB               ;; 01E174 : A5 14       ;
CODE_01E176:          AND.B #$0C                          ;; 01E176 : 29 0C       ;
CODE_01E178:          LSR                                 ;; 01E178 : 4A          ;
CODE_01E179:          ADC.W $15E9                         ;; 01E179 : 6D E9 15    ;
CODE_01E17C:          LSR                                 ;; 01E17C : 4A          ;
CODE_01E17D:          AND.B #$03                          ;; 01E17D : 29 03       ;
CODE_01E17F:          TAX                                 ;; 01E17F : AA          ;
CODE_01E180:          LDA.W BowserFlameTiles,X            ;; 01E180 : BD 90 E1    ;
CODE_01E183:          STA.W OAM_Tile,Y                    ;; 01E183 : 99 02 03    ;
CODE_01E186:          LDA.W DATA_01E194,X                 ;; 01E186 : BD 94 E1    ;
CODE_01E189:          ORA $64                             ;; 01E189 : 05 64       ;
CODE_01E18B:          STA.W OAM_Prop,Y                    ;; 01E18B : 99 03 03    ;
CODE_01E18E:          PLX                                 ;; 01E18E : FA          ;
Return01E18F:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
BowserFlameTiles:     .db $2A,$2C,$2A,$2C                 ;; ?QPWZ?               ;
                                                          ;;                      ;
DATA_01E194:          .db $05,$05,$45,$45                 ;; 01E194               ;
                                                          ;;                      ;
CODE_01E198:          LDA.B #$01                          ;; 01E198 : A9 01       ;
CODE_01E19A:          JSR.W SubSprGfx0Entry0              ;; 01E19A : 20 F3 9C    ;
CODE_01E19D:          REP #$20                            ;; 01E19D : C2 20       ; Accum (16 bit) 
CODE_01E19F:          LDA.W #$0008                        ;; 01E19F : A9 08 00    ;
CODE_01E1A2:          ASL                                 ;; 01E1A2 : 0A          ;
CODE_01E1A3:          ASL                                 ;; 01E1A3 : 0A          ;
CODE_01E1A4:          ASL                                 ;; 01E1A4 : 0A          ;
CODE_01E1A5:          ASL                                 ;; 01E1A5 : 0A          ;
CODE_01E1A6:          ASL                                 ;; 01E1A6 : 0A          ;
CODE_01E1A7:          CLC                                 ;; 01E1A7 : 18          ;
CODE_01E1A8:          ADC.W #$8500                        ;; 01E1A8 : 69 00 85    ;
CODE_01E1AB:          STA.W $0D8B                         ;; 01E1AB : 8D 8B 0D    ;
CODE_01E1AE:          CLC                                 ;; 01E1AE : 18          ;
CODE_01E1AF:          ADC.W #$0200                        ;; 01E1AF : 69 00 02    ;
CODE_01E1B2:          STA.W $0D95                         ;; 01E1B2 : 8D 95 0D    ;
CODE_01E1B5:          SEP #$20                            ;; 01E1B5 : E2 20       ; Accum (8 bit) 
Return01E1B7:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
InitKeyHole:          LDA RAM_SpriteXLo,X                 ;; ?QPWZ? : B5 E4       ;
CODE_01E1BA:          CLC                                 ;; 01E1BA : 18          ;
CODE_01E1BB:          ADC.B #$08                          ;; 01E1BB : 69 08       ;
CODE_01E1BD:          STA RAM_SpriteXLo,X                 ;; 01E1BD : 95 E4       ;
CODE_01E1BF:          LDA.W RAM_SpriteXHi,X               ;; 01E1BF : BD E0 14    ;
CODE_01E1C2:          ADC.B #$00                          ;; 01E1C2 : 69 00       ;
CODE_01E1C4:          STA.W RAM_SpriteXHi,X               ;; 01E1C4 : 9D E0 14    ;
Return01E1C7:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
Keyhole:              LDY.B #$0B                          ;; ?QPWZ? : A0 0B       ;
CODE_01E1CA:          LDA.W $14C8,Y                       ;; 01E1CA : B9 C8 14    ;
CODE_01E1CD:          CMP.B #$08                          ;; 01E1CD : C9 08       ;
CODE_01E1CF:          BCC CODE_01E1D8                     ;; 01E1CF : 90 07       ;
CODE_01E1D1:          LDA.W RAM_SpriteNum,Y               ;; 01E1D1 : B9 9E 00    ;
CODE_01E1D4:          CMP.B #$80                          ;; 01E1D4 : C9 80       ;
CODE_01E1D6:          BEQ CODE_01E1DB                     ;; 01E1D6 : F0 03       ;
CODE_01E1D8:          DEY                                 ;; 01E1D8 : 88          ;
CODE_01E1D9:          BPL CODE_01E1CA                     ;; 01E1D9 : 10 EF       ;
CODE_01E1DB:          LDA.W RAM_OnYoshi                   ;; 01E1DB : AD 7A 18    ;
CODE_01E1DE:          BEQ CODE_01E1E5                     ;; 01E1DE : F0 05       ;
CODE_01E1E0:          LDA.W $191C                         ;; 01E1E0 : AD 1C 19    ;
CODE_01E1E3:          BNE CODE_01E1ED                     ;; 01E1E3 : D0 08       ;
CODE_01E1E5:          TYA                                 ;; 01E1E5 : 98          ;
CODE_01E1E6:          STA.W $151C,X                       ;; 01E1E6 : 9D 1C 15    ;
CODE_01E1E9:          BMI CODE_01E23A                     ;; 01E1E9 : 30 4F       ;
CODE_01E1EB:          BRA CODE_01E1F3                     ;; 01E1EB : 80 06       ;
                                                          ;;                      ;
CODE_01E1ED:          JSL.L GetMarioClipping              ;; 01E1ED : 22 64 B6 03 ;
CODE_01E1F1:          BRA CODE_01E201                     ;; 01E1F1 : 80 0E       ;
                                                          ;;                      ;
CODE_01E1F3:          LDA.W $14C8,Y                       ;; 01E1F3 : B9 C8 14    ;
CODE_01E1F6:          CMP.B #$0B                          ;; 01E1F6 : C9 0B       ;
CODE_01E1F8:          BNE CODE_01E23A                     ;; 01E1F8 : D0 40       ;
CODE_01E1FA:          PHX                                 ;; 01E1FA : DA          ;
CODE_01E1FB:          TYX                                 ;; 01E1FB : BB          ;
CODE_01E1FC:          JSL.L GetSpriteClippingB            ;; 01E1FC : 22 E5 B6 03 ;
CODE_01E200:          PLX                                 ;; 01E200 : FA          ;
CODE_01E201:          JSL.L GetSpriteClippingA            ;; 01E201 : 22 9F B6 03 ;
CODE_01E205:          JSL.L CheckForContact               ;; 01E205 : 22 2B B7 03 ;
CODE_01E209:          BCC CODE_01E23A                     ;; 01E209 : 90 2F       ;
CODE_01E20B:          LDA.W RAM_DisableInter,X            ;; 01E20B : BD 4C 15    ;
CODE_01E20E:          BNE CODE_01E23A                     ;; 01E20E : D0 2A       ;
CODE_01E210:          LDA.B #$30                          ;; 01E210 : A9 30       ;
CODE_01E212:          STA.W $1434                         ;; 01E212 : 8D 34 14    ;
CODE_01E215:          LDA.B #$10                          ;; 01E215 : A9 10       ;
CODE_01E217:          STA.W $1DFB                         ;; 01E217 : 8D FB 1D    ; / Change music 
CODE_01E21A:          INC.W $13FB                         ;; 01E21A : EE FB 13    ;
CODE_01E21D:          INC RAM_SpritesLocked               ;; 01E21D : E6 9D       ;
CODE_01E21F:          LDA.W RAM_SpriteXHi,X               ;; 01E21F : BD E0 14    ;
CODE_01E222:          STA.W $1437                         ;; 01E222 : 8D 37 14    ;
CODE_01E225:          LDA RAM_SpriteXLo,X                 ;; 01E225 : B5 E4       ;
CODE_01E227:          STA.W RAM_KeyHolePos1               ;; 01E227 : 8D 36 14    ;
CODE_01E22A:          LDA.W RAM_SpriteYHi,X               ;; 01E22A : BD D4 14    ;
CODE_01E22D:          STA.W $1439                         ;; 01E22D : 8D 39 14    ;
CODE_01E230:          LDA RAM_SpriteYLo,X                 ;; 01E230 : B5 D8       ;
CODE_01E232:          STA.W RAM_KeyHolePos2               ;; 01E232 : 8D 38 14    ;
CODE_01E235:          LDA.B #$30                          ;; 01E235 : A9 30       ;
CODE_01E237:          STA.W RAM_DisableInter,X            ;; 01E237 : 9D 4C 15    ;
CODE_01E23A:          JSR.W GetDrawInfoBnk1               ;; 01E23A : 20 65 A3    ;
CODE_01E23D:          LDA $00                             ;; 01E23D : A5 00       ;
CODE_01E23F:          STA.W OAM_DispX,Y                   ;; 01E23F : 99 00 03    ;
CODE_01E242:          STA.W OAM_Tile2DispX,Y              ;; 01E242 : 99 04 03    ;
CODE_01E245:          LDA $01                             ;; 01E245 : A5 01       ;
CODE_01E247:          STA.W OAM_DispY,Y                   ;; 01E247 : 99 01 03    ;
CODE_01E24A:          CLC                                 ;; 01E24A : 18          ;
CODE_01E24B:          ADC.B #$08                          ;; 01E24B : 69 08       ;
CODE_01E24D:          STA.W OAM_Tile2DispY,Y              ;; 01E24D : 99 05 03    ;
CODE_01E250:          LDA.B #$EB                          ;; 01E250 : A9 EB       ;
CODE_01E252:          STA.W OAM_Tile,Y                    ;; 01E252 : 99 02 03    ;
CODE_01E255:          LDA.B #$FB                          ;; 01E255 : A9 FB       ;
CODE_01E257:          STA.W OAM_Tile2,Y                   ;; 01E257 : 99 06 03    ;
CODE_01E25A:          LDA.B #$30                          ;; 01E25A : A9 30       ;
CODE_01E25C:          STA.W OAM_Prop,Y                    ;; 01E25C : 99 03 03    ;
CODE_01E25F:          STA.W OAM_Tile2Prop,Y               ;; 01E25F : 99 07 03    ;
CODE_01E262:          LDY.B #$00                          ;; 01E262 : A0 00       ;
CODE_01E264:          LDA.B #$01                          ;; 01E264 : A9 01       ;
CODE_01E266:          JSR.W FinishOAMWriteRt              ;; 01E266 : 20 BB B7    ;
Return01E269:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01E26A:          LDA RAM_FrameCounter                ;; 01E26A : A5 13       ;
CODE_01E26C:          AND.B #$3F                          ;; 01E26C : 29 3F       ;
CODE_01E26E:          BNE CODE_01E27B                     ;; 01E26E : D0 0B       ;
CODE_01E270:          LDA.W $1890                         ;; 01E270 : AD 90 18    ;
CODE_01E273:          BEQ CODE_01E27B                     ;; 01E273 : F0 06       ;
CODE_01E275:          DEC.W $1890                         ;; 01E275 : CE 90 18    ;
CODE_01E278:          JSR.W CODE_01E281                   ;; 01E278 : 20 81 E2    ;
CODE_01E27B:          LDA.B #$01                          ;; 01E27B : A9 01       ;
CODE_01E27D:          STA.W $18B8                         ;; 01E27D : 8D B8 18    ;
Return01E280:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01E281:          LDY.B #$07                          ;; 01E281 : A0 07       ;
CODE_01E283:          LDA.W $1892,Y                       ;; 01E283 : B9 92 18    ;
CODE_01E286:          BEQ CODE_01E28C                     ;; 01E286 : F0 04       ;
CODE_01E288:          DEY                                 ;; 01E288 : 88          ;
CODE_01E289:          BPL CODE_01E283                     ;; 01E289 : 10 F8       ;
Return01E28B:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01E28C:          LDA.B #$01                          ;; 01E28C : A9 01       ;
CODE_01E28E:          STA.W $1892,Y                       ;; 01E28E : 99 92 18    ;
CODE_01E291:          LDA.B #$00                          ;; 01E291 : A9 00       ;
CODE_01E293:          STA.W $1E02,Y                       ;; 01E293 : 99 02 1E    ;
CODE_01E296:          LDA.B #$01                          ;; 01E296 : A9 01       ;
CODE_01E298:          STA.W $1E2A,Y                       ;; 01E298 : 99 2A 1E    ;
CODE_01E29B:          LDA.B #$18                          ;; 01E29B : A9 18       ;
CODE_01E29D:          STA.W $1E16,Y                       ;; 01E29D : 99 16 1E    ;
CODE_01E2A0:          LDA.B #$00                          ;; 01E2A0 : A9 00       ;
CODE_01E2A2:          STA.W $1E3E,Y                       ;; 01E2A2 : 99 3E 1E    ;
CODE_01E2A5:          LDA.B #$01                          ;; 01E2A5 : A9 01       ;
CODE_01E2A7:          STA.W $1E66,Y                       ;; 01E2A7 : 99 66 1E    ;
CODE_01E2AA:          LDA.B #$10                          ;; 01E2AA : A9 10       ;
CODE_01E2AC:          STA.W $1E52,Y                       ;; 01E2AC : 99 52 1E    ;
Return01E2AF:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
DATA_01E2B0:          .db $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF ;; 01E2B0               ;
                      .db $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF ;; ?QPWZ?               ;
                      .db $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF ;; ?QPWZ?               ;
                      .db $13,$14,$15,$16,$17,$18,$19     ;; ?QPWZ?               ;
                                                          ;;                      ;
MontyMole:            JSR.W SubOffscreen0Bnk1             ;; ?QPWZ? : 20 31 AC    ;
CODE_01E2D2:          LDA RAM_SpriteState,X               ;; 01E2D2 : B5 C2       ;
CODE_01E2D4:          JSL.L ExecutePtr                    ;; 01E2D4 : 22 DF 86 00 ;
                                                          ;;                      ;
Ptrs01E2D8:           .dw CODE_01E2E0                     ;; ?QPWZ? : E0 E2       ;
                      .dw CODE_01E309                     ;; ?QPWZ? : 09 E3       ;
                      .dw CODE_01E37F                     ;; ?QPWZ? : 7F E3       ;
                      .dw CODE_01E393                     ;; ?QPWZ? : 93 E3       ;
                                                          ;;                      ;
CODE_01E2E0:          JSR.W SubHorizPos                   ;; 01E2E0 : 20 30 AD    ;
CODE_01E2E3:          LDA $0F                             ;; 01E2E3 : A5 0F       ;
CODE_01E2E5:          CLC                                 ;; 01E2E5 : 18          ;
CODE_01E2E6:          ADC.B #$60                          ;; 01E2E6 : 69 60       ;
CODE_01E2E8:          CMP.B #$C0                          ;; 01E2E8 : C9 C0       ;
CODE_01E2EA:          BCS CODE_01E305                     ;; 01E2EA : B0 19       ;
CODE_01E2EC:          LDA.W RAM_OffscreenHorz,X           ;; 01E2EC : BD A0 15    ;
CODE_01E2EF:          BNE CODE_01E305                     ;; 01E2EF : D0 14       ;
CODE_01E2F1:          INC RAM_SpriteState,X               ;; 01E2F1 : F6 C2       ;
CODE_01E2F3:          LDY.W $0DB3                         ;; 01E2F3 : AC B3 0D    ;
CODE_01E2F6:          LDA.W $1F11,Y                       ;; 01E2F6 : B9 11 1F    ;
CODE_01E2F9:          TAY                                 ;; 01E2F9 : A8          ;
CODE_01E2FA:          LDA.B #$68                          ;; 01E2FA : A9 68       ;
CODE_01E2FC:          CPY.B #$01                          ;; 01E2FC : C0 01       ;
CODE_01E2FE:          BEQ CODE_01E302                     ;; 01E2FE : F0 02       ;
CODE_01E300:          LDA.B #$20                          ;; 01E300 : A9 20       ;
CODE_01E302:          STA.W $1540,X                       ;; 01E302 : 9D 40 15    ;
CODE_01E305:          JSR.W GetDrawInfoBnk1               ;; 01E305 : 20 65 A3    ;
Return01E308:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01E309:          LDA.W $1540,X                       ;; 01E309 : BD 40 15    ;
CODE_01E30C:          ORA.W $15D0,X                       ;; 01E30C : 1D D0 15    ;
CODE_01E30F:          BNE CODE_01E343                     ;; 01E30F : D0 32       ;
CODE_01E311:          INC RAM_SpriteState,X               ;; 01E311 : F6 C2       ;
CODE_01E313:          LDA.B #$B0                          ;; 01E313 : A9 B0       ;
CODE_01E315:          STA RAM_SpriteSpeedY,X              ;; 01E315 : 95 AA       ;
CODE_01E317:          JSR.W IsSprOffScreen                ;; 01E317 : 20 CB 80    ;
CODE_01E31A:          BNE CODE_01E320                     ;; 01E31A : D0 04       ;
CODE_01E31C:          TAY                                 ;; 01E31C : A8          ;
CODE_01E31D:          JSR.W CODE_0199E1                   ;; 01E31D : 20 E1 99    ;
CODE_01E320:          JSR.W FaceMario                     ;; 01E320 : 20 7C 85    ;
CODE_01E323:          LDA RAM_SpriteNum,X                 ;; 01E323 : B5 9E       ;
CODE_01E325:          CMP.B #$4E                          ;; 01E325 : C9 4E       ;
CODE_01E327:          BNE CODE_01E343                     ;; 01E327 : D0 1A       ;
CODE_01E329:          LDA RAM_SpriteXLo,X                 ;; 01E329 : B5 E4       ; \ $9A = Sprite X position 
CODE_01E32B:          STA RAM_BlockYLo                    ;; 01E32B : 85 9A       ;  | for block creation 
CODE_01E32D:          LDA.W RAM_SpriteXHi,X               ;; 01E32D : BD E0 14    ;  | 
CODE_01E330:          STA RAM_BlockYHi                    ;; 01E330 : 85 9B       ; / 
CODE_01E332:          LDA RAM_SpriteYLo,X                 ;; 01E332 : B5 D8       ; \ $98 = Sprite Y position 
CODE_01E334:          STA RAM_BlockXLo                    ;; 01E334 : 85 98       ;  | for block creation 
CODE_01E336:          LDA.W RAM_SpriteYHi,X               ;; 01E336 : BD D4 14    ;  | 
CODE_01E339:          STA RAM_BlockXHi                    ;; 01E339 : 85 99       ; / 
CODE_01E33B:          LDA.B #$08                          ;; 01E33B : A9 08       ; \ Block to generate = Mole hole 
CODE_01E33D:          STA RAM_BlockBlock                  ;; 01E33D : 85 9C       ; / 
CODE_01E33F:          JSL.L GenerateTile                  ;; 01E33F : 22 B0 BE 00 ;
CODE_01E343:          LDA RAM_SpriteNum,X                 ;; 01E343 : B5 9E       ;
CODE_01E345:          CMP.B #$4D                          ;; 01E345 : C9 4D       ;
CODE_01E347:          BNE CODE_01E363                     ;; 01E347 : D0 1A       ;
CODE_01E349:          LDA RAM_FrameCounterB               ;; 01E349 : A5 14       ;
CODE_01E34B:          LSR                                 ;; 01E34B : 4A          ;
CODE_01E34C:          LSR                                 ;; 01E34C : 4A          ;
CODE_01E34D:          LSR                                 ;; 01E34D : 4A          ;
CODE_01E34E:          LSR                                 ;; 01E34E : 4A          ;
CODE_01E34F:          AND.B #$01                          ;; 01E34F : 29 01       ;
CODE_01E351:          TAY                                 ;; 01E351 : A8          ;
CODE_01E352:          LDA.W DATA_01E35F,Y                 ;; 01E352 : B9 5F E3    ;
CODE_01E355:          STA.W $1602,X                       ;; 01E355 : 9D 02 16    ;
CODE_01E358:          LDA.W DATA_01E361,Y                 ;; 01E358 : B9 61 E3    ;
CODE_01E35B:          JSR.W SubSprGfx0Entry0              ;; 01E35B : 20 F3 9C    ;
Return01E35E:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
DATA_01E35F:          .db $01,$02                         ;; 01E35F               ;
                                                          ;;                      ;
DATA_01E361:          .db $00,$05                         ;; 01E361               ;
                                                          ;;                      ;
CODE_01E363:          LDA RAM_FrameCounterB               ;; 01E363 : A5 14       ;
CODE_01E365:          ASL                                 ;; 01E365 : 0A          ;
CODE_01E366:          ASL                                 ;; 01E366 : 0A          ;
CODE_01E367:          AND.B #$C0                          ;; 01E367 : 29 C0       ;
CODE_01E369:          ORA.B #$31                          ;; 01E369 : 09 31       ;
CODE_01E36B:          STA.W RAM_SpritePal,X               ;; 01E36B : 9D F6 15    ;
CODE_01E36E:          LDA.B #$03                          ;; 01E36E : A9 03       ;
CODE_01E370:          STA.W $1602,X                       ;; 01E370 : 9D 02 16    ;
CODE_01E373:          JSR.W SubSprGfx2Entry1              ;; 01E373 : 20 0D 9F    ;
CODE_01E376:          LDA.W RAM_SpritePal,X               ;; 01E376 : BD F6 15    ;
CODE_01E379:          AND.B #$3F                          ;; 01E379 : 29 3F       ;
CODE_01E37B:          STA.W RAM_SpritePal,X               ;; 01E37B : 9D F6 15    ;
Return01E37E:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01E37F:          JSR.W CODE_01E3EF                   ;; 01E37F : 20 EF E3    ;
CODE_01E382:          LDA.B #$02                          ;; 01E382 : A9 02       ;
CODE_01E384:          STA.W $1602,X                       ;; 01E384 : 9D 02 16    ;
CODE_01E387:          JSR.W IsOnGround                    ;; 01E387 : 20 0E 80    ;
CODE_01E38A:          BEQ Return01E38E                    ;; 01E38A : F0 02       ;
CODE_01E38C:          INC RAM_SpriteState,X               ;; 01E38C : F6 C2       ;
Return01E38E:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
DATA_01E38F:          .db $10,$F0                         ;; 01E38F               ;
                                                          ;;                      ;
DATA_01E391:          .db $18,$E8                         ;; 01E391               ;
                                                          ;;                      ;
CODE_01E393:          JSR.W CODE_01E3EF                   ;; 01E393 : 20 EF E3    ;
CODE_01E396:          LDA.W $151C,X                       ;; 01E396 : BD 1C 15    ;
CODE_01E399:          BNE CODE_01E3C7                     ;; 01E399 : D0 2C       ;
CODE_01E39B:          JSR.W SetAnimationFrame             ;; 01E39B : 20 5F 8E    ;
CODE_01E39E:          JSR.W SetAnimationFrame             ;; 01E39E : 20 5F 8E    ;
CODE_01E3A1:          JSL.L GetRand                       ;; 01E3A1 : 22 F9 AC 01 ;
CODE_01E3A5:          AND.B #$01                          ;; 01E3A5 : 29 01       ;
CODE_01E3A7:          BNE Return01E3C6                    ;; 01E3A7 : D0 1D       ;
CODE_01E3A9:          JSR.W FaceMario                     ;; 01E3A9 : 20 7C 85    ;
CODE_01E3AC:          LDA RAM_SpriteSpeedX,X              ;; 01E3AC : B5 B6       ;
CODE_01E3AE:          CMP.W DATA_01E391,Y                 ;; 01E3AE : D9 91 E3    ;
CODE_01E3B1:          BEQ Return01E3C6                    ;; 01E3B1 : F0 13       ;
CODE_01E3B3:          CLC                                 ;; 01E3B3 : 18          ;
CODE_01E3B4:          ADC.W DATA_01EBB4,Y                 ;; 01E3B4 : 79 B4 EB    ;
CODE_01E3B7:          STA RAM_SpriteSpeedX,X              ;; 01E3B7 : 95 B6       ;
CODE_01E3B9:          TYA                                 ;; 01E3B9 : 98          ;
CODE_01E3BA:          LSR                                 ;; 01E3BA : 4A          ;
CODE_01E3BB:          ROR                                 ;; 01E3BB : 6A          ;
CODE_01E3BC:          EOR RAM_SpriteSpeedX,X              ;; 01E3BC : 55 B6       ;
CODE_01E3BE:          BPL Return01E3C6                    ;; 01E3BE : 10 06       ;
CODE_01E3C0:          JSR.W CODE_01804E                   ;; 01E3C0 : 20 4E 80    ;
CODE_01E3C3:          JSR.W SetAnimationFrame             ;; 01E3C3 : 20 5F 8E    ;
Return01E3C6:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01E3C7:          JSR.W IsOnGround                    ;; 01E3C7 : 20 0E 80    ;
CODE_01E3CA:          BEQ CODE_01E3E9                     ;; 01E3CA : F0 1D       ;
CODE_01E3CC:          JSR.W SetAnimationFrame             ;; 01E3CC : 20 5F 8E    ;
CODE_01E3CF:          JSR.W SetAnimationFrame             ;; 01E3CF : 20 5F 8E    ;
CODE_01E3D2:          LDY.W RAM_SpriteDir,X               ;; 01E3D2 : BC 7C 15    ;
CODE_01E3D5:          LDA.W DATA_01E38F,Y                 ;; 01E3D5 : B9 8F E3    ;
CODE_01E3D8:          STA RAM_SpriteSpeedX,X              ;; 01E3D8 : 95 B6       ;
CODE_01E3DA:          LDA.W $1558,X                       ;; 01E3DA : BD 58 15    ;
CODE_01E3DD:          BNE Return01E3E8                    ;; 01E3DD : D0 09       ;
CODE_01E3DF:          LDA.B #$50                          ;; 01E3DF : A9 50       ;
CODE_01E3E1:          STA.W $1558,X                       ;; 01E3E1 : 9D 58 15    ;
CODE_01E3E4:          LDA.B #$D8                          ;; 01E3E4 : A9 D8       ;
CODE_01E3E6:          STA RAM_SpriteSpeedY,X              ;; 01E3E6 : 95 AA       ;
Return01E3E8:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01E3E9:          LDA.B #$01                          ;; 01E3E9 : A9 01       ;
CODE_01E3EB:          STA.W $1602,X                       ;; 01E3EB : 9D 02 16    ;
Return01E3EE:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01E3EF:          LDA $64                             ;; 01E3EF : A5 64       ;
CODE_01E3F1:          PHA                                 ;; 01E3F1 : 48          ;
CODE_01E3F2:          LDA.W $1540,X                       ;; 01E3F2 : BD 40 15    ;
CODE_01E3F5:          BEQ CODE_01E3FB                     ;; 01E3F5 : F0 04       ;
ADDR_01E3F7:          LDA.B #$10                          ;; 01E3F7 : A9 10       ;
ADDR_01E3F9:          STA $64                             ;; 01E3F9 : 85 64       ;
CODE_01E3FB:          JSR.W SubSprGfx2Entry1              ;; 01E3FB : 20 0D 9F    ;
CODE_01E3FE:          PLA                                 ;; 01E3FE : 68          ;
CODE_01E3FF:          STA $64                             ;; 01E3FF : 85 64       ;
CODE_01E401:          LDA RAM_SpritesLocked               ;; 01E401 : A5 9D       ; \ Branch if sprites locked 
CODE_01E403:          BNE CODE_01E41C                     ;; 01E403 : D0 17       ; / 
CODE_01E405:          JSR.W SubSprSpr+MarioSpr            ;; 01E405 : 20 C1 8F    ;
CODE_01E408:          JSR.W SubUpdateSprPos               ;; 01E408 : 20 32 90    ;
CODE_01E40B:          JSR.W IsOnGround                    ;; 01E40B : 20 0E 80    ;
CODE_01E40E:          BEQ CODE_01E413                     ;; 01E40E : F0 03       ;
CODE_01E410:          JSR.W SetSomeYSpeed??               ;; 01E410 : 20 04 9A    ;
CODE_01E413:          JSR.W IsTouchingObjSide             ;; 01E413 : 20 08 80    ;
CODE_01E416:          BEQ Return01E41B                    ;; 01E416 : F0 03       ;
CODE_01E418:          JSR.W FlipSpriteDir                 ;; 01E418 : 20 98 90    ;
Return01E41B:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01E41C:          PLA                                 ;; 01E41C : 68          ;
CODE_01E41D:          PLA                                 ;; 01E41D : 68          ;
Return01E41E:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
DATA_01E41F:          .db $08,$F8,$02,$03,$04,$04,$04,$04 ;; 01E41F               ;
                      .db $04,$04,$04,$04                 ;; ?QPWZ?               ;
                                                          ;;                      ;
DryBonesAndBeetle:    LDA.W $14C8,X                       ;; ?QPWZ? : BD C8 14    ;
CODE_01E42E:          CMP.B #$08                          ;; 01E42E : C9 08       ;
CODE_01E430:          BEQ CODE_01E43E                     ;; 01E430 : F0 0C       ;
CODE_01E432:          ASL.W RAM_SpritePal,X               ;; 01E432 : 1E F6 15    ;
CODE_01E435:          SEC                                 ;; 01E435 : 38          ;
CODE_01E436:          ROR.W RAM_SpritePal,X               ;; 01E436 : 7E F6 15    ;
CODE_01E439:          JMP.W CODE_01E5BF                   ;; 01E439 : 4C BF E5    ;
                                                          ;;                      ;
                                                          ;;                      ;
DATA_01E43C:          .db $08,$F8                         ;; 01E43C               ;
                                                          ;;                      ;
CODE_01E43E:          LDA.W $1534,X                       ;; 01E43E : BD 34 15    ;
CODE_01E441:          BEQ CODE_01E4C0                     ;; 01E441 : F0 7D       ;
CODE_01E443:          JSR.W SubSprGfx2Entry1              ;; 01E443 : 20 0D 9F    ;
CODE_01E446:          LDY.W $1540,X                       ;; 01E446 : BC 40 15    ;
CODE_01E449:          BNE CODE_01E453                     ;; 01E449 : D0 08       ;
CODE_01E44B:          STZ.W $1534,X                       ;; 01E44B : 9E 34 15    ;
CODE_01E44E:          PHY                                 ;; 01E44E : 5A          ;
CODE_01E44F:          JSR.W FaceMario                     ;; 01E44F : 20 7C 85    ;
CODE_01E452:          PLY                                 ;; 01E452 : 7A          ;
CODE_01E453:          LDA.B #$48                          ;; 01E453 : A9 48       ;
CODE_01E455:          CPY.B #$10                          ;; 01E455 : C0 10       ;
CODE_01E457:          BCC CODE_01E45F                     ;; 01E457 : 90 06       ;
CODE_01E459:          CPY.B #$F0                          ;; 01E459 : C0 F0       ;
CODE_01E45B:          BCS CODE_01E45F                     ;; 01E45B : B0 02       ;
CODE_01E45D:          LDA.B #$2E                          ;; 01E45D : A9 2E       ;
CODE_01E45F:          LDY.W RAM_SprOAMIndex,X             ;; 01E45F : BC EA 15    ; Y = Index into sprite OAM 
CODE_01E462:          STA.W OAM_Tile,Y                    ;; 01E462 : 99 02 03    ;
CODE_01E465:          TYA                                 ;; 01E465 : 98          ;
CODE_01E466:          CLC                                 ;; 01E466 : 18          ;
CODE_01E467:          ADC.B #$04                          ;; 01E467 : 69 04       ;
CODE_01E469:          STA.W RAM_SprOAMIndex,X             ;; 01E469 : 9D EA 15    ;
CODE_01E46C:          PHX                                 ;; 01E46C : DA          ;
CODE_01E46D:          LDA.W RAM_SpriteDir,X               ;; 01E46D : BD 7C 15    ;
CODE_01E470:          TAX                                 ;; 01E470 : AA          ;
CODE_01E471:          LDA.W OAM_DispX,Y                   ;; 01E471 : B9 00 03    ;
CODE_01E474:          CLC                                 ;; 01E474 : 18          ;
CODE_01E475:          ADC.W DATA_01E43C,X                 ;; 01E475 : 7D 3C E4    ;
CODE_01E478:          PLX                                 ;; 01E478 : FA          ;
CODE_01E479:          STA.W OAM_Tile2DispX,Y              ;; 01E479 : 99 04 03    ;
CODE_01E47C:          LDA.W OAM_DispY,Y                   ;; 01E47C : B9 01 03    ;
CODE_01E47F:          STA.W OAM_Tile2DispY,Y              ;; 01E47F : 99 05 03    ;
CODE_01E482:          LDA.W OAM_Prop,Y                    ;; 01E482 : B9 03 03    ;
CODE_01E485:          STA.W OAM_Tile2Prop,Y               ;; 01E485 : 99 07 03    ;
CODE_01E488:          LDA.W OAM_Tile,Y                    ;; 01E488 : B9 02 03    ;
CODE_01E48B:          DEC A                               ;; 01E48B : 3A          ;
CODE_01E48C:          STA.W OAM_Tile2,Y                   ;; 01E48C : 99 06 03    ;
CODE_01E48F:          LDA.W $1540,X                       ;; 01E48F : BD 40 15    ;
CODE_01E492:          BEQ CODE_01E4AC                     ;; 01E492 : F0 18       ;
CODE_01E494:          CMP.B #$40                          ;; 01E494 : C9 40       ;
CODE_01E496:          BCS CODE_01E4AC                     ;; 01E496 : B0 14       ;
CODE_01E498:          LSR                                 ;; 01E498 : 4A          ;
CODE_01E499:          LSR                                 ;; 01E499 : 4A          ;
CODE_01E49A:          PHP                                 ;; 01E49A : 08          ;
CODE_01E49B:          LDA.W OAM_DispX,Y                   ;; 01E49B : B9 00 03    ;
CODE_01E49E:          ADC.B #$00                          ;; 01E49E : 69 00       ;
CODE_01E4A0:          STA.W OAM_DispX,Y                   ;; 01E4A0 : 99 00 03    ;
CODE_01E4A3:          PLP                                 ;; 01E4A3 : 28          ;
CODE_01E4A4:          LDA.W OAM_Tile2DispX,Y              ;; 01E4A4 : B9 04 03    ;
CODE_01E4A7:          ADC.B #$00                          ;; 01E4A7 : 69 00       ;
CODE_01E4A9:          STA.W OAM_Tile2DispX,Y              ;; 01E4A9 : 99 04 03    ;
CODE_01E4AC:          LDY.B #$02                          ;; 01E4AC : A0 02       ;
CODE_01E4AE:          LDA.B #$01                          ;; 01E4AE : A9 01       ;
CODE_01E4B0:          JSR.W FinishOAMWriteRt              ;; 01E4B0 : 20 BB B7    ;
CODE_01E4B3:          JSR.W SubUpdateSprPos               ;; 01E4B3 : 20 32 90    ;
CODE_01E4B6:          JSR.W IsOnGround                    ;; 01E4B6 : 20 0E 80    ;
CODE_01E4B9:          BEQ Return01E4BF                    ;; 01E4B9 : F0 04       ;
CODE_01E4BB:          STZ RAM_SpriteSpeedY,X              ;; 01E4BB : 74 AA       ; \ Sprite Speed = 0 
CODE_01E4BD:          STZ RAM_SpriteSpeedX,X              ;; 01E4BD : 74 B6       ; / 
Return01E4BF:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01E4C0:          LDA RAM_SpritesLocked               ;; 01E4C0 : A5 9D       ;
CODE_01E4C2:          ORA.W $163E,X                       ;; 01E4C2 : 1D 3E 16    ;
CODE_01E4C5:          BEQ CODE_01E4CA                     ;; 01E4C5 : F0 03       ;
CODE_01E4C7:          JMP.W CODE_01E5B6                   ;; 01E4C7 : 4C B6 E5    ;
                                                          ;;                      ;
CODE_01E4CA:          LDY.W RAM_SpriteDir,X               ;; 01E4CA : BC 7C 15    ;
CODE_01E4CD:          LDA.W DATA_01E41F,Y                 ;; 01E4CD : B9 1F E4    ;
CODE_01E4D0:          EOR.W $15B8,X                       ;; 01E4D0 : 5D B8 15    ;
CODE_01E4D3:          ASL                                 ;; 01E4D3 : 0A          ;
CODE_01E4D4:          LDA.W DATA_01E41F,Y                 ;; 01E4D4 : B9 1F E4    ;
CODE_01E4D7:          BCC CODE_01E4DD                     ;; 01E4D7 : 90 04       ;
CODE_01E4D9:          CLC                                 ;; 01E4D9 : 18          ;
CODE_01E4DA:          ADC.W $15B8,X                       ;; 01E4DA : 7D B8 15    ;
CODE_01E4DD:          STA RAM_SpriteSpeedX,X              ;; 01E4DD : 95 B6       ;
CODE_01E4DF:          LDA.W $1540,X                       ;; 01E4DF : BD 40 15    ;
CODE_01E4E2:          BNE CODE_01E4ED                     ;; 01E4E2 : D0 09       ;
CODE_01E4E4:          TYA                                 ;; 01E4E4 : 98          ;
CODE_01E4E5:          INC A                               ;; 01E4E5 : 1A          ;
CODE_01E4E6:          AND.W RAM_SprObjStatus,X            ;; 01E4E6 : 3D 88 15    ; \ Branch if not touching object 
CODE_01E4E9:          AND.B #$03                          ;; 01E4E9 : 29 03       ;  | 
CODE_01E4EB:          BEQ CODE_01E4EF                     ;; 01E4EB : F0 02       ; / 
CODE_01E4ED:          STZ RAM_SpriteSpeedX,X              ;; 01E4ED : 74 B6       ;
CODE_01E4EF:          JSR.W IsTouchingCeiling             ;; 01E4EF : 20 14 80    ;
CODE_01E4F2:          BEQ CODE_01E4F6                     ;; 01E4F2 : F0 02       ;
ADDR_01E4F4:          STZ RAM_SpriteSpeedY,X              ;; 01E4F4 : 74 AA       ; Sprite Y Speed = 0 
CODE_01E4F6:          JSR.W SubOffscreen0Bnk1             ;; 01E4F6 : 20 31 AC    ;
CODE_01E4F9:          JSR.W SubUpdateSprPos               ;; 01E4F9 : 20 32 90    ;
CODE_01E4FC:          LDA RAM_SpriteNum,X                 ;; 01E4FC : B5 9E       ;
CODE_01E4FE:          CMP.B #$31                          ;; 01E4FE : C9 31       ;
CODE_01E500:          BNE CODE_01E51E                     ;; 01E500 : D0 1C       ;
CODE_01E502:          LDA.W $1540,X                       ;; 01E502 : BD 40 15    ;
CODE_01E505:          BEQ CODE_01E542                     ;; 01E505 : F0 3B       ;
CODE_01E507:          LDY.B #$00                          ;; 01E507 : A0 00       ;
CODE_01E509:          CMP.B #$70                          ;; 01E509 : C9 70       ;
CODE_01E50B:          BCS CODE_01E518                     ;; 01E50B : B0 0B       ;
CODE_01E50D:          INY                                 ;; 01E50D : C8          ;
CODE_01E50E:          INY                                 ;; 01E50E : C8          ;
CODE_01E50F:          CMP.B #$08                          ;; 01E50F : C9 08       ;
CODE_01E511:          BCC CODE_01E518                     ;; 01E511 : 90 05       ;
CODE_01E513:          CMP.B #$68                          ;; 01E513 : C9 68       ;
CODE_01E515:          BCS CODE_01E518                     ;; 01E515 : B0 01       ;
CODE_01E517:          INY                                 ;; 01E517 : C8          ;
CODE_01E518:          TYA                                 ;; 01E518 : 98          ;
CODE_01E519:          STA.W $1602,X                       ;; 01E519 : 9D 02 16    ;
CODE_01E51C:          BRA CODE_01E563                     ;; 01E51C : 80 45       ;
                                                          ;;                      ;
CODE_01E51E:          CMP.B #$30                          ;; 01E51E : C9 30       ;
CODE_01E520:          BEQ CODE_01E52D                     ;; 01E520 : F0 0B       ;
CODE_01E522:          CMP.B #$32                          ;; 01E522 : C9 32       ;
CODE_01E524:          BNE CODE_01E542                     ;; 01E524 : D0 1C       ;
CODE_01E526:          LDA.W $13BF                         ;; 01E526 : AD BF 13    ;
CODE_01E529:          CMP.B #$31                          ;; 01E529 : C9 31       ;
CODE_01E52B:          BNE CODE_01E542                     ;; 01E52B : D0 15       ;
CODE_01E52D:          LDA.W $1540,X                       ;; 01E52D : BD 40 15    ;
CODE_01E530:          BEQ CODE_01E542                     ;; 01E530 : F0 10       ;
CODE_01E532:          CMP.B #$01                          ;; 01E532 : C9 01       ;
CODE_01E534:          BNE CODE_01E53A                     ;; 01E534 : D0 04       ;
CODE_01E536:          JSL.L CODE_03C44E                   ;; 01E536 : 22 4E C4 03 ;
CODE_01E53A:          LDA.B #$02                          ;; 01E53A : A9 02       ;
CODE_01E53C:          STA.W $1602,X                       ;; 01E53C : 9D 02 16    ;
CODE_01E53F:          JMP.W CODE_01E5B6                   ;; 01E53F : 4C B6 E5    ;
                                                          ;;                      ;
CODE_01E542:          JSR.W IsOnGround                    ;; 01E542 : 20 0E 80    ;
CODE_01E545:          BEQ CODE_01E563                     ;; 01E545 : F0 1C       ;
CODE_01E547:          JSR.W SetSomeYSpeed??               ;; 01E547 : 20 04 9A    ;
CODE_01E54A:          JSR.W SetAnimationFrame             ;; 01E54A : 20 5F 8E    ;
CODE_01E54D:          LDA RAM_SpriteNum,X                 ;; 01E54D : B5 9E       ;
CODE_01E54F:          CMP.B #$32                          ;; 01E54F : C9 32       ;
CODE_01E551:          BNE CODE_01E557                     ;; 01E551 : D0 04       ;
CODE_01E553:          STZ RAM_SpriteState,X               ;; 01E553 : 74 C2       ;
CODE_01E555:          BRA CODE_01E561                     ;; 01E555 : 80 0A       ;
                                                          ;;                      ;
CODE_01E557:          LDA.W $1570,X                       ;; 01E557 : BD 70 15    ;
CODE_01E55A:          AND.B #$7F                          ;; 01E55A : 29 7F       ;
CODE_01E55C:          BNE CODE_01E561                     ;; 01E55C : D0 03       ;
CODE_01E55E:          JSR.W FaceMario                     ;; 01E55E : 20 7C 85    ;
CODE_01E561:          BRA CODE_01E57B                     ;; 01E561 : 80 18       ;
                                                          ;;                      ;
CODE_01E563:          STZ.W $1570,X                       ;; 01E563 : 9E 70 15    ;
CODE_01E566:          LDA RAM_SpriteNum,X                 ;; 01E566 : B5 9E       ;
CODE_01E568:          CMP.B #$32                          ;; 01E568 : C9 32       ;
CODE_01E56A:          BNE CODE_01E57B                     ;; 01E56A : D0 0F       ;
CODE_01E56C:          LDA RAM_SpriteState,X               ;; 01E56C : B5 C2       ;
CODE_01E56E:          BNE CODE_01E57B                     ;; 01E56E : D0 0B       ;
CODE_01E570:          INC RAM_SpriteState,X               ;; 01E570 : F6 C2       ;
CODE_01E572:          JSR.W FlipSpriteDir                 ;; 01E572 : 20 98 90    ;
CODE_01E575:          JSR.W SubSprXPosNoGrvty             ;; 01E575 : 20 CC AB    ;
CODE_01E578:          JSR.W SubSprXPosNoGrvty             ;; 01E578 : 20 CC AB    ;
CODE_01E57B:          LDA RAM_SpriteNum,X                 ;; 01E57B : B5 9E       ;
CODE_01E57D:          CMP.B #$31                          ;; 01E57D : C9 31       ;
CODE_01E57F:          BNE CODE_01E598                     ;; 01E57F : D0 17       ;
CODE_01E581:          LDA RAM_FrameCounter                ;; 01E581 : A5 13       ;
CODE_01E583:          LSR                                 ;; 01E583 : 4A          ;
CODE_01E584:          BCC CODE_01E589                     ;; 01E584 : 90 03       ;
CODE_01E586:          INC.W $1528,X                       ;; 01E586 : FE 28 15    ;
CODE_01E589:          LDA.W $1528,X                       ;; 01E589 : BD 28 15    ;
CODE_01E58C:          BNE CODE_01E5B6                     ;; 01E58C : D0 28       ;
CODE_01E58E:          INC.W $1528,X                       ;; 01E58E : FE 28 15    ;
CODE_01E591:          LDA.B #$A0                          ;; 01E591 : A9 A0       ;
CODE_01E593:          STA.W $1540,X                       ;; 01E593 : 9D 40 15    ;
CODE_01E596:          BRA CODE_01E5B6                     ;; 01E596 : 80 1E       ;
                                                          ;;                      ;
CODE_01E598:          CMP.B #$30                          ;; 01E598 : C9 30       ;
CODE_01E59A:          BEQ CODE_01E5A7                     ;; 01E59A : F0 0B       ;
CODE_01E59C:          CMP.B #$32                          ;; 01E59C : C9 32       ;
CODE_01E59E:          BNE CODE_01E5B6                     ;; 01E59E : D0 16       ;
CODE_01E5A0:          LDA.W $13BF                         ;; 01E5A0 : AD BF 13    ;
CODE_01E5A3:          CMP.B #$31                          ;; 01E5A3 : C9 31       ;
CODE_01E5A5:          BNE CODE_01E5B6                     ;; 01E5A5 : D0 0F       ;
CODE_01E5A7:          LDA.W $1570,X                       ;; 01E5A7 : BD 70 15    ;
CODE_01E5AA:          CLC                                 ;; 01E5AA : 18          ;
CODE_01E5AB:          ADC.B #$40                          ;; 01E5AB : 69 40       ;
CODE_01E5AD:          AND.B #$7F                          ;; 01E5AD : 29 7F       ;
CODE_01E5AF:          BNE CODE_01E5B6                     ;; 01E5AF : D0 05       ;
CODE_01E5B1:          LDA.B #$3F                          ;; 01E5B1 : A9 3F       ;
CODE_01E5B3:          STA.W $1540,X                       ;; 01E5B3 : 9D 40 15    ;
CODE_01E5B6:          JSR.W CODE_01E5C4                   ;; 01E5B6 : 20 C4 E5    ;
CODE_01E5B9:          JSR.W SubSprSprInteract             ;; 01E5B9 : 20 0D A4    ;
CODE_01E5BC:          JSR.W FlipIfTouchingObj             ;; 01E5BC : 20 89 90    ;
CODE_01E5BF:          JSL.L CODE_03C390                   ;; 01E5BF : 22 90 C3 03 ;
Return01E5C3:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01E5C4:          JSR.W MarioSprInteractRt            ;; 01E5C4 : 20 E4 A7    ;
CODE_01E5C7:          BCC Return01E610                    ;; 01E5C7 : 90 47       ;
CODE_01E5C9:          LDA $D3                             ;; 01E5C9 : A5 D3       ;
CODE_01E5CB:          CLC                                 ;; 01E5CB : 18          ;
CODE_01E5CC:          ADC.B #$14                          ;; 01E5CC : 69 14       ;
CODE_01E5CE:          CMP RAM_SpriteYLo,X                 ;; 01E5CE : D5 D8       ;
CODE_01E5D0:          BPL CODE_01E604                     ;; 01E5D0 : 10 32       ;
CODE_01E5D2:          LDA.W $1697                         ;; 01E5D2 : AD 97 16    ;
CODE_01E5D5:          BNE CODE_01E5DB                     ;; 01E5D5 : D0 04       ;
CODE_01E5D7:          LDA RAM_MarioSpeedY                 ;; 01E5D7 : A5 7D       ;
CODE_01E5D9:          BMI CODE_01E604                     ;; 01E5D9 : 30 29       ;
CODE_01E5DB:          LDA RAM_SpriteNum,X                 ;; 01E5DB : B5 9E       ;
CODE_01E5DD:          CMP.B #$31                          ;; 01E5DD : C9 31       ;
CODE_01E5DF:          BNE CODE_01E5EB                     ;; 01E5DF : D0 0A       ;
CODE_01E5E1:          LDA.W $1540,X                       ;; 01E5E1 : BD 40 15    ;
CODE_01E5E4:          SEC                                 ;; 01E5E4 : 38          ;
CODE_01E5E5:          SBC.B #$08                          ;; 01E5E5 : E9 08       ;
CODE_01E5E7:          CMP.B #$60                          ;; 01E5E7 : C9 60       ;
CODE_01E5E9:          BCC CODE_01E604                     ;; 01E5E9 : 90 19       ;
CODE_01E5EB:          JSR.W CODE_01AB46                   ;; 01E5EB : 20 46 AB    ;
CODE_01E5EE:          JSL.L DisplayContactGfx             ;; 01E5EE : 22 99 AB 01 ;
CODE_01E5F2:          LDA.B #$07                          ;; 01E5F2 : A9 07       ; \ Play sound effect 
CODE_01E5F4:          STA.W $1DF9                         ;; 01E5F4 : 8D F9 1D    ; / 
CODE_01E5F7:          JSL.L BoostMarioSpeed               ;; 01E5F7 : 22 33 AA 01 ;
CODE_01E5FB:          INC.W $1534,X                       ;; 01E5FB : FE 34 15    ;
CODE_01E5FE:          LDA.B #$FF                          ;; 01E5FE : A9 FF       ;
CODE_01E600:          STA.W $1540,X                       ;; 01E600 : 9D 40 15    ;
Return01E603:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01E604:          JSL.L HurtMario                     ;; 01E604 : 22 B7 F5 00 ;
CODE_01E608:          LDA.W $1497                         ;; 01E608 : AD 97 14    ; \ Return if Mario is invincible 
CODE_01E60B:          BNE Return01E610                    ;; 01E60B : D0 03       ; / 
CODE_01E60D:          JSR.W FaceMario                     ;; 01E60D : 20 7C 85    ;
Return01E610:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
DATA_01E611:          .db $00,$01,$02,$02,$02,$01,$01,$00 ;; 01E611               ;
                      .db $00                             ;; ?QPWZ?               ;
                                                          ;;                      ;
DATA_01E61A:          .db $1E,$1B,$18,$18,$18,$1A,$1C,$1D ;; 01E61A               ;
                      .db $1E                             ;; ?QPWZ?               ;
                                                          ;;                      ;
SpringBoard:          LDA RAM_SpritesLocked               ;; ?QPWZ? : A5 9D       ;
CODE_01E625:          BEQ CODE_01E62A                     ;; 01E625 : F0 03       ;
CODE_01E627:          JMP.W CODE_01E6F0                   ;; 01E627 : 4C F0 E6    ;
                                                          ;;                      ;
CODE_01E62A:          JSR.W SubOffscreen0Bnk1             ;; 01E62A : 20 31 AC    ;
CODE_01E62D:          JSR.W SubUpdateSprPos               ;; 01E62D : 20 32 90    ;
CODE_01E630:          JSR.W IsOnGround                    ;; 01E630 : 20 0E 80    ;
CODE_01E633:          BEQ CODE_01E638                     ;; 01E633 : F0 03       ;
CODE_01E635:          JSR.W CODE_0197D5                   ;; 01E635 : 20 D5 97    ;
CODE_01E638:          JSR.W IsTouchingObjSide             ;; 01E638 : 20 08 80    ;
CODE_01E63B:          BEQ CODE_01E649                     ;; 01E63B : F0 0C       ;
CODE_01E63D:          JSR.W FlipSpriteDir                 ;; 01E63D : 20 98 90    ;
CODE_01E640:          LDA RAM_SpriteSpeedX,X              ;; 01E640 : B5 B6       ;
CODE_01E642:          ASL                                 ;; 01E642 : 0A          ;
CODE_01E643:          PHP                                 ;; 01E643 : 08          ;
CODE_01E644:          ROR RAM_SpriteSpeedX,X              ;; 01E644 : 76 B6       ;
CODE_01E646:          PLP                                 ;; 01E646 : 28          ;
CODE_01E647:          ROR RAM_SpriteSpeedX,X              ;; 01E647 : 76 B6       ;
CODE_01E649:          JSR.W IsTouchingCeiling             ;; 01E649 : 20 14 80    ;
CODE_01E64C:          BEQ CODE_01E650                     ;; 01E64C : F0 02       ;
ADDR_01E64E:          STZ RAM_SpriteSpeedY,X              ;; 01E64E : 74 AA       ; Sprite Y Speed = 0 
CODE_01E650:          LDA.W $1540,X                       ;; 01E650 : BD 40 15    ;
CODE_01E653:          BEQ CODE_01E6B0                     ;; 01E653 : F0 5B       ;
CODE_01E655:          LSR                                 ;; 01E655 : 4A          ;
CODE_01E656:          TAY                                 ;; 01E656 : A8          ;
CODE_01E657:          LDA.W RAM_OnYoshi                   ;; 01E657 : AD 7A 18    ;
CODE_01E65A:          CMP.B #$01                          ;; 01E65A : C9 01       ;
CODE_01E65C:          LDA.W DATA_01E61A,Y                 ;; 01E65C : B9 1A E6    ;
CODE_01E65F:          BCC CODE_01E664                     ;; 01E65F : 90 03       ;
CODE_01E661:          CLC                                 ;; 01E661 : 18          ;
CODE_01E662:          ADC.B #$12                          ;; 01E662 : 69 12       ;
CODE_01E664:          STA $00                             ;; 01E664 : 85 00       ;
CODE_01E666:          LDA.W DATA_01E611,Y                 ;; 01E666 : B9 11 E6    ;
CODE_01E669:          STA.W $1602,X                       ;; 01E669 : 9D 02 16    ;
CODE_01E66C:          LDA RAM_SpriteYLo,X                 ;; 01E66C : B5 D8       ;
CODE_01E66E:          SEC                                 ;; 01E66E : 38          ;
CODE_01E66F:          SBC $00                             ;; 01E66F : E5 00       ;
CODE_01E671:          STA RAM_MarioYPos                   ;; 01E671 : 85 96       ;
CODE_01E673:          LDA.W RAM_SpriteYHi,X               ;; 01E673 : BD D4 14    ;
CODE_01E676:          SBC.B #$00                          ;; 01E676 : E9 00       ;
CODE_01E678:          STA RAM_MarioYPosHi                 ;; 01E678 : 85 97       ;
CODE_01E67A:          STZ RAM_IsFlying                    ;; 01E67A : 64 72       ;
CODE_01E67C:          STZ RAM_MarioSpeedX                 ;; 01E67C : 64 7B       ;
CODE_01E67E:          LDA.B #$02                          ;; 01E67E : A9 02       ;
CODE_01E680:          STA.W $1471                         ;; 01E680 : 8D 71 14    ;
CODE_01E683:          LDA.W $1540,X                       ;; 01E683 : BD 40 15    ;
CODE_01E686:          CMP.B #$07                          ;; 01E686 : C9 07       ;
CODE_01E688:          BCS CODE_01E6AE                     ;; 01E688 : B0 24       ;
CODE_01E68A:          STZ.W $1471                         ;; 01E68A : 9C 71 14    ;
CODE_01E68D:          LDY.B #$B0                          ;; 01E68D : A0 B0       ;
CODE_01E68F:          LDA RAM_ControllerB                 ;; 01E68F : A5 17       ;
CODE_01E691:          BPL CODE_01E69A                     ;; 01E691 : 10 07       ;
ADDR_01E693:          LDA.B #$01                          ;; 01E693 : A9 01       ;
ADDR_01E695:          STA.W RAM_IsSpinJump                ;; 01E695 : 8D 0D 14    ;
ADDR_01E698:          BRA CODE_01E69E                     ;; 01E698 : 80 04       ;
                                                          ;;                      ;
CODE_01E69A:          LDA RAM_ControllerA                 ;; 01E69A : A5 15       ;
CODE_01E69C:          BPL CODE_01E6A7                     ;; 01E69C : 10 09       ;
CODE_01E69E:          LDA.B #$0B                          ;; 01E69E : A9 0B       ;
CODE_01E6A0:          STA RAM_IsFlying                    ;; 01E6A0 : 85 72       ;
CODE_01E6A2:          LDY.B #$80                          ;; 01E6A2 : A0 80       ;
CODE_01E6A4:          STY.W $1406                         ;; 01E6A4 : 8C 06 14    ;
CODE_01E6A7:          STY RAM_MarioSpeedY                 ;; 01E6A7 : 84 7D       ;
CODE_01E6A9:          LDA.B #$08                          ;; 01E6A9 : A9 08       ; \ Play sound effect 
CODE_01E6AB:          STA.W $1DFC                         ;; 01E6AB : 8D FC 1D    ; / 
CODE_01E6AE:          BRA CODE_01E6F0                     ;; 01E6AE : 80 40       ;
                                                          ;;                      ;
CODE_01E6B0:          JSR.W ProcessInteract               ;; 01E6B0 : 20 F7 A7    ;
CODE_01E6B3:          BCC CODE_01E6F0                     ;; 01E6B3 : 90 3B       ;
CODE_01E6B5:          STZ.W RAM_DisableInter,X            ;; 01E6B5 : 9E 4C 15    ;
CODE_01E6B8:          LDA RAM_SpriteYLo,X                 ;; 01E6B8 : B5 D8       ;
CODE_01E6BA:          SEC                                 ;; 01E6BA : 38          ;
CODE_01E6BB:          SBC RAM_MarioYPos                   ;; 01E6BB : E5 96       ;
CODE_01E6BD:          CLC                                 ;; 01E6BD : 18          ;
CODE_01E6BE:          ADC.B #$04                          ;; 01E6BE : 69 04       ;
CODE_01E6C0:          CMP.B #$1C                          ;; 01E6C0 : C9 1C       ;
CODE_01E6C2:          BCC CODE_01E6CE                     ;; 01E6C2 : 90 0A       ;
CODE_01E6C4:          BPL CODE_01E6E7                     ;; 01E6C4 : 10 21       ;
ADDR_01E6C6:          LDA RAM_MarioSpeedY                 ;; 01E6C6 : A5 7D       ;
ADDR_01E6C8:          BPL CODE_01E6F0                     ;; 01E6C8 : 10 26       ;
ADDR_01E6CA:          STZ RAM_MarioSpeedY                 ;; 01E6CA : 64 7D       ;
ADDR_01E6CC:          BRA CODE_01E6F0                     ;; 01E6CC : 80 22       ;
                                                          ;;                      ;
CODE_01E6CE:          BIT RAM_ControllerA                 ;; 01E6CE : 24 15       ;
CODE_01E6D0:          BVC CODE_01E6E2                     ;; 01E6D0 : 50 10       ;
CODE_01E6D2:          LDA.W $1470                         ;; 01E6D2 : AD 70 14    ; \ Branch if carrying an enemy... 
CODE_01E6D5:          ORA.W RAM_OnYoshi                   ;; 01E6D5 : 0D 7A 18    ;  | ...or if on Yoshi 
CODE_01E6D8:          BNE CODE_01E6E2                     ;; 01E6D8 : D0 08       ; / 
CODE_01E6DA:          LDA.B #$0B                          ;; 01E6DA : A9 0B       ; \ Sprite status = carried 
CODE_01E6DC:          STA.W $14C8,X                       ;; 01E6DC : 9D C8 14    ; / 
CODE_01E6DF:          STZ.W $1602,X                       ;; 01E6DF : 9E 02 16    ;
CODE_01E6E2:          JSR.W CODE_01AB31                   ;; 01E6E2 : 20 31 AB    ;
CODE_01E6E5:          BRA CODE_01E6F0                     ;; 01E6E5 : 80 09       ;
                                                          ;;                      ;
CODE_01E6E7:          LDA RAM_MarioSpeedY                 ;; 01E6E7 : A5 7D       ;
CODE_01E6E9:          BMI CODE_01E6F0                     ;; 01E6E9 : 30 05       ;
CODE_01E6EB:          LDA.B #$11                          ;; 01E6EB : A9 11       ;
CODE_01E6ED:          STA.W $1540,X                       ;; 01E6ED : 9D 40 15    ;
CODE_01E6F0:          LDY.W $1602,X                       ;; 01E6F0 : BC 02 16    ;
CODE_01E6F3:          LDA.W DATA_01E6FD,Y                 ;; 01E6F3 : B9 FD E6    ;
CODE_01E6F6:          TAY                                 ;; 01E6F6 : A8          ;
CODE_01E6F7:          LDA.B #$02                          ;; 01E6F7 : A9 02       ;
CODE_01E6F9:          JSR.W SubSprGfx0Entry1              ;; 01E6F9 : 20 F5 9C    ;
Return01E6FC:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
DATA_01E6FD:          .db $00,$02,$00                     ;; 01E6FD               ;
                                                          ;;                      ;
SmushedGfxRt:         JSR.W GetDrawInfoBnk1               ;; ?QPWZ? : 20 65 A3    ;
CODE_01E703:          JSR.W IsSprOffScreen                ;; 01E703 : 20 CB 80    ;
CODE_01E706:          BNE Return01E75A                    ;; 01E706 : D0 52       ;
CODE_01E708:          LDA $00                             ;; 01E708 : A5 00       ; \ Set X displacement for both tiles 
CODE_01E70A:          STA.W OAM_DispX,Y                   ;; 01E70A : 99 00 03    ;  | (Sprite position + #$00/#$08) 
CODE_01E70D:          CLC                                 ;; 01E70D : 18          ;  | 
CODE_01E70E:          ADC.B #$08                          ;; 01E70E : 69 08       ;  | 
CODE_01E710:          STA.W OAM_Tile2DispX,Y              ;; 01E710 : 99 04 03    ; / 
CODE_01E713:          LDA $01                             ;; 01E713 : A5 01       ; \ Set Y displacement for both tiles 
CODE_01E715:          CLC                                 ;; 01E715 : 18          ;  | (Sprite position + #$08) 
CODE_01E716:          ADC.B #$08                          ;; 01E716 : 69 08       ;  | 
CODE_01E718:          STA.W OAM_DispY,Y                   ;; 01E718 : 99 01 03    ;  | 
CODE_01E71B:          STA.W OAM_Tile2DispY,Y              ;; 01E71B : 99 05 03    ; / 
CODE_01E71E:          PHX                                 ;; 01E71E : DA          ;
CODE_01E71F:          LDA RAM_SpriteNum,X                 ;; 01E71F : B5 9E       ;
CODE_01E721:          TAX                                 ;; 01E721 : AA          ;
CODE_01E722:          LDA.B #$FE                          ;; 01E722 : A9 FE       ; \ If P Switch, tile = #$FE 
CODE_01E724:          CPX.B #$3E                          ;; 01E724 : E0 3E       ;  | 
CODE_01E726:          BEQ CODE_01E73A                     ;; 01E726 : F0 12       ; / 
CODE_01E728:          LDA.B #$EE                          ;; 01E728 : A9 EE       ; \ If Sliding Koopa... 
CODE_01E72A:          CPX.B #$BD                          ;; 01E72A : E0 BD       ;  | 
CODE_01E72C:          BEQ CODE_01E73A                     ;; 01E72C : F0 0C       ;  | 
CODE_01E72E:          CPX.B #$04                          ;; 01E72E : E0 04       ;  | ...or a shelless, tile = #$EE 
CODE_01E730:          BCC CODE_01E73A                     ;; 01E730 : 90 08       ; / 
CODE_01E732:          LDA.B #$C7                          ;; 01E732 : A9 C7       ; \ If sprite num >= #$0F, tile = #$C7 (is this used?) 
CODE_01E734:          CPX.B #$0F                          ;; 01E734 : E0 0F       ;  | 
CODE_01E736:          BCS CODE_01E73A                     ;; 01E736 : B0 02       ; / 
CODE_01E738:          LDA.B #$4D                          ;; 01E738 : A9 4D       ; If #$04 <= sprite num < #$0F, tile = #$4D (Koopas) 
CODE_01E73A:          STA.W OAM_Tile,Y                    ;; 01E73A : 99 02 03    ; \ Same value for both tiles 
CODE_01E73D:          STA.W OAM_Tile2,Y                   ;; 01E73D : 99 06 03    ; / 
CODE_01E740:          PLX                                 ;; 01E740 : FA          ;
CODE_01E741:          LDA $64                             ;; 01E741 : A5 64       ; \ Store the first tile's properties 
CODE_01E743:          ORA.W RAM_SpritePal,X               ;; 01E743 : 1D F6 15    ;  | 
CODE_01E746:          STA.W OAM_Prop,Y                    ;; 01E746 : 99 03 03    ; / 
CODE_01E749:          ORA.B #$40                          ;; 01E749 : 09 40       ; \ Horizontally flip the second tile and store it 
CODE_01E74B:          STA.W OAM_Tile2Prop,Y               ;; 01E74B : 99 07 03    ; / 
CODE_01E74E:          TYA                                 ;; 01E74E : 98          ; \ Y = index to size table 
CODE_01E74F:          LSR                                 ;; 01E74F : 4A          ;  | 
CODE_01E750:          LSR                                 ;; 01E750 : 4A          ;  | 
CODE_01E751:          TAY                                 ;; 01E751 : A8          ; / 
CODE_01E752:          LDA.B #$00                          ;; 01E752 : A9 00       ; \ Two 8x8 tiles 
CODE_01E754:          STA.W OAM_TileSize,Y                ;; 01E754 : 99 60 04    ;  | 
CODE_01E757:          STA.W $0461,Y                       ;; 01E757 : 99 61 04    ; / 
Return01E75A:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
PSwitch:              LDA.W $1564,X                       ;; ?QPWZ? : BD 64 15    ;
CODE_01E75E:          CMP.B #$01                          ;; 01E75E : C9 01       ;
CODE_01E760:          BNE Return01E76E                    ;; 01E760 : D0 0C       ;
CODE_01E762:          STA.W $1F11                         ;; 01E762 : 8D 11 1F    ;
CODE_01E765:          STA.W $1FB8                         ;; 01E765 : 8D B8 1F    ;
CODE_01E768:          STZ.W $14C8,X                       ;; 01E768 : 9E C8 14    ;
CODE_01E76B:          INC.W $1426                         ;; 01E76B : EE 26 14    ;
Return01E76E:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
DATA_01E76F:          .db $FC,$04,$FE,$02,$FB,$05,$FD,$03 ;; 01E76F               ;
                      .db $FA,$06,$FC,$04,$FB,$05,$FD,$03 ;; ?QPWZ?               ;
DATA_01E77F:          .db $00,$FF,$03,$04,$FF,$FE,$04,$03 ;; 01E77F               ;
                      .db $FE,$FF,$03,$03,$FF,$00,$03,$03 ;; ?QPWZ?               ;
                      .db $F8,$FC,$00,$04                 ;; ?QPWZ?               ;
                                                          ;;                      ;
DATA_01E793:          .db $0E,$0F,$10,$11,$12,$11,$10,$0F ;; 01E793               ;
                      .db $1A,$1B,$1C,$1D,$1E,$1D,$1C,$1B ;; ?QPWZ?               ;
                      .db $1A                             ;; ?QPWZ?               ;
                                                          ;;                      ;
LakituCloud:          LDA RAM_SpritesLocked               ;; ?QPWZ? : A5 9D       ; \ Branch if sprites locked 
CODE_01E7A6:          BEQ NoCloudGfx                      ;; 01E7A6 : F0 03       ; / 
CODE_01E7A8:          JMP.W LakituCloudGfx                ;; 01E7A8 : 4C CA E8    ;
                                                          ;;                      ;
NoCloudGfx:           LDY.W $18E0                         ;; ?QPWZ? : AC E0 18    ;
CODE_01E7AE:          BEQ CODE_01E7C5                     ;; 01E7AE : F0 15       ;
CODE_01E7B0:          LDA RAM_FrameCounterB               ;; 01E7B0 : A5 14       ;
CODE_01E7B2:          AND.B #$03                          ;; 01E7B2 : 29 03       ;
CODE_01E7B4:          BNE CODE_01E7C5                     ;; 01E7B4 : D0 0F       ;
CODE_01E7B6:          LDA.W $18E0                         ;; 01E7B6 : AD E0 18    ;
CODE_01E7B9:          BEQ CODE_01E7C5                     ;; 01E7B9 : F0 0A       ;
CODE_01E7BB:          DEC.W $18E0                         ;; 01E7BB : CE E0 18    ;
CODE_01E7BE:          BNE CODE_01E7C5                     ;; 01E7BE : D0 05       ;
CODE_01E7C0:          LDA.B #$1F                          ;; 01E7C0 : A9 1F       ;
CODE_01E7C2:          STA.W $1540,X                       ;; 01E7C2 : 9D 40 15    ;
CODE_01E7C5:          LDA.W $1540,X                       ;; 01E7C5 : BD 40 15    ;
CODE_01E7C8:          BEQ CODE_01E7DB                     ;; 01E7C8 : F0 11       ;
CODE_01E7CA:          DEC A                               ;; 01E7CA : 3A          ;
CODE_01E7CB:          BNE CODE_01E7A8                     ;; 01E7CB : D0 DB       ;
CODE_01E7CD:          STZ.W $14C8,X                       ;; 01E7CD : 9E C8 14    ;
CODE_01E7D0:          LDA.B #$FF                          ;; 01E7D0 : A9 FF       ; \ Set time until respawn 
CODE_01E7D2:          STA.W RAM_TimeTillRespawn           ;; 01E7D2 : 8D C0 18    ;  | 
CODE_01E7D5:          LDA.B #$1E                          ;; 01E7D5 : A9 1E       ;  | Sprite to respawn = Lakitu 
CODE_01E7D7:          STA.W RAM_SpriteToRespawn           ;; 01E7D7 : 8D C1 18    ; / 
Return01E7DA:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01E7DB:          LDY.B #$09                          ;; 01E7DB : A0 09       ;
CODE_01E7DD:          LDA.W $14C8,Y                       ;; 01E7DD : B9 C8 14    ;
CODE_01E7E0:          CMP.B #$08                          ;; 01E7E0 : C9 08       ;
CODE_01E7E2:          BNE CODE_01E7F2                     ;; 01E7E2 : D0 0E       ;
CODE_01E7E4:          LDA.W RAM_SpriteNum,Y               ;; 01E7E4 : B9 9E 00    ;
CODE_01E7E7:          CMP.B #$1E                          ;; 01E7E7 : C9 1E       ;
CODE_01E7E9:          BNE CODE_01E7F2                     ;; 01E7E9 : D0 07       ;
CODE_01E7EB:          TYA                                 ;; 01E7EB : 98          ;
CODE_01E7EC:          STA.W $160E,X                       ;; 01E7EC : 9D 0E 16    ;
CODE_01E7EF:          JMP.W CODE_01E898                   ;; 01E7EF : 4C 98 E8    ;
                                                          ;;                      ;
CODE_01E7F2:          DEY                                 ;; 01E7F2 : 88          ;
CODE_01E7F3:          BPL CODE_01E7DD                     ;; 01E7F3 : 10 E8       ;
CODE_01E7F5:          LDA RAM_SpriteState,X               ;; 01E7F5 : B5 C2       ;
CODE_01E7F7:          BNE CODE_01E840                     ;; 01E7F7 : D0 47       ;
CODE_01E7F9:          LDA.W $151C,X                       ;; 01E7F9 : BD 1C 15    ;
CODE_01E7FC:          BEQ CODE_01E804                     ;; 01E7FC : F0 06       ;
CODE_01E7FE:          JSR.W SubSprXPosNoGrvty             ;; 01E7FE : 20 CC AB    ;
CODE_01E801:          JSR.W SubSprYPosNoGrvty             ;; 01E801 : 20 D8 AB    ;
CODE_01E804:          LDA.W RAM_DisableInter,X            ;; 01E804 : BD 4C 15    ;
CODE_01E807:          BNE CODE_01E83D                     ;; 01E807 : D0 34       ;
CODE_01E809:          JSR.W ProcessInteract               ;; 01E809 : 20 F7 A7    ;
CODE_01E80C:          BCC CODE_01E83D                     ;; 01E80C : 90 2F       ;
CODE_01E80E:          LDA RAM_MarioSpeedY                 ;; 01E80E : A5 7D       ;
CODE_01E810:          BMI CODE_01E83D                     ;; 01E810 : 30 2B       ;
CODE_01E812:          INC RAM_SpriteState,X               ;; 01E812 : F6 C2       ;
CODE_01E814:          LDA.B #$11                          ;; 01E814 : A9 11       ;
CODE_01E816:          LDY.W RAM_OnYoshi                   ;; 01E816 : AC 7A 18    ;
CODE_01E819:          BEQ CODE_01E81D                     ;; 01E819 : F0 02       ;
ADDR_01E81B:          LDA.B #$22                          ;; 01E81B : A9 22       ;
CODE_01E81D:          CLC                                 ;; 01E81D : 18          ;
CODE_01E81E:          ADC $D3                             ;; 01E81E : 65 D3       ;
CODE_01E820:          STA RAM_SpriteYLo,X                 ;; 01E820 : 95 D8       ;
CODE_01E822:          LDA $D4                             ;; 01E822 : A5 D4       ;
CODE_01E824:          ADC.B #$00                          ;; 01E824 : 69 00       ;
CODE_01E826:          STA.W RAM_SpriteYHi,X               ;; 01E826 : 9D D4 14    ;
CODE_01E829:          LDA $D1                             ;; 01E829 : A5 D1       ;
CODE_01E82B:          STA RAM_SpriteXLo,X                 ;; 01E82B : 95 E4       ;
CODE_01E82D:          LDA $D2                             ;; 01E82D : A5 D2       ;
CODE_01E82F:          STA.W RAM_SpriteXHi,X               ;; 01E82F : 9D E0 14    ;
CODE_01E832:          LDA.B #$10                          ;; 01E832 : A9 10       ;
CODE_01E834:          STA RAM_SpriteSpeedY,X              ;; 01E834 : 95 AA       ;
CODE_01E836:          STA.W $151C,X                       ;; 01E836 : 9D 1C 15    ;
CODE_01E839:          LDA RAM_MarioSpeedX                 ;; 01E839 : A5 7B       ;
CODE_01E83B:          STA RAM_SpriteSpeedX,X              ;; 01E83B : 95 B6       ;
CODE_01E83D:          JMP.W LakituCloudGfx                ;; 01E83D : 4C CA E8    ;
                                                          ;;                      ;
CODE_01E840:          JSR.W LakituCloudGfx                ;; 01E840 : 20 CA E8    ;
CODE_01E843:          PHB                                 ;; 01E843 : 8B          ;
CODE_01E844:          LDA.B #$02                          ;; 01E844 : A9 02       ;
CODE_01E846:          PHA                                 ;; 01E846 : 48          ;
CODE_01E847:          PLB                                 ;; 01E847 : AB          ;
CODE_01E848:          JSL.L CODE_02D214                   ;; 01E848 : 22 14 D2 02 ;
CODE_01E84C:          PLB                                 ;; 01E84C : AB          ;
CODE_01E84D:          LDA RAM_SpriteSpeedY,X              ;; 01E84D : B5 AA       ;
CODE_01E84F:          CLC                                 ;; 01E84F : 18          ;
CODE_01E850:          ADC.B #$03                          ;; 01E850 : 69 03       ;
CODE_01E852:          STA RAM_MarioSpeedY                 ;; 01E852 : 85 7D       ;
CODE_01E854:          LDA RAM_FrameCounterB               ;; 01E854 : A5 14       ;
CODE_01E856:          LSR                                 ;; 01E856 : 4A          ;
CODE_01E857:          LSR                                 ;; 01E857 : 4A          ;
CODE_01E858:          LSR                                 ;; 01E858 : 4A          ;
CODE_01E859:          AND.B #$07                          ;; 01E859 : 29 07       ;
CODE_01E85B:          TAY                                 ;; 01E85B : A8          ;
CODE_01E85C:          LDA.W RAM_OnYoshi                   ;; 01E85C : AD 7A 18    ;
CODE_01E85F:          BEQ CODE_01E866                     ;; 01E85F : F0 05       ;
ADDR_01E861:          TYA                                 ;; 01E861 : 98          ;
ADDR_01E862:          CLC                                 ;; 01E862 : 18          ;
ADDR_01E863:          ADC.B #$08                          ;; 01E863 : 69 08       ;
ADDR_01E865:          TAY                                 ;; 01E865 : A8          ;
CODE_01E866:          LDA $D1                             ;; 01E866 : A5 D1       ;
CODE_01E868:          STA RAM_SpriteXLo,X                 ;; 01E868 : 95 E4       ;
CODE_01E86A:          LDA $D2                             ;; 01E86A : A5 D2       ;
CODE_01E86C:          STA.W RAM_SpriteXHi,X               ;; 01E86C : 9D E0 14    ;
CODE_01E86F:          LDA $D3                             ;; 01E86F : A5 D3       ;
CODE_01E871:          CLC                                 ;; 01E871 : 18          ;
CODE_01E872:          ADC.W DATA_01E793,Y                 ;; 01E872 : 79 93 E7    ;
CODE_01E875:          STA RAM_SpriteYLo,X                 ;; 01E875 : 95 D8       ;
CODE_01E877:          LDA $D4                             ;; 01E877 : A5 D4       ;
CODE_01E879:          ADC.B #$00                          ;; 01E879 : 69 00       ;
CODE_01E87B:          STA.W RAM_SpriteYHi,X               ;; 01E87B : 9D D4 14    ;
CODE_01E87E:          STZ RAM_IsFlying                    ;; 01E87E : 64 72       ;
CODE_01E880:          INC.W $1471                         ;; 01E880 : EE 71 14    ;
CODE_01E883:          INC.W $18C2                         ;; 01E883 : EE C2 18    ;
CODE_01E886:          LDA $16                             ;; 01E886 : A5 16       ;
CODE_01E888:          AND.B #$80                          ;; 01E888 : 29 80       ;
CODE_01E88A:          BEQ Return01E897                    ;; 01E88A : F0 0B       ;
CODE_01E88C:          LDA.B #$C0                          ;; 01E88C : A9 C0       ;
CODE_01E88E:          STA RAM_MarioSpeedY                 ;; 01E88E : 85 7D       ;
CODE_01E890:          LDA.B #$10                          ;; 01E890 : A9 10       ;
CODE_01E892:          STA.W RAM_DisableInter,X            ;; 01E892 : 9D 4C 15    ;
CODE_01E895:          STZ RAM_SpriteState,X               ;; 01E895 : 74 C2       ;
Return01E897:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01E898:          PHY                                 ;; 01E898 : 5A          ;
CODE_01E899:          JSR.W CODE_01E98D                   ;; 01E899 : 20 8D E9    ;
CODE_01E89C:          LDA RAM_FrameCounterB               ;; 01E89C : A5 14       ;
CODE_01E89E:          LSR                                 ;; 01E89E : 4A          ;
CODE_01E89F:          LSR                                 ;; 01E89F : 4A          ;
CODE_01E8A0:          LSR                                 ;; 01E8A0 : 4A          ;
CODE_01E8A1:          AND.B #$07                          ;; 01E8A1 : 29 07       ;
CODE_01E8A3:          TAY                                 ;; 01E8A3 : A8          ;
CODE_01E8A4:          LDA.W DATA_01E793,Y                 ;; 01E8A4 : B9 93 E7    ;
CODE_01E8A7:          STA $00                             ;; 01E8A7 : 85 00       ;
CODE_01E8A9:          PLY                                 ;; 01E8A9 : 7A          ;
CODE_01E8AA:          LDA RAM_SpriteXLo,X                 ;; 01E8AA : B5 E4       ;
CODE_01E8AC:          STA.W RAM_SpriteXLo,Y               ;; 01E8AC : 99 E4 00    ;
CODE_01E8AF:          LDA.W RAM_SpriteXHi,X               ;; 01E8AF : BD E0 14    ;
CODE_01E8B2:          STA.W RAM_SpriteXHi,Y               ;; 01E8B2 : 99 E0 14    ;
CODE_01E8B5:          LDA RAM_SpriteYLo,X                 ;; 01E8B5 : B5 D8       ;
CODE_01E8B7:          SEC                                 ;; 01E8B7 : 38          ;
CODE_01E8B8:          SBC $00                             ;; 01E8B8 : E5 00       ;
CODE_01E8BA:          STA.W RAM_SpriteYLo,Y               ;; 01E8BA : 99 D8 00    ;
CODE_01E8BD:          LDA.W RAM_SpriteYHi,X               ;; 01E8BD : BD D4 14    ;
CODE_01E8C0:          SBC.B #$00                          ;; 01E8C0 : E9 00       ;
CODE_01E8C2:          STA.W RAM_SpriteYHi,Y               ;; 01E8C2 : 99 D4 14    ;
CODE_01E8C5:          LDA.B #$10                          ;; 01E8C5 : A9 10       ;
CODE_01E8C7:          STA.W RAM_DisableInter,X            ;; 01E8C7 : 9D 4C 15    ;
LakituCloudGfx:       JSR.W GetDrawInfoBnk1               ;; ?QPWZ? : 20 65 A3    ;
CODE_01E8CD:          LDA.W RAM_OffscreenVert,X           ;; 01E8CD : BD 6C 18    ;
CODE_01E8D0:          BNE Return01E897                    ;; 01E8D0 : D0 C5       ;
CODE_01E8D2:          LDA.B #$F8                          ;; 01E8D2 : A9 F8       ;
CODE_01E8D4:          STA $0C                             ;; 01E8D4 : 85 0C       ;
CODE_01E8D6:          LDA.B #$FC                          ;; 01E8D6 : A9 FC       ;
CODE_01E8D8:          STA $0D                             ;; 01E8D8 : 85 0D       ;
CODE_01E8DA:          LDA.B #$00                          ;; 01E8DA : A9 00       ;
CODE_01E8DC:          LDY RAM_SpriteState,X               ;; 01E8DC : B4 C2       ;
CODE_01E8DE:          BNE CODE_01E8E2                     ;; 01E8DE : D0 02       ;
CODE_01E8E0:          LDA.B #$30                          ;; 01E8E0 : A9 30       ;
CODE_01E8E2:          STA $0E                             ;; 01E8E2 : 85 0E       ;
CODE_01E8E4:          STA.W $18B6                         ;; 01E8E4 : 8D B6 18    ;
CODE_01E8E7:          ORA.B #$04                          ;; 01E8E7 : 09 04       ;
CODE_01E8E9:          STA $0F                             ;; 01E8E9 : 85 0F       ;
CODE_01E8EB:          LDA $00                             ;; 01E8EB : A5 00       ;
CODE_01E8ED:          STA.W $14B0                         ;; 01E8ED : 8D B0 14    ;
CODE_01E8F0:          LDA $01                             ;; 01E8F0 : A5 01       ;
CODE_01E8F2:          STA.W $14B2                         ;; 01E8F2 : 8D B2 14    ;
CODE_01E8F5:          LDA RAM_FrameCounterB               ;; 01E8F5 : A5 14       ;
CODE_01E8F7:          LSR                                 ;; 01E8F7 : 4A          ;
CODE_01E8F8:          LSR                                 ;; 01E8F8 : 4A          ;
CODE_01E8F9:          AND.B #$0C                          ;; 01E8F9 : 29 0C       ;
CODE_01E8FB:          STA $02                             ;; 01E8FB : 85 02       ;
CODE_01E8FD:          LDA.B #$03                          ;; 01E8FD : A9 03       ;
CODE_01E8FF:          STA $03                             ;; 01E8FF : 85 03       ;
CODE_01E901:          LDA $03                             ;; 01E901 : A5 03       ;
CODE_01E903:          TAX                                 ;; 01E903 : AA          ;
CODE_01E904:          LDY $0C,X                           ;; 01E904 : B4 0C       ;
CODE_01E906:          CLC                                 ;; 01E906 : 18          ;
CODE_01E907:          ADC $02                             ;; 01E907 : 65 02       ;
CODE_01E909:          TAX                                 ;; 01E909 : AA          ;
CODE_01E90A:          LDA.W DATA_01E76F,X                 ;; 01E90A : BD 6F E7    ;
CODE_01E90D:          CLC                                 ;; 01E90D : 18          ;
CODE_01E90E:          ADC.W $14B0                         ;; 01E90E : 6D B0 14    ;
CODE_01E911:          STA.W OAM_DispX,Y                   ;; 01E911 : 99 00 03    ;
CODE_01E914:          LDA.W DATA_01E77F,X                 ;; 01E914 : BD 7F E7    ;
CODE_01E917:          CLC                                 ;; 01E917 : 18          ;
CODE_01E918:          ADC.W $14B2                         ;; 01E918 : 6D B2 14    ;
CODE_01E91B:          STA.W OAM_DispY,Y                   ;; 01E91B : 99 01 03    ;
CODE_01E91E:          LDX.W $15E9                         ;; 01E91E : AE E9 15    ; X = Sprite index 
CODE_01E921:          LDA.B #$60                          ;; 01E921 : A9 60       ;
CODE_01E923:          STA.W OAM_Tile,Y                    ;; 01E923 : 99 02 03    ;
CODE_01E926:          LDA.W $1540,X                       ;; 01E926 : BD 40 15    ;
CODE_01E929:          BEQ CODE_01E935                     ;; 01E929 : F0 0A       ;
CODE_01E92B:          LSR                                 ;; 01E92B : 4A          ;
CODE_01E92C:          LSR                                 ;; 01E92C : 4A          ;
CODE_01E92D:          LSR                                 ;; 01E92D : 4A          ;
CODE_01E92E:          TAX                                 ;; 01E92E : AA          ;
CODE_01E92F:          LDA.W CloudTiles,X                  ;; 01E92F : BD 85 E9    ;
CODE_01E932:          STA.W OAM_Tile,Y                    ;; 01E932 : 99 02 03    ;
CODE_01E935:          LDA $64                             ;; 01E935 : A5 64       ;
CODE_01E937:          STA.W OAM_Prop,Y                    ;; 01E937 : 99 03 03    ;
CODE_01E93A:          INY                                 ;; 01E93A : C8          ;
CODE_01E93B:          INY                                 ;; 01E93B : C8          ;
CODE_01E93C:          INY                                 ;; 01E93C : C8          ;
CODE_01E93D:          INY                                 ;; 01E93D : C8          ;
CODE_01E93E:          DEC $03                             ;; 01E93E : C6 03       ;
CODE_01E940:          BPL CODE_01E901                     ;; 01E940 : 10 BF       ;
CODE_01E942:          LDX.W $15E9                         ;; 01E942 : AE E9 15    ; X = Sprite index 
CODE_01E945:          LDA.B #$F8                          ;; 01E945 : A9 F8       ;
CODE_01E947:          STA.W RAM_SprOAMIndex,X             ;; 01E947 : 9D EA 15    ;
CODE_01E94A:          LDY.B #$02                          ;; 01E94A : A0 02       ;
CODE_01E94C:          LDA.B #$01                          ;; 01E94C : A9 01       ;
CODE_01E94E:          JSR.W FinishOAMWriteRt              ;; 01E94E : 20 BB B7    ;
CODE_01E951:          LDA.W $18B6                         ;; 01E951 : AD B6 18    ;
CODE_01E954:          STA.W RAM_SprOAMIndex,X             ;; 01E954 : 9D EA 15    ;
CODE_01E957:          LDY.B #$02                          ;; 01E957 : A0 02       ;
CODE_01E959:          LDA.B #$01                          ;; 01E959 : A9 01       ;
CODE_01E95B:          JSR.W FinishOAMWriteRt              ;; 01E95B : 20 BB B7    ;
CODE_01E95E:          LDA.W RAM_OffscreenHorz,X           ;; 01E95E : BD A0 15    ;
CODE_01E961:          BNE Return01E984                    ;; 01E961 : D0 21       ;
CODE_01E963:          LDA.W $14B0                         ;; 01E963 : AD B0 14    ;
CODE_01E966:          CLC                                 ;; 01E966 : 18          ;
CODE_01E967:          ADC.B #$04                          ;; 01E967 : 69 04       ;
CODE_01E969:          STA.W $0208                         ;; 01E969 : 8D 08 02    ;
CODE_01E96C:          LDA.W $14B2                         ;; 01E96C : AD B2 14    ;
CODE_01E96F:          CLC                                 ;; 01E96F : 18          ;
CODE_01E970:          ADC.B #$07                          ;; 01E970 : 69 07       ;
CODE_01E972:          STA.W $0209                         ;; 01E972 : 8D 09 02    ;
CODE_01E975:          LDA.B #$4D                          ;; 01E975 : A9 4D       ;
CODE_01E977:          STA.W $020A                         ;; 01E977 : 8D 0A 02    ;
CODE_01E97A:          LDA.B #$39                          ;; 01E97A : A9 39       ;
CODE_01E97C:          STA.W $020B                         ;; 01E97C : 8D 0B 02    ;
CODE_01E97F:          LDA.B #$00                          ;; 01E97F : A9 00       ;
CODE_01E981:          STA.W $0422                         ;; 01E981 : 8D 22 04    ;
Return01E984:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
CloudTiles:           .db $66,$64,$62,$60                 ;; ?QPWZ?               ;
                                                          ;;                      ;
DATA_01E989:          .db $20,$E0                         ;; 01E989               ;
                                                          ;;                      ;
DATA_01E98B:          .db $10,$F0                         ;; 01E98B               ;
                                                          ;;                      ;
CODE_01E98D:          LDA RAM_SpritesLocked               ;; 01E98D : A5 9D       ; \ Branch if sprites locked 
CODE_01E98F:          BNE Return01E984                    ;; 01E98F : D0 F3       ; / 
CODE_01E991:          JSR.W SubHorizPos                   ;; 01E991 : 20 30 AD    ;
CODE_01E994:          TYA                                 ;; 01E994 : 98          ;
CODE_01E995:          LDY.W $160E,X                       ;; 01E995 : BC 0E 16    ;
CODE_01E998:          STA.W RAM_SpriteDir,Y               ;; 01E998 : 99 7C 15    ;
CODE_01E99B:          STA $00                             ;; 01E99B : 85 00       ;
CODE_01E99D:          LDY $00                             ;; 01E99D : A4 00       ;
CODE_01E99F:          LDA.W $18BF                         ;; 01E99F : AD BF 18    ;
CODE_01E9A2:          BEQ CODE_01E9BD                     ;; 01E9A2 : F0 19       ;
CODE_01E9A4:          PHY                                 ;; 01E9A4 : 5A          ;
CODE_01E9A5:          PHX                                 ;; 01E9A5 : DA          ;
CODE_01E9A6:          LDA.W $160E,X                       ;; 01E9A6 : BD 0E 16    ;
CODE_01E9A9:          TAX                                 ;; 01E9A9 : AA          ;
CODE_01E9AA:          JSR.W SubOffscreen0Bnk1             ;; 01E9AA : 20 31 AC    ;
CODE_01E9AD:          LDA.W $14C8,X                       ;; 01E9AD : BD C8 14    ;
CODE_01E9B0:          PLX                                 ;; 01E9B0 : FA          ;
CODE_01E9B1:          CMP.B #$00                          ;; 01E9B1 : C9 00       ;
CODE_01E9B3:          BNE CODE_01E9B8                     ;; 01E9B3 : D0 03       ;
CODE_01E9B5:          STZ.W $14C8,X                       ;; 01E9B5 : 9E C8 14    ;
CODE_01E9B8:          PLY                                 ;; 01E9B8 : 7A          ;
CODE_01E9B9:          TYA                                 ;; 01E9B9 : 98          ;
CODE_01E9BA:          EOR.B #$01                          ;; 01E9BA : 49 01       ;
CODE_01E9BC:          TAY                                 ;; 01E9BC : A8          ;
CODE_01E9BD:          LDA RAM_FrameCounter                ;; 01E9BD : A5 13       ;
CODE_01E9BF:          AND.B #$01                          ;; 01E9BF : 29 01       ;
CODE_01E9C1:          BNE CODE_01E9E6                     ;; 01E9C1 : D0 23       ;
CODE_01E9C3:          LDA RAM_SpriteSpeedX,X              ;; 01E9C3 : B5 B6       ;
CODE_01E9C5:          CMP.W DATA_01E989,Y                 ;; 01E9C5 : D9 89 E9    ;
CODE_01E9C8:          BEQ CODE_01E9D0                     ;; 01E9C8 : F0 06       ;
CODE_01E9CA:          CLC                                 ;; 01E9CA : 18          ;
CODE_01E9CB:          ADC.W DATA_01EBB4,Y                 ;; 01E9CB : 79 B4 EB    ;
CODE_01E9CE:          STA RAM_SpriteSpeedX,X              ;; 01E9CE : 95 B6       ;
CODE_01E9D0:          LDA.W $1534,X                       ;; 01E9D0 : BD 34 15    ;
CODE_01E9D3:          AND.B #$01                          ;; 01E9D3 : 29 01       ;
CODE_01E9D5:          TAY                                 ;; 01E9D5 : A8          ;
CODE_01E9D6:          LDA RAM_SpriteSpeedY,X              ;; 01E9D6 : B5 AA       ;
CODE_01E9D8:          CLC                                 ;; 01E9D8 : 18          ;
CODE_01E9D9:          ADC.W DATA_01EBB4,Y                 ;; 01E9D9 : 79 B4 EB    ;
CODE_01E9DC:          STA RAM_SpriteSpeedY,X              ;; 01E9DC : 95 AA       ;
CODE_01E9DE:          CMP.W DATA_01E98B,Y                 ;; 01E9DE : D9 8B E9    ;
CODE_01E9E1:          BNE CODE_01E9E6                     ;; 01E9E1 : D0 03       ;
CODE_01E9E3:          INC.W $1534,X                       ;; 01E9E3 : FE 34 15    ;
CODE_01E9E6:          LDA RAM_SpriteSpeedX,X              ;; 01E9E6 : B5 B6       ;
CODE_01E9E8:          PHA                                 ;; 01E9E8 : 48          ;
CODE_01E9E9:          LDY.W $18BF                         ;; 01E9E9 : AC BF 18    ;
CODE_01E9EC:          BNE CODE_01E9F9                     ;; 01E9EC : D0 0B       ;
CODE_01E9EE:          LDA.W $17BD                         ;; 01E9EE : AD BD 17    ;
CODE_01E9F1:          ASL                                 ;; 01E9F1 : 0A          ;
CODE_01E9F2:          ASL                                 ;; 01E9F2 : 0A          ;
CODE_01E9F3:          ASL                                 ;; 01E9F3 : 0A          ;
CODE_01E9F4:          CLC                                 ;; 01E9F4 : 18          ;
CODE_01E9F5:          ADC RAM_SpriteSpeedX,X              ;; 01E9F5 : 75 B6       ;
CODE_01E9F7:          STA RAM_SpriteSpeedX,X              ;; 01E9F7 : 95 B6       ;
CODE_01E9F9:          JSR.W SubSprXPosNoGrvty             ;; 01E9F9 : 20 CC AB    ;
CODE_01E9FC:          PLA                                 ;; 01E9FC : 68          ;
CODE_01E9FD:          STA RAM_SpriteSpeedX,X              ;; 01E9FD : 95 B6       ;
CODE_01E9FF:          JSR.W SubSprYPosNoGrvty             ;; 01E9FF : 20 D8 AB    ;
CODE_01EA02:          LDY.W $160E,X                       ;; 01EA02 : BC 0E 16    ;
CODE_01EA05:          LDA RAM_FrameCounter                ;; 01EA05 : A5 13       ;
CODE_01EA07:          AND.B #$7F                          ;; 01EA07 : 29 7F       ;
CODE_01EA09:          ORA.W $151C,Y                       ;; 01EA09 : 19 1C 15    ;
CODE_01EA0C:          BNE Return01EA16                    ;; 01EA0C : D0 08       ;
CODE_01EA0E:          LDA.B #$20                          ;; 01EA0E : A9 20       ;
CODE_01EA10:          STA.W $1558,Y                       ;; 01EA10 : 99 58 15    ;
CODE_01EA13:          JSR.W CODE_01EA21                   ;; 01EA13 : 20 21 EA    ;
Return01EA16:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
DATA_01EA17:          .db $10,$F0                         ;; 01EA17               ;
                                                          ;;                      ;
CODE_01EA19:          PHB                                 ;; 01EA19 : 8B          ; Wrapper 
CODE_01EA1A:          PHK                                 ;; 01EA1A : 4B          ;
CODE_01EA1B:          PLB                                 ;; 01EA1B : AB          ;
CODE_01EA1C:          JSR.W CODE_01EA21                   ;; 01EA1C : 20 21 EA    ;
CODE_01EA1F:          PLB                                 ;; 01EA1F : AB          ;
Return01EA20:         RTL                                 ;; ?QPWZ? : 6B          ; Return 
                                                          ;;                      ;
CODE_01EA21:          JSL.L FindFreeSprSlot               ;; 01EA21 : 22 E4 A9 02 ; \ Return if no free slots 
CODE_01EA25:          BMI Return01EA6F                    ;; 01EA25 : 30 48       ; / 
CODE_01EA27:          LDA.B #$08                          ;; 01EA27 : A9 08       ; \ Sprite status = Normal 
CODE_01EA29:          STA.W $14C8,Y                       ;; 01EA29 : 99 C8 14    ; / 
CODE_01EA2C:          LDA.W RAM_SilverPowTimer            ;; 01EA2C : AD AE 14    ;
CODE_01EA2F:          CMP.B #$01                          ;; 01EA2F : C9 01       ;
CODE_01EA31:          LDA.B #$14                          ;; 01EA31 : A9 14       ;
CODE_01EA33:          BCC CODE_01EA37                     ;; 01EA33 : 90 02       ;
CODE_01EA35:          LDA.B #$21                          ;; 01EA35 : A9 21       ;
CODE_01EA37:          STA.W RAM_SpriteNum,Y               ;; 01EA37 : 99 9E 00    ;
CODE_01EA3A:          LDA RAM_SpriteXLo,X                 ;; 01EA3A : B5 E4       ;
CODE_01EA3C:          STA.W RAM_SpriteXLo,Y               ;; 01EA3C : 99 E4 00    ;
CODE_01EA3F:          LDA.W RAM_SpriteXHi,X               ;; 01EA3F : BD E0 14    ;
CODE_01EA42:          STA.W RAM_SpriteXHi,Y               ;; 01EA42 : 99 E0 14    ;
CODE_01EA45:          LDA RAM_SpriteYLo,X                 ;; 01EA45 : B5 D8       ;
CODE_01EA47:          STA.W RAM_SpriteYLo,Y               ;; 01EA47 : 99 D8 00    ;
CODE_01EA4A:          LDA.W RAM_SpriteYHi,X               ;; 01EA4A : BD D4 14    ;
CODE_01EA4D:          STA.W RAM_SpriteYHi,Y               ;; 01EA4D : 99 D4 14    ;
CODE_01EA50:          PHX                                 ;; 01EA50 : DA          ;
CODE_01EA51:          TYX                                 ;; 01EA51 : BB          ;
CODE_01EA52:          JSL.L InitSpriteTables              ;; 01EA52 : 22 D2 F7 07 ;
CODE_01EA56:          LDA.B #$D8                          ;; 01EA56 : A9 D8       ;
CODE_01EA58:          STA RAM_SpriteSpeedY,X              ;; 01EA58 : 95 AA       ;
CODE_01EA5A:          JSR.W SubHorizPos                   ;; 01EA5A : 20 30 AD    ;
CODE_01EA5D:          LDA.W DATA_01EA17,Y                 ;; 01EA5D : B9 17 EA    ;
CODE_01EA60:          STA RAM_SpriteSpeedX,X              ;; 01EA60 : 95 B6       ;
CODE_01EA62:          LDA RAM_SpriteNum,X                 ;; 01EA62 : B5 9E       ;
CODE_01EA64:          CMP.B #$21                          ;; 01EA64 : C9 21       ;
CODE_01EA66:          BNE CODE_01EA6D                     ;; 01EA66 : D0 05       ;
CODE_01EA68:          LDA.B #$02                          ;; 01EA68 : A9 02       ;
CODE_01EA6A:          STA.W RAM_SpritePal,X               ;; 01EA6A : 9D F6 15    ;
CODE_01EA6D:          TXY                                 ;; 01EA6D : 9B          ;
CODE_01EA6E:          PLX                                 ;; 01EA6E : FA          ;
Return01EA6F:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01EA70:          LDX.W $18E2                         ;; 01EA70 : AE E2 18    ;
CODE_01EA73:          BEQ Return01EA8E                    ;; 01EA73 : F0 19       ;
CODE_01EA75:          STZ.W $188B                         ;; 01EA75 : 9C 8B 18    ;
CODE_01EA78:          STZ.W $191C                         ;; 01EA78 : 9C 1C 19    ;
CODE_01EA7B:          LDA.W $15E9                         ;; 01EA7B : AD E9 15    ;
CODE_01EA7E:          PHA                                 ;; 01EA7E : 48          ;
CODE_01EA7F:          DEX                                 ;; 01EA7F : CA          ;
CODE_01EA80:          STX.W $15E9                         ;; 01EA80 : 8E E9 15    ;
CODE_01EA83:          PHB                                 ;; 01EA83 : 8B          ;
CODE_01EA84:          PHK                                 ;; 01EA84 : 4B          ;
CODE_01EA85:          PLB                                 ;; 01EA85 : AB          ;
CODE_01EA86:          JSR.W CODE_01EA8F                   ;; 01EA86 : 20 8F EA    ;
CODE_01EA89:          PLB                                 ;; 01EA89 : AB          ;
CODE_01EA8A:          PLA                                 ;; 01EA8A : 68          ;
CODE_01EA8B:          STA.W $15E9                         ;; 01EA8B : 8D E9 15    ;
Return01EA8E:         RTL                                 ;; ?QPWZ? : 6B          ; Return 
                                                          ;;                      ;
CODE_01EA8F:          LDA.W $18E8                         ;; 01EA8F : AD E8 18    ;
CODE_01EA92:          ORA.W $13C6                         ;; 01EA92 : 0D C6 13    ;
CODE_01EA95:          BEQ CODE_01EA9A                     ;; 01EA95 : F0 03       ;
CODE_01EA97:          JMP.W CODE_01EB48                   ;; 01EA97 : 4C 48 EB    ;
                                                          ;;                      ;
CODE_01EA9A:          STZ.W $18DC                         ;; 01EA9A : 9C DC 18    ;
CODE_01EA9D:          LDA RAM_SpriteState,X               ;; 01EA9D : B5 C2       ;
CODE_01EA9F:          CMP.B #$02                          ;; 01EA9F : C9 02       ;
CODE_01EAA1:          BCC CODE_01EAA7                     ;; 01EAA1 : 90 04       ;
CODE_01EAA3:          LDA.B #$30                          ;; 01EAA3 : A9 30       ;
CODE_01EAA5:          BRA CODE_01EAB2                     ;; 01EAA5 : 80 0B       ;
                                                          ;;                      ;
CODE_01EAA7:          LDY.B #$00                          ;; 01EAA7 : A0 00       ;
CODE_01EAA9:          LDA RAM_MarioSpeedX                 ;; 01EAA9 : A5 7B       ; \ Branch if Mario X speed == 0 
CODE_01EAAB:          BEQ CODE_01EADF                     ;; 01EAAB : F0 32       ; / 
CODE_01EAAD:          BPL CODE_01EAB2                     ;; 01EAAD : 10 03       ; \ If Mario X speed is positive, 
CODE_01EAAF:          EOR.B #$FF                          ;; 01EAAF : 49 FF       ;  | invert it 
CODE_01EAB1:          INC A                               ;; 01EAB1 : 1A          ; / 
CODE_01EAB2:          LSR                                 ;; 01EAB2 : 4A          ; \ Y = Upper 4 bits of X speed 
CODE_01EAB3:          LSR                                 ;; 01EAB3 : 4A          ;  | 
CODE_01EAB4:          LSR                                 ;; 01EAB4 : 4A          ;  | 
CODE_01EAB5:          LSR                                 ;; 01EAB5 : 4A          ;  | 
CODE_01EAB6:          TAY                                 ;; 01EAB6 : A8          ; / 
CODE_01EAB7:          LDA RAM_SpritesLocked               ;; 01EAB7 : A5 9D       ; \ Branch if sprites locked 
CODE_01EAB9:          BNE CODE_01EAD0                     ;; 01EAB9 : D0 15       ; / 
CODE_01EABB:          DEC.W $1570,X                       ;; 01EABB : DE 70 15    ; \ If time to change frame... 
CODE_01EABE:          BPL CODE_01EAD0                     ;; 01EABE : 10 10       ;  | 
CODE_01EAC0:          LDA.W DATA_01EDF5,Y                 ;; 01EAC0 : B9 F5 ED    ;  | Set time to display new frame (based on Mario's X speed) 
CODE_01EAC3:          STA.W $1570,X                       ;; 01EAC3 : 9D 70 15    ;  | 
CODE_01EAC6:          DEC.W $18AD                         ;; 01EAC6 : CE AD 18    ;  | Set index to new frame, $18AD = ($18AD-1) % 3 
CODE_01EAC9:          BPL CODE_01EAD0                     ;; 01EAC9 : 10 05       ;  | 
CODE_01EACB:          LDA.B #$02                          ;; 01EACB : A9 02       ;  | 
CODE_01EACD:          STA.W $18AD                         ;; 01EACD : 8D AD 18    ; / 
CODE_01EAD0:          LDY.W $18AD                         ;; 01EAD0 : AC AD 18    ; \ Y = frame to show 
CODE_01EAD3:          LDA.W YoshiWalkFrames,Y             ;; 01EAD3 : B9 EE ED    ;  | 
CODE_01EAD6:          TAY                                 ;; 01EAD6 : A8          ; / 
CODE_01EAD7:          LDA RAM_SpriteState,X               ;; 01EAD7 : B5 C2       ;
CODE_01EAD9:          CMP.B #$02                          ;; 01EAD9 : C9 02       ;
CODE_01EADB:          BCS CODE_01EB2E                     ;; 01EADB : B0 51       ;
CODE_01EADD:          BRA CODE_01EAE2                     ;; 01EADD : 80 03       ;
                                                          ;;                      ;
CODE_01EADF:          STZ.W $1570,X                       ;; 01EADF : 9E 70 15    ;
CODE_01EAE2:          LDA RAM_IsFlying                    ;; 01EAE2 : A5 72       ;
CODE_01EAE4:          BEQ CODE_01EAF0                     ;; 01EAE4 : F0 0A       ;
CODE_01EAE6:          LDY.B #$02                          ;; 01EAE6 : A0 02       ;
CODE_01EAE8:          LDA RAM_MarioSpeedY                 ;; 01EAE8 : A5 7D       ;
CODE_01EAEA:          BPL CODE_01EAF0                     ;; 01EAEA : 10 04       ;
CODE_01EAEC:          LDY.B #$05                          ;; 01EAEC : A0 05       ;
CODE_01EAEE:          BRA CODE_01EAF0                     ;; 01EAEE : 80 00       ;
                                                          ;;                      ;
CODE_01EAF0:          LDA.W $15AC,X                       ;; 01EAF0 : BD AC 15    ;
CODE_01EAF3:          BEQ CODE_01EAF7                     ;; 01EAF3 : F0 02       ;
CODE_01EAF5:          LDY.B #$03                          ;; 01EAF5 : A0 03       ;
CODE_01EAF7:          LDA RAM_IsFlying                    ;; 01EAF7 : A5 72       ;
CODE_01EAF9:          BNE CODE_01EB21                     ;; 01EAF9 : D0 26       ;
CODE_01EAFB:          LDA.W $151C,X                       ;; 01EAFB : BD 1C 15    ;
CODE_01EAFE:          BEQ CODE_01EB0C                     ;; 01EAFE : F0 0C       ;
CODE_01EB00:          LDY.B #$07                          ;; 01EB00 : A0 07       ;
CODE_01EB02:          LDA RAM_ControllerA                 ;; 01EB02 : A5 15       ;
CODE_01EB04:          AND.B #$08                          ;; 01EB04 : 29 08       ;
CODE_01EB06:          BEQ CODE_01EB0A                     ;; 01EB06 : F0 02       ;
CODE_01EB08:          LDY.B #$06                          ;; 01EB08 : A0 06       ;
CODE_01EB0A:          BRA CODE_01EB21                     ;; 01EB0A : 80 15       ;
                                                          ;;                      ;
CODE_01EB0C:          LDA.W $18AF                         ;; 01EB0C : AD AF 18    ;
CODE_01EB0F:          BEQ CODE_01EB16                     ;; 01EB0F : F0 05       ;
CODE_01EB11:          DEC.W $18AF                         ;; 01EB11 : CE AF 18    ;
CODE_01EB14:          BRA CODE_01EB1C                     ;; 01EB14 : 80 06       ;
                                                          ;;                      ;
CODE_01EB16:          LDA RAM_ControllerA                 ;; 01EB16 : A5 15       ;
CODE_01EB18:          AND.B #$04                          ;; 01EB18 : 29 04       ;
CODE_01EB1A:          BEQ CODE_01EB21                     ;; 01EB1A : F0 05       ;
CODE_01EB1C:          LDY.B #$04                          ;; 01EB1C : A0 04       ;
CODE_01EB1E:          INC.W $18DC                         ;; 01EB1E : EE DC 18    ;
CODE_01EB21:          LDA RAM_SpriteState,X               ;; 01EB21 : B5 C2       ;
CODE_01EB23:          CMP.B #$01                          ;; 01EB23 : C9 01       ;
CODE_01EB25:          BEQ CODE_01EB2E                     ;; 01EB25 : F0 07       ;
CODE_01EB27:          LDA.W $151C,X                       ;; 01EB27 : BD 1C 15    ;
CODE_01EB2A:          BNE CODE_01EB2E                     ;; 01EB2A : D0 02       ;
CODE_01EB2C:          LDY.B #$04                          ;; 01EB2C : A0 04       ;
CODE_01EB2E:          LDA.W RAM_OnYoshi                   ;; 01EB2E : AD 7A 18    ;
CODE_01EB31:          BEQ CODE_01EB44                     ;; 01EB31 : F0 11       ;
CODE_01EB33:          LDA.W RAM_YoshiInPipe               ;; 01EB33 : AD 19 14    ;
CODE_01EB36:          CMP.B #$01                          ;; 01EB36 : C9 01       ;
CODE_01EB38:          BNE CODE_01EB44                     ;; 01EB38 : D0 0A       ;
CODE_01EB3A:          LDA RAM_FrameCounter                ;; 01EB3A : A5 13       ;
CODE_01EB3C:          AND.B #$08                          ;; 01EB3C : 29 08       ;
CODE_01EB3E:          LSR                                 ;; 01EB3E : 4A          ;
CODE_01EB3F:          LSR                                 ;; 01EB3F : 4A          ;
CODE_01EB40:          LSR                                 ;; 01EB40 : 4A          ;
CODE_01EB41:          ADC.B #$08                          ;; 01EB41 : 69 08       ;
CODE_01EB43:          TAY                                 ;; 01EB43 : A8          ;
CODE_01EB44:          TYA                                 ;; 01EB44 : 98          ;
CODE_01EB45:          STA.W $1602,X                       ;; 01EB45 : 9D 02 16    ;
CODE_01EB48:          LDA RAM_SpriteState,X               ;; 01EB48 : B5 C2       ;
CODE_01EB4A:          CMP.B #$01                          ;; 01EB4A : C9 01       ;
CODE_01EB4C:          BNE CODE_01EB97                     ;; 01EB4C : D0 49       ;
CODE_01EB4E:          LDY.W RAM_SpriteDir,X               ;; 01EB4E : BC 7C 15    ;
CODE_01EB51:          LDA RAM_MarioXPos                   ;; 01EB51 : A5 94       ;
CODE_01EB53:          CLC                                 ;; 01EB53 : 18          ;
CODE_01EB54:          ADC.W YoshiPositionX,Y              ;; 01EB54 : 79 F1 ED    ;
CODE_01EB57:          STA RAM_SpriteXLo,X                 ;; 01EB57 : 95 E4       ;
CODE_01EB59:          LDA RAM_MarioXPosHi                 ;; 01EB59 : A5 95       ;
CODE_01EB5B:          ADC.W DATA_01EDF3,Y                 ;; 01EB5B : 79 F3 ED    ;
CODE_01EB5E:          STA.W RAM_SpriteXHi,X               ;; 01EB5E : 9D E0 14    ;
CODE_01EB61:          LDY.W $1602,X                       ;; 01EB61 : BC 02 16    ;
CODE_01EB64:          LDA RAM_MarioYPos                   ;; 01EB64 : A5 96       ;
CODE_01EB66:          CLC                                 ;; 01EB66 : 18          ;
CODE_01EB67:          ADC.B #$10                          ;; 01EB67 : 69 10       ;
CODE_01EB69:          STA RAM_SpriteYLo,X                 ;; 01EB69 : 95 D8       ;
CODE_01EB6B:          LDA RAM_MarioYPosHi                 ;; 01EB6B : A5 97       ;
CODE_01EB6D:          ADC.B #$00                          ;; 01EB6D : 69 00       ;
CODE_01EB6F:          STA.W RAM_SpriteYHi,X               ;; 01EB6F : 9D D4 14    ;
CODE_01EB72:          LDA.W DATA_01EDE4,Y                 ;; 01EB72 : B9 E4 ED    ;
CODE_01EB75:          STA.W $188B                         ;; 01EB75 : 8D 8B 18    ;
CODE_01EB78:          LDA.B #$01                          ;; 01EB78 : A9 01       ;
CODE_01EB7A:          LDY.W $1602,X                       ;; 01EB7A : BC 02 16    ;
CODE_01EB7D:          CPY.B #$03                          ;; 01EB7D : C0 03       ;
CODE_01EB7F:          BNE BackOnYoshi                     ;; 01EB7F : D0 01       ;
CODE_01EB81:          INC A                               ;; 01EB81 : 1A          ;
BackOnYoshi:          STA.W RAM_OnYoshi                   ;; ?QPWZ? : 8D 7A 18    ;
CODE_01EB85:          LDA.B #$01                          ;; 01EB85 : A9 01       ;
CODE_01EB87:          STA.W RAM_OWHasYoshi                ;; 01EB87 : 8D C1 0D    ;
CODE_01EB8A:          LDA.W RAM_SpritePal,X               ;; 01EB8A : BD F6 15    ; \ $13C7 = Yoshi palette 
CODE_01EB8D:          STA.W RAM_YoshiColor                ;; 01EB8D : 8D C7 13    ; / 
CODE_01EB90:          LDA.W RAM_SpriteDir,X               ;; 01EB90 : BD 7C 15    ;
CODE_01EB93:          EOR.B #$01                          ;; 01EB93 : 49 01       ;
CODE_01EB95:          STA RAM_MarioDirection              ;; 01EB95 : 85 76       ;
CODE_01EB97:          LDA $64                             ;; 01EB97 : A5 64       ;
CODE_01EB99:          PHA                                 ;; 01EB99 : 48          ;
CODE_01EB9A:          LDA.W RAM_OnYoshi                   ;; 01EB9A : AD 7A 18    ;
CODE_01EB9D:          BEQ CODE_01EBAD                     ;; 01EB9D : F0 0E       ;
CODE_01EB9F:          LDA.W RAM_YoshiInPipe               ;; 01EB9F : AD 19 14    ;
CODE_01EBA2:          BEQ CODE_01EBAD                     ;; 01EBA2 : F0 09       ;
CODE_01EBA4:          LDA.W $1405                         ;; 01EBA4 : AD 05 14    ;
CODE_01EBA7:          BNE CODE_01EBB0                     ;; 01EBA7 : D0 07       ;
CODE_01EBA9:          LDA.B #$10                          ;; 01EBA9 : A9 10       ;
CODE_01EBAB:          STA $64                             ;; 01EBAB : 85 64       ;
CODE_01EBAD:          JSR.W HandleOffYoshi                ;; 01EBAD : 20 61 EE    ;
CODE_01EBB0:          PLA                                 ;; 01EBB0 : 68          ;
CODE_01EBB1:          STA $64                             ;; 01EBB1 : 85 64       ;
Return01EBB3:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
DATA_01EBB4:          .db $01,$FF,$01,$00,$FF,$00,$20,$E0 ;; 01EBB4               ;
                      .db $0A,$0E                         ;; ?QPWZ?               ;
                                                          ;;                      ;
DATA_01EBBE:          .db $E8,$18                         ;; 01EBBE               ;
                                                          ;;                      ;
DATA_01EBC0:          .db $10,$F0                         ;; 01EBC0               ;
                                                          ;;                      ;
GrowingAniSequence:   .db $0C,$0B,$0C,$0B,$0A,$0B,$0A,$0B ;; ?QPWZ?               ;
                                                          ;;                      ;
Yoshi:                STZ.W $13FB                         ;; ?QPWZ? : 9C FB 13    ;
CODE_01EBCD:          LDA.W RAM_YoshiHasWings             ;; 01EBCD : AD 1E 14    ; \ $1410 = winged Yoshi flag 
CODE_01EBD0:          STA.W RAM_YoshiHasWingsB            ;; 01EBD0 : 8D 10 14    ; / 
CODE_01EBD3:          STZ.W RAM_YoshiHasWings             ;; 01EBD3 : 9C 1E 14    ; Clear real winged Yoshi flag 
CODE_01EBD6:          STZ.W RAM_YoshiHasStomp             ;; 01EBD6 : 9C E7 18    ; Clear stomp Yoshi flag 
CODE_01EBD9:          STZ.W $191B                         ;; 01EBD9 : 9C 1B 19    ;
CODE_01EBDC:          LDA.W $14C8,X                       ;; 01EBDC : BD C8 14    ; \ Branch if normal Yoshi status 
CODE_01EBDF:          CMP.B #$08                          ;; 01EBDF : C9 08       ;  | 
CODE_01EBE1:          BEQ CODE_01EBE9                     ;; 01EBE1 : F0 06       ; / 
CODE_01EBE3:          STZ.W RAM_OWHasYoshi                ;; 01EBE3 : 9C C1 0D    ; Mario won't have Yoshi when returning to OW 
CODE_01EBE6:          JMP.W HandleOffYoshi                ;; 01EBE6 : 4C 61 EE    ;
                                                          ;;                      ;
CODE_01EBE9:          TXA                                 ;; 01EBE9 : 8A          ;
CODE_01EBEA:          INC A                               ;; 01EBEA : 1A          ;
CODE_01EBEB:          STA.W $18DF                         ;; 01EBEB : 8D DF 18    ;
CODE_01EBEE:          LDA.W RAM_OnYoshi                   ;; 01EBEE : AD 7A 18    ;
CODE_01EBF1:          BNE CODE_01EC04                     ;; 01EBF1 : D0 11       ;
CODE_01EBF3:          JSR.W SubOffscreen0Bnk1             ;; 01EBF3 : 20 31 AC    ;
CODE_01EBF6:          LDA.W $14C8,X                       ;; 01EBF6 : BD C8 14    ;
CODE_01EBF9:          BNE CODE_01EC04                     ;; 01EBF9 : D0 09       ;
CODE_01EBFB:          LDA.W $1B95                         ;; 01EBFB : AD 95 1B    ;
CODE_01EBFE:          BNE Return01EC03                    ;; 01EBFE : D0 03       ;
CODE_01EC00:          STZ.W RAM_OWHasYoshi                ;; 01EC00 : 9C C1 0D    ;
Return01EC03:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01EC04:          LDA.W RAM_OnYoshi                   ;; 01EC04 : AD 7A 18    ;
CODE_01EC07:          BEQ CODE_01EC0E                     ;; 01EC07 : F0 05       ;
CODE_01EC09:          LDA.W RAM_YoshiInPipe               ;; 01EC09 : AD 19 14    ;
CODE_01EC0C:          BNE CODE_01EC61                     ;; 01EC0C : D0 53       ;
CODE_01EC0E:          LDA.W $18DE                         ;; 01EC0E : AD DE 18    ;
CODE_01EC11:          BNE CODE_01EC61                     ;; 01EC11 : D0 4E       ;
CODE_01EC13:          LDA.W $18E8                         ;; 01EC13 : AD E8 18    ;
CODE_01EC16:          BEQ CODE_01EC4C                     ;; 01EC16 : F0 34       ;
CODE_01EC18:          DEC.W $18E8                         ;; 01EC18 : CE E8 18    ;
CODE_01EC1B:          STA RAM_SpritesLocked               ;; 01EC1B : 85 9D       ;
CODE_01EC1D:          STA.W $13FB                         ;; 01EC1D : 8D FB 13    ;
CODE_01EC20:          CMP.B #$01                          ;; 01EC20 : C9 01       ;
CODE_01EC22:          BNE CODE_01EC40                     ;; 01EC22 : D0 1C       ;
CODE_01EC24:          STZ RAM_SpritesLocked               ;; 01EC24 : 64 9D       ;
CODE_01EC26:          STZ.W $13FB                         ;; 01EC26 : 9C FB 13    ;
CODE_01EC29:          LDY.W $0DB3                         ;; 01EC29 : AC B3 0D    ;
CODE_01EC2C:          LDA.W $1F11,Y                       ;; 01EC2C : B9 11 1F    ;
CODE_01EC2F:          DEC A                               ;; 01EC2F : 3A          ;
CODE_01EC30:          ORA.W $0EF8                         ;; 01EC30 : 0D F8 0E    ;
CODE_01EC33:          ORA.W $0109                         ;; 01EC33 : 0D 09 01    ;
CODE_01EC36:          BNE CODE_01EC40                     ;; 01EC36 : D0 08       ;
CODE_01EC38:          INC.W $0EF8                         ;; 01EC38 : EE F8 0E    ;
CODE_01EC3B:          LDA.B #$03                          ;; 01EC3B : A9 03       ;
CODE_01EC3D:          STA.W $1426                         ;; 01EC3D : 8D 26 14    ;
CODE_01EC40:          DEC A                               ;; 01EC40 : 3A          ;
CODE_01EC41:          LSR                                 ;; 01EC41 : 4A          ;
CODE_01EC42:          LSR                                 ;; 01EC42 : 4A          ;
CODE_01EC43:          LSR                                 ;; 01EC43 : 4A          ;
CODE_01EC44:          TAY                                 ;; 01EC44 : A8          ;
CODE_01EC45:          LDA.W GrowingAniSequence,Y          ;; 01EC45 : B9 C2 EB    ; \ Set image to appropriate frame 
CODE_01EC48:          STA.W $1602,X                       ;; 01EC48 : 9D 02 16    ; / 
Return01EC4B:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01EC4C:          LDA RAM_SpritesLocked               ;; 01EC4C : A5 9D       ;
CODE_01EC4E:          BEQ CODE_01EC61                     ;; 01EC4E : F0 11       ;
CODE_01EC50:          LDY.W RAM_OnYoshi                   ;; 01EC50 : AC 7A 18    ;
CODE_01EC53:          BEQ Return01EC5A                    ;; 01EC53 : F0 05       ;
CODE_01EC55:          LDY.B #$06                          ;; 01EC55 : A0 06       ;
CODE_01EC57:          STY.W $188B                         ;; 01EC57 : 8C 8B 18    ;
Return01EC5A:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
DATA_01EC5B:          .db $F0,$10                         ;; 01EC5B               ;
                                                          ;;                      ;
DATA_01EC5D:          .db $FA,$06                         ;; 01EC5D               ;
                                                          ;;                      ;
DATA_01EC5F:          .db $FF,$00                         ;; 01EC5F               ;
                                                          ;;                      ;
CODE_01EC61:          LDA RAM_IsFlying                    ;; 01EC61 : A5 72       ;
CODE_01EC63:          BNE CODE_01EC6A                     ;; 01EC63 : D0 05       ;
CODE_01EC65:          LDA.W $18DE                         ;; 01EC65 : AD DE 18    ;
CODE_01EC68:          BNE CODE_01EC6D                     ;; 01EC68 : D0 03       ;
CODE_01EC6A:          JMP.W CODE_01ECE1                   ;; 01EC6A : 4C E1 EC    ;
                                                          ;;                      ;
CODE_01EC6D:          DEC.W $18DE                         ;; 01EC6D : CE DE 18    ;
CODE_01EC70:          CMP.B #$01                          ;; 01EC70 : C9 01       ;
CODE_01EC72:          BNE CODE_01EC78                     ;; 01EC72 : D0 04       ;
CODE_01EC74:          STZ RAM_SpritesLocked               ;; 01EC74 : 64 9D       ;
CODE_01EC76:          BRA CODE_01EC6A                     ;; 01EC76 : 80 F2       ;
                                                          ;;                      ;
CODE_01EC78:          INC.W $13FB                         ;; 01EC78 : EE FB 13    ;
CODE_01EC7B:          JSR.W CODE_01EC50                   ;; 01EC7B : 20 50 EC    ;
CODE_01EC7E:          STY RAM_SpritesLocked               ;; 01EC7E : 84 9D       ;
CODE_01EC80:          CMP.B #$02                          ;; 01EC80 : C9 02       ;
CODE_01EC82:          BNE Return01EC8A                    ;; 01EC82 : D0 06       ;
CODE_01EC84:          JSL.L FindFreeSprSlot               ;; 01EC84 : 22 E4 A9 02 ; \ Return if no free slots 
CODE_01EC88:          BPL CODE_01EC8B                     ;; 01EC88 : 10 01       ;  | 
Return01EC8A:         RTS                                 ;; ?QPWZ? : 60          ; / 
                                                          ;;                      ;
CODE_01EC8B:          LDA.B #$09                          ;; 01EC8B : A9 09       ; \ Sprite status = Carryable 
CODE_01EC8D:          STA.W $14C8,Y                       ;; 01EC8D : 99 C8 14    ; / 
CODE_01EC90:          LDA.B #$2C                          ;; 01EC90 : A9 2C       ;
CODE_01EC92:          STA.W RAM_SpriteNum,Y               ;; 01EC92 : 99 9E 00    ;
CODE_01EC95:          PHY                                 ;; 01EC95 : 5A          ;
CODE_01EC96:          PHY                                 ;; 01EC96 : 5A          ;
CODE_01EC97:          LDY.W RAM_SpriteDir,X               ;; 01EC97 : BC 7C 15    ;
CODE_01EC9A:          STY $0F                             ;; 01EC9A : 84 0F       ;
CODE_01EC9C:          LDA RAM_SpriteXLo,X                 ;; 01EC9C : B5 E4       ;
CODE_01EC9E:          CLC                                 ;; 01EC9E : 18          ;
CODE_01EC9F:          ADC.W DATA_01EC5D,Y                 ;; 01EC9F : 79 5D EC    ;
CODE_01ECA2:          PLY                                 ;; 01ECA2 : 7A          ;
CODE_01ECA3:          STA.W RAM_SpriteXLo,Y               ;; 01ECA3 : 99 E4 00    ;
CODE_01ECA6:          LDY.W RAM_SpriteDir,X               ;; 01ECA6 : BC 7C 15    ;
CODE_01ECA9:          LDA.W RAM_SpriteXHi,X               ;; 01ECA9 : BD E0 14    ;
CODE_01ECAC:          ADC.W DATA_01EC5F,Y                 ;; 01ECAC : 79 5F EC    ;
CODE_01ECAF:          PLY                                 ;; 01ECAF : 7A          ;
CODE_01ECB0:          STA.W RAM_SpriteXHi,Y               ;; 01ECB0 : 99 E0 14    ;
CODE_01ECB3:          LDA RAM_SpriteYLo,X                 ;; 01ECB3 : B5 D8       ;
CODE_01ECB5:          CLC                                 ;; 01ECB5 : 18          ;
CODE_01ECB6:          ADC.B #$08                          ;; 01ECB6 : 69 08       ;
CODE_01ECB8:          STA.W RAM_SpriteYLo,Y               ;; 01ECB8 : 99 D8 00    ;
CODE_01ECBB:          LDA.W RAM_SpriteYHi,X               ;; 01ECBB : BD D4 14    ;
CODE_01ECBE:          ADC.B #$00                          ;; 01ECBE : 69 00       ;
CODE_01ECC0:          STA.W RAM_SpriteYHi,Y               ;; 01ECC0 : 99 D4 14    ;
CODE_01ECC3:          PHX                                 ;; 01ECC3 : DA          ;
CODE_01ECC4:          TYX                                 ;; 01ECC4 : BB          ;
CODE_01ECC5:          JSL.L InitSpriteTables              ;; 01ECC5 : 22 D2 F7 07 ;
CODE_01ECC9:          LDY $0F                             ;; 01ECC9 : A4 0F       ;
CODE_01ECCB:          LDA.W DATA_01EC5B,Y                 ;; 01ECCB : B9 5B EC    ;
CODE_01ECCE:          STA RAM_SpriteSpeedX,X              ;; 01ECCE : 95 B6       ;
CODE_01ECD0:          LDA.B #$F0                          ;; 01ECD0 : A9 F0       ;
CODE_01ECD2:          STA RAM_SpriteSpeedY,X              ;; 01ECD2 : 95 AA       ;
CODE_01ECD4:          LDA.B #$10                          ;; 01ECD4 : A9 10       ;
CODE_01ECD6:          STA.W RAM_DisableInter,X            ;; 01ECD6 : 9D 4C 15    ;
CODE_01ECD9:          LDA.W $18DA                         ;; 01ECD9 : AD DA 18    ;
CODE_01ECDC:          STA.W $151C,X                       ;; 01ECDC : 9D 1C 15    ;
CODE_01ECDF:          PLX                                 ;; 01ECDF : FA          ;
Return01ECE0:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01ECE1:          LDA RAM_SpriteState,X               ;; 01ECE1 : B5 C2       ;
CODE_01ECE3:          CMP.B #$01                          ;; 01ECE3 : C9 01       ;
CODE_01ECE5:          BNE CODE_01ECEA                     ;; 01ECE5 : D0 03       ;
CODE_01ECE7:          JMP.W CODE_01ED70                   ;; 01ECE7 : 4C 70 ED    ;
                                                          ;;                      ;
CODE_01ECEA:          JSR.W SubUpdateSprPos               ;; 01ECEA : 20 32 90    ;
CODE_01ECED:          JSR.W IsOnGround                    ;; 01ECED : 20 0E 80    ;
CODE_01ECF0:          BEQ CODE_01ED01                     ;; 01ECF0 : F0 0F       ;
CODE_01ECF2:          JSR.W SetSomeYSpeed??               ;; 01ECF2 : 20 04 9A    ;
CODE_01ECF5:          LDA RAM_SpriteState,X               ;; 01ECF5 : B5 C2       ;
CODE_01ECF7:          CMP.B #$02                          ;; 01ECF7 : C9 02       ;
CODE_01ECF9:          BCS CODE_01ED01                     ;; 01ECF9 : B0 06       ;
CODE_01ECFB:          STZ RAM_SpriteSpeedX,X              ;; 01ECFB : 74 B6       ; Sprite X Speed = 0 
CODE_01ECFD:          LDA.B #$F0                          ;; 01ECFD : A9 F0       ;
CODE_01ECFF:          STA RAM_SpriteSpeedY,X              ;; 01ECFF : 95 AA       ;
CODE_01ED01:          JSR.W UpdateDirection               ;; 01ED01 : 20 15 9A    ;
CODE_01ED04:          JSR.W IsTouchingObjSide             ;; 01ED04 : 20 08 80    ;
CODE_01ED07:          BEQ CODE_01ED0C                     ;; 01ED07 : F0 03       ;
CODE_01ED09:          JSR.W CODE_0190A2                   ;; 01ED09 : 20 A2 90    ;
CODE_01ED0C:          LDA.B #$04                          ;; 01ED0C : A9 04       ;
CODE_01ED0E:          CLC                                 ;; 01ED0E : 18          ;
CODE_01ED0F:          ADC RAM_SpriteXLo,X                 ;; 01ED0F : 75 E4       ;
CODE_01ED11:          STA $04                             ;; 01ED11 : 85 04       ;
CODE_01ED13:          LDA.W RAM_SpriteXHi,X               ;; 01ED13 : BD E0 14    ;
CODE_01ED16:          ADC.B #$00                          ;; 01ED16 : 69 00       ;
CODE_01ED18:          STA $0A                             ;; 01ED18 : 85 0A       ;
CODE_01ED1A:          LDA.B #$13                          ;; 01ED1A : A9 13       ;
CODE_01ED1C:          CLC                                 ;; 01ED1C : 18          ;
CODE_01ED1D:          ADC RAM_SpriteYLo,X                 ;; 01ED1D : 75 D8       ;
CODE_01ED1F:          STA $05                             ;; 01ED1F : 85 05       ;
CODE_01ED21:          LDA.W RAM_SpriteYHi,X               ;; 01ED21 : BD D4 14    ;
CODE_01ED24:          ADC.B #$00                          ;; 01ED24 : 69 00       ;
CODE_01ED26:          STA $0B                             ;; 01ED26 : 85 0B       ;
CODE_01ED28:          LDA.B #$08                          ;; 01ED28 : A9 08       ;
CODE_01ED2A:          STA $07                             ;; 01ED2A : 85 07       ;
CODE_01ED2C:          STA $06                             ;; 01ED2C : 85 06       ;
CODE_01ED2E:          JSL.L GetMarioClipping              ;; 01ED2E : 22 64 B6 03 ;
CODE_01ED32:          JSL.L CheckForContact               ;; 01ED32 : 22 2B B7 03 ;
CODE_01ED36:          BCC CODE_01ED70                     ;; 01ED36 : 90 38       ;
CODE_01ED38:          LDA RAM_IsFlying                    ;; 01ED38 : A5 72       ;
CODE_01ED3A:          BEQ CODE_01ED70                     ;; 01ED3A : F0 34       ;
CODE_01ED3C:          LDA.W $1470                         ;; 01ED3C : AD 70 14    ; \ Branch if carrying an enemy... 
CODE_01ED3F:          ORA.W RAM_OnYoshi                   ;; 01ED3F : 0D 7A 18    ;  | ...or if on Yoshi 
CODE_01ED42:          BNE CODE_01ED70                     ;; 01ED42 : D0 2C       ; / 
CODE_01ED44:          LDA RAM_MarioSpeedY                 ;; 01ED44 : A5 7D       ; \ Branch if upward speed 
CODE_01ED46:          BMI CODE_01ED70                     ;; 01ED46 : 30 28       ; / 
SetOnYoshi:           LDY.B #$01                          ;; ?QPWZ? : A0 01       ;
CODE_01ED4A:          JSR.W CODE_01EDCE                   ;; 01ED4A : 20 CE ED    ;
CODE_01ED4D:          STZ RAM_MarioSpeedX                 ;; 01ED4D : 64 7B       ; \ Mario's speed = 0 
CODE_01ED4F:          STZ RAM_MarioSpeedY                 ;; 01ED4F : 64 7D       ; / 
CODE_01ED51:          LDA.B #$0C                          ;; 01ED51 : A9 0C       ;
CODE_01ED53:          STA.W $18AF                         ;; 01ED53 : 8D AF 18    ;
CODE_01ED56:          LDA.B #$01                          ;; 01ED56 : A9 01       ;
CODE_01ED58:          STA RAM_SpriteState,X               ;; 01ED58 : 95 C2       ;
CODE_01ED5A:          LDA.B #$02                          ;; 01ED5A : A9 02       ; \ Play sound effect 
CODE_01ED5C:          STA.W $1DFA                         ;; 01ED5C : 8D FA 1D    ; / 
CODE_01ED5F:          LDA.B #$1F                          ;; 01ED5F : A9 1F       ; \ Play sound effect 
CODE_01ED61:          STA.W $1DFC                         ;; 01ED61 : 8D FC 1D    ; / 
CODE_01ED64:          JSL.L DisabledAddSmokeRt            ;; 01ED64 : 22 B0 8B 02 ;
CODE_01ED68:          LDA.B #$20                          ;; 01ED68 : A9 20       ;
CODE_01ED6A:          STA.W $163E,X                       ;; 01ED6A : 9D 3E 16    ;
CODE_01ED6D:          INC.W $1697                         ;; 01ED6D : EE 97 16    ;
CODE_01ED70:          LDA RAM_SpriteState,X               ;; 01ED70 : B5 C2       ;
CODE_01ED72:          CMP.B #$01                          ;; 01ED72 : C9 01       ;
CODE_01ED74:          BNE Return01EDCB                    ;; 01ED74 : D0 55       ;
CODE_01ED76:          JSR.W CODE_01F622                   ;; 01ED76 : 20 22 F6    ;
CODE_01ED79:          LDA RAM_ControllerA                 ;; 01ED79 : A5 15       ;
CODE_01ED7B:          AND.B #$03                          ;; 01ED7B : 29 03       ;
CODE_01ED7D:          BEQ CODE_01ED95                     ;; 01ED7D : F0 16       ;
CODE_01ED7F:          DEC A                               ;; 01ED7F : 3A          ;
CODE_01ED80:          CMP.W RAM_SpriteDir,X               ;; 01ED80 : DD 7C 15    ;
CODE_01ED83:          BEQ CODE_01ED95                     ;; 01ED83 : F0 10       ;
CODE_01ED85:          LDA.W $15AC,X                       ;; 01ED85 : BD AC 15    ;
CODE_01ED88:          ORA.W $151C,X                       ;; 01ED88 : 1D 1C 15    ;
CODE_01ED8B:          ORA.W $18DC                         ;; 01ED8B : 0D DC 18    ;
CODE_01ED8E:          BNE CODE_01ED95                     ;; 01ED8E : D0 05       ;
CODE_01ED90:          LDA.B #$10                          ;; 01ED90 : A9 10       ; \ Set turning timer 
CODE_01ED92:          STA.W $15AC,X                       ;; 01ED92 : 9D AC 15    ; / 
CODE_01ED95:          LDA.W $13F3                         ;; 01ED95 : AD F3 13    ;
CODE_01ED98:          BNE CODE_01ED9E                     ;; 01ED98 : D0 04       ;
CODE_01ED9A:          BIT $18                             ;; 01ED9A : 24 18       ;
CODE_01ED9C:          BPL Return01EDCB                    ;; 01ED9C : 10 2D       ;
CODE_01ED9E:          LDA.B #$02                          ;; 01ED9E : A9 02       ;
CODE_01EDA0:          STA.W $1FE2,X                       ;; 01EDA0 : 9D E2 1F    ;
CODE_01EDA3:          STZ RAM_SpriteState,X               ;; 01EDA3 : 74 C2       ;
CODE_01EDA5:          LDA.B #$03                          ;; 01EDA5 : A9 03       ; \ Play sound effect 
CODE_01EDA7:          STA.W $1DFA                         ;; 01EDA7 : 8D FA 1D    ; / 
CODE_01EDAA:          STZ.W RAM_OWHasYoshi                ;; 01EDAA : 9C C1 0D    ;
CODE_01EDAD:          LDA RAM_MarioSpeedX                 ;; 01EDAD : A5 7B       ;
CODE_01EDAF:          STA RAM_SpriteSpeedX,X              ;; 01EDAF : 95 B6       ;
CODE_01EDB1:          LDA.B #$A0                          ;; 01EDB1 : A9 A0       ;
CODE_01EDB3:          LDY RAM_IsFlying                    ;; 01EDB3 : A4 72       ;
CODE_01EDB5:          BNE CODE_01EDC1                     ;; 01EDB5 : D0 0A       ;
CODE_01EDB7:          JSR.W SubHorizPos                   ;; 01EDB7 : 20 30 AD    ;
CODE_01EDBA:          LDA.W DATA_01EBC0,Y                 ;; 01EDBA : B9 C0 EB    ;
CODE_01EDBD:          STA RAM_MarioSpeedX                 ;; 01EDBD : 85 7B       ;
CODE_01EDBF:          LDA.B #$C0                          ;; 01EDBF : A9 C0       ;
CODE_01EDC1:          STA RAM_MarioSpeedY                 ;; 01EDC1 : 85 7D       ;
CODE_01EDC3:          STZ.W RAM_OnYoshi                   ;; 01EDC3 : 9C 7A 18    ;
CODE_01EDC6:          STZ RAM_SpriteSpeedY,X              ;; 01EDC6 : 74 AA       ; Sprite Y Speed = 0 
CODE_01EDC8:          JSR.W CODE_01EDCC                   ;; 01EDC8 : 20 CC ED    ;
Return01EDCB:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01EDCC:          LDY.B #$00                          ;; 01EDCC : A0 00       ;
CODE_01EDCE:          LDA RAM_SpriteYLo,X                 ;; 01EDCE : B5 D8       ;
CODE_01EDD0:          SEC                                 ;; 01EDD0 : 38          ;
CODE_01EDD1:          SBC.W DATA_01EDE2,Y                 ;; 01EDD1 : F9 E2 ED    ;
CODE_01EDD4:          STA RAM_MarioYPos                   ;; 01EDD4 : 85 96       ;
CODE_01EDD6:          STA $D3                             ;; 01EDD6 : 85 D3       ;
CODE_01EDD8:          LDA.W RAM_SpriteYHi,X               ;; 01EDD8 : BD D4 14    ;
CODE_01EDDB:          SBC.B #$00                          ;; 01EDDB : E9 00       ;
CODE_01EDDD:          STA RAM_MarioYPosHi                 ;; 01EDDD : 85 97       ;
CODE_01EDDF:          STA $D4                             ;; 01EDDF : 85 D4       ;
Return01EDE1:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
DATA_01EDE2:          .db $04,$10                         ;; 01EDE2               ;
                                                          ;;                      ;
DATA_01EDE4:          .db $06,$05,$05,$05,$0A,$05,$05,$0A ;; 01EDE4               ;
                      .db $0A,$0B                         ;; ?QPWZ?               ;
                                                          ;;                      ;
YoshiWalkFrames:      .db $02,$01,$00                     ;; ?QPWZ?               ;
                                                          ;;                      ;
YoshiPositionX:       .db $02,$FE                         ;; ?QPWZ?               ;
                                                          ;;                      ;
DATA_01EDF3:          .db $00,$FF                         ;; 01EDF3               ;
                                                          ;;                      ;
DATA_01EDF5:          .db $03,$02,$01,$00                 ;; 01EDF5               ;
                                                          ;;                      ;
YoshiHeadTiles:       .db $00,$01,$02,$03,$02,$10,$04,$05 ;; ?QPWZ?               ;
                      .db $00,$00,$FF,$FF,$00             ;; ?QPWZ?               ;
                                                          ;;                      ;
YoshiBodyTiles:       .db $06,$07,$08,$09,$0A,$0B,$06,$0C ;; ?QPWZ?               ;
                      .db $0A,$0D,$0E,$0F,$0C             ;; ?QPWZ?               ;
                                                          ;;                      ;
YoshiHeadDispX:       .db $0A,$09,$0A,$06,$0A,$0A,$0A,$10 ;; ?QPWZ?               ;
                      .db $0A,$0A,$00,$00,$0A,$F6,$F7,$F6 ;; ?QPWZ?               ;
                      .db $FA,$F6,$F6,$F6,$F0,$F6,$F6,$00 ;; ?QPWZ?               ;
                      .db $00,$F6                         ;; ?QPWZ?               ;
                                                          ;;                      ;
DATA_01EE2D:          .db $00,$00,$00,$00,$00,$00,$00,$00 ;; 01EE2D               ;
                      .db $00,$00,$00,$00,$00,$FF,$FF,$FF ;; ?QPWZ?               ;
                      .db $FF,$FF,$FF,$FF,$FF,$FF,$FF,$00 ;; ?QPWZ?               ;
                      .db $00,$FF                         ;; ?QPWZ?               ;
                                                          ;;                      ;
YoshiPositionY:       .db $00,$01,$01,$00,$04,$00,$00,$04 ;; ?QPWZ?               ;
                      .db $03,$03,$00,$00,$04             ;; ?QPWZ?               ;
                                                          ;;                      ;
YoshiHeadDispY:       .db $00,$00,$01,$00,$00,$00,$00,$08 ;; ?QPWZ?               ;
                      .db $00,$00,$00,$00,$05             ;; ?QPWZ?               ;
                                                          ;;                      ;
HandleOffYoshi:       LDA.W $1602,X                       ;; ?QPWZ? : BD 02 16    ;
CODE_01EE64:          PHA                                 ;; 01EE64 : 48          ;
CODE_01EE65:          LDY.W $15AC,X                       ;; 01EE65 : BC AC 15    ;
CODE_01EE68:          CPY.B #$08                          ;; 01EE68 : C0 08       ;
CODE_01EE6A:          BNE CODE_01EE7D                     ;; 01EE6A : D0 11       ;
CODE_01EE6C:          LDA.W RAM_YoshiInPipe               ;; 01EE6C : AD 19 14    ;
CODE_01EE6F:          ORA RAM_SpritesLocked               ;; 01EE6F : 05 9D       ;
CODE_01EE71:          BNE CODE_01EE7D                     ;; 01EE71 : D0 0A       ;
CODE_01EE73:          LDA.W RAM_SpriteDir,X               ;; 01EE73 : BD 7C 15    ;
CODE_01EE76:          STA RAM_MarioDirection              ;; 01EE76 : 85 76       ;
CODE_01EE78:          EOR.B #$01                          ;; 01EE78 : 49 01       ;
CODE_01EE7A:          STA.W RAM_SpriteDir,X               ;; 01EE7A : 9D 7C 15    ;
CODE_01EE7D:          LDA.W RAM_YoshiInPipe               ;; 01EE7D : AD 19 14    ;
CODE_01EE80:          BMI CODE_01EE8A                     ;; 01EE80 : 30 08       ;
CODE_01EE82:          CMP.B #$02                          ;; 01EE82 : C9 02       ;
CODE_01EE84:          BNE CODE_01EE8A                     ;; 01EE84 : D0 04       ;
CODE_01EE86:          INC A                               ;; 01EE86 : 1A          ;
CODE_01EE87:          STA.W $1602,X                       ;; 01EE87 : 9D 02 16    ;
CODE_01EE8A:          JSR.W CODE_01EF18                   ;; 01EE8A : 20 18 EF    ;
CODE_01EE8D:          LDY $0E                             ;; 01EE8D : A4 0E       ;
CODE_01EE8F:          LDA.W OAM_Tile,Y                    ;; 01EE8F : B9 02 03    ;
CODE_01EE92:          STA $00                             ;; 01EE92 : 85 00       ;
CODE_01EE94:          STZ $01                             ;; 01EE94 : 64 01       ;
CODE_01EE96:          LDA.B #$06                          ;; 01EE96 : A9 06       ;
CODE_01EE98:          STA.W OAM_Tile,Y                    ;; 01EE98 : 99 02 03    ;
CODE_01EE9B:          LDY.W RAM_SprOAMIndex,X             ;; 01EE9B : BC EA 15    ; Y = Index into sprite OAM 
CODE_01EE9E:          LDA.W OAM_Tile,Y                    ;; 01EE9E : B9 02 03    ;
CODE_01EEA1:          STA $02                             ;; 01EEA1 : 85 02       ;
CODE_01EEA3:          STZ $03                             ;; 01EEA3 : 64 03       ;
CODE_01EEA5:          LDA.B #$08                          ;; 01EEA5 : A9 08       ;
CODE_01EEA7:          STA.W OAM_Tile,Y                    ;; 01EEA7 : 99 02 03    ;
CODE_01EEAA:          REP #$20                            ;; 01EEAA : C2 20       ; Accum (16 bit) 
CODE_01EEAC:          LDA $00                             ;; 01EEAC : A5 00       ;
CODE_01EEAE:          ASL                                 ;; 01EEAE : 0A          ;
CODE_01EEAF:          ASL                                 ;; 01EEAF : 0A          ;
CODE_01EEB0:          ASL                                 ;; 01EEB0 : 0A          ;
CODE_01EEB1:          ASL                                 ;; 01EEB1 : 0A          ;
CODE_01EEB2:          ASL                                 ;; 01EEB2 : 0A          ;
CODE_01EEB3:          CLC                                 ;; 01EEB3 : 18          ;
CODE_01EEB4:          ADC.W #$8500                        ;; 01EEB4 : 69 00 85    ;
CODE_01EEB7:          STA.W $0D8B                         ;; 01EEB7 : 8D 8B 0D    ;
CODE_01EEBA:          CLC                                 ;; 01EEBA : 18          ;
CODE_01EEBB:          ADC.W #$0200                        ;; 01EEBB : 69 00 02    ;
CODE_01EEBE:          STA.W $0D95                         ;; 01EEBE : 8D 95 0D    ;
CODE_01EEC1:          LDA $02                             ;; 01EEC1 : A5 02       ;
CODE_01EEC3:          ASL                                 ;; 01EEC3 : 0A          ;
CODE_01EEC4:          ASL                                 ;; 01EEC4 : 0A          ;
CODE_01EEC5:          ASL                                 ;; 01EEC5 : 0A          ;
CODE_01EEC6:          ASL                                 ;; 01EEC6 : 0A          ;
CODE_01EEC7:          ASL                                 ;; 01EEC7 : 0A          ;
CODE_01EEC8:          CLC                                 ;; 01EEC8 : 18          ;
CODE_01EEC9:          ADC.W #$8500                        ;; 01EEC9 : 69 00 85    ;
CODE_01EECC:          STA.W $0D8D                         ;; 01EECC : 8D 8D 0D    ;
CODE_01EECF:          CLC                                 ;; 01EECF : 18          ;
CODE_01EED0:          ADC.W #$0200                        ;; 01EED0 : 69 00 02    ;
CODE_01EED3:          STA.W $0D97                         ;; 01EED3 : 8D 97 0D    ;
CODE_01EED6:          SEP #$20                            ;; 01EED6 : E2 20       ; Accum (8 bit) 
CODE_01EED8:          PLA                                 ;; 01EED8 : 68          ;
CODE_01EED9:          STA.W $1602,X                       ;; 01EED9 : 9D 02 16    ;
CODE_01EEDC:          JSR.W CODE_01F0A2                   ;; 01EEDC : 20 A2 F0    ;
CODE_01EEDF:          LDA.W RAM_YoshiHasWingsB            ;; 01EEDF : AD 10 14    ; \ Return if Yoshi doesn't have wings 
CODE_01EEE2:          CMP.B #$02                          ;; 01EEE2 : C9 02       ;  | 
CODE_01EEE4:          BCC Return01EF17                    ;; 01EEE4 : 90 31       ; / 
CODE_01EEE6:          LDA.W RAM_OnYoshi                   ;; 01EEE6 : AD 7A 18    ;
CODE_01EEE9:          BEQ CODE_01EF13                     ;; 01EEE9 : F0 28       ;
CODE_01EEEB:          LDA RAM_IsFlying                    ;; 01EEEB : A5 72       ;
CODE_01EEED:          BNE CODE_01EF00                     ;; 01EEED : D0 11       ;
CODE_01EEEF:          LDA RAM_MarioSpeedX                 ;; 01EEEF : A5 7B       ;
CODE_01EEF1:          BPL CODE_01EEF6                     ;; 01EEF1 : 10 03       ;
CODE_01EEF3:          EOR.B #$FF                          ;; 01EEF3 : 49 FF       ;
CODE_01EEF5:          INC A                               ;; 01EEF5 : 1A          ;
CODE_01EEF6:          CMP.B #$28                          ;; 01EEF6 : C9 28       ;
CODE_01EEF8:          LDA.B #$01                          ;; 01EEF8 : A9 01       ;
CODE_01EEFA:          BCS CODE_01EF13                     ;; 01EEFA : B0 17       ;
CODE_01EEFC:          LDA.B #$00                          ;; 01EEFC : A9 00       ;
CODE_01EEFE:          BRA CODE_01EF13                     ;; 01EEFE : 80 13       ;
                                                          ;;                      ;
CODE_01EF00:          LDA RAM_FrameCounterB               ;; 01EF00 : A5 14       ;
CODE_01EF02:          LSR                                 ;; 01EF02 : 4A          ;
CODE_01EF03:          LSR                                 ;; 01EF03 : 4A          ;
CODE_01EF04:          LDY RAM_MarioSpeedY                 ;; 01EF04 : A4 7D       ;
CODE_01EF06:          BMI CODE_01EF0A                     ;; 01EF06 : 30 02       ;
CODE_01EF08:          LSR                                 ;; 01EF08 : 4A          ;
CODE_01EF09:          LSR                                 ;; 01EF09 : 4A          ;
CODE_01EF0A:          AND.B #$01                          ;; 01EF0A : 29 01       ;
CODE_01EF0C:          BNE CODE_01EF13                     ;; 01EF0C : D0 05       ;
CODE_01EF0E:          LDY.B #$21                          ;; 01EF0E : A0 21       ; \ Play sound effect 
CODE_01EF10:          STY.W $1DFC                         ;; 01EF10 : 8C FC 1D    ; / 
CODE_01EF13:          JSL.L CODE_02BB23                   ;; 01EF13 : 22 23 BB 02 ;
Return01EF17:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01EF18:          LDY.W $1602,X                       ;; 01EF18 : BC 02 16    ;
CODE_01EF1B:          STY.W $185E                         ;; 01EF1B : 8C 5E 18    ;
CODE_01EF1E:          LDA.W YoshiHeadTiles,Y              ;; 01EF1E : B9 F9 ED    ;
CODE_01EF21:          STA.W $1602,X                       ;; 01EF21 : 9D 02 16    ;
CODE_01EF24:          STA $0F                             ;; 01EF24 : 85 0F       ;
CODE_01EF26:          LDA RAM_SpriteYLo,X                 ;; 01EF26 : B5 D8       ;
CODE_01EF28:          PHA                                 ;; 01EF28 : 48          ;
CODE_01EF29:          CLC                                 ;; 01EF29 : 18          ;
CODE_01EF2A:          ADC.W YoshiPositionY,Y              ;; 01EF2A : 79 47 EE    ;
CODE_01EF2D:          STA RAM_SpriteYLo,X                 ;; 01EF2D : 95 D8       ;
CODE_01EF2F:          LDA.W RAM_SpriteYHi,X               ;; 01EF2F : BD D4 14    ;
CODE_01EF32:          PHA                                 ;; 01EF32 : 48          ;
CODE_01EF33:          ADC.B #$00                          ;; 01EF33 : 69 00       ;
CODE_01EF35:          STA.W RAM_SpriteYHi,X               ;; 01EF35 : 9D D4 14    ;
CODE_01EF38:          TYA                                 ;; 01EF38 : 98          ;
CODE_01EF39:          LDY.W RAM_SpriteDir,X               ;; 01EF39 : BC 7C 15    ;
CODE_01EF3C:          BEQ CODE_01EF41                     ;; 01EF3C : F0 03       ;
CODE_01EF3E:          CLC                                 ;; 01EF3E : 18          ;
CODE_01EF3F:          ADC.B #$0D                          ;; 01EF3F : 69 0D       ;
CODE_01EF41:          TAY                                 ;; 01EF41 : A8          ;
CODE_01EF42:          LDA RAM_SpriteXLo,X                 ;; 01EF42 : B5 E4       ;
CODE_01EF44:          PHA                                 ;; 01EF44 : 48          ;
CODE_01EF45:          CLC                                 ;; 01EF45 : 18          ;
CODE_01EF46:          ADC.W YoshiHeadDispX,Y              ;; 01EF46 : 79 13 EE    ;
CODE_01EF49:          STA RAM_SpriteXLo,X                 ;; 01EF49 : 95 E4       ;
CODE_01EF4B:          LDA.W RAM_SpriteXHi,X               ;; 01EF4B : BD E0 14    ;
CODE_01EF4E:          PHA                                 ;; 01EF4E : 48          ;
CODE_01EF4F:          ADC.W DATA_01EE2D,Y                 ;; 01EF4F : 79 2D EE    ;
CODE_01EF52:          STA.W RAM_SpriteXHi,X               ;; 01EF52 : 9D E0 14    ;
CODE_01EF55:          LDA.W RAM_SprOAMIndex,X             ;; 01EF55 : BD EA 15    ;
CODE_01EF58:          PHA                                 ;; 01EF58 : 48          ;
CODE_01EF59:          LDA.W $15AC,X                       ;; 01EF59 : BD AC 15    ;
CODE_01EF5C:          ORA.W RAM_YoshiInPipe               ;; 01EF5C : 0D 19 14    ;
CODE_01EF5F:          BEQ CODE_01EF66                     ;; 01EF5F : F0 05       ;
CODE_01EF61:          LDA.B #$04                          ;; 01EF61 : A9 04       ;
CODE_01EF63:          STA.W RAM_SprOAMIndex,X             ;; 01EF63 : 9D EA 15    ;
CODE_01EF66:          LDA.W RAM_SprOAMIndex,X             ;; 01EF66 : BD EA 15    ;
CODE_01EF69:          STA $0E                             ;; 01EF69 : 85 0E       ;
CODE_01EF6B:          JSR.W SubSprGfx2Entry1              ;; 01EF6B : 20 0D 9F    ;
CODE_01EF6E:          PHX                                 ;; 01EF6E : DA          ;
CODE_01EF6F:          LDY.W RAM_SprOAMIndex,X             ;; 01EF6F : BC EA 15    ; Y = Index into sprite OAM 
CODE_01EF72:          LDX.W $185E                         ;; 01EF72 : AE 5E 18    ;
CODE_01EF75:          LDA.W OAM_DispY,Y                   ;; 01EF75 : B9 01 03    ;
CODE_01EF78:          CLC                                 ;; 01EF78 : 18          ;
CODE_01EF79:          ADC.W YoshiHeadDispY,X              ;; 01EF79 : 7D 54 EE    ;
CODE_01EF7C:          STA.W OAM_DispY,Y                   ;; 01EF7C : 99 01 03    ;
CODE_01EF7F:          PLX                                 ;; 01EF7F : FA          ;
CODE_01EF80:          PLA                                 ;; 01EF80 : 68          ;
CODE_01EF81:          CLC                                 ;; 01EF81 : 18          ;
CODE_01EF82:          ADC.B #$04                          ;; 01EF82 : 69 04       ;
CODE_01EF84:          STA.W RAM_SprOAMIndex,X             ;; 01EF84 : 9D EA 15    ;
CODE_01EF87:          PLA                                 ;; 01EF87 : 68          ;
CODE_01EF88:          STA.W RAM_SpriteXHi,X               ;; 01EF88 : 9D E0 14    ;
CODE_01EF8B:          PLA                                 ;; 01EF8B : 68          ;
CODE_01EF8C:          STA RAM_SpriteXLo,X                 ;; 01EF8C : 95 E4       ;
CODE_01EF8E:          LDY.W $185E                         ;; 01EF8E : AC 5E 18    ;
CODE_01EF91:          LDA.W YoshiBodyTiles,Y              ;; 01EF91 : B9 06 EE    ;
CODE_01EF94:          STA.W $1602,X                       ;; 01EF94 : 9D 02 16    ;
CODE_01EF97:          LDA RAM_SpriteYLo,X                 ;; 01EF97 : B5 D8       ;
CODE_01EF99:          CLC                                 ;; 01EF99 : 18          ;
CODE_01EF9A:          ADC.B #$10                          ;; 01EF9A : 69 10       ;
CODE_01EF9C:          STA RAM_SpriteYLo,X                 ;; 01EF9C : 95 D8       ;
CODE_01EF9E:          BCC CODE_01EFA3                     ;; 01EF9E : 90 03       ;
CODE_01EFA0:          INC.W RAM_SpriteYHi,X               ;; 01EFA0 : FE D4 14    ;
CODE_01EFA3:          JSR.W SubSprGfx2Entry1              ;; 01EFA3 : 20 0D 9F    ;
CODE_01EFA6:          PLA                                 ;; 01EFA6 : 68          ;
CODE_01EFA7:          STA.W RAM_SpriteYHi,X               ;; 01EFA7 : 9D D4 14    ;
CODE_01EFAA:          PLA                                 ;; 01EFAA : 68          ;
CODE_01EFAB:          STA RAM_SpriteYLo,X                 ;; 01EFAB : 95 D8       ;
CODE_01EFAD:          LDY $0E                             ;; 01EFAD : A4 0E       ;
CODE_01EFAF:          LDA $0F                             ;; 01EFAF : A5 0F       ;
CODE_01EFB1:          BPL CODE_01EFB8                     ;; 01EFB1 : 10 05       ;
CODE_01EFB3:          LDA.B #$F0                          ;; 01EFB3 : A9 F0       ;
CODE_01EFB5:          STA.W OAM_DispY,Y                   ;; 01EFB5 : 99 01 03    ;
CODE_01EFB8:          LDA RAM_SpriteState,X               ;; 01EFB8 : B5 C2       ;
CODE_01EFBA:          BNE CODE_01EFC6                     ;; 01EFBA : D0 0A       ;
CODE_01EFBC:          LDA RAM_FrameCounterB               ;; 01EFBC : A5 14       ;
CODE_01EFBE:          AND.B #$30                          ;; 01EFBE : 29 30       ;
CODE_01EFC0:          BNE CODE_01EFDB                     ;; 01EFC0 : D0 19       ;
CODE_01EFC2:          LDA.B #$2A                          ;; 01EFC2 : A9 2A       ;
CODE_01EFC4:          BRA CODE_01EFFA                     ;; 01EFC4 : 80 34       ;
                                                          ;;                      ;
CODE_01EFC6:          CMP.B #$02                          ;; 01EFC6 : C9 02       ;
CODE_01EFC8:          BNE CODE_01EFDB                     ;; 01EFC8 : D0 11       ;
CODE_01EFCA:          LDA.W $151C,X                       ;; 01EFCA : BD 1C 15    ;
CODE_01EFCD:          ORA.W $13C6                         ;; 01EFCD : 0D C6 13    ;
CODE_01EFD0:          BNE CODE_01EFDB                     ;; 01EFD0 : D0 09       ;
CODE_01EFD2:          LDA RAM_FrameCounterB               ;; 01EFD2 : A5 14       ;
CODE_01EFD4:          AND.B #$10                          ;; 01EFD4 : 29 10       ;
CODE_01EFD6:          BEQ CODE_01EFFD                     ;; 01EFD6 : F0 25       ;
CODE_01EFD8:          BRA CODE_01EFF8                     ;; 01EFD8 : 80 1E       ;
                                                          ;;                      ;
Return01EFDA:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01EFDB:          LDA.W $1594,X                       ;; 01EFDB : BD 94 15    ;
CODE_01EFDE:          CMP.B #$03                          ;; 01EFDE : C9 03       ;
CODE_01EFE0:          BEQ CODE_01EFEE                     ;; 01EFE0 : F0 0C       ;
CODE_01EFE2:          LDA.W $151C,X                       ;; 01EFE2 : BD 1C 15    ;
CODE_01EFE5:          BEQ CODE_01EFF3                     ;; 01EFE5 : F0 0C       ;
CODE_01EFE7:          LDA.W OAM_Tile,Y                    ;; 01EFE7 : B9 02 03    ;
CODE_01EFEA:          CMP.B #$24                          ;; 01EFEA : C9 24       ;
CODE_01EFEC:          BEQ CODE_01EFF3                     ;; 01EFEC : F0 05       ;
CODE_01EFEE:          LDA.B #$2A                          ;; 01EFEE : A9 2A       ;
CODE_01EFF0:          STA.W OAM_Tile,Y                    ;; 01EFF0 : 99 02 03    ;
CODE_01EFF3:          LDA.W $18AE                         ;; 01EFF3 : AD AE 18    ;
CODE_01EFF6:          BEQ CODE_01EFFD                     ;; 01EFF6 : F0 05       ;
CODE_01EFF8:          LDA.B #$0C                          ;; 01EFF8 : A9 0C       ;
CODE_01EFFA:          STA.W OAM_Tile,Y                    ;; 01EFFA : 99 02 03    ;
CODE_01EFFD:          LDA.W $1564,X                       ;; 01EFFD : BD 64 15    ;
CODE_01F000:          LDY.W $18AC                         ;; 01F000 : AC AC 18    ;
CODE_01F003:          BEQ CODE_01F00F                     ;; 01F003 : F0 0A       ;
CODE_01F005:          CPY.B #$26                          ;; 01F005 : C0 26       ;
CODE_01F007:          BCS CODE_01F038                     ;; 01F007 : B0 2F       ;
CODE_01F009:          LDA RAM_FrameCounterB               ;; 01F009 : A5 14       ;
CODE_01F00B:          AND.B #$18                          ;; 01F00B : 29 18       ;
CODE_01F00D:          BNE CODE_01F038                     ;; 01F00D : D0 29       ;
CODE_01F00F:          LDA.W $1564,X                       ;; 01F00F : BD 64 15    ;
CODE_01F012:          CMP.B #$00                          ;; 01F012 : C9 00       ;
CODE_01F014:          BEQ Return01EFDA                    ;; 01F014 : F0 C4       ;
CODE_01F016:          LDY.B #$00                          ;; 01F016 : A0 00       ;
CODE_01F018:          CMP.B #$0F                          ;; 01F018 : C9 0F       ;
CODE_01F01A:          BCC CODE_01F03A                     ;; 01F01A : 90 1E       ;
CODE_01F01C:          CMP.B #$1C                          ;; 01F01C : C9 1C       ;
CODE_01F01E:          BCC CODE_01F038                     ;; 01F01E : 90 18       ;
CODE_01F020:          BNE CODE_01F02F                     ;; 01F020 : D0 0D       ;
CODE_01F022:          LDA $0E                             ;; 01F022 : A5 0E       ;
CODE_01F024:          PHA                                 ;; 01F024 : 48          ;
CODE_01F025:          JSL.L SetTreeTile                   ;; 01F025 : 22 F3 D1 02 ;
CODE_01F029:          JSR.W CODE_01F0D3                   ;; 01F029 : 20 D3 F0    ;
CODE_01F02C:          PLA                                 ;; 01F02C : 68          ;
CODE_01F02D:          STA $0E                             ;; 01F02D : 85 0E       ;
CODE_01F02F:          INC.W $13FB                         ;; 01F02F : EE FB 13    ;
CODE_01F032:          LDA.B #$00                          ;; 01F032 : A9 00       ;
CODE_01F034:          LDY.B #$2A                          ;; 01F034 : A0 2A       ;
CODE_01F036:          BRA CODE_01F03A                     ;; 01F036 : 80 02       ;
                                                          ;;                      ;
CODE_01F038:          LDY.B #$04                          ;; 01F038 : A0 04       ;
CODE_01F03A:          PHA                                 ;; 01F03A : 48          ;
CODE_01F03B:          TYA                                 ;; 01F03B : 98          ;
CODE_01F03C:          LDY $0E                             ;; 01F03C : A4 0E       ;
CODE_01F03E:          STA.W OAM_Tile,Y                    ;; 01F03E : 99 02 03    ;
CODE_01F041:          PLA                                 ;; 01F041 : 68          ;
CODE_01F042:          CMP.B #$0F                          ;; 01F042 : C9 0F       ;
CODE_01F044:          BCS Return01F0A0                    ;; 01F044 : B0 5A       ;
CODE_01F046:          CMP.B #$05                          ;; 01F046 : C9 05       ;
CODE_01F048:          BCC Return01F0A0                    ;; 01F048 : 90 56       ;
CODE_01F04A:          SBC.B #$05                          ;; 01F04A : E9 05       ;
CODE_01F04C:          LDY.W RAM_SpriteDir,X               ;; 01F04C : BC 7C 15    ;
CODE_01F04F:          BEQ CODE_01F054                     ;; 01F04F : F0 03       ;
CODE_01F051:          CLC                                 ;; 01F051 : 18          ;
CODE_01F052:          ADC.B #$0A                          ;; 01F052 : 69 0A       ;
CODE_01F054:          LDY.W $1602,X                       ;; 01F054 : BC 02 16    ;
CODE_01F057:          CPY.B #$0A                          ;; 01F057 : C0 0A       ;
CODE_01F059:          BNE CODE_01F05E                     ;; 01F059 : D0 03       ;
CODE_01F05B:          CLC                                 ;; 01F05B : 18          ;
CODE_01F05C:          ADC.B #$14                          ;; 01F05C : 69 14       ;
CODE_01F05E:          STA $02                             ;; 01F05E : 85 02       ;
CODE_01F060:          JSR.W IsSprOffScreen                ;; 01F060 : 20 CB 80    ;
CODE_01F063:          BNE Return01F0A0                    ;; 01F063 : D0 3B       ;
CODE_01F065:          LDA RAM_SpriteXLo,X                 ;; 01F065 : B5 E4       ;
CODE_01F067:          SEC                                 ;; 01F067 : 38          ;
CODE_01F068:          SBC RAM_ScreenBndryXLo              ;; 01F068 : E5 1A       ;
CODE_01F06A:          STA $00                             ;; 01F06A : 85 00       ;
CODE_01F06C:          LDA RAM_SpriteYLo,X                 ;; 01F06C : B5 D8       ;
CODE_01F06E:          SEC                                 ;; 01F06E : 38          ;
CODE_01F06F:          SBC RAM_ScreenBndryYLo              ;; 01F06F : E5 1C       ;
CODE_01F071:          STA $01                             ;; 01F071 : 85 01       ;
CODE_01F073:          PHX                                 ;; 01F073 : DA          ;
CODE_01F074:          LDX $02                             ;; 01F074 : A6 02       ;
CODE_01F076:          LDA $00                             ;; 01F076 : A5 00       ;
CODE_01F078:          CLC                                 ;; 01F078 : 18          ;
CODE_01F079:          ADC.L DATA_03C176,X                 ;; 01F079 : 7F 76 C1 03 ;
CODE_01F07D:          STA.W OAM_DispX                     ;; 01F07D : 8D 00 03    ;
CODE_01F080:          LDA $01                             ;; 01F080 : A5 01       ;
CODE_01F082:          CLC                                 ;; 01F082 : 18          ;
CODE_01F083:          ADC.L DATA_03C19E,X                 ;; 01F083 : 7F 9E C1 03 ;
CODE_01F087:          STA.W OAM_DispY                     ;; 01F087 : 8D 01 03    ;
CODE_01F08A:          LDA.B #$3F                          ;; 01F08A : A9 3F       ;
CODE_01F08C:          STA.W OAM_Tile                      ;; 01F08C : 8D 02 03    ;
CODE_01F08F:          PLX                                 ;; 01F08F : FA          ;
CODE_01F090:          LDY.W RAM_SprOAMIndex,X             ;; 01F090 : BC EA 15    ; Y = Index into sprite OAM 
CODE_01F093:          LDA.W OAM_Prop,Y                    ;; 01F093 : B9 03 03    ;
CODE_01F096:          ORA.B #$01                          ;; 01F096 : 09 01       ;
CODE_01F098:          STA.W OAM_Prop                      ;; 01F098 : 8D 03 03    ;
CODE_01F09B:          LDA.B #$00                          ;; 01F09B : A9 00       ;
CODE_01F09D:          STA.W OAM_TileSize                  ;; 01F09D : 8D 60 04    ;
Return01F0A0:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
Return01F0A1:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01F0A2:          LDA RAM_SpriteState,X               ;; 01F0A2 : B5 C2       ;
CODE_01F0A4:          CMP.B #$01                          ;; 01F0A4 : C9 01       ;
CODE_01F0A6:          BNE CODE_01F0AC                     ;; 01F0A6 : D0 04       ;
CODE_01F0A8:          JSL.L CODE_02D0D4                   ;; 01F0A8 : 22 D4 D0 02 ;
CODE_01F0AC:          LDA.W RAM_YoshiHasWingsB            ;; 01F0AC : AD 10 14    ; \ Branch if $1410 == #$01 
CODE_01F0AF:          CMP.B #$01                          ;; 01F0AF : C9 01       ;  | This never happens 
CODE_01F0B1:          BEQ Return01F0A1                    ;; 01F0B1 : F0 EE       ; / (fireball on Yoshi ability) 
CODE_01F0B3:          LDA.W $14A3                         ;; 01F0B3 : AD A3 14    ;
CODE_01F0B6:          CMP.B #$10                          ;; 01F0B6 : C9 10       ;
CODE_01F0B8:          BNE CODE_01F0C4                     ;; 01F0B8 : D0 0A       ;
CODE_01F0BA:          LDA.W $18AE                         ;; 01F0BA : AD AE 18    ;
CODE_01F0BD:          BNE CODE_01F0C4                     ;; 01F0BD : D0 05       ;
CODE_01F0BF:          LDA.B #$06                          ;; 01F0BF : A9 06       ;
CODE_01F0C1:          STA.W $18AE                         ;; 01F0C1 : 8D AE 18    ;
CODE_01F0C4:          LDA.W $1594,X                       ;; 01F0C4 : BD 94 15    ;
CODE_01F0C7:          JSL.L ExecutePtr                    ;; 01F0C7 : 22 DF 86 00 ;
                                                          ;;                      ;
Ptrs01F0CB:           .dw CODE_01F14B                     ;; ?QPWZ? : 4B F1       ;
                      .dw CODE_01F314                     ;; ?QPWZ? : 14 F3       ;
                      .dw CODE_01F332                     ;; ?QPWZ? : 32 F3       ;
                      .dw CODE_01F12E                     ;; ?QPWZ? : 2E F1       ;
                                                          ;;                      ;
CODE_01F0D3:          LDA.B #$06                          ;; 01F0D3 : A9 06       ; \ Play sound effect 
CODE_01F0D5:          STA.W $1DF9                         ;; 01F0D5 : 8D F9 1D    ; / 
CODE_01F0D8:          JSL.L CODE_05B34A                   ;; 01F0D8 : 22 4A B3 05 ;
CODE_01F0DC:          LDA.W $18D6                         ;; 01F0DC : AD D6 18    ;
CODE_01F0DF:          BEQ Return01F12D                    ;; 01F0DF : F0 4C       ;
CODE_01F0E1:          STZ.W $18D6                         ;; 01F0E1 : 9C D6 18    ;
CODE_01F0E4:          CMP.B #$01                          ;; 01F0E4 : C9 01       ;
CODE_01F0E6:          BNE CODE_01F0F9                     ;; 01F0E6 : D0 11       ;
CODE_01F0E8:          INC.W $18D4                         ;; 01F0E8 : EE D4 18    ;
CODE_01F0EB:          LDA.W $18D4                         ;; 01F0EB : AD D4 18    ;
CODE_01F0EE:          CMP.B #$0A                          ;; 01F0EE : C9 0A       ;
CODE_01F0F0:          BNE Return01F12D                    ;; 01F0F0 : D0 3B       ;
CODE_01F0F2:          STZ.W $18D4                         ;; 01F0F2 : 9C D4 18    ;
CODE_01F0F5:          LDA.B #$74                          ;; 01F0F5 : A9 74       ;
CODE_01F0F7:          BRA CODE_01F125                     ;; 01F0F7 : 80 2C       ;
                                                          ;;                      ;
CODE_01F0F9:          CMP.B #$03                          ;; 01F0F9 : C9 03       ;
CODE_01F0FB:          BNE CODE_01F116                     ;; 01F0FB : D0 19       ;
CODE_01F0FD:          LDA.B #$29                          ;; 01F0FD : A9 29       ; \ Play sound effect 
CODE_01F0FF:          STA.W $1DFC                         ;; 01F0FF : 8D FC 1D    ; / 
CODE_01F102:          LDA.W $0F32                         ;; 01F102 : AD 32 0F    ;
CODE_01F105:          CLC                                 ;; 01F105 : 18          ;
CODE_01F106:          ADC.B #$02                          ;; 01F106 : 69 02       ;
CODE_01F108:          CMP.B #$0A                          ;; 01F108 : C9 0A       ;
CODE_01F10A:          BCC CODE_01F111                     ;; 01F10A : 90 05       ;
ADDR_01F10C:          SBC.B #$0A                          ;; 01F10C : E9 0A       ;
ADDR_01F10E:          INC.W $0F31                         ;; 01F10E : EE 31 0F    ;
CODE_01F111:          STA.W $0F32                         ;; 01F111 : 8D 32 0F    ;
CODE_01F114:          BRA Return01F12D                    ;; 01F114 : 80 17       ;
                                                          ;;                      ;
CODE_01F116:          INC.W $18D5                         ;; 01F116 : EE D5 18    ;
CODE_01F119:          LDA.W $18D5                         ;; 01F119 : AD D5 18    ;
CODE_01F11C:          CMP.B #$02                          ;; 01F11C : C9 02       ;
CODE_01F11E:          BNE Return01F12D                    ;; 01F11E : D0 0D       ;
ADDR_01F120:          STZ.W $18D5                         ;; 01F120 : 9C D5 18    ;
ADDR_01F123:          LDA.B #$6A                          ;; 01F123 : A9 6A       ;
CODE_01F125:          STA.W $18DA                         ;; 01F125 : 8D DA 18    ;
CODE_01F128:          LDY.B #$20                          ;; 01F128 : A0 20       ;
CODE_01F12A:          STY.W $18DE                         ;; 01F12A : 8C DE 18    ;
Return01F12D:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01F12E:          LDA.W $1558,X                       ;; 01F12E : BD 58 15    ;
CODE_01F131:          BNE Return01F136                    ;; 01F131 : D0 03       ;
CODE_01F133:          STZ.W $1594,X                       ;; 01F133 : 9E 94 15    ;
Return01F136:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
YoshiShellAbility:    .db $00,$00,$01,$02,$00,$00,$01,$02 ;; ?QPWZ?               ;
                      .db $01,$01,$01,$03,$02,$02         ;; ?QPWZ?               ;
                                                          ;;                      ;
YoshiAbilityIndex:    .db $03,$02,$02,$03,$01,$00         ;; ?QPWZ?               ;
                                                          ;;                      ;
CODE_01F14B:          LDA.W $1B95                         ;; 01F14B : AD 95 1B    ;
CODE_01F14E:          BEQ CODE_01F155                     ;; 01F14E : F0 05       ;
CODE_01F150:          LDA.B #$02                          ;; 01F150 : A9 02       ; \ Set Yoshi wing ability 
CODE_01F152:          STA.W RAM_YoshiHasWings             ;; 01F152 : 8D 1E 14    ; / 
CODE_01F155:          LDA.W $18AC                         ;; 01F155 : AD AC 18    ;
CODE_01F158:          BEQ CODE_01F1A2                     ;; 01F158 : F0 48       ;
CODE_01F15A:          LDY.W $160E,X                       ;; 01F15A : BC 0E 16    ;
CODE_01F15D:          LDA.W RAM_SpriteNum,Y               ;; 01F15D : B9 9E 00    ;
CODE_01F160:          CMP.B #$80                          ;; 01F160 : C9 80       ;
CODE_01F162:          BNE CODE_01F167                     ;; 01F162 : D0 03       ;
CODE_01F164:          INC.W $191C                         ;; 01F164 : EE 1C 19    ;
CODE_01F167:          CMP.B #$0D                          ;; 01F167 : C9 0D       ;
CODE_01F169:          BCS CODE_01F1A2                     ;; 01F169 : B0 37       ;
CODE_01F16B:          PHY                                 ;; 01F16B : 5A          ;
CODE_01F16C:          LDA.W $187B,Y                       ;; 01F16C : B9 7B 18    ;
CODE_01F16F:          CMP.B #$01                          ;; 01F16F : C9 01       ;
CODE_01F171:          LDA.B #$03                          ;; 01F171 : A9 03       ;
CODE_01F173:          BCS CODE_01F195                     ;; 01F173 : B0 20       ;
CODE_01F175:          LDA.W RAM_SpritePal,X               ;; 01F175 : BD F6 15    ; \ Set yoshi stomp/wing ability, 
CODE_01F178:          LSR                                 ;; 01F178 : 4A          ;  | based on palette of sprite and Yoshi 
CODE_01F179:          AND.B #$07                          ;; 01F179 : 29 07       ;  | 
CODE_01F17B:          TAY                                 ;; 01F17B : A8          ;  | 
CODE_01F17C:          LDA.W YoshiAbilityIndex,Y           ;; 01F17C : B9 45 F1    ;  | 
CODE_01F17F:          ASL                                 ;; 01F17F : 0A          ;  | 
CODE_01F180:          ASL                                 ;; 01F180 : 0A          ;  | 
CODE_01F181:          STA $00                             ;; 01F181 : 85 00       ;  | 
CODE_01F183:          PLY                                 ;; 01F183 : 7A          ;  | 
CODE_01F184:          PHY                                 ;; 01F184 : 5A          ;  | 
CODE_01F185:          LDA.W RAM_SpritePal,Y               ;; 01F185 : B9 F6 15    ;  | 
CODE_01F188:          LSR                                 ;; 01F188 : 4A          ;  | 
CODE_01F189:          AND.B #$07                          ;; 01F189 : 29 07       ;  | 
CODE_01F18B:          TAY                                 ;; 01F18B : A8          ;  | 
CODE_01F18C:          LDA.W YoshiAbilityIndex,Y           ;; 01F18C : B9 45 F1    ;  | 
CODE_01F18F:          ORA $00                             ;; 01F18F : 05 00       ;  | 
CODE_01F191:          TAY                                 ;; 01F191 : A8          ;  | 
CODE_01F192:          LDA.W YoshiShellAbility,Y           ;; 01F192 : B9 37 F1    ; / 
CODE_01F195:          PHA                                 ;; 01F195 : 48          ; \ Set yoshi wing ability 
CODE_01F196:          AND.B #$02                          ;; 01F196 : 29 02       ;  | ($141E = #$02) 
CODE_01F198:          STA.W RAM_YoshiHasWings             ;; 01F198 : 8D 1E 14    ; / 
CODE_01F19B:          PLA                                 ;; 01F19B : 68          ; \ If Yoshi gets stomp ability, 
CODE_01F19C:          AND.B #$01                          ;; 01F19C : 29 01       ;  | $18E7 = #$01 
CODE_01F19E:          STA.W RAM_YoshiHasStomp             ;; 01F19E : 8D E7 18    ; / 
CODE_01F1A1:          PLY                                 ;; 01F1A1 : 7A          ;
CODE_01F1A2:          LDA RAM_FrameCounterB               ;; 01F1A2 : A5 14       ;
CODE_01F1A4:          AND.B #$03                          ;; 01F1A4 : 29 03       ;
CODE_01F1A6:          BNE CODE_01F1C6                     ;; 01F1A6 : D0 1E       ;
CODE_01F1A8:          LDA.W $18AC                         ;; 01F1A8 : AD AC 18    ;
CODE_01F1AB:          BEQ CODE_01F1C6                     ;; 01F1AB : F0 19       ;
CODE_01F1AD:          DEC.W $18AC                         ;; 01F1AD : CE AC 18    ;
CODE_01F1B0:          BNE CODE_01F1C6                     ;; 01F1B0 : D0 14       ;
CODE_01F1B2:          LDY.W $160E,X                       ;; 01F1B2 : BC 0E 16    ;
CODE_01F1B5:          LDA.B #$00                          ;; 01F1B5 : A9 00       ;
CODE_01F1B7:          STA.W $14C8,Y                       ;; 01F1B7 : 99 C8 14    ;
CODE_01F1BA:          DEC A                               ;; 01F1BA : 3A          ;
CODE_01F1BB:          STA.W $160E,X                       ;; 01F1BB : 9D 0E 16    ;
CODE_01F1BE:          LDA.B #$1B                          ;; 01F1BE : A9 1B       ;
CODE_01F1C0:          STA.W $1564,X                       ;; 01F1C0 : 9D 64 15    ;
CODE_01F1C3:          JMP.W CODE_01F0D3                   ;; 01F1C3 : 4C D3 F0    ;
                                                          ;;                      ;
CODE_01F1C6:          LDA.W $18AE                         ;; 01F1C6 : AD AE 18    ;
CODE_01F1C9:          BEQ CODE_01F1DF                     ;; 01F1C9 : F0 14       ;
CODE_01F1CB:          DEC.W $18AE                         ;; 01F1CB : CE AE 18    ;
CODE_01F1CE:          BNE Return01F1DE                    ;; 01F1CE : D0 0E       ;
CODE_01F1D0:          INC.W $1594,X                       ;; 01F1D0 : FE 94 15    ;
CODE_01F1D3:          STZ.W $151C,X                       ;; 01F1D3 : 9E 1C 15    ;
CODE_01F1D6:          LDA.B #$FF                          ;; 01F1D6 : A9 FF       ;
CODE_01F1D8:          STA.W $160E,X                       ;; 01F1D8 : 9D 0E 16    ;
CODE_01F1DB:          STZ.W $1564,X                       ;; 01F1DB : 9E 64 15    ;
Return01F1DE:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01F1DF:          LDA RAM_SpriteState,X               ;; 01F1DF : B5 C2       ;
CODE_01F1E1:          CMP.B #$01                          ;; 01F1E1 : C9 01       ;
CODE_01F1E3:          BNE Return01F1DE                    ;; 01F1E3 : D0 F9       ;
CODE_01F1E5:          BIT $16                             ;; 01F1E5 : 24 16       ;
CODE_01F1E7:          BVC Return01F1DE                    ;; 01F1E7 : 50 F5       ;
CODE_01F1E9:          LDA.W $18AC                         ;; 01F1E9 : AD AC 18    ;
CODE_01F1EC:          BNE CODE_01F1F1                     ;; 01F1EC : D0 03       ;
CODE_01F1EE:          JMP.W CODE_01F309                   ;; 01F1EE : 4C 09 F3    ;
                                                          ;;                      ;
CODE_01F1F1:          STZ.W $18AC                         ;; 01F1F1 : 9C AC 18    ;
CODE_01F1F4:          LDY.W $160E,X                       ;; 01F1F4 : BC 0E 16    ;
CODE_01F1F7:          PHY                                 ;; 01F1F7 : 5A          ;
CODE_01F1F8:          PHY                                 ;; 01F1F8 : 5A          ;
CODE_01F1F9:          LDY.W RAM_SpriteDir,X               ;; 01F1F9 : BC 7C 15    ;
CODE_01F1FC:          LDA RAM_SpriteXLo,X                 ;; 01F1FC : B5 E4       ;
CODE_01F1FE:          CLC                                 ;; 01F1FE : 18          ;
CODE_01F1FF:          ADC.W DATA_01F305,Y                 ;; 01F1FF : 79 05 F3    ;
CODE_01F202:          PLY                                 ;; 01F202 : 7A          ;
CODE_01F203:          STA.W RAM_SpriteXLo,Y               ;; 01F203 : 99 E4 00    ;
CODE_01F206:          LDY.W RAM_SpriteDir,X               ;; 01F206 : BC 7C 15    ;
CODE_01F209:          LDA.W RAM_SpriteXHi,X               ;; 01F209 : BD E0 14    ;
CODE_01F20C:          ADC.W DATA_01F307,Y                 ;; 01F20C : 79 07 F3    ;
CODE_01F20F:          PLY                                 ;; 01F20F : 7A          ;
CODE_01F210:          STA.W RAM_SpriteXHi,Y               ;; 01F210 : 99 E0 14    ;
CODE_01F213:          LDA RAM_SpriteYLo,X                 ;; 01F213 : B5 D8       ;
CODE_01F215:          STA.W RAM_SpriteYLo,Y               ;; 01F215 : 99 D8 00    ;
CODE_01F218:          LDA.W RAM_SpriteYHi,X               ;; 01F218 : BD D4 14    ;
CODE_01F21B:          STA.W RAM_SpriteYHi,Y               ;; 01F21B : 99 D4 14    ;
CODE_01F21E:          LDA.B #$00                          ;; 01F21E : A9 00       ;
CODE_01F220:          STA.W RAM_SpriteState,Y             ;; 01F220 : 99 C2 00    ;
CODE_01F223:          STA.W $15D0,Y                       ;; 01F223 : 99 D0 15    ;
CODE_01F226:          STA.W $1626,Y                       ;; 01F226 : 99 26 16    ;
CODE_01F229:          LDA.W $18DC                         ;; 01F229 : AD DC 18    ;
CODE_01F22C:          CMP.B #$01                          ;; 01F22C : C9 01       ;
CODE_01F22E:          LDA.B #$0A                          ;; 01F22E : A9 0A       ;
CODE_01F230:          BCC CODE_01F234                     ;; 01F230 : 90 02       ;
CODE_01F232:          LDA.B #$09                          ;; 01F232 : A9 09       ; \ Sprite status = Carryable 
CODE_01F234:          STA.W $14C8,Y                       ;; 01F234 : 99 C8 14    ; / 
CODE_01F237:          PHX                                 ;; 01F237 : DA          ;
CODE_01F238:          LDA.W RAM_SpriteDir,X               ;; 01F238 : BD 7C 15    ;
CODE_01F23B:          STA.W RAM_SpriteDir,Y               ;; 01F23B : 99 7C 15    ;
CODE_01F23E:          TAX                                 ;; 01F23E : AA          ;
CODE_01F23F:          BCC CODE_01F243                     ;; 01F23F : 90 02       ;
CODE_01F241:          INX                                 ;; 01F241 : E8          ;
CODE_01F242:          INX                                 ;; 01F242 : E8          ;
CODE_01F243:          LDA.W DATA_01F301,X                 ;; 01F243 : BD 01 F3    ;
CODE_01F246:          STA.W RAM_SpriteSpeedX,Y            ;; 01F246 : 99 B6 00    ;
CODE_01F249:          LDA.B #$00                          ;; 01F249 : A9 00       ;
CODE_01F24B:          STA.W RAM_SpriteSpeedY,Y            ;; 01F24B : 99 AA 00    ;
CODE_01F24E:          PLX                                 ;; 01F24E : FA          ;
CODE_01F24F:          LDA.B #$10                          ;; 01F24F : A9 10       ;
CODE_01F251:          STA.W $1558,X                       ;; 01F251 : 9D 58 15    ;
CODE_01F254:          LDA.B #$03                          ;; 01F254 : A9 03       ;
CODE_01F256:          STA.W $1594,X                       ;; 01F256 : 9D 94 15    ;
CODE_01F259:          LDA.B #$FF                          ;; 01F259 : A9 FF       ;
CODE_01F25B:          STA.W $160E,X                       ;; 01F25B : 9D 0E 16    ;
CODE_01F25E:          LDA.W RAM_SpriteNum,Y               ;; 01F25E : B9 9E 00    ;
CODE_01F261:          CMP.B #$0D                          ;; 01F261 : C9 0D       ;
CODE_01F263:          BCS CODE_01F2DF                     ;; 01F263 : B0 7A       ;
CODE_01F265:          LDA.W $187B,Y                       ;; 01F265 : B9 7B 18    ;
CODE_01F268:          BNE CODE_01F27C                     ;; 01F268 : D0 12       ;
CODE_01F26A:          LDA.W RAM_SpritePal,Y               ;; 01F26A : B9 F6 15    ;
CODE_01F26D:          AND.B #$0E                          ;; 01F26D : 29 0E       ;
CODE_01F26F:          CMP.B #$08                          ;; 01F26F : C9 08       ;
CODE_01F271:          BEQ CODE_01F27C                     ;; 01F271 : F0 09       ;
CODE_01F273:          LDA.W RAM_SpritePal,X               ;; 01F273 : BD F6 15    ;
CODE_01F276:          AND.B #$0E                          ;; 01F276 : 29 0E       ;
CODE_01F278:          CMP.B #$08                          ;; 01F278 : C9 08       ;
CODE_01F27A:          BNE CODE_01F2DF                     ;; 01F27A : D0 63       ;
CODE_01F27C:          PHX                                 ;; 01F27C : DA          ;
CODE_01F27D:          TYX                                 ;; 01F27D : BB          ;
CODE_01F27E:          STZ.W $14C8,X                       ;; 01F27E : 9E C8 14    ;
CODE_01F281:          LDA.B #$02                          ;; 01F281 : A9 02       ;
CODE_01F283:          STA $00                             ;; 01F283 : 85 00       ;
CODE_01F285:          JSR.W CODE_01F295                   ;; 01F285 : 20 95 F2    ;
CODE_01F288:          JSR.W CODE_01F295                   ;; 01F288 : 20 95 F2    ;
CODE_01F28B:          JSR.W CODE_01F295                   ;; 01F28B : 20 95 F2    ;
CODE_01F28E:          PLX                                 ;; 01F28E : FA          ;
CODE_01F28F:          LDA.B #$17                          ;; 01F28F : A9 17       ; \ Play sound effect 
CODE_01F291:          STA.W $1DFC                         ;; 01F291 : 8D FC 1D    ; / 
Return01F294:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01F295:          JSR.W CODE_018EEF                   ;; 01F295 : 20 EF 8E    ;
CODE_01F298:          LDA.B #$11                          ;; 01F298 : A9 11       ; \ Extended sprite = Yoshi fireball 
CODE_01F29A:          STA.W RAM_ExSpriteNum,Y             ;; 01F29A : 99 0B 17    ; / 
CODE_01F29D:          LDA RAM_SpriteXLo,X                 ;; 01F29D : B5 E4       ;
CODE_01F29F:          STA.W RAM_ExSpriteXLo,Y             ;; 01F29F : 99 1F 17    ;
CODE_01F2A2:          LDA.W RAM_SpriteXHi,X               ;; 01F2A2 : BD E0 14    ;
CODE_01F2A5:          STA.W RAM_ExSpriteXHi,Y             ;; 01F2A5 : 99 33 17    ;
CODE_01F2A8:          LDA RAM_SpriteYLo,X                 ;; 01F2A8 : B5 D8       ;
CODE_01F2AA:          STA.W RAM_ExSpriteYLo,Y             ;; 01F2AA : 99 15 17    ;
CODE_01F2AD:          LDA.W RAM_SpriteYHi,X               ;; 01F2AD : BD D4 14    ;
CODE_01F2B0:          STA.W RAM_ExSpriteYHi,Y             ;; 01F2B0 : 99 29 17    ;
CODE_01F2B3:          LDA.B #$00                          ;; 01F2B3 : A9 00       ;
CODE_01F2B5:          STA.W $1779,Y                       ;; 01F2B5 : 99 79 17    ;
CODE_01F2B8:          PHX                                 ;; 01F2B8 : DA          ;
CODE_01F2B9:          LDA.W RAM_SpriteDir,X               ;; 01F2B9 : BD 7C 15    ;
CODE_01F2BC:          LSR                                 ;; 01F2BC : 4A          ;
CODE_01F2BD:          LDX $00                             ;; 01F2BD : A6 00       ;
CODE_01F2BF:          LDA.W DATA_01F2D9,X                 ;; 01F2BF : BD D9 F2    ;
CODE_01F2C2:          BCC CODE_01F2C7                     ;; 01F2C2 : 90 03       ;
CODE_01F2C4:          EOR.B #$FF                          ;; 01F2C4 : 49 FF       ;
CODE_01F2C6:          INC A                               ;; 01F2C6 : 1A          ;
CODE_01F2C7:          STA.W RAM_ExSprSpeedX,Y             ;; 01F2C7 : 99 47 17    ;
CODE_01F2CA:          LDA.W DATA_01F2DC,X                 ;; 01F2CA : BD DC F2    ;
CODE_01F2CD:          STA.W RAM_ExSprSpeedY,Y             ;; 01F2CD : 99 3D 17    ;
CODE_01F2D0:          LDA.B #$A0                          ;; 01F2D0 : A9 A0       ;
CODE_01F2D2:          STA.W $176F,Y                       ;; 01F2D2 : 99 6F 17    ;
CODE_01F2D5:          PLX                                 ;; 01F2D5 : FA          ;
CODE_01F2D6:          DEC $00                             ;; 01F2D6 : C6 00       ;
Return01F2D8:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
DATA_01F2D9:          .db $28,$24,$24                     ;; 01F2D9               ;
                                                          ;;                      ;
DATA_01F2DC:          .db $00,$F8,$08                     ;; 01F2DC               ;
                                                          ;;                      ;
CODE_01F2DF:          LDA.B #$20                          ;; 01F2DF : A9 20       ; \ Play sound effect 
CODE_01F2E1:          STA.W $1DF9                         ;; 01F2E1 : 8D F9 1D    ; / 
CODE_01F2E4:          LDA.W RAM_Tweaker1686,Y             ;; 01F2E4 : B9 86 16    ; \ Return if sprite doesn't spawn a new one 
CODE_01F2E7:          AND.B #$40                          ;; 01F2E7 : 29 40       ;  | 
CODE_01F2E9:          BEQ Return01F2FE                    ;; 01F2E9 : F0 13       ; / 
CODE_01F2EB:          PHX                                 ;; 01F2EB : DA          ; \ Load sprite to spawn and store it 
CODE_01F2EC:          LDX.W RAM_SpriteNum,Y               ;; 01F2EC : BE 9E 00    ;  | 
CODE_01F2EF:          LDA.L SpriteToSpawn,X               ;; 01F2EF : BF C9 A7 01 ;  | 
CODE_01F2F3:          PLX                                 ;; 01F2F3 : FA          ;  | 
CODE_01F2F4:          STA.W RAM_SpriteNum,Y               ;; 01F2F4 : 99 9E 00    ; / 
CODE_01F2F7:          PHX                                 ;; 01F2F7 : DA          ; \ Load Tweaker bytes 
CODE_01F2F8:          TYX                                 ;; 01F2F8 : BB          ;  | 
CODE_01F2F9:          JSL.L LoadSpriteTables              ;; 01F2F9 : 22 8B F7 07 ;  | 
CODE_01F2FD:          PLX                                 ;; 01F2FD : FA          ; / 
Return01F2FE:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
DATA_01F2FF:          .db $20,$E0                         ;; 01F2FF               ;
                                                          ;;                      ;
DATA_01F301:          .db $30,$D0,$10,$F0                 ;; 01F301               ;
                                                          ;;                      ;
DATA_01F305:          .db $10,$F0                         ;; 01F305               ;
                                                          ;;                      ;
DATA_01F307:          .db $00,$FF                         ;; 01F307               ;
                                                          ;;                      ;
CODE_01F309:          LDA.B #$12                          ;; 01F309 : A9 12       ;
CODE_01F30B:          STA.W $14A3                         ;; 01F30B : 8D A3 14    ;
CODE_01F30E:          LDA.B #$21                          ;; 01F30E : A9 21       ; \ Play sound effect 
CODE_01F310:          STA.W $1DFC                         ;; 01F310 : 8D FC 1D    ; / 
Return01F313:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01F314:          LDA.W $151C,X                       ;; 01F314 : BD 1C 15    ;
CODE_01F317:          CLC                                 ;; 01F317 : 18          ;
CODE_01F318:          ADC.B #$03                          ;; 01F318 : 69 03       ;
CODE_01F31A:          STA.W $151C,X                       ;; 01F31A : 9D 1C 15    ;
CODE_01F31D:          CMP.B #$20                          ;; 01F31D : C9 20       ;
CODE_01F31F:          BCS CODE_01F328                     ;; 01F31F : B0 07       ;
CODE_01F321:          JSR.W CODE_01F3FE                   ;; 01F321 : 20 FE F3    ;
CODE_01F324:          JSR.W CODE_01F4B2                   ;; 01F324 : 20 B2 F4    ;
Return01F327:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01F328:          LDA.B #$08                          ;; 01F328 : A9 08       ;
CODE_01F32A:          STA.W $1558,X                       ;; 01F32A : 9D 58 15    ;
CODE_01F32D:          INC.W $1594,X                       ;; 01F32D : FE 94 15    ;
CODE_01F330:          BRA CODE_01F321                     ;; 01F330 : 80 EF       ;
                                                          ;;                      ;
CODE_01F332:          LDA.W $1558,X                       ;; 01F332 : BD 58 15    ;
CODE_01F335:          BNE CODE_01F321                     ;; 01F335 : D0 EA       ;
CODE_01F337:          LDA.W $151C,X                       ;; 01F337 : BD 1C 15    ;
CODE_01F33A:          SEC                                 ;; 01F33A : 38          ;
CODE_01F33B:          SBC.B #$04                          ;; 01F33B : E9 04       ;
CODE_01F33D:          BMI CODE_01F344                     ;; 01F33D : 30 05       ;
CODE_01F33F:          STA.W $151C,X                       ;; 01F33F : 9D 1C 15    ;
CODE_01F342:          BRA CODE_01F321                     ;; 01F342 : 80 DD       ;
                                                          ;;                      ;
CODE_01F344:          STZ.W $151C,X                       ;; 01F344 : 9E 1C 15    ;
CODE_01F347:          STZ.W $1594,X                       ;; 01F347 : 9E 94 15    ;
CODE_01F34A:          LDY.W $160E,X                       ;; 01F34A : BC 0E 16    ;
CODE_01F34D:          BMI CODE_01F370                     ;; 01F34D : 30 21       ;
CODE_01F34F:          LDA.W RAM_Tweaker1686,Y             ;; 01F34F : B9 86 16    ;
CODE_01F352:          AND.B #$02                          ;; 01F352 : 29 02       ;
CODE_01F354:          BEQ CODE_01F373                     ;; 01F354 : F0 1D       ;
CODE_01F356:          LDA.B #$07                          ;; 01F356 : A9 07       ; \ Sprite status = Unused (todo: look here) 
CODE_01F358:          STA.W $14C8,Y                       ;; 01F358 : 99 C8 14    ; / 
CODE_01F35B:          LDA.B #$FF                          ;; 01F35B : A9 FF       ;
CODE_01F35D:          STA.W $18AC                         ;; 01F35D : 8D AC 18    ;
CODE_01F360:          LDA.W RAM_SpriteNum,Y               ;; 01F360 : B9 9E 00    ; \ Branch if not a Koopa 
CODE_01F363:          CMP.B #$0D                          ;; 01F363 : C9 0D       ;  | (sprite number >= #$0D) 
CODE_01F365:          BCS CODE_01F370                     ;; 01F365 : B0 09       ; / 
CODE_01F367:          PHX                                 ;; 01F367 : DA          ;
CODE_01F368:          TAX                                 ;; 01F368 : AA          ;
CODE_01F369:          LDA.W SpriteToSpawn,X               ;; 01F369 : BD C9 A7    ;
CODE_01F36C:          STA.W RAM_SpriteNum,Y               ;; 01F36C : 99 9E 00    ;
CODE_01F36F:          PLX                                 ;; 01F36F : FA          ;
CODE_01F370:          JMP.W CODE_01F3FA                   ;; 01F370 : 4C FA F3    ;
                                                          ;;                      ;
CODE_01F373:          LDA.B #$00                          ;; 01F373 : A9 00       ;
CODE_01F375:          STA.W $14C8,Y                       ;; 01F375 : 99 C8 14    ;
CODE_01F378:          LDA.B #$1B                          ;; 01F378 : A9 1B       ;
CODE_01F37A:          STA.W $1564,X                       ;; 01F37A : 9D 64 15    ;
CODE_01F37D:          LDA.B #$FF                          ;; 01F37D : A9 FF       ;
CODE_01F37F:          STA.W $160E,X                       ;; 01F37F : 9D 0E 16    ;
CODE_01F382:          STY $00                             ;; 01F382 : 84 00       ;
CODE_01F384:          LDA.W RAM_SpriteNum,Y               ;; 01F384 : B9 9E 00    ;
CODE_01F387:          CMP.B #$9D                          ;; 01F387 : C9 9D       ;
CODE_01F389:          BNE CODE_01F39F                     ;; 01F389 : D0 14       ;
ADDR_01F38B:          LDA.W RAM_SpriteState,Y             ;; 01F38B : B9 C2 00    ;
ADDR_01F38E:          CMP.B #$03                          ;; 01F38E : C9 03       ;
ADDR_01F390:          BNE CODE_01F39F                     ;; 01F390 : D0 0D       ;
ADDR_01F392:          LDA.B #$74                          ;; 01F392 : A9 74       ; \ Sprite = Mushroom 
ADDR_01F394:          STA.W RAM_SpriteNum,Y               ;; 01F394 : 99 9E 00    ; / 
ADDR_01F397:          LDA.W RAM_Tweaker167A,Y             ;; 01F397 : B9 7A 16    ; \ Set "Gives powerup when eaten" bit 
ADDR_01F39A:          ORA.B #$40                          ;; 01F39A : 09 40       ;  | 
ADDR_01F39C:          STA.W RAM_Tweaker167A,Y             ;; 01F39C : 99 7A 16    ; / 
CODE_01F39F:          LDA.W RAM_SpriteNum,Y               ;; 01F39F : B9 9E 00    ; \ Branch if not Changing Item 
CODE_01F3A2:          CMP.B #$81                          ;; 01F3A2 : C9 81       ;  | 
CODE_01F3A4:          BNE CODE_01F3BA                     ;; 01F3A4 : D0 14       ; / 
ADDR_01F3A6:          LDA.W $187B,Y                       ;; 01F3A6 : B9 7B 18    ;
ADDR_01F3A9:          LSR                                 ;; 01F3A9 : 4A          ;
ADDR_01F3AA:          LSR                                 ;; 01F3AA : 4A          ;
ADDR_01F3AB:          LSR                                 ;; 01F3AB : 4A          ;
ADDR_01F3AC:          LSR                                 ;; 01F3AC : 4A          ;
ADDR_01F3AD:          LSR                                 ;; 01F3AD : 4A          ;
ADDR_01F3AE:          LSR                                 ;; 01F3AE : 4A          ;
ADDR_01F3AF:          AND.B #$03                          ;; 01F3AF : 29 03       ;
ADDR_01F3B1:          TAY                                 ;; 01F3B1 : A8          ;
ADDR_01F3B2:          LDA.W ChangingItemSprite,Y          ;; 01F3B2 : B9 13 C3    ;
ADDR_01F3B5:          LDY $00                             ;; 01F3B5 : A4 00       ;
ADDR_01F3B7:          STA.W RAM_SpriteNum,Y               ;; 01F3B7 : 99 9E 00    ;
CODE_01F3BA:          PHA                                 ;; 01F3BA : 48          ;
CODE_01F3BB:          LDY $00                             ;; 01F3BB : A4 00       ;
CODE_01F3BD:          LDA.W RAM_Tweaker167A,Y             ;; 01F3BD : B9 7A 16    ;
CODE_01F3C0:          ASL                                 ;; 01F3C0 : 0A          ;
CODE_01F3C1:          ASL                                 ;; 01F3C1 : 0A          ;
CODE_01F3C2:          PLA                                 ;; 01F3C2 : 68          ;
CODE_01F3C3:          BCC CODE_01F3DB                     ;; 01F3C3 : 90 16       ;
CODE_01F3C5:          PHX                                 ;; 01F3C5 : DA          ;
CODE_01F3C6:          TYX                                 ;; 01F3C6 : BB          ;
CODE_01F3C7:          STZ RAM_SpriteState,X               ;; 01F3C7 : 74 C2       ;
CODE_01F3C9:          JSR.W CODE_01C4BF                   ;; 01F3C9 : 20 BF C4    ;
CODE_01F3CC:          PLX                                 ;; 01F3CC : FA          ;
CODE_01F3CD:          LDY.W $18DC                         ;; 01F3CD : AC DC 18    ;
CODE_01F3D0:          LDA.W DATA_01F3D9,Y                 ;; 01F3D0 : B9 D9 F3    ;
CODE_01F3D3:          STA.W $1602,X                       ;; 01F3D3 : 9D 02 16    ;
CODE_01F3D6:          JMP.W CODE_01F321                   ;; 01F3D6 : 4C 21 F3    ;
                                                          ;;                      ;
                                                          ;;                      ;
DATA_01F3D9:          .db $00,$04                         ;; 01F3D9               ;
                                                          ;;                      ;
CODE_01F3DB:          CMP.B #$7E                          ;; 01F3DB : C9 7E       ;
CODE_01F3DD:          BNE CODE_01F3F7                     ;; 01F3DD : D0 18       ;
ADDR_01F3DF:          LDA.W RAM_SpriteState,Y             ;; 01F3DF : B9 C2 00    ;
ADDR_01F3E2:          BEQ CODE_01F3F7                     ;; 01F3E2 : F0 13       ;
ADDR_01F3E4:          CMP.B #$02                          ;; 01F3E4 : C9 02       ;
ADDR_01F3E6:          BNE ADDR_01F3F1                     ;; 01F3E6 : D0 09       ;
ADDR_01F3E8:          LDA.B #$08                          ;; 01F3E8 : A9 08       ;
ADDR_01F3EA:          STA RAM_MarioAnimation              ;; 01F3EA : 85 71       ;
ADDR_01F3EC:          LDA.B #$03                          ;; 01F3EC : A9 03       ; \ Play sound effect 
ADDR_01F3EE:          STA.W $1DFC                         ;; 01F3EE : 8D FC 1D    ; / 
ADDR_01F3F1:          JSR.W CODE_01F6CD                   ;; 01F3F1 : 20 CD F6    ;
ADDR_01F3F4:          JMP.W CODE_01F321                   ;; 01F3F4 : 4C 21 F3    ;
                                                          ;;                      ;
CODE_01F3F7:          JSR.W CODE_01F0D3                   ;; 01F3F7 : 20 D3 F0    ;
CODE_01F3FA:          JMP.W CODE_01F321                   ;; 01F3FA : 4C 21 F3    ;
                                                          ;;                      ;
Return01F3FD:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01F3FE:          LDA.W RAM_OffscreenHorz,X           ;; 01F3FE : BD A0 15    ; \ Branch if sprite off screen... 
CODE_01F401:          ORA.W RAM_OffscreenVert,X           ;; 01F401 : 1D 6C 18    ;  | 
CODE_01F404:          ORA.W RAM_YoshiInPipe               ;; 01F404 : 0D 19 14    ;  | ...or going down pipe 
CODE_01F407:          BNE Return01F3FD                    ;; 01F407 : D0 F4       ; / 
CODE_01F409:          LDY.W $1602,X                       ;; 01F409 : BC 02 16    ;
CODE_01F40C:          LDA.W DATA_01F61A,Y                 ;; 01F40C : B9 1A F6    ;
CODE_01F40F:          STA.W $185E                         ;; 01F40F : 8D 5E 18    ;
CODE_01F412:          CLC                                 ;; 01F412 : 18          ;
CODE_01F413:          ADC RAM_SpriteYLo,X                 ;; 01F413 : 75 D8       ;
CODE_01F415:          SEC                                 ;; 01F415 : 38          ;
CODE_01F416:          SBC RAM_ScreenBndryYLo              ;; 01F416 : E5 1C       ;
CODE_01F418:          STA $01                             ;; 01F418 : 85 01       ;
CODE_01F41A:          LDA.W RAM_SpriteDir,X               ;; 01F41A : BD 7C 15    ;
CODE_01F41D:          BNE CODE_01F424                     ;; 01F41D : D0 05       ;
CODE_01F41F:          TYA                                 ;; 01F41F : 98          ;
CODE_01F420:          CLC                                 ;; 01F420 : 18          ;
CODE_01F421:          ADC.B #$08                          ;; 01F421 : 69 08       ;
CODE_01F423:          TAY                                 ;; 01F423 : A8          ;
CODE_01F424:          LDA.W DATA_01F60A,Y                 ;; 01F424 : B9 0A F6    ;
CODE_01F427:          STA $0D                             ;; 01F427 : 85 0D       ;
CODE_01F429:          LDA RAM_SpriteXLo,X                 ;; 01F429 : B5 E4       ;
CODE_01F42B:          SEC                                 ;; 01F42B : 38          ;
CODE_01F42C:          SBC RAM_ScreenBndryXLo              ;; 01F42C : E5 1A       ;
CODE_01F42E:          CLC                                 ;; 01F42E : 18          ;
CODE_01F42F:          ADC $0D                             ;; 01F42F : 65 0D       ;
CODE_01F431:          STA $00                             ;; 01F431 : 85 00       ;
CODE_01F433:          LDA.W RAM_SpriteDir,X               ;; 01F433 : BD 7C 15    ;
CODE_01F436:          BNE CODE_01F43C                     ;; 01F436 : D0 04       ;
CODE_01F438:          BCS Return01F3FD                    ;; 01F438 : B0 C3       ;
CODE_01F43A:          BRA CODE_01F43E                     ;; 01F43A : 80 02       ;
                                                          ;;                      ;
CODE_01F43C:          BCC Return01F3FD                    ;; 01F43C : 90 BF       ;
CODE_01F43E:          LDA.W $151C,X                       ;; 01F43E : BD 1C 15    ;
CODE_01F441:          STA.W $4205                         ;; 01F441 : 8D 05 42    ; Dividend (High-Byte)
CODE_01F444:          STZ.W $4204                         ;; 01F444 : 9C 04 42    ; Dividend (Low Byte)
CODE_01F447:          LDA.B #$04                          ;; 01F447 : A9 04       ;
CODE_01F449:          STA.W $4206                         ;; 01F449 : 8D 06 42    ; Divisor B
CODE_01F44C:          NOP                                 ;; 01F44C : EA          ;
CODE_01F44D:          NOP                                 ;; 01F44D : EA          ;
CODE_01F44E:          NOP                                 ;; 01F44E : EA          ;
CODE_01F44F:          NOP                                 ;; 01F44F : EA          ;
CODE_01F450:          NOP                                 ;; 01F450 : EA          ;
CODE_01F451:          NOP                                 ;; 01F451 : EA          ;
CODE_01F452:          NOP                                 ;; 01F452 : EA          ;
CODE_01F453:          NOP                                 ;; 01F453 : EA          ;
CODE_01F454:          LDA.W RAM_SpriteDir,X               ;; 01F454 : BD 7C 15    ;
CODE_01F457:          STA $07                             ;; 01F457 : 85 07       ;
CODE_01F459:          LSR                                 ;; 01F459 : 4A          ;
CODE_01F45A:          LDA.W $4215                         ;; 01F45A : AD 15 42    ; Quotient of Divide Result (High Byte)
CODE_01F45D:          BCC CODE_01F462                     ;; 01F45D : 90 03       ;
CODE_01F45F:          EOR.B #$FF                          ;; 01F45F : 49 FF       ;
CODE_01F461:          INC A                               ;; 01F461 : 1A          ;
CODE_01F462:          STA $05                             ;; 01F462 : 85 05       ;
CODE_01F464:          LDA.B #$04                          ;; 01F464 : A9 04       ;
CODE_01F466:          STA $06                             ;; 01F466 : 85 06       ;
CODE_01F468:          LDY.B #$0C                          ;; 01F468 : A0 0C       ;
CODE_01F46A:          LDA $00                             ;; 01F46A : A5 00       ;
CODE_01F46C:          STA.W OAM_ExtendedDispX,Y           ;; 01F46C : 99 00 02    ;
CODE_01F46F:          CLC                                 ;; 01F46F : 18          ;
CODE_01F470:          ADC $05                             ;; 01F470 : 65 05       ;
CODE_01F472:          STA $00                             ;; 01F472 : 85 00       ;
CODE_01F474:          LDA $05                             ;; 01F474 : A5 05       ;
CODE_01F476:          BPL CODE_01F47C                     ;; 01F476 : 10 04       ;
CODE_01F478:          BCC Return01F4B1                    ;; 01F478 : 90 37       ;
CODE_01F47A:          BRA CODE_01F47E                     ;; 01F47A : 80 02       ;
                                                          ;;                      ;
CODE_01F47C:          BCS Return01F4B1                    ;; 01F47C : B0 33       ;
CODE_01F47E:          LDA $01                             ;; 01F47E : A5 01       ;
CODE_01F480:          STA.W OAM_ExtendedDispY,Y           ;; 01F480 : 99 01 02    ;
CODE_01F483:          LDA $06                             ;; 01F483 : A5 06       ;
CODE_01F485:          CMP.B #$01                          ;; 01F485 : C9 01       ;
CODE_01F487:          LDA.B #$76                          ;; 01F487 : A9 76       ;
CODE_01F489:          BCS CODE_01F48D                     ;; 01F489 : B0 02       ;
CODE_01F48B:          LDA.B #$66                          ;; 01F48B : A9 66       ;
CODE_01F48D:          STA.W OAM_ExtendedTile,Y            ;; 01F48D : 99 02 02    ;
CODE_01F490:          LDA $07                             ;; 01F490 : A5 07       ;
CODE_01F492:          LSR                                 ;; 01F492 : 4A          ;
CODE_01F493:          LDA.B #$09                          ;; 01F493 : A9 09       ;
CODE_01F495:          BCS CODE_01F499                     ;; 01F495 : B0 02       ;
CODE_01F497:          ORA.B #$40                          ;; 01F497 : 09 40       ;
CODE_01F499:          ORA $64                             ;; 01F499 : 05 64       ;
CODE_01F49B:          STA.W OAM_ExtendedProp,Y            ;; 01F49B : 99 03 02    ;
CODE_01F49E:          PHY                                 ;; 01F49E : 5A          ;
CODE_01F49F:          TYA                                 ;; 01F49F : 98          ;
CODE_01F4A0:          LSR                                 ;; 01F4A0 : 4A          ;
CODE_01F4A1:          LSR                                 ;; 01F4A1 : 4A          ;
CODE_01F4A2:          TAY                                 ;; 01F4A2 : A8          ;
CODE_01F4A3:          LDA.B #$00                          ;; 01F4A3 : A9 00       ;
CODE_01F4A5:          STA.W $0420,Y                       ;; 01F4A5 : 99 20 04    ;
CODE_01F4A8:          PLY                                 ;; 01F4A8 : 7A          ;
CODE_01F4A9:          INY                                 ;; 01F4A9 : C8          ;
CODE_01F4AA:          INY                                 ;; 01F4AA : C8          ;
CODE_01F4AB:          INY                                 ;; 01F4AB : C8          ;
CODE_01F4AC:          INY                                 ;; 01F4AC : C8          ;
CODE_01F4AD:          DEC $06                             ;; 01F4AD : C6 06       ;
CODE_01F4AF:          BPL CODE_01F46A                     ;; 01F4AF : 10 B9       ;
Return01F4B1:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01F4B2:          LDA.W $160E,X                       ;; 01F4B2 : BD 0E 16    ;
CODE_01F4B5:          BMI CODE_01F524                     ;; 01F4B5 : 30 6D       ;
CODE_01F4B7:          LDY.B #$00                          ;; 01F4B7 : A0 00       ;
CODE_01F4B9:          LDA $0D                             ;; 01F4B9 : A5 0D       ;
CODE_01F4BB:          BMI CODE_01F4C3                     ;; 01F4BB : 30 06       ;
CODE_01F4BD:          CLC                                 ;; 01F4BD : 18          ;
CODE_01F4BE:          ADC.W $151C,X                       ;; 01F4BE : 7D 1C 15    ;
CODE_01F4C1:          BRA CODE_01F4CC                     ;; 01F4C1 : 80 09       ;
                                                          ;;                      ;
CODE_01F4C3:          LDA.W $151C,X                       ;; 01F4C3 : BD 1C 15    ;
CODE_01F4C6:          EOR.B #$FF                          ;; 01F4C6 : 49 FF       ;
CODE_01F4C8:          INC A                               ;; 01F4C8 : 1A          ;
CODE_01F4C9:          CLC                                 ;; 01F4C9 : 18          ;
CODE_01F4CA:          ADC $0D                             ;; 01F4CA : 65 0D       ;
CODE_01F4CC:          SEC                                 ;; 01F4CC : 38          ;
CODE_01F4CD:          SBC.B #$04                          ;; 01F4CD : E9 04       ;
CODE_01F4CF:          BPL CODE_01F4D2                     ;; 01F4CF : 10 01       ;
CODE_01F4D1:          DEY                                 ;; 01F4D1 : 88          ;
CODE_01F4D2:          PHY                                 ;; 01F4D2 : 5A          ;
CODE_01F4D3:          CLC                                 ;; 01F4D3 : 18          ;
CODE_01F4D4:          ADC RAM_SpriteXLo,X                 ;; 01F4D4 : 75 E4       ;
CODE_01F4D6:          LDY.W $160E,X                       ;; 01F4D6 : BC 0E 16    ;
CODE_01F4D9:          STA.W RAM_SpriteXLo,Y               ;; 01F4D9 : 99 E4 00    ;
CODE_01F4DC:          PLY                                 ;; 01F4DC : 7A          ;
CODE_01F4DD:          TYA                                 ;; 01F4DD : 98          ;
CODE_01F4DE:          ADC.W RAM_SpriteXHi,X               ;; 01F4DE : 7D E0 14    ;
CODE_01F4E1:          LDY.W $160E,X                       ;; 01F4E1 : BC 0E 16    ;
CODE_01F4E4:          STA.W RAM_SpriteXHi,Y               ;; 01F4E4 : 99 E0 14    ;
CODE_01F4E7:          LDA.B #$FC                          ;; 01F4E7 : A9 FC       ;
CODE_01F4E9:          STA $00                             ;; 01F4E9 : 85 00       ;
CODE_01F4EB:          LDA.W RAM_Tweaker1662,Y             ;; 01F4EB : B9 62 16    ;
CODE_01F4EE:          AND.B #$40                          ;; 01F4EE : 29 40       ;
CODE_01F4F0:          BNE CODE_01F4FD                     ;; 01F4F0 : D0 0B       ;
CODE_01F4F2:          LDA.W RAM_Tweaker190F,Y             ;; 01F4F2 : B9 0F 19    ; \ Branch if "Death frame 2 tiles high" 
CODE_01F4F5:          AND.B #$20                          ;; 01F4F5 : 29 20       ;  | is NOT set 
CODE_01F4F7:          BEQ CODE_01F4FD                     ;; 01F4F7 : F0 04       ; / 
CODE_01F4F9:          LDA.B #$F8                          ;; 01F4F9 : A9 F8       ;
CODE_01F4FB:          STA $00                             ;; 01F4FB : 85 00       ;
CODE_01F4FD:          STZ $01                             ;; 01F4FD : 64 01       ;
CODE_01F4FF:          LDA $00                             ;; 01F4FF : A5 00       ;
CODE_01F501:          CLC                                 ;; 01F501 : 18          ;
CODE_01F502:          ADC.W $185E                         ;; 01F502 : 6D 5E 18    ;
CODE_01F505:          BPL CODE_01F509                     ;; 01F505 : 10 02       ;
ADDR_01F507:          DEC $01                             ;; 01F507 : C6 01       ;
CODE_01F509:          CLC                                 ;; 01F509 : 18          ;
CODE_01F50A:          ADC RAM_SpriteYLo,X                 ;; 01F50A : 75 D8       ;
CODE_01F50C:          STA.W RAM_SpriteYLo,Y               ;; 01F50C : 99 D8 00    ;
CODE_01F50F:          LDA.W RAM_SpriteYHi,X               ;; 01F50F : BD D4 14    ;
CODE_01F512:          ADC $01                             ;; 01F512 : 65 01       ;
CODE_01F514:          STA.W RAM_SpriteYHi,Y               ;; 01F514 : 99 D4 14    ;
CODE_01F517:          LDA.B #$00                          ;; 01F517 : A9 00       ;
CODE_01F519:          STA.W RAM_SpriteSpeedY,Y            ;; 01F519 : 99 AA 00    ;
CODE_01F51C:          STA.W RAM_SpriteSpeedX,Y            ;; 01F51C : 99 B6 00    ;
CODE_01F51F:          INC A                               ;; 01F51F : 1A          ;
CODE_01F520:          STA.W $15D0,Y                       ;; 01F520 : 99 D0 15    ;
Return01F523:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01F524:          PHY                                 ;; 01F524 : 5A          ;
CODE_01F525:          LDY.B #$00                          ;; 01F525 : A0 00       ;
CODE_01F527:          LDA $0D                             ;; 01F527 : A5 0D       ;
CODE_01F529:          BMI CODE_01F531                     ;; 01F529 : 30 06       ;
CODE_01F52B:          CLC                                 ;; 01F52B : 18          ;
CODE_01F52C:          ADC.W $151C,X                       ;; 01F52C : 7D 1C 15    ;
CODE_01F52F:          BRA CODE_01F53A                     ;; 01F52F : 80 09       ;
                                                          ;;                      ;
CODE_01F531:          LDA.W $151C,X                       ;; 01F531 : BD 1C 15    ;
CODE_01F534:          EOR.B #$FF                          ;; 01F534 : 49 FF       ;
CODE_01F536:          INC A                               ;; 01F536 : 1A          ;
CODE_01F537:          CLC                                 ;; 01F537 : 18          ;
CODE_01F538:          ADC $0D                             ;; 01F538 : 65 0D       ;
CODE_01F53A:          CLC                                 ;; 01F53A : 18          ;
CODE_01F53B:          ADC.B #$00                          ;; 01F53B : 69 00       ;
CODE_01F53D:          BPL CODE_01F540                     ;; 01F53D : 10 01       ;
CODE_01F53F:          DEY                                 ;; 01F53F : 88          ;
CODE_01F540:          CLC                                 ;; 01F540 : 18          ;
CODE_01F541:          ADC RAM_SpriteXLo,X                 ;; 01F541 : 75 E4       ;
CODE_01F543:          STA $00                             ;; 01F543 : 85 00       ;
CODE_01F545:          TYA                                 ;; 01F545 : 98          ;
CODE_01F546:          ADC.W RAM_SpriteXHi,X               ;; 01F546 : 7D E0 14    ;
CODE_01F549:          STA $08                             ;; 01F549 : 85 08       ;
CODE_01F54B:          PLY                                 ;; 01F54B : 7A          ;
CODE_01F54C:          LDA.W $185E                         ;; 01F54C : AD 5E 18    ;
CODE_01F54F:          CLC                                 ;; 01F54F : 18          ;
CODE_01F550:          ADC.B #$02                          ;; 01F550 : 69 02       ;
CODE_01F552:          CLC                                 ;; 01F552 : 18          ;
CODE_01F553:          ADC RAM_SpriteYLo,X                 ;; 01F553 : 75 D8       ;
CODE_01F555:          STA $01                             ;; 01F555 : 85 01       ;
CODE_01F557:          LDA.W RAM_SpriteYHi,X               ;; 01F557 : BD D4 14    ;
CODE_01F55A:          ADC.B #$00                          ;; 01F55A : 69 00       ;
CODE_01F55C:          STA $09                             ;; 01F55C : 85 09       ;
CODE_01F55E:          LDA.B #$08                          ;; 01F55E : A9 08       ;
CODE_01F560:          STA $02                             ;; 01F560 : 85 02       ;
CODE_01F562:          LDA.B #$04                          ;; 01F562 : A9 04       ;
CODE_01F564:          STA $03                             ;; 01F564 : 85 03       ;
CODE_01F566:          LDY.B #$0B                          ;; 01F566 : A0 0B       ; Loop over spites: 
CODE_01F568:          STY.W $1695                         ;; 01F568 : 8C 95 16    ;
CODE_01F56B:          CPY.W $15E9                         ;; 01F56B : CC E9 15    ;
CODE_01F56E:          BEQ CODE_01F586                     ;; 01F56E : F0 16       ;
CODE_01F570:          LDA.W $160E,X                       ;; 01F570 : BD 0E 16    ;
CODE_01F573:          BPL CODE_01F586                     ;; 01F573 : 10 11       ;
CODE_01F575:          LDA.W $14C8,Y                       ;; 01F575 : B9 C8 14    ; \ Skip sprite if sprite status < 8 
CODE_01F578:          CMP.B #$08                          ;; 01F578 : C9 08       ;  | 
CODE_01F57A:          BCC CODE_01F586                     ;; 01F57A : 90 0A       ; / 
CODE_01F57C:          LDA.W RAM_SprBehindScrn,Y           ;; 01F57C : B9 32 16    ; \ Skip sprite if behind scenery 
CODE_01F57F:          BNE CODE_01F586                     ;; 01F57F : D0 05       ; / 
CODE_01F581:          PHY                                 ;; 01F581 : 5A          ;
CODE_01F582:          JSR.W TryEatSprite                  ;; 01F582 : 20 8E F5    ;
CODE_01F585:          PLY                                 ;; 01F585 : 7A          ;
CODE_01F586:          DEY                                 ;; 01F586 : 88          ;
CODE_01F587:          BPL CODE_01F568                     ;; 01F587 : 10 DF       ;
CODE_01F589:          JSL.L CODE_02B9FA                   ;; 01F589 : 22 FA B9 02 ;
Return01F58D:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
TryEatSprite:         PHX                                 ;; ?QPWZ? : DA          ;
CODE_01F58F:          TYX                                 ;; 01F58F : BB          ;
CODE_01F590:          JSL.L GetSpriteClippingA            ;; 01F590 : 22 9F B6 03 ;
CODE_01F594:          PLX                                 ;; 01F594 : FA          ;
CODE_01F595:          JSL.L CheckForContact               ;; 01F595 : 22 2B B7 03 ;
CODE_01F599:          BCC Return01F609                    ;; 01F599 : 90 6E       ;
CODE_01F59B:          LDA.W RAM_Tweaker1686,Y             ;; 01F59B : B9 86 16    ; \ If sprite inedible 
CODE_01F59E:          LSR                                 ;; 01F59E : 4A          ;  | 
CODE_01F59F:          BCC EatSprite                       ;; 01F59F : 90 06       ;  | 
CODE_01F5A1:          LDA.B #$01                          ;; 01F5A1 : A9 01       ;  | Play sound effect 
CODE_01F5A3:          STA.W $1DF9                         ;; 01F5A3 : 8D F9 1D    ;  | 
Return01F5A6:         RTS                                 ;; ?QPWZ? : 60          ; / Return 
                                                          ;;                      ;
EatSprite:            LDA.W RAM_SpriteNum,Y               ;; ?QPWZ? : B9 9E 00    ; \ Branch if sprite being eaten not Pokey 
CODE_01F5AA:          CMP.B #$70                          ;; 01F5AA : C9 70       ;  | 
CODE_01F5AC:          BNE CODE_01F5FB                     ;; 01F5AC : D0 4D       ; / 
SpltPokeyInto2Sprs:   STY.W $185E                         ;; ?QPWZ? : 8C 5E 18    ; $185E = Index of sprite being eaten 
CODE_01F5B1:          LDA $01                             ;; 01F5B1 : A5 01       ;
CODE_01F5B3:          SEC                                 ;; 01F5B3 : 38          ;
CODE_01F5B4:          SBC.W RAM_SpriteYLo,Y               ;; 01F5B4 : F9 D8 00    ;
CODE_01F5B7:          CLC                                 ;; 01F5B7 : 18          ;
CODE_01F5B8:          ADC.B #$00                          ;; 01F5B8 : 69 00       ;
CODE_01F5BA:          PHX                                 ;; 01F5BA : DA          ;
CODE_01F5BB:          TYX                                 ;; 01F5BB : BB          ; X = Index of sprite being eaten 
CODE_01F5BC:          JSL.L RemovePokeySegment            ;; 01F5BC : 22 1C B8 02 ;
CODE_01F5C0:          PLX                                 ;; 01F5C0 : FA          ;
CODE_01F5C1:          JSL.L FindFreeSprSlot               ;; 01F5C1 : 22 E4 A9 02 ; \ Return if no free slots 
CODE_01F5C5:          BMI Return01F609                    ;; 01F5C5 : 30 42       ; / 
CODE_01F5C7:          LDA.B #$08                          ;; 01F5C7 : A9 08       ; \ Sprite status = Normal 
CODE_01F5C9:          STA.W $14C8,Y                       ;; 01F5C9 : 99 C8 14    ; / 
CODE_01F5CC:          LDA.B #$70                          ;; 01F5CC : A9 70       ; \ Sprite = Pokey 
CODE_01F5CE:          STA.W RAM_SpriteNum,Y               ;; 01F5CE : 99 9E 00    ; / 
CODE_01F5D1:          LDA $00                             ;; 01F5D1 : A5 00       ;
CODE_01F5D3:          STA.W RAM_SpriteXLo,Y               ;; 01F5D3 : 99 E4 00    ;
CODE_01F5D6:          LDA $08                             ;; 01F5D6 : A5 08       ;
CODE_01F5D8:          STA.W RAM_SpriteXHi,Y               ;; 01F5D8 : 99 E0 14    ;
CODE_01F5DB:          LDA $01                             ;; 01F5DB : A5 01       ;
CODE_01F5DD:          STA.W RAM_SpriteYLo,Y               ;; 01F5DD : 99 D8 00    ;
CODE_01F5E0:          LDA $09                             ;; 01F5E0 : A5 09       ;
CODE_01F5E2:          STA.W RAM_SpriteYHi,Y               ;; 01F5E2 : 99 D4 14    ;
CODE_01F5E5:          PHX                                 ;; 01F5E5 : DA          ;
CODE_01F5E6:          TYX                                 ;; 01F5E6 : BB          ; X = Index of new sprite 
CODE_01F5E7:          JSL.L InitSpriteTables              ;; 01F5E7 : 22 D2 F7 07 ; Reset sprite tables 
CODE_01F5EB:          LDX.W $185E                         ;; 01F5EB : AE 5E 18    ; X = Index of sprite being eaten 
CODE_01F5EE:          LDA RAM_SpriteState,X               ;; 01F5EE : B5 C2       ;
CODE_01F5F0:          AND $0D                             ;; 01F5F0 : 25 0D       ;
CODE_01F5F2:          STA.W RAM_SpriteState,Y             ;; 01F5F2 : 99 C2 00    ; y = index of new sptr here?? 
CODE_01F5F5:          LDA.B #$01                          ;; 01F5F5 : A9 01       ;
CODE_01F5F7:          STA.W $1534,Y                       ;; 01F5F7 : 99 34 15    ;
CODE_01F5FA:          PLX                                 ;; 01F5FA : FA          ;
CODE_01F5FB:          TYA                                 ;; 01F5FB : 98          ; \ $160E,x = Index of sprite being eaten 
CODE_01F5FC:          STA.W $160E,X                       ;; 01F5FC : 9D 0E 16    ; / 
CODE_01F5FF:          LDA.B #$02                          ;; 01F5FF : A9 02       ;
CODE_01F601:          STA.W $1594,X                       ;; 01F601 : 9D 94 15    ;
CODE_01F604:          LDA.B #$0A                          ;; 01F604 : A9 0A       ;
CODE_01F606:          STA.W $1558,X                       ;; 01F606 : 9D 58 15    ;
Return01F609:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
DATA_01F60A:          .db $F5,$F5,$F5,$F5,$F5,$F5,$F5,$F0 ;; 01F60A               ;
                      .db $13,$13,$13,$13,$13,$13,$13,$18 ;; ?QPWZ?               ;
DATA_01F61A:          .db $08,$08,$08,$08,$08,$08,$08,$13 ;; 01F61A               ;
                                                          ;;                      ;
CODE_01F622:          LDA.W $163E,X                       ;; 01F622 : BD 3E 16    ;
CODE_01F625:          ORA RAM_SpritesLocked               ;; 01F625 : 05 9D       ;
CODE_01F627:          BNE Return01F667                    ;; 01F627 : D0 3E       ;
CODE_01F629:          LDY.B #$0B                          ;; 01F629 : A0 0B       ;
CODE_01F62B:          STY.W $1695                         ;; 01F62B : 8C 95 16    ;
CODE_01F62E:          TYA                                 ;; 01F62E : 98          ;
CODE_01F62F:          EOR RAM_FrameCounter                ;; 01F62F : 45 13       ;
CODE_01F631:          AND.B #$01                          ;; 01F631 : 29 01       ;
CODE_01F633:          BNE CODE_01F661                     ;; 01F633 : D0 2C       ;
CODE_01F635:          TYA                                 ;; 01F635 : 98          ;
CODE_01F636:          CMP.W $160E,X                       ;; 01F636 : DD 0E 16    ;
CODE_01F639:          BEQ CODE_01F661                     ;; 01F639 : F0 26       ;
CODE_01F63B:          CPY.W $15E9                         ;; 01F63B : CC E9 15    ;
CODE_01F63E:          BEQ CODE_01F661                     ;; 01F63E : F0 21       ;
CODE_01F640:          LDA.W $14C8,Y                       ;; 01F640 : B9 C8 14    ;
CODE_01F643:          CMP.B #$08                          ;; 01F643 : C9 08       ;
CODE_01F645:          BCC CODE_01F661                     ;; 01F645 : 90 1A       ;
CODE_01F647:          LDA.W RAM_SpriteNum,Y               ;; 01F647 : B9 9E 00    ;
CODE_01F64A:          LDA.W $14C8,Y                       ;; 01F64A : B9 C8 14    ;
CODE_01F64D:          CMP.B #$09                          ;; 01F64D : C9 09       ;
CODE_01F64F:          BEQ CODE_01F661                     ;; 01F64F : F0 10       ;
CODE_01F651:          LDA.W RAM_Tweaker167A,Y             ;; 01F651 : B9 7A 16    ;
CODE_01F654:          AND.B #$02                          ;; 01F654 : 29 02       ;
CODE_01F656:          ORA.W $15D0,Y                       ;; 01F656 : 19 D0 15    ;
CODE_01F659:          ORA.W RAM_SprBehindScrn,Y           ;; 01F659 : 19 32 16    ;
CODE_01F65C:          BNE CODE_01F661                     ;; 01F65C : D0 03       ;
CODE_01F65E:          JSR.W CODE_01F668                   ;; 01F65E : 20 68 F6    ;
CODE_01F661:          LDY.W $1695                         ;; 01F661 : AC 95 16    ;
CODE_01F664:          DEY                                 ;; 01F664 : 88          ;
CODE_01F665:          BPL CODE_01F62B                     ;; 01F665 : 10 C4       ;
Return01F667:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01F668:          PHX                                 ;; 01F668 : DA          ;
CODE_01F669:          TYX                                 ;; 01F669 : BB          ;
CODE_01F66A:          JSL.L GetSpriteClippingB            ;; 01F66A : 22 E5 B6 03 ;
CODE_01F66E:          PLX                                 ;; 01F66E : FA          ;
CODE_01F66F:          JSL.L GetSpriteClippingA            ;; 01F66F : 22 9F B6 03 ;
CODE_01F673:          JSL.L CheckForContact               ;; 01F673 : 22 2B B7 03 ;
CODE_01F677:          BCC Return01F667                    ;; 01F677 : 90 EE       ;
CODE_01F679:          LDA.W RAM_SpriteNum,Y               ;; 01F679 : B9 9E 00    ;
CODE_01F67C:          CMP.B #$9D                          ;; 01F67C : C9 9D       ;
CODE_01F67E:          BEQ Return01F667                    ;; 01F67E : F0 E7       ;
CODE_01F680:          CMP.B #$15                          ;; 01F680 : C9 15       ;
CODE_01F682:          BEQ CODE_01F69E                     ;; 01F682 : F0 1A       ;
CODE_01F684:          CMP.B #$16                          ;; 01F684 : C9 16       ;
CODE_01F686:          BEQ CODE_01F69E                     ;; 01F686 : F0 16       ;
CODE_01F688:          CMP.B #$04                          ;; 01F688 : C9 04       ;
CODE_01F68A:          BCS CODE_01F6A3                     ;; 01F68A : B0 17       ;
CODE_01F68C:          CMP.B #$02                          ;; 01F68C : C9 02       ;
CODE_01F68E:          BEQ CODE_01F6A3                     ;; 01F68E : F0 13       ;
ADDR_01F690:          LDA.W $163E,Y                       ;; 01F690 : B9 3E 16    ;
ADDR_01F693:          BPL CODE_01F6A3                     ;; 01F693 : 10 0E       ;
CODE_01F695:          PHY                                 ;; 01F695 : 5A          ;
CODE_01F696:          PHX                                 ;; 01F696 : DA          ;
CODE_01F697:          TYX                                 ;; 01F697 : BB          ;
CODE_01F698:          JSR.W CODE_01B12A                   ;; 01F698 : 20 2A B1    ;
CODE_01F69B:          PLX                                 ;; 01F69B : FA          ;
CODE_01F69C:          PLY                                 ;; 01F69C : 7A          ;
Return01F69D:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01F69E:          LDA.W $164A,Y                       ;; 01F69E : B9 4A 16    ;
CODE_01F6A1:          BEQ CODE_01F695                     ;; 01F6A1 : F0 F2       ;
CODE_01F6A3:          LDA.W RAM_SpriteNum,Y               ;; 01F6A3 : B9 9E 00    ;
CODE_01F6A6:          CMP.B #$BF                          ;; 01F6A6 : C9 BF       ;
CODE_01F6A8:          BNE CODE_01F6B4                     ;; 01F6A8 : D0 0A       ;
CODE_01F6AA:          LDA RAM_MarioYPos                   ;; 01F6AA : A5 96       ;
CODE_01F6AC:          SEC                                 ;; 01F6AC : 38          ;
CODE_01F6AD:          SBC.W RAM_SpriteYLo,Y               ;; 01F6AD : F9 D8 00    ;
CODE_01F6B0:          CMP.B #$E8                          ;; 01F6B0 : C9 E8       ;
CODE_01F6B2:          BMI Return01F6DC                    ;; 01F6B2 : 30 28       ;
CODE_01F6B4:          LDA.W RAM_SpriteNum,Y               ;; 01F6B4 : B9 9E 00    ;
CODE_01F6B7:          CMP.B #$7E                          ;; 01F6B7 : C9 7E       ;
CODE_01F6B9:          BNE CODE_01F6DD                     ;; 01F6B9 : D0 22       ;
CODE_01F6BB:          LDA.W RAM_SpriteState,Y             ;; 01F6BB : B9 C2 00    ;
CODE_01F6BE:          BEQ Return01F6DC                    ;; 01F6BE : F0 1C       ;
CODE_01F6C0:          CMP.B #$02                          ;; 01F6C0 : C9 02       ;
CODE_01F6C2:          BNE CODE_01F6CD                     ;; 01F6C2 : D0 09       ;
CODE_01F6C4:          LDA.B #$08                          ;; 01F6C4 : A9 08       ;
CODE_01F6C6:          STA RAM_MarioAnimation              ;; 01F6C6 : 85 71       ;
CODE_01F6C8:          LDA.B #$03                          ;; 01F6C8 : A9 03       ; \ Play sound effect 
CODE_01F6CA:          STA.W $1DFC                         ;; 01F6CA : 8D FC 1D    ; / 
CODE_01F6CD:          LDA.B #$40                          ;; 01F6CD : A9 40       ;
CODE_01F6CF:          STA.W $14AA                         ;; 01F6CF : 8D AA 14    ;
CODE_01F6D2:          LDA.B #$02                          ;; 01F6D2 : A9 02       ; \ Set Yoshi wing ability 
CODE_01F6D4:          STA.W RAM_YoshiHasWings             ;; 01F6D4 : 8D 1E 14    ; / 
CODE_01F6D7:          LDA.B #$00                          ;; 01F6D7 : A9 00       ;
CODE_01F6D9:          STA.W $14C8,Y                       ;; 01F6D9 : 99 C8 14    ;
Return01F6DC:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01F6DD:          CMP.B #$4E                          ;; 01F6DD : C9 4E       ;
CODE_01F6DF:          BEQ CODE_01F6E5                     ;; 01F6DF : F0 04       ;
CODE_01F6E1:          CMP.B #$4D                          ;; 01F6E1 : C9 4D       ;
CODE_01F6E3:          BNE CODE_01F6EC                     ;; 01F6E3 : D0 07       ;
CODE_01F6E5:          LDA.W RAM_SpriteState,Y             ;; 01F6E5 : B9 C2 00    ;
CODE_01F6E8:          CMP.B #$02                          ;; 01F6E8 : C9 02       ;
CODE_01F6EA:          BCC Return01F6DC                    ;; 01F6EA : 90 F0       ;
CODE_01F6EC:          LDA $05                             ;; 01F6EC : A5 05       ;
CODE_01F6EE:          CLC                                 ;; 01F6EE : 18          ;
CODE_01F6EF:          ADC.B #$0D                          ;; 01F6EF : 69 0D       ;
CODE_01F6F1:          CMP $01                             ;; 01F6F1 : C5 01       ;
CODE_01F6F3:          BMI Return01F74B                    ;; 01F6F3 : 30 56       ;
CODE_01F6F5:          LDA.W $14C8,Y                       ;; 01F6F5 : B9 C8 14    ;
CODE_01F6F8:          CMP.B #$0A                          ;; 01F6F8 : C9 0A       ;
CODE_01F6FA:          BNE CODE_01F70E                     ;; 01F6FA : D0 12       ;
CODE_01F6FC:          PHX                                 ;; 01F6FC : DA          ;
CODE_01F6FD:          TYX                                 ;; 01F6FD : BB          ;
CODE_01F6FE:          JSR.W SubHorizPos                   ;; 01F6FE : 20 30 AD    ;
CODE_01F701:          STY $00                             ;; 01F701 : 84 00       ;
CODE_01F703:          LDA RAM_SpriteSpeedX,X              ;; 01F703 : B5 B6       ;
CODE_01F705:          PLX                                 ;; 01F705 : FA          ;
CODE_01F706:          ASL                                 ;; 01F706 : 0A          ;
CODE_01F707:          ROL                                 ;; 01F707 : 2A          ;
CODE_01F708:          AND.B #$01                          ;; 01F708 : 29 01       ;
CODE_01F70A:          CMP $00                             ;; 01F70A : C5 00       ;
CODE_01F70C:          BNE Return01F74B                    ;; 01F70C : D0 3D       ;
CODE_01F70E:          LDA.W $1490                         ;; 01F70E : AD 90 14    ; \ Branch if Mario has star 
CODE_01F711:          BNE Return01F74B                    ;; 01F711 : D0 38       ; / 
CODE_01F713:          LDA.B #$10                          ;; 01F713 : A9 10       ;
CODE_01F715:          STA.W $163E,X                       ;; 01F715 : 9D 3E 16    ;
CODE_01F718:          LDA.B #$03                          ;; 01F718 : A9 03       ; \ Play sound effect 
CODE_01F71A:          STA.W $1DFA                         ;; 01F71A : 8D FA 1D    ; / 
CODE_01F71D:          LDA.B #$13                          ;; 01F71D : A9 13       ; \ Play sound effect 
CODE_01F71F:          STA.W $1DFC                         ;; 01F71F : 8D FC 1D    ; / 
CODE_01F722:          LDA.B #$02                          ;; 01F722 : A9 02       ;
CODE_01F724:          STA RAM_SpriteState,X               ;; 01F724 : 95 C2       ;
CODE_01F726:          STZ.W RAM_OnYoshi                   ;; 01F726 : 9C 7A 18    ;
CODE_01F729:          LDA.B #$C0                          ;; 01F729 : A9 C0       ;
CODE_01F72B:          STA RAM_MarioSpeedY                 ;; 01F72B : 85 7D       ;
CODE_01F72D:          STZ RAM_MarioSpeedX                 ;; 01F72D : 64 7B       ;
CODE_01F72F:          JSR.W SubHorizPos                   ;; 01F72F : 20 30 AD    ;
CODE_01F732:          LDA.W DATA_01EBBE,Y                 ;; 01F732 : B9 BE EB    ;
CODE_01F735:          STA RAM_SpriteSpeedX,X              ;; 01F735 : 95 B6       ;
CODE_01F737:          STZ.W $1594,X                       ;; 01F737 : 9E 94 15    ;
CODE_01F73A:          STZ.W $151C,X                       ;; 01F73A : 9E 1C 15    ;
CODE_01F73D:          STZ.W $18AE                         ;; 01F73D : 9C AE 18    ;
CODE_01F740:          STZ.W RAM_OWHasYoshi                ;; 01F740 : 9C C1 0D    ;
CODE_01F743:          LDA.B #$30                          ;; 01F743 : A9 30       ; \ Mario invincible timer = #$30 
CODE_01F745:          STA.W $1497                         ;; 01F745 : 8D 97 14    ; / 
CODE_01F748:          JSR.W CODE_01EDCC                   ;; 01F748 : 20 CC ED    ;
Return01F74B:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01F74C:          LDA.B #$08                          ;; 01F74C : A9 08       ; \ Sprite status = Normal 
CODE_01F74E:          STA.W $14C8,X                       ;; 01F74E : 9D C8 14    ; / 
CODE_01F751:          LDA.B #$20                          ;; 01F751 : A9 20       ;
CODE_01F753:          STA.W $1540,X                       ;; 01F753 : 9D 40 15    ;
CODE_01F756:          LDA.B #$0A                          ;; 01F756 : A9 0A       ; \ Play sound effect 
CODE_01F758:          STA.W $1DFC                         ;; 01F758 : 8D FC 1D    ; / 
Return01F75B:         RTL                                 ;; ?QPWZ? : 6B          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
DATA_01F75C:          .db $00,$01,$01,$01                 ;; 01F75C               ;
                                                          ;;                      ;
YoshiEggTiles:        .db $62,$02,$02,$00                 ;; ?QPWZ?               ;
                                                          ;;                      ;
YoshiEgg:             LDA.W $187B,X                       ;; ?QPWZ? : BD 7B 18    ;
CODE_01F767:          BEQ CODE_01F799                     ;; 01F767 : F0 30       ;
CODE_01F769:          JSR.W IsSprOffScreen                ;; 01F769 : 20 CB 80    ;
CODE_01F76C:          BNE CODE_01F78D                     ;; 01F76C : D0 1F       ;
CODE_01F76E:          JSR.W SubHorizPos                   ;; 01F76E : 20 30 AD    ;
CODE_01F771:          LDA $0F                             ;; 01F771 : A5 0F       ;
CODE_01F773:          CLC                                 ;; 01F773 : 18          ;
CODE_01F774:          ADC.B #$20                          ;; 01F774 : 69 20       ;
CODE_01F776:          CMP.B #$40                          ;; 01F776 : C9 40       ;
CODE_01F778:          BCS CODE_01F78D                     ;; 01F778 : B0 13       ;
CODE_01F77A:          STZ.W $187B,X                       ;; 01F77A : 9E 7B 18    ;
CODE_01F77D:          JSL.L CODE_01F751                   ;; 01F77D : 22 51 F7 01 ;
CODE_01F781:          LDA.B #$2D                          ;; 01F781 : A9 2D       ;
CODE_01F783:          LDY.W $18E2                         ;; 01F783 : AC E2 18    ;
CODE_01F786:          BEQ CODE_01F78A                     ;; 01F786 : F0 02       ;
CODE_01F788:          LDA.B #$78                          ;; 01F788 : A9 78       ;
CODE_01F78A:          STA.W $151C,X                       ;; 01F78A : 9D 1C 15    ;
CODE_01F78D:          JSR.W SubSprGfx2Entry1              ;; 01F78D : 20 0D 9F    ;
CODE_01F790:          LDY.W RAM_SprOAMIndex,X             ;; 01F790 : BC EA 15    ; Y = Index into sprite OAM 
CODE_01F793:          LDA.B #$00                          ;; 01F793 : A9 00       ;
CODE_01F795:          STA.W OAM_Tile,Y                    ;; 01F795 : 99 02 03    ;
Return01F798:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01F799:          LDA.W $1540,X                       ;; 01F799 : BD 40 15    ;
CODE_01F79C:          BEQ CODE_01F7C2                     ;; 01F79C : F0 24       ;
CODE_01F79E:          LSR                                 ;; 01F79E : 4A          ;
CODE_01F79F:          LSR                                 ;; 01F79F : 4A          ;
CODE_01F7A0:          LSR                                 ;; 01F7A0 : 4A          ;
CODE_01F7A1:          TAY                                 ;; 01F7A1 : A8          ;
CODE_01F7A2:          LDA.W YoshiEggTiles,Y               ;; 01F7A2 : B9 60 F7    ;
CODE_01F7A5:          PHA                                 ;; 01F7A5 : 48          ;
CODE_01F7A6:          LDA.W DATA_01F75C,Y                 ;; 01F7A6 : B9 5C F7    ;
CODE_01F7A9:          PHA                                 ;; 01F7A9 : 48          ;
CODE_01F7AA:          JSR.W SubSprGfx2Entry1              ;; 01F7AA : 20 0D 9F    ;
CODE_01F7AD:          LDY.W RAM_SprOAMIndex,X             ;; 01F7AD : BC EA 15    ; Y = Index into sprite OAM 
CODE_01F7B0:          PLA                                 ;; 01F7B0 : 68          ;
CODE_01F7B1:          STA $00                             ;; 01F7B1 : 85 00       ;
CODE_01F7B3:          LDA.W OAM_Prop,Y                    ;; 01F7B3 : B9 03 03    ;
CODE_01F7B6:          AND.B #$FE                          ;; 01F7B6 : 29 FE       ;
CODE_01F7B8:          ORA $00                             ;; 01F7B8 : 05 00       ;
CODE_01F7BA:          STA.W OAM_Prop,Y                    ;; 01F7BA : 99 03 03    ;
CODE_01F7BD:          PLA                                 ;; 01F7BD : 68          ;
CODE_01F7BE:          STA.W OAM_Tile,Y                    ;; 01F7BE : 99 02 03    ;
Return01F7C1:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01F7C2:          JSR.W CODE_01F7C8                   ;; 01F7C2 : 20 C8 F7    ;
CODE_01F7C5:          JMP.W CODE_01F83D                   ;; 01F7C5 : 4C 3D F8    ;
                                                          ;;                      ;
CODE_01F7C8:          JSR.W IsSprOffScreen                ;; 01F7C8 : 20 CB 80    ;
CODE_01F7CB:          BNE Return01F82C                    ;; 01F7CB : D0 5F       ;
CODE_01F7CD:          LDA RAM_SpriteXLo,X                 ;; 01F7CD : B5 E4       ;
CODE_01F7CF:          STA $00                             ;; 01F7CF : 85 00       ;
CODE_01F7D1:          LDA RAM_SpriteYLo,X                 ;; 01F7D1 : B5 D8       ;
CODE_01F7D3:          STA $02                             ;; 01F7D3 : 85 02       ;
CODE_01F7D5:          LDA.W RAM_SpriteYHi,X               ;; 01F7D5 : BD D4 14    ;
CODE_01F7D8:          STA $03                             ;; 01F7D8 : 85 03       ;
CODE_01F7DA:          PHX                                 ;; 01F7DA : DA          ;
CODE_01F7DB:          LDY.B #$03                          ;; 01F7DB : A0 03       ;
CODE_01F7DD:          LDX.B #$0B                          ;; 01F7DD : A2 0B       ;
CODE_01F7DF:          LDA.W $17F0,X                       ;; 01F7DF : BD F0 17    ;
CODE_01F7E2:          BEQ CODE_01F7F4                     ;; 01F7E2 : F0 10       ;
CODE_01F7E4:          DEX                                 ;; 01F7E4 : CA          ;
CODE_01F7E5:          BPL CODE_01F7DF                     ;; 01F7E5 : 10 F8       ;
CODE_01F7E7:          DEC.W $185D                         ;; 01F7E7 : CE 5D 18    ;
CODE_01F7EA:          BPL CODE_01F7F1                     ;; 01F7EA : 10 05       ;
CODE_01F7EC:          LDA.B #$0B                          ;; 01F7EC : A9 0B       ;
CODE_01F7EE:          STA.W $185D                         ;; 01F7EE : 8D 5D 18    ;
CODE_01F7F1:          LDX.W $185D                         ;; 01F7F1 : AE 5D 18    ;
CODE_01F7F4:          LDA.B #$03                          ;; 01F7F4 : A9 03       ;
CODE_01F7F6:          STA.W $17F0,X                       ;; 01F7F6 : 9D F0 17    ;
CODE_01F7F9:          LDA $00                             ;; 01F7F9 : A5 00       ;
CODE_01F7FB:          CLC                                 ;; 01F7FB : 18          ;
CODE_01F7FC:          ADC.W DATA_01F831,Y                 ;; 01F7FC : 79 31 F8    ;
CODE_01F7FF:          STA.W $1808,X                       ;; 01F7FF : 9D 08 18    ;
CODE_01F802:          LDA $02                             ;; 01F802 : A5 02       ;
CODE_01F804:          CLC                                 ;; 01F804 : 18          ;
CODE_01F805:          ADC.W DATA_01F82D,Y                 ;; 01F805 : 79 2D F8    ;
CODE_01F808:          STA.W $17FC,X                       ;; 01F808 : 9D FC 17    ;
CODE_01F80B:          LDA $03                             ;; 01F80B : A5 03       ;
CODE_01F80D:          STA.W $1814,X                       ;; 01F80D : 9D 14 18    ;
CODE_01F810:          LDA.W DATA_01F835,Y                 ;; 01F810 : B9 35 F8    ;
CODE_01F813:          STA.W $1820,X                       ;; 01F813 : 9D 20 18    ;
CODE_01F816:          LDA.W DATA_01F839,Y                 ;; 01F816 : B9 39 F8    ;
CODE_01F819:          STA.W $182C,X                       ;; 01F819 : 9D 2C 18    ;
CODE_01F81C:          TYA                                 ;; 01F81C : 98          ;
CODE_01F81D:          ASL                                 ;; 01F81D : 0A          ;
CODE_01F81E:          ASL                                 ;; 01F81E : 0A          ;
CODE_01F81F:          ASL                                 ;; 01F81F : 0A          ;
CODE_01F820:          ASL                                 ;; 01F820 : 0A          ;
CODE_01F821:          ASL                                 ;; 01F821 : 0A          ;
CODE_01F822:          ASL                                 ;; 01F822 : 0A          ;
CODE_01F823:          ORA.B #$28                          ;; 01F823 : 09 28       ;
CODE_01F825:          STA.W $1850,X                       ;; 01F825 : 9D 50 18    ;
CODE_01F828:          DEY                                 ;; 01F828 : 88          ;
CODE_01F829:          BPL CODE_01F7E4                     ;; 01F829 : 10 B9       ;
CODE_01F82B:          PLX                                 ;; 01F82B : FA          ;
Return01F82C:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
DATA_01F82D:          .db $00,$00,$08,$08                 ;; 01F82D               ;
                                                          ;;                      ;
DATA_01F831:          .db $00,$08,$00,$08                 ;; 01F831               ;
                                                          ;;                      ;
DATA_01F835:          .db $E8,$E8,$F4,$F4                 ;; 01F835               ;
                                                          ;;                      ;
DATA_01F839:          .db $FA,$06,$FD,$03                 ;; 01F839               ;
                                                          ;;                      ;
CODE_01F83D:          LDA.W $151C,X                       ;; 01F83D : BD 1C 15    ;
CODE_01F840:          STA RAM_SpriteNum,X                 ;; 01F840 : 95 9E       ;
CODE_01F842:          CMP.B #$35                          ;; 01F842 : C9 35       ;
CODE_01F844:          BEQ CODE_01F86C                     ;; 01F844 : F0 26       ;
CODE_01F846:          CMP.B #$2D                          ;; 01F846 : C9 2D       ;
CODE_01F848:          BNE CODE_01F867                     ;; 01F848 : D0 1D       ;
CODE_01F84A:          LDA.B #$09                          ;; 01F84A : A9 09       ; \ Sprite status = Carryable 
CODE_01F84C:          STA.W $14C8,X                       ;; 01F84C : 9D C8 14    ; / 
CODE_01F84F:          LDA.W RAM_SpritePal,X               ;; 01F84F : BD F6 15    ;
CODE_01F852:          AND.B #$0E                          ;; 01F852 : 29 0E       ;
CODE_01F854:          PHA                                 ;; 01F854 : 48          ;
CODE_01F855:          JSL.L InitSpriteTables              ;; 01F855 : 22 D2 F7 07 ;
CODE_01F859:          PLA                                 ;; 01F859 : 68          ;
CODE_01F85A:          STA $00                             ;; 01F85A : 85 00       ;
CODE_01F85C:          LDA.W RAM_SpritePal,X               ;; 01F85C : BD F6 15    ;
CODE_01F85F:          AND.B #$F1                          ;; 01F85F : 29 F1       ;
CODE_01F861:          ORA $00                             ;; 01F861 : 05 00       ;
CODE_01F863:          STA.W RAM_SpritePal,X               ;; 01F863 : 9D F6 15    ;
Return01F866:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01F867:          JSL.L InitSpriteTables              ;; 01F867 : 22 D2 F7 07 ;
Return01F86B:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01F86C:          JSL.L InitSpriteTables              ;; 01F86C : 22 D2 F7 07 ;
CODE_01F870:          JMP.W CODE_01A2B5                   ;; 01F870 : 4C B5 A2    ;
                                                          ;;                      ;
                                                          ;;                      ;
DATA_01F873:          .db $08,$F8                         ;; 01F873               ;
                                                          ;;                      ;
UnusedInit:           JSR.W FaceMario                     ;; ?QPWZ? : 20 7C 85    ;
ADDR_01F878:          STA.W $1534,X                       ;; 01F878 : 9D 34 15    ;
Return01F87B:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
InitEerie:            JSR.W SubHorizPos                   ;; ?QPWZ? : 20 30 AD    ;
CODE_01F87F:          LDA.W EerieSpeedX,Y                 ;; 01F87F : B9 8C F8    ;
CODE_01F882:          STA RAM_SpriteSpeedX,X              ;; 01F882 : 95 B6       ;
InitBigBoo:           JSL.L GetRand                       ;; ?QPWZ? : 22 F9 AC 01 ;
CODE_01F888:          STA.W $1570,X                       ;; 01F888 : 9D 70 15    ;
Return01F88B:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
EerieSpeedX:          .db $10,$F0                         ;; ?QPWZ?               ;
                                                          ;;                      ;
EerieSpeedY:          .db $18,$E8                         ;; ?QPWZ?               ;
                                                          ;;                      ;
Eerie:                LDA.W $14C8,X                       ;; ?QPWZ? : BD C8 14    ;
CODE_01F893:          CMP.B #$08                          ;; 01F893 : C9 08       ;
CODE_01F895:          BNE CODE_01F8C9                     ;; 01F895 : D0 32       ;
CODE_01F897:          LDA RAM_SpritesLocked               ;; 01F897 : A5 9D       ; \ Branch if sprites locked 
CODE_01F899:          BNE CODE_01F8C9                     ;; 01F899 : D0 2E       ; / 
CODE_01F89B:          JSR.W SubSprXPosNoGrvty             ;; 01F89B : 20 CC AB    ;
CODE_01F89E:          LDA RAM_SpriteNum,X                 ;; 01F89E : B5 9E       ;
CODE_01F8A0:          CMP.B #$39                          ;; 01F8A0 : C9 39       ;
CODE_01F8A2:          BNE CODE_01F8C0                     ;; 01F8A2 : D0 1C       ;
CODE_01F8A4:          LDA RAM_SpriteState,X               ;; 01F8A4 : B5 C2       ;
CODE_01F8A6:          AND.B #$01                          ;; 01F8A6 : 29 01       ;
CODE_01F8A8:          TAY                                 ;; 01F8A8 : A8          ;
CODE_01F8A9:          LDA RAM_SpriteSpeedY,X              ;; 01F8A9 : B5 AA       ;
CODE_01F8AB:          CLC                                 ;; 01F8AB : 18          ;
CODE_01F8AC:          ADC.W DATA_01EBB4,Y                 ;; 01F8AC : 79 B4 EB    ;
CODE_01F8AF:          STA RAM_SpriteSpeedY,X              ;; 01F8AF : 95 AA       ;
CODE_01F8B1:          CMP.W EerieSpeedY,Y                 ;; 01F8B1 : D9 8E F8    ;
CODE_01F8B4:          BNE CODE_01F8B8                     ;; 01F8B4 : D0 02       ;
CODE_01F8B6:          INC RAM_SpriteState,X               ;; 01F8B6 : F6 C2       ;
CODE_01F8B8:          JSR.W SubSprYPosNoGrvty             ;; 01F8B8 : 20 D8 AB    ;
CODE_01F8BB:          JSR.W SubOffscreen3Bnk1             ;; 01F8BB : 20 21 AC    ;
CODE_01F8BE:          BRA CODE_01F8C3                     ;; 01F8BE : 80 03       ;
                                                          ;;                      ;
CODE_01F8C0:          JSR.W SubOffscreen0Bnk1             ;; 01F8C0 : 20 31 AC    ;
CODE_01F8C3:          JSR.W MarioSprInteractRt            ;; 01F8C3 : 20 E4 A7    ;
CODE_01F8C6:          JSR.W SetAnimationFrame             ;; 01F8C6 : 20 5F 8E    ;
CODE_01F8C9:          JSR.W UpdateDirection               ;; 01F8C9 : 20 15 9A    ;
CODE_01F8CC:          JMP.W SubSprGfx2Entry1              ;; 01F8CC : 4C 0D 9F    ;
                                                          ;;                      ;
                                                          ;;                      ;
DATA_01F8CF:          .db $08,$F8                         ;; 01F8CF               ;
                                                          ;;                      ;
DATA_01F8D1:          .db $01,$02,$02,$01                 ;; 01F8D1               ;
                                                          ;;                      ;
BigBoo:               JSR.W SubOffscreen1Bnk1             ;; ?QPWZ? : 20 2B AC    ;
CODE_01F8D8:          LDA.B #$20                          ;; 01F8D8 : A9 20       ;
CODE_01F8DA:          BRA CODE_01F8E1                     ;; 01F8DA : 80 05       ;
                                                          ;;                      ;
Boo+BooBlock:         JSR.W SubOffscreen0Bnk1             ;; ?QPWZ? : 20 31 AC    ;
CODE_01F8DF:          LDA.B #$10                          ;; 01F8DF : A9 10       ;
CODE_01F8E1:          STA.W $18B6                         ;; 01F8E1 : 8D B6 18    ;
CODE_01F8E4:          LDA.W $14C8,X                       ;; 01F8E4 : BD C8 14    ;
CODE_01F8E7:          CMP.B #$08                          ;; 01F8E7 : C9 08       ;
CODE_01F8E9:          BNE CODE_01F8EF                     ;; 01F8E9 : D0 04       ;
CODE_01F8EB:          LDA RAM_SpritesLocked               ;; 01F8EB : A5 9D       ;
CODE_01F8ED:          BEQ CODE_01F8F2                     ;; 01F8ED : F0 03       ;
CODE_01F8EF:          JMP.W CODE_01F9CE                   ;; 01F8EF : 4C CE F9    ;
                                                          ;;                      ;
CODE_01F8F2:          JSR.W SubHorizPos                   ;; 01F8F2 : 20 30 AD    ;
CODE_01F8F5:          LDA.W $1540,X                       ;; 01F8F5 : BD 40 15    ;
CODE_01F8F8:          BNE CODE_01F914                     ;; 01F8F8 : D0 1A       ;
CODE_01F8FA:          LDA.B #$20                          ;; 01F8FA : A9 20       ;
CODE_01F8FC:          STA.W $1540,X                       ;; 01F8FC : 9D 40 15    ;
CODE_01F8FF:          LDA RAM_SpriteState,X               ;; 01F8FF : B5 C2       ;
CODE_01F901:          BEQ CODE_01F90C                     ;; 01F901 : F0 09       ;
CODE_01F903:          LDA $0F                             ;; 01F903 : A5 0F       ;
CODE_01F905:          CLC                                 ;; 01F905 : 18          ;
CODE_01F906:          ADC.B #$0A                          ;; 01F906 : 69 0A       ;
CODE_01F908:          CMP.B #$14                          ;; 01F908 : C9 14       ;
CODE_01F90A:          BCC CODE_01F92F                     ;; 01F90A : 90 23       ;
CODE_01F90C:          STZ RAM_SpriteState,X               ;; 01F90C : 74 C2       ;
CODE_01F90E:          CPY RAM_MarioDirection              ;; 01F90E : C4 76       ;
CODE_01F910:          BNE CODE_01F914                     ;; 01F910 : D0 02       ;
CODE_01F912:          INC RAM_SpriteState,X               ;; 01F912 : F6 C2       ;
CODE_01F914:          LDA $0F                             ;; 01F914 : A5 0F       ;
CODE_01F916:          CLC                                 ;; 01F916 : 18          ;
CODE_01F917:          ADC.B #$0A                          ;; 01F917 : 69 0A       ;
CODE_01F919:          CMP.B #$14                          ;; 01F919 : C9 14       ;
CODE_01F91B:          BCC CODE_01F92F                     ;; 01F91B : 90 12       ;
CODE_01F91D:          LDA.W $15AC,X                       ;; 01F91D : BD AC 15    ;
CODE_01F920:          BNE CODE_01F971                     ;; 01F920 : D0 4F       ;
CODE_01F922:          TYA                                 ;; 01F922 : 98          ;
CODE_01F923:          CMP.W RAM_SpriteDir,X               ;; 01F923 : DD 7C 15    ;
CODE_01F926:          BEQ CODE_01F92F                     ;; 01F926 : F0 07       ;
CODE_01F928:          LDA.B #$1F                          ;; 01F928 : A9 1F       ; \ Set turning timer 
CODE_01F92A:          STA.W $15AC,X                       ;; 01F92A : 9D AC 15    ; / 
CODE_01F92D:          BRA CODE_01F971                     ;; 01F92D : 80 42       ;
                                                          ;;                      ;
CODE_01F92F:          STZ.W $1602,X                       ;; 01F92F : 9E 02 16    ;
CODE_01F932:          LDA RAM_SpriteState,X               ;; 01F932 : B5 C2       ;
CODE_01F934:          BEQ CODE_01F989                     ;; 01F934 : F0 53       ;
CODE_01F936:          LDA.B #$03                          ;; 01F936 : A9 03       ;
CODE_01F938:          STA.W $1602,X                       ;; 01F938 : 9D 02 16    ;
CODE_01F93B:          LDY RAM_SpriteNum,X                 ;; 01F93B : B4 9E       ;
CODE_01F93D:          CPY.B #$28                          ;; 01F93D : C0 28       ;
CODE_01F93F:          BEQ CODE_01F948                     ;; 01F93F : F0 07       ;
CODE_01F941:          LDA.B #$00                          ;; 01F941 : A9 00       ;
CODE_01F943:          CPY.B #$AF                          ;; 01F943 : C0 AF       ;
CODE_01F945:          BEQ CODE_01F948                     ;; 01F945 : F0 01       ;
CODE_01F947:          INC A                               ;; 01F947 : 1A          ;
CODE_01F948:          AND RAM_FrameCounter                ;; 01F948 : 25 13       ;
CODE_01F94A:          BNE CODE_01F96F                     ;; 01F94A : D0 23       ;
CODE_01F94C:          INC.W $1570,X                       ;; 01F94C : FE 70 15    ;
CODE_01F94F:          LDA.W $1570,X                       ;; 01F94F : BD 70 15    ;
CODE_01F952:          BNE CODE_01F959                     ;; 01F952 : D0 05       ;
CODE_01F954:          LDA.B #$20                          ;; 01F954 : A9 20       ;
CODE_01F956:          STA.W $1558,X                       ;; 01F956 : 9D 58 15    ;
CODE_01F959:          LDA RAM_SpriteSpeedX,X              ;; 01F959 : B5 B6       ;
CODE_01F95B:          BEQ CODE_01F962                     ;; 01F95B : F0 05       ;
CODE_01F95D:          BPL CODE_01F961                     ;; 01F95D : 10 02       ;
CODE_01F95F:          INC A                               ;; 01F95F : 1A          ;
CODE_01F960:          INC A                               ;; 01F960 : 1A          ;
CODE_01F961:          DEC A                               ;; 01F961 : 3A          ;
CODE_01F962:          STA RAM_SpriteSpeedX,X              ;; 01F962 : 95 B6       ;
CODE_01F964:          LDA RAM_SpriteSpeedY,X              ;; 01F964 : B5 AA       ;
CODE_01F966:          BEQ CODE_01F96D                     ;; 01F966 : F0 05       ;
CODE_01F968:          BPL CODE_01F96C                     ;; 01F968 : 10 02       ;
CODE_01F96A:          INC A                               ;; 01F96A : 1A          ;
CODE_01F96B:          INC A                               ;; 01F96B : 1A          ;
CODE_01F96C:          DEC A                               ;; 01F96C : 3A          ;
CODE_01F96D:          STA RAM_SpriteSpeedY,X              ;; 01F96D : 95 AA       ;
CODE_01F96F:          BRA CODE_01F9C8                     ;; 01F96F : 80 57       ;
                                                          ;;                      ;
CODE_01F971:          CMP.B #$10                          ;; 01F971 : C9 10       ;
CODE_01F973:          BNE CODE_01F97F                     ;; 01F973 : D0 0A       ;
CODE_01F975:          PHA                                 ;; 01F975 : 48          ;
CODE_01F976:          LDA.W RAM_SpriteDir,X               ;; 01F976 : BD 7C 15    ;
CODE_01F979:          EOR.B #$01                          ;; 01F979 : 49 01       ;
CODE_01F97B:          STA.W RAM_SpriteDir,X               ;; 01F97B : 9D 7C 15    ;
CODE_01F97E:          PLA                                 ;; 01F97E : 68          ;
CODE_01F97F:          LSR                                 ;; 01F97F : 4A          ;
CODE_01F980:          LSR                                 ;; 01F980 : 4A          ;
CODE_01F981:          LSR                                 ;; 01F981 : 4A          ;
CODE_01F982:          TAY                                 ;; 01F982 : A8          ;
CODE_01F983:          LDA.W DATA_01F8D1,Y                 ;; 01F983 : B9 D1 F8    ;
CODE_01F986:          STA.W $1602,X                       ;; 01F986 : 9D 02 16    ;
CODE_01F989:          STZ.W $1570,X                       ;; 01F989 : 9E 70 15    ;
CODE_01F98C:          LDA RAM_FrameCounter                ;; 01F98C : A5 13       ;
CODE_01F98E:          AND.B #$07                          ;; 01F98E : 29 07       ;
CODE_01F990:          BNE CODE_01F9C8                     ;; 01F990 : D0 36       ;
CODE_01F992:          JSR.W SubHorizPos                   ;; 01F992 : 20 30 AD    ;
CODE_01F995:          LDA RAM_SpriteSpeedX,X              ;; 01F995 : B5 B6       ;
CODE_01F997:          CMP.W DATA_01F8CF,Y                 ;; 01F997 : D9 CF F8    ;
CODE_01F99A:          BEQ CODE_01F9A2                     ;; 01F99A : F0 06       ;
CODE_01F99C:          CLC                                 ;; 01F99C : 18          ;
CODE_01F99D:          ADC.W DATA_01EBB4,Y                 ;; 01F99D : 79 B4 EB    ;
CODE_01F9A0:          STA RAM_SpriteSpeedX,X              ;; 01F9A0 : 95 B6       ;
CODE_01F9A2:          LDA $D3                             ;; 01F9A2 : A5 D3       ;
CODE_01F9A4:          PHA                                 ;; 01F9A4 : 48          ;
CODE_01F9A5:          SEC                                 ;; 01F9A5 : 38          ;
CODE_01F9A6:          SBC.W $18B6                         ;; 01F9A6 : ED B6 18    ;
CODE_01F9A9:          STA $D3                             ;; 01F9A9 : 85 D3       ;
CODE_01F9AB:          LDA $D4                             ;; 01F9AB : A5 D4       ;
CODE_01F9AD:          PHA                                 ;; 01F9AD : 48          ;
CODE_01F9AE:          SBC.B #$00                          ;; 01F9AE : E9 00       ;
CODE_01F9B0:          STA $D4                             ;; 01F9B0 : 85 D4       ;
CODE_01F9B2:          JSR.W CODE_01AD42                   ;; 01F9B2 : 20 42 AD    ;
CODE_01F9B5:          PLA                                 ;; 01F9B5 : 68          ;
CODE_01F9B6:          STA $D4                             ;; 01F9B6 : 85 D4       ;
CODE_01F9B8:          PLA                                 ;; 01F9B8 : 68          ;
CODE_01F9B9:          STA $D3                             ;; 01F9B9 : 85 D3       ;
CODE_01F9BB:          LDA RAM_SpriteSpeedY,X              ;; 01F9BB : B5 AA       ;
CODE_01F9BD:          CMP.W DATA_01F8CF,Y                 ;; 01F9BD : D9 CF F8    ;
CODE_01F9C0:          BEQ CODE_01F9C8                     ;; 01F9C0 : F0 06       ;
CODE_01F9C2:          CLC                                 ;; 01F9C2 : 18          ;
CODE_01F9C3:          ADC.W DATA_01EBB4,Y                 ;; 01F9C3 : 79 B4 EB    ;
CODE_01F9C6:          STA RAM_SpriteSpeedY,X              ;; 01F9C6 : 95 AA       ;
CODE_01F9C8:          JSR.W SubSprXPosNoGrvty             ;; 01F9C8 : 20 CC AB    ;
CODE_01F9CB:          JSR.W SubSprYPosNoGrvty             ;; 01F9CB : 20 D8 AB    ;
CODE_01F9CE:          LDA RAM_SpriteNum,X                 ;; 01F9CE : B5 9E       ;
CODE_01F9D0:          CMP.B #$AF                          ;; 01F9D0 : C9 AF       ;
CODE_01F9D2:          BNE CODE_01FA3D                     ;; 01F9D2 : D0 69       ;
CODE_01F9D4:          LDA RAM_SpriteSpeedX,X              ;; 01F9D4 : B5 B6       ;
CODE_01F9D6:          BPL CODE_01F9DB                     ;; 01F9D6 : 10 03       ;
CODE_01F9D8:          EOR.B #$FF                          ;; 01F9D8 : 49 FF       ;
CODE_01F9DA:          INC A                               ;; 01F9DA : 1A          ;
CODE_01F9DB:          LDY.B #$00                          ;; 01F9DB : A0 00       ;
CODE_01F9DD:          CMP.B #$08                          ;; 01F9DD : C9 08       ;
CODE_01F9DF:          BCS CODE_01FA09                     ;; 01F9DF : B0 28       ;
CODE_01F9E1:          PHA                                 ;; 01F9E1 : 48          ;
CODE_01F9E2:          LDA.W RAM_Tweaker1662,X             ;; 01F9E2 : BD 62 16    ;
CODE_01F9E5:          PHA                                 ;; 01F9E5 : 48          ;
CODE_01F9E6:          LDA.W RAM_Tweaker167A,X             ;; 01F9E6 : BD 7A 16    ;
CODE_01F9E9:          PHA                                 ;; 01F9E9 : 48          ;
CODE_01F9EA:          ORA.B #$80                          ;; 01F9EA : 09 80       ;
CODE_01F9EC:          STA.W RAM_Tweaker167A,X             ;; 01F9EC : 9D 7A 16    ;
CODE_01F9EF:          LDA.B #$0C                          ;; 01F9EF : A9 0C       ;
CODE_01F9F1:          STA.W RAM_Tweaker1662,X             ;; 01F9F1 : 9D 62 16    ;
CODE_01F9F4:          JSR.W CODE_01B457                   ;; 01F9F4 : 20 57 B4    ;
CODE_01F9F7:          PLA                                 ;; 01F9F7 : 68          ;
CODE_01F9F8:          STA.W RAM_Tweaker167A,X             ;; 01F9F8 : 9D 7A 16    ;
CODE_01F9FB:          PLA                                 ;; 01F9FB : 68          ;
CODE_01F9FC:          STA.W RAM_Tweaker1662,X             ;; 01F9FC : 9D 62 16    ;
CODE_01F9FF:          PLA                                 ;; 01F9FF : 68          ;
CODE_01FA00:          LDY.B #$01                          ;; 01FA00 : A0 01       ;
CODE_01FA02:          CMP.B #$04                          ;; 01FA02 : C9 04       ;
CODE_01FA04:          BCS CODE_01FA15                     ;; 01FA04 : B0 0F       ;
CODE_01FA06:          INY                                 ;; 01FA06 : C8          ;
CODE_01FA07:          BRA CODE_01FA15                     ;; 01FA07 : 80 0C       ;
                                                          ;;                      ;
CODE_01FA09:          LDA.W $14C8,X                       ;; 01FA09 : BD C8 14    ;
CODE_01FA0C:          CMP.B #$08                          ;; 01FA0C : C9 08       ;
CODE_01FA0E:          BNE CODE_01FA15                     ;; 01FA0E : D0 05       ;
CODE_01FA10:          PHY                                 ;; 01FA10 : 5A          ;
CODE_01FA11:          JSR.W MarioSprInteractRt            ;; 01FA11 : 20 E4 A7    ;
CODE_01FA14:          PLY                                 ;; 01FA14 : 7A          ;
CODE_01FA15:          TYA                                 ;; 01FA15 : 98          ;
CODE_01FA16:          STA.W $1602,X                       ;; 01FA16 : 9D 02 16    ;
CODE_01FA19:          JSR.W SubSprGfx2Entry1              ;; 01FA19 : 20 0D 9F    ;
CODE_01FA1C:          LDA.W $1602,X                       ;; 01FA1C : BD 02 16    ;
CODE_01FA1F:          LDY.W RAM_SprOAMIndex,X             ;; 01FA1F : BC EA 15    ; Y = Index into sprite OAM 
CODE_01FA22:          PHX                                 ;; 01FA22 : DA          ;
CODE_01FA23:          TAX                                 ;; 01FA23 : AA          ;
CODE_01FA24:          LDA.W BooBlockTiles,X               ;; 01FA24 : BD 37 FA    ;
CODE_01FA27:          STA.W OAM_Tile,Y                    ;; 01FA27 : 99 02 03    ;
CODE_01FA2A:          LDA.W OAM_Prop,Y                    ;; 01FA2A : B9 03 03    ;
CODE_01FA2D:          AND.B #$F1                          ;; 01FA2D : 29 F1       ;
CODE_01FA2F:          ORA.W BooBlockGfxProp,X             ;; 01FA2F : 1D 3A FA    ;
CODE_01FA32:          STA.W OAM_Prop,Y                    ;; 01FA32 : 99 03 03    ;
CODE_01FA35:          PLX                                 ;; 01FA35 : FA          ;
Return01FA36:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
BooBlockTiles:        .db $8C,$C8,$CA                     ;; ?QPWZ?               ;
                                                          ;;                      ;
BooBlockGfxProp:      .db $0E,$02,$02                     ;; ?QPWZ?               ;
                                                          ;;                      ;
CODE_01FA3D:          LDA.W $14C8,X                       ;; 01FA3D : BD C8 14    ;
CODE_01FA40:          CMP.B #$08                          ;; 01FA40 : C9 08       ;
CODE_01FA42:          BNE CODE_01FA47                     ;; 01FA42 : D0 03       ;
CODE_01FA44:          JSR.W MarioSprInteractRt            ;; 01FA44 : 20 E4 A7    ;
CODE_01FA47:          JSL.L CODE_038398                   ;; 01FA47 : 22 98 83 03 ;
Return01FA4B:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
DATA_01FA4C:          .db $40,$00                         ;; 01FA4C               ;
                                                          ;;                      ;
IggyBallTiles:        .db $4A,$4C,$4A,$4C                 ;; ?QPWZ?               ;
                                                          ;;                      ;
DATA_01FA52:          .db $35,$35,$F5,$F5                 ;; 01FA52               ;
                                                          ;;                      ;
DATA_01FA56:          .db $10,$F0                         ;; 01FA56               ;
                                                          ;;                      ;
Iggy'sBall:           JSR.W SubSprGfx2Entry1              ;; ?QPWZ? : 20 0D 9F    ;
CODE_01FA5B:          LDY.W RAM_SpriteDir,X               ;; 01FA5B : BC 7C 15    ;
CODE_01FA5E:          LDA.W DATA_01FA4C,Y                 ;; 01FA5E : B9 4C FA    ;
CODE_01FA61:          STA $00                             ;; 01FA61 : 85 00       ;
CODE_01FA63:          LDY.W RAM_SprOAMIndex,X             ;; 01FA63 : BC EA 15    ; Y = Index into sprite OAM 
CODE_01FA66:          LDA RAM_FrameCounterB               ;; 01FA66 : A5 14       ;
CODE_01FA68:          LSR                                 ;; 01FA68 : 4A          ;
CODE_01FA69:          LSR                                 ;; 01FA69 : 4A          ;
CODE_01FA6A:          AND.B #$03                          ;; 01FA6A : 29 03       ;
CODE_01FA6C:          PHX                                 ;; 01FA6C : DA          ;
CODE_01FA6D:          TAX                                 ;; 01FA6D : AA          ;
CODE_01FA6E:          LDA.W IggyBallTiles,X               ;; 01FA6E : BD 4E FA    ;
CODE_01FA71:          STA.W OAM_Tile,Y                    ;; 01FA71 : 99 02 03    ;
CODE_01FA74:          LDA.W DATA_01FA52,X                 ;; 01FA74 : BD 52 FA    ;
CODE_01FA77:          EOR $00                             ;; 01FA77 : 45 00       ;
CODE_01FA79:          STA.W OAM_Prop,Y                    ;; 01FA79 : 99 03 03    ;
CODE_01FA7C:          PLX                                 ;; 01FA7C : FA          ;
CODE_01FA7D:          LDA RAM_SpritesLocked               ;; 01FA7D : A5 9D       ; \ Branch if sprites locked 
CODE_01FA7F:          BNE Return01FAB3                    ;; 01FA7F : D0 32       ; / 
CODE_01FA81:          LDY.W RAM_SpriteDir,X               ;; 01FA81 : BC 7C 15    ;
CODE_01FA84:          LDA.W DATA_01FA56,Y                 ;; 01FA84 : B9 56 FA    ;
CODE_01FA87:          STA RAM_SpriteSpeedX,X              ;; 01FA87 : 95 B6       ;
CODE_01FA89:          JSR.W SubSprXPosNoGrvty             ;; 01FA89 : 20 CC AB    ;
CODE_01FA8C:          JSR.W SubSprYPosNoGrvty             ;; 01FA8C : 20 D8 AB    ;
CODE_01FA8F:          LDA RAM_SpriteSpeedY,X              ;; 01FA8F : B5 AA       ;
CODE_01FA91:          CMP.B #$40                          ;; 01FA91 : C9 40       ;
CODE_01FA93:          BPL CODE_01FA9A                     ;; 01FA93 : 10 05       ;
CODE_01FA95:          CLC                                 ;; 01FA95 : 18          ;
CODE_01FA96:          ADC.B #$04                          ;; 01FA96 : 69 04       ;
CODE_01FA98:          STA RAM_SpriteSpeedY,X              ;; 01FA98 : 95 AA       ;
CODE_01FA9A:          JSR.W CODE_01FF98                   ;; 01FA9A : 20 98 FF    ;
CODE_01FA9D:          BCC CODE_01FAA3                     ;; 01FA9D : 90 04       ;
CODE_01FA9F:          LDA.B #$F0                          ;; 01FA9F : A9 F0       ;
CODE_01FAA1:          STA RAM_SpriteSpeedY,X              ;; 01FAA1 : 95 AA       ;
CODE_01FAA3:          JSR.W MarioSprInteractRt            ;; 01FAA3 : 20 E4 A7    ;
CODE_01FAA6:          LDA RAM_SpriteYLo,X                 ;; 01FAA6 : B5 D8       ;
CODE_01FAA8:          CMP.B #$44                          ;; 01FAA8 : C9 44       ;
CODE_01FAAA:          BCC Return01FAB3                    ;; 01FAAA : 90 07       ;
CODE_01FAAC:          CMP.B #$50                          ;; 01FAAC : C9 50       ;
CODE_01FAAE:          BCS Return01FAB3                    ;; 01FAAE : B0 03       ;
CODE_01FAB0:          JSR.W CODE_019ACB                   ;; 01FAB0 : 20 CB 9A    ;
Return01FAB3:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
DATA_01FAB4:          .db $FF,$01,$00,$80,$60,$A0,$40,$D0 ;; 01FAB4               ;
                      .db $D8,$C0,$C8,$0C,$F4             ;; ?QPWZ?               ;
                                                          ;;                      ;
KoopaKid:             LDA RAM_SpriteState,X               ;; ?QPWZ? : B5 C2       ;
CODE_01FAC3:          JSL.L ExecutePtr                    ;; 01FAC3 : 22 DF 86 00 ; 00 - Morton 
                                                          ;;                      ;
KoopaKidPtrs:         .dw WallKoopaKids                   ;; ?QPWZ? : AB CD       ; 02 - Ludwig 
                      .dw WallKoopaKids                   ;; ?QPWZ? : AB CD       ; 03 - Iggy   
                      .dw WallKoopaKids                   ;; ?QPWZ? : AB CD       ; 04 - Larry  
                      .dw PlatformKoopaKids               ;; ?QPWZ? : F5 FA       ; 05 - Lemmy  
                      .dw PlatformKoopaKids               ;; ?QPWZ? : F5 FA       ; 06 - Wendy  
                      .dw PipeKoopaKids                   ;; ?QPWZ? : 2A CD       ;
                      .dw PipeKoopaKids                   ;; ?QPWZ? : 2A CD       ;
                                                          ;;                      ;
DATA_01FAD5:          .db $00,$FC,$F8,$F8,$F8,$F8,$F8,$F8 ;; 01FAD5               ;
DATA_01FADD:          .db $F8,$F8,$F8,$F4,$F0,$F0,$EC,$EC ;; 01FADD               ;
DATA_01FAE5:          .db $00,$01,$02,$00,$01,$02,$00,$01 ;; 01FAE5               ;
                      .db $02,$00,$01,$02,$00,$01,$02,$01 ;; ?QPWZ?               ;
                                                          ;;                      ;
PlatformKoopaKids:    LDA RAM_SpritesLocked               ;; ?QPWZ? : A5 9D       ;
CODE_01FAF7:          ORA.W RAM_DisableInter,X            ;; 01FAF7 : 1D 4C 15    ;
CODE_01FAFA:          BNE CODE_01FB1A                     ;; 01FAFA : D0 1E       ;
CODE_01FAFC:          JSR.W SubHorizPos                   ;; 01FAFC : 20 30 AD    ;
CODE_01FAFF:          STY $00                             ;; 01FAFF : 84 00       ;
CODE_01FB01:          LDA $36                             ;; 01FB01 : A5 36       ;
CODE_01FB03:          ASL                                 ;; 01FB03 : 0A          ;
CODE_01FB04:          ROL                                 ;; 01FB04 : 2A          ;
CODE_01FB05:          AND.B #$01                          ;; 01FB05 : 29 01       ;
CODE_01FB07:          CMP $00                             ;; 01FB07 : C5 00       ;
CODE_01FB09:          BNE CODE_01FB1A                     ;; 01FB09 : D0 0F       ;
CODE_01FB0B:          INC.W $1534,X                       ;; 01FB0B : FE 34 15    ;
CODE_01FB0E:          LDA.W $1534,X                       ;; 01FB0E : BD 34 15    ;
CODE_01FB11:          AND.B #$7F                          ;; 01FB11 : 29 7F       ;
CODE_01FB13:          BNE CODE_01FB1A                     ;; 01FB13 : D0 05       ;
CODE_01FB15:          LDA.B #$7F                          ;; 01FB15 : A9 7F       ; \ Set time to go in shell 
CODE_01FB17:          STA.W $1564,X                       ;; 01FB17 : 9D 64 15    ; / 
CODE_01FB1A:          STZ.W RAM_OffscreenHorz,X           ;; 01FB1A : 9E A0 15    ;
CODE_01FB1D:          LDA.W $163E,X                       ;; 01FB1D : BD 3E 16    ;
CODE_01FB20:          BEQ CODE_01FB36                     ;; 01FB20 : F0 14       ;
CODE_01FB22:          DEC A                               ;; 01FB22 : 3A          ;
CODE_01FB23:          BNE Return01FB35                    ;; 01FB23 : D0 10       ;
CODE_01FB25:          INC.W $13C6                         ;; 01FB25 : EE C6 13    ;
CODE_01FB28:          LDA.B #$FF                          ;; 01FB28 : A9 FF       ;
CODE_01FB2A:          STA.W $1493                         ;; 01FB2A : 8D 93 14    ;
CODE_01FB2D:          LDA.B #$0B                          ;; 01FB2D : A9 0B       ;
CODE_01FB2F:          STA.W $1DFB                         ;; 01FB2F : 8D FB 1D    ; / Change music 
CODE_01FB32:          STZ.W $14C8,X                       ;; 01FB32 : 9E C8 14    ;
Return01FB35:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01FB36:          JSL.L LoadTweakerBytes              ;; 01FB36 : 22 A0 F7 07 ;
CODE_01FB3A:          LDA RAM_SpritesLocked               ;; 01FB3A : A5 9D       ;
CODE_01FB3C:          BEQ CODE_01FB41                     ;; 01FB3C : F0 03       ;
CODE_01FB3E:          JMP.W CODE_01FC08                   ;; 01FB3E : 4C 08 FC    ;
                                                          ;;                      ;
CODE_01FB41:          LDA.W $160E,X                       ;; 01FB41 : BD 0E 16    ;
CODE_01FB44:          BEQ CODE_01FB7B                     ;; 01FB44 : F0 35       ;
CODE_01FB46:          JSR.W SubSprXPosNoGrvty             ;; 01FB46 : 20 CC AB    ;
CODE_01FB49:          JSR.W SubSprYPosNoGrvty             ;; 01FB49 : 20 D8 AB    ;
CODE_01FB4C:          LDA RAM_SpriteSpeedY,X              ;; 01FB4C : B5 AA       ;
CODE_01FB4E:          CMP.B #$40                          ;; 01FB4E : C9 40       ;
CODE_01FB50:          BPL CODE_01FB56                     ;; 01FB50 : 10 04       ;
CODE_01FB52:          INC RAM_SpriteSpeedY,X              ;; 01FB52 : F6 AA       ;
CODE_01FB54:          INC RAM_SpriteSpeedY,X              ;; 01FB54 : F6 AA       ;
CODE_01FB56:          LDA RAM_SpriteYLo,X                 ;; 01FB56 : B5 D8       ;
CODE_01FB58:          CMP.B #$58                          ;; 01FB58 : C9 58       ;
CODE_01FB5A:          BCC CODE_01FB6E                     ;; 01FB5A : 90 12       ;
CODE_01FB5C:          CMP.B #$80                          ;; 01FB5C : C9 80       ;
CODE_01FB5E:          BCS CODE_01FB6E                     ;; 01FB5E : B0 0E       ;
CODE_01FB60:          LDA.B #$20                          ;; 01FB60 : A9 20       ; \ Play sound effect 
CODE_01FB62:          STA.W $1DFC                         ;; 01FB62 : 8D FC 1D    ; / 
CODE_01FB65:          LDA.B #$50                          ;; 01FB65 : A9 50       ;
CODE_01FB67:          STA.W $163E,X                       ;; 01FB67 : 9D 3E 16    ;
CODE_01FB6A:          JSL.L KillMostSprites               ;; 01FB6A : 22 C8 A6 03 ; Kill all sprites 
CODE_01FB6E:          LDA RAM_SpriteXLo,X                 ;; 01FB6E : B5 E4       ;
CODE_01FB70:          STA.W $14B8                         ;; 01FB70 : 8D B8 14    ;
CODE_01FB73:          LDA RAM_SpriteYLo,X                 ;; 01FB73 : B5 D8       ;
CODE_01FB75:          STA.W $14BA                         ;; 01FB75 : 8D BA 14    ;
CODE_01FB78:          JMP.W CODE_01FC0E                   ;; 01FB78 : 4C 0E FC    ;
                                                          ;;                      ;
CODE_01FB7B:          JSR.W SubSprXPosNoGrvty             ;; 01FB7B : 20 CC AB    ;
CODE_01FB7E:          LDA RAM_FrameCounter                ;; 01FB7E : A5 13       ;
CODE_01FB80:          AND.B #$1F                          ;; 01FB80 : 29 1F       ;
CODE_01FB82:          ORA.W $1564,X                       ;; 01FB82 : 1D 64 15    ;
CODE_01FB85:          BNE CODE_01FB99                     ;; 01FB85 : D0 12       ;
CODE_01FB87:          LDA.W RAM_SpriteDir,X               ;; 01FB87 : BD 7C 15    ;
CODE_01FB8A:          PHA                                 ;; 01FB8A : 48          ;
CODE_01FB8B:          JSR.W FaceMario                     ;; 01FB8B : 20 7C 85    ;
CODE_01FB8E:          PLA                                 ;; 01FB8E : 68          ;
CODE_01FB8F:          CMP.W RAM_SpriteDir,X               ;; 01FB8F : DD 7C 15    ;
CODE_01FB92:          BEQ CODE_01FB99                     ;; 01FB92 : F0 05       ;
CODE_01FB94:          LDA.B #$10                          ;; 01FB94 : A9 10       ;
CODE_01FB96:          STA.W $15AC,X                       ;; 01FB96 : 9D AC 15    ;
CODE_01FB99:          STZ RAM_SpriteSpeedY,X              ;; 01FB99 : 74 AA       ; Sprite Y Speed = 0 
CODE_01FB9B:          STZ RAM_SpriteSpeedX,X              ;; 01FB9B : 74 B6       ; Sprite X Speed = 0 
CODE_01FB9D:          LDA $36                             ;; 01FB9D : A5 36       ;
CODE_01FB9F:          BPL CODE_01FBA4                     ;; 01FB9F : 10 03       ;
CODE_01FBA1:          CLC                                 ;; 01FBA1 : 18          ;
CODE_01FBA2:          ADC.B #$08                          ;; 01FBA2 : 69 08       ;
CODE_01FBA4:          LSR                                 ;; 01FBA4 : 4A          ;
CODE_01FBA5:          LSR                                 ;; 01FBA5 : 4A          ;
CODE_01FBA6:          LSR                                 ;; 01FBA6 : 4A          ;
CODE_01FBA7:          LSR                                 ;; 01FBA7 : 4A          ;
CODE_01FBA8:          TAY                                 ;; 01FBA8 : A8          ;
CODE_01FBA9:          STY $00                             ;; 01FBA9 : 84 00       ;
CODE_01FBAB:          EOR.B #$FF                          ;; 01FBAB : 49 FF       ;
CODE_01FBAD:          INC A                               ;; 01FBAD : 1A          ;
CODE_01FBAE:          AND.B #$0F                          ;; 01FBAE : 29 0F       ;
CODE_01FBB0:          STA $01                             ;; 01FBB0 : 85 01       ;
CODE_01FBB2:          LDA.W RAM_DisableInter,X            ;; 01FBB2 : BD 4C 15    ;
CODE_01FBB5:          BNE CODE_01FBD9                     ;; 01FBB5 : D0 22       ;
CODE_01FBB7:          LDA $37                             ;; 01FBB7 : A5 37       ;
CODE_01FBB9:          BNE CODE_01FBC9                     ;; 01FBB9 : D0 0E       ;
CODE_01FBBB:          LDA RAM_SpriteXLo,X                 ;; 01FBBB : B5 E4       ;
CODE_01FBBD:          CMP.B #$78                          ;; 01FBBD : C9 78       ;
CODE_01FBBF:          BCC CODE_01FBC5                     ;; 01FBBF : 90 04       ;
CODE_01FBC1:          LDA.B #$FF                          ;; 01FBC1 : A9 FF       ;
CODE_01FBC3:          BRA CODE_01FBEE                     ;; 01FBC3 : 80 29       ;
                                                          ;;                      ;
CODE_01FBC5:          LDA.B #$01                          ;; 01FBC5 : A9 01       ;
CODE_01FBC7:          BRA CODE_01FBEE                     ;; 01FBC7 : 80 25       ;
                                                          ;;                      ;
CODE_01FBC9:          LDY $01                             ;; 01FBC9 : A4 01       ;
CODE_01FBCB:          LDA RAM_SpriteXLo,X                 ;; 01FBCB : B5 E4       ;
CODE_01FBCD:          CMP.B #$78                          ;; 01FBCD : C9 78       ;
CODE_01FBCF:          BCS CODE_01FBD5                     ;; 01FBCF : B0 04       ;
CODE_01FBD1:          LDA.B #$01                          ;; 01FBD1 : A9 01       ;
CODE_01FBD3:          BRA CODE_01FBEE                     ;; 01FBD3 : 80 19       ;
                                                          ;;                      ;
CODE_01FBD5:          LDA.B #$FF                          ;; 01FBD5 : A9 FF       ;
CODE_01FBD7:          BRA CODE_01FBEE                     ;; 01FBD7 : 80 15       ;
                                                          ;;                      ;
CODE_01FBD9:          LDA $37                             ;; 01FBD9 : A5 37       ;
CODE_01FBDB:          BNE CODE_01FBE7                     ;; 01FBDB : D0 0A       ;
CODE_01FBDD:          LDY $00                             ;; 01FBDD : A4 00       ;
CODE_01FBDF:          LDA.W DATA_01FADD,Y                 ;; 01FBDF : B9 DD FA    ;
CODE_01FBE2:          EOR.B #$FF                          ;; 01FBE2 : 49 FF       ;
CODE_01FBE4:          INC A                               ;; 01FBE4 : 1A          ;
CODE_01FBE5:          BRA CODE_01FBEC                     ;; 01FBE5 : 80 05       ;
                                                          ;;                      ;
CODE_01FBE7:          LDY $01                             ;; 01FBE7 : A4 01       ;
CODE_01FBE9:          LDA.W DATA_01FADD,Y                 ;; 01FBE9 : B9 DD FA    ;
CODE_01FBEC:          ASL                                 ;; 01FBEC : 0A          ;
CODE_01FBED:          ASL                                 ;; 01FBED : 0A          ;
CODE_01FBEE:          STA RAM_SpriteSpeedX,X              ;; 01FBEE : 95 B6       ;
CODE_01FBF0:          INC.W $1570,X                       ;; 01FBF0 : FE 70 15    ;
CODE_01FBF3:          LDA RAM_SpriteSpeedX,X              ;; 01FBF3 : B5 B6       ;
CODE_01FBF5:          BEQ CODE_01FBFA                     ;; 01FBF5 : F0 03       ;
CODE_01FBF7:          INC.W $1570,X                       ;; 01FBF7 : FE 70 15    ;
CODE_01FBFA:          LDA.W $1570,X                       ;; 01FBFA : BD 70 15    ;
CODE_01FBFD:          LSR                                 ;; 01FBFD : 4A          ;
CODE_01FBFE:          LSR                                 ;; 01FBFE : 4A          ;
CODE_01FBFF:          AND.B #$0F                          ;; 01FBFF : 29 0F       ;
CODE_01FC01:          TAY                                 ;; 01FC01 : A8          ;
CODE_01FC02:          LDA.W DATA_01FAE5,Y                 ;; 01FC02 : B9 E5 FA    ;
CODE_01FC05:          STA.W $1602,X                       ;; 01FC05 : 9D 02 16    ;
CODE_01FC08:          JSR.W CODE_01FD50                   ;; 01FC08 : 20 50 FD    ;
CODE_01FC0B:          JSR.W CODE_01FC62                   ;; 01FC0B : 20 62 FC    ;
CODE_01FC0E:          LDA.W RAM_DisableInter,X            ;; 01FC0E : BD 4C 15    ;
CODE_01FC11:          BNE CODE_01FC4E                     ;; 01FC11 : D0 3B       ;
CODE_01FC13:          LDA.W RAM_SpriteDir,X               ;; 01FC13 : BD 7C 15    ;
CODE_01FC16:          PHA                                 ;; 01FC16 : 48          ;
CODE_01FC17:          LDY.W $15AC,X                       ;; 01FC17 : BC AC 15    ;
CODE_01FC1A:          BEQ CODE_01FC2A                     ;; 01FC1A : F0 0E       ;
CODE_01FC1C:          CPY.B #$08                          ;; 01FC1C : C0 08       ;
CODE_01FC1E:          BCC CODE_01FC25                     ;; 01FC1E : 90 05       ;
CODE_01FC20:          EOR.B #$01                          ;; 01FC20 : 49 01       ;
CODE_01FC22:          STA.W RAM_SpriteDir,X               ;; 01FC22 : 9D 7C 15    ;
CODE_01FC25:          LDA.B #$06                          ;; 01FC25 : A9 06       ;
CODE_01FC27:          STA.W $1602,X                       ;; 01FC27 : 9D 02 16    ;
CODE_01FC2A:          LDA.W $1564,X                       ;; 01FC2A : BD 64 15    ;
CODE_01FC2D:          BEQ CODE_01FC46                     ;; 01FC2D : F0 17       ;
CODE_01FC2F:          PHA                                 ;; 01FC2F : 48          ;
CODE_01FC30:          LSR                                 ;; 01FC30 : 4A          ;
CODE_01FC31:          LSR                                 ;; 01FC31 : 4A          ;
CODE_01FC32:          LSR                                 ;; 01FC32 : 4A          ;
CODE_01FC33:          TAY                                 ;; 01FC33 : A8          ;
CODE_01FC34:          LDA.W DATA_01FD95,Y                 ;; 01FC34 : B9 95 FD    ;
CODE_01FC37:          STA.W $1602,X                       ;; 01FC37 : 9D 02 16    ;
CODE_01FC3A:          PLA                                 ;; 01FC3A : 68          ;
CODE_01FC3B:          CMP.B #$28                          ;; 01FC3B : C9 28       ;
CODE_01FC3D:          BNE CODE_01FC46                     ;; 01FC3D : D0 07       ;
CODE_01FC3F:          LDA RAM_SpritesLocked               ;; 01FC3F : A5 9D       ; \ Branch if sprites locked 
CODE_01FC41:          BNE CODE_01FC46                     ;; 01FC41 : D0 03       ; / 
CODE_01FC43:          JSR.W ThrowBall                     ;; 01FC43 : 20 A7 FD    ; Throw ball 
CODE_01FC46:          JSR.W CODE_01FEBC                   ;; 01FC46 : 20 BC FE    ;
CODE_01FC49:          PLA                                 ;; 01FC49 : 68          ;
CODE_01FC4A:          STA.W RAM_SpriteDir,X               ;; 01FC4A : 9D 7C 15    ;
Return01FC4D:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01FC4E:          CMP.B #$10                          ;; 01FC4E : C9 10       ;
CODE_01FC50:          BCC CODE_01FC5A                     ;; 01FC50 : 90 08       ;
CODE_01FC52:          LDA.B #$03                          ;; 01FC52 : A9 03       ;
CODE_01FC54:          STA.W $1602,X                       ;; 01FC54 : 9D 02 16    ;
CODE_01FC57:          JMP.W CODE_01FEBC                   ;; 01FC57 : 4C BC FE    ;
                                                          ;;                      ;
CODE_01FC5A:          CMP.B #$08                          ;; 01FC5A : C9 08       ;
CODE_01FC5C:          BCC CODE_01FC52                     ;; 01FC5C : 90 F4       ;
CODE_01FC5E:          JSR.W CODE_01FF5B                   ;; 01FC5E : 20 5B FF    ;
Return01FC61:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01FC62:          LDA RAM_MarioAnimation              ;; 01FC62 : A5 71       ;
CODE_01FC64:          CMP.B #$01                          ;; 01FC64 : C9 01       ;
CODE_01FC66:          BCS Return01FC61                    ;; 01FC66 : B0 F9       ;
CODE_01FC68:          LDA.W $160E,X                       ;; 01FC68 : BD 0E 16    ;
CODE_01FC6B:          BNE Return01FC61                    ;; 01FC6B : D0 F4       ;
CODE_01FC6D:          LDA RAM_SpriteXLo,X                 ;; 01FC6D : B5 E4       ;
CODE_01FC6F:          CMP.B #$20                          ;; 01FC6F : C9 20       ;
CODE_01FC71:          BCC CODE_01FC77                     ;; 01FC71 : 90 04       ;
CODE_01FC73:          CMP.B #$D8                          ;; 01FC73 : C9 D8       ;
CODE_01FC75:          BCC CODE_01FC84                     ;; 01FC75 : 90 0D       ;
CODE_01FC77:          LDA.W $14B8                         ;; 01FC77 : AD B8 14    ;
CODE_01FC7A:          STA RAM_SpriteXLo,X                 ;; 01FC7A : 95 E4       ;
CODE_01FC7C:          LDA.W $14BA                         ;; 01FC7C : AD BA 14    ;
CODE_01FC7F:          STA RAM_SpriteYLo,X                 ;; 01FC7F : 95 D8       ;
CODE_01FC81:          INC.W $160E,X                       ;; 01FC81 : FE 0E 16    ;
CODE_01FC84:          LDA.W $14B8                         ;; 01FC84 : AD B8 14    ;
CODE_01FC87:          SEC                                 ;; 01FC87 : 38          ;
CODE_01FC88:          SBC.B #$08                          ;; 01FC88 : E9 08       ;
CODE_01FC8A:          STA $00                             ;; 01FC8A : 85 00       ;
CODE_01FC8C:          LDA.W $14BA                         ;; 01FC8C : AD BA 14    ;
CODE_01FC8F:          CLC                                 ;; 01FC8F : 18          ;
CODE_01FC90:          ADC.B #$60                          ;; 01FC90 : 69 60       ;
CODE_01FC92:          STA $01                             ;; 01FC92 : 85 01       ;
CODE_01FC94:          LDA.B #$0F                          ;; 01FC94 : A9 0F       ;
CODE_01FC96:          STA $02                             ;; 01FC96 : 85 02       ;
CODE_01FC98:          LDA.B #$0C                          ;; 01FC98 : A9 0C       ;
CODE_01FC9A:          STA $03                             ;; 01FC9A : 85 03       ;
CODE_01FC9C:          STZ $08                             ;; 01FC9C : 64 08       ;
CODE_01FC9E:          STZ $09                             ;; 01FC9E : 64 09       ;
CODE_01FCA0:          LDA $7E                             ;; 01FCA0 : A5 7E       ;
CODE_01FCA2:          CLC                                 ;; 01FCA2 : 18          ;
CODE_01FCA3:          ADC.B #$02                          ;; 01FCA3 : 69 02       ;
CODE_01FCA5:          STA $04                             ;; 01FCA5 : 85 04       ;
CODE_01FCA7:          LDA $80                             ;; 01FCA7 : A5 80       ;
CODE_01FCA9:          CLC                                 ;; 01FCA9 : 18          ;
CODE_01FCAA:          ADC.B #$10                          ;; 01FCAA : 69 10       ;
CODE_01FCAC:          STA $05                             ;; 01FCAC : 85 05       ;
CODE_01FCAE:          LDA.B #$0C                          ;; 01FCAE : A9 0C       ;
CODE_01FCB0:          STA $06                             ;; 01FCB0 : 85 06       ;
CODE_01FCB2:          LDA.B #$0E                          ;; 01FCB2 : A9 0E       ;
CODE_01FCB4:          STA $07                             ;; 01FCB4 : 85 07       ;
CODE_01FCB6:          STZ $0A                             ;; 01FCB6 : 64 0A       ;
CODE_01FCB8:          STZ $0B                             ;; 01FCB8 : 64 0B       ;
CODE_01FCBA:          JSL.L CheckForContact               ;; 01FCBA : 22 2B B7 03 ;
CODE_01FCBE:          BCC CODE_01FD0A                     ;; 01FCBE : 90 4A       ;
CODE_01FCC0:          LDA.W $1558,X                       ;; 01FCC0 : BD 58 15    ;
CODE_01FCC3:          BNE Return01FD09                    ;; 01FCC3 : D0 44       ;
CODE_01FCC5:          LDA.B #$08                          ;; 01FCC5 : A9 08       ;
CODE_01FCC7:          STA.W $1558,X                       ;; 01FCC7 : 9D 58 15    ;
CODE_01FCCA:          LDA RAM_IsFlying                    ;; 01FCCA : A5 72       ;
CODE_01FCCC:          BEQ CODE_01FD05                     ;; 01FCCC : F0 37       ;
CODE_01FCCE:          LDA.B #$28                          ;; 01FCCE : A9 28       ; \ Play sound effect 
CODE_01FCD0:          STA.W $1DFC                         ;; 01FCD0 : 8D FC 1D    ; / 
CODE_01FCD3:          JSL.L BoostMarioSpeed               ;; 01FCD3 : 22 33 AA 01 ;
CODE_01FCD7:          LDA RAM_SpriteXLo,X                 ;; 01FCD7 : B5 E4       ;
CODE_01FCD9:          PHA                                 ;; 01FCD9 : 48          ;
CODE_01FCDA:          LDA RAM_SpriteYLo,X                 ;; 01FCDA : B5 D8       ;
CODE_01FCDC:          PHA                                 ;; 01FCDC : 48          ;
CODE_01FCDD:          LDA.W $14B8                         ;; 01FCDD : AD B8 14    ;
CODE_01FCE0:          SEC                                 ;; 01FCE0 : 38          ;
CODE_01FCE1:          SBC.B #$08                          ;; 01FCE1 : E9 08       ;
CODE_01FCE3:          STA RAM_SpriteXLo,X                 ;; 01FCE3 : 95 E4       ;
CODE_01FCE5:          LDA.W $14BA                         ;; 01FCE5 : AD BA 14    ;
CODE_01FCE8:          SEC                                 ;; 01FCE8 : 38          ;
CODE_01FCE9:          SBC.B #$10                          ;; 01FCE9 : E9 10       ;
CODE_01FCEB:          STA RAM_SpriteYLo,X                 ;; 01FCEB : 95 D8       ;
CODE_01FCED:          STZ.W RAM_OffscreenHorz,X           ;; 01FCED : 9E A0 15    ;
CODE_01FCF0:          JSL.L DisplayContactGfx             ;; 01FCF0 : 22 99 AB 01 ;
CODE_01FCF4:          PLA                                 ;; 01FCF4 : 68          ;
CODE_01FCF5:          STA RAM_SpriteYLo,X                 ;; 01FCF5 : 95 D8       ;
CODE_01FCF7:          PLA                                 ;; 01FCF7 : 68          ;
CODE_01FCF8:          STA RAM_SpriteXLo,X                 ;; 01FCF8 : 95 E4       ;
CODE_01FCFA:          LDA.W RAM_DisableInter,X            ;; 01FCFA : BD 4C 15    ;
CODE_01FCFD:          BNE Return01FD09                    ;; 01FCFD : D0 0A       ;
CODE_01FCFF:          LDA.B #$18                          ;; 01FCFF : A9 18       ;
CODE_01FD01:          STA.W RAM_DisableInter,X            ;; 01FD01 : 9D 4C 15    ;
Return01FD04:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01FD05:          JSL.L HurtMario                     ;; 01FD05 : 22 B7 F5 00 ;
Return01FD09:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01FD0A:          LDY.B #$0A                          ;; 01FD0A : A0 0A       ;
CODE_01FD0C:          STY.W $1695                         ;; 01FD0C : 8C 95 16    ;
CODE_01FD0F:          LDA.W RAM_ExSpriteNum,Y             ;; 01FD0F : B9 0B 17    ;
CODE_01FD12:          CMP.B #$05                          ;; 01FD12 : C9 05       ;
CODE_01FD14:          BNE CODE_01FD4A                     ;; 01FD14 : D0 34       ;
CODE_01FD16:          LDA.W RAM_ExSpriteXLo,Y             ;; 01FD16 : B9 1F 17    ;
CODE_01FD19:          SEC                                 ;; 01FD19 : 38          ;
CODE_01FD1A:          SBC RAM_ScreenBndryXLo              ;; 01FD1A : E5 1A       ;
CODE_01FD1C:          STA $04                             ;; 01FD1C : 85 04       ;
CODE_01FD1E:          STZ $0A                             ;; 01FD1E : 64 0A       ;
CODE_01FD20:          LDA.W RAM_ExSpriteYLo,Y             ;; 01FD20 : B9 15 17    ;
CODE_01FD23:          SEC                                 ;; 01FD23 : 38          ;
CODE_01FD24:          SBC RAM_ScreenBndryYLo              ;; 01FD24 : E5 1C       ;
CODE_01FD26:          STA $05                             ;; 01FD26 : 85 05       ;
CODE_01FD28:          STZ $0B                             ;; 01FD28 : 64 0B       ;
CODE_01FD2A:          LDA.B #$08                          ;; 01FD2A : A9 08       ;
CODE_01FD2C:          STA $06                             ;; 01FD2C : 85 06       ;
CODE_01FD2E:          STA $07                             ;; 01FD2E : 85 07       ;
CODE_01FD30:          JSL.L CheckForContact               ;; 01FD30 : 22 2B B7 03 ;
CODE_01FD34:          BCC CODE_01FD4A                     ;; 01FD34 : 90 14       ;
CODE_01FD36:          LDA.B #$01                          ;; 01FD36 : A9 01       ; \ Extended sprite = Smoke puff 
CODE_01FD38:          STA.W RAM_ExSpriteNum,Y             ;; 01FD38 : 99 0B 17    ; / 
CODE_01FD3B:          LDA.B #$0F                          ;; 01FD3B : A9 0F       ;
CODE_01FD3D:          STA.W $176F,Y                       ;; 01FD3D : 99 6F 17    ;
CODE_01FD40:          LDA.B #$01                          ;; 01FD40 : A9 01       ; \ Play sound effect 
CODE_01FD42:          STA.W $1DF9                         ;; 01FD42 : 8D F9 1D    ; / 
CODE_01FD45:          LDA.B #$10                          ;; 01FD45 : A9 10       ;
CODE_01FD47:          STA.W RAM_DisableInter,X            ;; 01FD47 : 9D 4C 15    ;
CODE_01FD4A:          DEY                                 ;; 01FD4A : 88          ;
CODE_01FD4B:          CPY.B #$07                          ;; 01FD4B : C0 07       ;
CODE_01FD4D:          BNE CODE_01FD0C                     ;; 01FD4D : D0 BD       ;
Return01FD4F:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01FD50:          LDA RAM_SpriteXLo,X                 ;; 01FD50 : B5 E4       ;
CODE_01FD52:          CLC                                 ;; 01FD52 : 18          ;
CODE_01FD53:          ADC.B #$08                          ;; 01FD53 : 69 08       ;
CODE_01FD55:          STA.W $14B4                         ;; 01FD55 : 8D B4 14    ;
CODE_01FD58:          LDA.W RAM_SpriteXHi,X               ;; 01FD58 : BD E0 14    ;
CODE_01FD5B:          ADC.B #$00                          ;; 01FD5B : 69 00       ;
CODE_01FD5D:          STA.W $14B5                         ;; 01FD5D : 8D B5 14    ;
CODE_01FD60:          LDA RAM_SpriteYLo,X                 ;; 01FD60 : B5 D8       ;
CODE_01FD62:          CLC                                 ;; 01FD62 : 18          ;
CODE_01FD63:          ADC.B #$2F                          ;; 01FD63 : 69 2F       ;
CODE_01FD65:          STA.W $14B6                         ;; 01FD65 : 8D B6 14    ;
CODE_01FD68:          LDA.W RAM_SpriteYHi,X               ;; 01FD68 : BD D4 14    ;
CODE_01FD6B:          ADC.B #$00                          ;; 01FD6B : 69 00       ;
CODE_01FD6D:          STA.W $14B7                         ;; 01FD6D : 8D B7 14    ;
CODE_01FD70:          REP #$20                            ;; 01FD70 : C2 20       ; Accum (16 bit) 
CODE_01FD72:          LDA $36                             ;; 01FD72 : A5 36       ;
CODE_01FD74:          EOR.W #$01FF                        ;; 01FD74 : 49 FF 01    ;
CODE_01FD77:          INC A                               ;; 01FD77 : 1A          ;
CODE_01FD78:          AND.W #$01FF                        ;; 01FD78 : 29 FF 01    ;
CODE_01FD7B:          STA $36                             ;; 01FD7B : 85 36       ;
CODE_01FD7D:          SEP #$20                            ;; 01FD7D : E2 20       ; Accum (8 bit) 
CODE_01FD7F:          PHX                                 ;; 01FD7F : DA          ;
CODE_01FD80:          JSL.L CODE_01CC9D                   ;; 01FD80 : 22 9D CC 01 ;
CODE_01FD84:          PLX                                 ;; 01FD84 : FA          ;
CODE_01FD85:          REP #$20                            ;; 01FD85 : C2 20       ; Accum (16 bit) 
CODE_01FD87:          LDA $36                             ;; 01FD87 : A5 36       ;
CODE_01FD89:          EOR.W #$01FF                        ;; 01FD89 : 49 FF 01    ;
CODE_01FD8C:          INC A                               ;; 01FD8C : 1A          ;
CODE_01FD8D:          AND.W #$01FF                        ;; 01FD8D : 29 FF 01    ;
CODE_01FD90:          STA $36                             ;; 01FD90 : 85 36       ;
CODE_01FD92:          SEP #$20                            ;; 01FD92 : E2 20       ; Accum (8 bit) 
Return01FD94:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
DATA_01FD95:          .db $04,$0B,$0B,$0B,$0B,$0A,$0A,$09 ;; 01FD95               ;
                      .db $09,$08,$08,$07,$04,$05,$05,$05 ;; ?QPWZ?               ;
BallPositionDispX:    .db $08,$F8                         ;; ?QPWZ?               ;
                                                          ;;                      ;
ThrowBall:            LDY.B #$05                          ;; ?QPWZ? : A0 05       ; \ Find an open sprite index 
CODE_01FDA9:          LDA.W $14C8,Y                       ;; 01FDA9 : B9 C8 14    ;  | 
CODE_01FDAC:          BEQ GenerateBall                    ;; 01FDAC : F0 04       ;  | 
CODE_01FDAE:          DEY                                 ;; 01FDAE : 88          ;  | 
CODE_01FDAF:          BPL CODE_01FDA9                     ;; 01FDAF : 10 F8       ; / 
Return01FDB1:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
GenerateBall:         LDA.B #$20                          ;; ?QPWZ? : A9 20       ; \ Play sound effect 
CODE_01FDB4:          STA.W $1DF9                         ;; 01FDB4 : 8D F9 1D    ; / 
CODE_01FDB7:          LDA.B #$08                          ;; 01FDB7 : A9 08       ; \ Sprite status = normal 
CODE_01FDB9:          STA.W $14C8,Y                       ;; 01FDB9 : 99 C8 14    ; / 
CODE_01FDBC:          LDA.B #$A7                          ;; 01FDBC : A9 A7       ; \ Sprite to throw = Ball 
CODE_01FDBE:          STA.W RAM_SpriteNum,Y               ;; 01FDBE : 99 9E 00    ; / 
CODE_01FDC1:          PHX                                 ;; 01FDC1 : DA          ; \ Before: X must have index of sprite being generated 
CODE_01FDC2:          TYX                                 ;; 01FDC2 : BB          ;  | Routine clears *all* old sprite values... 
CODE_01FDC3:          JSL.L InitSpriteTables              ;; 01FDC3 : 22 D2 F7 07 ;  | ...and loads in new values for the 6 main sprite tables 
CODE_01FDC7:          PLX                                 ;; 01FDC7 : FA          ; / 
CODE_01FDC8:          PHX                                 ;; 01FDC8 : DA          ; Push Iggy's sprite index 
CODE_01FDC9:          LDA.W RAM_SpriteDir,X               ;; 01FDC9 : BD 7C 15    ; \ Ball's direction = Iggy'direction 
CODE_01FDCC:          STA.W RAM_SpriteDir,Y               ;; 01FDCC : 99 7C 15    ; / 
CODE_01FDCF:          TAX                                 ;; 01FDCF : AA          ; X = Ball's direction 
CODE_01FDD0:          LDA.W $14B8                         ;; 01FDD0 : AD B8 14    ; \ Set Ball X position 
CODE_01FDD3:          SEC                                 ;; 01FDD3 : 38          ;  | 
CODE_01FDD4:          SBC.B #$08                          ;; 01FDD4 : E9 08       ;  | 
CODE_01FDD6:          ADC.W BallPositionDispX,X           ;; 01FDD6 : 7D A5 FD    ;  | 
CODE_01FDD9:          STA.W RAM_SpriteXLo,Y               ;; 01FDD9 : 99 E4 00    ;  | 
CODE_01FDDC:          LDA.B #$00                          ;; 01FDDC : A9 00       ;  | 
CODE_01FDDE:          STA.W RAM_SpriteXHi,Y               ;; 01FDDE : 99 E0 14    ; / 
CODE_01FDE1:          LDA.W $14BA                         ;; 01FDE1 : AD BA 14    ; \ Set Ball Y position 
CODE_01FDE4:          SEC                                 ;; 01FDE4 : 38          ;  | 
CODE_01FDE5:          SBC.B #$18                          ;; 01FDE5 : E9 18       ;  | 
CODE_01FDE7:          STA.W RAM_SpriteYLo,Y               ;; 01FDE7 : 99 D8 00    ;  | 
CODE_01FDEA:          LDA.B #$00                          ;; 01FDEA : A9 00       ;  | 
CODE_01FDEC:          SBC.B #$00                          ;; 01FDEC : E9 00       ;  | 
CODE_01FDEE:          STA.W RAM_SpriteYHi,Y               ;; 01FDEE : 99 D4 14    ; / 
CODE_01FDF1:          PLX                                 ;; 01FDF1 : FA          ; X = Iggy's sprite index 
Return01FDF2:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
DATA_01FDF3:          .db $F7,$FF,$00,$F8,$F7,$FF,$00,$F8 ;; 01FDF3               ;
                      .db $F8,$00,$00,$F8,$FB,$03,$00,$F8 ;; ?QPWZ?               ;
                      .db $F8,$00,$00,$F8,$FA,$02,$00,$F8 ;; ?QPWZ?               ;
                      .db $00,$00,$F8,$00,$00,$F8,$00,$F8 ;; ?QPWZ?               ;
                      .db $00,$00,$00,$00,$FB,$F8,$00,$F8 ;; ?QPWZ?               ;
                      .db $F4,$F8,$00,$F8,$00,$F8,$00,$F8 ;; ?QPWZ?               ;
                      .db $09,$09,$00,$10,$09,$09,$00,$10 ;; ?QPWZ?               ;
                      .db $08,$08,$00,$10,$05,$05,$00,$10 ;; ?QPWZ?               ;
                      .db $08,$08,$00,$10,$06,$06,$00,$10 ;; ?QPWZ?               ;
                      .db $00,$08,$08,$08,$00,$10,$00,$10 ;; ?QPWZ?               ;
                      .db $00,$08,$00,$08,$05,$10,$00,$10 ;; ?QPWZ?               ;
                      .db $0C,$10,$00,$10,$00,$10,$00,$10 ;; ?QPWZ?               ;
DATA_01FE53:          .db $FA,$F2,$00,$09,$F9,$F1,$00,$08 ;; 01FE53               ;
                      .db $F8,$F0,$00,$08,$FE,$F6,$00,$08 ;; ?QPWZ?               ;
                      .db $FC,$F4,$00,$08,$FF,$F7,$00,$08 ;; ?QPWZ?               ;
                      .db $00,$F0,$F8,$F0,$00,$00,$00,$00 ;; ?QPWZ?               ;
                      .db $00,$00,$00,$00,$FC,$00,$00,$00 ;; ?QPWZ?               ;
                      .db $F9,$00,$00,$00,$00,$08,$00,$08 ;; ?QPWZ?               ;
DATA_01FE83:          .db $00,$0C,$02,$0A,$00,$0C,$22,$0A ;; 01FE83               ;
                      .db $00,$0C,$20,$0A,$00,$0C,$20,$0A ;; ?QPWZ?               ;
                      .db $00,$0C,$20,$0A,$00,$0C,$20,$0A ;; ?QPWZ?               ;
                      .db $24,$1C,$04,$1C,$0E,$0D,$0E,$0D ;; ?QPWZ?               ;
                      .db $0E,$1D,$0E,$1D,$4A,$0D,$0E,$0D ;; ?QPWZ?               ;
                      .db $4A,$0D,$0E,$0D,$20,$0A,$20,$0A ;; ?QPWZ?               ;
DATA_01FEB3:          .db $06,$02,$08                     ;; 01FEB3               ;
                                                          ;;                      ;
DATA_01FEB6:          .db $02                             ;; 01FEB6               ;
                                                          ;;                      ;
DATA_01FEB7:          .db $00,$02,$00,$37,$3B             ;; 01FEB7               ;
                                                          ;;                      ;
CODE_01FEBC:          LDY RAM_SpriteState,X               ;; 01FEBC : B4 C2       ;
CODE_01FEBE:          LDA.W DATA_01FEB7,Y                 ;; 01FEBE : B9 B7 FE    ;
CODE_01FEC1:          STA $0D                             ;; 01FEC1 : 85 0D       ;
CODE_01FEC3:          STY $05                             ;; 01FEC3 : 84 05       ;
CODE_01FEC5:          LDY.W RAM_SprOAMIndex,X             ;; 01FEC5 : BC EA 15    ; Y = Index into sprite OAM 
CODE_01FEC8:          LDA.W RAM_SpriteDir,X               ;; 01FEC8 : BD 7C 15    ;
CODE_01FECB:          LSR                                 ;; 01FECB : 4A          ;
CODE_01FECC:          ROR                                 ;; 01FECC : 6A          ;
CODE_01FECD:          LSR                                 ;; 01FECD : 4A          ;
CODE_01FECE:          AND.B #$40                          ;; 01FECE : 29 40       ;
CODE_01FED0:          EOR.B #$40                          ;; 01FED0 : 49 40       ;
CODE_01FED2:          STA $02                             ;; 01FED2 : 85 02       ;
CODE_01FED4:          LDA.W $1602,X                       ;; 01FED4 : BD 02 16    ;
CODE_01FED7:          ASL                                 ;; 01FED7 : 0A          ;
CODE_01FED8:          ASL                                 ;; 01FED8 : 0A          ;
CODE_01FED9:          STA $03                             ;; 01FED9 : 85 03       ;
CODE_01FEDB:          PHX                                 ;; 01FEDB : DA          ;
CODE_01FEDC:          LDX.B #$03                          ;; 01FEDC : A2 03       ;
CODE_01FEDE:          PHX                                 ;; 01FEDE : DA          ;
CODE_01FEDF:          TXA                                 ;; 01FEDF : 8A          ;
CODE_01FEE0:          CLC                                 ;; 01FEE0 : 18          ;
CODE_01FEE1:          ADC $03                             ;; 01FEE1 : 65 03       ;
CODE_01FEE3:          TAX                                 ;; 01FEE3 : AA          ;
CODE_01FEE4:          PHX                                 ;; 01FEE4 : DA          ;
CODE_01FEE5:          LDA $02                             ;; 01FEE5 : A5 02       ;
CODE_01FEE7:          BEQ CODE_01FEEE                     ;; 01FEE7 : F0 05       ;
CODE_01FEE9:          TXA                                 ;; 01FEE9 : 8A          ;
CODE_01FEEA:          CLC                                 ;; 01FEEA : 18          ;
CODE_01FEEB:          ADC.B #$30                          ;; 01FEEB : 69 30       ;
CODE_01FEED:          TAX                                 ;; 01FEED : AA          ;
CODE_01FEEE:          LDA.W $14B8                         ;; 01FEEE : AD B8 14    ;
CODE_01FEF1:          SEC                                 ;; 01FEF1 : 38          ;
CODE_01FEF2:          SBC.B #$08                          ;; 01FEF2 : E9 08       ;
CODE_01FEF4:          CLC                                 ;; 01FEF4 : 18          ;
CODE_01FEF5:          ADC.W DATA_01FDF3,X                 ;; 01FEF5 : 7D F3 FD    ;
CODE_01FEF8:          STA.W OAM_DispX,Y                   ;; 01FEF8 : 99 00 03    ;
CODE_01FEFB:          PLX                                 ;; 01FEFB : FA          ;
CODE_01FEFC:          LDA.W $14BA                         ;; 01FEFC : AD BA 14    ;
CODE_01FEFF:          CLC                                 ;; 01FEFF : 18          ;
CODE_01FF00:          ADC.B #$60                          ;; 01FF00 : 69 60       ;
CODE_01FF02:          CLC                                 ;; 01FF02 : 18          ;
CODE_01FF03:          ADC.W DATA_01FE53,X                 ;; 01FF03 : 7D 53 FE    ;
CODE_01FF06:          STA.W OAM_DispY,Y                   ;; 01FF06 : 99 01 03    ;
CODE_01FF09:          LDA.W DATA_01FE83,X                 ;; 01FF09 : BD 83 FE    ;
CODE_01FF0C:          STA.W OAM_Tile,Y                    ;; 01FF0C : 99 02 03    ;
CODE_01FF0F:          PHX                                 ;; 01FF0F : DA          ;
CODE_01FF10:          LDX $05                             ;; 01FF10 : A6 05       ;
CODE_01FF12:          CPX.B #$03                          ;; 01FF12 : E0 03       ;
CODE_01FF14:          BNE CODE_01FF22                     ;; 01FF14 : D0 0C       ;
CODE_01FF16:          CMP.B #$05                          ;; 01FF16 : C9 05       ;
CODE_01FF18:          BCS CODE_01FF22                     ;; 01FF18 : B0 08       ;
CODE_01FF1A:          LSR                                 ;; 01FF1A : 4A          ;
CODE_01FF1B:          TAX                                 ;; 01FF1B : AA          ;
CODE_01FF1C:          LDA.W DATA_01FEB3,X                 ;; 01FF1C : BD B3 FE    ;
CODE_01FF1F:          STA.W OAM_Tile,Y                    ;; 01FF1F : 99 02 03    ;
CODE_01FF22:          LDA.W OAM_Tile,Y                    ;; 01FF22 : B9 02 03    ;
CODE_01FF25:          CMP.B #$4A                          ;; 01FF25 : C9 4A       ;
CODE_01FF27:          LDA $0D                             ;; 01FF27 : A5 0D       ;
CODE_01FF29:          BCC CODE_01FF2D                     ;; 01FF29 : 90 02       ;
CODE_01FF2B:          LDA.B #$35                          ;; 01FF2B : A9 35       ;  Iggy ball palette 
CODE_01FF2D:          ORA $02                             ;; 01FF2D : 05 02       ;
CODE_01FF2F:          STA.W OAM_Prop,Y                    ;; 01FF2F : 99 03 03    ;
CODE_01FF32:          PLA                                 ;; 01FF32 : 68          ;
CODE_01FF33:          AND.B #$03                          ;; 01FF33 : 29 03       ;
CODE_01FF35:          TAX                                 ;; 01FF35 : AA          ;
CODE_01FF36:          PHY                                 ;; 01FF36 : 5A          ;
CODE_01FF37:          TYA                                 ;; 01FF37 : 98          ;
CODE_01FF38:          LSR                                 ;; 01FF38 : 4A          ;
CODE_01FF39:          LSR                                 ;; 01FF39 : 4A          ;
CODE_01FF3A:          TAY                                 ;; 01FF3A : A8          ;
CODE_01FF3B:          LDA.W DATA_01FEB6,X                 ;; 01FF3B : BD B6 FE    ;
CODE_01FF3E:          STA.W OAM_TileSize,Y                ;; 01FF3E : 99 60 04    ;
CODE_01FF41:          PLY                                 ;; 01FF41 : 7A          ;
CODE_01FF42:          INY                                 ;; 01FF42 : C8          ;
CODE_01FF43:          INY                                 ;; 01FF43 : C8          ;
CODE_01FF44:          INY                                 ;; 01FF44 : C8          ;
CODE_01FF45:          INY                                 ;; 01FF45 : C8          ;
CODE_01FF46:          PLX                                 ;; 01FF46 : FA          ;
CODE_01FF47:          DEX                                 ;; 01FF47 : CA          ;
CODE_01FF48:          BPL CODE_01FEDE                     ;; 01FF48 : 10 94       ;
CODE_01FF4A:          PLX                                 ;; 01FF4A : FA          ;
CODE_01FF4B:          LDY.B #$FF                          ;; 01FF4B : A0 FF       ;
CODE_01FF4D:          LDA.B #$03                          ;; 01FF4D : A9 03       ;
CODE_01FF4F:          JSR.W FinishOAMWriteRt              ;; 01FF4F : 20 BB B7    ;
Return01FF52:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
DATA_01FF53:          .db $2C,$2E,$2C,$2E                 ;; 01FF53               ;
                                                          ;;                      ;
DATA_01FF57:          .db $00,$00,$40,$00                 ;; 01FF57               ;
                                                          ;;                      ;
CODE_01FF5B:          PHX                                 ;; 01FF5B : DA          ;
CODE_01FF5C:          LDY RAM_SpriteState,X               ;; 01FF5C : B4 C2       ;
CODE_01FF5E:          LDA.W DATA_01FEB7,Y                 ;; 01FF5E : B9 B7 FE    ;
CODE_01FF61:          STA $0D                             ;; 01FF61 : 85 0D       ;
CODE_01FF63:          LDY.B #$70                          ;; 01FF63 : A0 70       ;
CODE_01FF65:          LDA.W $14B8                         ;; 01FF65 : AD B8 14    ;
CODE_01FF68:          SEC                                 ;; 01FF68 : 38          ;
CODE_01FF69:          SBC.B #$08                          ;; 01FF69 : E9 08       ;
CODE_01FF6B:          STA.W OAM_DispX,Y                   ;; 01FF6B : 99 00 03    ;
CODE_01FF6E:          LDA.W $14BA                         ;; 01FF6E : AD BA 14    ;
CODE_01FF71:          CLC                                 ;; 01FF71 : 18          ;
CODE_01FF72:          ADC.B #$60                          ;; 01FF72 : 69 60       ;
CODE_01FF74:          STA.W OAM_DispY,Y                   ;; 01FF74 : 99 01 03    ;
CODE_01FF77:          LDA RAM_FrameCounterB               ;; 01FF77 : A5 14       ;
CODE_01FF79:          LSR                                 ;; 01FF79 : 4A          ;
CODE_01FF7A:          AND.B #$03                          ;; 01FF7A : 29 03       ;
CODE_01FF7C:          TAX                                 ;; 01FF7C : AA          ;
CODE_01FF7D:          LDA.W DATA_01FF53,X                 ;; 01FF7D : BD 53 FF    ;
CODE_01FF80:          STA.W OAM_Tile,Y                    ;; 01FF80 : 99 02 03    ;
CODE_01FF83:          LDA.B #$30                          ;; 01FF83 : A9 30       ;
CODE_01FF85:          ORA.W DATA_01FF57,X                 ;; 01FF85 : 1D 57 FF    ;
CODE_01FF88:          ORA $0D                             ;; 01FF88 : 05 0D       ;
CODE_01FF8A:          STA.W OAM_Prop,Y                    ;; 01FF8A : 99 03 03    ;
CODE_01FF8D:          TYA                                 ;; 01FF8D : 98          ;
CODE_01FF8E:          LSR                                 ;; 01FF8E : 4A          ;
CODE_01FF8F:          LSR                                 ;; 01FF8F : 4A          ;
CODE_01FF90:          TAY                                 ;; 01FF90 : A8          ;
CODE_01FF91:          LDA.B #$02                          ;; 01FF91 : A9 02       ;
CODE_01FF93:          STA.W OAM_TileSize,Y                ;; 01FF93 : 99 60 04    ;
CODE_01FF96:          PLX                                 ;; 01FF96 : FA          ;
Return01FF97:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
CODE_01FF98:          LDA RAM_SpriteXLo,X                 ;; 01FF98 : B5 E4       ; \ $14B4,$14B5 = Sprite X position + #$08 
CODE_01FF9A:          CLC                                 ;; 01FF9A : 18          ;  | 
CODE_01FF9B:          ADC.B #$08                          ;; 01FF9B : 69 08       ;  | 
CODE_01FF9D:          STA.W $14B4                         ;; 01FF9D : 8D B4 14    ;  | 
CODE_01FFA0:          LDA.W RAM_SpriteXHi,X               ;; 01FFA0 : BD E0 14    ;  | 
CODE_01FFA3:          ADC.B #$00                          ;; 01FFA3 : 69 00       ;  | 
CODE_01FFA5:          STA.W $14B5                         ;; 01FFA5 : 8D B5 14    ; / 
CODE_01FFA8:          LDA RAM_SpriteYLo,X                 ;; 01FFA8 : B5 D8       ; \ $14B6,$14B7 = Sprite Y position + #$0F 
CODE_01FFAA:          CLC                                 ;; 01FFAA : 18          ;  | 
CODE_01FFAB:          ADC.B #$0F                          ;; 01FFAB : 69 0F       ;  | 
CODE_01FFAD:          STA.W $14B6                         ;; 01FFAD : 8D B6 14    ;  | 
CODE_01FFB0:          LDA.W RAM_SpriteYHi,X               ;; 01FFB0 : BD D4 14    ;  | 
CODE_01FFB3:          ADC.B #$00                          ;; 01FFB3 : 69 00       ;  | 
CODE_01FFB5:          STA.W $14B7                         ;; 01FFB5 : 8D B7 14    ; / 
CODE_01FFB8:          PHX                                 ;; 01FFB8 : DA          ;
CODE_01FFB9:          JSL.L CODE_01CC9D                   ;; 01FFB9 : 22 9D CC 01 ;
CODE_01FFBD:          PLX                                 ;; 01FFBD : FA          ;
Return01FFBE:         RTS                                 ;; ?QPWZ? : 60          ; Return 
                                                          ;;                      ;
                                                          ;;                      ;
DATA_01FFBF:          .db $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF ;; 01FFBF               ;
                      .db $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF ;; ?QPWZ?               ;
                      .db $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF ;; ?QPWZ?               ;
                      .db $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF ;; ?QPWZ?               ;
                      .db $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF ;; ?QPWZ?               ;
                      .db $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF ;; ?QPWZ?               ;
                      .db $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF ;; ?QPWZ?               ;
                      .db $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF ;; ?QPWZ?               ;
                      .db $FF                             ;; ?QPWZ?               ;
